{"version":3,"sources":["webpack:///docs/js/vendor.bcd91250bccff8dfc4e5.js","webpack:///./~/bodymovin/build/player/bodymovin_light.js","webpack:///./~/vue-loader/lib/component-normalizer.js"],"names":["webpackJsonp","10","module","exports","__webpack_require__","__WEBPACK_AMD_DEFINE_RESULT__","root","factory","undefined","call","window","ProjectInterface","roundValues","flag","bm_rnd","Math","round","val","roundTo2Decimals","styleUnselectableDiv","element","style","userSelect","MozUserSelect","webkitUserSelect","oUserSelect","BMEnterFrameEvent","n","c","t","d","this","type","currentTime","totalTime","direction","BMCompleteEvent","BMCompleteLoopEvent","currentLoop","totalLoops","BMSegmentStartEvent","f","firstFrame","totalFrames","BMDestroyEvent","target","_addEventListener","eventName","callback","_cbs","push","removeEventListener","bind","_removeEventListener","i","len","length","splice","_triggerEvent","args","randomString","chars","result","random","HSVtoRGB","h","s","v","r","g","b","p","q","arguments","floor","RGBtoHSV","max","min","addSaturationToRGB","color","offset","hsv","addBrightnessToRGB","addHueToRGB","reversePath","paths","newI","newO","newV","newPaths","init","o","cnt","Matrix","createElement","parent","child","params","instance","Object","create","prototype","getType","toString","constructor","_parent","extendPrototype","source","destination","attr","hasOwnProperty","ShapePath","_length","_maxLength","Array","apply","ShapeModifier","TrimModifier","RoundCornersModifier","RepeaterModifier","ShapeCollection","shapes","TextAnimatorProperty","textData","renderType","elem","mdf","_firstFrame","_hasMaskedPath","_frameId","_dynamicProperties","_textData","_renderType","_elem","_animatorsData","a","_pathData","_moreOptions","alignment","renderedLetters","lettersChangedFlag","LetterProps","sw","sc","fc","m","TextProperty","data","dynamicProperties","pv","kf","keysIndex","currentData","ascent","boxWidth","fStyle","fWeight","j","justifyOffset","l","lh","lineWidths","ls","of","tr","fillColorAnim","strokeColorAnim","strokeWidthAnim","yOffset","__complete","searchProperty","getValue","BaseRenderer","SVGRenderer","animationItem","config","layers","renderedFrame","globalData","frameNum","renderConfig","preserveAspectRatio","progressiveLoad","hideOnTransparent","viewBoxOnly","className","elements","pendingElements","destroyed","MaskElement","storedData","masksProperties","viewData","maskElement","path","jLen","rect","expansor","feMorph","x","defs","properties","count","currentMasks","layerId","maskType","maskRef","mode","inv","k","document","createElementNS","svgNS","setAttribute","comp","w","PropertyFactory","getProp","filterID","appendChild","expan","lastPath","lastOperator","filterId","lastRadius","mask","locationHref","solidPath","createLayerSolidPath","op","prop","ShapePropertyFactory","getShapeProp","invRect","drawPath","maskedElement","BaseElement","SVGBaseElement","parentContainer","placeholder","matteElement","transformedElement","isTransparent","_sizeChanged","IShapeElement","shapesData","stylesList","itemsData","prevViewData","shapeModifiers","processedElements","ITextElement","SVGTextElement","textSpans","SVGTintFilter","filter","filterManager","feColorMatrix","matrixFilter","effectElements","feMerge","feMergeNode","SVGFillFilter","SVGStrokeEffect","initialized","SVGTritoneFilter","feComponentTransfer","feFuncR","feFuncG","feFuncB","SVGProLevelsFilter","createFeFunc","feFuncA","feFuncRComposed","feFuncGComposed","feFuncBComposed","SVGDropShadowEffect","feGaussianBlur","feOffset","feFlood","feComposite","originalNodeAdded","SVGMatte3Effect","filterElem","layerElement","baseElement","SVGEffects","ef","filId","fil","filtersFactory","createFilter","filters","ty","effects","ICompElement","supports3d","completeLayers","tm","frameRate","xt","buildAllItems","IImageElement","assetData","getAssetData","refId","ISolidElement","setLocationHref","href","play","animation","animationManager","pause","togglePause","setSpeed","value","setDirection","stop","moveFrame","searchAnimations","standalone","animationData","renderer","registerAnimation","resize","start","goToAndStop","isFrame","setSubframeRendering","subframeEnabled","loadAnimation","JSON","parse","destroy","setQuality","defaultCurveSegments","isNaN","inBrowser","navigator","installPlugin","plugin","expressionsPlugin","getFactory","name","checkReady","readyState","clearInterval","readyStateCheckInterval","isSafari","test","userAgent","bm_pow","pow","bm_sqrt","sqrt","bm_floor","abs","bm_min","BMMath","propertyNames","getOwnPropertyNames","absArr","degToRads","PI","roundCorner","rgbToHex","hex","colorMap","reset","props","rotate","angle","mCos","cos","mSin","sin","_t","rotateX","rotateY","rotateZ","shear","sx","sy","skew","ax","ay","tan","skewFromAxis","scale","sz","setTransform","e","translate","tx","tz","transform","a2","b2","c2","d2","e2","f2","g2","h2","i2","j2","k2","l2","m2","n2","o2","p2","_identityCalculated","a1","b1","c1","d1","e1","f1","g1","h1","i1","j1","k1","l1","m1","n1","o1","p1","isIdentity","_identity","clone","matr","cloneFromProps","applyToPoint","y","z","applyToX","applyToY","applyToZ","inversePoint","pt","determinant","inversePoints","pts","retPts","applyToPointArray","dimensions","arr","point_pool","newPoint","applyToPointStringified","toArray","toCSS","cssParts","join","to2dCSS","pool","math","seedrandom","seed","options","key","entropy","shortseed","mixkey","flatten","tostring","autoseed","arc4","ARC4","prng","chunks","startdenom","significance","width","overflow","int32","quick","double","S","pass","is_math_call","state","copy","rngname","global","keylen","me","slice","obj","depth","typ","smear","stringseed","charCodeAt","nodecrypto","randomBytes","out","Uint8Array","crypto","msCrypto","getRandomValues","browser","plugins","Date","screen","String","fromCharCode","BezierFactory","getBezierEasing","nm","str","replace","beziers","bezEasing","BezierEasing","A","aA1","aA2","B","C","calcBezier","aT","getSlope","binarySubdivide","aX","aA","aB","mX1","mX2","currentX","currentT","SUBDIVISION_PRECISION","SUBDIVISION_MAX_ITERATIONS","newtonRaphsonIterate","aGuessT","NEWTON_ITERATIONS","currentSlope","points","_p","_mSampleValues","float32ArraySupported","Float32Array","kSplineTableSize","_precomputed","get","ob","kSampleStepSize","mY1","mY2","_precompute","_getTForX","_calcSampleValues","mSampleValues","intervalStart","currentSample","lastSample","dist","guessForT","initialSlope","lastTime","vendors","requestAnimationFrame","cancelAnimationFrame","currTime","getTime","timeToCall","id","setTimeout","clearTimeout","bez","pointOnLine2D","x1","y1","x2","y2","x3","y3","det1","pointOnLine3D","z1","z2","z3","diffDist","dist1","dist2","dist3","getSegmentsLength","shapeData","closed","pathV","pathO","pathI","lengths","totalLength","getBezierLength","addedLength","BezierData","segmentLength","PointData","partial","point","partialLength","getDistancePerc","perc","bezierData","segments","initPos","lengthPos","lPerc","dir","SegmentPoints","pt1","pt2","pt3","pt4","getPointInSegment","percent","t1","u1","getNewSegment","startPerc","endPerc","t0","u0","Segment","ptCoord","ptDistance","curveSegments","lastPoint","lengthData","buildBezierData","keyData","to","ti","bezierName","dataManager","comps","fontManager","layerData","kLen","completed","tt","td","hasMask","maskProps","convertPathsToAbsoluteValues","findCompLayers","completeShapes","completeText","__used","stringify","ks","it","checkVersion","minimum","animVersionString","animVersion","split","completeData","checkColors","checkText","checkChars","checkShapes","assets","singleShape","updateTextLayer","textLayer","documentData","iterateLayers","minimumVersion","pathData","__converted","iterateShapes","cl","moduleOb","FontManager","setUpNode","font","family","parentNode","fontFamily","node","innerHTML","position","left","top","fontSize","fontVariant","fontStyle","fontWeight","letterSpacing","body","offsetWidth","checkLoadedFonts","fonts","loadedCount","loaded","fOrigin","origin","Typekit","load","typekitLoaded","async","active","monoCase","sansCase","removeChild","now","initTime","maxWaitingTime","createHelper","def","fontData","tHelper","fFamily","textContent","fClass","tCanvasHelper","getContext","addFonts","list","fontArr","fPath","rel","helper","addChars","found","ch","getCharData","char","measureText","fontName","size","getFontByName","fName","Font","interpolateValue","iterationIndex","previousValue","caching","newValue","offsetTime","nextKeyData","keyframes","fnc","ind","_lastBezierData","__fnct","segmentPerc","distanceInLine","lastFrame","_lastAddedLength","_lastPoint","outX","outY","inX","inY","keyValue","sh","initP","endP","getValueAtCurrentTime","frameId","endTime","_caching","initFrame","lastIndex","renderResult","mult","lastPValue","getNoValue","ValueProperty","vel","MultiDimensionalProperty","lastValue","map","KeyframedValueProperty","st","KeyframedMultidimensionalProperty","TransformProperty","getDashProp","DashProperty","getTextSelectorProp","TextSelectorProp","positionGetter","ExpressionValue","px","py","pz","xPositionGetter","yPositionGetter","anchorGetter","orientationGetter","or","rotationGetter","rz","scaleGetter","opacityGetter","skewGetter","sk","skewAxisGetter","sa","applyToMatrix","mat","ry","rx","processKeys","autoOriented","getValueAtTime","v1","v2","atan2","setInverted","inverted","iv","autoOrient","defineProperty","getGradientProp","forceRender","cmdf","omdf","gradientProp","cLength","dataProps","dasharray","dashoffset","updateRange","newCharsFlag","totalChars","textProperty","divisor","_s","finalS","finalE","getMult","easer","ne","xe","tot","setPathData","setLength","doubleArrayLength","concat","setXYAt","pos","setTripleAt","vX","vY","oX","oY","iX","iY","interpolateShape","isCurrentRender","keyPropS","keyPropE","isHold","vertexValue","hasModified","interpolateShapeCurrentTime","_lastIndex","localShapeCollection","getShapeValue","resetShape","ShapeProperty","__shapeObject","shape_pool","shapeCollection_pool","newShapeCollection","addShape","KeyframedShapeProperty","newShape","dataProp","keys","RectShapeProperty","EllShapeProperty","StarShapeProperty","getConstructorFunction","getKeyframedConstructorFunction","convertEllToPath","p0","s0","s1","cPoint","convertPolygonToPath","numPts","rad","roundness","os","perimSegment","currentAng","ox","oy","convertStarToPath","longFlag","longRad","shortRad","ir","longRound","shortRound","is","longPerimSegment","shortPerimSegment","convertToPath","convertRectToPath","v0","ShapeModifiers","registerModifier","modifiers","getModifier","initModifierProperties","addShapeToModifier","shape","sValue","eValue","oValue","calculateShapeEdges","shapeLength","totalModifierLength","segmentOb","shapeSegments","shapeS","shapeE","processShapes","shapePaths","pathsData","totalShapeLength","releaseShapes","edges","newShapesData","addShapes","lastShape","pop","addPaths","addSegment","shapePath","shapeSegment","currentLengthData","segmentCount","segment","rd","processPath","cloned_path","currentV","currentI","currentO","closerV","distance","newPosPerc","index","pMatrix","rMatrix","sMatrix","tMatrix","matrix","applyTransforms","scaleX","scaleY","elemsData","_currentCopies","_elements","_groups","cont","unshift","resetElements","_processed","cloneElements","newElements","changeGroupRender","renderFlag","_render","copies","ceil","group","ix","reloadShapes","offsetModulo","roundOffset","pProps","rProps","sProps","iteration","items","itemsTransform","mProps","release","ImagePreloader","imageLoaded","loadedAssets","totalImages","imagesLoadedCb","getAssetsPath","assetsPath","imagePath","indexOf","u","loadImage","img","addEventListener","src","loadAssets","cb","totalAssets","setPath","setAssetsPath","featureSupport","createAlphaToLuminanceFilter","searchProperties","animatorData","animatorProps","fh","fs","fb","maskManager","getMaskProperty","getMeasures","xPos","yPos","animators","matrixHelper","mHelper","renderedLettersCount","letters","pathInfo","tLength","pi","currentPoint","prevPoint","currentLength","segmentInd","pointInd","tanAngle","animatorSelector","letterValue","yOff","firstLine","offf","xPathPos","yPathPos","elemOpacity","letterSw","letterSc","letterFc","letterO","initPathPos","initSegmentInd","initPointInd","currentLine","lineLength","letterM","letterP","defaultPropsArray","line","extra","an","animatorOffset","anIndexes","add","rot","atan","ps","update","updated","setCurrentData","textDocumentData","textKeys","completeTextData","newLineFlag","charData","anchorGrouping","currentSize","currentPos","lineWidth","maxLineWidth","styles","toLowerCase","trackingOffset","lastSpaceIndex","charAt","substr","currentChar","uncollapsedSpaces","letterData","based","indexes","rn","newInd","currentInd","updateDocumentData","newData","dData","pooling","releaseArray","shapePathsCollection","cloned","shapeCollection","originCollection","checkLayers","num","ip","buildItem","checkPendingElements","createItem","layer","createImage","createComp","createSolid","createShape","createText","createCamera","createBase","Error","includeLayers","newLayers","setProjectInterface","pInterface","projectInterface","initItems","buildElementParenting","parentName","hierarchy","_isParent","setHierarchy","addPendingElement","configAnimation","animData","height","wrapper","compSize","fr","maskId","updateContainerSize","registerComposition","initExpressions","appendElementInPos","setMatte","checkParenting","renderFrame","currentFrame","prepareFrame","newElement","getBaseElement","nextElement","insertBefore","hide","display","show","searchExtraCompositions","floatingContainer","finalMat","finalTransform","mProp","getMaskelement","pathNodes","pathString","checkMasks","isVisible","elemMdf","sr","currentFrameNum","globalToLocal","transforms","ptNew","layerInterface","LayerExpressionInterface","registerMaskInterface","effectsInterface","EffectsExpressionInterface","createEffectsInterface","registerEffectsInterface","compInterface","CompExpressionInterface","shapeInterface","ShapeExpressionInterface","createShapeInterface","textInterface","TextExpressionInterface","setBlendMode","blendModeValue","bm","EffectsManager","hidden","lastNum","matMdf","opMdf","opacity","ao","createElements","addMasks","resetHierarchy","getHierarchy","getLayerSize","sourceRectAtTime","layerElementParent","masker","gg","maskGroup","maskGrouper","alphaRect","ln","cp","clipId","cpGroup","effectsManager","parentTransform","hd","identityMatrix","lcEnum","1","2","3","ljEnum","searchProcessedElement","addProcessedElement","buildExpressionInterface","searchShapes","setGradientData","pathElement","gfill","gradientId","stops","gf","cst","setGradientOpacity","styleOb","opFill","opacityId","ost","msElem","createStyleElement","level","elementData","ld","lvl","lc","lj","ml","pElem","createGroupElement","gr","createTransformElement","createShapeElement","ownTransformers","caches","transformers","lStr","addShapeToModifiers","setElementStyles","renderModifiers","container","render","currentTransform","modifier","processedPos","ownStyles","ownModifiers","parentMatrix","renderShape","renderPath","renderFill","renderGradient","renderStroke","buildShapeString","shapeString","itemData","pathStringTransformed","redraw","lLen","iterations","styleData","styleElem","attr1","attr2","cValues","oValues","ang","textAnimator","buildNewText","createPathShape","shapeStr","applyTextPropertiesToMatrix","lineNumber","buildColor","colorData","emptyProp","textContainer","usesGlyphs","tSpan","tElement","justify","cachedSpansLength","setAttributeNS","time","renderLetters","textBox","getBBox","bbox","renderedLetter","textSpan","colorBlack","colorWhite","initialize","groupPath","elemChildren","children","childNodes","removeAttribute","pathMasker","dasharrayValue","getTotalLength","units","color1","color2","color3","tableR","tableG","tableB","feFunc","getTableValue","inputBlack","inputWhite","gamma","outputBlack","outputWhite","colorValue","table","outputDelta","inputDelta","col","setElementAsMask","timeRemapped","renderParent","setElements","elems","getElements","assetPath","innerElem","removeElement","ev","animItem","registeredAnimations","isPaused","subtractPlayingCount","AnimationItem","setupAnimation","setData","addPlayingCount","playingAnimationsNum","activate","idled","setParams","resume","nowTime","elapsedTime","advanceTime","first","animElements","getElementsByClassName","getElementsByTagName","div","isLoaded","currentRawFrame","frameMult","playSpeed","playDirection","playCount","prerenderFramesFlag","autoplay","loop","animationID","scaleMode","timeCompleted","segmentPos","pendingSegment","_idle","self","context","animType","CanvasRenderer","rendererSettings","HybridRenderer","parseInt","prerender","autoloadSegments","xhr","XMLHttpRequest","lastIndexOf","fileName","open","send","onreadystatechange","status","responseText","response","err","wrapperAttributes","attributes","getNamedItem","tf","loadNextSegment","trigger","shift","segmentPath","loadSegments","_this","imagePreloader","updaFrameModifier","waitForFontsLoaded","checkLoaded","checkFontsLoaded","elementLoaded","gotoFrame","setSubframe","setCurrentRawFrameValue","frameModifier","goToAndPlay","adjustSegment","updateAnimation","setSegment","end","pendingFrame","playSegments","forceFlag","resetSegments","checkSegments","remove","onEnterFrame","onLoopComplete","onComplete","onSegmentStart","onDestroy","getPath","getAssets","triggerEvent","bodymovinjs","__getFactory","version","scripts","myScript","queryString","variable","vars","pair","decodeURIComponent","setInterval","rawScriptExports","compiledTemplate","injectStyles","scopeId","moduleIdentifier","esModule","scriptExports","default","staticRenderFns","_scopeId","hook","$vnode","ssrContext","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","functional","existing","beforeCreate"],"mappings":"AAAAA,cAAc,IAERC,GACA,SAAUC,EAAQC,EAASC,GCHjC,GAAAC,IAAA,SAAAC,EAAAC,OAISC,MAFTH,EAAA,WACA,MAAAE,GAAAD,IACSG,KAAAN,EAAAC,EAAAD,EAAAD,QAAAC,QAAAE,IAMRK,WAAc,SAAAA,GA4Bf,QAAAC,KAA4B,SAoB5B,QAAAC,GAAAC,GAEAC,GADAD,EACAE,KAAAC,MAEA,SAAAC,GACA,MAAAA,IAMA,QAAAC,GAAAD,GACA,MAAAF,MAAAC,MAAA,IAAAC,GAAA,IAiBA,QAAAE,GAAAC,GACAA,EAAAC,MAAAC,WAAA,OACAF,EAAAC,MAAAE,cAAA,OACAH,EAAAC,MAAAG,iBAAA,OACAJ,EAAAC,MAAAI,YAAA,OAIA,QAAAC,GAAAC,EAAAC,EAAAC,EAAAC,GACAC,KAAAC,KAAAL,EACAI,KAAAE,YAAAL,EACAG,KAAAG,UAAAL,EACAE,KAAAI,UAAAL,EAAA,OAGA,QAAAM,GAAAT,EAAAG,GACAC,KAAAC,KAAAL,EACAI,KAAAI,UAAAL,EAAA,OAGA,QAAAO,GAAAV,EAAAC,EAAAC,EAAAC,GACAC,KAAAC,KAAAL,EACAI,KAAAO,YAAAV,EACAG,KAAAQ,WAAAV,EACAE,KAAAI,UAAAL,EAAA,OAGA,QAAAU,GAAAb,EAAAc,EAAAZ,GACAE,KAAAC,KAAAL,EACAI,KAAAW,WAAAD,EACAV,KAAAY,YAAAd,EAGA,QAAAe,GAAAjB,EAAAE,GACAE,KAAAC,KAAAL,EACAI,KAAAc,OAAAhB,EAGA,QAAAiB,GAAAC,EAAAC,GAOA,MALAjB,MAAAkB,KAAAF,KACAhB,KAAAkB,KAAAF,OAEAhB,KAAAkB,KAAAF,GAAAG,KAAAF,GAEA,WACAjB,KAAAoB,oBAAAJ,EAAAC,IACEI,KAAArB,MAGF,QAAAsB,GAAAN,EAAAC,GAEA,GAAAA,GAEK,GAAAjB,KAAAkB,KAAAF,GAAA,CAEL,IADA,GAAAO,GAAA,EAAAC,EAAAxB,KAAAkB,KAAAF,GAAAS,OACAF,EAAAC,GACAxB,KAAAkB,KAAAF,GAAAO,KAAAN,IACAjB,KAAAkB,KAAAF,GAAAU,OAAAH,EAAA,GACAA,GAAA,EACAC,GAAA,GAEAD,GAAA,CAEAvB,MAAAkB,KAAAF,GAAAS,SACAzB,KAAAkB,KAAAF,GAAA,WAZAhB,MAAAkB,KAAAF,GAAA,KAkBA,QAAAW,GAAAX,EAAAY,GACA,GAAA5B,KAAAkB,KAAAF,GAEA,OADAQ,GAAAxB,KAAAkB,KAAAF,GAAAS,OACAF,EAAA,EAAuBA,EAAAC,EAASD,IAChCvB,KAAAkB,KAAAF,GAAAO,GAAAK,GAKA,QAAAC,GAAAJ,EAAAK,OACArD,KAAAqD,IACAA,EAAA,iEAEA,IAAAP,GACAQ,EAAA,EACA,KAAAR,EAAAE,EAAoBF,EAAA,IAAOA,EAAAQ,GAAAD,EAAA9C,KAAAC,MAAAD,KAAAgD,UAAAF,EAAAL,OAAA,IAC3B,OAAAM,GAGA,QAAAE,GAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAAC,EAAAC,EAAAhB,EAAAb,EAAA8B,EAAAC,EAAA3C,CASA,QARA,IAAA4C,UAAAjB,SACAU,EAAAD,EAAAC,EAAAC,EAAAF,EAAAE,EAAAF,OAEAX,EAAAvC,KAAA2D,MAAA,EAAAT,GACAxB,EAAA,EAAAwB,EAAAX,EACAiB,EAAAJ,GAAA,EAAAD,GACAM,EAAAL,GAAA,EAAA1B,EAAAyB,GACArC,EAAAsC,GAAA,KAAA1B,GAAAyB,GACAZ,EAAA,GACA,OAAAc,EAAAD,EAAAE,EAAAxC,EAAAyC,EAAAC,CAAoC,MACpC,QAAAH,EAAAI,EAAAH,EAAAF,EAAAG,EAAAC,CAAoC,MACpC,QAAAH,EAAAG,EAAAF,EAAAF,EAAAG,EAAAzC,CAAoC,MACpC,QAAAuC,EAAAG,EAAAF,EAAAG,EAAAF,EAAAH,CAAoC,MACpC,QAAAC,EAAAvC,EAAAwC,EAAAE,EAAAD,EAAAH,CAAoC,MACpC,QAAAC,EAAAD,EAAAE,EAAAE,EAAAD,EAAAE,EAEA,OAAAJ,EACAC,EACAC,GAGA,QAAAK,GAAAP,EAAAC,EAAAC,GACA,IAAAG,UAAAjB,SACAa,EAAAD,EAAAC,EAAAC,EAAAF,EAAAE,EAAAF,MAEA,IAEAH,GAFAW,EAAA7D,KAAA6D,IAAAR,EAAAC,EAAAC,GAAAO,EAAA9D,KAAA8D,IAAAT,EAAAC,EAAAC,GACAxC,EAAA8C,EAAAC,EAEAX,EAAA,IAAAU,EAAA,EAAA9C,EAAA8C,EACAT,EAAAS,EAAA,GAEA,QAAAA,GACA,IAAAC,GAAAZ,EAAA,CAAwB,MACxB,KAAAG,GAAAH,EAAAI,EAAAC,EAAAxC,GAAAuC,EAAAC,EAAA,KAAiDL,GAAA,EAAAnC,CAAY,MAC7D,KAAAuC,GAAAJ,EAAAK,EAAAF,EAAA,EAAAtC,EAAoCmC,GAAA,EAAAnC,CAAY,MAChD,KAAAwC,GAAAL,EAAAG,EAAAC,EAAA,EAAAvC,EAAoCmC,GAAA,EAAAnC,EAGpC,OACAmC,EACAC,EACAC,GAIA,QAAAW,GAAAC,EAAAC,GACA,GAAAC,GAAAN,EAAA,IAAAI,EAAA,OAAAA,EAAA,OAAAA,EAAA,GAQA,OAPAE,GAAA,IAAAD,EACAC,EAAA,KACAA,EAAA,KAEAA,EAAA,QACAA,EAAA,MAEAjB,EAAAiB,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAGA,QAAAC,GAAAH,EAAAC,GACA,GAAAC,GAAAN,EAAA,IAAAI,EAAA,OAAAA,EAAA,OAAAA,EAAA,GAQA,OAPAE,GAAA,IAAAD,EACAC,EAAA,KACAA,EAAA,KAEAA,EAAA,OACAA,EAAA,MAEAjB,EAAAiB,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAGA,QAAAE,GAAAJ,EAAAC,GACA,GAAAC,GAAAN,EAAA,IAAAI,EAAA,OAAAA,EAAA,OAAAA,EAAA,GAQA,OAPAE,GAAA,IAAAD,EAAA,IACAC,EAAA,KACAA,EAAA,MAEAA,EAAA,OACAA,EAAA,OAEAjB,EAAAiB,EAAA,GAAAA,EAAA,GAAAA,EAAA,IA0EA,QAAAG,GAAAC,GACA,GACA/B,GAAAC,EADA+B,KAAAC,KAAAC,KACAC,KACAC,EAAA,CACAL,GAAAzD,IACA0D,EAAA,GAAAD,EAAAM,EAAA,GACAJ,EAAA,GAAAF,EAAA/B,EAAA,GACAkC,EAAA,GAAAH,EAAAlB,EAAA,GACAuB,EAAA,GAEAnC,EAAA8B,EAAA/B,EAAAE,MACA,IAAAoC,GAAArC,EAAA,CAEA,KAAAD,EAAAoC,EAAkBpC,EAAAC,EAASD,GAAA,EAC3BgC,EAAApC,KAAAmC,EAAAM,EAAAC,IACAL,EAAArC,KAAAmC,EAAA/B,EAAAsC,IACAJ,EAAAtC,KAAAmC,EAAAlB,EAAAyB,IACAA,GAAA,CAOA,OAJAH,GAAAnC,EAAAgC,EACAG,EAAAE,EAAAJ,EACAE,EAAAtB,EAAAqB,EAEAC,EA4WA,QAAAI,MAkaA,QAAAC,GAAAC,EAAAC,EAAAC,GACA,IAAAD,EAIK,CACL,GAAAE,GAAAC,OAAAC,OAAAL,EAAAM,UAAAJ,GACAK,IAIA,OAHAJ,IAAA,sBAAAI,EAAAC,SAAA9F,KAAAyF,EAAAR,OACAQ,EAAAR,OAEAQ,EATAF,EAAAK,UAAAF,OAAAC,OAAAL,EAAAM,WACAL,EAAAK,UAAAG,YAAAR,EACAA,EAAAK,UAAAI,QAAAV,EAAAM,UAWA,QAAAK,GAAAC,EAAAC,GACA,OAAAC,KAAAF,GAAAN,UACAM,EAAAN,UAAAS,eAAAD,KAAAD,EAAAP,UAAAQ,GAAAF,EAAAN,UAAAQ,IA+wDA,QAAAE,KACAhF,KAAAH,GAAA,EACAG,KAAAiF,QAAA,EACAjF,KAAAkF,WAAA,EACAlF,KAAAoC,EAAA+C,MAAAC,MAAA,MAA4B3D,OAAAzB,KAAAkF,aAC5BlF,KAAA4D,EAAAuB,MAAAC,MAAA,MAA4B3D,OAAAzB,KAAAkF,aAC5BlF,KAAAuB,EAAA4D,MAAAC,MAAA,MAA4B3D,OAAAzB,KAAAkF,aA2nB5B,QAAAG,MA0BA,QAAAC,MA0TA,QAAAC,MA+GA,QAAAC,MA8MA,QAAAC,KACAzF,KAAAiF,QAAA,EACAjF,KAAAkF,WAAA,EACAlF,KAAA0F,OAAAP,MAAAC,MAAA,MAAiC3D,OAAAzB,KAAAkF,aAwHjC,QAAAS,GAAAC,EAAAC,EAAAC,GACA9F,KAAA+F,KAAA,EACA/F,KAAAgG,aAAA,EACAhG,KAAAiG,gBAAA,EACAjG,KAAAkG,UAAA,EACAlG,KAAAmG,sBACAnG,KAAAoG,UAAAR,EACA5F,KAAAqG,YAAAR,EACA7F,KAAAsG,MAAAR,EACA9F,KAAAuG,eAAApB,MAAAC,MAAA,MAAyC3D,OAAAzB,KAAAoG,UAAAI,EAAA/E,SACzCzB,KAAAyG,aACAzG,KAAA0G,cACAC,cAEA3G,KAAA4G,mBACA5G,KAAA6G,oBAAA,EAijBA,QAAAC,GAAAlD,EAAAmD,EAAAC,EAAAC,EAAAC,EAAA1E,GACAxC,KAAA4D,IACA5D,KAAA+G,KACA/G,KAAAgH,KACAhH,KAAAiH,KACAjH,KAAAkH,IACAlH,KAAAwC,IACAxC,KAAA+F,KACAnC,GAAA,EACAmD,OACAC,OACAC,OACAC,GAAA,EACA1E,GAAA,GA6CA,QAAA2E,GAAArB,EAAAsB,EAAAC,GACArH,KAAAkG,UAAA,MACAlG,KAAAsH,GAAA,GACAtH,KAAAoC,EAAA,GACApC,KAAAuH,IAAA,EACAvH,KAAAW,YAAA,EACAX,KAAA+F,KAAA,EACA/F,KAAAoH,OACApH,KAAA8F,OACA9F,KAAAwH,WAAA,EACAxH,KAAAyH,aACAC,OAAA,EACAC,UAAA,KACAjH,EAAA,GACAkH,OAAA,GACAC,QAAA,GACAZ,GAAA,GACAa,EAAA,GACAC,cAAA,GACAC,KACAC,GAAA,EACAC,cACAC,GAAA,GACAC,GAAA,GACAjG,EAAA,GACA6E,GAAA,GACAD,GAAA,EACAjH,EAAA,EACAuI,GAAA,EACAC,eAAA,EACAC,iBAAA,EACAC,iBAAA,EACAC,QAAA,EACAC,YAAA,GAGA1I,KAAA2I,iBACAtB,EAAAlG,KAAAnB,MAEAA,KAAA4I,UAAA,GAidA,QAAAC,MAuGA,QAAAC,GAAAC,EAAAC,GACAhJ,KAAA+I,gBACA/I,KAAAiJ,OAAA,KACAjJ,KAAAkJ,eAAA,EACAlJ,KAAAmJ,YACAC,UAAA,GAEApJ,KAAAqJ,cACAC,oBAAAN,KAAAM,qBAAA,gBACAC,gBAAAP,KAAAO,kBAAA,EACAC,mBAAAR,IAAA,IAAAA,EAAAQ,kBACAC,YAAAT,KAAAS,cAAA,EACAC,UAAAV,KAAAU,WAAA,IAEA1J,KAAAmJ,WAAAE,aAAArJ,KAAAqJ,aACArJ,KAAA2J,YACA3J,KAAA4J,mBACA5J,KAAA6J,WAAA,EA4NA,QAAAC,GAAA1C,EAAA/H,EAAA8J,GACAnJ,KAAAqH,qBACArH,KAAAoH,OACApH,KAAAX,UACAW,KAAAmJ,aACAnJ,KAAA+J,cACA/J,KAAAgK,gBAAAhK,KAAAoH,KAAA4C,gBACAhK,KAAAiK,SAAA9E,MAAAC,MAAA,MAAsC3D,OAAAzB,KAAAgK,gBAAAvI,SACtCzB,KAAAkK,YAAA,KACAlK,KAAAW,YAAA,CACA,IACAY,GAGA4I,EAGArC,EAAAsC,EAEAC,EAAAC,EAAAC,EAAAC,EATAC,EAAAzK,KAAAmJ,WAAAsB,KACAjJ,EAAAxB,KAAAgK,gBAAAvI,OAGAiJ,EAAA1K,KAAAgK,gBACAW,EAAA,EACAC,KAEAC,EAAAhJ,EAAA,IAEAiJ,EAAA,WAAAC,EAAA,WACA,KAAAxJ,EAAA,EAAeA,EAAAC,EAASD,IAkBxB,IAhBA,MAAAmJ,EAAAnJ,GAAAyJ,MAAA,MAAAN,EAAAnJ,GAAAyJ,MAAAN,EAAAnJ,GAAA0J,KAAA,MAAAP,EAAAnJ,GAAAqC,EAAAsH,KACAJ,EAAA,OACAC,EAAA,QAGA,KAAAL,EAAAnJ,GAAAyJ,MAAA,KAAAN,EAAAnJ,GAAAyJ,MAAA,GAAAL,EAOAN,EAAA,MANAA,EAAAc,SAAAC,gBAAAC,GAAA,QACAhB,EAAAiB,aAAA,kBACAjB,EAAAiB,aAAA,QAAAtL,KAAAX,QAAAkM,KAAAnE,KAAAoE,GACAnB,EAAAiB,aAAA,SAAAtL,KAAAX,QAAAkM,KAAAnE,KAAAlF,GACA0I,EAAAzJ,KAAAkJ,IAKAF,EAAAgB,SAAAC,gBAAAC,GAAA,QACA,KAAAX,EAAAnJ,GAAAyJ,KAAA,CAkBA,GATAL,GAAA,EAEA,KAAAD,EAAAnJ,GAAAyJ,KACAb,EAAAmB,aAAA,kBAEAnB,EAAAmB,aAAA,kBAEAnB,EAAAmB,aAAA,uBAEA,IAAAZ,EAAAnJ,GAAAiJ,EAAAU,EAAA,CACAJ,EAAA,OACAC,EAAA,OACAP,EAAAiB,GAAAC,QAAA1L,KAAAX,QAAAqL,EAAAnJ,GAAAiJ,EAAA,OAAAxK,KAAAqH,kBACA,IAAAsE,GAAA,MAAA9J,EAAA,GACAyI,GAAAa,SAAAC,gBAAAC,GAAA,UACAf,EAAAgB,aAAA,KAAAK,GACApB,EAAAY,SAAAC,gBAAAC,GAAA,gBACAd,EAAAe,aAAA,qBACAf,EAAAe,aAAA,sBACAf,EAAAe,aAAA,cACAhB,EAAAsB,YAAArB,GACAE,EAAAmB,YAAAtB,GACA,KAAAI,EAAAnJ,GAAAyJ,KACAb,EAAAmB,aAAA,oBAEAnB,EAAAmB,aAAA,wBAGAf,GAAA,KACAC,EAAA,IAaA,IATAxK,KAAA+J,WAAAxI,IACAuE,KAAAqE,EACAK,IACAqB,MAAAtB,EACAuB,SAAA,GACAC,aAAA,GACAC,SAAAL,EACAM,WAAA,GAEA,KAAAvB,EAAAnJ,GAAAyJ,KAAA,CACAZ,EAAAQ,EAAAnJ,MACA,IAAAa,GAAA6I,SAAAC,gBAAAC,GAAA,IACA,KAAAvD,EAAA,EAAoBA,EAAAsC,EAAOtC,GAAA,EAC3BxF,EAAAsJ,YAAAhB,EAAA9C,GAEA,IAAAoE,GAAAf,SAAAC,gBAAAC,GAAA,OACAa,GAAAZ,aAAA,qBACAY,EAAAZ,aAAA,KAAAT,EAAA,IAAAF,GACAuB,EAAAN,YAAAzB,GACAM,EAAAmB,YAAAM,GACA5J,EAAAgJ,aAAA,cAAAa,GAAA,IAAAtB,EAAA,IAAAF,EAAA,KAEAC,EAAAnJ,OAAA,EACAmJ,EAAAzJ,KAAAmB,OAEAsI,GAAAzJ,KAAAgJ,EAEAO,GAAAnJ,GAAA0J,MAAAjL,KAAAoM,YACApM,KAAAoM,UAAApM,KAAAqM,wBAEArM,KAAAiK,SAAA1I,IACAuE,KAAAqE,EACA2B,SAAA,GACAQ,GAAAb,GAAAC,QAAA1L,KAAAX,QAAAqL,EAAAnJ,GAAAqC,EAAA,MAAA5D,KAAAqH,mBACAkF,KAAAC,GAAAC,aAAAzM,KAAAX,QAAAqL,EAAAnJ,GAAA,EAAAvB,KAAAqH,kBAAA,OAEAgD,IACArK,KAAAiK,SAAA1I,GAAAmL,QAAArC,GAEArK,KAAAiK,SAAA1I,GAAAgL,KAAArB,GACAlL,KAAA2M,SAAAjC,EAAAnJ,GAAAvB,KAAAiK,SAAA1I,GAAAgL,KAAAnK,EAAApC,KAAAiK,SAAA1I,QAjFAvB,MAAAiK,SAAA1I,IACA+K,GAAAb,GAAAC,QAAA1L,KAAAX,QAAAqL,EAAAnJ,GAAAqC,EAAA,MAAA5D,KAAAqH,mBACAkF,KAAAC,GAAAC,aAAAzM,KAAAX,QAAAqL,EAAAnJ,GAAA,EAAAvB,KAAAqH,kBAAA,MACAvB,KAAAqE,GAEAM,EAAAmB,YAAAzB,EAmFA,KAHAnK,KAAAkK,YAAAiB,SAAAC,gBAAAC,GAAAP,GAEAtJ,EAAAoJ,EAAAnJ,OACAF,EAAA,EAAYA,EAAAC,EAAMD,GAAA,EAClBvB,KAAAkK,YAAA0B,YAAAhB,EAAArJ,GAGAvB,MAAAkK,YAAAoB,aAAA,KAAAT,GACAF,EAAA,GACA3K,KAAAX,QAAAuN,cAAAtB,aAAAP,EAAA,OAAAoB,GAAA,IAAAtB,EAAA,KAGAJ,EAAAmB,YAAA5L,KAAAkK,aAoGA,QAAA2C,MA6PA,QAAAC,GAAA1F,EAAA2F,EAAA5D,EAAAoC,EAAAyB,GACAhN,KAAAmJ,aACAnJ,KAAAuL,OACAvL,KAAAoH,OACApH,KAAAiN,aAAA,KACAjN,KAAAkN,mBAAA,KACAlN,KAAAmN,eAAA,EACAnN,KAAA+M,kBACA/M,KAAA6K,QAAAmC,IAAAnC,QAAA,MAAAhJ,EAAA,IACA7B,KAAAgN,cACAhN,KAAAoN,cAAA,EACApN,KAAA2D,OAgTA,QAAA0J,GAAAjG,EAAA2F,EAAA5D,EAAAoC,EAAAyB,GACAhN,KAAA0F,UACA1F,KAAAsN,WAAAlG,EAAA1B,OACA1F,KAAAuN,cACAvN,KAAAwN,aACAxN,KAAAyN,gBACAzN,KAAA0N,kBACA1N,KAAA2N,qBACA3N,KAAA0E,QAAAD,YAAA/F,KAAAsB,KAAAoH,EAAA2F,EAAA5D,EAAAoC,EAAAyB,GAspBA,QAAAY,GAAAxG,EAAA2B,EAAAgE,EAAA5D,IA6DA,QAAA0E,GAAAzG,EAAA2F,EAAA5D,EAAAoC,EAAAyB,GACAhN,KAAA8N,aACA9N,KAAA6F,WAAA,MACA7F,KAAA0E,QAAAD,YAAA/F,KAAAsB,KAAAoH,EAAA2F,EAAA5D,EAAAoC,EAAAyB,GAwNA,QAAAe,GAAAC,EAAAC,GACAjO,KAAAiO,eACA,IAAAC,GAAA/C,SAAAC,gBAAAC,GAAA,gBAaA,IAZA6C,EAAA5C,aAAA,iBACA4C,EAAA5C,aAAA,2CACA4C,EAAA5C,aAAA,iGACA4C,EAAA5C,aAAA,eACA0C,EAAApC,YAAAsC,GACAA,EAAA/C,SAAAC,gBAAAC,GAAA,iBACA6C,EAAA5C,aAAA,iBACA4C,EAAA5C,aAAA,sCACA4C,EAAA5C,aAAA,oDACA4C,EAAA5C,aAAA,eACA0C,EAAApC,YAAAsC,GACAlO,KAAAmO,aAAAD,EACA,MAAAD,EAAAG,eAAA,GAAA5L,EAAAJ,GAAA6L,EAAAG,eAAA,GAAA5L,EAAA0I,EAAA,CACA,GAAAmD,GAAAlD,SAAAC,gBAAAC,GAAA,UACA2C,GAAApC,YAAAyC,EACA,IAAAC,EACAA,GAAAnD,SAAAC,gBAAAC,GAAA,eACAiD,EAAAhD,aAAA,sBACA+C,EAAAzC,YAAA0C,GACAA,EAAAnD,SAAAC,gBAAAC,GAAA,eACAiD,EAAAhD,aAAA,WACA+C,EAAAzC,YAAA0C,IAYA,QAAAC,GAAAP,EAAAC,GACAjO,KAAAiO,eACA,IAAAC,GAAA/C,SAAAC,gBAAAC,GAAA,gBACA6C,GAAA5C,aAAA,iBACA4C,EAAA5C,aAAA,sCACA4C,EAAA5C,aAAA,oDACA0C,EAAApC,YAAAsC,GACAlO,KAAAmO,aAAAD,EASA,QAAAM,GAAA1I,EAAAmI,GACAjO,KAAAyO,aAAA,EACAzO,KAAAiO,gBACAjO,KAAA8F,OACA9F,KAAAsD,SAoGA,QAAAoL,GAAAV,EAAAC,GACAjO,KAAAiO,eACA,IAAAC,GAAA/C,SAAAC,gBAAAC,GAAA,gBACA6C,GAAA5C,aAAA,iBACA4C,EAAA5C,aAAA,2CACA4C,EAAA5C,aAAA,iGACA4C,EAAA5C,aAAA,eACA0C,EAAApC,YAAAsC,EACA,IAAAS,GAAAxD,SAAAC,gBAAAC,GAAA,sBACAsD,GAAArD,aAAA,sCACA0C,EAAApC,YAAA+C,GACA3O,KAAAmO,aAAAQ,CACA,IAAAC,GAAAzD,SAAAC,gBAAAC,GAAA,UACAuD,GAAAtD,aAAA,gBACAqD,EAAA/C,YAAAgD,GACA5O,KAAA4O,SACA,IAAAC,GAAA1D,SAAAC,gBAAAC,GAAA,UACAwD,GAAAvD,aAAA,gBACAqD,EAAA/C,YAAAiD,GACA7O,KAAA6O,SACA,IAAAC,GAAA3D,SAAAC,gBAAAC,GAAA,UACAyD,GAAAxD,aAAA,gBACAqD,EAAA/C,YAAAkD,GACA9O,KAAA8O,UAkBA,QAAAC,GAAAf,EAAAC,GACAjO,KAAAiO,eACA,IAAAG,GAAApO,KAAAiO,cAAAG,eACAO,EAAAxD,SAAAC,gBAAAC,GAAA,wBAGA+C,EAAA,GAAA5L,EAAA0I,GAAA,IAAAkD,EAAA,GAAA5L,EAAAJ,GAAAgM,EAAA,IAAA5L,EAAA0I,GAAA,IAAAkD,EAAA,IAAA5L,EAAAJ,GAAAgM,EAAA,IAAA5L,EAAA0I,GAAA,IAAAkD,EAAA,IAAA5L,EAAAJ,GAAAgM,EAAA,IAAA5L,EAAA0I,GAAA,IAAAkD,EAAA,IAAA5L,EAAAJ,GAAAgM,EAAA,IAAA5L,EAAA0I,GAAA,IAAAkD,EAAA,IAAA5L,EAAAJ,KACApC,KAAA4O,QAAA5O,KAAAgP,aAAA,UAAAL,KAEAP,EAAA,IAAA5L,EAAA0I,GAAA,IAAAkD,EAAA,IAAA5L,EAAAJ,GAAAgM,EAAA,IAAA5L,EAAA0I,GAAA,IAAAkD,EAAA,IAAA5L,EAAAJ,GAAAgM,EAAA,IAAA5L,EAAA0I,GAAA,IAAAkD,EAAA,IAAA5L,EAAAJ,GAAAgM,EAAA,IAAA5L,EAAA0I,GAAA,IAAAkD,EAAA,IAAA5L,EAAAJ,GAAAgM,EAAA,IAAA5L,EAAA0I,GAAA,IAAAkD,EAAA,IAAA5L,EAAAJ,KACApC,KAAA6O,QAAA7O,KAAAgP,aAAA,UAAAL,KAEAP,EAAA,IAAA5L,EAAA0I,GAAA,IAAAkD,EAAA,IAAA5L,EAAAJ,GAAAgM,EAAA,IAAA5L,EAAA0I,GAAA,IAAAkD,EAAA,IAAA5L,EAAAJ,GAAAgM,EAAA,IAAA5L,EAAA0I,GAAA,IAAAkD,EAAA,IAAA5L,EAAAJ,GAAAgM,EAAA,IAAA5L,EAAA0I,GAAA,IAAAkD,EAAA,IAAA5L,EAAAJ,GAAAgM,EAAA,IAAA5L,EAAA0I,GAAA,IAAAkD,EAAA,IAAA5L,EAAAJ,KACApC,KAAA8O,QAAA9O,KAAAgP,aAAA,UAAAL,KAEAP,EAAA,IAAA5L,EAAA0I,GAAA,IAAAkD,EAAA,IAAA5L,EAAAJ,GAAAgM,EAAA,IAAA5L,EAAA0I,GAAA,IAAAkD,EAAA,IAAA5L,EAAAJ,GAAAgM,EAAA,IAAA5L,EAAA0I,GAAA,IAAAkD,EAAA,IAAA5L,EAAAJ,GAAAgM,EAAA,IAAA5L,EAAA0I,GAAA,IAAAkD,EAAA,IAAA5L,EAAAJ,GAAAgM,EAAA,IAAA5L,EAAA0I,GAAA,IAAAkD,EAAA,IAAA5L,EAAAJ,KACApC,KAAAiP,QAAAjP,KAAAgP,aAAA,UAAAL,KAGA3O,KAAA4O,SAAA5O,KAAA6O,SAAA7O,KAAA8O,SAAA9O,KAAAiP,WACAN,EAAArD,aAAA,sCACA0C,EAAApC,YAAA+C,GACAA,EAAAxD,SAAAC,gBAAAC,GAAA,yBAGA+C,EAAA,GAAA5L,EAAA0I,GAAA,IAAAkD,EAAA,GAAA5L,EAAAJ,GAAAgM,EAAA,GAAA5L,EAAA0I,GAAA,IAAAkD,EAAA,GAAA5L,EAAAJ,GAAAgM,EAAA,GAAA5L,EAAA0I,GAAA,IAAAkD,EAAA,GAAA5L,EAAAJ,GAAAgM,EAAA,GAAA5L,EAAA0I,GAAA,IAAAkD,EAAA,GAAA5L,EAAAJ,GAAAgM,EAAA,GAAA5L,EAAA0I,GAAA,IAAAkD,EAAA,GAAA5L,EAAAJ,KAEAuM,EAAArD,aAAA,sCACA0C,EAAApC,YAAA+C,GACA3O,KAAAkP,gBAAAlP,KAAAgP,aAAA,UAAAL,GACA3O,KAAAmP,gBAAAnP,KAAAgP,aAAA,UAAAL,GACA3O,KAAAoP,gBAAApP,KAAAgP,aAAA,UAAAL,IAsEA,QAAAU,GAAArB,EAAAC,GAQAD,EAAA1C,aAAA,aACA0C,EAAA1C,aAAA,aACA0C,EAAA1C,aAAA,gBACA0C,EAAA1C,aAAA,iBACAtL,KAAAiO,eAEA,IAAAqB,GAAAnE,SAAAC,gBAAAC,GAAA,iBACAiE,GAAAhE,aAAA,oBACAgE,EAAAhE,aAAA,0BACAgE,EAAAhE,aAAA,oBACAtL,KAAAsP,iBACAtB,EAAApC,YAAA0D,EAEA,IAAAC,GAAApE,SAAAC,gBAAAC,GAAA,WACAkE,GAAAjE,aAAA,WACAiE,EAAAjE,aAAA,UACAiE,EAAAjE,aAAA,sBACAiE,EAAAjE,aAAA,0BACAtL,KAAAuP,WACAvB,EAAApC,YAAA2D,EACA,IAAAC,GAAArE,SAAAC,gBAAAC,GAAA,UACAmE,GAAAlE,aAAA,yBACAkE,EAAAlE,aAAA,qBACAkE,EAAAlE,aAAA,0BACAtL,KAAAwP,UACAxB,EAAApC,YAAA4D,EAEA,IAAAC,GAAAtE,SAAAC,gBAAAC,GAAA,cACAoE,GAAAnE,aAAA,sBACAmE,EAAAnE,aAAA,uBACAmE,EAAAnE,aAAA,iBACAmE,EAAAnE,aAAA,0BACA0C,EAAApC,YAAA6D,EAGA,IAAApB,GAAAlD,SAAAC,gBAAAC,GAAA,UACA2C,GAAApC,YAAAyC,EACA,IAAAC,EACAA,GAAAnD,SAAAC,gBAAAC,GAAA,eACAgD,EAAAzC,YAAA0C,GACAA,EAAAnD,SAAAC,gBAAAC,GAAA,eACAiD,EAAAhD,aAAA,sBACAtL,KAAAsO,cACAtO,KAAAqO,UACArO,KAAA0P,mBAAA,EACArB,EAAAzC,YAAA0C,GAkCA,QAAAqB,GAAAC,EAAA3B,EAAAnI,GACA9F,KAAAyO,aAAA,EACAzO,KAAAiO,gBACAjO,KAAA4P,aACA5P,KAAA8F,OACAA,EAAAmH,aAAA9B,SAAAC,gBAAAC,GAAA,KACAvF,EAAAmH,aAAArB,YAAA9F,EAAA+J,cACA/J,EAAAmH,aAAArB,YAAA9F,EAAAoH,oBACApH,EAAAgK,YAAAhK,EAAAmH,aA+BA,QAAA8C,GAAAjK,GACA,GAAAvE,GAAAC,EAAAsE,EAAAsB,KAAA4I,GAAAvO,OACAwO,EAAApO,EAAA,IACAqO,EAAAC,GAAAC,aAAAH,GACAtF,EAAA,CACA3K,MAAAqQ,UACA,IAAApC,EACA,KAAA1M,EAAA,EAAYA,EAAAC,EAAMD,GAAA,EAClB,KAAAuE,EAAAsB,KAAA4I,GAAAzO,GAAA+O,IACA3F,GAAA,EACAsD,EAAA,GAAAF,GAAAmC,EAAApK,EAAAyK,QAAAnC,eAAA7M,IACAvB,KAAAqQ,QAAAlP,KAAA8M,IACS,KAAAnI,EAAAsB,KAAA4I,GAAAzO,GAAA+O,IACT3F,GAAA,EACAsD,EAAA,GAAAM,GAAA2B,EAAApK,EAAAyK,QAAAnC,eAAA7M,IACAvB,KAAAqQ,QAAAlP,KAAA8M,IACS,KAAAnI,EAAAsB,KAAA4I,GAAAzO,GAAA+O,IACTrC,EAAA,GAAAO,GAAA1I,IAAAyK,QAAAnC,eAAA7M,IACAvB,KAAAqQ,QAAAlP,KAAA8M,IACS,KAAAnI,EAAAsB,KAAA4I,GAAAzO,GAAA+O,IACT3F,GAAA,EACAsD,EAAA,GAAAS,GAAAwB,EAAApK,EAAAyK,QAAAnC,eAAA7M,IACAvB,KAAAqQ,QAAAlP,KAAA8M,IACS,KAAAnI,EAAAsB,KAAA4I,GAAAzO,GAAA+O,IACT3F,GAAA,EACAsD,EAAA,GAAAc,GAAAmB,EAAApK,EAAAyK,QAAAnC,eAAA7M,IACAvB,KAAAqQ,QAAAlP,KAAA8M,IACS,KAAAnI,EAAAsB,KAAA4I,GAAAzO,GAAA+O,IACT3F,GAAA,EACAsD,EAAA,GAAAoB,GAAAa,EAAApK,EAAAyK,QAAAnC,eAAA7M,IACAvB,KAAAqQ,QAAAlP,KAAA8M,IACS,KAAAnI,EAAAsB,KAAA4I,GAAAzO,GAAA+O,KAETrC,EAAA,GAAA0B,GAAAO,EAAApK,EAAAyK,QAAAnC,eAAA7M,GAAAuE,GACA9F,KAAAqQ,QAAAlP,KAAA8M,GAGAtD,KACA7E,EAAAqD,WAAAsB,KAAAmB,YAAAsE,GACApK,EAAA+J,aAAAvE,aAAA,gBAAAa,GAAA,IAAA8D,EAAA,MAUA,QAAAO,GAAApJ,EAAA2F,EAAA5D,EAAAoC,EAAAyB,GACAhN,KAAA0E,QAAAD,YAAA/F,KAAAsB,KAAAoH,EAAA2F,EAAA5D,EAAAoC,EAAAyB,GACAhN,KAAAiJ,OAAA7B,EAAA6B,OACAjJ,KAAAyQ,YAAA,EACAzQ,KAAA0Q,gBAAA,EACA1Q,KAAA4J,mBACA5J,KAAA2J,SAAA3J,KAAAiJ,OAAA9D,MAAAC,MAAA,MAAoD3D,OAAAzB,KAAAiJ,OAAAxH,YACpDzB,KAAAoH,KAAAuJ,KACA3Q,KAAA2Q,GAAAlF,GAAAC,QAAA1L,UAAAoH,KAAAuJ,GAAA,EAAAxH,EAAAyH,UAAA5Q,KAAAqH,oBAEArH,KAAAoH,KAAAyJ,IACA7Q,KAAA6P,aAAA1E,SAAAC,gBAAAC,GAAA,KACArL,KAAA8Q,iBACK3H,EAAAI,iBACLvJ,KAAA8Q,gBAgGA,QAAAC,GAAA3J,EAAA2F,EAAA5D,EAAAoC,EAAAyB,GACAhN,KAAAgR,UAAA7H,EAAA8H,aAAA7J,EAAA8J,OACAlR,KAAA0E,QAAAD,YAAA/F,KAAAsB,KAAAoH,EAAA2F,EAAA5D,EAAAoC,EAAAyB,GA4CA,QAAAmE,GAAA/J,EAAA2F,EAAA5D,EAAAoC,EAAAyB,GACAhN,KAAA0E,QAAAD,YAAA/F,KAAAsB,KAAAoH,EAAA2F,EAAA5D,EAAAoC,EAAAyB,GA04BA,QAAAoE,GAAAC,GACAlF,GAAAkF,EAEA,QAAAC,GAAAC,GACAC,GAAAF,KAAAC,GAGA,QAAAE,GAAAF,GACAC,GAAAC,MAAAF,GAGA,QAAAG,IAAAH,GACAC,GAAAE,YAAAH,GAGA,QAAAI,IAAAC,EAAAL,GACAC,GAAAG,SAAAC,EAAAL,GAGA,QAAAM,IAAAD,EAAAL,GACAC,GAAAK,aAAAD,EAAAL,GAGA,QAAAO,IAAAP,GACAC,GAAAM,KAAAP,GAGA,QAAAQ,IAAAH,GACAJ,GAAAO,UAAAH,GAGA,QAAAI,OACA,IAAAC,GACAT,GAAAQ,iBAAAE,GAAAD,GAAAE,IAEAX,GAAAQ,mBAIA,QAAAI,IAAAtM,GACA,MAAA0L,IAAAY,kBAAAtM,GAGA,QAAAuM,MACAb,GAAAa,SAGA,QAAAC,MACAd,GAAAc,QAGA,QAAAC,IAAArT,EAAAsT,EAAAjB,GACAC,GAAAe,YAAArT,EAAAsT,EAAAjB,GAGA,QAAAkB,IAAA3T,GACA4T,GAAA5T,EAGA,QAAA6T,IAAAzO,GAIA,OAHA,IAAA+N,KACA/N,EAAAgO,cAAAU,KAAAC,MAAAX,KAEAV,GAAAmB,cAAAzO,GAGA,QAAA4O,IAAAvB,GACA,MAAAC,IAAAsB,QAAAvB,GAGA,QAAAwB,IAAAnB,GACA,mBAAAA,GACA,OAAAA,GACA,WACAoB,GAAA,GACA,MACA,cACAA,GAAA,EACA,MACA,WACAA,GAAA,QAGSC,MAAArB,MAAA,IACToB,GAAApB,EAGA/S,KADAmU,IAAA,KAOA,QAAAE,MACA,yBAAAC,WAGA,QAAAC,IAAAnT,EAAAoT,GACA,gBAAApT,IACAqT,GAAAD,GAIA,QAAAE,IAAAC,GACA,OAAAA,GACA,sBACA,MAAA/H,GACA,4BACA,MAAAe,GACA,cACA,MAAA1I,IAyBA,QAAA2P,MACA,aAAAtI,SAAAuI,aACAC,cAAAC,IACA5B,MA9jSA,GAKAsB,IAIAvU,GATAsM,GAAA,6BAEAc,GAAA,GAEAuG,IAAA,EAEAmB,GAAA,iCAAAC,KAAAX,UAAAY,WAIAC,IAFAhV,KAAAC,MAEAD,KAAAiV,KACAC,GAAAlV,KAAAmV,KAEAC,IADApV,KAAAqV,IACArV,KAAA2D,OAEA2R,IADAtV,KAAA6D,IACA7D,KAAA8D,KAGAyR,OACA,WACA,GACAhT,GADAiT,EAAApQ,OAAAqQ,oBAAAzV,MACAwC,EAAAgT,EAAA/S,MACA,KAAAF,EAAA,EAAYA,EAAAC,EAAMD,GAAA,EAClBgT,GAAAC,EAAAjT,IAAAvC,KAAAwV,EAAAjT,OAMAgT,GAAAvS,OAAAhD,KAAAgD,OACAuS,GAAAF,IAAA,SAAAnV,GAEA,mBADAA,IACAA,EAAAuC,OAAA,CACA,GACAF,GADAmT,EAAAvP,MAAAC,MAAA,MAAuC3D,OAAAvC,EAAAuC,SACvCD,EAAAtC,EAAAuC,MACA,KAAAF,EAAA,EAAgBA,EAAAC,EAAMD,GAAA,EACtBmT,EAAAnT,GAAAvC,KAAAqV,IAAAnV,EAAAqC,GAEA,OAAAmT,GAEA,MAAA1V,MAAAqV,IAAAnV,GAGA,IAAA8T,IAAA,IACA2B,GAAA3V,KAAA4V,GAAA,IACAC,GAAA,KAWAhW,IAAA,EAsMA,IAAAiW,IAAA,WACA,GACAvT,GACAwT,EAFAC,IAGA,KAAAzT,EAAA,EAAYA,EAAA,IAAMA,GAAA,EAClBwT,EAAAxT,EAAAiD,SAAA,IACAwQ,EAAAzT,GAAA,GAAAwT,EAAAtT,OAAA,IAAAsT,GAGA,iBAAA1S,EAAAC,EAAAC,GAUA,MATAF,GAAA,IACAA,EAAA,GAEAC,EAAA,IACAA,EAAA,GAEAC,EAAA,IACAA,EAAA,GAEA,IAAAyS,EAAA3S,GAAA2S,EAAA1S,GAAA0S,EAAAzS,OAsGAuB,GA1FA,WAEA,GAAAkR,SAwFA,WAEA,QAAAC,KAiBA,MAhBAjV,MAAAkV,MAAA,KACAlV,KAAAkV,MAAA,KACAlV,KAAAkV,MAAA,KACAlV,KAAAkV,MAAA,KACAlV,KAAAkV,MAAA,KACAlV,KAAAkV,MAAA,KACAlV,KAAAkV,MAAA,KACAlV,KAAAkV,MAAA,KACAlV,KAAAkV,MAAA,KACAlV,KAAAkV,MAAA,KACAlV,KAAAkV,MAAA,MACAlV,KAAAkV,MAAA,MACAlV,KAAAkV,MAAA,MACAlV,KAAAkV,MAAA,MACAlV,KAAAkV,MAAA,MACAlV,KAAAkV,MAAA,MACAlV,KAGA,QAAAmV,GAAAC,GACA,OAAAA,EACA,MAAApV,KAEA,IAAAqV,GAAArW,KAAAsW,IAAAF,GACAG,EAAAvW,KAAAwW,IAAAJ,EACA,OAAApV,MAAAyV,GAAAJ,GAAAE,EAAA,IACAA,EAAAF,EAAA,IACA,QACA,SAGA,QAAAK,GAAAN,GACA,OAAAA,EACA,MAAApV,KAEA,IAAAqV,GAAArW,KAAAsW,IAAAF,GACAG,EAAAvW,KAAAwW,IAAAJ,EACA,OAAApV,MAAAyV,GAAA,QACA,EAAAJ,GAAAE,EAAA,EACA,EAAAA,EAAAF,EAAA,EACA,SAGA,QAAAM,GAAAP,GACA,OAAAA,EACA,MAAApV,KAEA,IAAAqV,GAAArW,KAAAsW,IAAAF,GACAG,EAAAvW,KAAAwW,IAAAJ,EACA,OAAApV,MAAAyV,GAAAJ,EAAA,EAAAE,EAAA,EACA,SACAA,EAAA,EAAAF,EAAA,EACA,SAGA,QAAAO,GAAAR,GACA,OAAAA,EACA,MAAApV,KAEA,IAAAqV,GAAArW,KAAAsW,IAAAF,GACAG,EAAAvW,KAAAwW,IAAAJ,EACA,OAAApV,MAAAyV,GAAAJ,GAAAE,EAAA,IACAA,EAAAF,EAAA,IACA,QACA,SAGA,QAAAQ,GAAAC,EAAAC,GACA,MAAA/V,MAAAyV,GAAA,EAAAM,EAAAD,EAAA,OAGA,QAAAE,GAAAC,EAAAC,GACA,MAAAlW,MAAA6V,MAAA7W,KAAAmX,IAAAF,GAAAjX,KAAAmX,IAAAD,IAGA,QAAAE,GAAAH,EAAAb,GACA,GAAAC,GAAArW,KAAAsW,IAAAF,GACAG,EAAAvW,KAAAwW,IAAAJ,EACA,OAAApV,MAAAyV,GAAAJ,EAAAE,EAAA,KACAA,EAAAF,EAAA,IACA,QACA,SACAI,GAAA,QACAzW,KAAAmX,IAAAF,GAAA,MACA,QACA,SACAR,GAAAJ,GAAAE,EAAA,IACAA,EAAAF,EAAA,IACA,QACA,SAIA,QAAAgB,GAAAP,EAAAC,EAAAO,GAEA,MADAA,GAAArD,MAAAqD,GAAA,EAAAA,EACA,GAAAR,GAAA,GAAAC,GAAA,GAAAO,EACAtW,KAEAA,KAAAyV,GAAAK,EAAA,QAAAC,EAAA,QAAAO,EAAA,WAGA,QAAAC,GAAA/P,EAAAjE,EAAA1C,EAAAE,EAAAyW,EAAA9V,EAAA4B,EAAAJ,EAAAX,EAAAuG,EAAAoD,EAAAlD,EAAAd,EAAAtH,EAAAgE,EAAApB,GAiBA,MAhBAxC,MAAAkV,MAAA,GAAA1O,EACAxG,KAAAkV,MAAA,GAAA3S,EACAvC,KAAAkV,MAAA,GAAArV,EACAG,KAAAkV,MAAA,GAAAnV,EACAC,KAAAkV,MAAA,GAAAsB,EACAxW,KAAAkV,MAAA,GAAAxU,EACAV,KAAAkV,MAAA,GAAA5S,EACAtC,KAAAkV,MAAA,GAAAhT,EACAlC,KAAAkV,MAAA,GAAA3T,EACAvB,KAAAkV,MAAA,GAAApN,EACA9H,KAAAkV,MAAA,IAAAhK,EACAlL,KAAAkV,MAAA,IAAAlN,EACAhI,KAAAkV,MAAA,IAAAhO,EACAlH,KAAAkV,MAAA,IAAAtV,EACAI,KAAAkV,MAAA,IAAAtR,EACA5D,KAAAkV,MAAA,IAAA1S,EACAxC,KAGA,QAAAyW,GAAAC,EAAApG,EAAAqG,GAEA,MADAA,MAAA,EACA,IAAAD,GAAA,IAAApG,GAAA,IAAAqG,EACA3W,KAAAyV,GAAA,wBAAAiB,EAAApG,EAAAqG,EAAA,GAEA3W,KAGA,QAAA4W,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAEA,OAAAf,GAAA,IAAAC,GAAA,IAAAC,GAAA,IAAAC,GAAA,IAAAC,GAAA,IAAAC,GAAA,IAAAC,GAAA,IAAAC,GAAA,IAAAC,GAAA,IAAAC,GAAA,IAAAC,GAAA,IAAAC,EASA,MARA,KAAAC,GAAA,IAAAC,GAAA,IAAAC,IAEA3X,KAAAkV,MAAA,IAAAlV,KAAAkV,MAAA,IAAA2B,EAAA7W,KAAAkV,MAAA,IAAA+B,EAAAjX,KAAAkV,MAAA,IAAAmC,EAAArX,KAAAkV,MAAA,IAAAuC,EACAzX,KAAAkV,MAAA,IAAAlV,KAAAkV,MAAA,IAAA4B,EAAA9W,KAAAkV,MAAA,IAAAgC,EAAAlX,KAAAkV,MAAA,IAAAoC,EAAAtX,KAAAkV,MAAA,IAAAwC,EACA1X,KAAAkV,MAAA,IAAAlV,KAAAkV,MAAA,IAAA6B,EAAA/W,KAAAkV,MAAA,IAAAiC,EAAAnX,KAAAkV,MAAA,IAAAqC,EAAAvX,KAAAkV,MAAA,IAAAyC,EACA3X,KAAAkV,MAAA,IAAAlV,KAAAkV,MAAA,IAAA8B,EAAAhX,KAAAkV,MAAA,IAAAkC,EAAApX,KAAAkV,MAAA,IAAAsC,EAAAxX,KAAAkV,MAAA,IAAA0C,GAEA5X,KAAA6X,qBAAA,EACA7X,IAGA,IAAA8X,GAAA9X,KAAAkV,MAAA,GACA6C,EAAA/X,KAAAkV,MAAA,GACA8C,EAAAhY,KAAAkV,MAAA,GACA+C,EAAAjY,KAAAkV,MAAA,GACAgD,EAAAlY,KAAAkV,MAAA,GACAiD,EAAAnY,KAAAkV,MAAA,GACAkD,EAAApY,KAAAkV,MAAA,GACAmD,EAAArY,KAAAkV,MAAA,GACAoD,EAAAtY,KAAAkV,MAAA,GACAqD,EAAAvY,KAAAkV,MAAA,GACAsD,EAAAxY,KAAAkV,MAAA,IACAuD,EAAAzY,KAAAkV,MAAA,IACAwD,EAAA1Y,KAAAkV,MAAA,IACAyD,EAAA3Y,KAAAkV,MAAA,IACA0D,EAAA5Y,KAAAkV,MAAA,IACA2D,EAAA7Y,KAAAkV,MAAA,GA4BA,OArBAlV,MAAAkV,MAAA,GAAA4C,EAAAjB,EAAAkB,EAAAd,EAAAe,EAAAX,EAAAY,EAAAR,EACAzX,KAAAkV,MAAA,GAAA4C,EAAAhB,EAAAiB,EAAAb,EAAAc,EAAAV,EAAAW,EAAAP,EACA1X,KAAAkV,MAAA,GAAA4C,EAAAf,EAAAgB,EAAAZ,EAAAa,EAAAT,EAAAU,EAAAN,EACA3X,KAAAkV,MAAA,GAAA4C,EAAAd,EAAAe,EAAAX,EAAAY,EAAAR,EAAAS,EAAAL,EAEA5X,KAAAkV,MAAA,GAAAgD,EAAArB,EAAAsB,EAAAlB,EAAAmB,EAAAf,EAAAgB,EAAAZ,EACAzX,KAAAkV,MAAA,GAAAgD,EAAApB,EAAAqB,EAAAjB,EAAAkB,EAAAd,EAAAe,EAAAX,EACA1X,KAAAkV,MAAA,GAAAgD,EAAAnB,EAAAoB,EAAAhB,EAAAiB,EAAAb,EAAAc,EAAAV,EACA3X,KAAAkV,MAAA,GAAAgD,EAAAlB,EAAAmB,EAAAf,EAAAgB,EAAAZ,EAAAa,EAAAT,EAEA5X,KAAAkV,MAAA,GAAAoD,EAAAzB,EAAA0B,EAAAtB,EAAAuB,EAAAnB,EAAAoB,EAAAhB,EACAzX,KAAAkV,MAAA,GAAAoD,EAAAxB,EAAAyB,EAAArB,EAAAsB,EAAAlB,EAAAmB,EAAAf,EACA1X,KAAAkV,MAAA,IAAAoD,EAAAvB,EAAAwB,EAAApB,EAAAqB,EAAAjB,EAAAkB,EAAAd,EACA3X,KAAAkV,MAAA,IAAAoD,EAAAtB,EAAAuB,EAAAnB,EAAAoB,EAAAhB,EAAAiB,EAAAb,EAEA5X,KAAAkV,MAAA,IAAAwD,EAAA7B,EAAA8B,EAAA1B,EAAA2B,EAAAvB,EAAAwB,EAAApB,EACAzX,KAAAkV,MAAA,IAAAwD,EAAA5B,EAAA6B,EAAAzB,EAAA0B,EAAAtB,EAAAuB,EAAAnB,EACA1X,KAAAkV,MAAA,IAAAwD,EAAA3B,EAAA4B,EAAAxB,EAAAyB,EAAArB,EAAAsB,EAAAlB,EACA3X,KAAAkV,MAAA,IAAAwD,EAAA1B,EAAA2B,EAAAvB,EAAAwB,EAAApB,EAAAqB,EAAAjB,EAEA5X,KAAA6X,qBAAA,EACA7X,KAGA,QAAA8Y,KAQA,MAPA9Y,MAAA6X,sBACA7X,KAAA+Y,YAAA,IAAA/Y,KAAAkV,MAAA,QAAAlV,KAAAkV,MAAA,QAAAlV,KAAAkV,MAAA,QAAAlV,KAAAkV,MAAA,IACA,IAAAlV,KAAAkV,MAAA,QAAAlV,KAAAkV,MAAA,QAAAlV,KAAAkV,MAAA,QAAAlV,KAAAkV,MAAA,IACA,IAAAlV,KAAAkV,MAAA,QAAAlV,KAAAkV,MAAA,QAAAlV,KAAAkV,MAAA,SAAAlV,KAAAkV,MAAA,KACA,IAAAlV,KAAAkV,MAAA,SAAAlV,KAAAkV,MAAA,SAAAlV,KAAAkV,MAAA,SAAAlV,KAAAkV,MAAA,KACAlV,KAAA6X,qBAAA,GAEA7X,KAAA+Y,UAGA,QAAAC,GAAAC,GACA,GAAA1X,EACA,KAAAA,EAAA,EAAgBA,EAAA,GAAKA,GAAA,EACrB0X,EAAA/D,MAAA3T,GAAAvB,KAAAkV,MAAA3T,GAIA,QAAA2X,GAAAhE,GACA,GAAA3T,EACA,KAAAA,EAAA,EAAgBA,EAAA,GAAKA,GAAA,EACrBvB,KAAAkV,MAAA3T,GAAA2T,EAAA3T,GAIA,QAAA4X,GAAA3O,EAAA4O,EAAAC,GAEA,OACA7O,IAAAxK,KAAAkV,MAAA,GAAAkE,EAAApZ,KAAAkV,MAAA,GAAAmE,EAAArZ,KAAAkV,MAAA,GAAAlV,KAAAkV,MAAA,IACAkE,EAAA5O,EAAAxK,KAAAkV,MAAA,GAAAkE,EAAApZ,KAAAkV,MAAA,GAAAmE,EAAArZ,KAAAkV,MAAA,GAAAlV,KAAAkV,MAAA,IACAmE,EAAA7O,EAAAxK,KAAAkV,MAAA,GAAAkE,EAAApZ,KAAAkV,MAAA,GAAAmE,EAAArZ,KAAAkV,MAAA,IAAAlV,KAAAkV,MAAA,KAOA,QAAAoE,GAAA9O,EAAA4O,EAAAC,GACA,MAAA7O,GAAAxK,KAAAkV,MAAA,GAAAkE,EAAApZ,KAAAkV,MAAA,GAAAmE,EAAArZ,KAAAkV,MAAA,GAAAlV,KAAAkV,MAAA,IAEA,QAAAqE,GAAA/O,EAAA4O,EAAAC,GACA,MAAA7O,GAAAxK,KAAAkV,MAAA,GAAAkE,EAAApZ,KAAAkV,MAAA,GAAAmE,EAAArZ,KAAAkV,MAAA,GAAAlV,KAAAkV,MAAA,IAEA,QAAAsE,GAAAhP,EAAA4O,EAAAC,GACA,MAAA7O,GAAAxK,KAAAkV,MAAA,GAAAkE,EAAApZ,KAAAkV,MAAA,GAAAmE,EAAArZ,KAAAkV,MAAA,IAAAlV,KAAAkV,MAAA,IAGA,QAAAuE,GAAAC,GACA,GAAAC,GAAA3Z,KAAAkV,MAAA,GAAAlV,KAAAkV,MAAA,GAAAlV,KAAAkV,MAAA,GAAAlV,KAAAkV,MAAA,GACA1O,EAAAxG,KAAAkV,MAAA,GAAAyE,EACApX,GAAAvC,KAAAkV,MAAA,GAAAyE,EACA9Z,GAAAG,KAAAkV,MAAA,GAAAyE,EACA5Z,EAAAC,KAAAkV,MAAA,GAAAyE,EACAnD,GAAAxW,KAAAkV,MAAA,GAAAlV,KAAAkV,MAAA,IAAAlV,KAAAkV,MAAA,GAAAlV,KAAAkV,MAAA,KAAAyE,EACAjZ,IAAAV,KAAAkV,MAAA,GAAAlV,KAAAkV,MAAA,IAAAlV,KAAAkV,MAAA,GAAAlV,KAAAkV,MAAA,KAAAyE,CACA,QAAAD,EAAA,GAAAlT,EAAAkT,EAAA,GAAA7Z,EAAA2W,EAAAkD,EAAA,GAAAnX,EAAAmX,EAAA,GAAA3Z,EAAAW,EAAA,GAGA,QAAAkZ,GAAAC,GACA,GAAAtY,GAAAC,EAAAqY,EAAApY,OAAAqY,IACA,KAAAvY,EAAA,EAAgBA,EAAAC,EAAMD,GAAA,EACtBuY,EAAAvY,GAAAkY,EAAAI,EAAAtY,GAEA,OAAAuY,GAGA,QAAAC,GAAAvP,EAAA4O,EAAAC,EAAAW,GACA,GAAAA,GAAA,IAAAA,EAAA,CACA,GAAAC,GAAAC,GAAAC,UAGA,OAFAF,GAAA,GAAAzP,EAAAxK,KAAAkV,MAAA,GAAAkE,EAAApZ,KAAAkV,MAAA,GAAAmE,EAAArZ,KAAAkV,MAAA,GAAAlV,KAAAkV,MAAA,IACA+E,EAAA,GAAAzP,EAAAxK,KAAAkV,MAAA,GAAAkE,EAAApZ,KAAAkV,MAAA,GAAAmE,EAAArZ,KAAAkV,MAAA,GAAAlV,KAAAkV,MAAA,IACA+E,EAEA,OAAAzP,EAAAxK,KAAAkV,MAAA,GAAAkE,EAAApZ,KAAAkV,MAAA,GAAAmE,EAAArZ,KAAAkV,MAAA,GAAAlV,KAAAkV,MAAA,IAAA1K,EAAAxK,KAAAkV,MAAA,GAAAkE,EAAApZ,KAAAkV,MAAA,GAAAmE,EAAArZ,KAAAkV,MAAA,GAAAlV,KAAAkV,MAAA,IAAA1K,EAAAxK,KAAAkV,MAAA,GAAAkE,EAAApZ,KAAAkV,MAAA,GAAAmE,EAAArZ,KAAAkV,MAAA,IAAAlV,KAAAkV,MAAA,KAEA,QAAAkF,GAAA5P,EAAA4O,GACA,MAAApZ,MAAA8Y,aACAtO,EAAA,IAAA4O,EAEAra,GAAAyL,EAAAxK,KAAAkV,MAAA,GAAAkE,EAAApZ,KAAAkV,MAAA,GAAAlV,KAAAkV,MAAA,SAAAnW,GAAAyL,EAAAxK,KAAAkV,MAAA,GAAAkE,EAAApZ,KAAAkV,MAAA,GAAAlV,KAAAkV,MAAA,KAGA,QAAAmF,KACA,OAAAra,KAAAkV,MAAA,GAAAlV,KAAAkV,MAAA,GAAAlV,KAAAkV,MAAA,GAAAlV,KAAAkV,MAAA,GAAAlV,KAAAkV,MAAA,GAAAlV,KAAAkV,MAAA,GAAAlV,KAAAkV,MAAA,GAAAlV,KAAAkV,MAAA,GAAAlV,KAAAkV,MAAA,GAAAlV,KAAAkV,MAAA,GAAAlV,KAAAkV,MAAA,IAAAlV,KAAAkV,MAAA,IAAAlV,KAAAkV,MAAA,IAAAlV,KAAAkV,MAAA,IAAAlV,KAAAkV,MAAA,IAAAlV,KAAAkV,MAAA,KAGA,QAAAoF,KACA,MAAAzG,IACA,YAAA1U,EAAAa,KAAAkV,MAAA,QAAA/V,EAAAa,KAAAkV,MAAA,QAAA/V,EAAAa,KAAAkV,MAAA,QAAA/V,EAAAa,KAAAkV,MAAA,QAAA/V,EAAAa,KAAAkV,MAAA,QAAA/V,EAAAa,KAAAkV,MAAA,QAAA/V,EAAAa,KAAAkV,MAAA,QAAA/V,EAAAa,KAAAkV,MAAA,QAAA/V,EAAAa,KAAAkV,MAAA,QAAA/V,EAAAa,KAAAkV,MAAA,QAAA/V,EAAAa,KAAAkV,MAAA,SAAA/V,EAAAa,KAAAkV,MAAA,SAAA/V,EAAAa,KAAAkV,MAAA,SAAA/V,EAAAa,KAAAkV,MAAA,SAAA/V,EAAAa,KAAAkV,MAAA,SAAA/V,EAAAa,KAAAkV,MAAA,UAEAlV,KAAAua,SAAA,GAAAva,KAAAkV,MAAAsF,KAAA,KACAxa,KAAAua,SAAAC,KAAA,KAIA,QAAAC,KACA,gBAAAtb,EAAAa,KAAAkV,MAAA,QAAA/V,EAAAa,KAAAkV,MAAA,QAAA/V,EAAAa,KAAAkV,MAAA,QAAA/V,EAAAa,KAAAkV,MAAA,QAAA/V,EAAAa,KAAAkV,MAAA,SAAA/V,EAAAa,KAAAkV,MAAA,SAGA,QAAA1Q,KACA,SAAAxE,KAAAqa,UAGA,kBACAra,KAAAiV,QACAjV,KAAAmV,SACAnV,KAAA0V,UACA1V,KAAA2V,UACA3V,KAAA4V,UACA5V,KAAAgW,OACAhW,KAAAoW,eACApW,KAAA6V,QACA7V,KAAAqW,QACArW,KAAAuW,eACAvW,KAAAyW,YACAzW,KAAA4W,YACA5W,KAAAmZ,eACAnZ,KAAAsZ,WACAtZ,KAAAuZ,WACAvZ,KAAAwZ,WACAxZ,KAAA+Z,oBACA/Z,KAAAoa,0BACApa,KAAAqa,UACAra,KAAAsa,QACAta,KAAAya,UACAza,KAAAwE,WACAxE,KAAAgZ,QACAhZ,KAAAkZ,iBACAlZ,KAAA4Z,gBACA5Z,KAAAyZ,eACAzZ,KAAAyV,GAAAzV,KAAA4W,UACA5W,KAAA8Y,aACA9Y,KAAA+Y,WAAA,EACA/Y,KAAA6X,qBAAA,EAEA7X,KAAAkV,OAAA,iCAEAlV,KAAAua,UAAA,0BAiCA,SAAAG,EAAAC,GAmBA,QAAAC,GAAAC,EAAAC,EAAA7Z,GACA,GAAA8Z,KACAD,GAAA,GAAAA,GAAuCE,SAAA,GAAgBF,KAGvD,IAAAG,GAAAC,EAAAC,EACAL,EAAAE,SAAAH,EAAAO,EAAAV,IACA,MAAAG,EAAAQ,IAAAR,EAAA,GAAAE,GAGAO,EAAA,GAAAC,GAAAR,GAIAS,EAAA,WAIA,IAHA,GAAA5b,GAAA0b,EAAAhZ,EAAAmZ,GACA1b,EAAA2b,EACAlR,EAAA,EACA5K,EAAA+b,GACA/b,KAAA4K,GAAAoR,EACA7b,GAAA6b,EACApR,EAAA8Q,EAAAhZ,EAAA,EAEA,MAAA1C,GAAAic,GACAjc,GAAA,EACAG,GAAA,EACAyK,KAAA,CAEA,QAAA5K,EAAA4K,GAAAzK,EAWA,OARAyb,GAAAM,MAAA,WAAiC,SAAAR,EAAAhZ,EAAA,IACjCkZ,EAAAO,MAAA,WAAiC,MAAAT,GAAAhZ,EAAA,eACjCkZ,EAAAQ,OAAAR,EAGAN,EAAAE,EAAAE,EAAAW,GAAAvB,IAGAI,EAAAoB,MAAAjb,GACA,SAAAua,EAAAX,EAAAsB,EAAAC,GAUA,MATAA,KAEAA,EAAAH,GAA8BI,EAAAD,EAAAd,GAE9BE,EAAAY,MAAA,WAAyC,MAAAC,GAAAf,QAKzCa,GAA+BxB,EAAA2B,GAAAd,EAAsBX,GAIrDW,IAEAA,EACAP,EACA,UAAAH,KAAAyB,OAAAvc,MAAA2a,EACAG,EAAAsB,OAcA,QAAAb,GAAAR,GACA,GAAAjb,GAAA0c,EAAAzB,EAAAtZ,OACAgb,EAAAzc,KAAAuB,EAAA,EAAAuG,EAAA2U,EAAAlb,EAAAkb,EAAA3U,EAAA,EAAA3F,EAAAsa,EAAAR,IAMA,KAHAO,IAAsBzB,GAAAyB,MAGtBjb,EAAAqa,GACAzZ,EAAAZ,MAEA,KAAAA,EAAA,EAAmBA,EAAAqa,EAAWra,IAC9BY,EAAAZ,GAAAY,EAAA2F,EAAAoE,EAAApE,EAAAiT,EAAAxZ,EAAAib,IAAA1c,EAAAqC,EAAAZ,KACAY,EAAA2F,GAAAhI,GAIA2c,EAAAna,EAAA,SAAAqI,GAIA,IAFA,GAAA7K,GAAAuC,EAAA,EACAd,EAAAkb,EAAAlb,EAAAuG,EAAA2U,EAAA3U,EAAA3F,EAAAsa,EAAAR,EACAtR,KACA7K,EAAAqC,EAAAZ,EAAA2K,EAAA3K,EAAA,GACAc,IAAAuZ,EAAAzZ,EAAA+J,GAAA/J,EAAAZ,GAAAY,EAAA2F,EAAAoE,EAAApE,EAAAhI,KAAAqC,EAAA2F,GAAAhI,GAGA,OADA2c,GAAAlb,IAAqBkb,EAAA3U,IACrBzF,IAISuZ,GAOT,QAAAS,GAAA3b,EAAAZ,GAIA,MAHAA,GAAAyB,EAAAb,EAAAa,EACAzB,EAAAgI,EAAApH,EAAAoH,EACAhI,EAAAmc,EAAAvb,EAAAub,EAAAS,QACA5c,EAOA,QAAAqb,GAAAwB,EAAAC,GACA,GAAArQ,GAAAxK,KAAA8a,QAAAF,EACA,IAAAC,GAAA,UAAAC,EACA,IAAAtQ,IAAAoQ,GACA,IAAqB5a,EAAAZ,KAAAga,EAAAwB,EAAApQ,GAAAqQ,EAAA,IAA8C,MAAApG,IAGnE,MAAAzU,GAAAN,OAAAM,EAAA,UAAA8a,EAAAF,IAAA,KAQA,QAAAzB,GAAAL,EAAAE,GAEA,IADA,GAAA+B,GAAAC,EAAAlC,EAAA,GAAA/S,EAAA,EACAA,EAAAiV,EAAAtb,QACAsZ,EAAA7O,EAAApE,GACAoE,GAAA4Q,GAAA,GAAA/B,EAAA7O,EAAApE,IAAAiV,EAAAC,WAAAlV,IAEA,OAAAsT,GAAAL,GAQA,QAAAM,KACA,IACA,GAAA4B,EAA6B,MAAA7B,GAAA6B,EAAAC,YAAAtB,GAC7B,IAAAuB,GAAA,GAAAC,YAAAxB,EAEA,QADAW,EAAAc,QAAAd,EAAAe,UAAAC,gBAAAJ,GACA/B,EAAA+B,GACS,MAAA3G,GACT,GAAAgH,GAAAjB,EAAApJ,UACAsK,EAAAD,KAAAC,OACA,YAAAC,MAAAnB,EAAAkB,EAAAlB,EAAAoB,OAAAvC,EAAAV,KAQA,QAAAU,GAAA5U,GACA,MAAAoX,QAAAC,aAAAzY,MAAA,EAAAoB,GAvLA,GASAyW,GATAV,EAAAvc,KACA4b,EAAA,IACAH,EAAA,EAEAa,EAAA,SACAZ,EAAAf,EAAA1G,IAAA2H,EAAAH,GACAE,EAAAhB,EAAA1G,IAAA,EAHA,IAIA4H,EAAA,EAAAF,EACAzP,EAAA0P,EAAA,CAoEAjB,GAAA,OAAA2B,GAAA1B,EAqHAM,EAAAP,EAAA3Y,SAAA0Y,OAUAnG,GAEA,IAAAuJ,IAAA,WAgBA,QAAAC,GAAAvX,EAAAjE,EAAA1C,EAAAE,EAAAie,GACA,GAAAC,GAAAD,IAAA,OAAAxX,EAAA,IAAAjE,EAAA,IAAA1C,EAAA,IAAAE,GAAAme,QAAA,UACA,IAAAC,EAAAF,GACA,MAAAE,GAAAF,EAEA,IAAAG,GAAA,GAAAC,IAAA7X,EAAAjE,EAAA1C,EAAAE,GAEA,OADAoe,GAAAF,GAAAG,EACAA,EAcA,QAAAE,GAAAC,EAAAC,GAA2B,WAAAA,EAAA,EAAAD,EAC3B,QAAAE,GAAAF,EAAAC,GAA2B,SAAAA,EAAA,EAAAD,EAC3B,QAAAG,GAAAH,GAA2B,SAAAA,EAG3B,QAAAI,GAAAC,EAAAL,EAAAC,GACA,QAAAF,EAAAC,EAAAC,GAAAI,EAAAH,EAAAF,EAAAC,IAAAI,EAAAF,EAAAH,IAAAK,EAIA,QAAAC,GAAAD,EAAAL,EAAAC,GACA,SAAAF,EAAAC,EAAAC,GAAAI,IAAA,EAAAH,EAAAF,EAAAC,GAAAI,EAAAF,EAAAH,GAGA,QAAAO,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAAC,EAAA9d,EAAA,CACA,IACA8d,EAAAL,GAAAC,EAAAD,GAAA,EACAI,EAAAT,EAAAU,EAAAH,EAAAC,GAAAJ,EACAK,EAAA,EACAH,EAAAI,EAEAL,EAAAK,QAESrgB,KAAAqV,IAAA+K,GAAAE,KAAA/d,EAAAge,EACT,OAAAF,GAGA,QAAAG,GAAAT,EAAAU,EAAAP,EAAAC,GACA,OAAA5d,GAAA,EAAuBA,EAAAme,IAAuBne,EAAA,CAC9C,GAAAoe,GAAAd,EAAAY,EAAAP,EAAAC,EACA,QAAAQ,EAAA,MAAAF,EAEAA,KADAd,EAAAc,EAAAP,EAAAC,GAAAJ,GACAY,EAEA,MAAAF,GAMA,QAAApB,GAAAuB,GACA5f,KAAA6f,GAAAD,EACA5f,KAAA8f,eAAAC,EAAA,GAAAC,cAAAC,GAAA,GAAA9a,OAAA8a,GACAjgB,KAAAkgB,cAAA,EAEAlgB,KAAAmgB,IAAAngB,KAAAmgB,IAAA9e,KAAArB,MAvEA,GAAAogB,KACAA,GAAArC,iBACA,IAAAI,MAaAuB,EAAA,EAEAJ,EAAA,KACAC,EAAA,GAEAU,EAAA,GACAI,EAAA,GAAAJ,EAAA,GAEAF,EAAA,kBAAAC,aAsHA,OAnEA3B,GAAA/Z,WAEA6b,IAAA,SAAA3V,GACA,GAAA0U,GAAAlf,KAAA6f,GAAA,GACAS,EAAAtgB,KAAA6f,GAAA,GACAV,EAAAnf,KAAA6f,GAAA,GACAU,EAAAvgB,KAAA6f,GAAA,EAEA,OADA7f,MAAAkgB,cAAAlgB,KAAAwgB,cACAtB,IAAAoB,GAAAnB,IAAAoB,EAAA/V,EAEA,IAAAA,EAAA,EACA,IAAAA,EAAA,EACAmU,EAAA3e,KAAAygB,UAAAjW,GAAA8V,EAAAC,IAKAC,YAAA,WACA,GAAAtB,GAAAlf,KAAA6f,GAAA,GACAS,EAAAtgB,KAAA6f,GAAA,GACAV,EAAAnf,KAAA6f,GAAA,GACAU,EAAAvgB,KAAA6f,GAAA,EACA7f,MAAAkgB,cAAA,EACAhB,IAAAoB,GAAAnB,IAAAoB,GACAvgB,KAAA0gB,qBAGAA,kBAAA,WAGA,OAFAxB,GAAAlf,KAAA6f,GAAA,GACAV,EAAAnf,KAAA6f,GAAA,GACAte,EAAA,EAA2BA,EAAA0e,IAAsB1e,EACjDvB,KAAA8f,eAAAve,GAAAod,EAAApd,EAAA8e,EAAAnB,EAAAC,IAOAsB,UAAA,SAAA1B,GASA,IARA,GAAAG,GAAAlf,KAAA6f,GAAA,GACAV,EAAAnf,KAAA6f,GAAA,GACAc,EAAA3gB,KAAA8f,eAEAc,EAAA,EACAC,EAAA,EACAC,EAAAb,EAAA,EAEkBY,IAAAC,GAAAH,EAAAE,IAAA9B,IAAoE8B,EACtFD,GAAAP,IAEAQ,CAGA,IAAAE,IAAAhC,EAAA4B,EAAAE,KAAAF,EAAAE,EAAA,GAAAF,EAAAE,IACAG,EAAAJ,EAAAG,EAAAV,EAEAY,EAAApC,EAAAmC,EAAA9B,EAAAC,EACA,OAAA8B,IAnHA,KAoHAzB,EAAAT,EAAAiC,EAAA9B,EAAAC,GACa,IAAA8B,EACbD,EAEAlC,EAAAC,EAAA6B,IAAAP,EAAAnB,EAAAC,KAKAiB,MAGA,WAGA,OAFAc,GAAA,EACAC,GAAA,yBACA3W,EAAA,EAAkBA,EAAA2W,EAAA1f,SAAA9C,EAAAyiB,wBAAqD5W,EACvE7L,EAAAyiB,sBAAAziB,EAAAwiB,EAAA3W,GAAA,yBACA7L,EAAA0iB,qBAAA1iB,EAAAwiB,EAAA3W,GAAA,yBAAA7L,EAAAwiB,EAAA3W,GAAA,8BAEA7L,GAAAyiB,wBACAziB,EAAAyiB,sBAAA,SAAAngB,EAAA5B,GACA,GAAAiiB,IAAA,GAAA5D,OAAA6D,UACAC,EAAAxiB,KAAA6D,IAAA,MAAAye,EAAAJ,IACAO,EAAAC,WAAA,WACAzgB,EAAAqgB,EAAAE,IAEAA,EAEA,OADAN,GAAAI,EAAAE,EACAC,IAEA9iB,EAAA0iB,uBACA1iB,EAAA0iB,qBAAA,SAAAI,GACAE,aAAAF,OAoRA,IAAAG,IA5PA,WAKA,QAAAC,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAAN,EAAAG,EAAAF,EAAAG,EAAAF,EAAAG,EAAAD,EAAAD,EAAAE,EAAAL,EAAAE,EAAAD,CACA,OAAAK,IAAA,MAAAA,EAAA,KAGA,QAAAC,GAAAP,EAAAC,EAAAO,EAAAN,EAAAC,EAAAM,EAAAL,EAAAC,EAAAK,GACA,OAAAF,GAAA,IAAAC,GAAA,IAAAC,EACA,MAAAX,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAEA,IAGAM,GAHAC,EAAA1jB,KAAAmV,KAAAnV,KAAAiV,IAAA+N,EAAAF,EAAA,GAAA9iB,KAAAiV,IAAAgO,EAAAF,EAAA,GAAA/iB,KAAAiV,IAAAsO,EAAAD,EAAA,IACAK,EAAA3jB,KAAAmV,KAAAnV,KAAAiV,IAAAiO,EAAAJ,EAAA,GAAA9iB,KAAAiV,IAAAkO,EAAAJ,EAAA,GAAA/iB,KAAAiV,IAAAuO,EAAAF,EAAA,IACAM,EAAA5jB,KAAAmV,KAAAnV,KAAAiV,IAAAiO,EAAAF,EAAA,GAAAhjB,KAAAiV,IAAAkO,EAAAF,EAAA,GAAAjjB,KAAAiV,IAAAuO,EAAAD,EAAA,GAaA,QATAE,EAFAC,EAAAC,EACAD,EAAAE,EACAF,EAAAC,EAAAC,EAEAA,EAAAD,EAAAD,EAESE,EAAAD,EACTC,EAAAD,EAAAD,EAEAC,EAAAD,EAAAE,IAEA,MAAAH,EAAA,KAyEA,QAAAI,GAAAC,GACA,GAIAvhB,GAJAwhB,EAAAD,EAAAjjB,EACAmjB,EAAAF,EAAA1gB,EACA6gB,EAAAH,EAAAlf,EACAsf,EAAAJ,EAAAvhB,EACAC,EAAAshB,EAAA7d,QACAke,KACAC,EAAA,CACA,KAAA7hB,EAAA,EAAgBA,EAAAC,EAAA,EAAQD,GAAA,EACxB4hB,EAAA5hB,GAAA8hB,EAAAL,EAAAzhB,GAAAyhB,EAAAzhB,EAAA,GAAA0hB,EAAA1hB,GAAA2hB,EAAA3hB,EAAA,IACA6hB,GAAAD,EAAA5hB,GAAA+hB,WAMA,OAJAP,KACAI,EAAA5hB,GAAA8hB,EAAAL,EAAAzhB,GAAAyhB,EAAA,GAAAC,EAAA1hB,GAAA2hB,EAAA,IACAE,GAAAD,EAAA5hB,GAAA+hB,cAEgBH,UAAAC,eAGhB,QAAAG,GAAA9hB,GACAzB,KAAAwjB,cAAA,EACAxjB,KAAA4f,OAAA,GAAAza,OAAA1D,GAGA,QAAAgiB,GAAAC,EAAAC,GACA3jB,KAAA4jB,cAAAF,EACA1jB,KAAA2jB,QAkDA,QAAAE,GAAAC,EAAAC,GACA,GAAAC,GAAAD,EAAAC,SACAxiB,EAAAwiB,EAAAviB,OACAwiB,EAAA7P,IAAA5S,EAAA,GAAAsiB,GACAI,EAAAJ,EAAAC,EAAAT,YACAa,EAAA,CACA,IAAAD,GAAAF,EAAAC,GAAAjc,EACA,MAAAgc,GAAAC,GAAAzhB,CAIA,KAFA,GAAA4hB,GAAAJ,EAAAC,GAAAjc,EAAAkc,GAAA,IACAplB,GAAA,EACAA,GACAklB,EAAAC,GAAAjc,GAAAkc,GAAAF,EAAAC,EAAA,GAAAjc,EAAAkc,GACAC,GAAAD,EAAAF,EAAAC,GAAAjc,IAAAgc,EAAAC,EAAA,GAAAjc,EAAAgc,EAAAC,GAAAjc,GACAlJ,GAAA,GAEAmlB,GAAAG,GAEAH,EAAA,GAAAA,GAAAziB,EAAA,KACA1C,GAAA,EAGA,OAAAklB,GAAAC,GAAAzhB,GAAAwhB,EAAAC,EAAA,GAAAzhB,EAAAwhB,EAAAC,GAAAzhB,GAAA2hB,EAIA,QAAAE,KACArkB,KAAAskB,IAAA,GAAAnf,OAAA,GACAnF,KAAAukB,IAAA,GAAApf,OAAA,GACAnF,KAAAwkB,IAAA,GAAArf,OAAA,GACAnF,KAAAykB,IAAA,GAAAtf,OAAA,GAGA,QAAAuf,GAAAJ,EAAAC,EAAAC,EAAAC,EAAAE,EAAAZ,GACA,GAAAa,GAAAf,EAAAc,EAAAZ,GAEAc,EAAA,EAAAD,CAGA,QAFA5lB,KAAAC,MAAA,KAAA4lB,MAAAP,EAAA,IAAAM,EAAAC,MAAAD,EAAAC,MAAAD,GAAAJ,EAAA,IAAAI,IAAAC,IAAAD,MAAAC,EAAAD,GAAAH,EAAA,GAAAG,MAAAL,EAAA,SACAvlB,KAAAC,MAAA,KAAA4lB,MAAAP,EAAA,IAAAM,EAAAC,MAAAD,EAAAC,MAAAD,GAAAJ,EAAA,IAAAI,IAAAC,IAAAD,MAAAC,EAAAD,GAAAH,EAAA,GAAAG,MAAAL,EAAA,UAIA,QAAAO,GAAAR,EAAAC,EAAAC,EAAAC,EAAAM,EAAAC,EAAAjB,GAEA,GAAAlK,GAAA,GAAAwK,EACAU,KAAA,IAAAA,EAAA,IAAAA,CACA,IAAAE,GAAApB,EAAAkB,EAAAhB,EACAiB,KAAA,IAAAA,CACA,IACAzjB,GADAqjB,EAAAf,EAAAmB,EAAAjB,GACAviB,EAAA8iB,EAAA7iB,OACAyjB,EAAA,EAAAD,EACAJ,EAAA,EAAAD,CAEA,KAAArjB,EAAA,EAAgBA,EAAAC,EAAMD,GAAA,EACtBsY,EAAAyK,IAAA/iB,GAAAvC,KAAAC,MAAA,KAAAimB,MAAAZ,EAAA/iB,IAAA0jB,EAAAC,MAAAD,EAAAC,MAAAD,GAAAT,EAAAjjB,IAAA0jB,IAAAC,IAAAD,MAAAC,EAAAD,GAAAR,EAAAljB,GAAA0jB,MAAAV,EAAAhjB,KAAA,IACAsY,EAAA2K,IAAAjjB,GAAAvC,KAAAC,MAAA,KAAAimB,IAAAL,EAAAP,EAAA/iB,IAAA0jB,EAAAC,EAAAL,EAAAK,EAAAD,EAAAJ,EAAAK,IAAAN,GAAAJ,EAAAjjB,IAAA0jB,IAAAJ,EAAAK,EAAAD,EAAAL,EAAAK,EAAAC,EAAAN,GAAAH,EAAAljB,GAAA0jB,IAAAL,EAAAL,EAAAhjB,KAAA,IACAsY,EAAA4K,IAAAljB,GAAAvC,KAAAC,MAAA,KAAAimB,EAAAL,IAAAP,EAAA/iB,IAAA0jB,EAAAJ,IAAAK,EAAAN,EAAAC,EAAAK,EAAAL,EAAAD,GAAAJ,EAAAjjB,IAAA0jB,EAAAL,EAAAC,EAAAK,EAAAN,IAAAK,EAAAJ,EAAAD,GAAAH,EAAAljB,GAAA0jB,EAAAL,IAAAL,EAAAhjB,KAAA,IACAsY,EAAA0K,IAAAhjB,GAAAvC,KAAAC,MAAA,KAAA4lB,MAAAP,EAAA/iB,IAAAqjB,EAAAC,MAAAD,EAAAC,MAAAD,GAAAJ,EAAAjjB,IAAAqjB,IAAAC,IAAAD,MAAAC,EAAAD,GAAAH,EAAAljB,GAAAqjB,MAAAL,EAAAhjB,KAAA,GAEA,OAAAsY,GA3OA,GA2DAwJ,IA1DArkB,KA0DA,WAEA,QAAAmmB,GAAAnd,EAAAxF,GACAxC,KAAAgI,IACAhI,KAAAwC,IAGA,gBAAA8hB,EAAAC,EAAAC,EAAAC,GACA,GACAvZ,GACA3J,EAAAC,EACA4jB,EAAAtB,EACAuB,EAJAC,EAAAtS,GAGAsQ,EAAA,EAEAK,KAAA4B,KACAC,GACAlC,YAAA,EACAU,YAGA,KADAxiB,EAAAgjB,EAAA/iB,OACAyJ,EAAA,EAAoBA,EAAAoa,EAAgBpa,GAAA,GAGpC,IAFA4Y,EAAA5Y,GAAAoa,EAAA,GACAD,EAAA,EACA9jB,EAAA,EAAwBA,EAAAC,EAAMD,GAAA,EAC9B6jB,EAAApR,GAAA,EAAA8P,EAAA,GAAAQ,EAAA/iB,GAAA,EAAAyS,GAAA,EAAA8P,EAAA,GAAAA,EAAAU,EAAAjjB,GAAA,KAAAuiB,GAAA9P,GAAA8P,EAAA,GAAAW,EAAAljB,GAAAyS,GAAA8P,EAAA,GAAAS,EAAAhjB,GACAoiB,EAAApiB,GAAA6jB,EACA,OAAAG,EAAAhkB,KACA8jB,GAAArR,GAAA2P,EAAApiB,GAAAgkB,EAAAhkB,GAAA,IAEAgkB,EAAAhkB,GAAAoiB,EAAApiB,EAEA8jB,KACAA,EAAAnR,GAAAmR,GACA/B,GAAA+B,GAEAG,EAAAxB,SAAA7iB,KAAA,GAAAgkB,GAAA7B,EAAAQ,IAGA,MADA0B,GAAAlC,cACAkC,OAiCAC,EAAA,WAEA,GAAA1b,KAEA,iBAAA2b,GACA,GAAApB,GAAAoB,EAAAvjB,EACAoiB,EAAAmB,EAAAlP,EACAgO,EAAAkB,EAAAC,GACAlB,EAAAiB,EAAAE,GACAC,GAAAvB,EAAA9J,KAAA,SAAA+J,EAAA/J,KAAA,SAAAgK,EAAAhK,KAAA,SAAAiK,EAAAjK,KAAA,MAAA0D,QAAA,UACA,IAAAnU,EAAA8b,GAEA,YADAH,EAAA3B,WAAAha,EAAA8b,GAGA,IACA3a,GAAA3J,EAAAC,EACA4jB,EAAAtB,EACAuB,EACA1B,EAJA2B,EAAAtS,GAEAsQ,EAAA,EAEAiC,EAAA,IACA,KAAAjB,EAAA7iB,SAAA6iB,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,KAAA1C,EAAAyC,EAAA,GAAAA,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAAAD,EAAA,GAAAE,EAAA,GAAAF,EAAA,GAAAE,EAAA,KAAA3C,EAAAyC,EAAA,GAAAA,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAE,EAAA,GAAAF,EAAA,GAAAE,EAAA,MACAa,EAAA,EAEA,IAAAvB,GAAA,GAAAR,GAAA+B,EAEA,KADA9jB,EAAAgjB,EAAA/iB,OACAyJ,EAAA,EAAoBA,EAAAoa,EAAgBpa,GAAA,GAIpC,IAHAyY,EAAA,GAAAxe,OAAA3D,GACAsiB,EAAA5Y,GAAAoa,EAAA,GACAD,EAAA,EACA9jB,EAAA,EAAwBA,EAAAC,EAAMD,GAAA,EAC9B6jB,EAAApR,GAAA,EAAA8P,EAAA,GAAAQ,EAAA/iB,GAAA,EAAAyS,GAAA,EAAA8P,EAAA,GAAAA,GAAAQ,EAAA/iB,GAAAijB,EAAAjjB,IAAA,KAAAuiB,GAAA9P,GAAA8P,EAAA,IAAAS,EAAAhjB,GAAAkjB,EAAAljB,IAAAyS,GAAA8P,EAAA,GAAAS,EAAAhjB,GACAoiB,EAAApiB,GAAA6jB,EACA,OAAAG,IACAF,GAAArR,GAAA2P,EAAApiB,GAAAgkB,EAAAhkB,GAAA,GAGA8jB,GAAAnR,GAAAmR,GACA/B,GAAA+B,EACAtB,EAAAnE,OAAA1U,GAAA,GAAAuY,GAAA4B,EAAA1B,GACA4B,EAAA5B,EAEAI,EAAAP,cAAAF,EACAoC,EAAA3B,aACAha,EAAA8b,GAAA9B,KAmEA,QAEAV,kBACAR,oBACAiC,gBACAJ,oBACAe,kBACA5D,gBACAQ,oBAogBAyD,GA/fA,WAIA,QAAApV,GAAAzH,EAAA8c,EAAAC,GACA,GAAAC,GAEA1kB,EACAuG,EAAAsC,EAAAc,EAAAgb,EADA1kB,EAAAyH,EAAAxH,MAEA,KAAAF,EAAA,EAAgBA,EAAAC,EAAMD,GAAA,EAEtB,UADA0kB,EAAAhd,EAAA1H,MACA0kB,EAAAE,UAAA,CASA,GANAF,EAAAE,WAAA,EACAF,EAAAG,KACAnd,EAAA1H,EAAA,GAAA8kB,GAAAJ,EAAAG,QAGA,EACAH,EAAAK,QAAA,CACA,GAAAC,GAAAN,EAAAjc,eAEA,KADAI,EAAAmc,EAAA9kB,OACAqG,EAAA,EAAwBA,EAAAsC,EAAOtC,GAAA,EAC/B,GAAAye,EAAAze,GAAA4R,GAAAxO,EAAA3J,EACAilB,EAAAD,EAAAze,GAAA4R,GAAAxO,OAGA,KADAgb,EAAAK,EAAAze,GAAA4R,GAAAxO,EAAAzJ,OACAyJ,EAAA,EAAgCA,EAAAgb,EAAOhb,GAAA,EACvCqb,EAAAze,GAAA4R,GAAAxO,KAAA/I,GACAqkB,EAAAD,EAAAze,GAAA4R,GAAAxO,KAAA/I,EAAA,IAEAokB,EAAAze,GAAA4R,GAAAxO,KAAAsL,GACAgQ,EAAAD,EAAAze,GAAA4R,GAAAxO,KAAAsL,EAAA,IAMA,IAAAyP,EAAA3V,IACA2V,EAAAhd,OAAAwd,EAAAR,EAAA/U,MAAA6U,GACArV,EAAAuV,EAAAhd,OAAA8c,EAAAC,IACa,IAAAC,EAAA3V,GACboW,EAAAT,EAAAvgB,QACa,GAAAugB,EAAA3V,IACbqW,EAAAV,EAAAD,IAKA,QAAAS,GAAAhF,EAAAsE,GAEA,IADA,GAAAxkB,GAAA,EAAAC,EAAAukB,EAAAtkB,OACAF,EAAAC,GAAA,CACA,GAAAukB,EAAAxkB,GAAAkgB,OACA,MAAAsE,GAAAxkB,GAAA0H,OAAA2d,OAIAhU,KAAAC,MAAAD,KAAAiU,UAAAd,EAAAxkB,GAAA0H,UAHA8c,EAAAxkB,GAAA0H,OAAA2d,QAAA,EACAb,EAAAxkB,GAAA0H,OAIA1H,IAAA,GAIA,QAAAmlB,GAAAzM,GACA,GAAA1Y,GACAuG,EAAAsC,EADA5I,EAAAyY,EAAAxY,MAGA,KAAAF,EAAAC,EAAA,EAAoBD,GAAA,EAAKA,GAAA,EACzB,SAAA0Y,EAAA1Y,GAAA+O,GAAA,CACA,GAAA2J,EAAA1Y,GAAAulB,GAAA5b,EAAA3J,EACAilB,EAAAvM,EAAA1Y,GAAAulB,GAAA5b,OAGA,KADAd,EAAA6P,EAAA1Y,GAAAulB,GAAA5b,EAAAzJ,OACAqG,EAAA,EAA4BA,EAAAsC,EAAOtC,GAAA,EACnCmS,EAAA1Y,GAAAulB,GAAA5b,EAAApD,GAAA3F,GACAqkB,EAAAvM,EAAA1Y,GAAAulB,GAAA5b,EAAApD,GAAA3F,EAAA,IAEA8X,EAAA1Y,GAAAulB,GAAA5b,EAAApD,GAAA0O,GACAgQ,EAAAvM,EAAA1Y,GAAAulB,GAAA5b,EAAApD,GAAA0O,EAAA,KAIA,MACa,MAAAyD,EAAA1Y,GAAA+O,IACboW,EAAAzM,EAAA1Y,GAAAwlB,IAiBA,QAAAP,GAAArc,GACA,GAAA5I,GAAAC,EAAA2I,EAAA5I,EAAAE,MACA,KAAAF,EAAA,EAAgBA,EAAAC,EAAMD,GAAA,EACtB4I,EAAA5I,KAAA,IAAA4I,EAAA/H,EAAAb,GAAA,GACA4I,EAAA5I,KAAA,IAAA4I,EAAA/H,EAAAb,GAAA,GACA4I,EAAAvG,EAAArC,GAAA,IAAA4I,EAAA/H,EAAAb,GAAA,GACA4I,EAAAvG,EAAArC,GAAA,IAAA4I,EAAA/H,EAAAb,GAAA,GAIA,QAAAylB,GAAAC,EAAAC,GACA,GAAAC,GAAAD,IAAAE,MAAA,kBACA,OAAAH,GAAA,GAAAE,EAAA,MAESA,EAAA,GAAAF,EAAA,MAGTA,EAAA,GAAAE,EAAA,MAESA,EAAA,GAAAF,EAAA,MAGTA,EAAA,GAAAE,EAAA,MAESA,EAAA,GAAAF,EAAA,cAwWT,QAAAI,GAAAnV,EAAA8T,GACA9T,EAAAxJ,aAGA4e,EAAApV,GACAqV,EAAArV,GACAsV,EAAAtV,GACAuV,EAAAvV,GACAxB,EAAAwB,EAAAjJ,OAAAiJ,EAAAwV,OAAA1B,GACA9T,EAAAxJ,YAAA,GAIA,QAAAie,GAAAvf,EAAA4e,GACA,IAAA5e,EAAAtH,EAAA0G,EAAA/E,QAAA,KAAA2F,GAAAtH,EAAA0C,IACA4E,EAAAugB,aAAA,GAlXA,GAAAJ,GAAA,WAGA,QAAAK,GAAAC,GACA,GAAAC,GAAAD,EAAA/nB,EAAAC,CACA8nB,GAAA/nB,EAAAC,GACAmL,IAEA/I,EAAA2lB,EACAhoB,EAAA,KAMA,QAAAioB,GAAA9e,GACA,GAAA1H,GAAAC,EAAAyH,EAAAxH,MACA,KAAAF,EAAA,EAAoBA,EAAAC,EAAMD,GAAA,EAC1B,IAAA0H,EAAA1H,GAAA+O,IACAsX,EAAA3e,EAAA1H,IAlBA,GAAAymB,IAAA,OAuBA,iBAAA9V,GACA,GAAA8U,EAAAgB,EAAA9V,EAAA9P,KACA2lB,EAAA7V,EAAAjJ,QACAiJ,EAAAwV,QAAA,CACA,GAAAnmB,GAAAC,EAAA0Q,EAAAwV,OAAAjmB,MACA,KAAAF,EAAA,EAA4BA,EAAAC,EAAMD,GAAA,EAClC2Q,EAAAwV,OAAAnmB,GAAA0H,QACA8e,EAAA7V,EAAAwV,OAAAnmB,GAAA0H,aASAue,EAAA,WACA,GAAAQ,IAAA,OACA,iBAAA9V,GACA,GAAAA,EAAApQ,QAAAklB,EAAAgB,EAAA9V,EAAA9P,GAAA,CACA,GAAAb,GAAAuG,EAAAsC,EACA6d,EAAA3kB,EADA9B,EAAA0Q,EAAApQ,MAAAL,MAEA,KAAAF,EAAA,EAA0BA,EAAAC,EAASD,GAAA,EACnC,GAAA2Q,EAAApQ,MAAAP,GAAA6F,MAAA8K,EAAApQ,MAAAP,GAAA6F,KAAA1B,OAIA,IAHApC,EAAA4O,EAAApQ,MAAAP,GAAA6F,KAAA1B,OAAA,GAAAqhB,GACA3c,EAAA9G,EAAA7B,OAEAqG,EAAA,EAAkCA,EAAAsC,EAAUtC,GAAA,EAC5CmgB,EAAA3kB,EAAAwE,GAAAgf,GAAA5b,EACA+c,EAAAC,cACA1B,EAAAljB,EAAAwE,GAAAgf,GAAA5b,GACA+c,EAAAC,aAAA,QAUAZ,EAAA,WAGA,QAAAa,GAAAziB,GACA,GAAAnE,GACAuG,EAAAsC,EADA5I,EAAAkE,EAAAjE,MAEA,KAAAF,EAAA,EAAoBA,EAAAC,EAAMD,GAAA,EAC1B,UAAAmE,EAAAnE,GAAA+O,GACA6X,EAAAziB,EAAAnE,GAAAwlB,QACiB,WAAArhB,EAAAnE,GAAA+O,IAAA,OAAA5K,EAAAnE,GAAA+O,GACjB,GAAA5K,EAAAnE,GAAA1B,EAAAqL,GAAAxF,EAAAnE,GAAA1B,EAAAqL,EAAA,GAAA3J,EAEA,IADA6I,EAAA1E,EAAAnE,GAAA1B,EAAAqL,EAAAzJ,OACAqG,EAAA,EAAgCA,EAAAsC,EAAOtC,GAAA,EACvCpC,EAAAnE,GAAA1B,EAAAqL,EAAApD,GAAA3F,IACAuD,EAAAnE,GAAA1B,EAAAqL,EAAApD,GAAA3F,EAAA,QACAuD,EAAAnE,GAAA1B,EAAAqL,EAAApD,GAAA3F,EAAA,QACAuD,EAAAnE,GAAA1B,EAAAqL,EAAApD,GAAA3F,EAAA,QACAuD,EAAAnE,GAAA1B,EAAAqL,EAAApD,GAAA3F,EAAA,SAEAuD,EAAAnE,GAAA1B,EAAAqL,EAAApD,GAAA0O,IACA9Q,EAAAnE,GAAA1B,EAAAqL,EAAApD,GAAA0O,EAAA,QACA9Q,EAAAnE,GAAA1B,EAAAqL,EAAApD,GAAA0O,EAAA,QACA9Q,EAAAnE,GAAA1B,EAAAqL,EAAApD,GAAA0O,EAAA,QACA9Q,EAAAnE,GAAA1B,EAAAqL,EAAApD,GAAA0O,EAAA,aAIA9Q,GAAAnE,GAAA1B,EAAAqL,EAAA,QACAxF,EAAAnE,GAAA1B,EAAAqL,EAAA,QACAxF,EAAAnE,GAAA1B,EAAAqL,EAAA,QACAxF,EAAAnE,GAAA1B,EAAAqL,EAAA,QAMA,QAAA6c,GAAA9e,GACA,GAAA1H,GAAAC,EAAAyH,EAAAxH,MACA,KAAAF,EAAA,EAAoBA,EAAAC,EAAMD,GAAA,EAC1B,IAAA0H,EAAA1H,GAAA+O,IACA6X,EAAAlf,EAAA1H,GAAAmE,QAvCA,GAAAsiB,IAAA,MA4CA,iBAAA9V,GACA,GAAA8U,EAAAgB,EAAA9V,EAAA9P,KACA2lB,EAAA7V,EAAAjJ,QACAiJ,EAAAwV,QAAA,CACA,GAAAnmB,GAAAC,EAAA0Q,EAAAwV,OAAAjmB,MACA,KAAAF,EAAA,EAA4BA,EAAAC,EAAMD,GAAA,EAClC2Q,EAAAwV,OAAAnmB,GAAA0H,QACA8e,EAAA7V,EAAAwV,OAAAnmB,GAAA0H,aASAwe,EAAA,WAKA,QAAAf,GAAAzM,GACA,GAAA1Y,GACAuG,EAAAsC,EADA5I,EAAAyY,EAAAxY,MAGA,KAAAF,EAAAC,EAAA,EAAwBD,GAAA,EAAKA,GAAA,EAC7B,SAAA0Y,EAAA1Y,GAAA+O,GAAA,CACA,GAAA2J,EAAA1Y,GAAAulB,GAAA5b,EAAA3J,EACA0Y,EAAA1Y,GAAAulB,GAAA5b,EAAArL,EAAAoa,EAAA1Y,GAAAwhB,WAGA,KADA3Y,EAAA6P,EAAA1Y,GAAAulB,GAAA5b,EAAAzJ,OACAqG,EAAA,EAAgCA,EAAAsC,EAAOtC,GAAA,EACvCmS,EAAA1Y,GAAAulB,GAAA5b,EAAApD,GAAA3F,IACA8X,EAAA1Y,GAAAulB,GAAA5b,EAAApD,GAAA3F,EAAA,GAAAtC,EAAAoa,EAAA1Y,GAAAwhB,QAEA9I,EAAA1Y,GAAAulB,GAAA5b,EAAApD,GAAA0O,IACAyD,EAAA1Y,GAAAulB,GAAA5b,EAAApD,GAAA0O,EAAA,GAAA3W,EAAAoa,EAAA1Y,GAAAwhB,SAIA,MACiB,MAAA9I,EAAA1Y,GAAA+O,IACjBoW,EAAAzM,EAAA1Y,GAAAwlB,IAKA,QAAAgB,GAAA9e,GACA,GAAAgd,GACA1kB,EACAuG,EAAAsC,EAAAc,EAAAgb,EADA1kB,EAAAyH,EAAAxH,MAEA,KAAAF,EAAA,EAAoBA,EAAAC,EAAMD,GAAA,GAE1B,GADA0kB,EAAAhd,EAAA1H,GACA0kB,EAAAK,QAAA,CACA,GAAAC,GAAAN,EAAAjc,eAEA,KADAI,EAAAmc,EAAA9kB,OACAqG,EAAA,EAA4BA,EAAAsC,EAAOtC,GAAA,EACnC,GAAAye,EAAAze,GAAA4R,GAAAxO,EAAA3J,EACAglB,EAAAze,GAAA4R,GAAAxO,EAAArL,EAAA0mB,EAAAze,GAAAsgB,OAGA,KADAlC,EAAAK,EAAAze,GAAA4R,GAAAxO,EAAAzJ,OACAyJ,EAAA,EAAoCA,EAAAgb,EAAOhb,GAAA,EAC3Cqb,EAAAze,GAAA4R,GAAAxO,KAAA/I,IACAokB,EAAAze,GAAA4R,GAAAxO,KAAA/I,EAAA,GAAAtC,EAAA0mB,EAAAze,GAAAsgB,IAEA7B,EAAAze,GAAA4R,GAAAxO,KAAAsL,IACA+P,EAAAze,GAAA4R,GAAAxO,KAAAsL,EAAA,GAAA3W,EAAA0mB,EAAAze,GAAAsgB,IAMA,IAAAnC,EAAA3V,IACAoW,EAAAT,EAAAvgB,SAxDA,GAAAsiB,IAAA,OA6DA,iBAAA9V,GACA,GAAA8U,EAAAgB,EAAA9V,EAAA9P,KACA2lB,EAAA7V,EAAAjJ,QACAiJ,EAAAwV,QAAA,CACA,GAAAnmB,GAAAC,EAAA0Q,EAAAwV,OAAAjmB,MACA,KAAAF,EAAA,EAA4BA,EAAAC,EAAMD,GAAA,EAClC2Q,EAAAwV,OAAAnmB,GAAA0H,QACA8e,EAAA7V,EAAAwV,OAAAnmB,GAAA0H,aAmLAof,IAGA,OAFAA,GAAAhB,eAEAgB,KAIAC,GAAA,WAIA,QAAAC,GAAAC,EAAAC,GACA,GAAAC,GAAAvd,SAAApH,cAAA,OACA2kB,GAAAppB,MAAAqpB,WAAAF,CACA,IAAAG,GAAAzd,SAAApH,cAAA,OAEA6kB,GAAAC,UAAA,iBAEAH,EAAAppB,MAAAwpB,SAAA,WACAJ,EAAAppB,MAAAypB,KAAA,WACAL,EAAAppB,MAAA0pB,IAAA,WAEAN,EAAAppB,MAAA2pB,SAAA,QAEAP,EAAAppB,MAAA4pB,YAAA,SACAR,EAAAppB,MAAA6pB,UAAA,SACAT,EAAAppB,MAAA8pB,WAAA,SACAV,EAAAppB,MAAA+pB,cAAA,IACAX,EAAA9c,YAAAgd,GACAzd,SAAAme,KAAA1d,YAAA8c,EAGA,IAAA9M,GAAAgN,EAAAW,WAEA,OADAX,GAAAtpB,MAAAqpB,WAAAH,EAAA,KAAAC,GACgBG,OAAApd,EAAAoQ,EAAA5X,OAAA0kB,GAGhB,QAAAc,KACA,GAAAjoB,GACAqnB,EAAApd,EADAhK,EAAAxB,KAAAypB,MAAAhoB,OAEAioB,EAAAloB,CACA,KAAAD,EAAA,EAAgBA,EAAAC,EAAMD,GAAA,EACtB,GAAAvB,KAAAypB,MAAAloB,GAAAooB,OACAD,GAAA,MAGA,UAAA1pB,KAAAypB,MAAAloB,GAAAqoB,SAAA,IAAA5pB,KAAAypB,MAAAloB,GAAAsoB,OAAA,CACA,GAAAlrB,EAAAmrB,SAAAnrB,EAAAmrB,QAAAC,MAAA,IAAA/pB,KAAAgqB,cAAA,CACAhqB,KAAAgqB,cAAA,CACA,KAAwBrrB,EAAAmrB,QAAAC,MACxBE,OAAA,EACAC,OAAA,WACAlqB,KAAAgqB,cAAA,GACyB3oB,KAAArB,QACD,MAAAwW,KAExB,IAAAxW,KAAAgqB,gBACAhqB,KAAAypB,MAAAloB,GAAAooB,QAAA,OAEa,MAAA3pB,KAAAypB,MAAAloB,GAAAqoB,SAAA,IAAA5pB,KAAAypB,MAAAloB,GAAAsoB,OACb7pB,KAAAypB,MAAAloB,GAAAooB,QAAA,GAEAf,EAAA5oB,KAAAypB,MAAAloB,GAAA4oB,SAAAvB,KACApd,EAAAxL,KAAAypB,MAAAloB,GAAA4oB,SAAA3e,EACAod,EAAAW,cAAA/d,GACAke,GAAA,EACA1pB,KAAAypB,MAAAloB,GAAAooB,QAAA,IAEAf,EAAA5oB,KAAAypB,MAAAloB,GAAA6oB,SAAAxB,KACApd,EAAAxL,KAAAypB,MAAAloB,GAAA6oB,SAAA5e,EACAod,EAAAW,cAAA/d,IACAke,GAAA,EACA1pB,KAAAypB,MAAAloB,GAAAooB,QAAA,IAGA3pB,KAAAypB,MAAAloB,GAAAooB,SACA3pB,KAAAypB,MAAAloB,GAAA6oB,SAAApmB,OAAA0kB,WAAA2B,YAAArqB,KAAAypB,MAAAloB,GAAA6oB,SAAApmB,QACAhE,KAAAypB,MAAAloB,GAAA4oB,SAAAnmB,OAAA0kB,WAAA2B,YAAArqB,KAAAypB,MAAAloB,GAAA4oB,SAAAnmB,SAKA,KAAA0lB,GAAAhM,KAAA4M,MAAAtqB,KAAAuqB,SAAAC,EACA9I,WAAA8H,EAAAnoB,KAAArB,MAAA,IAEA0hB,WAAA,WAAkC1hB,KAAA2pB,QAAA,GAAoBtoB,KAAArB,MAAA,GAKtD,QAAAyqB,GAAAC,EAAAC,GACA,GAAAC,GAAAzf,SAAAC,gBAAAC,GAAA,OACAuf,GAAAtrB,MAAA2pB,SAAA,QACA2B,EAAAtrB,MAAAqpB,WAAAgC,EAAAE,QACAD,EAAAE,YAAA,IACAH,EAAAI,QACAH,EAAAtrB,MAAAqpB,WAAA,UACAiC,EAAAlhB,UAAAihB,EAAAI,QAEAH,EAAAtrB,MAAAqpB,WAAAgC,EAAAE,QAEAH,EAAA9e,YAAAgf,EACA,IAAAI,GAAA7f,SAAApH,cAAA,UAAAknB,WAAA,KAEA,OADAD,GAAAxC,KAAA,SAAAmC,EAAAE,QACAG,EAGA,QAAAE,GAAAP,EAAAlgB,GACA,IAAAkgB,EAEA,YADA3qB,KAAA2pB,QAAA,EAGA,IAAA3pB,KAAA8B,MAGA,MAFA9B,MAAA2pB,QAAA,OACA3pB,KAAAypB,MAAAkB,EAAAQ,KAIA,IACA5pB,GADA6pB,EAAAT,EAAAQ,KACA3pB,EAAA4pB,EAAA3pB,MACA,KAAAF,EAAA,EAAgBA,EAAAC,EAAOD,GAAA,GAIvB,GAHA6pB,EAAA7pB,GAAAooB,QAAA,EACAyB,EAAA7pB,GAAA4oB,SAAA5B,EAAA6C,EAAA7pB,GAAAspB,QAAA,aACAO,EAAA7pB,GAAA6oB,SAAA7B,EAAA6C,EAAA7pB,GAAAspB,QAAA,cACAO,EAAA7pB,GAAA8pB,OAEa,SAAAD,EAAA7pB,GAAAqoB,SAAA,IAAAwB,EAAA7pB,GAAAsoB,OAAA,CACb,GAAA1nB,GAAAgJ,SAAApH,cAAA,QACA5B,GAAAlC,KAAA,WACAkC,EAAA0mB,UAAA,4BAA2CuC,EAAA7pB,GAAAspB,QAAA,mCAA6DO,EAAA7pB,GAAA8pB,MAAA,OACxG5gB,EAAAmB,YAAAzJ,OACa,UAAAipB,EAAA7pB,GAAAqoB,SAAA,IAAAwB,EAAA7pB,GAAAsoB,OAAA,CAEb,GAAA7hB,GAAAmD,SAAApH,cAAA,OACAiE,GAAA/H,KAAA,WACA+H,EAAAsjB,IAAA,aACAtjB,EAAAqJ,KAAA+Z,EAAA7pB,GAAA8pB,MACA5gB,EAAAmB,YAAA5D,OACa,UAAAojB,EAAA7pB,GAAAqoB,SAAA,IAAAwB,EAAA7pB,GAAAsoB,OAAA,CAEb,GAAA7iB,GAAAmE,SAAApH,cAAA,SACAiD,GAAAsE,aAAA,MAAA8f,EAAA7pB,GAAA8pB,OACA5gB,EAAAmB,YAAA5E,QAjBAokB,GAAA7pB,GAAAooB,QAAA,CAmBAyB,GAAA7pB,GAAAgqB,OAAAd,EAAAhgB,EAAA2gB,EAAA7pB,IACAvB,KAAAypB,MAAAtoB,KAAAiqB,EAAA7pB,IAEAioB,EAAAnoB,KAAArB,QAGA,QAAAwrB,GAAA1pB,GACA,GAAAA,EAAA,CAGA9B,KAAA8B,QACA9B,KAAA8B,SAEA,IAAAP,GACAuG,EAAA2jB,EADAjqB,EAAAM,EAAAL,OACA2I,EAAApK,KAAA8B,MAAAL,MACA,KAAAF,EAAA,EAAgBA,EAAAC,EAAMD,GAAA,GAGtB,IAFAuG,EAAA,EACA2jB,GAAA,EACA3jB,EAAAsC,GACApK,KAAA8B,MAAAgG,GAAAxI,QAAAwC,EAAAP,GAAAjC,OAAAU,KAAA8B,MAAAgG,GAAA+iB,UAAA/oB,EAAAP,GAAAspB,SAAA7qB,KAAA8B,MAAAgG,GAAA4jB,KAAA5pB,EAAAP,GAAAmqB,KACAD,GAAA,GAEA3jB,GAAA,CAEA2jB,KACAzrB,KAAA8B,MAAAX,KAAAW,EAAAP,IACA6I,GAAA,KAKA,QAAAuhB,GAAAC,EAAAtsB,EAAAkpB,GAEA,IADA,GAAAjnB,GAAA,EAAAC,EAAAxB,KAAA8B,MAAAL,OACAF,EAAAC,GAAA,CACA,GAAAxB,KAAA8B,MAAAP,GAAAmqB,KAAAE,GAAA5rB,KAAA8B,MAAAP,GAAAjC,WAAAU,KAAA8B,MAAAP,GAAAspB,UAAArC,EACA,MAAAxoB,MAAA8B,MAAAP,EAEAA,IAAA,GAIA,QAAAsqB,GAAAD,EAAAE,EAAAC,GAIA,MAHA/rB,MAAAgsB,cAAAF,GACAP,OAEAM,YAAAD,GAAAhQ,MAAAmQ,EAAA,IAIA,QAAAC,GAAAxY,GAEA,IADA,GAAAjS,GAAA,EAAAC,EAAAxB,KAAAypB,MAAAhoB,OACAF,EAAAC,GAAA,CACA,GAAAxB,KAAAypB,MAAAloB,GAAA0qB,QAAAzY,EACA,MAAAxT,MAAAypB,MAAAloB,EAEAA,IAAA,EAEA,mBAhMA,GAAAipB,GAAA,IAmMA0B,EAAA,WACAlsB,KAAAypB,SACAzpB,KAAA8B,MAAA,KACA9B,KAAAgqB,cAAA,EACAhqB,KAAA2pB,QAAA,EACA3pB,KAAAuqB,SAAA7M,KAAA4M,MAQA,OANA4B,GAAA5nB,UAAAknB,WACAU,EAAA5nB,UAAA4mB,WACAgB,EAAA5nB,UAAAqnB,cACAO,EAAA5nB,UAAA0nB,gBACAE,EAAA5nB,UAAAunB,cAEAK,KAGAzgB,GAAA,WAIA,QAAA0gB,GAAA/iB,EAAAgjB,EAAAC,EAAAC,GACA,GACAC,GADAC,EAAAxsB,KAAAwsB,UAEAH,GAAA5nB,cAAAU,QACAonB,EAAApnB,MAAAC,MAAA,MAAyC3D,OAAA4qB,EAAA5qB,SAMzC,KAJA,GAEAikB,GAAA+G,EAFAlrB,EAAA6qB,EACA5qB,EAAAxB,KAAA0sB,UAAAjrB,OAAA,EAAA3C,GAAA,EAGAA,GAAA,CAGA,GAFA4mB,EAAA1lB,KAAA0sB,UAAAnrB,GACAkrB,EAAAzsB,KAAA0sB,UAAAnrB,EAAA,GACAA,GAAAC,EAAA,GAAA4H,GAAAqjB,EAAA3sB,EAAA0sB,EAAA,CACA9G,EAAAxjB,IACAwjB,EAAA+G,GAEAL,EAAA,CACA,OAEA,GAAAK,EAAA3sB,EAAA0sB,EAAApjB,EAAA,CACAgjB,EAAA7qB,CACA,OAEAA,EAAAC,EAAA,EACAD,GAAA,GAEA6qB,EAAA,EACAttB,GAAA,GAIA,GAAAoM,GAAAgb,EAAApC,EAAA1Z,EAAAtC,EAAA6kB,CACA,IAAAjH,EAAAC,GAAA,CAEAD,EAAA3B,YACAnC,GAAA6D,gBAAAC,EAEA,IAAA3B,GAAA2B,EAAA3B,UACA,IAAA3a,GAAAqjB,EAAA3sB,EAAA0sB,GAAApjB,EAAAsc,EAAA5lB,EAAA0sB,EAAA,CACA,GAAAI,GAAAxjB,GAAAqjB,EAAA3sB,EAAA0sB,EAAAzI,EAAAnE,OAAAne,OAAA,GAEA,KADAykB,EAAAnC,EAAAnE,OAAAgN,GAAAjJ,MAAAliB,OACAyJ,EAAA,EAA0BA,EAAAgb,EAAUhb,GAAA,EACpCqhB,EAAArhB,GAAA6Y,EAAAnE,OAAAgN,GAAAjJ,MAAAzY,EAEAohB,GAAAO,gBAAA,SACa,CACbnH,EAAAoH,OACAH,EAAAjH,EAAAoH,QAEAH,EAAA7O,GAAAC,gBAAA2H,EAAA9hB,EAAA4G,EAAAkb,EAAA9hB,EAAAwV,EAAAsM,EAAAnkB,EAAAiJ,EAAAkb,EAAAnkB,EAAA6X,EAAAsM,EAAA9lB,GAAAugB,IACAuF,EAAAoH,OAAAH,GAEA7I,EAAA6I,GAAAvjB,GAAAsc,EAAA5lB,EAAA0sB,KAAAC,EAAA3sB,EAAA0sB,GAAA9G,EAAA5lB,EAAA0sB,IACA,IAEAO,GAFAC,EAAAjJ,EAAAP,cAAAM,EAGAR,EAAAgJ,EAAAW,UAAA7jB,GAAAkjB,EAAAO,kBAAA9I,EAAAuI,EAAAY,iBAAA,CAIA,KAHAplB,EAAAwkB,EAAAW,UAAA7jB,GAAAkjB,EAAAO,kBAAA9I,EAAAuI,EAAAa,WAAA,EACAruB,GAAA,EACAsL,EAAA2Z,EAAAnE,OAAAne,OACA3C,GAAA,CAEA,GADAwkB,GAAAS,EAAAnE,OAAA9X,GAAA8b,cACA,IAAAoJ,GAAA,IAAAlJ,GAAAhc,GAAAic,EAAAnE,OAAAne,OAAA,GAEA,IADAykB,EAAAnC,EAAAnE,OAAA9X,GAAA6b,MAAAliB,OACAyJ,EAAA,EAAgCA,EAAAgb,EAAOhb,GAAA,EACvCqhB,EAAArhB,GAAA6Y,EAAAnE,OAAA9X,GAAA6b,MAAAzY,EAEA,OACqB,GAAA8hB,GAAA1J,GAAA0J,EAAA1J,EAAAS,EAAAnE,OAAA9X,EAAA,GAAA8b,cAAA,CAGrB,IAFAmJ,GAAAC,EAAA1J,GAAAS,EAAAnE,OAAA9X,EAAA,iBACAoe,EAAAnC,EAAAnE,OAAA9X,GAAA6b,MAAAliB,OACAyJ,EAAA,EAAgCA,EAAAgb,EAAOhb,GAAA,EACvCqhB,EAAArhB,GAAA6Y,EAAAnE,OAAA9X,GAAA6b,MAAAzY,IAAA6Y,EAAAnE,OAAA9X,EAAA,GAAA6b,MAAAzY,GAAA6Y,EAAAnE,OAAA9X,GAAA6b,MAAAzY,IAAA6hB,CAEA,OAEAjlB,EAAAsC,EAAA,EACAtC,GAAA,EAEAhJ,GAAA,EAGAwtB,EAAAa,WAAArlB,EACAwkB,EAAAY,iBAAA5J,EAAAS,EAAAnE,OAAA9X,GAAA8b,cACA0I,EAAAO,gBAAA9I,OAES,CACT,GAAAqJ,GAAAC,EAAAC,EAAAC,EAAAC,CAEA,KADAhsB,EAAAkkB,EAAAvjB,EAAAV,OACAF,EAAA,EAAoBA,EAAAC,EAAMD,GAAA,GAoC1B,GAnCA,IAAAmkB,EAAAxjB,IACAkH,GAAAqjB,EAAA3sB,EAAA0sB,EACA1I,EAAA,EACqB1a,EAAAsc,EAAA5lB,EAAA0sB,EACrB1I,EAAA,GAEA4B,EAAA9hB,EAAA4G,EAAA/F,cAAAU,OACAugB,EAAAoH,SACApH,EAAAoH,WAEApH,EAAAoH,OAAAvrB,GAQAorB,EAAAjH,EAAAoH,OAAAvrB,IAPA6rB,EAAA1H,EAAA9hB,EAAA4G,EAAAjJ,IAAAmkB,EAAA9hB,EAAA4G,EAAA,GACA6iB,EAAA3H,EAAA9hB,EAAAwV,EAAA7X,IAAAmkB,EAAA9hB,EAAAwV,EAAA,GACAkU,EAAA5H,EAAAnkB,EAAAiJ,EAAAjJ,IAAAmkB,EAAAnkB,EAAAiJ,EAAA,GACA+iB,EAAA7H,EAAAnkB,EAAA6X,EAAA7X,IAAAmkB,EAAAnkB,EAAA6X,EAAA,GACAuT,EAAA7O,GAAAC,gBAAAqP,EAAAC,EAAAC,EAAAC,GAAApN,IACAuF,EAAAoH,OAAAvrB,GAAAorB,IAKAjH,EAAAoH,OAQAH,EAAAjH,EAAAoH,QAPAM,EAAA1H,EAAA9hB,EAAA4G,EACA6iB,EAAA3H,EAAA9hB,EAAAwV,EACAkU,EAAA5H,EAAAnkB,EAAAiJ,EACA+iB,EAAA7H,EAAAnkB,EAAA6X,EACAuT,EAAA7O,GAAAC,gBAAAqP,EAAAC,EAAAC,EAAAC,GAAApN,IACAuF,EAAAoH,OAAAH,GAKA7I,EAAA6I,GAAAvjB,GAAAsc,EAAA5lB,EAAA0sB,KAAAC,EAAA3sB,EAAA0sB,GAAA9G,EAAA5lB,EAAA0sB,OAGAxsB,KAAAytB,IAAA,IAAA/H,EAAAxjB,EAAA,CACA,GAAAwrB,GAAAhI,EAAAvjB,EAAAZ,GACAosB,EAAAjI,EAAAlP,EAAAjV,EACAmsB,GAAAC,GAAA,IACAD,GAAA,IACqBA,EAAAC,EAAA,MACrBD,GAAA,KAEAF,EAAAE,GAAAC,EAAAD,GAAA5J,MAEA0J,GAAA,IAAA9H,EAAAxjB,EAAAwjB,EAAAvjB,EAAAZ,GAAAmkB,EAAAvjB,EAAAZ,IAAAmkB,EAAAlP,EAAAjV,GAAAmkB,EAAAvjB,EAAAZ,IAAAuiB,CAEA,KAAAtiB,EACA+qB,EAAAiB,EAEAjB,EAAAhrB,GAAAisB,GAIA,OACA5b,MAAA2a,EACAH,kBAIA,QAAAwB,KACA,GAAA5tB,KAAA8F,KAAAqD,WAAA0kB,UAAA7tB,KAAA6tB,QAAA,CAGA7tB,KAAA+F,KAAA,CACA,IAAAqD,GAAApJ,KAAAuL,KAAArC,cAAAlJ,KAAAwsB,WACAjC,EAAAvqB,KAAA0sB,UAAA,GAAA5sB,EAAAE,KAAAwsB,WACAsB,EAAA9tB,KAAA0sB,UAAA1sB,KAAA0sB,UAAAjrB,OAAA,GAAA3B,EAAAE,KAAAwsB,UACA,MAAApjB,IAAApJ,KAAA+tB,SAAAd,WAAAjtB,KAAA+tB,SAAAd,YAAAe,IAAAhuB,KAAA+tB,SAAAd,WAAAa,GAAA1kB,GAAA0kB,GAAA9tB,KAAA+tB,SAAAd,UAAA1C,GAAAnhB,EAAAmhB,IAAA,CACA,GAAAhpB,GAAAvB,KAAA+tB,SAAAd,UAAA7jB,EAAApJ,KAAA+tB,SAAAE,UAAA,EACAC,EAAAluB,KAAAmsB,iBAAA/iB,EAAA7H,EAAAvB,KAAAsH,GAAAtH,KAAA+tB,SAEA,IADA/tB,KAAA+tB,SAAAE,UAAAC,EAAA9B,eACApsB,KAAAsH,GAAA7C,cAAAU,MAEA,IADA5D,EAAA,EACAA,EAAAvB,KAAAoC,EAAAX,QACAzB,KAAAsH,GAAA/F,GAAA2sB,EAAAtc,MAAArQ,GACAvB,KAAAoC,EAAAb,GAAAvB,KAAAmuB,KAAAnuB,KAAAsH,GAAA/F,GAAAvB,KAAAmuB,KAAAnuB,KAAAsH,GAAA/F,GACAvB,KAAAouB,WAAA7sB,KAAAvB,KAAAsH,GAAA/F,KACAvB,KAAA+F,KAAA,EACA/F,KAAAouB,WAAA7sB,GAAAvB,KAAAsH,GAAA/F,IAEAA,GAAA,MAGAvB,MAAAsH,GAAA4mB,EAAAtc,MACA5R,KAAAoC,EAAApC,KAAAmuB,KAAAnuB,KAAAsH,GAAAtH,KAAAmuB,KAAAnuB,KAAAsH,GACAtH,KAAAouB,YAAApuB,KAAAsH,KACAtH,KAAA+F,KAAA,EACA/F,KAAAouB,WAAApuB,KAAAsH,IAKAtH,KAAA+tB,SAAAd,UAAA7jB,EACApJ,KAAA6tB,QAAA7tB,KAAA8F,KAAAqD,WAAA0kB,SAGA,QAAAQ,MAEA,QAAAC,GAAAxoB,EAAAsB,EAAA+mB,GACAnuB,KAAAmuB,OACAnuB,KAAAoC,EAAA+rB,EAAA/mB,EAAA8D,EAAAijB,EAAA/mB,EAAA8D,EACAlL,KAAAsH,GAAAF,EAAA8D,EACAlL,KAAA+F,KAAA,EACA/F,KAAAuL,KAAAzF,EAAAyF,KACAvL,KAAAkL,GAAA,EACAlL,KAAAuH,IAAA,EACAvH,KAAAuuB,IAAA,EACAvuB,KAAA4I,SAAAylB,EAGA,QAAAG,GAAA1oB,EAAAsB,EAAA+mB,GACAnuB,KAAAmuB,OACAnuB,KAAAoH,OACApH,KAAA+F,KAAA,EACA/F,KAAAuL,KAAAzF,EAAAyF,KACAvL,KAAAkL,GAAA,EACAlL,KAAAuH,IAAA,EACAvH,KAAA6tB,SAAA,EACA7tB,KAAAoC,EAAA+C,MAAAC,MAAA,MAAoC3D,OAAA2F,EAAA8D,EAAAzJ,SACpCzB,KAAAsH,GAAAnC,MAAAC,MAAA,MAAqC3D,OAAA2F,EAAA8D,EAAAzJ,SACrCzB,KAAAyuB,UAAAtpB,MAAAC,MAAA,MAA4C3D,OAAA2F,EAAA8D,EAAAzJ,QAC5C,IAAAwY,GAAA9U,MAAAC,MAAA,MAAqC3D,OAAA2F,EAAA8D,EAAAzJ,QACrCzB,MAAAuuB,IAAAtU,EAAAyU,IAAA,WAAwC,UACxC,IAAAntB,GAAAC,EAAA4F,EAAA8D,EAAAzJ,MACA,KAAAF,EAAA,EAAkBA,EAAAC,EAAMD,GAAA,EACxBvB,KAAAoC,EAAAb,GAAA4sB,EAAA/mB,EAAA8D,EAAA3J,GAAA4sB,EAAA/mB,EAAA8D,EAAA3J,GACAvB,KAAAsH,GAAA/F,GAAA6F,EAAA8D,EAAA3J,EAEAvB,MAAA4I,SAAAylB,EAGA,QAAAM,GAAA7oB,EAAAsB,EAAA+mB,GACAnuB,KAAA0sB,UAAAtlB,EAAA8D,EACAlL,KAAAwsB,WAAA1mB,EAAAsB,KAAAwnB,GACA5uB,KAAAyuB,WAAA,MACAzuB,KAAAouB,YAAA,MACApuB,KAAA6tB,SAAA,EACA7tB,KAAA+tB,UAAuBd,UAAAe,EAAAC,UAAA,GACvBjuB,KAAAkL,GAAA,EACAlL,KAAAuH,IAAA,EACAvH,KAAAoH,OACApH,KAAAmuB,OACAnuB,KAAA8F,OACA9F,KAAAuL,KAAAzF,EAAAyF,KACAvL,KAAAoC,EAAA+rB,EAAA/mB,EAAA8D,EAAA,GAAA/I,EAAA,GAAAgsB,EAAA/mB,EAAA8D,EAAA,GAAA/I,EAAA,GACAnC,KAAAsH,GAAAF,EAAA8D,EAAA,GAAA/I,EAAA,GACAnC,KAAA4I,SAAAglB,EACA5tB,KAAAmsB,mBAGA,QAAA0C,GAAA/oB,EAAAsB,EAAA+mB,GACA,GAAA5sB,GACAY,EAAAqU,EAAAmP,EAAAC,EADApkB,EAAA4F,EAAA8D,EAAAzJ,MAEA,KAAAF,EAAA,EAAgBA,EAAAC,EAAA,EAAQD,GAAA,EACxB6F,EAAA8D,EAAA3J,GAAAokB,IAAAve,EAAA8D,EAAA3J,GAAAY,GAAAiF,EAAA8D,EAAA3J,GAAAiV,IACArU,EAAAiF,EAAA8D,EAAA3J,GAAAY,EACAqU,EAAApP,EAAA8D,EAAA3J,GAAAiV,EACAmP,EAAAve,EAAA8D,EAAA3J,GAAAokB,GACAC,EAAAxe,EAAA8D,EAAA3J,GAAAqkB,IACA,IAAAzjB,EAAAV,SAAAU,EAAA,KAAAqU,EAAA,IAAArU,EAAA,KAAAqU,EAAA,KAAAoL,GAAAC,cAAA1f,EAAA,GAAAA,EAAA,GAAAqU,EAAA,GAAAA,EAAA,GAAArU,EAAA,GAAAwjB,EAAA,GAAAxjB,EAAA,GAAAwjB,EAAA,KAAA/D,GAAAC,cAAA1f,EAAA,GAAAA,EAAA,GAAAqU,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAoP,EAAA,GAAApP,EAAA,GAAAoP,EAAA,SAAAzjB,EAAAV,SAAAU,EAAA,KAAAqU,EAAA,IAAArU,EAAA,KAAAqU,EAAA,IAAArU,EAAA,KAAAqU,EAAA,KAAAoL,GAAAS,cAAAlgB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAqU,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAArU,EAAA,GAAAwjB,EAAA,GAAAxjB,EAAA,GAAAwjB,EAAA,GAAAxjB,EAAA,GAAAwjB,EAAA,KAAA/D,GAAAS,cAAAlgB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAqU,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAoP,EAAA,GAAApP,EAAA,GAAAoP,EAAA,GAAApP,EAAA,GAAAoP,EAAA,OACAxe,EAAA8D,EAAA3J,GAAAokB,GAAA,KACAve,EAAA8D,EAAA3J,GAAAqkB,GAAA,MAIA5lB,MAAA0sB,UAAAtlB,EAAA8D,EACAlL,KAAAwsB,WAAA1mB,EAAAsB,KAAAwnB,GACA5uB,KAAAkL,GAAA,EACAlL,KAAAuH,IAAA,EACAvH,KAAAmuB,OACAnuB,KAAA8F,OACA9F,KAAAuL,KAAAzF,EAAAyF,KACAvL,KAAA+tB,UAAuBd,UAAAe,EAAAC,UAAA,GACvBjuB,KAAA4I,SAAAglB,EACA5tB,KAAAmsB,mBACAnsB,KAAA6tB,SAAA,EACA7tB,KAAAoC,EAAA+C,MAAAC,MAAA,MAAoC3D,OAAA2F,EAAA8D,EAAA,GAAA/I,EAAAV,SACpCzB,KAAAsH,GAAAnC,MAAAC,MAAA,MAAqC3D,OAAA2F,EAAA8D,EAAA,GAAA/I,EAAAV,SACrCzB,KAAAyuB,UAAAtpB,MAAAC,MAAA,MAA4C3D,OAAA2F,EAAA8D,EAAA,GAAA/I,EAAAV,SAC5CzB,KAAAouB,WAAAjpB,MAAAC,MAAA,MAA6C3D,OAAA2F,EAAA8D,EAAA,GAAA/I,EAAAV,SAqP7C,QAAAiK,GAAA5F,EAAAsB,EAAAnH,EAAAkuB,EAAAlU,GACA,GAAAzX,EACA,QAAAvC,EACAuC,EAAA,GAAAssB,GAAAhpB,EAAAsB,EAAA6S,OACS,QAAA7S,EAAAZ,EAEThE,EADA,IAAAvC,EACA,GAAAquB,GAAAxoB,EAAAsB,EAAA+mB,GAEA,GAAAK,GAAA1oB,EAAAsB,EAAA+mB,OAES,QAAA/mB,EAAAZ,EAEThE,EADA,IAAAvC,EACA,GAAA0uB,GAAA7oB,EAAAsB,EAAA+mB,GAEA,GAAAU,GAAA/oB,EAAAsB,EAAA+mB,OAES,IAAA/mB,EAAA8D,EAAAzJ,OAEA,mBAAA2F,GAAA8D,EAAA,GACT1I,EAAA,GAAAgsB,GAAA1oB,EAAAsB,EAAA+mB,OAEA,QAAAluB,GACA,OACAuC,EAAA,GAAAmsB,GAAA7oB,EAAAsB,EAAA+mB,EACA,MACA,QACA3rB,EAAA,GAAAqsB,GAAA/oB,EAAAsB,EAAA+mB,OATA3rB,GAAA,GAAA8rB,GAAAxoB,EAAAsB,EAAA+mB,EAgBA,OAHA3rB,GAAA0I,GACA+O,EAAA9Y,KAAAqB,GAEAA,EA4HA,QAAAusB,GAAAjpB,EAAAsB,EAAA+K,EAAA9K,GACA,UAAA2nB,GAAAlpB,EAAAsB,EAAA+K,EAAA9K,GAwIA,QAAA4nB,GAAAnpB,EAAAsB,EAAA6S,GACA,UAAAiV,GAAAppB,EAAAsB,EAAA6S,GA7yBA,GAAA+T,IAAA,OAoRAc,EAAA,WACA,QAAAK,KACA,MAAAnvB,MAAAwC,EACA4sB,gBAAApvB,KAAAwC,IAEAxC,KAAAqvB,GAAAjtB,EAAApC,KAAAsvB,GAAAltB,EAAApC,KAAAuvB,GAAAvvB,KAAAuvB,GAAAntB,EAAA,GAGA,QAAAotB,KACA,MAAAJ,iBAAApvB,KAAAqvB,IAEA,QAAAI,KACA,MAAAL,iBAAApvB,KAAAsvB,IAKA,QAAAI,KACA,MAAAN,iBAAApvB,KAAAwG,GAEA,QAAAmpB,KACA,MAAAP,iBAAApvB,KAAA4vB,IAEA,QAAAC,KACA,MAAA7vB,MAAAqC,EACA+sB,gBAAApvB,KAAAqC,EAAA,EAAAsS,IAEAya,gBAAApvB,KAAA8vB,GAAA,EAAAnb,IAGA,QAAAob,KACA,MAAAX,iBAAApvB,KAAAmC,EAAA,KAEA,QAAA6tB,KACA,MAAAZ,iBAAApvB,KAAA4D,EAAA,KAEA,QAAAqsB,KACA,MAAAb,iBAAApvB,KAAAkwB,IAEA,QAAAC,KACA,MAAAf,iBAAApvB,KAAAowB,IAEA,QAAAC,GAAAC,GACA,GAAA/uB,GAAAC,EAAAxB,KAAAqH,kBAAA5F,MACA,KAAAF,EAAA,EAAsBA,EAAAC,EAASD,GAAA,EAC/BvB,KAAAqH,kBAAA9F,GAAAqH,WACA5I,KAAAqH,kBAAA9F,GAAAwE,MACA/F,KAAA+F,KAAA,EAGA/F,MAAAwG,GACA8pB,EAAA7Z,WAAAzW,KAAAwG,EAAApE,EAAA,IAAApC,KAAAwG,EAAApE,EAAA,GAAApC,KAAAwG,EAAApE,EAAA,IAEApC,KAAAmC,GACAmuB,EAAAja,MAAArW,KAAAmC,EAAAC,EAAA,GAAApC,KAAAmC,EAAAC,EAAA,GAAApC,KAAAmC,EAAAC,EAAA,IAEApC,KAAAqC,EACAiuB,EAAAnb,QAAAnV,KAAAqC,EAAAD,GAEAkuB,EAAA1a,SAAA5V,KAAA8vB,GAAA1tB,GAAAuT,QAAA3V,KAAAuwB,GAAAnuB,GAAAsT,QAAA1V,KAAAwwB,GAAApuB,GAAAwT,SAAA5V,KAAA4vB,GAAAxtB,EAAA,IAAAuT,QAAA3V,KAAA4vB,GAAAxtB,EAAA,IAAAsT,QAAA1V,KAAA4vB,GAAAxtB,EAAA,IAEApC,KAAAoH,KAAA5E,EAAAL,EACAnC,KAAAoH,KAAA5E,EAAA6W,EACAiX,EAAA7Z,UAAAzW,KAAAqvB,GAAAjtB,EAAApC,KAAAsvB,GAAAltB,GAAApC,KAAAuvB,GAAAntB,GAEAkuB,EAAA7Z,UAAAzW,KAAAqvB,GAAAjtB,EAAApC,KAAAsvB,GAAAltB,EAAA,GAGAkuB,EAAA7Z,UAAAzW,KAAAwC,EAAAJ,EAAA,GAAApC,KAAAwC,EAAAJ,EAAA,IAAApC,KAAAwC,EAAAJ,EAAA,IAGA,QAAAquB,KACA,GAAAzwB,KAAA8F,KAAAqD,WAAA0kB,UAAA7tB,KAAA6tB,QAAA,CAIA7tB,KAAA+F,KAAA,CACA,IAAAxE,GAAAC,EAAAxB,KAAAqH,kBAAA5F,MAEA,KAAAF,EAAA,EAAsBA,EAAAC,EAASD,GAAA,EAC/BvB,KAAAqH,kBAAA9F,GAAAqH,WACA5I,KAAAqH,kBAAA9F,GAAAwE,MACA/F,KAAA+F,KAAA,EAGA,IAAA/F,KAAA+F,IAAA,CAgBA,GAfA/F,KAAAoC,EAAA6S,QACAjV,KAAAwG,GACAxG,KAAAoC,EAAAqU,WAAAzW,KAAAwG,EAAApE,EAAA,IAAApC,KAAAwG,EAAApE,EAAA,GAAApC,KAAAwG,EAAApE,EAAA,IAEApC,KAAAmC,GACAnC,KAAAoC,EAAAiU,MAAArW,KAAAmC,EAAAC,EAAA,GAAApC,KAAAmC,EAAAC,EAAA,GAAApC,KAAAmC,EAAAC,EAAA,IAEApC,KAAAkwB,IACAlwB,KAAAoC,EAAAgU,cAAApW,KAAAkwB,GAAA9tB,EAAApC,KAAAowB,GAAAhuB,GAEApC,KAAAqC,EACArC,KAAAoC,EAAA+S,QAAAnV,KAAAqC,EAAAD,GAEApC,KAAAoC,EAAAwT,SAAA5V,KAAA8vB,GAAA1tB,GAAAuT,QAAA3V,KAAAuwB,GAAAnuB,GAAAsT,QAAA1V,KAAAwwB,GAAApuB,GAAAwT,SAAA5V,KAAA4vB,GAAAxtB,EAAA,IAAAuT,QAAA3V,KAAA4vB,GAAAxtB,EAAA,IAAAsT,QAAA1V,KAAA4vB,GAAAxtB,EAAA,IAEApC,KAAA0wB,cAAA1wB,KAAAwC,EAAAkqB,WAAA1sB,KAAAwC,EAAAmuB,eAAA,CACA,GAAAC,GAAAC,CACA7wB,MAAAwC,EAAAurB,SAAAd,UAAAjtB,KAAAwC,EAAAgqB,YAAAxsB,KAAAwC,EAAAkqB,UAAA,GAAA5sB,GACA8wB,EAAA5wB,KAAAwC,EAAAmuB,gBAAA3wB,KAAAwC,EAAAkqB,UAAA,GAAA5sB,EAAA,KAAAE,KAAA8F,KAAAqD,WAAAyH,UAAA,GACAigB,EAAA7wB,KAAAwC,EAAAmuB,eAAA3wB,KAAAwC,EAAAkqB,UAAA,GAAA5sB,EAAAE,KAAA8F,KAAAqD,WAAAyH,UAAA,IACqB5Q,KAAAwC,EAAAurB,SAAAd,UAAAjtB,KAAAwC,EAAAgqB,YAAAxsB,KAAAwC,EAAAkqB,UAAA1sB,KAAAwC,EAAAkqB,UAAAjrB,OAAA,GAAA3B,GACrB8wB,EAAA5wB,KAAAwC,EAAAmuB,eAAA3wB,KAAAwC,EAAAkqB,UAAA1sB,KAAAwC,EAAAkqB,UAAAjrB,OAAA,GAAA3B,EAAAE,KAAA8F,KAAAqD,WAAAyH,UAAA,GACAigB,EAAA7wB,KAAAwC,EAAAmuB,gBAAA3wB,KAAAwC,EAAAkqB,UAAA1sB,KAAAwC,EAAAkqB,UAAAjrB,OAAA,GAAA3B,EAAA,KAAAE,KAAA8F,KAAAqD,WAAAyH,UAAA,KAEAggB,EAAA5wB,KAAAwC,EAAA8E,GACAupB,EAAA7wB,KAAAwC,EAAAmuB,gBAAA3wB,KAAAwC,EAAAurB,SAAAd,UAAAjtB,KAAAwC,EAAAgqB,WAAA,KAAAxsB,KAAA8F,KAAAqD,WAAAyH,UAAA5Q,KAAAwC,EAAAgqB,aAEAxsB,KAAAoC,EAAA+S,QAAAnW,KAAA8xB,MAAAF,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,KAEA7wB,KAAAoH,KAAA5E,EAAAL,EACAnC,KAAAoH,KAAA5E,EAAA6W,EACArZ,KAAAoC,EAAAqU,UAAAzW,KAAAqvB,GAAAjtB,EAAApC,KAAAsvB,GAAAltB,GAAApC,KAAAuvB,GAAAntB,GAEApC,KAAAoC,EAAAqU,UAAAzW,KAAAqvB,GAAAjtB,EAAApC,KAAAsvB,GAAAltB,EAAA,GAGApC,KAAAoC,EAAAqU,UAAAzW,KAAAwC,EAAAJ,EAAA,GAAApC,KAAAwC,EAAAJ,EAAA,IAAApC,KAAAwC,EAAAJ,EAAA,IAGApC,KAAA6tB,QAAA7tB,KAAA8F,KAAAqD,WAAA0kB,SAGA,QAAAkD,KACA/wB,KAAAgxB,UAAA,EACAhxB,KAAAixB,GAAA,GAAAntB,GACA9D,KAAAkL,IACAlL,KAAAoH,KAAA5E,EAAAL,EACAnC,KAAAixB,GAAAxa,UAAAzW,KAAAqvB,GAAAjtB,EAAApC,KAAAsvB,GAAAltB,GAAApC,KAAAuvB,GAAAntB,GAEApC,KAAAixB,GAAAxa,UAAAzW,KAAAwC,EAAAJ,EAAA,GAAApC,KAAAwC,EAAAJ,EAAA,IAAApC,KAAAwC,EAAAJ,EAAA,IAEApC,KAAAqC,EACArC,KAAAixB,GAAA9b,QAAAnV,KAAAqC,EAAAD,GAEApC,KAAAixB,GAAAvb,SAAA1V,KAAAwwB,GAAApuB,GAAAuT,SAAA3V,KAAAuwB,GAAAnuB,GAAAwT,QAAA5V,KAAA8vB,GAAA1tB,GAEApC,KAAAmC,GACAnC,KAAAixB,GAAA5a,MAAArW,KAAAmC,EAAAC,EAAA,GAAApC,KAAAmC,EAAAC,EAAA,MAEApC,KAAAwG,GACAxG,KAAAixB,GAAAxa,WAAAzW,KAAAwG,EAAApE,EAAA,IAAApC,KAAAwG,EAAApE,EAAA,GAAApC,KAAAwG,EAAApE,EAAA,KAKA,QAAA8uB,MAKA,gBAAAprB,EAAAsB,EAAA6S,GACAja,KAAA8F,OACA9F,KAAA6tB,SAAA,EACA7tB,KAAAC,KAAA,YACAD,KAAAqH,qBACArH,KAAA+F,KAAA,EACA/F,KAAAoH,OACApH,KAAA4I,SAAA6nB,EACAzwB,KAAAqwB,gBACArwB,KAAA+wB,cACA/wB,KAAAkxB,aACAlxB,KAAAoC,EAAA,GAAA0B,GACAsD,EAAA5E,EAAAL,GACAnC,KAAAqvB,GAAA5jB,GAAAC,QAAA5F,EAAAsB,EAAA5E,EAAAgI,EAAA,IAAAxK,KAAAqH,mBACArH,KAAAsvB,GAAA7jB,GAAAC,QAAA5F,EAAAsB,EAAA5E,EAAA4W,EAAA,IAAApZ,KAAAqH,mBACAD,EAAA5E,EAAA6W,IACArZ,KAAAuvB,GAAA9jB,GAAAC,QAAA5F,EAAAsB,EAAA5E,EAAA6W,EAAA,IAAArZ,KAAAqH,qBAGArH,KAAAwC,EAAAiJ,GAAAC,QAAA5F,EAAAsB,EAAA5E,EAAA,IAAAxC,KAAAqH,mBAEAD,EAAA/E,EACArC,KAAAqC,EAAAoJ,GAAAC,QAAA5F,EAAAsB,EAAA/E,EAAA,EAAAsS,GAAA3U,KAAAqH,mBACaD,EAAAopB,KACbxwB,KAAAwwB,GAAA/kB,GAAAC,QAAA5F,EAAAsB,EAAAopB,GAAA,EAAA7b,GAAA3U,KAAAqH,mBACArH,KAAAuwB,GAAA9kB,GAAAC,QAAA5F,EAAAsB,EAAAmpB,GAAA,EAAA5b,GAAA3U,KAAAqH,mBACArH,KAAA8vB,GAAArkB,GAAAC,QAAA5F,EAAAsB,EAAA0oB,GAAA,EAAAnb,GAAA3U,KAAAqH,mBACArH,KAAA4vB,GAAAnkB,GAAAC,QAAA5F,EAAAsB,EAAAwoB,GAAA,EAAAjb,GAAA3U,KAAAqH,mBAEArH,KAAA4vB,GAAAnC,IAAA,GAEArmB,EAAA8oB,KACAlwB,KAAAkwB,GAAAzkB,GAAAC,QAAA5F,EAAAsB,EAAA8oB,GAAA,EAAAvb,GAAA3U,KAAAqH,mBACArH,KAAAowB,GAAA3kB,GAAAC,QAAA5F,EAAAsB,EAAAgpB,GAAA,EAAAzb,GAAA3U,KAAAqH,oBAEAD,EAAAZ,IACAxG,KAAAwG,EAAAiF,GAAAC,QAAA5F,EAAAsB,EAAAZ,EAAA,IAAAxG,KAAAqH,oBAEAD,EAAAjF,IACAnC,KAAAmC,EAAAsJ,GAAAC,QAAA5F,EAAAsB,EAAAjF,EAAA,MAAAnC,KAAAqH,oBAEAD,EAAAxD,EACA5D,KAAA4D,EAAA6H,GAAAC,QAAA5F,EAAAsB,EAAAxD,EAAA,MAAA5D,KAAAqH,mBAEArH,KAAA4D,GAA0BmC,KAAA,EAAA3D,EAAA,GAE1BpC,KAAAqH,kBAAA5F,OACAwY,EAAA9Y,KAAAnB,OAEAA,KAAAwG,GACAxG,KAAAoC,EAAAqU,WAAAzW,KAAAwG,EAAApE,EAAA,IAAApC,KAAAwG,EAAApE,EAAA,GAAApC,KAAAwG,EAAApE,EAAA,IAEApC,KAAAmC,GACAnC,KAAAoC,EAAAiU,MAAArW,KAAAmC,EAAAC,EAAA,GAAApC,KAAAmC,EAAAC,EAAA,GAAApC,KAAAmC,EAAAC,EAAA,IAEApC,KAAAkwB,IACAlwB,KAAAoC,EAAAgU,cAAApW,KAAAkwB,GAAA9tB,EAAApC,KAAAowB,GAAAhuB,GAEApC,KAAAqC,EACArC,KAAAoC,EAAA+S,QAAAnV,KAAAqC,EAAAD,GAEApC,KAAAoC,EAAAwT,SAAA5V,KAAA8vB,GAAA1tB,GAAAuT,QAAA3V,KAAAuwB,GAAAnuB,GAAAsT,QAAA1V,KAAAwwB,GAAApuB,GAAAwT,SAAA5V,KAAA4vB,GAAAxtB,EAAA,IAAAuT,QAAA3V,KAAA4vB,GAAAxtB,EAAA,IAAAsT,QAAA1V,KAAA4vB,GAAAxtB,EAAA,IAEApC,KAAAoH,KAAA5E,EAAAL,EACAiF,EAAA5E,EAAA6W,EACArZ,KAAAoC,EAAAqU,UAAAzW,KAAAqvB,GAAAjtB,EAAApC,KAAAsvB,GAAAltB,GAAApC,KAAAuvB,GAAAntB,GAEApC,KAAAoC,EAAAqU,UAAAzW,KAAAqvB,GAAAjtB,EAAApC,KAAAsvB,GAAAltB,EAAA,GAGApC,KAAAoC,EAAAqU,UAAAzW,KAAAwC,EAAAJ,EAAA,GAAApC,KAAAwC,EAAAJ,EAAA,IAAApC,KAAAwC,EAAAJ,EAAA,KAGAgC,OAAA+sB,eAAAnxB,KAAA,YAAqDmgB,IAAAgP,IACrD/qB,OAAA+sB,eAAAnxB,KAAA,aAAsDmgB,IAAAqP,IACtDprB,OAAA+sB,eAAAnxB,KAAA,aAAsDmgB,IAAAsP,IACtDrrB,OAAA+sB,eAAAnxB,KAAA,eAAwDmgB,IAAAwP,IACxDvrB,OAAA+sB,eAAAnxB,KAAA,eAAwDmgB,IAAAuP,IACxDtrB,OAAA+sB,eAAAnxB,KAAA,YAAqDmgB,IAAA0P,IACrDzrB,OAAA+sB,eAAAnxB,KAAA,SAAkDmgB,IAAA4P,IAClD3rB,OAAA+sB,eAAAnxB,KAAA,WAAoDmgB,IAAA6P,IACpD5rB,OAAA+sB,eAAAnxB,KAAA,QAAiDmgB,IAAA8P,IACjD7rB,OAAA+sB,eAAAnxB,KAAA,YAAqDmgB,IAAAgQ,QAwCrDiB,EAAA,WAEA,QAAAxoB,GAAAyoB,GAIA,GAHArxB,KAAAuM,KAAA3D,WACA5I,KAAAsxB,MAAA,EACAtxB,KAAAuxB,MAAA,EACAvxB,KAAAuM,KAAAxG,KAAAsrB,EAAA,CACA,GAAA9vB,GACA4sB,EAAAjvB,EADAsC,EAAA,EAAAxB,KAAAoH,KAAA5E,CAEA,KAAAjB,EAAA,EAAwBA,EAAAC,EAAMD,GAAA,EAC9B4sB,EAAA5sB,EAAA,aACArC,EAAAF,KAAAC,MAAAe,KAAAuM,KAAAnK,EAAAb,GAAA4sB,GACAnuB,KAAAH,EAAA0B,KAAArC,IACAc,KAAAH,EAAA0B,GAAArC,EACAc,KAAAsxB,MAAA,EAGA,IAAAtxB,KAAA4D,EAAAnC,OAEA,IADAD,EAAAxB,KAAAuM,KAAAnK,EAAAX,OACAF,EAAA,EAAAvB,KAAAoH,KAAA5E,EAAwCjB,EAAAC,EAAMD,GAAA,EAC9C4sB,EAAA5sB,EAAA,WACArC,EAAAqC,EAAA,KAAAvC,KAAAC,MAAA,IAAAe,KAAAuM,KAAAnK,EAAAb,IAAAvB,KAAAuM,KAAAnK,EAAAb,GACAvB,KAAA4D,EAAArC,EAAA,EAAAvB,KAAAoH,KAAA5E,KAAAtD,IACAc,KAAA4D,EAAArC,EAAA,EAAAvB,KAAAoH,KAAA5E,GAAAtD,EACAc,KAAAuxB,MAAA,IAQA,QAAAC,GAAA1rB,EAAAsB,EAAA6S,GACAja,KAAAuM,KAAAb,EAAA5F,EAAAsB,EAAA8D,EAAA,WACAlL,KAAAoH,OACApH,KAAAkL,EAAAlL,KAAAuM,KAAArB,EACAlL,KAAAH,EAAAsF,MAAAC,MAAA,MAAuC3D,OAAA,EAAA2F,EAAA5E,GACvC,IAAAivB,GAAArqB,EAAA8D,IAAA,GAAA/I,EAAAiF,EAAA8D,IAAA,GAAA/I,EAAAV,OAAA,EAAA2F,EAAA5E,EAAA4E,EAAA8D,IAAAzJ,OAAA,EAAA2F,EAAA5E,CACAxC,MAAA4D,EAAAuB,MAAAC,MAAA,MAAuC3D,OAAAgwB,IACvCzxB,KAAAsxB,MAAA,EACAtxB,KAAAuxB,MAAA,EACAvxB,KAAA4I,WACA5I,KAAAuM,KAAArB,GACA+O,EAAA9Y,KAAAnB,MAEAA,KAAA4I,UAAA,GAGA,gBAAA9C,EAAAsB,EAAA6S,GACA,UAAAuX,GAAA1rB,EAAAsB,EAAA6S,OAOA+U,EAAA,WAEA,QAAAyB,GAAAY,GACA,GAAA9vB,GAAA,EAAAC,EAAAxB,KAAA0xB,UAAAjwB,MAEA,IAAAzB,KAAA8F,KAAAqD,WAAA0kB,UAAA7tB,KAAA6tB,SAAAwD,EAAA,CAKA,IAFArxB,KAAA+F,KAAA,EACA/F,KAAA6tB,QAAA7tB,KAAA8F,KAAAqD,WAAA0kB,QACAtsB,EAAAC,GAAA,CACA,GAAAxB,KAAA0xB,UAAAnwB,GAAAiB,EAAAuD,IAAA,CACA/F,KAAA+F,KAAA,CACA,OAEAxE,GAAA,EAEA,GAAAvB,KAAA+F,KAAAsrB,EAIA,IAHA,QAAArxB,KAAAmS,WACAnS,KAAA2xB,UAAA,IAEApwB,EAAA,EAAwBA,EAAAC,EAAMD,GAAA,EAC9B,KAAAvB,KAAA0xB,UAAAnwB,GAAA3B,EACA,QAAAI,KAAAmS,SACAnS,KAAA2xB,WAAA,IAAA3xB,KAAA0xB,UAAAnwB,GAAAiB,EAAAJ,EAEApC,KAAA2xB,UAAApwB,GAAAvB,KAAA0xB,UAAAnwB,GAAAiB,EAAAJ,EAGApC,KAAA4xB,WAAA5xB,KAAA0xB,UAAAnwB,GAAAiB,EAAAJ,GAMA,gBAAA0D,EAAAsB,EAAA+K,EAAA9K,GACArH,KAAA8F,OACA9F,KAAA6tB,SAAA,EACA7tB,KAAA0xB,UAAA,GAAAvsB,OAAAiC,EAAA3F,QACAzB,KAAAmS,WACAnS,KAAA+F,KAAA,EACA/F,KAAAkL,GAAA,EACA,QAAAlL,KAAAmS,SACAnS,KAAA2xB,UAAA,GAGA3xB,KAAA2xB,UAAA,GAAAxsB,OAAAiC,EAAA3F,OAAA,GAEAzB,KAAA4xB,WAAA,CACA,IAAArwB,GAAAgL,EAAA/K,EAAA4F,EAAA3F,MACA,KAAAF,EAAA,EAAoBA,EAAAC,EAAMD,GAAA,EAC1BgL,EAAAd,GAAAC,QAAA5F,EAAAsB,EAAA7F,GAAAa,EAAA,IAAAiF,GACArH,KAAAkL,IAAAqB,EAAArB,GAAAlL,KAAAkL,EACAlL,KAAA0xB,UAAAnwB,IAAqC3B,EAAAwH,EAAA7F,GAAA3B,EAAA4C,EAAA+J,EAErCvM,MAAA4I,SAAA6nB,EACAzwB,KAAAkL,EACA7D,EAAAlG,KAAAnB,MAEAA,KAAA4I,UAAA,OAUAsmB,EAAA,WAIA,QAAA2C,GAAAC,GAEA,GADA9xB,KAAA+F,IAAA+rB,IAAA,EACA9xB,KAAAqH,kBAAA5F,OAAA,CACA,GAAAF,GAAAC,EAAAxB,KAAAqH,kBAAA5F,MACA,KAAAF,EAAA,EAAwBA,EAAAC,EAAMD,GAAA,EAC9BvB,KAAAqH,kBAAA9F,GAAAqH,WACA5I,KAAAqH,kBAAA9F,GAAAwE,MACA/F,KAAA+F,KAAA,GAIA,GAAAgsB,GAAA/xB,KAAA8F,KAAAksB,aAAAvqB,YAAAzH,KAAA8F,KAAAksB,aAAAvqB,YAAAO,EAAAvG,OAAA,CACAqwB,IAAA,IAAA9xB,KAAAoH,KAAA/E,IACArC,KAAAwW,EAAApU,EAAA2vB,EAEA,IAAAE,GAAA,IAAAjyB,KAAAoH,KAAA/E,EAAA,MAAA0vB,EACAnuB,EAAA5D,KAAA4D,EAAAxB,EAAA6vB,EACA9vB,EAAAnC,KAAAmC,EAAAC,EAAA6vB,EAAAruB,EACA4S,EAAAxW,KAAAwW,EAAApU,EAAA6vB,EAAAruB,CACA,IAAAzB,EAAAqU,EAAA,CACA,GAAA0b,GAAA/vB,CACAA,GAAAqU,EACAA,EAAA0b,EAEAlyB,KAAAmyB,OAAAhwB,EACAnC,KAAAoyB,OAAA5b,EAGA,QAAA6b,GAAAzF,GAEA,GAAA0F,GAAAxU,GAAAC,gBAAA/d,KAAAuyB,GAAAnwB,EAAA,QAAApC,KAAAwyB,GAAApwB,EAAA,OAAA+d,IACAgO,EAAA,EACAhsB,EAAAnC,KAAAmyB,OACA3b,EAAAxW,KAAAoyB,OACAnyB,EAAAD,KAAAoH,KAAAqmB,EACA,OAAAxtB,EAEAkuB,EADA3X,IAAArU,EACAyqB,GAAApW,EAAA,IAEA3T,EAAA,EAAAC,EAAA,IAAA0T,EAAArU,IAAAyqB,EAAAzqB,IAAAqU,EAAArU,GAAA,IAEAgsB,EAAAmE,EAAAnE,OACa,OAAAluB,EAEbkuB,EADA3X,IAAArU,EACAyqB,GAAApW,EAAA,IAEA,EAAA3T,EAAA,EAAAC,EAAA,IAAA0T,EAAArU,IAAAyqB,EAAAzqB,IAAAqU,EAAArU,GAAA,IAGAgsB,EAAAmE,EAAAnE,OACa,OAAAluB,EACbuW,IAAArU,EACAgsB,EAAA,GAEAA,EAAAtrB,EAAA,EAAAC,EAAA,IAAA0T,EAAArU,IAAAyqB,EAAAzqB,IAAAqU,EAAArU,GAAA,IACAgsB,EAAA,GACAA,GAAA,EAEAA,EAAA,KAAAA,EAAA,KAGAA,EAAAmE,EAAAnE,OACa,OAAAluB,EAAA,CACb,GAAAuW,IAAArU,EACAgsB,EAAA,MACiB,CACjB,GAAAsE,GAAAjc,EAAArU,CAGAyqB,GAAA9pB,EAAAD,EAAA,EAAA+pB,EAAA,GAAAzqB,GAAAqU,EAAArU,EACA,IAAAqI,IAAAioB,EAAA,EAAA7F,EACApmB,EAAAisB,EAAA,CACAtE,GAAAnvB,KAAAmV,KAAA,EAAA3J,KAAAhE,MAEA2nB,EAAAmE,EAAAnE,OACa,IAAAluB,GACbuW,IAAArU,EACAgsB,EAAA,GAEAvB,EAAA9pB,EAAAD,EAAA,EAAA+pB,EAAA,GAAAzqB,GAAAqU,EAAArU,GACAgsB,GAAA,EAAAnvB,KAAAsW,IAAAtW,KAAA4V,GAAA,EAAA5V,KAAA4V,GAAA,GAAA4B,EAAArU,KAAA,GAMAgsB,EAAAmE,EAAAnE,KAEAvB,GAAAjqB,EAAAR,KAEAgsB,EADAvB,EAAAzqB,EAAA,EACA,GAAAA,EAAAyqB,GAEA/pB,EAAA,EAAAC,EAAA0T,EAAAoW,EAAA,KAGAuB,EAAAmE,EAAAnE,GAEA,OAAAA,GAAAnuB,KAAAwG,EAAApE,EApGA,GAAAS,GAAA7D,KAAA6D,IACAC,EAAA9D,KAAA8D,IACAH,EAAA3D,KAAA2D,KAqGA,iBAAAmD,EAAAsB,EAAA6S,GACAja,KAAA+F,KAAA,EACA/F,KAAAkL,GAAA,EACAlL,KAAAoH,OACApH,KAAAqH,qBACArH,KAAA4I,SAAAipB,EACA7xB,KAAAqyB,UACAryB,KAAA8F,OACA9F,KAAAuL,KAAAzF,EAAAyF,KACAvL,KAAAmyB,OAAA,EACAnyB,KAAAoyB,OAAA,EACApyB,KAAAmC,EAAAsJ,GAAAC,QAAA5F,EAAAsB,EAAAjF,IAA6D+I,EAAA,GAAI,IAAAlL,KAAAqH,mBAEjErH,KAAAwW,EADA,KAAApP,GACAqE,GAAAC,QAAA5F,EAAAsB,EAAAoP,EAAA,IAAAxW,KAAAqH,oBAE0BjF,EAAA,KAE1BpC,KAAA4D,EAAA6H,GAAAC,QAAA5F,EAAAsB,EAAAxD,IAA6DsH,EAAA,GAAI,IAAAlL,KAAAqH,mBACjErH,KAAAwyB,GAAA/mB,GAAAC,QAAA5F,EAAAsB,EAAAorB,KAA+DtnB,EAAA,GAAI,IAAAlL,KAAAqH,mBACnErH,KAAAuyB,GAAA9mB,GAAAC,QAAA5F,EAAAsB,EAAAmrB,KAA+DrnB,EAAA,GAAI,IAAAlL,KAAAqH,mBACnErH,KAAAwG,EAAAiF,GAAAC,QAAA5F,EAAAsB,EAAAZ,EAAA,MAAAxG,KAAAqH,mBACArH,KAAAqH,kBAAA5F,OACAwY,EAAA9Y,KAAAnB,MAEAA,KAAA4I,cAeA,QALA8C,UACAqjB,cACAE,sBACAmC,qBAaApsB,GAAAV,UAAAouB,YAAA,SAAA3P,EAAAvhB,GACAxB,KAAAH,EAAAkjB,EACA/iB,KAAA2yB,UAAAnxB,EAEA,KADA,GAAAD,GAAA,EACAA,EAAAC,GACAxB,KAAAoC,EAAAb,GAAA2Y,GAAAC,WACAna,KAAA4D,EAAArC,GAAA2Y,GAAAC,WACAna,KAAAuB,KAAA2Y,GAAAC,WACA5Y,GAAA,GAIAyD,EAAAV,UAAAquB,UAAA,SAAAnxB,GACA,KAAAxB,KAAAkF,WAAA1D,GACAxB,KAAA4yB,mBAEA5yB,MAAAiF,QAAAzD,GAGAwD,EAAAV,UAAAsuB,kBAAA,WACA5yB,KAAAoC,EAAApC,KAAAoC,EAAAywB,OAAA1tB,MAAAC,MAAA,MAA0C3D,OAAAzB,KAAAkF,cAC1ClF,KAAAuB,EAAAvB,KAAAuB,EAAAsxB,OAAA1tB,MAAAC,MAAA,MAA0C3D,OAAAzB,KAAAkF,cAC1ClF,KAAA4D,EAAA5D,KAAA4D,EAAAivB,OAAA1tB,MAAAC,MAAA,MAA0C3D,OAAAzB,KAAAkF,cAC1ClF,KAAAkF,YAAA,GAGAF,EAAAV,UAAAwuB,QAAA,SAAAtoB,EAAA4O,EAAAnZ,EAAA8yB,EAAA7U,GACA,GAAAjE,EAKA,QAJAja,KAAAiF,QAAAjG,KAAA6D,IAAA7C,KAAAiF,QAAA8tB,EAAA,GACA/yB,KAAAiF,SAAAjF,KAAAkF,YACAlF,KAAA4yB,oBAEA3yB,GACA,QACAga,EAAAja,KAAAoC,CACA,MACA,SACA6X,EAAAja,KAAAuB,CACA,MACA,SACA0Y,EAAAja,KAAA4D,IAGAqW,EAAA8Y,IAAA9Y,EAAA8Y,KAAA7U,KACAjE,EAAA8Y,GAAA7Y,GAAAC,YAEAF,EAAA8Y,GAAA,GAAAvoB,EACAyP,EAAA8Y,GAAA,GAAA3Z,GAGApU,EAAAV,UAAA0uB,YAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAP,EAAA7U,GACAle,KAAA8yB,QAAAG,EAAAC,EAAA,IAAAH,EAAA7U,GACAle,KAAA8yB,QAAAK,EAAAC,EAAA,IAAAL,EAAA7U,GACAle,KAAA8yB,QAAAO,EAAAC,EAAA,IAAAP,EAAA7U,GAEA,IAAA1R,IAAA,WAIA,QAAA+mB,GAAAnqB,EAAAgjB,EAAAC,EAAAmH,GACA,GAAAC,GAAAC,EAAAC,CACA,IAAAvqB,EAAApJ,KAAA0sB,UAAA,GAAA5sB,EAAAE,KAAAwsB,WACAiH,EAAAzzB,KAAA0sB,UAAA,GAAAvqB,EAAA,GACAwxB,GAAA,EACAvH,EAAA,MACS,IAAAhjB,GAAApJ,KAAA0sB,UAAA1sB,KAAA0sB,UAAAjrB,OAAA,GAAA3B,EAAAE,KAAAwsB,WAETiH,EADA,IAAAzzB,KAAA0sB,UAAA1sB,KAAA0sB,UAAAjrB,OAAA,GAAAS,EACAlC,KAAA0sB,UAAA1sB,KAAA0sB,UAAAjrB,OAAA,GAAAU,EAAA,GAEAnC,KAAA0sB,UAAA1sB,KAAA0sB,UAAAjrB,OAAA,GAAA+U,EAAA,GAEAmd,GAAA,MACS,CAGT,IAFA,GACAjO,GAAA+G,EAAA3kB,EAAAsC,EAAAc,EAAAgb,EADA3kB,EAAA6qB,EACA5qB,EAAAxB,KAAA0sB,UAAAjrB,OAAA,EAAA3C,GAAA,EACAA,IACA4mB,EAAA1lB,KAAA0sB,UAAAnrB,GACAkrB,EAAAzsB,KAAA0sB,UAAAnrB,EAAA,KACAkrB,EAAA3sB,EAAAE,KAAAwsB,WAAApjB,KAGA7H,EAAAC,EAAA,EACAD,GAAA,EAEAzC,GAAA,CAGA60B,GAAA,IAAAjO,EAAAxjB,EACAkqB,EAAA7qB,CAEA,IAAAuiB,EACA,KAAA6P,EAAA,CACA,GAAAvqB,GAAAqjB,EAAA3sB,EAAAE,KAAAwsB,WACA1I,EAAA,MACiB,IAAA1a,EAAAsc,EAAA5lB,EAAAE,KAAAwsB,WACjB1I,EAAA,MACiB,CACjB,GAAA6I,EACAjH,GAAAoH,OACAH,EAAAjH,EAAAoH,QAEAH,EAAA7O,GAAAC,gBAAA2H,EAAA9hB,EAAA4G,EAAAkb,EAAA9hB,EAAAwV,EAAAsM,EAAAnkB,EAAAiJ,EAAAkb,EAAAnkB,EAAA6X,GAAA+G,IACAuF,EAAAoH,OAAAH,GAEA7I,EAAA6I,GAAAvjB,GAAAsc,EAAA5lB,EAAAE,KAAAwsB,cAAAC,EAAA3sB,EAAAE,KAAAwsB,YAAA9G,EAAA5lB,EAAAE,KAAAwsB,cAEAkH,EAAAhO,EAAAlP,EAAA,GAEAid,EAAA/N,EAAAvjB,EAAA,GAEAiI,EAAAiiB,EAAApnB,QACAihB,EAAAuN,EAAAlyB,EAAA,GAAAE,MACA,IACAmyB,GADAC,GAAA,CAEA,KAAA/rB,EAAA,EAAgBA,EAAAsC,EAAOtC,GAAA,EACvB,IAAAoD,EAAA,EAAoBA,EAAAgb,EAAOhb,GAAA,EAC3ByoB,GACAC,EAAAH,EAAAlyB,EAAAuG,GAAAoD,GACAmhB,EAAA9qB,EAAAuG,GAAAoD,KAAA0oB,IACAvH,EAAA9qB,EAAAuG,GAAAoD,GAAA0oB,EACAJ,IACAxzB,KAAAsH,GAAA/F,EAAAuG,GAAAoD,GAAA0oB,GAEAC,GAAA,GAEAD,EAAAH,EAAA7vB,EAAAkE,GAAAoD,GACAmhB,EAAAzoB,EAAAkE,GAAAoD,KAAA0oB,IACAvH,EAAAzoB,EAAAkE,GAAAoD,GAAA0oB,EACAJ,IACAxzB,KAAAsH,GAAA1D,EAAAkE,GAAAoD,GAAA0oB,GAEAC,GAAA,GAEAD,EAAAH,EAAArxB,EAAA0F,GAAAoD,GACAmhB,EAAAjqB,EAAA0F,GAAAoD,KAAA0oB,IACAvH,EAAAjqB,EAAA0F,GAAAoD,GAAA0oB,EACAJ,IACAxzB,KAAAsH,GAAAlF,EAAA0F,GAAAoD,GAAA0oB,GAEAC,GAAA,KAGAD,EAAAH,EAAAlyB,EAAAuG,GAAAoD,IAAAwoB,EAAAnyB,EAAAuG,GAAAoD,GAAAuoB,EAAAlyB,EAAAuG,GAAAoD,IAAA4Y,EACAuI,EAAA9qB,EAAAuG,GAAAoD,KAAA0oB,IACAvH,EAAA9qB,EAAAuG,GAAAoD,GAAA0oB,EACAJ,IACAxzB,KAAAsH,GAAA/F,EAAAuG,GAAAoD,GAAA0oB,GAEAC,GAAA,GAEAD,EAAAH,EAAA7vB,EAAAkE,GAAAoD,IAAAwoB,EAAA9vB,EAAAkE,GAAAoD,GAAAuoB,EAAA7vB,EAAAkE,GAAAoD,IAAA4Y,EACAuI,EAAAzoB,EAAAkE,GAAAoD,KAAA0oB,IACAvH,EAAAzoB,EAAAkE,GAAAoD,GAAA0oB,EACAJ,IACAxzB,KAAAsH,GAAA1D,EAAAkE,GAAAoD,GAAA0oB,GAEAC,GAAA,GAEAD,EAAAH,EAAArxB,EAAA0F,GAAAoD,IAAAwoB,EAAAtxB,EAAA0F,GAAAoD,GAAAuoB,EAAArxB,EAAA0F,GAAAoD,IAAA4Y,EACAuI,EAAAjqB,EAAA0F,GAAAoD,KAAA0oB,IACAvH,EAAAjqB,EAAA0F,GAAAoD,GAAA0oB,EACAJ,IACAxzB,KAAAsH,GAAAlF,EAAA0F,GAAAoD,GAAA0oB,GAEAC,GAAA,GAQA,OAHAA,KACAxH,EAAAxsB,EAAA4zB,EAAA5zB,IAGAusB,iBACAyH,eAIA,QAAAC,KACA,GAAA9zB,KAAA8F,KAAAqD,WAAA0kB,UAAA7tB,KAAA6tB,QAAA,CAGA7tB,KAAA+F,KAAA,CACA,IAAAqD,GAAApJ,KAAAuL,KAAArC,cAAAlJ,KAAAwsB,WACAjC,EAAAvqB,KAAA0sB,UAAA,GAAA5sB,EAAAE,KAAAwsB,WACAsB,EAAA9tB,KAAA0sB,UAAA1sB,KAAA0sB,UAAAjrB,OAAA,GAAA3B,EAAAE,KAAAwsB,UACA,IAAAxsB,KAAAitB,YAAAe,KAAAhuB,KAAAitB,UAAA1C,GAAAnhB,EAAAmhB,GAAAvqB,KAAAitB,UAAAa,GAAA1kB,EAAA0kB,GAAA,CAEA,GAAAvsB,GAAAvB,KAAAitB,UAAA7jB,EAAApJ,KAAA+zB,WAAA,EACA7F,EAAAluB,KAAAuzB,iBAAAnqB,EAAA7H,EAAAvB,KAAAoC,GAAA,EAEApC,MAAA+zB,WAAA7F,EAAA9B,eACApsB,KAAA+F,IAAAmoB,EAAA2F,YACA3F,EAAA2F,cACA7zB,KAAAsD,MAAAtD,KAAAg0B,sBAGAh0B,KAAAitB,UAAA7jB,EACApJ,KAAA6tB,QAAA7tB,KAAA8F,KAAAqD,WAAA0kB,SAGA,QAAAoG,KACA,MAAAj0B,MAAAoC,EAGA,QAAA8xB,KACAl0B,KAAAsD,MAAAtD,KAAAg0B,qBACAh0B,KAAAkL,IACAlL,KAAA+F,KAAA,GAIA,QAAAouB,GAAAruB,EAAAsB,EAAAnH,GACAD,KAAAo0B,cAAA,EACAp0B,KAAAuL,KAAAzF,EAAAyF,KACAvL,KAAAkL,GAAA,EACAlL,KAAA+F,KAAA,CACA,IAAAkiB,GAAA,IAAAhoB,EAAAmH,EAAAsS,GAAAxO,EAAA9D,EAAA0f,GAAA5b,CACAlL,MAAAoC,EAAAiyB,GAAArb,MAAAiP,GACAjoB,KAAAsH,GAAA+sB,GAAArb,MAAAhZ,KAAAoC,GACApC,KAAAg0B,qBAAAM,GAAAC,qBACAv0B,KAAAsD,MAAAtD,KAAAg0B,qBACAh0B,KAAAsD,MAAAkxB,SAAAx0B,KAAAoC,GACApC,KAAAiV,MAAAif,EAKA,QAAAO,GAAA3uB,EAAAsB,EAAAnH,GACAD,KAAAo0B,cAAA,EACAp0B,KAAAuL,KAAAzF,EAAAyF,KACAvL,KAAA8F,OACA9F,KAAAwsB,WAAA1mB,EAAAsB,KAAAwnB,GACA5uB,KAAA+zB,WAAA,EACA/zB,KAAA0sB,UAAA,IAAAzsB,EAAAmH,EAAAsS,GAAAxO,EAAA9D,EAAA0f,GAAA5b,EACAlL,KAAAkL,GAAA,EACAlL,KAAAuH,IAAA,CACA,IAAA/F,GAAAxB,KAAA0sB,UAAA,GAAAvqB,EAAA,GAAAZ,EAAAE,MACAzB,MAAA0sB,UAAA,GAAAvqB,EAAA,GAAAZ,EAAA,GAAAE,MACAzB,MAAAoC,EAAAiyB,GAAAK,WACA10B,KAAAoC,EAAAswB,YAAA1yB,KAAA0sB,UAAA,GAAAvqB,EAAA,GAAAtC,EAAA2B,GACAxB,KAAAsH,GAAA+sB,GAAArb,MAAAhZ,KAAAoC,GACApC,KAAAg0B,qBAAAM,GAAAC,qBACAv0B,KAAAsD,MAAAtD,KAAAg0B,qBACAh0B,KAAAsD,MAAAkxB,SAAAx0B,KAAAoC,GACApC,KAAAitB,UAAAe,EACAhuB,KAAAiV,MAAAif,EA0UA,QAAAznB,GAAA3G,EAAAsB,EAAAnH,EAAAga,GACA,GAAA1N,EACA,QAAAtM,GAAA,IAAAA,EAAA,CACA,GAAA00B,GAAA,IAAA10B,EAAAmH,EAAAsS,GAAAtS,EAAA0f,GACA8N,EAAAD,EAAAzpB,CAEAqB,GADA,IAAAooB,EAAAnuB,GAAAouB,EAAAnzB,OACA,GAAAgzB,GAAA3uB,EAAAsB,EAAAnH,GAEA,GAAAk0B,GAAAruB,EAAAsB,EAAAnH,OAES,KAAAA,EACTsM,EAAA,GAAAsoB,GAAA/uB,EAAAsB,GACS,IAAAnH,EACTsM,EAAA,GAAAuoB,GAAAhvB,EAAAsB,GACS,IAAAnH,IACTsM,EAAA,GAAAwoB,GAAAjvB,EAAAsB,GAKA,OAHAmF,GAAArB,GACA+O,EAAA9Y,KAAAoL,GAEAA,EAGA,QAAAyoB,KACA,MAAAb,GAGA,QAAAc,KACA,MAAAR,GAniBA,GAAAzG,IAAA,MAwKAmG,GAAA7vB,UAAAivB,mBACAY,EAAA7vB,UAAAsE,SAAAqrB,EAsBAQ,EAAAnwB,UAAAsE,SAAAkrB,EACAW,EAAAnwB,UAAAivB,kBAEA,IAAAuB,GAAA,WAIA,QAAAI,KACA,GAAAC,GAAAn1B,KAAAwC,EAAAJ,EAAA,GAAAyW,EAAA7Y,KAAAwC,EAAAJ,EAAA,GAAAgzB,EAAAp1B,KAAAmC,EAAAC,EAAA,KAAAizB,EAAAr1B,KAAAmC,EAAAC,EAAA,IACA,KAAApC,KAAAD,GACAC,KAAAoC,IAAA,MAAA+yB,EACAn1B,KAAAoC,IAAA,MAAAyW,EAAAwc,EACAr1B,KAAAoC,IAAA,MAAA+yB,EAAAC,EACAp1B,KAAAoC,IAAA,MAAAyW,EACA7Y,KAAAoC,IAAA,MAAA+yB,EACAn1B,KAAAoC,IAAA,MAAAyW,EAAAwc,EACAr1B,KAAAoC,IAAA,MAAA+yB,EAAAC,EACAp1B,KAAAoC,IAAA,MAAAyW,EACA7Y,KAAAoC,EAAAb,EAAA,MAAA4zB,EAAAC,EAAAE,EACAt1B,KAAAoC,EAAAb,EAAA,MAAAsX,EAAAwc,EACAr1B,KAAAoC,EAAAb,EAAA,MAAA4zB,EAAAC,EACAp1B,KAAAoC,EAAAb,EAAA,MAAAsX,EAAAwc,EAAAC,EACAt1B,KAAAoC,EAAAb,EAAA,MAAA4zB,EAAAC,EAAAE,EACAt1B,KAAAoC,EAAAb,EAAA,MAAAsX,EAAAwc,EACAr1B,KAAAoC,EAAAb,EAAA,MAAA4zB,EAAAC,EACAp1B,KAAAoC,EAAAb,EAAA,MAAAsX,EAAAwc,EAAAC,EACAt1B,KAAAoC,EAAAwB,EAAA,MAAAuxB,EAAAC,EAAAE,EACAt1B,KAAAoC,EAAAwB,EAAA,MAAAiV,EAAAwc,EACAr1B,KAAAoC,EAAAwB,EAAA,MAAAuxB,EAAAC,EACAp1B,KAAAoC,EAAAwB,EAAA,MAAAiV,EAAAwc,EAAAC,EACAt1B,KAAAoC,EAAAwB,EAAA,MAAAuxB,EAAAC,EAAAE,EACAt1B,KAAAoC,EAAAwB,EAAA,MAAAiV,EAAAwc,EACAr1B,KAAAoC,EAAAwB,EAAA,MAAAuxB,EAAAC,EACAp1B,KAAAoC,EAAAwB,EAAA,MAAAiV,EAAAwc,EAAAC,IAEAt1B,KAAAoC,IAAA,MAAA+yB,EACAn1B,KAAAoC,IAAA,MAAAyW,EAAAwc,EACAr1B,KAAAoC,IAAA,MAAA+yB,EAAAC,EACAp1B,KAAAoC,IAAA,MAAAyW,EACA7Y,KAAAoC,IAAA,MAAA+yB,EACAn1B,KAAAoC,IAAA,MAAAyW,EAAAwc,EACAr1B,KAAAoC,IAAA,MAAA+yB,EAAAC,EACAp1B,KAAAoC,IAAA,MAAAyW,EACA7Y,KAAAoC,EAAAb,EAAA,MAAA4zB,EAAAC,EAAAE,EACAt1B,KAAAoC,EAAAb,EAAA,MAAAsX,EAAAwc,EACAr1B,KAAAoC,EAAAb,EAAA,MAAA4zB,EAAAC,EACAp1B,KAAAoC,EAAAb,EAAA,MAAAsX,EAAAwc,EAAAC,EACAt1B,KAAAoC,EAAAb,EAAA,MAAA4zB,EAAAC,EAAAE,EACAt1B,KAAAoC,EAAAb,EAAA,MAAAsX,EAAAwc,EACAr1B,KAAAoC,EAAAb,EAAA,MAAA4zB,EAAAC,EACAp1B,KAAAoC,EAAAb,EAAA,MAAAsX,EAAAwc,EAAAC,EACAt1B,KAAAoC,EAAAwB,EAAA,MAAAuxB,EAAAC,EAAAE,EACAt1B,KAAAoC,EAAAwB,EAAA,MAAAiV,EAAAwc,EACAr1B,KAAAoC,EAAAwB,EAAA,MAAAuxB,EAAAC,EACAp1B,KAAAoC,EAAAwB,EAAA,MAAAiV,EAAAwc,EAAAC,EACAt1B,KAAAoC,EAAAwB,EAAA,MAAAuxB,EAAAC,EAAAE,EACAt1B,KAAAoC,EAAAwB,EAAA,MAAAiV,EAAAwc,EACAr1B,KAAAoC,EAAAwB,EAAA,MAAAuxB,EAAAC,EACAp1B,KAAAoC,EAAAwB,EAAA,MAAAiV,EAAAwc,EAAAC,GAIA,QAAA7E,GAAArnB,GACA,GAAA7H,GAAAC,EAAAxB,KAAAqH,kBAAA5F,MACA,IAAAzB,KAAA8F,KAAAqD,WAAA0kB,UAAA7tB,KAAA6tB,QAAA,CAMA,IAHA7tB,KAAA+F,KAAA,EACA/F,KAAA6tB,QAAA7tB,KAAA8F,KAAAqD,WAAA0kB,QAEAtsB,EAAA,EAAoBA,EAAAC,EAAMD,GAAA,EAC1BvB,KAAAqH,kBAAA9F,GAAAqH,SAAAQ,GACApJ,KAAAqH,kBAAA9F,GAAAwE,MACA/F,KAAA+F,KAAA,EAGA/F,MAAA+F,KACA/F,KAAAk1B,oBAxEA,GAAAI,GAAAzgB,EA4EA,iBAAA/O,EAAAsB,GAOApH,KAAAoC,EAAAiyB,GAAAK,WACA10B,KAAAoC,EAAAswB,aAAA,KACA1yB,KAAAg0B,qBAAAM,GAAAC,qBACAv0B,KAAAsD,MAAAtD,KAAAg0B,qBACAh0B,KAAAg0B,qBAAAQ,SAAAx0B,KAAAoC,GACApC,KAAAD,EAAAqH,EAAArH,EACAC,KAAAqH,qBACArH,KAAA8F,OACA9F,KAAAuL,KAAAzF,EAAAyF,KACAvL,KAAA6tB,SAAA,EACA7tB,KAAA+F,KAAA,EACA/F,KAAA4I,SAAA6nB,EACAzwB,KAAAk1B,mBACAl1B,KAAAiV,MAAAif,EACAl0B,KAAAwC,EAAAiJ,GAAAC,QAAA5F,EAAAsB,EAAA5E,EAAA,IAAAxC,KAAAqH,mBACArH,KAAAmC,EAAAsJ,GAAAC,QAAA5F,EAAAsB,EAAAjF,EAAA,IAAAnC,KAAAqH,mBACArH,KAAAqH,kBAAA5F,OACAzB,KAAAkL,GAAA,EAEAlL,KAAAk1B,uBAKAH,EAAA,WAEA,QAAAQ,KACA,GAQAh0B,GARAi0B,EAAAx2B,KAAA2D,MAAA3C,KAAA0Z,GAAAtX,GACAgT,EAAA,EAAApW,KAAA4V,GAAA4gB,EAIAC,EAAAz1B,KAAA4vB,GAAAxtB,EACAszB,EAAA11B,KAAA21B,GAAAvzB,EACAwzB,EAAA,EAAA52B,KAAA4V,GAAA6gB,GAAA,EAAAD,GACAK,GAAA72B,KAAA4V,GAAA,EACAwP,EAAA,IAAApkB,KAAAoH,KAAArH,GAAA,GAGA,KAFA81B,GAAA71B,KAAAqC,EAAAD,EACApC,KAAAoC,EAAA6C,QAAA,EACA1D,EAAA,EAAoBA,EAAAi0B,EAASj0B,GAAA,GAC7B,GAAAiJ,GAAAirB,EAAAz2B,KAAAsW,IAAAugB,GACAzc,EAAAqc,EAAAz2B,KAAAwW,IAAAqgB,GACAC,EAAA,IAAAtrB,GAAA,IAAA4O,EAAA,EAAAA,EAAApa,KAAAmV,KAAA3J,IAAA4O,KACA2c,EAAA,IAAAvrB,GAAA,IAAA4O,EAAA,GAAA5O,EAAAxL,KAAAmV,KAAA3J,IAAA4O,IACA5O,KAAAxK,KAAAwC,EAAAJ,EAAA,GACAgX,IAAApZ,KAAAwC,EAAAJ,EAAA,GACApC,KAAAoC,EAAA4wB,YAAAxoB,EAAA4O,EAAA5O,EAAAsrB,EAAAF,EAAAF,EAAAtR,EAAAhL,EAAA2c,EAAAH,EAAAF,EAAAtR,EAAA5Z,EAAAsrB,EAAAF,EAAAF,EAAAtR,EAAAhL,EAAA2c,EAAAH,EAAAF,EAAAtR,EAAA7iB,GAAA,GAIAs0B,GAAAzgB,EAAAgP,EAEApkB,KAAAsD,MAAA7B,OAAA,EACAzB,KAAAsD,MAAA,GAAAtD,KAAAoC,EAGA,QAAA4zB,KACA,GAYAz0B,GAAAk0B,EAAAC,EAAAE,EAZAJ,EAAA,EAAAx2B,KAAA2D,MAAA3C,KAAA0Z,GAAAtX,GACAgT,EAAA,EAAApW,KAAA4V,GAAA4gB,EAIAS,GAAA,EACAC,EAAAl2B,KAAA4vB,GAAAxtB,EACA+zB,EAAAn2B,KAAAo2B,GAAAh0B,EACAi0B,EAAAr2B,KAAA21B,GAAAvzB,EACAk0B,EAAAt2B,KAAAu2B,GAAAn0B,EACAo0B,EAAA,EAAAx3B,KAAA4V,GAAAshB,GAAA,EAAAV,GACAiB,EAAA,EAAAz3B,KAAA4V,GAAAuhB,GAAA,EAAAX,GACAK,GAAA72B,KAAA4V,GAAA,CACAihB,IAAA71B,KAAAqC,EAAAD,CACA,IAAAgiB,GAAA,IAAApkB,KAAAoH,KAAArH,GAAA,GAEA,KADAC,KAAAoC,EAAA6C,QAAA,EACA1D,EAAA,EAAoBA,EAAAi0B,EAASj0B,GAAA,GAC7Bk0B,EAAAQ,EAAAC,EAAAC,EACAT,EAAAO,EAAAI,EAAAC,EACAV,EAAAK,EAAAO,EAAAC,CACA,IAAAjsB,GAAAirB,EAAAz2B,KAAAsW,IAAAugB,GACAzc,EAAAqc,EAAAz2B,KAAAwW,IAAAqgB,GACAC,EAAA,IAAAtrB,GAAA,IAAA4O,EAAA,EAAAA,EAAApa,KAAAmV,KAAA3J,IAAA4O,KACA2c,EAAA,IAAAvrB,GAAA,IAAA4O,EAAA,GAAA5O,EAAAxL,KAAAmV,KAAA3J,IAAA4O,IACA5O,KAAAxK,KAAAwC,EAAAJ,EAAA,GACAgX,IAAApZ,KAAAwC,EAAAJ,EAAA,GACApC,KAAAoC,EAAA4wB,YAAAxoB,EAAA4O,EAAA5O,EAAAsrB,EAAAF,EAAAF,EAAAtR,EAAAhL,EAAA2c,EAAAH,EAAAF,EAAAtR,EAAA5Z,EAAAsrB,EAAAF,EAAAF,EAAAtR,EAAAhL,EAAA2c,EAAAH,EAAAF,EAAAtR,EAAA7iB,GAAA,GAMA00B,KACAJ,GAAAzgB,EAAAgP,GAIA,QAAAqM,KACA,GAAAzwB,KAAA8F,KAAAqD,WAAA0kB,UAAA7tB,KAAA6tB,QAAA,CAGA7tB,KAAA+F,KAAA,EACA/F,KAAA6tB,QAAA7tB,KAAA8F,KAAAqD,WAAA0kB,OACA,IAAAtsB,GAAAC,EAAAxB,KAAAqH,kBAAA5F,MAEA,KAAAF,EAAA,EAAoBA,EAAAC,EAAMD,GAAA,EAC1BvB,KAAAqH,kBAAA9F,GAAAqH,WACA5I,KAAAqH,kBAAA9F,GAAAwE,MACA/F,KAAA+F,KAAA,EAGA/F,MAAA+F,KACA/F,KAAA02B,iBAIA,gBAAA5wB,EAAAsB,GAOApH,KAAAoC,EAAAiyB,GAAAK,WACA10B,KAAAoC,EAAAswB,aAAA,KACA1yB,KAAA8F,OACA9F,KAAAuL,KAAAzF,EAAAyF,KACAvL,KAAAoH,OACApH,KAAA6tB,SAAA,EACA7tB,KAAAD,EAAAqH,EAAArH,EACAC,KAAAqH,qBACArH,KAAA+F,KAAA,EACA/F,KAAA4I,SAAA6nB,EACAzwB,KAAAiV,MAAAif,EACA,IAAA9sB,EAAA2O,IACA/V,KAAAo2B,GAAA3qB,GAAAC,QAAA5F,EAAAsB,EAAAgvB,GAAA,IAAAp2B,KAAAqH,mBACArH,KAAAu2B,GAAA9qB,GAAAC,QAAA5F,EAAAsB,EAAAmvB,GAAA,MAAAv2B,KAAAqH,mBACArH,KAAA02B,cAAAV,GAEAh2B,KAAA02B,cAAAnB,EAEAv1B,KAAA0Z,GAAAjO,GAAAC,QAAA5F,EAAAsB,EAAAsS,GAAA,IAAA1Z,KAAAqH,mBACArH,KAAAwC,EAAAiJ,GAAAC,QAAA5F,EAAAsB,EAAA5E,EAAA,IAAAxC,KAAAqH,mBACArH,KAAAqC,EAAAoJ,GAAAC,QAAA5F,EAAAsB,EAAA/E,EAAA,EAAAsS,GAAA3U,KAAAqH,mBACArH,KAAA4vB,GAAAnkB,GAAAC,QAAA5F,EAAAsB,EAAAwoB,GAAA,IAAA5vB,KAAAqH,mBACArH,KAAA21B,GAAAlqB,GAAAC,QAAA5F,EAAAsB,EAAAuuB,GAAA,MAAA31B,KAAAqH,mBACArH,KAAAg0B,qBAAAM,GAAAC,qBACAv0B,KAAAg0B,qBAAAQ,SAAAx0B,KAAAoC,GACApC,KAAAsD,MAAAtD,KAAAg0B,qBACAh0B,KAAAqH,kBAAA5F,OACAzB,KAAAkL,GAAA,EAEAlL,KAAA02B,oBAKA7B,EAAA,WACA,QAAApE,GAAArnB,GACA,GAAApJ,KAAA8F,KAAAqD,WAAA0kB,UAAA7tB,KAAA6tB,QAAA,CAGA7tB,KAAA+F,KAAA,EACA/F,KAAA6tB,QAAA7tB,KAAA8F,KAAAqD,WAAA0kB,OACA,IAAAtsB,GAAAC,EAAAxB,KAAAqH,kBAAA5F,MAEA,KAAAF,EAAA,EAAoBA,EAAAC,EAAMD,GAAA,EAC1BvB,KAAAqH,kBAAA9F,GAAAqH,SAAAQ,GACApJ,KAAAqH,kBAAA9F,GAAAwE,MACA/F,KAAA+F,KAAA,EAGA/F,MAAA+F,KACA/F,KAAA22B,qBAKA,QAAAA,KACA,GAAAxB,GAAAn1B,KAAAwC,EAAAJ,EAAA,GAAAyW,EAAA7Y,KAAAwC,EAAAJ,EAAA,GAAAw0B,EAAA52B,KAAAmC,EAAAC,EAAA,KAAAwuB,EAAA5wB,KAAAmC,EAAAC,EAAA,KACAnD,EAAAqV,GAAAsiB,EAAAhG,EAAA5wB,KAAAqC,EAAAD,GACAkzB,EAAAr2B,GAAA,EAAA4V,GACA7U,MAAAoC,EAAA6C,QAAA,EAEA,IAAAjF,KAAAD,GAAA,IAAAC,KAAAD,GACAC,KAAAoC,EAAA4wB,YAAAmC,EAAAyB,EAAA/d,EAAA+X,EAAA3xB,EAAAk2B,EAAAyB,EAAA/d,EAAA+X,EAAA3xB,EAAAk2B,EAAAyB,EAAA/d,EAAA+X,EAAA0E,EAAA,MACAt1B,KAAAoC,EAAA4wB,YAAAmC,EAAAyB,EAAA/d,EAAA+X,EAAA3xB,EAAAk2B,EAAAyB,EAAA/d,EAAA+X,EAAA0E,EAAAH,EAAAyB,EAAA/d,EAAA+X,EAAA3xB,EAAA,MACA,IAAAA,GACAe,KAAAoC,EAAA4wB,YAAAmC,EAAAyB,EAAA33B,EAAA4Z,EAAA+X,EAAAuE,EAAAyB,EAAA33B,EAAA4Z,EAAA+X,EAAAuE,EAAAyB,EAAAtB,EAAAzc,EAAA+X,EAAA,MACA5wB,KAAAoC,EAAA4wB,YAAAmC,EAAAyB,EAAA33B,EAAA4Z,EAAA+X,EAAAuE,EAAAyB,EAAAtB,EAAAzc,EAAA+X,EAAAuE,EAAAyB,EAAA33B,EAAA4Z,EAAA+X,EAAA,MACA5wB,KAAAoC,EAAA4wB,YAAAmC,EAAAyB,EAAA/d,EAAA+X,EAAA3xB,EAAAk2B,EAAAyB,EAAA/d,EAAA+X,EAAA3xB,EAAAk2B,EAAAyB,EAAA/d,EAAA+X,EAAA0E,EAAA,MACAt1B,KAAAoC,EAAA4wB,YAAAmC,EAAAyB,EAAA/d,EAAA+X,EAAA3xB,EAAAk2B,EAAAyB,EAAA/d,EAAA+X,EAAA0E,EAAAH,EAAAyB,EAAA/d,EAAA+X,EAAA3xB,EAAA,MACAe,KAAAoC,EAAA4wB,YAAAmC,EAAAyB,EAAA33B,EAAA4Z,EAAA+X,EAAAuE,EAAAyB,EAAA33B,EAAA4Z,EAAA+X,EAAAuE,EAAAyB,EAAAtB,EAAAzc,EAAA+X,EAAA,MACA5wB,KAAAoC,EAAA4wB,YAAAmC,EAAAyB,EAAA33B,EAAA4Z,EAAA+X,EAAAuE,EAAAyB,EAAAtB,EAAAzc,EAAA+X,EAAAuE,EAAAyB,EAAA33B,EAAA4Z,EAAA+X,EAAA,QAEA5wB,KAAAoC,EAAA4wB,YAAAmC,EAAAyB,EAAA/d,EAAA+X,EAAAuE,EAAAyB,EAAAtB,EAAAzc,EAAA+X,EAAAuE,EAAAyB,EAAA/d,EAAA+X,EAAA,GACA5wB,KAAAoC,EAAA4wB,YAAAmC,EAAAyB,EAAA/d,EAAA+X,EAAAuE,EAAAyB,EAAA/d,EAAA+X,EAAA0E,EAAAH,EAAAyB,EAAA/d,EAAA+X,EAAA,MAGA5wB,KAAAoC,EAAA4wB,YAAAmC,EAAAyB,EAAA/d,EAAA+X,EAAA3xB,EAAAk2B,EAAAyB,EAAA/d,EAAA+X,EAAA0E,EAAAH,EAAAyB,EAAA/d,EAAA+X,EAAA3xB,EAAA,MACA,IAAAA,GACAe,KAAAoC,EAAA4wB,YAAAmC,EAAAyB,EAAA33B,EAAA4Z,EAAA+X,EAAAuE,EAAAyB,EAAA33B,EAAA4Z,EAAA+X,EAAAuE,EAAAyB,EAAAtB,EAAAzc,EAAA+X,EAAA,MACA5wB,KAAAoC,EAAA4wB,YAAAmC,EAAAyB,EAAA33B,EAAA4Z,EAAA+X,EAAAuE,EAAAyB,EAAAtB,EAAAzc,EAAA+X,EAAAuE,EAAAyB,EAAA33B,EAAA4Z,EAAA+X,EAAA,MACA5wB,KAAAoC,EAAA4wB,YAAAmC,EAAAyB,EAAA/d,EAAA+X,EAAA3xB,EAAAk2B,EAAAyB,EAAA/d,EAAA+X,EAAA3xB,EAAAk2B,EAAAyB,EAAA/d,EAAA+X,EAAA0E,EAAA,MACAt1B,KAAAoC,EAAA4wB,YAAAmC,EAAAyB,EAAA/d,EAAA+X,EAAA3xB,EAAAk2B,EAAAyB,EAAA/d,EAAA+X,EAAA0E,EAAAH,EAAAyB,EAAA/d,EAAA+X,EAAA3xB,EAAA,MACAe,KAAAoC,EAAA4wB,YAAAmC,EAAAyB,EAAA33B,EAAA4Z,EAAA+X,EAAAuE,EAAAyB,EAAA33B,EAAA4Z,EAAA+X,EAAAuE,EAAAyB,EAAAtB,EAAAzc,EAAA+X,EAAA,MACA5wB,KAAAoC,EAAA4wB,YAAAmC,EAAAyB,EAAA33B,EAAA4Z,EAAA+X,EAAAuE,EAAAyB,EAAAtB,EAAAzc,EAAA+X,EAAAuE,EAAAyB,EAAA33B,EAAA4Z,EAAA+X,EAAA,MACA5wB,KAAAoC,EAAA4wB,YAAAmC,EAAAyB,EAAA/d,EAAA+X,EAAA3xB,EAAAk2B,EAAAyB,EAAA/d,EAAA+X,EAAA3xB,EAAAk2B,EAAAyB,EAAA/d,EAAA+X,EAAA0E,EAAA,QAEAt1B,KAAAoC,EAAA4wB,YAAAmC,EAAAyB,EAAA/d,EAAA+X,EAAAuE,EAAAyB,EAAAtB,EAAAzc,EAAA+X,EAAAuE,EAAAyB,EAAA/d,EAAA+X,EAAA,MACA5wB,KAAAoC,EAAA4wB,YAAAmC,EAAAyB,EAAA/d,EAAA+X,EAAAuE,EAAAyB,EAAA/d,EAAA+X,EAAA0E,EAAAH,EAAAyB,EAAA/d,EAAA+X,EAAA,MACA5wB,KAAAoC,EAAA4wB,YAAAmC,EAAAyB,EAAA/d,EAAA+X,EAAAuE,EAAAyB,EAAAtB,EAAAzc,EAAA+X,EAAAuE,EAAAyB,EAAA/d,EAAA+X,EAAA,QAMA,gBAAA9qB,EAAAsB,GACApH,KAAAoC,EAAAiyB,GAAAK,WACA10B,KAAAoC,EAAAvC,GAAA,EACAG,KAAAg0B,qBAAAM,GAAAC,qBACAv0B,KAAAg0B,qBAAAQ,SAAAx0B,KAAAoC,GACApC,KAAAsD,MAAAtD,KAAAg0B,qBACAh0B,KAAA8F,OACA9F,KAAAuL,KAAAzF,EAAAyF,KACAvL,KAAA6tB,SAAA,EACA7tB,KAAAD,EAAAqH,EAAArH,EACAC,KAAAqH,qBACArH,KAAA+F,KAAA,EACA/F,KAAA4I,SAAA6nB,EACAzwB,KAAA22B,oBACA32B,KAAAiV,MAAAif,EACAl0B,KAAAwC,EAAAiJ,GAAAC,QAAA5F,EAAAsB,EAAA5E,EAAA,IAAAxC,KAAAqH,mBACArH,KAAAmC,EAAAsJ,GAAAC,QAAA5F,EAAAsB,EAAAjF,EAAA,IAAAnC,KAAAqH,mBACArH,KAAAqC,EAAAoJ,GAAAC,QAAA5F,EAAAsB,EAAA/E,EAAA,IAAArC,KAAAqH,mBACArH,KAAAqH,kBAAA5F,OACAzB,KAAAkL,GAAA,EAEAlL,KAAA22B,wBAoCAvW,IAIA,OAHAA,GAAA3T,eACA2T,EAAA4U,yBACA5U,EAAA6U,kCACA7U,KAEAyW,GAAA,WAMA,QAAAC,GAAA9Y,EAAAxf,GACAu4B,EAAA/Y,KACA+Y,EAAA/Y,GAAAxf,GAIA,QAAAw4B,GAAAhZ,EAAAlY,EAAAsB,EAAAC,GACA,UAAA0vB,GAAA/Y,GAAAlY,EAAAsB,EAAAC,GAZA,GAAA+Y,MACA2W,IAcA,OAbA3W,GAAA0W,mBACA1W,EAAA4W,cAYA5W,IAIA/a,GAAAf,UAAA2yB,uBAAA,aACA5xB,EAAAf,UAAA4yB,mBAAA,aACA7xB,EAAAf,UAAAkwB,SAAA,SAAAptB,GACApH,KAAA+iB,SACA/iB,KAAA0F,OAAAvE,MAA0Bg2B,MAAA/vB,EAAAqmB,GAAArmB,OAAA4sB,qBAAAM,GAAAC,uBAC1Bv0B,KAAAk3B,mBAAA9vB,EAAAqmB,MAGApoB,EAAAf,UAAAX,KAAA,SAAAmC,EAAAsB,EAAAC,GACArH,KAAA8F,OACA9F,KAAA6tB,SAAA,EACA7tB,KAAA0F,UACA1F,KAAAqH,qBACArH,KAAA+F,KAAA,EACA/F,KAAA+iB,QAAA,EACA/iB,KAAAkL,GAAA,EACAlL,KAAAuL,KAAAzF,EAAAyF,KACAvL,KAAAi3B,uBAAAnxB,EAAAsB,GACApH,KAAAqH,kBAAA5F,QACAzB,KAAAkL,GAAA,EACA7D,EAAAlG,KAAAnB,OAEAA,KAAA4I,UAAA,IAIAjE,EAAAU,EAAAC,GACAA,EAAAhB,UAAAmsB,YAAA,SAAAY,GACA,GAAArxB,KAAA8F,KAAAqD,WAAA0kB,UAAA7tB,KAAA6tB,SAAAwD,EAAA,CAGArxB,KAAA+F,MAAAsrB,EACArxB,KAAA6tB,QAAA7tB,KAAA8F,KAAAqD,WAAA0kB,OACA,IAAAtsB,GAAAC,EAAAxB,KAAAqH,kBAAA5F,MAEA,KAAAF,EAAA,EAAYA,EAAAC,EAAMD,GAAA,EAClBvB,KAAAqH,kBAAA9F,GAAAqH,WACA5I,KAAAqH,kBAAA9F,GAAAwE,MACA/F,KAAA+F,KAAA,EAGA,IAAA/F,KAAA+F,KAAAsrB,EAAA,CACA,GAAAztB,GAAA5D,KAAA4D,EAAAxB,EAAA,OACAwB,GAAA,IACAA,GAAA,EAEA,IAAAzB,GAAAnC,KAAAmC,EAAAC,EAAAwB,EACA4S,EAAAxW,KAAAwW,EAAApU,EAAAwB,CAIA,IAAAzB,EAAAqU,EAAA,CACA,GAAA0b,GAAA/vB,CACAA,GAAAqU,EACAA,EAAA0b,EAEAlyB,KAAAo3B,OAAAj1B,EACAnC,KAAAq3B,OAAA7gB,EACAxW,KAAAs3B,OAAA1zB,KAGA0B,EAAAhB,UAAA2yB,uBAAA,SAAAnxB,EAAAsB,GACApH,KAAAo3B,OAAA,EACAp3B,KAAAq3B,OAAA,EACAr3B,KAAAs3B,OAAA,EACAt3B,KAAA4I,SAAA5I,KAAAywB,YACAzwB,KAAAmC,EAAAsJ,GAAAC,QAAA5F,EAAAsB,EAAAjF,EAAA,MAAAnC,KAAAqH,mBACArH,KAAAwW,EAAA/K,GAAAC,QAAA5F,EAAAsB,EAAAoP,EAAA,MAAAxW,KAAAqH,mBACArH,KAAA4D,EAAA6H,GAAAC,QAAA5F,EAAAsB,EAAAxD,EAAA,IAAA5D,KAAAqH,mBACArH,KAAAkH,EAAAE,EAAAF,EACAlH,KAAAqH,kBAAA5F,QACAzB,KAAA4I,UAAA,IAIAtD,EAAAhB,UAAAizB,oBAAA,SAAAp1B,EAAAqU,EAAAghB,EAAAlU,EAAAmU,GACA,GAAAzT,KACAxN,IAAA,EACAwN,EAAA7iB,MACAgB,IACAqU,MAEKrU,GAAA,EACL6hB,EAAA7iB,MACAgB,IAAA,EACAqU,IAAA,KAGAwN,EAAA7iB,MACAgB,IACAqU,EAAA,IAEAwN,EAAA7iB,MACAgB,EAAA,EACAqU,IAAA,IAGA,IACAjV,GAAAm2B,EADAC,KACAn2B,EAAAwiB,EAAAviB,MACA,KAAAF,EAAA,EAAcA,EAAAC,EAASD,GAAA,EAEvB,GADAm2B,EAAA1T,EAAAziB,GACAm2B,EAAAlhB,EAAAihB,EAAAnU,GAAAoU,EAAAv1B,EAAAs1B,EAAAnU,EAAAkU,OAES,CACT,GAAAI,GAAAC,CAEAD,GADAF,EAAAv1B,EAAAs1B,GAAAnU,EACA,GAEAoU,EAAAv1B,EAAAs1B,EAAAnU,GAAAkU,EAGAK,EADAH,EAAAlhB,EAAAihB,GAAAnU,EAAAkU,EACA,GAEAE,EAAAlhB,EAAAihB,EAAAnU,GAAAkU,EAEAG,EAAAx2B,MAAAy2B,EAAAC,IAMA,MAHAF,GAAAl2B,QACAk2B,EAAAx2B,MAAA,MAEAw2B,GAGAryB,EAAAhB,UAAAwzB,cAAA,SAAAn3B,GACA,GAAAo3B,GACAx2B,EACAuG,EAAAsC,EAGA4tB,EAAA/P,EAAAgQ,EAJAz2B,EAAAxB,KAAA0F,OAAAjE,OAEAU,EAAAnC,KAAAo3B,OACA5gB,EAAAxW,KAAAq3B,OACAI,EAAA,CAEA,IAAAjhB,IAAArU,EACA,IAAAZ,EAAA,EAAgBA,EAAAC,EAAMD,GAAA,EACtBvB,KAAA0F,OAAAnE,GAAAyyB,qBAAAkE,gBACAl4B,KAAA0F,OAAAnE,GAAA41B,MAAApxB,KAAA,EACA/F,KAAA0F,OAAAnE,GAAA41B,MAAA7zB,MAAAtD,KAAA0F,OAAAnE,GAAAyyB,yBAEK,QAAAxd,GAAA,IAAArU,GAAA,IAAAqU,GAAA,IAAArU,GAqFA,GAAAnC,KAAA+F,IACL,IAAAxE,EAAA,EAAgBA,EAAAC,EAAMD,GAAA,EACtBvB,KAAA0F,OAAAnE,GAAA41B,MAAApxB,KAAA,MAvFK,CACL,GAAA+c,GAAAkR,EAAAhQ,IACA,KAAAziB,EAAA,EAAgBA,EAAAC,EAAMD,GAAA,EAEtB,GADAuhB,EAAA9iB,KAAA0F,OAAAnE,GACAuhB,EAAAqU,MAAApxB,KAAA/F,KAAA+F,KAAApF,GAAA,IAAAX,KAAAkH,EAEa,CAIb,GAHA6wB,EAAAjV,EAAAqU,MAAA7zB,MACA8G,EAAA2tB,EAAA9yB,QACAgzB,EAAA,GACAnV,EAAAqU,MAAApxB,KAAA+c,EAAAkV,UACAC,EAAAnV,EAAAmV,qBACiB,CAEjB,IADAD,KACAlwB,EAAA,EAA4BA,EAAAsC,EAAOtC,GAAA,EACnCmgB,EAAArG,GAAAiB,kBAAAkV,EAAAryB,OAAAoC,IACAkwB,EAAA72B,KAAA8mB,GACAgQ,GAAAhQ,EAAA7E,WAEAN,GAAAmV,mBACAnV,EAAAkV,YAGAP,GAAAQ,EACAnV,EAAAqU,MAAApxB,KAAA,MAnBA+c,GAAAqU,MAAA7zB,MAAAwf,EAAAkR,oBAsBA,IACAlsB,GAAAsC,EADAwtB,EAAAz1B,EAAA01B,EAAArhB,EAAA8M,EAAA,CAEA,KAAA/hB,EAAAC,EAAA,EAAwBD,GAAA,EAAQA,GAAA,EAEhC,GADAuhB,EAAA9iB,KAAA0F,OAAAnE,GACAuhB,EAAAqU,MAAApxB,IAAA,CAGA,GAFAiuB,EAAAlR,EAAAkR,qBACAA,EAAAkE,gBACA,IAAAl4B,KAAAkH,GAAA1F,EAAA,GACA,GAAA22B,GAAAn4B,KAAAu3B,oBAAAp1B,EAAAqU,EAAAsM,EAAAmV,iBAAA3U,EAAAmU,EACAnU,IAAAR,EAAAmV,qBAEAE,KAAAP,EAAAC,GAGA,KADAztB,EAAA+tB,EAAA12B,OACAqG,EAAA,EAA2BA,EAAAsC,EAAUtC,GAAA,GACrC8vB,EAAAO,EAAArwB,GAAA,GACA+vB,EAAAM,EAAArwB,GAAA,GACAkc,EAAAviB,OAAA,EACAo2B,GAAA,EACA7T,EAAA7iB,MACAgB,EAAA2gB,EAAAmV,iBAAAL,EACAphB,EAAAsM,EAAAmV,iBAAAJ,IAEqBD,GAAA,EACrB5T,EAAA7iB,MACAgB,EAAA2gB,EAAAmV,kBAAAL,EAAA,GACAphB,EAAAsM,EAAAmV,kBAAAJ,EAAA,MAGA7T,EAAA7iB,MACAgB,EAAA2gB,EAAAmV,iBAAAL,EACAphB,EAAAsM,EAAAmV,mBAEAjU,EAAA7iB,MACAgB,EAAA,EACAqU,EAAAsM,EAAAmV,kBAAAJ,EAAA,KAGA,IAAAO,GAAAp4B,KAAAq4B,UAAAvV,EAAAkB,EAAA,GACA,IAAAA,EAAA,GAAA7hB,IAAA6hB,EAAA,GAAAxN,EAAA,CAEA,GAAAwN,EAAAviB,OAAA,EACA,GAAAqhB,EAAAqU,MAAA/0B,EAAAvC,EAAA,CACA,GAAAy4B,GAAAF,EAAAG,KACAv4B,MAAAw4B,SAAAJ,EAAApE,GACAoE,EAAAp4B,KAAAq4B,UAAAvV,EAAAkB,EAAA,GAAAsU,OAEAt4B,MAAAw4B,SAAAJ,EAAApE,GACAoE,EAAAp4B,KAAAq4B,UAAAvV,EAAAkB,EAAA,GAGAhkB,MAAAw4B,SAAAJ,EAAApE,IAIAlR,EAAAqU,MAAA7zB,MAAA0wB,GAQAh0B,KAAAqH,kBAAA5F,SACAzB,KAAA+F,KAAA,IAIAT,EAAAhB,UAAAk0B,SAAA,SAAA90B,EAAAswB,GACA,GAAAzyB,GAAAC,EAAAkC,EAAAjC,MACA,KAAAF,EAAA,EAAcA,EAAAC,EAASD,GAAA,EACvByyB,EAAAQ,SAAA9wB,EAAAnC,KAIA+D,EAAAhB,UAAAm0B,WAAA,SAAAnU,EAAAC,EAAAC,EAAAC,EAAAiU,EAAA3F,EAAA2B,GAMAgE,EAAA5F,QAAAvO,EAAA,GAAAA,EAAA,OAAAwO,GACA2F,EAAA5F,QAAAtO,EAAA,GAAAA,EAAA,OAAAuO,EAAA,GACA2B,GACAgE,EAAA5F,QAAAxO,EAAA,GAAAA,EAAA,OAAAyO,GAEA2F,EAAA5F,QAAArO,EAAA,GAAAA,EAAA,OAAAsO,EAAA,IAGAztB,EAAAhB,UAAA+zB,UAAA,SAAAvV,EAAA6V,EAAAD,GACA,GAEAn3B,GAAAuG,EAAAsC,EAEAwuB,EAAAC,EACA1V,EACA2V,EAEA7U,EARA+T,EAAAlV,EAAAkV,UACAD,EAAAjV,EAAAqU,MAAA7zB,MAAAoC,OACAlE,EAAAshB,EAAAqU,MAAA7zB,MAAA2B,QACAqe,EAAA,EAIA5d,KAEAgvB,GAAA,CAUA,KATAgE,GAKAG,EAAAH,EAAAzzB,QACAgf,EAAAyU,EAAAzzB,UALAyzB,EAAArE,GAAAK,WACAmE,EAAA,EACA5U,EAAA,GAKAve,EAAAvE,KAAAu3B,GACAn3B,EAAA,EAAYA,EAAAC,EAAMD,GAAA,GAIlB,IAHA4hB,EAAA6U,EAAAz2B,GAAA4hB,QACAuV,EAAA74B,EAAAk4B,EAAAx2B,GAAA1B,EACAuK,EAAA2tB,EAAAx2B,GAAA1B,EAAAsjB,EAAA1hB,OAAA0hB,EAAA1hB,OAAA,EACAqG,EAAA,EAAgBA,EAAAsC,EAAOtC,GAAA,EAEvB,GADA8wB,EAAAzV,EAAArb,EAAA,GACAwb,EAAAsV,EAAAtV,YAAAqV,EAAAx2B,EACAmhB,GAAAsV,EAAAtV,YACAoV,EAAA74B,GAAA,MACa,IAAAyjB,EAAAqV,EAAAniB,EAAA,CACbkiB,EAAA74B,GAAA,CACA,OAEA84B,EAAAx2B,GAAAmhB,GAAAqV,EAAAniB,GAAA8M,EAAAsV,EAAAtV,aACAtjB,KAAAy4B,WAAAV,EAAAx2B,GAAAa,EAAA0F,EAAA,GAAAiwB,EAAAx2B,GAAAqC,EAAAkE,EAAA,GAAAiwB,EAAAx2B,KAAAuG,GAAAiwB,EAAAx2B,GAAAa,EAAA0F,GAAA4wB,EAAAG,EAAAnE,GACAA,GAAA,IAEAoE,EAAAlX,GAAAkD,cAAAiT,EAAAx2B,GAAAa,EAAA0F,EAAA,GAAAiwB,EAAAx2B,GAAAa,EAAA0F,GAAAiwB,EAAAx2B,GAAAqC,EAAAkE,EAAA,GAAAiwB,EAAAx2B,KAAAuG,IAAA6wB,EAAAx2B,EAAAmhB,GAAAsV,EAAAtV,aAAAqV,EAAAniB,EAAA8M,GAAAsV,EAAAtV,YAAAH,EAAArb,EAAA,IACA9H,KAAAy4B,WAAAK,EAAAxU,IAAAwU,EAAAtU,IAAAsU,EAAArU,IAAAqU,EAAAvU,IAAAmU,EAAAG,EAAAnE,GACAA,GAAA,EACAgE,EAAA74B,GAAA,GAEAyjB,GAAAsV,EAAAtV,YACAuV,GAAA,EAGA,GAAAd,EAAAx2B,GAAA1B,EAAA,CAEA,GADA+4B,EAAAzV,EAAArb,EAAA,GACAwb,GAAAqV,EAAAniB,EAAA,CACA,GAAAgN,GAAAL,EAAArb,EAAA,GAAAwb,WACAqV,GAAAx2B,GAAAmhB,GAAAqV,EAAAniB,GAAA8M,EAAAE,GACAxjB,KAAAy4B,WAAAV,EAAAx2B,GAAAa,EAAA0F,EAAA,GAAAiwB,EAAAx2B,GAAAqC,EAAAkE,EAAA,GAAAiwB,EAAAx2B,KAAA,GAAAw2B,EAAAx2B,GAAAa,EAAA,GAAAs2B,EAAAG,EAAAnE,GACAA,GAAA,IAEAoE,EAAAlX,GAAAkD,cAAAiT,EAAAx2B,GAAAa,EAAA0F,EAAA,GAAAiwB,EAAAx2B,GAAAa,EAAA,GAAA21B,EAAAx2B,GAAAqC,EAAAkE,EAAA,GAAAiwB,EAAAx2B,KAAA,IAAAo3B,EAAAx2B,EAAAmhB,GAAAE,GAAAmV,EAAAniB,EAAA8M,GAAAE,EAAAL,EAAArb,EAAA,IACA9H,KAAAy4B,WAAAK,EAAAxU,IAAAwU,EAAAtU,IAAAsU,EAAArU,IAAAqU,EAAAvU,IAAAmU,EAAAG,EAAAnE,GACAA,GAAA,EACAgE,EAAA74B,GAAA,OAGA64B,GAAA74B,GAAA,CAEAyjB,IAAAsV,EAAAtV,YACAuV,GAAA,EAMA,GAJAH,EAAAzzB,UACAyzB,EAAA5F,QAAA4F,EAAAt2B,EAAA6hB,GAAA,GAAAyU,EAAAt2B,EAAA6hB,GAAA,OAAAA,GACAyU,EAAA5F,QAAA4F,EAAAt2B,EAAAs2B,EAAAzzB,QAAA,MAAAyzB,EAAAt2B,EAAAs2B,EAAAzzB,QAAA,UAAAyzB,EAAAzzB,QAAA,IAEAqe,EAAAqV,EAAAniB,EACA,KAEAjV,GAAAC,EAAA,IACAk3B,EAAArE,GAAAK,WACAA,GAAA,EACAhvB,EAAAvE,KAAAu3B,GACAG,EAAA,GAGA,MAAAnzB,IAKAmxB,GAAAC,iBAAA,KAAAxxB,GAEAX,EAAAU,EAAAE,GACAA,EAAAjB,UAAAmsB,YAAA,SAAAY,GACA,GAAArxB,KAAA8F,KAAAqD,WAAA0kB,UAAA7tB,KAAA6tB,SAAAwD,EAAA,CAGArxB,KAAA+F,MAAAsrB,EACArxB,KAAA6tB,QAAA7tB,KAAA8F,KAAAqD,WAAA0kB,OACA,IAAAtsB,GAAAC,EAAAxB,KAAAqH,kBAAA5F,MAEA,KAAAF,EAAA,EAAYA,EAAAC,EAAMD,GAAA,EAClBvB,KAAAqH,kBAAA9F,GAAAqH,WACA5I,KAAAqH,kBAAA9F,GAAAwE,MACA/F,KAAA+F,KAAA,KAIAR,EAAAjB,UAAA2yB,uBAAA,SAAAnxB,EAAAsB,GACApH,KAAA4I,SAAA5I,KAAAywB,YACAzwB,KAAA+4B,GAAAttB,GAAAC,QAAA5F,EAAAsB,EAAA/E,EAAA,OAAArC,KAAAqH,mBACArH,KAAAqH,kBAAA5F,QACAzB,KAAA4I,UAAA,IAIArD,EAAAjB,UAAA00B,YAAA,SAAA7uB,EAAAlL,GACA,GAAAg6B,GAAA5E,GAAAK,UACAuE,GAAAp5B,EAAAsK,EAAAtK,CACA,IAAA0B,GACA23B,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACAtG,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAFA9xB,EAAA2I,EAAAlF,QACAu0B,EAAA,CAEA,KAAAj4B,EAAA,EAAYA,EAAAC,EAAMD,GAAA,EAClB23B,EAAA/uB,EAAA/H,EAAAb,GACA63B,EAAAjvB,EAAAvG,EAAArC,GACA43B,EAAAhvB,EAAA5I,KACA23B,EAAA,KAAAE,EAAA,IAAAF,EAAA,KAAAE,EAAA,IAAAF,EAAA,KAAAC,EAAA,IAAAD,EAAA,KAAAC,EAAA,GACA,IAAA53B,OAAAC,EAAA,GAAA2I,EAAAtK,GAQAw5B,EADA,IAAA93B,EACA4I,EAAA/H,EAAAZ,EAAA,GAEA2I,EAAA/H,EAAAb,EAAA,GAEA+3B,EAAAt6B,KAAAmV,KAAAnV,KAAAiV,IAAAilB,EAAA,GAAAG,EAAA,MAAAr6B,KAAAiV,IAAAilB,EAAA,GAAAG,EAAA,OACAE,EAAAD,EAAAt6B,KAAA8D,IAAAw2B,EAAA,EAAAr6B,GAAAq6B,EAAA,EACArG,EAAAI,EAAA6F,EAAA,IAAAG,EAAA,GAAAH,EAAA,IAAAK,EACArG,EAAAI,EAAA4F,EAAA,IAAAA,EAAA,GAAAG,EAAA,IAAAE,EACApG,EAAAF,KAAAiG,EAAA,IAAArkB,GACAue,EAAAF,KAAAgG,EAAA,IAAArkB,GACAokB,EAAAjG,YAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAkG,GACAA,GAAA,EAGAH,EADA93B,IAAAC,EAAA,EACA2I,EAAA/H,EAAA,GAEA+H,EAAA/H,EAAAb,EAAA,GAEA+3B,EAAAt6B,KAAAmV,KAAAnV,KAAAiV,IAAAilB,EAAA,GAAAG,EAAA,MAAAr6B,KAAAiV,IAAAilB,EAAA,GAAAG,EAAA,OACAE,EAAAD,EAAAt6B,KAAA8D,IAAAw2B,EAAA,EAAAr6B,GAAAq6B,EAAA,EACArG,EAAAE,EAAA+F,EAAA,IAAAG,EAAA,GAAAH,EAAA,IAAAK,EACArG,EAAAE,EAAA8F,EAAA,IAAAG,EAAA,GAAAH,EAAA,IAAAK,EACAlG,EAAAJ,KAAAiG,EAAA,IAAArkB,GACAye,EAAAJ,KAAAgG,EAAA,IAAArkB,GACAokB,EAAAjG,YAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAkG,GACAA,GAAA,IAhCAP,EAAAjG,YAAAkG,EAAA,GAAAA,EAAA,GAAAE,EAAA,GAAAA,EAAA,GAAAD,EAAA,GAAAA,EAAA,GAAAK,GAIAA,GAAA,IA+BAP,EAAAjG,YAAA7oB,EAAA/H,EAAAb,GAAA,GAAA4I,EAAA/H,EAAAb,GAAA,GAAA4I,EAAAvG,EAAArC,GAAA,GAAA4I,EAAAvG,EAAArC,GAAA,GAAA4I,EAAA5I,KAAA,GAAA4I,EAAA5I,KAAA,GAAAi4B,GACAA,GAAA,EAGA,OAAAP,IAGA1zB,EAAAjB,UAAAwzB,cAAA,SAAAn3B,GACA,GAAAo3B,GACAx2B,EACAuG,EAAAsC,EADA5I,EAAAxB,KAAA0F,OAAAjE,OAEAs3B,EAAA/4B,KAAA+4B,GAAA32B,CAEA,QAAA22B,EAAA,CACA,GAAAjW,GAAAkR,CACA,KAAAzyB,EAAA,EAAgBA,EAAAC,EAAMD,GAAA,GAItB,GAHAuhB,EAAA9iB,KAAA0F,OAAAnE,GACAuhB,EAAAqU,MAAA7zB,MACA0wB,EAAAlR,EAAAkR,qBACAlR,EAAAqU,MAAApxB,KAAA/F,KAAA+F,KAAApF,EAKA,IAJAqzB,EAAAkE,gBACApV,EAAAqU,MAAApxB,KAAA,EACAgyB,EAAAjV,EAAAqU,MAAA7zB,MAAAoC,OACA0E,EAAA0Y,EAAAqU,MAAA7zB,MAAA2B,QACA6C,EAAA,EAAwBA,EAAAsC,EAAOtC,GAAA,EAC/BksB,EAAAQ,SAAAx0B,KAAAg5B,YAAAjB,EAAAjwB,GAAAixB,GAGAjW,GAAAqU,MAAA7zB,MAAAwf,EAAAkR,sBAIAh0B,KAAAqH,kBAAA5F,SACAzB,KAAA+F,KAAA,IAKA8wB,GAAAC,iBAAA,KAAAvxB,GAEAC,EAAAlB,UAAAmsB,YAAA,SAAAY,GACA,GAAArxB,KAAA8F,KAAAqD,WAAA0kB,UAAA7tB,KAAA6tB,SAAAwD,EAAA,CAGArxB,KAAA+F,MAAAsrB,CACA,IAAA9vB,GAAAC,EAAAxB,KAAAqH,kBAAA5F,MAEA,KAAAF,EAAA,EAAYA,EAAAC,EAAMD,GAAA,EAClBvB,KAAAqH,kBAAA9F,GAAAqH,WACA5I,KAAAqH,kBAAA9F,GAAAwE,MACA/F,KAAA+F,KAAA,KAKAP,EAAAlB,UAAA2yB,uBAAA,SAAAnxB,EAAAsB,GACApH,KAAA4I,SAAA5I,KAAAywB,YACAzwB,KAAAH,EAAA4L,GAAAC,QAAA5F,EAAAsB,EAAAvH,EAAA,OAAAG,KAAAqH,mBACArH,KAAA4D,EAAA6H,GAAAC,QAAA5F,EAAAsB,EAAAxD,EAAA,OAAA5D,KAAAqH,mBACArH,KAAAqI,GAAAoD,GAAAC,QAAA5F,EAAAsB,EAAAiB,GAAA,OAAArI,KAAAqH,mBACArH,KAAAoH,OACApH,KAAAqH,kBAAA5F,QACAzB,KAAA4I,UAAA,GAEA5I,KAAAy5B,QAAA,GAAA31B,GACA9D,KAAA05B,QAAA,GAAA51B,GACA9D,KAAA25B,QAAA,GAAA71B,GACA9D,KAAA45B,QAAA,GAAA91B,GACA9D,KAAA65B,OAAA,GAAA/1B,IAGA0B,EAAAlB,UAAAw1B,gBAAA,SAAAL,EAAAC,EAAAC,EAAA/iB,EAAAkN,EAAA7Y,GACA,GAAAmZ,GAAAnZ,GAAA,IACA8uB,EAAAnjB,EAAAzU,EAAAC,EAAA,MAAAwU,EAAAzU,EAAAC,EAAA,OAAA0hB,GACAkW,EAAApjB,EAAAzU,EAAAC,EAAA,MAAAwU,EAAAzU,EAAAC,EAAA,OAAA0hB,EACA2V,GAAAhjB,UAAAG,EAAApU,EAAAJ,EAAA,GAAAgiB,EAAAN,EAAAlN,EAAApU,EAAAJ,EAAA,GAAAgiB,EAAAN,EAAAlN,EAAApU,EAAAJ,EAAA,IACAs3B,EAAAjjB,WAAAG,EAAApQ,EAAApE,EAAA,IAAAwU,EAAApQ,EAAApE,EAAA,GAAAwU,EAAApQ,EAAApE,EAAA,IACAs3B,EAAAvkB,QAAAyB,EAAAvU,EAAAD,EAAAgiB,EAAAN,GACA4V,EAAAjjB,UAAAG,EAAApQ,EAAApE,EAAA,GAAAwU,EAAApQ,EAAApE,EAAA,GAAAwU,EAAApQ,EAAApE,EAAA,IACAu3B,EAAAljB,WAAAG,EAAApQ,EAAApE,EAAA,IAAAwU,EAAApQ,EAAApE,EAAA,GAAAwU,EAAApQ,EAAApE,EAAA,IACAu3B,EAAAtjB,MAAApL,EAAA,EAAA8uB,IAAA9uB,EAAA,EAAA+uB,KACAL,EAAAljB,UAAAG,EAAApQ,EAAApE,EAAA,GAAAwU,EAAApQ,EAAApE,EAAA,GAAAwU,EAAApQ,EAAApE,EAAA,KAGAoD,EAAAlB,UAAAX,KAAA,SAAAmC,EAAAmU,EAAA8Y,EAAAkH,EAAA5yB,GACArH,KAAA8F,OACA9F,KAAAia,MACAja,KAAA+yB,MACA/yB,KAAAi6B,YACAj6B,KAAAk6B,eAAA,EACAl6B,KAAAm6B,aACAn6B,KAAAo6B,WACAp6B,KAAAqH,qBACArH,KAAA6tB,SAAA,EACA7tB,KAAAi3B,uBAAAnxB,EAAAmU,EAAA8Y,GAEA,KADA,GAAAsH,GAAA,EACAtH,EAAA,GACAA,GAAA,EAEA/yB,KAAAm6B,UAAAG,QAAArgB,EAAA8Y,IACAsH,GAAA,CAEAr6B,MAAAqH,kBAAA5F,QACAzB,KAAAkL,GAAA,EACA7D,EAAAlG,KAAAnB,OAEAA,KAAA4I,UAAA,IAIApD,EAAAlB,UAAAi2B,cAAA,SAAA5wB,GACA,GAAApI,GAAAC,EAAAmI,EAAAlI,MACA,KAAAF,EAAA,EAAcA,EAAAC,EAASD,GAAA,EACvBoI,EAAApI,GAAAi5B,YAAA,EACA,OAAA7wB,EAAApI,GAAA+O,IACAtQ,KAAAu6B,cAAA5wB,EAAApI,GAAAwlB,KAKAvhB,EAAAlB,UAAAm2B,cAAA,SAAA9wB,GACA,GACA+wB,IADA/wB,EAAAlI,OACAmR,KAAAC,MAAAD,KAAAiU,UAAAld,IAEA,OADA3J,MAAAu6B,cAAAG,GACAA,GAGAl1B,EAAAlB,UAAAq2B,kBAAA,SAAAhxB,EAAAixB,GACA,GAAAr5B,GAAAC,EAAAmI,EAAAlI,MACA,KAAAF,EAAA,EAAcA,EAAAC,EAAUD,GAAA,EACxBoI,EAAApI,GAAAs5B,QAAAD,EACA,OAAAjxB,EAAApI,GAAA+O,IACAtQ,KAAA26B,kBAAAhxB,EAAApI,GAAAwlB,GAAA6T,IAKAp1B,EAAAlB,UAAAwzB,cAAA,SAAAn3B,GAEA,GAAAX,KAAA8F,KAAAqD,WAAA0kB,UAAA7tB,KAAA6tB,UAGA7tB,KAAA6tB,QAAA7tB,KAAA8F,KAAAqD,WAAA0kB,QACA7tB,KAAAqH,kBAAA5F,QAAAd,IACAX,KAAA+F,KAAA,GAEA/F,KAAA+F,KAAA,CACA,GAAA+0B,GAAA97B,KAAA+7B,KAAA/6B,KAAAH,EAAAuC,EACA,IAAApC,KAAAo6B,QAAA34B,OAAAq5B,EAAA,CACA,KAAA96B,KAAAo6B,QAAA34B,OAAAq5B,GAAA,CACA,GAAAE,IACAjU,GAAA/mB,KAAAy6B,cAAAz6B,KAAAm6B,WACA7pB,GAAA,KAEA0qB,GAAAjU,GAAA5lB,MAA+BqF,GAAKA,EAAA,EAAAy0B,GAAA,EAAA/vB,GAAA,MAAuB8S,GAAA,YAAApa,GAAuB4C,EAAA,EAAAy0B,GAAA,EAAA/vB,EAAA,KAAqB1I,GAAMgE,EAAA,EAAAy0B,GAAA,EAAA/vB,GAAA,MAAuB7I,GAAMmE,EAAA,EAAAy0B,GAAA,EAAA/vB,EAAA,GAAmB/I,GAAMqE,EAAA,EAAAy0B,GAAA,EAAA/vB,GAAA,UAA2BklB,IAAO5pB,EAAA,EAAAy0B,GAAA,EAAA/vB,EAAA,GAAmBglB,IAAO1pB,EAAA,EAAAy0B,GAAA,EAAA/vB,EAAA,GAAmBoF,GAAA,OAElPtQ,KAAAia,IAAAvY,OAAA,IAAAs5B,GACAh7B,KAAAo6B,QAAA14B,OAAA,IAAAs5B,GACAh7B,KAAAk6B,gBAAA,EAEAl6B,KAAA8F,KAAAo1B,eAEA,GAAA35B,GAAAq5B,EAAAP,EAAA,CACA,KAAA94B,EAAA,EAAkBA,GAAAvB,KAAAo6B,QAAA34B,OAAA,EAA+BF,GAAA,EACjDq5B,EAAAP,EAAAS,EACA96B,KAAAo6B,QAAA74B,GAAAs5B,QAAAD,EACA56B,KAAA26B,kBAAA36B,KAAAo6B,QAAA74B,GAAAwlB,GAAA6T,GACAP,GAAA,CAGAr6B,MAAAk6B,eAAAY,EACA96B,KAAA8F,KAAAnF,YAAA,CAGA,IAAAsC,GAAAjD,KAAA4D,EAAAxB,EACA+4B,EAAAl4B,EAAA,EACAm4B,EAAAn4B,EAAA,EAAAjE,KAAA2D,MAAAM,GAAAjE,KAAA+7B,KAAA93B,GAGAo4B,GADAr7B,KAAAqI,GAAAjG,EAAA8S,MACAlV,KAAAy5B,QAAAvkB,OACAomB,EAAAt7B,KAAA05B,QAAAxkB,MACAqmB,EAAAv7B,KAAA25B,QAAAzkB,KACAlV,MAAAy5B,QAAAxkB,QACAjV,KAAA05B,QAAAzkB,QACAjV,KAAA25B,QAAA1kB,QACAjV,KAAA45B,QAAA3kB,QACAjV,KAAA65B,OAAA5kB,OACA,IAAAumB,GAAA,CAEA,IAAAv4B,EAAA,GACA,KAAAu4B,EAAAJ,GACAp7B,KAAA85B,gBAAA95B,KAAAy5B,QAAAz5B,KAAA05B,QAAA15B,KAAA25B,QAAA35B,KAAAqI,GAAA,MACAmzB,GAAA,CAEAL,KACAn7B,KAAA85B,gBAAA95B,KAAAy5B,QAAAz5B,KAAA05B,QAAA15B,KAAA25B,QAAA35B,KAAAqI,GAAA8yB,GAAA,GACAK,GAAAL,OAES,IAAAl4B,EAAA,GACT,KAAAu4B,EAAAJ,GACAp7B,KAAA85B,gBAAA95B,KAAAy5B,QAAAz5B,KAAA05B,QAAA15B,KAAA25B,QAAA35B,KAAAqI,GAAA,MACAmzB,GAAA,CAEAL,KACAn7B,KAAA85B,gBAAA95B,KAAAy5B,QAAAz5B,KAAA05B,QAAA15B,KAAA25B,QAAA35B,KAAAqI,IAAA8yB,GAAA,GACAK,GAAAL,GAGA55B,EAAA,IAAAvB,KAAAoH,KAAAF,EAAA,EAAAlH,KAAAk6B,eAAA,CACA,IAAA9V,GAAA,IAAApkB,KAAAoH,KAAAF,EAAA,IAEA,KADAmzB,EAAAr6B,KAAAk6B,eACAG,GAAA,CACA,OAAAmB,EAAA,EACA,IAAAj6B,GAAA,IAAA6iB,GAAA7iB,IAAAvB,KAAAk6B,eAAA,QAAA9V,IACApkB,KAAA85B,gBAAA95B,KAAAy5B,QAAAz5B,KAAA05B,QAAA15B,KAAA25B,QAAA35B,KAAAqI,GAAA,MAEArI,KAAA65B,OAAAjjB,UAAA0kB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,KACAt7B,KAAA65B,OAAAjjB,UAAA2kB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,KACAv7B,KAAA65B,OAAAjjB,UAAAykB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IACA,IAEAvzB,GAFA2zB,EAAAz7B,KAAAi6B,UAAA14B,GAAAwlB,GACA2U,EAAAD,IAAAh6B,OAAA,GAAAmV,UAAA+kB,OAAAv5B,EAAA8S,MACA9K,EAAAsxB,EAAAj6B,MACA,KAAAqG,EAAA,EAAwBA,EAAAsC,EAAOtC,GAAA,EAC/B4zB,EAAA5zB,GAAA9H,KAAA65B,OAAA3kB,MAAApN,EAEA9H,MAAA65B,OAAA5kB,YACa,CACbjV,KAAA65B,OAAA5kB,OACA,IAEAnN,GAFA2zB,EAAAz7B,KAAAi6B,UAAA14B,GAAAwlB,GACA2U,EAAAD,IAAAh6B,OAAA,GAAAmV,UAAA+kB,OAAAv5B,EAAA8S,MACA9K,EAAAsxB,EAAAj6B,MACA,KAAAqG,EAAA,EAAwBA,EAAAsC,EAAOtC,GAAA,EAC/B4zB,EAAA5zB,GAAA9H,KAAA65B,OAAA3kB,MAAApN,GAGA0zB,GAAA,EACAnB,GAAA,EACA94B,GAAA6iB,KAKA5e,EAAAlB,UAAAkwB,SAAA,aAEAqC,GAAAC,iBAAA,KAAAtxB,GAOAC,EAAAnB,UAAAkwB,SAAA,SAAA1R,GACA9iB,KAAAiF,UAAAjF,KAAAkF,aACAlF,KAAA0F,OAAA1F,KAAA0F,OAAAmtB,OAAA1tB,MAAAC,MAAA,MAAqD3D,OAAAzB,KAAAkF,cACrDlF,KAAAkF,YAAA,GAEAlF,KAAA0F,OAAA1F,KAAAiF,SAAA6d,EACA9iB,KAAAiF,SAAA,GAGAQ,EAAAnB,UAAA4zB,cAAA,WACA,GAAA32B,EACA,KAAAA,EAAA,EAAWA,EAAAvB,KAAAiF,QAAkB1D,GAAA,EAC7B8yB,GAAAuH,QAAA57B,KAAA0F,OAAAnE,GAEAvB,MAAAiF,QAAA,EAEA,IAAA42B,IAAA,WAIA,QAAAC,KACA97B,KAAA+7B,cAAA,EACA/7B,KAAA+7B,eAAA/7B,KAAAg8B,aACAC,GACAA,EAAA,MAKA,QAAAC,GAAAlrB,GACA,GAAA7G,GAAA,EACA,IAAAnK,KAAAm8B,WAAA,CACA,GAAAC,GAAAprB,EAAAxO,GACA,IAAA45B,EAAAC,QAAA,aACAD,IAAAhV,MAAA,SAEAjd,EAAAnK,KAAAm8B,WAAAC,MAEAjyB,GAAAnK,KAAAmK,KACAA,GAAA6G,EAAAsrB,EAAAtrB,EAAAsrB,EAAA,GACAnyB,GAAA6G,EAAAxO,CAEA,OAAA2H,GAGA,QAAAoyB,GAAApyB,GACA,GAAAqyB,GAAArxB,SAAApH,cAAA,MACAy4B,GAAAC,iBAAA,OAAAX,EAAAz6B,KAAArB,OAAA,GACAw8B,EAAAC,iBAAA,QAAAX,EAAAz6B,KAAArB,OAAA,GACAw8B,EAAAE,IAAAvyB,EAEA,QAAAwyB,GAAAjV,EAAAkV,GACAX,EAAAW,EACA58B,KAAA68B,YAAAnV,EAAAjmB,MACA,IAAAF,EACA,KAAAA,EAAA,EAAgBA,EAAAvB,KAAA68B,YAAmBt7B,GAAA,EACnCmmB,EAAAnmB,GAAA0H,SACAszB,EAAAl7B,KAAArB,MAAAk8B,EAAA76B,KAAArB,MAAA0nB,EAAAnmB,KACAvB,KAAAg8B,aAAA,GAKA,QAAAc,GAAA3yB,GACAnK,KAAAmK,QAAA,GAGA,QAAA4yB,GAAA5yB,GACAnK,KAAAm8B,WAAAhyB,GAAA,GAlDA,GAAA8xB,EAqDA,mBACAj8B,KAAA28B,aACA38B,KAAA+8B,gBACA/8B,KAAA88B,UACA98B,KAAAm8B,WAAA,GACAn8B,KAAAmK,KAAA,GACAnK,KAAA68B,YAAA,EACA78B,KAAAg8B,YAAA,EACAh8B,KAAA+7B,aAAA,MAGAiB,GAAA,WACA,GAAA5c,IACAtV,UAAA,EAKA,QAHA,WAAAgJ,KAAAX,UAAAY,YAAA,UAAAD,KAAAX,UAAAY,YAAA,WAAAD,KAAAX,UAAAY,YAAA,aAAAD,KAAAX,UAAAY,cACAqM,EAAAtV,UAAA,GAEAsV,KAEAjQ,GAAA,WAKA,QAAAC,GAAAH,GACA,GAAAC,GAAA/E,SAAAC,gBAAAC,GAAA,SAOA,OANA6E,GAAA5E,aAAA,KAAA2E,GACAC,EAAA5E,aAAA,mCACA4E,EAAA5E,aAAA,UACA4E,EAAA5E,aAAA,UACA4E,EAAA5E,aAAA,gBACA4E,EAAA5E,aAAA,iBACA4E,EAGA,QAAA+sB,KACA,GAAA/uB,GAAA/C,SAAAC,gBAAAC,GAAA,gBAIA,OAHA6C,GAAA5C,aAAA,iBACA4C,EAAA5C,aAAA,sCACA4C,EAAA5C,aAAA,uDACA4C,EApBA,GAAAkS,KAuBA,OAtBAA,GAAAhQ,eACAgQ,EAAA6c,+BAqBA7c,IAqBAza,GAAArB,UAAA44B,iBAAA,SAAA71B,GACA,GAAA9F,GAAA47B,EAAAC,EAAA57B,EAAAxB,KAAAoG,UAAAI,EAAA/E,OACAiK,EAAAD,GAAAC,OACA,KAAAnK,EAAA,EAAYA,EAAAC,EAAMD,GAAA,EAClB67B,EAAAp9B,KAAAoG,UAAAI,EAAAjF,GACA47B,GACA32B,KACArE,MAEA,KAAAi7B,GAAA52B,IACA22B,EAAA32B,EAAAnE,EAAAqJ,EAAA1L,KAAAsG,MAAA82B,EAAA52B,EAAAnE,EAAA,EAAAsS,GAAA3U,KAAAmG,qBAEA,MAAAi3B,GAAA52B,IACA22B,EAAA32B,EAAAgqB,GAAA9kB,EAAA1L,KAAAsG,MAAA82B,EAAA52B,EAAAgqB,GAAA,EAAA7b,GAAA3U,KAAAmG,qBAEA,MAAAi3B,GAAA52B,IACA22B,EAAA32B,EAAA+pB,GAAA7kB,EAAA1L,KAAAsG,MAAA82B,EAAA52B,EAAA+pB,GAAA,EAAA5b,GAAA3U,KAAAmG,qBAEA,MAAAi3B,GAAA52B,IACA22B,EAAA32B,EAAA0pB,GAAAxkB,EAAA1L,KAAAsG,MAAA82B,EAAA52B,EAAA0pB,GAAA,EAAAvb,GAAA3U,KAAAmG,qBAEA,MAAAi3B,GAAA52B,IACA22B,EAAA32B,EAAA4pB,GAAA1kB,EAAA1L,KAAAsG,MAAA82B,EAAA52B,EAAA4pB,GAAA,EAAAzb,GAAA3U,KAAAmG,qBAEA,KAAAi3B,GAAA52B,IACA22B,EAAA32B,EAAArE,EAAAuJ,EAAA1L,KAAAsG,MAAA82B,EAAA52B,EAAArE,EAAA,MAAAnC,KAAAmG,qBAEA,KAAAi3B,GAAA52B,IACA22B,EAAA32B,IAAAkF,EAAA1L,KAAAsG,MAAA82B,EAAA52B,IAAA,IAAAxG,KAAAmG,qBAEA,KAAAi3B,GAAA52B,IACA22B,EAAA32B,EAAA5C,EAAA8H,EAAA1L,KAAAsG,MAAA82B,EAAA52B,EAAA5C,EAAA,MAAA5D,KAAAmG,qBAEA,KAAAi3B,GAAA52B,IACA22B,EAAA32B,EAAAhE,EAAAkJ,EAAA1L,KAAAsG,MAAA82B,EAAA52B,EAAAhE,EAAA,IAAAxC,KAAAmG,qBAEA,MAAAi3B,GAAA52B,IACA22B,EAAA32B,EAAAO,GAAA2E,EAAA1L,KAAAsG,MAAA82B,EAAA52B,EAAAO,GAAA,IAAA/G,KAAAmG,qBAEA,MAAAi3B,GAAA52B,IACA22B,EAAA32B,EAAAQ,GAAA0E,EAAA1L,KAAAsG,MAAA82B,EAAA52B,EAAAQ,GAAA,IAAAhH,KAAAmG,qBAEA,MAAAi3B,GAAA52B,IACA22B,EAAA32B,EAAAS,GAAAyE,EAAA1L,KAAAsG,MAAA82B,EAAA52B,EAAAS,GAAA,IAAAjH,KAAAmG,qBAEA,MAAAi3B,GAAA52B,IACA22B,EAAA32B,EAAA62B,GAAA3xB,EAAA1L,KAAAsG,MAAA82B,EAAA52B,EAAA62B,GAAA,IAAAr9B,KAAAmG,qBAEA,MAAAi3B,GAAA52B,IACA22B,EAAA32B,EAAA82B,GAAA5xB,EAAA1L,KAAAsG,MAAA82B,EAAA52B,EAAA82B,GAAA,MAAAt9B,KAAAmG,qBAEA,MAAAi3B,GAAA52B,IACA22B,EAAA32B,EAAA+2B,GAAA7xB,EAAA1L,KAAAsG,MAAA82B,EAAA52B,EAAA+2B,GAAA,MAAAv9B,KAAAmG,qBAEA,KAAAi3B,GAAA52B,IACA22B,EAAA32B,EAAA1G,EAAA4L,EAAA1L,KAAAsG,MAAA82B,EAAA52B,EAAA1G,EAAA,IAAAE,KAAAmG,qBAEAg3B,EAAAh7B,EAAAsJ,GAAAwjB,oBAAAjvB,KAAAsG,MAAA82B,EAAAj7B,EAAAnC,KAAAmG,oBACAg3B,EAAAh7B,EAAArC,EAAAs9B,EAAAj7B,EAAArC,EACAE,KAAAuG,eAAAhF,GAAA47B,CAEAn9B,MAAAoG,UAAA5D,GAAA,KAAAxC,MAAAoG,UAAA5D,GACAxC,KAAAyG,WACA/F,EAAAgL,EAAA1L,KAAAsG,MAAAtG,KAAAoG,UAAA5D,EAAA9B,EAAA,IAAAV,KAAAmG,oBACA6B,EAAA0D,EAAA1L,KAAAsG,MAAAtG,KAAAoG,UAAA5D,EAAAwF,EAAA,IAAAhI,KAAAmG,oBACA9D,EAAArC,KAAAoG,UAAA5D,EAAAH,EACA6E,EAAAlH,KAAAsG,MAAAk3B,YAAAC,gBAAAz9B,KAAAoG,UAAA5D,EAAA0E,IAEAlH,KAAAiG,gBAAA,GAEAjG,KAAAiG,gBAAA,EAEAjG,KAAA0G,aAAAC,UAAA+E,EAAA1L,KAAAsG,MAAAtG,KAAAoG,UAAAc,EAAAV,EAAA,IAAAxG,KAAAmG,oBACAnG,KAAAmG,mBAAA1E,QACA4F,EAAAlG,KAAAnB,OAIA2F,EAAArB,UAAAo5B,YAAA,SAAA5V,EAAAjhB,GAEA,GADA7G,KAAA6G,qBACA7G,KAAA+F,KAAA/F,KAAAgG,aAAAa,GAAA7G,KAAAiG,gBAAAjG,KAAAyG,UAAAS,EAAAnB,IAAA,CAGA/F,KAAAgG,aAAA,CACA,IAOA23B,GAAAC,EACAr8B,EAAAC,EARAmF,EAAA3G,KAAA0G,aAAAC,UAAAvE,EACAy7B,EAAA79B,KAAAuG,eACAX,EAAA5F,KAAAoG,UACA03B,EAAA99B,KAAA+9B,QACAl4B,EAAA7F,KAAAqG,YACA23B,EAAAh+B,KAAA4G,gBAAAnF,OAIAw8B,GAHAj+B,KAAAoH,KAGA0gB,EAAA9f,EACA,IAAAhI,KAAAiG,eAAA,CACA,GAAAiG,GAAAlM,KAAAyG,UAAAS,CACA,KAAAlH,KAAAyG,UAAA7G,GAAAI,KAAAyG,UAAAV,IAAA,CACA,GAAAzC,GAAA4I,EAAA9J,CACApC,MAAAyG,UAAApE,IACAiB,EAAAD,EAAAC,GAEA,IAAA46B,IACAC,QAAA,EACAna,YAEAxiB,GAAA8B,EAAA2B,QAAA,CACA,IAAAgjB,GACA7E,EAAA,CACA,KAAA7hB,EAAA,EAAuBA,EAAAC,EAASD,GAAA,EAChC0mB,GACA9lB,EAAAmB,EAAAlB,EAAAb,GACAiV,EAAAlT,EAAAlB,EAAAb,EAAA,GACAokB,IAAAriB,EAAAM,EAAArC,GAAA,GAAA+B,EAAAlB,EAAAb,GAAA,GAAA+B,EAAAM,EAAArC,GAAA,GAAA+B,EAAAlB,EAAAb,GAAA,IACAqkB,IAAAtiB,EAAA/B,IAAA,MAAA+B,EAAAlB,EAAAb,EAAA,MAAA+B,EAAA/B,IAAA,MAAA+B,EAAAlB,EAAAb,EAAA,QAEAqgB,GAAA6D,gBAAAwC,GACAiW,EAAAC,SAAAlW,EAAAlE,WAAAP,cACA0a,EAAAla,SAAA7iB,KAAA8mB,GACA7E,GAAA6E,EAAAlE,WAAAP,aAEAjiB,GAAAC,EACA0K,EAAA9J,EAAAvC,IACAooB,GACA9lB,EAAAmB,EAAAlB,EAAAb,GACAiV,EAAAlT,EAAAlB,EAAA,GACAujB,IAAAriB,EAAAM,EAAArC,GAAA,GAAA+B,EAAAlB,EAAAb,GAAA,GAAA+B,EAAAM,EAAArC,GAAA,GAAA+B,EAAAlB,EAAAb,GAAA,IACAqkB,IAAAtiB,EAAA/B,EAAA,MAAA+B,EAAAlB,EAAA,MAAAkB,EAAA/B,EAAA,MAAA+B,EAAAlB,EAAA,QAEAwf,GAAA6D,gBAAAwC,GACAiW,EAAAC,SAAAlW,EAAAlE,WAAAP,cACA0a,EAAAla,SAAA7iB,KAAA8mB,GACA7E,GAAA6E,EAAAlE,WAAAP,eAEAxjB,KAAAyG,UAAA23B,GAAAF,EAEA,GAEAG,GAAAC,EAAA1e,EAFAse,EAAAl+B,KAAAyG,UAAA23B,GAEAG,EAAAv+B,KAAAyG,UAAA/F,EAAA0B,EAAAo8B,EAAA,EAAAC,EAAA,EACAjb,EAAA,EAAA1kB,GAAA,EACAklB,EAAAka,EAAAla,QACA,IAAAua,EAAA,GAAAryB,EAAA9J,EAAAvC,EAOA,IANAq+B,EAAAC,QAAAn/B,KAAAqV,IAAAkqB,KACAA,GAAAv/B,KAAAqV,IAAAkqB,GAAAL,EAAAC,SAEAK,EAAAxa,EAAAviB,OAAA,EACAme,EAAAoE,EAAAwa,GAAAza,WAAAnE,OACA6e,EAAA7e,EAAAne,OAAA,EACA88B,EAAA,GACAA,GAAA3e,EAAA6e,GAAA7a,eACA6a,GAAA,GACA,IACAD,GAAA,EACA5e,EAAAoE,EAAAwa,GAAAza,WAAAnE,OACA6e,EAAA7e,EAAAne,OAAA,EAKAme,GAAAoE,EAAAwa,GAAAza,WAAAnE,OACA0e,EAAA1e,EAAA6e,EAAA,GACAJ,EAAAze,EAAA6e,EACA,IACA3a,GAAA4a,EADA9a,EAAAya,EAAAza,cAKApiB,EAAAy8B,EAAAx8B,OACAk8B,EAAA,EACAC,EAAA,CACA,IAEAR,GAAAuB,EACA72B,EAAAsC,EACAw0B,EAJAC,EAAA,IAAA/W,EAAA3lB,EAAA,KACA28B,GAAA,CAMA,IADA10B,EAAAyzB,EAAAp8B,OACAoF,EACA,IAAAiB,EAAA,EAAmBA,EAAAsC,EAAUtC,GAAA,EAC7B62B,EAAAd,EAAA/1B,GAAA3F,EACAw8B,EAAA/1B,UAAA,EAGA,IAEAulB,GAAA4Q,EAAAC,EAAAC,EAEAC,EACAl4B,EAAAD,EAAAE,EAAAiE,EAEAi0B,EAAAC,EAAAC,EAAAC,GALA1S,IAAA,EACA2S,GAAAhB,EAAAiB,GAAAhB,EAAAiB,GAAAhB,EAAAiB,IAAA,EAGAC,GAAA,EACAC,GAAA,GAAAC,GAAA7/B,KAAA8/B,iBACA,KAAAv+B,EAAA,EAAeA,EAAAC,EAASD,GAAA,GAGxB,GAFAu8B,EAAA7oB,QACAiqB,EAAA,EACAjB,EAAA18B,GAAA3B,EACA+9B,EAAA,EACAC,GAAA9V,EAAArf,QACAm1B,GAAAkB,EAAA,IACAP,EAAAgB,GACAT,GAAA,EACAa,GAAA,EACA3/B,KAAAiG,iBACAu4B,EAAAgB,GACAf,EAAAgB,GACA7f,EAAAoE,EAAAwa,GAAAza,WAAAnE,OACA0e,EAAA1e,EAAA6e,EAAA,GACAJ,EAAAze,EAAA6e,GACA7a,EAAAya,EAAAza,cACAJ,EAAA,GAEA8b,GAAAH,EAAAE,EAAAO,GAAA,GACAC,GAAA7/B,KAAA8/B,sBACS,CACT,GAAA9/B,KAAAiG,eAAA,CACA,GAAAy5B,KAAAzB,EAAA18B,GAAAw+B,KAAA,CACA,OAAAjY,EAAAhgB,GACA,OACAy2B,GAAAnb,EAAA0E,EAAA5f,WAAA+1B,EAAA18B,GAAAw+B,KACA,MACA,QACAxB,IAAAnb,EAAA0E,EAAA5f,WAAA+1B,EAAA18B,GAAAw+B,OAAA,EAGAL,GAAAzB,EAAA18B,GAAAw+B,KAEAnT,KAAAqR,EAAA18B,GAAAqrB,MACAqR,EAAArR,MACA2R,GAAAN,EAAArR,IAAAoT,OAEAzB,GAAAN,EAAA18B,GAAA0+B,GAAA,EACArT,GAAAqR,EAAA18B,GAAAqrB,KAEA2R,GAAA53B,EAAA,GAAAs3B,EAAA18B,GAAA0+B,GAAA,GACA,IAAAC,IAAA,CACA,KAAAp4B,EAAA,EAA2BA,EAAAsC,EAAUtC,GAAA,EACrCs1B,EAAAS,EAAA/1B,GAAAtB,EACA,KAAA42B,KACAuB,EAAAd,EAAA/1B,GAAA3F,EACAgsB,EAAAwQ,EAAAtM,QAAA4L,EAAA18B,GAAA4+B,UAAAr4B,GAAAlC,EAAAY,EAAAsB,GAAA3F,EAAA4vB,YACA5D,EAAA1sB,OACAy+B,IAAA9C,EAAA56B,EAAAJ,EAAA,GAAA+rB,EAAA,GAEA+R,IAAA9C,EAAA56B,EAAAJ,EAAA,GAAA+rB,GAIA,KAAAiP,KACAuB,EAAAd,EAAA/1B,GAAA3F,EACAgsB,EAAAwQ,EAAAtM,QAAA4L,EAAA18B,GAAA4+B,UAAAr4B,GAAAlC,EAAAY,EAAAsB,GAAA3F,EAAA4vB,YACA5D,EAAA1sB,OACAy+B,IAAA9C,EAAA52B,EAAApE,EAAA,GAAA+rB,EAAA,GAEA+R,IAAA9C,EAAA52B,EAAApE,EAAA,GAAA+rB,EAMA,KADArvB,GAAA,EACAA,GACA0kB,EAAAI,GAAA2a,EAAA2B,KAAAtgB,GACAkE,GAAAya,EAAA2B,GAAA1c,GAAA6a,EAAAza,cACAob,EAAAV,EAAA3a,MAAA,IAAA0a,EAAA1a,MAAA,GAAA2a,EAAA3a,MAAA,IAAAG,EACAmb,EAAAX,EAAA3a,MAAA,IAAA0a,EAAA1a,MAAA,GAAA2a,EAAA3a,MAAA,IAAAG,EACAga,EAAArnB,WAAA9P,EAAA,GAAAs3B,EAAA18B,GAAA0+B,GAAA,KAAAt5B,EAAA,GAAAk4B,EAAA,KACA//B,GAAA,GACqB8gB,IACrB4D,GAAA6a,EAAAza,cACA6a,GAAA,EACAA,GAAA7e,EAAAne,SACAg9B,EAAA,EACAD,GAAA,EACAxa,EAAAwa,GAUA5e,EAAAoE,EAAAwa,GAAAza,WAAAnE,OATA1T,EAAA9J,EAAAvC,GACA4+B,EAAA,EACAD,EAAA,EACA5e,EAAAoE,EAAAwa,GAAAza,WAAAnE,SAEA4D,GAAA6a,EAAAza,cACAhE,EAAA,OAMAA,IACA0e,EAAAD,EACAA,EAAAze,EAAA6e,GACA7a,EAAAya,EAAAza,eAIAmb,GAAAd,EAAA18B,GAAA0+B,GAAA,EAAAhC,EAAA18B,GAAA6+B,IACAtC,EAAArnB,WAAAsoB,EAAA,SAEAA,GAAAd,EAAA18B,GAAA0+B,GAAA,EAAAhC,EAAA18B,GAAA6+B,IACAtC,EAAArnB,WAAAsoB,EAAA,KAGAjB,EAAArnB,WAAA9P,EAAA,GAAAs3B,EAAA18B,GAAA0+B,GAAA,KAAAt5B,EAAA,GAAAk4B,EAAA,MAIA,KADAc,IAAA1B,EAAA18B,GAAAyG,EAAA,EACAF,EAAA,EAAoBA,EAAAsC,EAAOtC,GAAA,EAE3B,MADAs1B,EAAAS,EAAA/1B,GAAAtB,KAEAm4B,EAAAd,EAAA/1B,GAAA3F,EACAgsB,EAAAwQ,EAAAtM,QAAA4L,EAAA18B,GAAA4+B,UAAAr4B,GAAAlC,EAAAY,EAAAsB,GAAA3F,EAAA4vB,YACA/xB,KAAAiG,eACAkoB,EAAA1sB,OACA88B,GAAAnB,EAAAt9B,EAAAquB,EAAA,GAEAoQ,GAAAnB,EAAAt9B,EAAAquB,EAGAA,EAAA1sB,OACAk8B,GAAAP,EAAAt9B,EAAAsC,EAAA+rB,EAAA,GAEAwP,GAAAP,EAAAt9B,EAAAsC,EAAA+rB,EAmBA,KAdAwR,IAAA1B,EAAA18B,GAAAyG,EAAA,EACA8f,EAAAtf,kBACAzB,EAAA+gB,EAAA/gB,IAAA,GAEA+gB,EAAAvf,kBAEAvB,EADA8gB,EAAA9gB,IACA8gB,EAAA9gB,GAAA,GAAA8gB,EAAA9gB,GAAA,GAAA8gB,EAAA9gB,GAAA,KAEA,QAGA8gB,EAAAxf,eAAAwf,EAAA7gB,KACAA,GAAA6gB,EAAA7gB,GAAA,GAAA6gB,EAAA7gB,GAAA,GAAA6gB,EAAA7gB,GAAA,KAEAa,EAAA,EAAoBA,EAAAsC,EAAOtC,GAAA,EAE3B,MADAs1B,EAAAS,EAAA/1B,GAAAtB,KAEAm4B,EAAAd,EAAA/1B,GAAA3F,EACAgsB,EAAAwQ,EAAAtM,QAAA4L,EAAA18B,GAAA4+B,UAAAr4B,GAAAlC,EAAAY,EAAAsB,GAAA3F,EAAA4vB,YAEA5D,EAAA1sB,OACAq8B,EAAArnB,WAAA2mB,EAAA52B,EAAApE,EAAA,GAAA+rB,EAAA,IAAAiP,EAAA52B,EAAApE,EAAA,GAAA+rB,EAAA,GAAAiP,EAAA52B,EAAApE,EAAA,GAAA+rB,EAAA,IAEA2P,EAAArnB,WAAA2mB,EAAA52B,EAAApE,EAAA,GAAA+rB,GAAAiP,EAAA52B,EAAApE,EAAA,GAAA+rB,EAAAiP,EAAA52B,EAAApE,EAAA,GAAA+rB,GAIA,KAAArmB,EAAA,EAAoBA,EAAAsC,EAAOtC,GAAA,EAE3B,MADAs1B,EAAAS,EAAA/1B,GAAAtB,KAEAm4B,EAAAd,EAAA/1B,GAAA3F,EACAgsB,EAAAwQ,EAAAtM,QAAA4L,EAAA18B,GAAA4+B,UAAAr4B,GAAAlC,EAAAY,EAAAsB,GAAA3F,EAAA4vB,YACA5D,EAAA1sB,OACAq8B,EAAAznB,MAAA,GAAA+mB,EAAAj7B,EAAAC,EAAA,MAAA+rB,EAAA,MAAAiP,EAAAj7B,EAAAC,EAAA,MAAA+rB,EAAA,MAEA2P,EAAAznB,MAAA,GAAA+mB,EAAAj7B,EAAAC,EAAA,MAAA+rB,EAAA,GAAAiP,EAAAj7B,EAAAC,EAAA,MAAA+rB,EAAA,GAIA,KAAArmB,EAAA,EAAoBA,EAAAsC,EAAOtC,GAAA,GA+C3B,GA9CAs1B,EAAAS,EAAA/1B,GAAAtB,EACAm4B,EAAAd,EAAA/1B,GAAA3F,EACAgsB,EAAAwQ,EAAAtM,QAAA4L,EAAA18B,GAAA4+B,UAAAr4B,GAAAlC,EAAAY,EAAAsB,GAAA3F,EAAA4vB,YACA,MAAAqL,KACAjP,EAAA1sB,OACAq8B,EAAA1nB,cAAAgnB,EAAAlN,GAAA9tB,EAAA+rB,EAAA,GAAAiP,EAAAhN,GAAAhuB,EAAA+rB,EAAA,IAEA2P,EAAA1nB,cAAAgnB,EAAAlN,GAAA9tB,EAAA+rB,EAAAiP,EAAAhN,GAAAhuB,EAAA+rB,IAGA,KAAAiP,KACAjP,EAAA1sB,OACAq8B,EAAAloB,SAAAwnB,EAAA/6B,EAAAD,EAAA+rB,EAAA,IAEA2P,EAAAloB,SAAAwnB,EAAA/6B,EAAAD,EAAA+rB,IAGA,MAAAiP,KAEAjP,EAAA1sB,OACAq8B,EAAAnoB,QAAAynB,EAAA7M,GAAAnuB,EAAA+rB,EAAA,IAEA2P,EAAAnoB,QAAAynB,EAAA7M,GAAAnuB,EAAA+rB,IAGA,MAAAiP,KACAjP,EAAA1sB,OACAq8B,EAAApoB,QAAA0nB,EAAA5M,GAAApuB,EAAA+rB,EAAA,IAEA2P,EAAApoB,QAAA0nB,EAAA5M,GAAApuB,EAAA+rB,IAGA,KAAAiP,KACAjP,EAAA1sB,OACAy9B,IAAA9B,EAAAx5B,EAAA,EAAAuqB,EAAA,GAAA+Q,GAAA/Q,EAAA,GAEA+Q,IAAA9B,EAAAx5B,EAAA,EAAAuqB,EAAA+Q,GAAA/Q,GAGArG,EAAAtf,iBAAA,MAAA40B,KACAjP,EAAA1sB,OACAsF,GAAAq2B,EAAAr2B,GAAA3E,EAAA+rB,EAAA,GAEApnB,GAAAq2B,EAAAr2B,GAAA3E,EAAA+rB,GAGArG,EAAAvf,iBAAA,MAAA60B,GACA,IAAAlyB,EAAA,EAA4BA,EAAA,EAAIA,GAAA,EAChCijB,EAAA1sB,OACAuF,EAAAkE,GAAAlE,EAAAkE,IAAAkyB,EAAAp2B,GAAA5E,EAAA8I,GAAAlE,EAAAkE,IAAAijB,EAAA,GAEAnnB,EAAAkE,GAAAlE,EAAAkE,IAAAkyB,EAAAp2B,GAAA5E,EAAA8I,GAAAlE,EAAAkE,IAAAijB,CAIA,IAAArG,EAAAxf,eAAAwf,EAAA7gB,GAAA,CACA,SAAAm2B,GACA,IAAAlyB,EAAA,EAAgCA,EAAA,EAAIA,GAAA,EACpCijB,EAAA1sB,OACAwF,EAAAiE,GAAAjE,EAAAiE,IAAAkyB,EAAAn2B,GAAA7E,EAAA8I,GAAAjE,EAAAiE,IAAAijB,EAAA,GAEAlnB,EAAAiE,GAAAjE,EAAAiE,IAAAkyB,EAAAn2B,GAAA7E,EAAA8I,GAAAjE,EAAAiE,IAAAijB,CAIA,OAAAiP,KAEAn2B,EADAknB,EAAA1sB,OACA2B,EAAA6D,EAAAm2B,EAAAC,GAAAj7B,EAAA+rB,EAAA,IAEA/qB,EAAA6D,EAAAm2B,EAAAC,GAAAj7B,EAAA+rB,IAGA,MAAAiP,KAEAn2B,EADAknB,EAAA1sB,OACAsB,EAAAkE,EAAAm2B,EAAAE,GAAAl7B,EAAA+rB,EAAA,IAEAprB,EAAAkE,EAAAm2B,EAAAE,GAAAl7B,EAAA+rB,IAGA,MAAAiP,KAEAn2B,EADAknB,EAAA1sB,OACA0B,EAAA8D,EAAAm2B,EAAAG,GAAAn7B,EAAA+rB,EAAA,IAEAhrB,EAAA8D,EAAAm2B,EAAAG,GAAAn7B,EAAA+rB,KAMA,IAAArmB,EAAA,EAAoBA,EAAAsC,EAAOtC,GAAA,EAG3B,MAFAs1B,EAAAS,EAAA/1B,GAAAtB,KAGAm4B,EAAAd,EAAA/1B,GAAA3F,EACAgsB,EAAAwQ,EAAAtM,QAAA4L,EAAA18B,GAAA4+B,UAAAr4B,GAAAlC,EAAAY,EAAAsB,GAAA3F,EAAA4vB,YACA/xB,KAAAiG,eACAkoB,EAAA1sB,OACAq8B,EAAArnB,UAAA,EAAA2mB,EAAA56B,EAAAJ,EAAA,GAAA+rB,EAAA,IAAAiP,EAAA56B,EAAAJ,EAAA,GAAA+rB,EAAA,IAEA2P,EAAArnB,UAAA,EAAA2mB,EAAA56B,EAAAJ,EAAA,GAAA+rB,GAAAiP,EAAA56B,EAAAJ,EAAA,GAAA+rB,GAGAA,EAAA1sB,OACAq8B,EAAArnB,UAAA2mB,EAAA56B,EAAAJ,EAAA,GAAA+rB,EAAA,GAAAiP,EAAA56B,EAAAJ,EAAA,GAAA+rB,EAAA,IAAAiP,EAAA56B,EAAAJ,EAAA,GAAA+rB,EAAA,IAEA2P,EAAArnB,UAAA2mB,EAAA56B,EAAAJ,EAAA,GAAA+rB,EAAAiP,EAAA56B,EAAAJ,EAAA,GAAA+rB,GAAAiP,EAAA56B,EAAAJ,EAAA,GAAA+rB,GAeA,IAVArG,EAAAtf,kBACA22B,EAAAp4B,EAAA,IAAAA,GAEA+gB,EAAAvf,kBACA62B,EAAA,OAAApgC,KAAAC,MAAA,IAAA+H,EAAA,QAAAhI,KAAAC,MAAA,IAAA+H,EAAA,QAAAhI,KAAAC,MAAA,IAAA+H,EAAA,SAEA8gB,EAAAxf,eAAAwf,EAAA7gB,KACAo4B,EAAA,OAAArgC,KAAAC,MAAA,IAAAgI,EAAA,QAAAjI,KAAAC,MAAA,IAAAgI,EAAA,QAAAjI,KAAAC,MAAA,IAAAgI,EAAA,SAGAjH,KAAAiG,eAAA,CAIA,GAHA63B,EAAArnB,UAAA,GAAAqR,EAAA3f,IAEA21B,EAAArnB,UAAA,EAAA9P,EAAA,GAAAk4B,EAAA,IAAAjB,EAAA,GACAh4B,EAAApD,IAAA,CACAk8B,GAAAL,EAAA1a,MAAA,GAAA2a,EAAA3a,MAAA,KAAA0a,EAAA1a,MAAA,GAAA2a,EAAA3a,MAAA,GACA,IAAA0c,IAAA,IAAArhC,KAAAshC,KAAA5B,GAAA1/B,KAAA4V,EACAypB,GAAA1a,MAAA,GAAA2a,EAAA3a,MAAA,KACA0c,IAAA,KAEAvC,EAAA3oB,QAAAkrB,GAAArhC,KAAA4V,GAAA,KAEAkpB,EAAArnB,UAAAuoB,EAAAC,EAAA,GACAV,GAAA53B,EAAA,GAAAs3B,EAAA18B,GAAA0+B,GAAA,IACAhC,EAAA18B,EAAA,IAAAqrB,KAAAqR,EAAA18B,EAAA,GAAAqrB,MACA2R,GAAAN,EAAA18B,GAAA0+B,GAAA,EACA1B,GAAAzW,EAAAzf,GAAA,IAAAyf,EAAA3lB,OAEa,CAQb,OANA27B,EAAArnB,UAAAknB,EAAAC,EAAA,GAEA9V,EAAAyY,IAEAzC,EAAArnB,UAAAqR,EAAAyY,GAAA,GAAAzY,EAAAyY,GAAA,GAAAzY,EAAApgB,OAAA,GAEAogB,EAAAhgB,GACA,OACAg2B,EAAArnB,UAAAqR,EAAA/f,eAAA+f,EAAAngB,SAAAmgB,EAAA5f,WAAA+1B,EAAA18B,GAAAw+B,OAAA,IACA,MACA,QACAjC,EAAArnB,UAAAqR,EAAA/f,eAAA+f,EAAAngB,SAAAmgB,EAAA5f,WAAA+1B,EAAA18B,GAAAw+B,OAAA,OAGAjC,EAAArnB,UAAA,GAAAqR,EAAA3f,IACA21B,EAAArnB,UAAAsoB,EAAA,KACAjB,EAAArnB,UAAA9P,EAAA,GAAAs3B,EAAA18B,GAAA0+B,GAAA,IAAAt5B,EAAA,GAAAk4B,EAAA,OACAlB,GAAAM,EAAA18B,GAAAyG,EAAA8f,EAAAzf,GAAA,IAAAyf,EAAA3lB,EAEA,SAAA0D,EACA+5B,GAAA9B,EAAAxjB,QACa,QAAAzU,EACb+5B,GAAA9B,EAAArjB,UAEAolB,IAAA/B,EAAA5oB,MAAA,GAAA4oB,EAAA5oB,MAAA,GAAA4oB,EAAA5oB,MAAA,GAAA4oB,EAAA5oB,MAAA,GAAA4oB,EAAA5oB,MAAA,GAAA4oB,EAAA5oB,MAAA,GAAA4oB,EAAA5oB,MAAA,GAAA4oB,EAAA5oB,MAAA,GAAA4oB,EAAA5oB,MAAA,GAAA4oB,EAAA5oB,MAAA,GAAA4oB,EAAA5oB,MAAA,IAAA4oB,EAAA5oB,MAAA,IAAA4oB,EAAA5oB,MAAA,IAAA4oB,EAAA5oB,MAAA,IAAA4oB,EAAA5oB,MAAA,IAAA4oB,EAAA5oB,MAAA,KAEAoqB,GAAAJ,EAGAlB,GAAAz8B,GACAq9B,EAAA,GAAA93B,GAAAw4B,GAAAH,EAAAC,EAAAC,EAAAO,GAAAC,IACA7/B,KAAA4G,gBAAAzF,KAAAy9B,GACAZ,GAAA,EACAh+B,KAAA6G,oBAAA,IAEA+3B,EAAA5+B,KAAA4G,gBAAArF,GACAvB,KAAA6G,mBAAA+3B,EAAA4B,OAAAlB,GAAAH,EAAAC,EAAAC,EAAAO,GAAAC,KAAA7/B,KAAA6G,uBAKAlB,EAAArB,UAAAsE,SAAA,WACA,GAAA5I,KAAAsG,MAAA6C,WAAA0kB,UAAA7tB,KAAAkG,SAAA,CAGAlG,KAAAkG,SAAAlG,KAAAsG,MAAA6C,WAAA0kB,OACA,IAAAtsB,GAAAC,EAAAxB,KAAAmG,mBAAA1E,MAEA,KADAzB,KAAA+F,KAAA,EACAxE,EAAA,EAAWA,EAAAC,EAASD,GAAA,EACpBvB,KAAAmG,mBAAA5E,GAAAqH,WACA5I,KAAA+F,IAAA/F,KAAAmG,mBAAA5E,GAAAwE,KAAA/F,KAAA+F,MAIAJ,EAAArB,UAAAy5B,QAAA,GAAAj6B,GACA6B,EAAArB,UAAAw7B,qBAkBAh5B,EAAAxC,UAAAk8B,OAAA,SAAA58B,EAAAmD,EAAAC,EAAAC,EAAAC,EAAA1E,GACAxC,KAAA+F,IAAAnC,GAAA,EACA5D,KAAA+F,IAAAgB,IAAA,EACA/G,KAAA+F,IAAAiB,IAAA,EACAhH,KAAA+F,IAAAkB,IAAA,EACAjH,KAAA+F,IAAAmB,GAAA,EACAlH,KAAA+F,IAAAvD,GAAA,CACA,IAAAi+B,IAAA,CAgCA,OA9BAzgC,MAAA4D,QACA5D,KAAA4D,IACA5D,KAAA+F,IAAAnC,GAAA,EACA68B,GAAA,GAEAzgC,KAAA+G,SACA/G,KAAA+G,KACA/G,KAAA+F,IAAAgB,IAAA,EACA05B,GAAA,GAEAzgC,KAAAgH,SACAhH,KAAAgH,KACAhH,KAAA+F,IAAAiB,IAAA,EACAy5B,GAAA,GAEAzgC,KAAAiH,SACAjH,KAAAiH,KACAjH,KAAA+F,IAAAkB,IAAA,EACAw5B,GAAA,GAEAzgC,KAAAkH,QACAlH,KAAAkH,IACAlH,KAAA+F,IAAAmB,GAAA,EACAu5B,GAAA,IAEAj+B,EAAAf,QAAAzB,KAAAwC,EAAA,KAAAA,EAAA,IAAAxC,KAAAwC,EAAA,KAAAA,EAAA,IAAAxC,KAAAwC,EAAA,KAAAA,EAAA,IAAAxC,KAAAwC,EAAA,KAAAA,EAAA,IAAAxC,KAAAwC,EAAA,MAAAA,EAAA,KAAAxC,KAAAwC,EAAA,MAAAA,EAAA,MACAxC,KAAAwC,IACAxC,KAAA+F,IAAAvD,GAAA,EACAi+B,GAAA,GAEAA,GA6CAt5B,EAAA7C,UAAAo8B,eAAA,SAAAt5B,GACA,GAAAK,GAAAzH,KAAAyH,WACAA,GAAAC,OAAAN,EAAAM,OACAD,EAAAE,SAAAP,EAAAO,SAAAP,EAAAO,SAAAF,EAAAE,SACAF,EAAA/G,EAAA0G,EAAA1G,EACA+G,EAAAG,OAAAR,EAAAQ,OACAH,EAAAI,QAAAT,EAAAS,QACAJ,EAAAR,GAAAG,EAAAH,GACAQ,EAAAK,EAAAV,EAAAU,EACAL,EAAAM,cAAAX,EAAAW,cACAN,EAAAO,EAAAZ,EAAAY,EACAP,EAAAQ,GAAAb,EAAAa,GACAR,EAAAS,WAAAd,EAAAc,WACAT,EAAAU,GAAAf,EAAAe,GACAV,EAAAW,GAAAhB,EAAAgB,GACAX,EAAAtF,EAAAiF,EAAAjF,EACAsF,EAAAT,GAAAI,EAAAJ,GACAS,EAAAV,GAAAK,EAAAL,GACAU,EAAA3H,EAAAsH,EAAAtH,EACA2H,EAAAY,GAAAjB,EAAAiB,GACAZ,EAAAa,cAAAlB,EAAAkB,eAAAb,EAAAa,cACAb,EAAAc,gBAAAnB,EAAAmB,iBAAAd,EAAAc,gBACAd,EAAAe,gBAAApB,EAAAoB,iBAAAf,EAAAe,gBACAf,EAAAgB,QAAArB,EAAAqB,QACAhB,EAAAiB,YAAA,GAGAvB,EAAA7C,UAAAqE,eAAA,WAEA,MADA3I,MAAAuH,GAAAvH,KAAAoH,KAAArH,EAAAmL,EAAAzJ,OAAA,EACAzB,KAAAuH,IAGAJ,EAAA7C,UAAAsE,SAAA,WACA5I,KAAA+F,KAAA,CACA,IAAA8nB,GAAA7tB,KAAA8F,KAAAqD,WAAA0kB,OACA,IAAAA,IAAA7tB,KAAAkG,UAAAlG,KAAAuH,IAAAvH,KAAAW,WAAA,CAKA,IAFA,GAAAggC,GAAAC,EAAA5gC,KAAAoH,KAAArH,EAAAmL,EACA3J,EAAA,EAAAC,EAAAo/B,EAAAn/B,OACAF,GAAAC,EAAA,IACAm/B,EAAAC,EAAAr/B,GAAAY,IACAZ,IAAAC,EAAA,GAAAo/B,EAAAr/B,EAAA,GAAAzB,EAAA+tB,KAGAtsB,GAAA,CAEAvB,MAAAwH,YAAAjG,IACAo/B,EAAAj4B,YACA1I,KAAA6gC,iBAAAF,GAEA3gC,KAAA0gC,eAAAC,GACA3gC,KAAA+F,KAAA/F,KAAAW,WACAX,KAAAsH,GAAAtH,KAAAoC,EAAApC,KAAAyH,YAAA3H,EACAE,KAAAwH,UAAAjG,GAEAvB,KAAAkG,SAAA2nB,IAGA1mB,EAAA7C,UAAAu8B,iBAAA,SAAA/Y,GACAA,EAAApf,YAAA,CACA,IAGAnH,GAAAC,EACAs/B,EAAA5hC,EAKA4I,EAAAsC,EAEA22B,EAXA/a,EAAAhmB,KAAA8F,KAAAqD,WAAA6c,YACA5e,EAAApH,KAAAoH,KACA62B,KAEAzE,EAAA,EACAwH,EAAA55B,EAAAF,EAAA5E,EACA2+B,EAAA,EAAAC,EAAA,EAAAxB,EAAA,EAAAx3B,KACAi5B,EAAA,EACAC,EAAA,EAEAzW,EAAA3E,EAAAgG,cAAAlE,EAAApnB,GACA+wB,EAAA,EACA4P,EAAA1W,EAAA/iB,OAAAwf,MAAA,KAEAvf,EAAA,SAAAD,EAAA,QACApG,GAAA6/B,EAAA5/B,MAEA,KAAAF,EAAA,EAAYA,EAAAC,EAAMD,GAAA,EAElB,OADA8/B,EAAA9/B,GAAA+/B,eAEA,aACA15B,EAAA,QACA,MACA,YACAC,EAAA,KACA,MACA,aACAA,EAAA,KACA,MACA,cACAA,EAAA,KACA,MACA,eACA,aACAA,EAAA,KACA,aACA,WACAA,EAAA,MAIAigB,EAAAjgB,UACAigB,EAAAlgB,SACApG,EAAAsmB,EAAAhoB,EAAA2B,MACA,IAAA8/B,GAAAzZ,EAAAzf,GAAA,IAAAyf,EAAA3lB,CACA,IAAA2lB,EAAAxR,GAAA,CACA,GAAA3O,GAAAmgB,EAAAxR,GAAA,GACAkrB,GAAA,CACA,KAAAjgC,EAAA,EAAgBA,EAAAC,EAAMD,GAAA,EACtBu/B,GAAA,EACA,MAAAhZ,EAAAhoB,EAAA2hC,OAAAlgC,GACAigC,EAAAjgC,EACa,KAAAumB,EAAAhoB,EAAAkd,WAAAzb,KACb4/B,EAAA,EACAL,GAAA,GAEA9a,EAAAlkB,OACAi/B,EAAA/a,EAAA2F,YAAA7D,EAAAhoB,EAAA2hC,OAAAlgC,GAAAopB,EAAA/iB,OAAA+iB,EAAAE,SACA4G,EAAAqP,EAAA,EAAAC,EAAAv1B,EAAAsc,EAAA3lB,EAAA,KAGAsvB,EAAAzL,EAAA6F,YAAA/D,EAAAhoB,EAAA2hC,OAAAlgC,GAAAumB,EAAApnB,EAAAonB,EAAA3lB,GAEAg/B,EAAA1P,EAAA9pB,GAAA,MAAAmgB,EAAAhoB,EAAA2hC,OAAAlgC,KACA,IAAAigC,EACAhgC,GAAA,EAEAD,EAAAigC,EAEA1Z,EAAAhoB,EAAAgoB,EAAAhoB,EAAA4hC,OAAA,EAAAngC,GAAA,KAAAumB,EAAAhoB,EAAA4hC,OAAAngC,IAAAigC,EAAAjgC,EAAA,EAAAA,GACAigC,GAAA,EACAL,EAAA,IAEAA,GAAA1P,EACA0P,GAAAI,EAGA//B,GAAAsmB,EAAAhoB,EAAA2B,OAEA0/B,GAAAI,EACA9P,EAAA,CACA,IACAkQ,GADAC,EAAA,CAEA,KAAArgC,EAAA,EAAeA,EAAAC,EAASD,GAAA,EAiCxB,GAhCAu/B,GAAA,EACAa,EAAA7Z,EAAAhoB,EAAA2hC,OAAAlgC,GACA,MAAAogC,EACAziC,EAAA,IACS,KAAAyiC,EAAA3kB,WAAA,IACT4kB,EAAA,EACA15B,EAAA/G,KAAAggC,GACAC,EAAAD,EAAAC,EAAAD,EAAAC,EACAD,GAAA,EAAAI,EACAriC,EAAA,GACA4hC,GAAA,EACApB,GAAA,GAEAxgC,EAAA4oB,EAAAhoB,EAAA2hC,OAAAlgC,GAEAykB,EAAAlkB,OACAi/B,EAAA/a,EAAA2F,YAAAgW,EAAAhX,EAAA/iB,OAAAoe,EAAAgG,cAAAlE,EAAApnB,GAAAmqB,SACA4G,EAAAqP,EAAA,EAAAC,EAAAv1B,EAAAsc,EAAA3lB,EAAA,KAIAsvB,EAAAzL,EAAA6F,YAAA3sB,EAAA4oB,EAAApnB,EAAAonB,EAAA3lB,GAIA,MAAAw/B,EACAC,GAAAnQ,EAAA8P,GAEAJ,GAAA1P,EAAA8P,EAAAK,EACAA,EAAA,GAEA3D,EAAA98B,MAAsB6G,EAAAypB,EAAAwO,GAAAxO,EAAA2O,IAAAa,EAAArhC,EAAAkhC,EAAAX,aAAAjhC,MAAA6gC,KAAAL,IACtB,GAAAsB,GAEA,GADAC,GAAAxP,EACA,IAAAvyB,GAAA,KAAAA,GAAAqC,GAAAC,EAAA,GAIA,IAHA,IAAAtC,GAAA,KAAAA,IACA+hC,GAAAxP,GAEAyP,GAAA3/B,GACA08B,EAAAiD,GAAAjB,GAAAgB,EACAhD,EAAAiD,GAAAtU,IAAA4M,EACAyE,EAAAiD,GAAAlB,MAAAvO,EACAyP,GAAA,CAEA1H,IAAA,EACAyH,EAAA,OAES,OAAAD,GAET,GADAC,GAAAxP,EACA,IAAAvyB,GAAAqC,GAAAC,EAAA,GAIA,IAHA,IAAAtC,IACA+hC,GAAAxP,GAEAyP,GAAA3/B,GACA08B,EAAAiD,GAAAjB,GAAAgB,EACAhD,EAAAiD,GAAAtU,IAAA4M,EACAyE,EAAAiD,GAAAlB,MAAAvO,EACAyP,GAAA,CAEAD,GAAA,EACAzH,GAAA,OAGAyE,GAAAzE,GAAA5M,IAAA4M,EACAyE,EAAAzE,GAAAwG,MAAA,EACAxG,GAAA,CAMA,IAHA1R,EAAA9f,EAAAi2B,EACAmD,EAAAD,EAAAC,EAAAD,EAAAC,EACAl5B,EAAA/G,KAAAggC,GACArZ,EAAAxR,GACAwR,EAAAngB,SAAAmgB,EAAAxR,GAAA,GACAwR,EAAA/f,cAAA,MAGA,QADA+f,EAAAngB,SAAAy5B,EACAtZ,EAAAhgB,GACA,OACAggB,EAAA/f,eAAA+f,EAAAngB,QACA,MACA,QACAmgB,EAAA/f,eAAA+f,EAAAngB,SAAA,CACA,MACA,SACAmgB,EAAA/f,cAAA,EAGA+f,EAAA5f,YAEA,IAAAi1B,GAAA0E,EAAAhE,EAAAz2B,EAAAZ,CACA4D,GAAAyzB,EAAAp8B,MACA,IAAAqgC,GAAAlV,EAAAmV,IACA,KAAAj6B,EAAA,EAAYA,EAAAsC,EAAOtC,GAAA,GAanB,IAZAq1B,EAAAU,EAAA/1B,GACAq1B,EAAA32B,EAAAQ,KACA8gB,EAAAvf,iBAAA,GAEA40B,EAAA32B,EAAAO,KACA+gB,EAAAtf,iBAAA,IAEA20B,EAAA32B,EAAAS,IAAAk2B,EAAA32B,EAAA62B,IAAAF,EAAA32B,EAAA82B,IAAAH,EAAA32B,EAAA+2B,MACAzV,EAAAxf,eAAA,GAEAskB,EAAA,EACAkV,EAAA3E,EAAAh7B,EAAAI,EACAhB,EAAA,EAAgBA,EAAAC,EAAMD,GAAA,EACtBsgC,EAAA5D,EAAA18B,GACAsgC,EAAA1B,UAAAr4B,GAAA8kB,GACA,GAAAkV,GAAA,IAAAD,EAAA3iC,KAAA,GAAA4iC,GAAA,IAAAD,EAAA3iC,KAAA,KAAA2iC,EAAA3iC,KAAA,GAAA4iC,IAAAD,EAAAjiC,GAAA,KAAAiiC,EAAA3iC,KAAAqC,GAAAC,EAAA,OAAAsgC,IAAAD,EAAAjiC,GAAA2B,GAAAC,EAAA,MACA,IAAA27B,EAAAh7B,EAAA6/B,IACAD,EAAA5gC,KAAAyrB,GAEAA,GAAA,EAGAxlB,GAAAZ,EAAAsB,GAAA3F,EAAA4vB,WAAAnF,CACA,IAAAqV,GAAAC,GAAA,CACA,QAAA/E,EAAAh7B,EAAA6/B,GACA,IAAAzgC,EAAA,EAAsBA,EAAAC,EAASD,GAAA,EAC/BsgC,EAAA5D,EAAA18B,GACA2gC,GAAAL,EAAA1B,UAAAr4B,KACAo6B,EAAAL,EAAA1B,UAAAr4B,GACAm6B,EAAAF,EAAArgC,OAAA1C,KAAA2D,MAAA3D,KAAAgD,SAAA+/B,EAAAtgC,QAAA,OAEAogC,EAAA1B,UAAAr4B,GAAAm6B,EAIAna,EAAArf,QAAAqf,EAAA7f,IAAA,IAAA6f,EAAA3lB,EACA2lB,EAAA3f,GAAA2f,EAAA3f,IAAA,EACA2f,EAAApgB,OAAAijB,EAAAjjB,OAAAogB,EAAA3lB,EAAA,KAGAgF,EAAA7C,UAAA69B,mBAAA,SAAAC,EAAA5I,GACAA,MAAA/6B,KAAA+6B,EAAAx5B,KAAAwH,UAAAgyB,CACA,IAAA6I,GAAAriC,KAAAoH,KAAArH,EAAAmL,EAAAsuB,GAAAr3B,CACAkgC,GAAA35B,YAAA,EACA25B,EAAAviC,EAAAsiC,EAAAtiC,EACAE,KAAAwH,WAAA,EACAxH,KAAAW,YAAA,EACAX,KAAA4I,WAGA,IAAA05B,IAAA,WAEA,QAAAtmB,GAAA/B,GACA,MAAAA,GAAA4Y,OAAA1tB,MAAAC,MAAA,MAAsC3D,OAAAwY,EAAAxY,UAGtC,OACAua,aAGA9B,GAAA,WAUA,QAAAC,KACA,GAAAwJ,EAOA,OANA1e,IACAA,GAAA,EACA0e,EAAAjJ,EAAAzV,IAEA0e,GAAA,OAEAA,EAGA,QAAAiY,GAAAjY,GACA1e,IAAAC,IACAwV,EAAA4nB,GAAAtmB,OAAAtB,GACAxV,GAAA,GAEAwV,EAAAzV,GAAA0e,EACA1e,GAAA,EA1BA,GAAAmb,IACAjG,WACAyhB,WAGA32B,EAAA,EACAC,EAAA,EACAwV,EAAAvV,MAAAC,MAAA,MAA8B3D,OAAAyD,GAuB9B,OAAAkb,MAEAiU,GAAA,WAYA,QAAAK,KACA,GAAAgE,EAOA,OANAzzB,IACAA,GAAA,EACAyzB,EAAAhe,EAAAzV,IAEAyzB,EAAA,GAAA1zB,GAEA0zB,EAGA,QAAAkD,GAAAlD,GACAzzB,IAAAC,IACAwV,EAAA4nB,GAAAtmB,OAAAtB,GACAxV,GAAA,EAEA,IAAA3D,GAAAC,EAAAk3B,EAAAzzB,OACA,KAAA1D,EAAA,EAAYA,EAAAC,EAASD,GAAA,EACrB2Y,GAAA0hB,QAAAlD,EAAAt2B,EAAAb,IACA2Y,GAAA0hB,QAAAlD,EAAAn3B,MACA2Y,GAAA0hB,QAAAlD,EAAA90B,EAAArC,IACAm3B,EAAAt2B,EAAAb,GAAA,KACAm3B,EAAAn3B,KAAA,KACAm3B,EAAA90B,EAAArC,GAAA,IAEAm3B,GAAAzzB,QAAA,EACAyzB,EAAA74B,GAAA,EACA6a,EAAAzV,GAAAyzB,EACAzzB,GAAA,EAGA,QAAAs9B,GAAAC,EAAA/gC,GACA,KAAAA,KACAm6B,EAAA4G,EAAA/gC,IAIA,QAAAuX,GAAAme,EAAAvgB,GACA,GAAArV,GAAAC,MAAA/C,KAAA04B,EAAAlyB,QAAAkyB,EAAA/0B,EAAAX,OAAA01B,EAAAlyB,QACAw9B,EAAA/N,GACA+N,GAAA9P,UAAAnxB,GACAihC,EAAA5iC,EAAAs3B,EAAAt3B,CAEA,IAAA6Z,EAEA,KAAAnY,EAAA,EAAYA,EAAAC,EAASD,GAAA,EACrBqV,GACA8C,EAAA9C,EAAAmD,kBAAAod,EAAA/0B,EAAAb,GAAA,GAAA41B,EAAA/0B,EAAAb,GAAA,QACAkhC,EAAA3P,QAAApZ,EAAA,GAAAA,EAAA,OAAAnY,GACA2Y,GAAA0hB,QAAAliB,GACAA,EAAA9C,EAAAmD,kBAAAod,EAAAvzB,EAAArC,GAAA,GAAA41B,EAAAvzB,EAAArC,GAAA,QACAkhC,EAAA3P,QAAApZ,EAAA,GAAAA,EAAA,OAAAnY,GACA2Y,GAAA0hB,QAAAliB,GACAA,EAAA9C,EAAAmD,kBAAAod,EAAA51B,KAAA,GAAA41B,EAAA51B,KAAA,QACAkhC,EAAA3P,QAAApZ,EAAA,GAAAA,EAAA,OAAAnY,GACA2Y,GAAA0hB,QAAAliB,IAEA+oB,EAAAzP,YAAAmE,EAAA/0B,EAAAb,GAAA,GAAA41B,EAAA/0B,EAAAb,GAAA,GAAA41B,EAAAvzB,EAAArC,GAAA,GAAA41B,EAAAvzB,EAAArC,GAAA,GAAA41B,EAAA51B,KAAA,GAAA41B,EAAA51B,KAAA,GAAAA,EAGA,OAAAkhC,GAvEA,GAAAriB,IACApH,QACA0b,WACAkH,UACA2G,gBAGAt9B,EAAA,EACAC,EAAA,EACAwV,EAAAvV,MAAAC,MAAA,MAA8B3D,OAAAyD,GAkE9B,OAAAkb,MAEAkU,GAAA,WAaA,QAAAC,KACA,GAAAmO,EAOA,OANAz9B,IACAA,GAAA,EACAy9B,EAAAhoB,EAAAzV,IAEAy9B,EAAA,GAAAj9B,GAEAi9B,EAGA,QAAA9G,GAAA8G,GACA,GAAAnhC,GAAAC,EAAAkhC,EAAAz9B,OACA,KAAA1D,EAAA,EAAYA,EAAAC,EAASD,GAAA,EACrB8yB,GAAAuH,QAAA8G,EAAAh9B,OAAAnE,GAEAmhC,GAAAz9B,QAAA,EAEAA,IAAAC,IACAwV,EAAA4nB,GAAAtmB,OAAAtB,GACAxV,GAAA,GAEAwV,EAAAzV,GAAAy9B,EACAz9B,GAAA,EAGA,QAAA+T,GAAA0pB,EAAAC,GACA/G,EAAA8G,GACAz9B,IAAAC,IACAwV,EAAA4nB,GAAAtmB,OAAAtB,GACAxV,GAAA,GAEAwV,EAAAzV,GAAAy9B,EACAz9B,GAAA,EA7CA,GAAAmb,IACAmU,qBACAqH,UACA5iB,SAGA/T,EAAA,EACAC,EAAA,EACAwV,EAAAvV,MAAAC,MAAA,MAA8B3D,OAAAyD,GAyC9B,OAAAkb,KAGAvX,GAAAvE,UAAAs+B,YAAA,SAAAC,GACA,GAAAthC,GAAA6F,EAAA5F,EAAAxB,KAAAiJ,OAAAxH,MAEA,KADAzB,KAAA0Q,gBAAA,EACAnP,EAAAC,EAAA,EAAqBD,GAAA,EAAQA,IAC7BvB,KAAA2J,SAAApI,KACA6F,EAAApH,KAAAiJ,OAAA1H,GACA6F,EAAA07B,GAAA17B,EAAAwnB,IAAAiU,EAAA7iC,KAAAiJ,OAAA1H,GAAAqtB,IAAAxnB,EAAAkF,GAAAlF,EAAAwnB,GAAAiU,EAAA7iC,KAAAiJ,OAAA1H,GAAAqtB,IAEA5uB,KAAA+iC,UAAAxhC,IAGAvB,KAAA0Q,iBAAA1Q,KAAA2J,SAAApI,IAAAvB,KAAA0Q,cAEA1Q,MAAAgjC,wBAGAn6B,EAAAvE,UAAA2+B,WAAA,SAAAC,GACA,OAAAA,EAAA5yB,IACA,OACA,MAAAtQ,MAAAmjC,YAAAD,EACA,QACA,MAAAljC,MAAAojC,WAAAF,EACA,QACA,MAAAljC,MAAAqjC,YAAAH,EACA,QACA,MAAAljC,MAAAsjC,YAAAJ,EACA,QACA,MAAAljC,MAAAujC,WAAAL,EACA,SACA,MAAAljC,MAAAwjC,aAAAN,EACA,SACA,YAEA,MAAAljC,MAAAyjC,WAAAP,IAGAr6B,EAAAvE,UAAAk/B,aAAA,WACA,SAAAE,OAAA,qDAGA76B,EAAAvE,UAAAwM,cAAA,WACA,GAAAvP,GAAAC,EAAAxB,KAAAiJ,OAAAxH,MACA,KAAAF,EAAA,EAAYA,EAAAC,EAAMD,GAAA,EAClBvB,KAAA+iC,UAAAxhC,EAEAvB,MAAAgjC,wBAGAn6B,EAAAvE,UAAAq/B,cAAA,SAAAC,GACA5jC,KAAA0Q,gBAAA,CACA,IAAAnP,GACAuG,EADAtG,EAAAoiC,EAAAniC,OACA2I,EAAApK,KAAAiJ,OAAAxH,MACA,KAAAF,EAAA,EAAYA,EAAAC,EAAMD,GAAA,EAElB,IADAuG,EAAA,EACAA,EAAAsC,GAAA,CACA,GAAApK,KAAAiJ,OAAAnB,GAAA2Z,IAAAmiB,EAAAriC,GAAAkgB,GAAA,CACAzhB,KAAAiJ,OAAAnB,GAAA87B,EAAAriC,EACA,OAEAuG,GAAA,IAKAe,EAAAvE,UAAAu/B,oBAAA,SAAAC,GACA9jC,KAAAmJ,WAAA46B,iBAAAD,GAGAj7B,EAAAvE,UAAA0/B,UAAA,WACAhkC,KAAAmJ,WAAAI,iBACAvJ,KAAA8Q,iBAGAjI,EAAAvE,UAAA2/B,sBAAA,SAAA5kC,EAAA6kC,EAAAC,GACAA,OAIA,KAHA,GAAAx6B,GAAA3J,KAAA2J,SACAV,EAAAjJ,KAAAiJ,OACA1H,EAAA,EAAAC,EAAAyH,EAAAxH,OACAF,EAAAC,GACAyH,EAAA1H,GAAAqrB,KAAAsX,IACAv6B,EAAApI,KAAA,IAAAoI,EAAApI,OAGa9C,KAAAwK,EAAA1H,GAAAyC,QACbmgC,EAAAhjC,KAAAwI,EAAApI,IACAoI,EAAApI,GAAA6iC,WAAA,EACApkC,KAAAikC,sBAAA5kC,EAAA4J,EAAA1H,GAAAyC,OAAAmgC,KAEAA,EAAAhjC,KAAAwI,EAAApI,IACAoI,EAAApI,GAAA6iC,WAAA,EACA/kC,EAAAglC,aAAAF,KATAnkC,KAAA+iC,UAAAxhC,GACAvB,KAAAskC,kBAAAjlC,KAaAkC,GAAA,GAIAsH,EAAAvE,UAAAggC,kBAAA,SAAAjlC,GACAW,KAAA4J,gBAAAzI,KAAA9B,IAuBAsF,EAAAkE,EAAAC,GAEAA,EAAAxE,UAAAm/B,WAAA,SAAAr8B,GACA,UAAA0F,GAAA1F,EAAApH,KAAA6P,aAAA7P,KAAAmJ,WAAAnJ,OAGA8I,EAAAxE,UAAAg/B,YAAA,SAAAl8B,GACA,UAAAiG,GAAAjG,EAAApH,KAAA6P,aAAA7P,KAAAmJ,WAAAnJ,OAGA8I,EAAAxE,UAAAi/B,WAAA,SAAAn8B,GACA,UAAAyG,GAAAzG,EAAApH,KAAA6P,aAAA7P,KAAAmJ,WAAAnJ,OAIA8I,EAAAxE,UAAA6+B,YAAA,SAAA/7B,GACA,UAAA2J,GAAA3J,EAAApH,KAAA6P,aAAA7P,KAAAmJ,WAAAnJ,OAGA8I,EAAAxE,UAAA8+B,WAAA,SAAAh8B,GACA,UAAAoJ,GAAApJ,EAAApH,KAAA6P,aAAA7P,KAAAmJ,WAAAnJ,OAIA8I,EAAAxE,UAAA++B,YAAA,SAAAj8B,GACA,UAAA+J,GAAA/J,EAAApH,KAAA6P,aAAA7P,KAAAmJ,WAAAnJ,OAGA8I,EAAAxE,UAAAigC,gBAAA,SAAAC,GACAxkC,KAAA6P,aAAA1E,SAAAC,gBAAAC,GAAA,OACArL,KAAA6P,aAAAvE,aAAA,sCACAtL,KAAA6P,aAAAvE,aAAA,iBAAAk5B,EAAAh5B,EAAA,IAAAg5B,EAAAtiC,GACAlC,KAAAqJ,aAAAI,cACAzJ,KAAA6P,aAAAvE,aAAA,QAAAk5B,EAAAh5B,GACAxL,KAAA6P,aAAAvE,aAAA,SAAAk5B,EAAAtiC,GACAlC,KAAA6P,aAAAvQ,MAAAsc,MAAA,OACA5b,KAAA6P,aAAAvQ,MAAAmlC,OAAA,QAEAzkC,KAAAqJ,aAAAK,WACA1J,KAAA6P,aAAAvE,aAAA,QAAAtL,KAAAqJ,aAAAK,WAEA1J,KAAA6P,aAAAvE,aAAA,sBAAAtL,KAAAqJ,aAAAC,qBAGAtJ,KAAA+I,cAAA27B,QAAA94B,YAAA5L,KAAA6P,aAEA,IAAApF,GAAAU,SAAAC,gBAAAC,GAAA,OACArL,MAAAmJ,WAAAsB,OACAzK,KAAA6P,aAAAjE,YAAAnB,GACAzK,KAAAmJ,WAAA8H,aAAAjR,KAAA+I,cAAAkI,aAAA5P,KAAArB,KAAA+I,eACA/I,KAAAmJ,WAAA+yB,cAAAl8B,KAAA+I,cAAAmzB,cAAA76B,KAAArB,KAAA+I,eACA/I,KAAAmJ,WAAAI,gBAAAvJ,KAAAqJ,aAAAE,gBACAvJ,KAAAmJ,WAAA0kB,QAAA,EACA7tB,KAAAmJ,WAAA6U,GAAAwmB,EAAAxmB,GACAhe,KAAAmJ,WAAAw7B,UACAn5B,EAAAg5B,EAAAh5B,EACAtJ,EAAAsiC,EAAAtiC,GAEAlC,KAAAoH,KAAAo9B,EACAxkC,KAAAmJ,WAAAyH,UAAA4zB,EAAAI,EACA,IAAA16B,GAAAiB,SAAAC,gBAAAC,GAAA,YACAhB,EAAAc,SAAAC,gBAAAC,GAAA,OACAhB,GAAAiB,aAAA,QAAAk5B,EAAAh5B,GACAnB,EAAAiB,aAAA,SAAAk5B,EAAAtiC,GACAmI,EAAAiB,aAAA,OACAjB,EAAAiB,aAAA,MACA,IAAAu5B,GAAA,iBAAAhjC,EAAA,GACAqI,GAAAoB,aAAA,KAAAu5B,GACA36B,EAAA0B,YAAAvB,EACA,IAAAuC,GAAAzB,SAAAC,gBAAAC,GAAA,IACAuB,GAAAtB,aAAA,mBAAAa,GAAA,IAAA04B,EAAA,KACA7kC,KAAA6P,aAAAjE,YAAAgB,GACAnC,EAAAmB,YAAA1B,GACAlK,KAAA6P,aAAAjD,EACA5M,KAAAiJ,OAAAu7B,EAAAv7B,OACAjJ,KAAAmJ,WAAA6c,YAAA,GAAAsC,IACAtoB,KAAAmJ,WAAA6c,YAAAwF,SAAAgZ,EAAA1iC,OACA9B,KAAAmJ,WAAA6c,YAAAkF,SAAAsZ,EAAA/a,MAAAhf,GACAzK,KAAA2J,SAAAxE,MAAAC,MAAA,MAAsC3D,OAAA+iC,EAAAv7B,OAAAxH,UAItCqH,EAAAxE,UAAAwO,QAAA,WACA9S,KAAA+I,cAAA27B,QAAA7b,UAAA,GACA7oB,KAAA6P,aAAA,KACA7P,KAAAmJ,WAAAsB,KAAA,IACA,IAAAlJ,GAAAC,EAAAxB,KAAAiJ,OAAAjJ,KAAAiJ,OAAAxH,OAAA,CACA,KAAAF,EAAA,EAAeA,EAAAC,EAASD,IACxBvB,KAAA2J,SAAApI,IACAvB,KAAA2J,SAAApI,GAAAuR,SAGA9S,MAAA2J,SAAAlI,OAAA,EACAzB,KAAA6J,WAAA,EACA7J,KAAA+I,cAAA,MAGAD,EAAAxE,UAAAwgC,oBAAA,aAGAh8B,EAAAxE,UAAAy+B,UAAA,SAAAhQ,GACA,GAAAppB,GAAA3J,KAAA2J,QACA,KAAAA,EAAAopB,IAAA,IAAA/yB,KAAAiJ,OAAA8pB,GAAAziB,GAAA,CAGA3G,EAAAopB,IAAA,CACA,IAAA1zB,GAAAW,KAAAijC,WAAAjjC,KAAAiJ,OAAA8pB,GAEAppB,GAAAopB,GAAA1zB,EACAiU,KACA,IAAAtT,KAAAiJ,OAAA8pB,GAAAziB,IACAtQ,KAAAmJ,WAAA46B,iBAAAgB,oBAAA1lC,GAEAA,EAAA2lC,mBAEAhlC,KAAAilC,mBAAA5lC,EAAA0zB,GACA/yB,KAAAiJ,OAAA8pB,GAAA3M,KACApmB,KAAA2J,SAAAopB,EAAA,SAAA/yB,KAAA2J,SAAAopB,EAAA,GAIA1zB,EAAA6lC,SAAAv7B,EAAAopB,EAAA,GAAAloB,UAHA7K,KAAA+iC,UAAAhQ,EAAA,GACA/yB,KAAAskC,kBAAAjlC,OAOAyJ,EAAAxE,UAAA0+B,qBAAA,WACA,KAAAhjC,KAAA4J,gBAAAnI,QAAA,CACA,GAAApC,GAAAW,KAAA4J,gBAAA2uB,KAEA,IADAl5B,EAAA8lC,iBACA9lC,EAAA+H,KAAAgf,GAEA,IADA,GAAA7kB,GAAA,EAAAC,EAAAxB,KAAA2J,SAAAlI,OACAF,EAAAC,GAAA,CACA,GAAAxB,KAAA2J,SAAApI,KAAAlC,EAAA,CACAA,EAAA6lC,SAAAllC,KAAA2J,SAAApI,EAAA,GAAAsJ,QACA,OAEAtJ,GAAA,KAMAuH,EAAAxE,UAAA8gC,YAAA,SAAAvC,GACA,GAAA7iC,KAAAkJ,eAAA25B,IAAA7iC,KAAA6J,UAAA,CAGA,OAAAg5B,EACAA,EAAA7iC,KAAAkJ,cAEAlJ,KAAAkJ,cAAA25B,EAKA7iC,KAAAmJ,WAAAC,SAAAy5B,EACA7iC,KAAAmJ,WAAA0kB,SAAA,EACA7tB,KAAAmJ,WAAA46B,iBAAAsB,aAAAxC,CACA,IAAAthC,GAAAC,EAAAxB,KAAAiJ,OAAAxH,MAIA,KAHAzB,KAAA0Q,gBACA1Q,KAAA4iC,YAAAC,GAEAthC,EAAAC,EAAA,EAAqBD,GAAA,EAAQA,KAC7BvB,KAAA0Q,gBAAA1Q,KAAA2J,SAAApI,KACAvB,KAAA2J,SAAApI,GAAA+jC,aAAAzC,EAAA7iC,KAAAiJ,OAAA1H,GAAAqtB,GAGA,KAAArtB,EAAAC,EAAA,EAAqBD,GAAA,EAAQA,KAC7BvB,KAAA0Q,gBAAA1Q,KAAA2J,SAAApI,KACAvB,KAAA2J,SAAApI,GAAA6jC,gBAKAt8B,EAAAxE,UAAA2gC,mBAAA,SAAA5lC,EAAA0zB,GACA,GAAAwS,GAAAlmC,EAAAmmC,gBACA,IAAAD,EAAA,CAKA,IAFA,GACAE,GADAlkC,EAAA,EAEAA,EAAAwxB,GACA/yB,KAAA2J,SAAApI,KAAA,IAAAvB,KAAA2J,SAAApI,IAAAvB,KAAA2J,SAAApI,GAAAikC,mBACAC,EAAAzlC,KAAA2J,SAAApI,GAAAikC,kBAEAjkC,GAAA,CAEAkkC,GACAzlC,KAAA6P,aAAA61B,aAAAH,EAAAE,GAEAzlC,KAAA6P,aAAAjE,YAAA25B,KAIAz8B,EAAAxE,UAAAqhC,KAAA,WACA3lC,KAAA6P,aAAAvQ,MAAAsmC,QAAA,QAGA98B,EAAAxE,UAAAuhC,KAAA,WACA7lC,KAAA6P,aAAAvQ,MAAAsmC,QAAA,SAGA98B,EAAAxE,UAAAwhC,wBAAA,SAAApe,GACA,GAAAnmB,GAAAC,EAAAkmB,EAAAjmB,OACAskC,EAAA56B,SAAAC,gBAAAC,GAAA,IACA,KAAA9J,EAAA,EAAYA,EAAAC,EAAMD,GAAA,EAClB,GAAAmmB,EAAAnmB,GAAAsP,GAAA,CACA,GAAAtF,GAAAvL,KAAAojC,WAAA1b,EAAAnmB,GAAAwkC,EAAA/lC,KAAAmJ,WAAAoC,KAAA,KACAA,GAAAy5B,kBAGAhlC,KAAAmJ,WAAA46B,iBAAAgB,oBAAAx5B,KAiJAzB,EAAAxF,UAAAm5B,gBAAA,SAAA1K,GACA,MAAA/yB,MAAAiK,SAAA8oB,GAAAxmB,MAGAzC,EAAAxF,UAAAghC,aAAA,WACA,GAAA/jC,GAAAC,EAAAxB,KAAAqH,kBAAA5F,MACA,KAAAF,EAAA,EAAYA,EAAAC,EAAMD,GAAA,EAClBvB,KAAAqH,kBAAA9F,GAAAqH,YAKAkB,EAAAxF,UAAA8gC,YAAA,SAAAY,GACA,GAAAzkC,GAAAC,EAAAxB,KAAAgK,gBAAAvI,MACA,KAAAF,EAAA,EAAeA,EAAAC,EAASD,IAOxB,IANAvB,KAAAiK,SAAA1I,GAAAgL,KAAAxG,KAAA/F,KAAAW,aACAX,KAAA2M,SAAA3M,KAAAgK,gBAAAzI,GAAAvB,KAAAiK,SAAA1I,GAAAgL,KAAAnK,EAAApC,KAAAiK,SAAA1I,KAEAvB,KAAAiK,SAAA1I,GAAA+K,GAAAvG,KAAA/F,KAAAW,aACAX,KAAAiK,SAAA1I,GAAAuE,KAAAwF,aAAA,eAAAtL,KAAAiK,SAAA1I,GAAA+K,GAAAlK,GAEA,MAAApC,KAAAgK,gBAAAzI,GAAAyJ,OACAhL,KAAAiK,SAAA1I,GAAAmL,UAAA1M,KAAAX,QAAA4mC,eAAAC,MAAAngC,KAAA/F,KAAAW,cACAX,KAAAiK,SAAA1I,GAAAmL,QAAApB,aAAA,KAAA06B,EAAA9wB,MAAA,KACAlV,KAAAiK,SAAA1I,GAAAmL,QAAApB,aAAA,KAAA06B,EAAA9wB,MAAA,MAEAlV,KAAA+J,WAAAxI,GAAAiJ,IAAAxK,KAAA+J,WAAAxI,GAAAiJ,EAAAzE,KAAA/F,KAAAW,aAAA,CACA,GAAA4J,GAAAvK,KAAA+J,WAAAxI,GAAAsK,KACA7L,MAAA+J,WAAAxI,GAAAiJ,EAAApI,EAAA,GACA,UAAApC,KAAA+J,WAAAxI,GAAAwK,eACA/L,KAAA+J,WAAAxI,GAAAwK,aAAA,QACA/L,KAAA+J,WAAAxI,GAAAuE,KAAAwF,aAAA,gBAAAa,GAAA,IAAAnM,KAAA+J,WAAAxI,GAAAyK,SAAA,MAEAzB,EAAAe,aAAA,UAAAtL,KAAA+J,WAAAxI,GAAAiJ,EAAApI,KAEA,WAAApC,KAAA+J,WAAAxI,GAAAwK,eACA/L,KAAA+J,WAAAxI,GAAAwK,aAAA,SACA/L,KAAA+J,WAAAxI,GAAAuE,KAAAwF,aAAA,gBAEAtL,KAAA+J,WAAAxI,GAAAuE,KAAAwF,aAAA,iBAAAtL,KAAA+J,WAAAxI,GAAAiJ,EAAApI,IAMApC,KAAAW,YAAA,GAGAmJ,EAAAxF,UAAA6hC,eAAA,WACA,MAAAnmC,MAAAkK,aAGAJ,EAAAxF,UAAA+H,qBAAA,WACA,GAAAlC,GAAA,OAKA,OAJAA,IAAA,KAAAnK,KAAAmJ,WAAAw7B,SAAAn5B,EACArB,GAAA,KAAAnK,KAAAmJ,WAAAw7B,SAAAziC,EACAiI,GAAA,MAAAnK,KAAAmJ,WAAAw7B,SAAAn5B,EACArB,GAAA,MAAAnK,KAAAmJ,WAAAw7B,SAAAziC,EAAA,KAIA4H,EAAAxF,UAAAqI,SAAA,SAAAsb,EAAAme,EAAAn8B,GACA,GACA1I,GAAAC,EADA6kC,EAAA,KAAAD,EAAAhkC,EAAA,UAAAgkC,EAAAhkC,EAAA,KAGA,KADAZ,EAAA4kC,EAAAnhC,QACA1D,EAAA,EAAYA,EAAAC,EAAMD,GAAA,EAElB8kC,GAAA,KAAAtnC,GAAAqnC,EAAAxiC,EAAArC,EAAA,WAAAxC,GAAAqnC,EAAAxiC,EAAArC,EAAA,WAAAxC,GAAAqnC,EAAA7kC,KAAA,QAAAxC,GAAAqnC,EAAA7kC,KAAA,QAAAxC,GAAAqnC,EAAAhkC,EAAAb,GAAA,QAAAxC,GAAAqnC,EAAAhkC,EAAAb,GAAA,GAGA6kC,GAAAvmC,GAAA2B,EAAA,IACA6kC,GAAA,KAAAtnC,GAAAqnC,EAAAxiC,EAAArC,EAAA,WAAAxC,GAAAqnC,EAAAxiC,EAAArC,EAAA,WAAAxC,GAAAqnC,EAAA7kC,EAAA,WAAAxC,GAAAqnC,EAAA7kC,EAAA,WAAAxC,GAAAqnC,EAAAhkC,EAAA,WAAArD,GAAAqnC,EAAAhkC,EAAA,QAKA6H,EAAA6B,WAAAu6B,IACAp8B,EAAAnE,OACAsgC,EAAAvmC,EAEaooB,EAAAhd,IACbhB,EAAAnE,KAAAwF,aAAA,IAAAtL,KAAAoM,UAAAi6B,GAEAp8B,EAAAnE,KAAAwF,aAAA,IAAA+6B,GAJAp8B,EAAAnE,KAAAwF,aAAA,SAOArB,EAAA6B,SAAAu6B,IAIAv8B,EAAAxF,UAAAwO,QAAA,WACA9S,KAAAX,QAAA,KACAW,KAAAmJ,WAAA,KACAnJ,KAAAkK,YAAA,KACAlK,KAAAoH,KAAA,KACApH,KAAAgK,gBAAA,MAIA6C,EAAAvI,UAAAgiC,WAAA,WACA,IAAAtmC,KAAAoH,KAAAkf,QACA,QAGA,KADA,GAAA/kB,GAAA,EAAAC,EAAAxB,KAAAoH,KAAA4C,gBAAAvI,OACAF,EAAAC,GAAA,CACA,SAAAxB,KAAAoH,KAAA4C,gBAAAzI,GAAAyJ,OAAA,IAAAhL,KAAAoH,KAAA4C,gBAAAzI,GAAA6mB,GACA,QAEA7mB,IAAA,EAEA,UAGAsL,EAAAvI,UAAA6gC,eAAA,eACA1mC,KAAAuB,KAAAoH,KAAApD,QACAhE,KAAAuL,KAAA04B,sBAAAjkC,UAAAoH,KAAApD,SAIA6I,EAAAvI,UAAAghC,aAAA,SAAAzC,GACA7iC,KAAAoH,KAAA07B,GAAA9iC,KAAAoH,KAAAwnB,IAAAiU,GAAA7iC,KAAAoH,KAAAkF,GAAAtM,KAAAoH,KAAAwnB,GAAAiU,GAEA,IAAA7iC,KAAAumC,YACAvmC,KAAAwmC,SAAA,EACAxmC,KAAAmJ,WAAApD,KAAA,EACA/F,KAAAumC,WAAA,EACAvmC,KAAAW,YAAA,EACAX,KAAAoH,KAAAkf,UACAtmB,KAAAw9B,YAAA78B,YAAA,KAIA,IAAAX,KAAAumC,YACAvmC,KAAAwmC,SAAA,EACAxmC,KAAAmJ,WAAApD,KAAA,EACA/F,KAAAumC,WAAA,EAGA,IAAAhlC,GAAAC,EAAAxB,KAAAqH,kBAAA5F,MACA,KAAAF,EAAA,EAAYA,EAAAC,EAAMD,GAAA,GAClBvB,KAAAumC,WAAAvmC,KAAAokC,WAAA,cAAApkC,KAAAqH,kBAAA9F,GAAAtB,QACAD,KAAAqH,kBAAA9F,GAAAqH,WACA5I,KAAAqH,kBAAA9F,GAAAwE,MACA/F,KAAAwmC,SAAA,EACAxmC,KAAAmJ,WAAApD,KAAA,GAuBA,OAnBA/F,MAAAoH,KAAAkf,SAAAtmB,KAAAumC,WACAvmC,KAAAw9B,YAAA8H,aAAAzC,EAAA7iC,KAAAoH,KAAAq/B,IAiBAzmC,KAAA0mC,gBAAA7D,EAAA7iC,KAAAoH,KAAAq/B,GACAzmC,KAAAumC,WAGA15B,EAAAvI,UAAAqiC,cAAA,SAAAjtB,GACA,GAAAktB,KACAA,GAAAzlC,KAAAnB,KAAAimC,eAGA,KAFA,GAAAnnC,IAAA,EACAyM,EAAAvL,KAAAuL,KACAzM,GACAyM,EAAA06B,gBACA16B,EAAAnE,KAAAkf,SACAsgB,EAAAllC,OAAA,IAAA6J,EAAA06B,gBAEA16B,UAEAzM,GAAA,CAGA,IAAAyC,GAAAslC,EAAArlC,EAAAolC,EAAAnlC,MACA,KAAAF,EAAA,EAAYA,EAAAC,EAAMD,GAAA,EAClBslC,EAAAD,EAAArlC,GAAA+uB,IAAAvW,kBAAA,OAEAL,KAAA,GAAAmtB,EAAA,GAAAntB,EAAA,GAAAmtB,EAAA,KAEA,OAAAntB,IAGA7M,EAAAvI,UAAA0gC,gBAAA,WACAhlC,KAAA8mC,eAAAC,yBAAA/mC,MAGAA,KAAAoH,KAAAkf,SACAtmB,KAAA8mC,eAAAE,sBAAAhnC,KAAAw9B,YAEA,IAAAyJ,GAAAC,2BAAAC,uBAAAnnC,UAAA8mC,eACA9mC,MAAA8mC,eAAAM,yBAAAH,GAEA,IAAAjnC,KAAAoH,KAAAkJ,IAAAtQ,KAAAoH,KAAAyJ,GACA7Q,KAAAqnC,cAAAC,wBAAAtnC,MACK,IAAAA,KAAAoH,KAAAkJ,GACLtQ,KAAA8mC,eAAAS,eAAAC,yBAAAC,qBAAAznC,KAAAsN,WAAAtN,KAAAwN,UAAAxN,KAAA8mC,gBACK,IAAA9mC,KAAAoH,KAAAkJ,KACLtQ,KAAA8mC,eAAAY,cAAAC,wBAAA3nC,QAIA6M,EAAAvI,UAAAsjC,aAAA,WACA,GAAAC,GAAA,EACA,QAAA7nC,KAAAoH,KAAA0gC,IACA,OACAD,EAAA,UACA,MACA,QACAA,EAAA,QACA,MACA,QACAA,EAAA,SACA,MACA,QACAA,EAAA,QACA,MACA,QACAA,EAAA,SACA,MACA,QACAA,EAAA,aACA,MACA,QACAA,EAAA,YACA,MACA,QACAA,EAAA,YACA,MACA,QACAA,EAAA,YACA,MACA,SACAA,EAAA,YACA,MACA,SACAA,EAAA,WACA,MACA,SACAA,EAAA,KACA,MACA,SACAA,EAAA,YACA,MACA,SACAA,EAAA,OACA,MACA,SACAA,EAAA,cAGA7nC,KAAA8P,aAAA9P,KAAA6P,cAEAvQ,MAAA,kBAAAuoC,GAGAh7B,EAAAvI,UAAAX,KAAA,WACA3D,KAAAoH,KAAAq/B,KACAzmC,KAAAoH,KAAAq/B,GAAA,GAEAzmC,KAAAqH,kBAAArH,KAAAqH,sBACArH,KAAAoH,KAAA4I,KACAhQ,KAAAuQ,QAAA,GAAAw3B,gBAAA/nC,KAAAoH,KAAApH,UAAAqH,oBAIArH,KAAAgoC,QAAA,EACAhoC,KAAAW,YAAA,EACAX,KAAAumC,WAAA,EACAvmC,KAAAokC,WAAA,EACApkC,KAAA0mC,iBAAA,MACA1mC,KAAAioC,SAAA,MACAjoC,KAAAoH,KAAA0f,KACA9mB,KAAAimC,gBACAC,MAAAz6B,GAAAC,QAAA1L,UAAAoH,KAAA0f,GAAA,OAAA9mB,KAAAqH,mBACA6gC,QAAA,EACAC,OAAA,EACA7X,IAAA,GAAAxsB,GACAskC,QAAA,GAEApoC,KAAAoH,KAAAihC,KACAroC,KAAAimC,eAAAC,MAAAxV,cAAA,GAEA1wB,KAAAimC,eAAA35B,GAAAtM,KAAAimC,eAAAC,MAAAtiC,EACA5D,KAAA4W,UAAA5W,KAAAimC,eAAAC,MACA,KAAAlmC,KAAAoH,KAAAkJ,IACAtQ,KAAAsoC,iBAEAtoC,KAAAoH,KAAAkf,SACAtmB,KAAAuoC,SAAAvoC,KAAAoH,OAGApH,KAAAwmC,SAAA,GAEA35B,EAAAvI,UAAAC,QAAA,WACA,MAAAvE,MAAAC,MAGA4M,EAAAvI,UAAAkkC,eAAA,WACAxoC,KAAAmkC,UAGAnkC,KAAAmkC,UAAA1iC,OAAA,EAFAzB,KAAAmkC,cAMAt3B,EAAAvI,UAAAmkC,aAAA,WAIA,MAHAzoC,MAAAmkC,YACAnkC,KAAAmkC,cAEAnkC,KAAAmkC,WAGAt3B,EAAAvI,UAAA+/B,aAAA,SAAAF,GACAnkC,KAAAmkC,aAGAt3B,EAAAvI,UAAAokC,aAAA,WACA,WAAA1oC,KAAAoH,KAAAkJ,IACgB9E,EAAAxL,KAAAoH,KAAAxB,SAAAgW,MAAA1Z,EAAAlC,KAAAoH,KAAAxB,SAAA6+B,SAEAj5B,EAAAxL,KAAAoH,KAAAwU,MAAA1Z,EAAAlC,KAAAoH,KAAAq9B,SAIhB53B,EAAAvI,UAAAqhC,KAAA,aAIA94B,EAAAvI,UAAAqkC,iBAAA,WACA,OACA3f,IAAA,EACAD,KAAA,EACAnN,MAAA,IACA6oB,OAAA,MAIA53B,EAAAvI,UAAAy5B,QAAA,GAAAj6B,GAeAC,EAAA8I,EAAAC,GAEAA,EAAAxI,UAAAgkC,eAAA,WACAtoC,KAAA6P,aAAA1E,SAAAC,gBAAAC,GAAA,KACArL,KAAAkN,mBAAAlN,KAAA6P,aACA7P,KAAAoH,KAAAkf,UACAtmB,KAAA4M,cAAA5M,KAAA6P,aAEA,IAAA+4B,GAAA,IACA,IAAA5oC,KAAAoH,KAAAif,IACA,MAAArmB,KAAAoH,KAAAif,IAAA,GAAArmB,KAAAoH,KAAAif,GAAA,CACA,GAAAwiB,GAAA19B,SAAAC,gBAAAC,GAAA,OAOA,IANAw9B,EAAAv9B,aAAA,KAAAtL,KAAA6K,SACAg+B,EAAAv9B,aAAA,eAAAtL,KAAAoH,KAAAif,GAAA,qBACAwiB,EAAAj9B,YAAA5L,KAAA6P,cACA+4B,EAAAC,EACA7oC,KAAAmJ,WAAAsB,KAAAmB,YAAAi9B,IAEA7L,GAAAlyB,UAAA,GAAA9K,KAAAoH,KAAAif,GAAA,CACAwiB,EAAAv9B,aAAA,wBACA,IAAA2E,GAAApO,EAAA,IACAqO,EAAAC,GAAAC,aAAAH,EACAjQ,MAAAmJ,WAAAsB,KAAAmB,YAAAsE,GACAA,EAAAtE,YAAAuE,GAAA8sB,+BACA,IAAA6L,GAAA39B,SAAAC,gBAAAC,GAAA,IACAy9B,GAAAl9B,YAAA5L,KAAA6P,cACA+4B,EAAAE,EACAD,EAAAj9B,YAAAk9B,GACAA,EAAAx9B,aAAA,gBAAAa,GAAA,IAAA8D,EAAA,UAES,OAAAjQ,KAAAoH,KAAAif,GAAA,CACT,GAAA0iB,GAAA59B,SAAAC,gBAAAC,GAAA,OACA09B,GAAAz9B,aAAA,KAAAtL,KAAA6K,SACAk+B,EAAAz9B,aAAA,oBACA,IAAA09B,GAAA79B,SAAAC,gBAAAC,GAAA,IACA09B,GAAAn9B,YAAAo9B,EACA,IAAA/4B,GAAApO,EAAA,IACAqO,EAAAC,GAAAC,aAAAH,GAGA/B,EAAA/C,SAAAC,gBAAAC,GAAA,gBACA6C,GAAA5C,aAAA,iBACA4C,EAAA5C,aAAA,sCACA4C,EAAA5C,aAAA,qDACA4E,EAAAtE,YAAAsC,GAUAlO,KAAAmJ,WAAAsB,KAAAmB,YAAAsE,EACA,IAAA+4B,GAAA99B,SAAAC,gBAAAC,GAAA,OAWA,IAVA49B,EAAA39B,aAAA,QAAAtL,KAAAuL,KAAAnE,KAAAoE,GACAy9B,EAAA39B,aAAA,SAAAtL,KAAAuL,KAAAnE,KAAAlF,GACA+mC,EAAA39B,aAAA,SACA29B,EAAA39B,aAAA,SACA29B,EAAA39B,aAAA,kBACA29B,EAAA39B,aAAA,eACA09B,EAAA19B,aAAA,gBAAAa,GAAA,IAAA8D,EAAA,KACA+4B,EAAAp9B,YAAAq9B,GACAD,EAAAp9B,YAAA5L,KAAA6P,cACA+4B,EAAAI,GACAhM,GAAAlyB,SAAA,CACAi+B,EAAAz9B,aAAA,yBACA4E,EAAAtE,YAAAuE,GAAA8sB,+BACA,IAAA6L,GAAA39B,SAAAC,gBAAAC,GAAA,IACA29B,GAAAp9B,YAAAq9B,GACAH,EAAAl9B,YAAA5L,KAAA6P,cACA+4B,EAAAE,EACAE,EAAAp9B,YAAAk9B,GAEA9oC,KAAAmJ,WAAAsB,KAAAmB,YAAAm9B,SAEK/oC,KAAAoH,KAAAkf,SAAAtmB,KAAAoH,KAAAgf,KACLpmB,KAAAoH,KAAAgf,IACApmB,KAAAiN,aAAA9B,SAAAC,gBAAAC,GAAA,KACArL,KAAAiN,aAAArB,YAAA5L,KAAA6P,cACA+4B,EAAA5oC,KAAAiN,aACAjN,KAAA8P,YAAA9P,KAAAiN,cAKAjN,KAAA8P,YAAA9P,KAAA6P,YAUA,KARA7P,KAAAoH,KAAA8hC,KAAAlpC,KAAAoH,KAAAghB,IAAA,IAAApoB,KAAAoH,KAAAkJ,IAAA,IAAAtQ,KAAAoH,KAAAkJ,KACAtQ,KAAAoH,KAAA8hC,IACAlpC,KAAA6P,aAAAvE,aAAA,KAAAtL,KAAAoH,KAAA8hC,IAEAlpC,KAAAoH,KAAAghB,IACApoB,KAAA6P,aAAAvE,aAAA,QAAAtL,KAAAoH,KAAAghB,KAGA,IAAApoB,KAAAoH,KAAAkJ,GAAA,CACA,GAAA64B,GAAAh+B,SAAAC,gBAAAC,GAAA,YACAqO,EAAAvO,SAAAC,gBAAAC,GAAA,OACAqO,GAAApO,aAAA,aAAAtL,KAAAoH,KAAAoE,EAAA,OAAAxL,KAAAoH,KAAAoE,EAAA,IAAAxL,KAAAoH,KAAAlF,EAAA,OAAAlC,KAAAoH,KAAAlF,EAAA,IACA,IAAAknC,GAAA,MAAAvnC,EAAA,EAIA,IAHAsnC,EAAA79B,aAAA,KAAA89B,GACAD,EAAAv9B,YAAA8N,GACA1Z,KAAAmJ,WAAAsB,KAAAmB,YAAAu9B,GACAnpC,KAAAsmC,aAAA,CACA,GAAA+C,GAAAl+B,SAAAC,gBAAAC,GAAA,IACAg+B,GAAA/9B,aAAA,mBAAAa,GAAA,IAAAi9B,EAAA,KACAC,EAAAz9B,YAAA5L,KAAA6P,cACA7P,KAAAkN,mBAAAm8B,EACAT,EACAA,EAAAh9B,YAAA5L,KAAAkN,oBAEAlN,KAAA8P,YAAA9P,KAAAkN,uBAGAlN,MAAA6P,aAAAvE,aAAA,mBAAAa,GAAA,IAAAi9B,EAAA,KAIA,IAAAppC,KAAAoH,KAAA0gC,IACA9nC,KAAA4nC,eAEA5nC,KAAA6P,eAAA7P,KAAA+M,kBACA/M,KAAAgN,YAAA,MAmEAhN,KAAAoH,KAAA4I,KACAhQ,KAAAspC,eAAA,GAAAv5B,GAAA/P,OAEAA,KAAAmlC,kBAIAr4B,EAAAxI,UAAAsjC,aAAA/6B,EAAAvI,UAAAsjC,aAEA96B,EAAAxI,UAAA8gC,YAAA,SAAAmE,GACA,OAAAvpC,KAAAoH,KAAAkJ,IAAAtQ,KAAAoH,KAAAoiC,KAAAxpC,KAAAumC,UACA,QAGAvmC,MAAAioC,QAAAjoC,KAAA0mC,gBACA1mC,KAAAimC,eAAAkC,MAAAnoC,KAAAW,YAAAX,KAAAimC,eAAA35B,GAAAvG,IACA/F,KAAAimC,eAAAiC,OAAAloC,KAAAW,YAAAX,KAAAimC,eAAAC,MAAAngC,IACA/F,KAAAimC,eAAAmC,QAAApoC,KAAAimC,eAAA35B,GAAAlK,CAEA,IAAAkuB,GACA0V,EAAAhmC,KAAAimC,eAAA3V,GAEA,IAAAtwB,KAAAmkC,UAAA,CACA,GAAA5iC,GAAA,EAAAC,EAAAxB,KAAAmkC,UAAA1iC,MACA,KAAAzB,KAAAimC,eAAAiC,OACA,KAAA3mC,EAAAC,GAAA,CACA,GAAAxB,KAAAmkC,UAAA5iC,GAAA0kC,eAAAC,MAAAngC,IAAA,CACA/F,KAAAimC,eAAAiC,QAAA,CACA,OAEA3mC,GAAA,EAIA,GAAAvB,KAAAimC,eAAAiC,OAGA,IAFA5X,EAAAtwB,KAAAimC,eAAAC,MAAA9jC,EAAA8S,MACA8wB,EAAA9sB,eAAAoX,GACA/uB,EAAA,EAAoBA,EAAAC,EAAMD,GAAA,EAC1B+uB,EAAAtwB,KAAAmkC,UAAA5iC,GAAA0kC,eAAAC,MAAA9jC,EAAA8S,MACA8wB,EAAApvB,UAAA0Z,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,SAIKtwB,MAAAumC,YACLP,EAAAhmC,KAAAimC,eAAAC,MAAA9jC,EAwBA,OAtBApC,MAAAimC,eAAAiC,QAAAloC,KAAA6P,cACA7P,KAAAkN,mBAAA5B,aAAA,YAAA06B,EAAAvrB,WAEAza,KAAAimC,eAAAkC,OAAAnoC,KAAA6P,eACA7P,KAAAimC,eAAA35B,GAAAlK,GAAA,GACApC,KAAAmN,eAAAnN,KAAAmJ,WAAAE,aAAAG,oBACAxJ,KAAAmN,eAAA,EACAnN,KAAA2lC,QAES3lC,KAAAgoC,QAAAhoC,KAAAmN,gBACTnN,KAAAmN,eAAA,EACAnN,KAAA6lC,QAEA7lC,KAAAkN,mBAAA5B,aAAA,UAAAtL,KAAAimC,eAAA35B,GAAAlK,IAGApC,KAAAoH,KAAAkf,SACAtmB,KAAAw9B,YAAA4H,YAAAY,GAEAhmC,KAAAspC,gBACAtpC,KAAAspC,eAAAlE,YAAAplC,KAAAW,YAEAX,KAAAumC,WAGAz5B,EAAAxI,UAAAwO,QAAA,WACA9S,KAAA6P,aAAA,KACA7P,KAAA+M,gBAAA,KACA/M,KAAAiN,eACAjN,KAAAiN,aAAA,MAEAjN,KAAAw9B,aACAx9B,KAAAw9B,YAAA1qB,WAIAhG,EAAAxI,UAAAkhC,eAAA,WACA,MAAAxlC,MAAA8P,aAEAhD,EAAAxI,UAAAikC,SAAA,SAAAnhC,GACApH,KAAAw9B,YAAA,GAAA1zB,GAAA1C,EAAApH,UAAAmJ,aAGA2D,EAAAxI,UAAA4gC,SAAA,SAAAzjB,GACAzhB,KAAAiN,cAGAjN,KAAAiN,aAAA3B,aAAA,cAAAa,GAAA,IAAAsV,EAAA,MAGA3U,EAAAxI,UAAAqhC,KAAA,WACA3lC,KAAAgoC,SACAhoC,KAAA6P,aAAAvQ,MAAAsmC,QAAA,OACA5lC,KAAAgoC,QAAA,IAIAl7B,EAAAxI,UAAAuhC,KAAA,WACA7lC,KAAAumC,YAAAvmC,KAAAmN,gBACAnN,KAAAgoC,QAAA,EACAhoC,KAAA6P,aAAAvQ,MAAAsmC,QAAA,UAcA7hC,EAAA+I,EAAAO,GAEAA,EAAA/I,UAAAmlC,eAAA,GAAA3lC,GAEAuJ,EAAA/I,UAAAolC,QACAC,EAAA,OACAC,EAAA,QACAC,EAAA,UAGAx8B,EAAA/I,UAAAwlC,QACAH,EAAA,QACAC,EAAA,QACAC,EAAA,QAGAx8B,EAAA/I,UAAAylC,uBAAA,SAAAjkC,GAEA,IADA,GAAAvE,GAAAvB,KAAA2N,kBAAAlM,OACAF,GAEA,GADAA,GAAA,EACAvB,KAAA2N,kBAAApM,GAAAuE,SACA,MAAA9F,MAAA2N,kBAAApM,GAAAwxB,GAGA,WAGA1lB,EAAA/I,UAAA0lC,oBAAA,SAAAlkC,EAAAitB,GAEA,IADA,GAAAxxB,GAAAvB,KAAA2N,kBAAAlM,OACAF,GAEA,GADAA,GAAA,EACAvB,KAAA2N,kBAAApM,GAAAuE,SAAA,CACA9F,KAAA2N,kBAAApM,GAAAwxB,KACA,OAGA,IAAAxxB,GACAvB,KAAA2N,kBAAAxM,MACA2E,OACAitB,SAKA1lB,EAAA/I,UAAA2lC,yBAAA,aAEA58B,EAAA/I,UAAAgkC,eAAA,WAEAtoC,KAAA0E,QAAA4jC,eAAA5pC,KAAAsB,MACAA,KAAAkqC,aAAAlqC,KAAAsN,WAAAtN,KAAAwN,UAAAxN,KAAAyN,aAAAzN,KAAA6P,aAAA7P,KAAAqH,kBAAA,SACArH,KAAAoH,KAAAoiC,KAAAxpC,KAAAoH,KAAAif,IACAjnB,EAAAY,KAAA6P,eAIAxC,EAAA/I,UAAA6lC,gBAAA,SAAAC,EAAAnwB,EAAA7S,GAEA,GACAijC,GADAC,EAAA,MAAAzoC,EAAA,GAGAwoC,GADA,IAAApwB,EAAAna,EACAqL,SAAAC,gBAAAC,GAAA,kBAEAF,SAAAC,gBAAAC,GAAA,kBAEAg/B,EAAA/+B,aAAA,KAAAg/B,GACAD,EAAA/+B,aAAA,sBACA++B,EAAA/+B,aAAA,iCACA,IACAwG,GAAAhK,EAAAsC,EADAmgC,IAGA,KADAngC,EAAA,EAAA6P,EAAA3X,EAAAE,EACAsF,EAAA,EAAYA,EAAAsC,EAAOtC,GAAA,EACnBgK,EAAA3G,SAAAC,gBAAAC,GAAA,QACAg/B,EAAAz+B,YAAAkG,GACAy4B,EAAAppC,KAAA2Q,EAEAs4B,GAAA9+B,aAAA,OAAA2O,EAAA3J,GAAA,wBAAAg6B,EAAA,KACAtqC,KAAAmJ,WAAAsB,KAAAmB,YAAAy+B,GACAjjC,EAAAojC,GAAAH,EACAjjC,EAAAqjC,IAAAF,GAGAl9B,EAAA/I,UAAAomC,mBAAA,SAAAzwB,EAAA7S,EAAAujC,GACA,GAAA1wB,EAAA3X,EAAA4I,IAAA,GAAA/I,GAAA8X,EAAA3X,EAAA4I,IAAA,GAAA/I,EAAAV,OAAA,EAAAwY,EAAA3X,EAAAE,GAAAyX,EAAA3X,EAAA4I,IAAAzJ,OAAA,EAAAwY,EAAA3X,EAAAE,EAAA,CACA,GAAAooC,GACA94B,EAAAhK,EAAAsC,EACA8B,EAAAf,SAAAC,gBAAAC,GAAA,QACAnB,EAAAiB,SAAAC,gBAAAC,GAAA,OACAa,GAAAN,YAAA1B,EACA,IAAA2gC,GAAA,MAAAhpC,EAAA,IACAgjC,EAAA,MAAAhjC,EAAA,GACAqK,GAAAZ,aAAA,KAAAu5B,GAEA+F,EADA,IAAA3wB,EAAAna,EACAqL,SAAAC,gBAAAC,GAAA,kBAEAF,SAAAC,gBAAAC,GAAA,kBAEAu/B,EAAAt/B,aAAA,KAAAu/B,GACAD,EAAAt/B,aAAA,sBACAs/B,EAAAt/B,aAAA,kCACAlB,EAAA6P,EAAA3X,EAAA4I,IAAA,GAAA/I,EAAA8X,EAAA3X,EAAA4I,IAAA,GAAA/I,EAAAV,OAAAwY,EAAA3X,EAAA4I,IAAAzJ,MACA,IAAA8oC,KACA,KAAAziC,EAAA,EAAAmS,EAAA3X,EAAAE,EAAwBsF,EAAAsC,EAAOtC,GAAA,EAC/BgK,EAAA3G,SAAAC,gBAAAC,GAAA,QACAyG,EAAAxG,aAAA,iCAGAs/B,EAAAh/B,YAAAkG,GACAy4B,EAAAppC,KAAA2Q,EAQA,OANA5H,GAAAoB,aAAA,OAAA2O,EAAA3J,GAAA,wBAAAu6B,EAAA,KACA7qC,KAAAmJ,WAAAsB,KAAAmB,YAAAg/B,GACA5qC,KAAAmJ,WAAAsB,KAAAmB,YAAAM,GACA9E,EAAAgB,GAAAwiC,EACAxjC,EAAA0jC,IAAAP,EACAI,EAAAI,OAAA7gC,EACA26B,IAIAx3B,EAAA/I,UAAA0mC,mBAAA,SAAA5jC,EAAA6jC,EAAA5jC,GACA,GAAA6jC,MAEAP,GACAvjC,OACAnH,KAAAmH,EAAAkJ,GACAvQ,EAAA,GACAorC,GAAA,GACAC,IAAAH,EACAllC,KAAA,EACAgd,QAAA,GAEAqnB,EAAAj/B,SAAAC,gBAAAC,GAAA,OAEA,IADA6/B,EAAAtnC,EAAA6H,GAAAC,QAAA1L,KAAAoH,EAAAxD,EAAA,MAAAyD,IACA,MAAAD,EAAAkJ,IAAA,MAAAlJ,EAAAkJ,MACA85B,EAAA9+B,aAAA,iBAAAtL,KAAA0pC,OAAAtiC,EAAAikC,KAAA,SAEAjB,EAAA9+B,aAAA,kBAAAtL,KAAA8pC,OAAA1iC,EAAAkkC,KAAA,SAEAlB,EAAA9+B,aAAA,oBAEA,GAAAlE,EAAAkkC,IACAlB,EAAA9+B,aAAA,oBAAAlE,EAAAmkC,IAIAL,EAAA1/B,EAAAC,GAAAC,QAAA1L,KAAAoH,EAAAoE,EAAA,OAAAnE,GACAD,EAAArH,GAAA,CACA,GAAAA,GAAA0L,GAAAsjB,YAAA/uB,KAAAoH,EAAArH,EAAA,MAAAsH,EACAtH,GAAAmL,IACAk/B,EAAA9+B,aAAA,mBAAAvL,EAAA4xB,WAEAyY,EAAA9+B,aAAA,oBAAAvL,EAAA6xB,aAGAsZ,EAAAnrC,IAIA,SAAAqH,EAAAkJ,IAAA,MAAAlJ,EAAAkJ,GACA46B,EAAArrC,EAAA4L,GAAAC,QAAA1L,KAAAoH,EAAAvH,EAAA,MAAAwH,OACK,CACL6jC,EAAA5oC,EAAAmJ,GAAA2lB,gBAAApxB,KAAAoH,EAAA9E,EAAA+E,GACA,GAAAD,EAAAtH,IACAorC,EAAAhpC,EAAAuJ,GAAAC,QAAA1L,KAAAoH,EAAAlF,EAAA,MAAAmF,GACA6jC,EAAA1kC,EAAAiF,GAAAC,QAAA1L,KAAAoH,EAAAZ,EAAA,EAAAmO,GAAAtN,IAEA6jC,EAAA/oC,EAAAsJ,GAAAC,QAAA1L,KAAAoH,EAAAjF,EAAA,OAAAkF,GACA6jC,EAAA10B,EAAA/K,GAAAC,QAAA1L,KAAAoH,EAAAoP,EAAA,OAAAnP,GACArH,KAAAmqC,gBAAAC,EAAAhjC,EAAA8jC,EAAAP,EACA,IAAA9F,GAAA7kC,KAAA0qC,mBAAAtjC,EAAA8jC,EAAAP,EACA9F,IACAuF,EAAA9+B,aAAA,eAAAu5B,EAAA,KAkBA,MAfAqG,GAAAplC,KAAAskC,EAEA,IAAAhjC,EAAA/E,GACA+nC,EAAA9+B,aAAA,uBAGAlE,EAAA8hC,IACAkB,EAAA9+B,aAAA,KAAAlE,EAAA8hC,IAEA9hC,EAAAghB,IACAgiB,EAAA9+B,aAAA,QAAAlE,EAAAghB,IAEAuiB,EAAAa,MAAApB,EACApqC,KAAAuN,WAAApM,KAAAwpC,GACAO,EAAA5rC,MAAAqrC,EACAO,GAGA79B,EAAA/I,UAAAmnC,mBAAA,SAAArkC,GACA,GAAA8jC,IACAnkB,MACAtZ,iBAEAnL,EAAA6I,SAAAC,gBAAAC,GAAA,IAKA,OAJA6/B,GAAAQ,GAAAppC,EACA8E,EAAA8hC,IACAgC,EAAAQ,GAAApgC,aAAA,KAAAlE,EAAA8hC,IAEAgC,GAGA79B,EAAA/I,UAAAqnC,uBAAA,SAAAvkC,EAAAC,GAQA,OANAuP,WACAtK,GAAAb,GAAAC,QAAA1L,KAAAoH,EAAAxD,EAAA,MAAAyD,GACAs0B,OAAAlwB,GAAAC,QAAA1L,KAAAoH,EAAA,OAAAC,IAEAsC,cAKA0D,EAAA/I,UAAAsnC,mBAAA,SAAAxkC,EAAAykC,EAAAZ,EAAA5jC,GACA,GAAA6jC,IACAvhC,YACAmiC,UACAzK,UACA0K,aAAAF,EACAG,KAAA,IAEA17B,EAAA,CAYA,OAXA,MAAAlJ,EAAAkJ,GACAA,EAAA,EACK,MAAAlJ,EAAAkJ,GACLA,EAAA,EACK,MAAAlJ,EAAAkJ,KACLA,EAAA,GAEA46B,EAAAzd,GAAAjhB,GAAAC,aAAAzM,KAAAoH,EAAAkJ,EAAAjJ,GACA6jC,EAAAE,IAAAH,EACAjrC,KAAA0F,OAAAvE,KAAA+pC,EAAAzd,IACAztB,KAAAisC,oBAAAf,GACAA,EAKA79B,GAAA/I,UAAA4nC,iBAAA,WACA,GAAApkC,GAAAsC,EAAApK,KAAAuN,WAAA9L,OACAwY,IACA,KAAAnS,EAAA,EAAYA,EAAAsC,EAAOtC,GAAA,EACnB9H,KAAAuN,WAAAzF,GAAAib,QACA9I,EAAA9Y,KAAAnB,KAAAuN,WAAAzF,GAGA,OAAAmS,IAGA5M,EAAA/I,UAAA42B,aAAA,WACAl7B,KAAAW,YAAA,CACA,IAAAY,GAAAC,EAAAxB,KAAAwN,UAAA/L,MACA,KAAAF,EAAA,EAAYA,EAAAC,EAAMD,GAAA,EAClBvB,KAAAyN,aAAAlM,GAAAvB,KAAAwN,UAAAjM,EAEAvB,MAAAkqC,aAAAlqC,KAAAsN,WAAAtN,KAAAwN,UAAAxN,KAAAyN,aAAAzN,KAAA6P,aAAA7P,KAAAqH,kBAAA,QACA,IAAA9F,GAAAC,EAAAxB,KAAAqH,kBAAA5F,MACA,KAAAF,EAAA,EAAYA,EAAAC,EAAMD,GAAA,EAClBvB,KAAAqH,kBAAA9F,GAAAqH,UAEA5I,MAAAmsC,mBAGA9+B,EAAA/I,UAAA4lC,aAAA,SAAAjwB,EAAAzM,EAAAC,EAAA2+B,EAAA/kC,EAAA4jC,EAAAc,EAAAM,GACA,GACA9qC,GACAuG,EAAAsC,EACAkiC,EAAAC,EAAAC,EAHAX,KAAAhZ,OAAAkZ,GACAvqC,EAAAyY,EAAAxY,OAAA,EAEAgrC,KAAAC,IACA,KAAAnrC,EAAAC,EAAcD,GAAA,EAAKA,GAAA,GAOnB,GANAirC,EAAAxsC,KAAA+pC,uBAAA9vB,EAAA1Y,IACAirC,EAGAh/B,EAAAjM,GAAAkM,EAAA++B,EAAA,GAFAvyB,EAAA1Y,GAAAs5B,QAAAwR,EAIA,MAAApyB,EAAA1Y,GAAA+O,IAAA,MAAA2J,EAAA1Y,GAAA+O,IAAA,MAAA2J,EAAA1Y,GAAA+O,IAAA,MAAA2J,EAAA1Y,GAAA+O,GACAk8B,EAGAh/B,EAAAjM,GAAAjC,MAAAyjB,QAAA,EAFAvV,EAAAjM,GAAAvB,KAAAgrC,mBAAA/wB,EAAA1Y,GAAA0pC,EAAA5jC,GAIA4S,EAAA1Y,GAAAs5B,SACAuR,EAAAxgC,YAAA4B,EAAAjM,GAAAuE,MAEA2mC,EAAAtrC,KAAAqM,EAAAjM,GAAAjC,WACS,UAAA2a,EAAA1Y,GAAA+O,GAAA,CACT,GAAAk8B,EAIA,IADApiC,EAAAoD,EAAAjM,GAAAwlB,GAAAtlB,OACAqG,EAAA,EAAwBA,EAAAsC,EAAOtC,GAAA,EAC/B0F,EAAAjM,GAAAkM,aAAA3F,GAAA0F,EAAAjM,GAAAwlB,GAAAjf,OAJA0F,GAAAjM,GAAAvB,KAAAyrC,mBAAAxxB,EAAA1Y,GAOAvB,MAAAkqC,aAAAjwB,EAAA1Y,GAAAwlB,GAAAvZ,EAAAjM,GAAAwlB,GAAAvZ,EAAAjM,GAAAkM,aAAAD,EAAAjM,GAAAmqC,GAAArkC,EAAA4jC,EAAA,EAAAY,EAAAQ,GACApyB,EAAA1Y,GAAAs5B,SACAuR,EAAAxgC,YAAA4B,EAAAjM,GAAAmqC,QAES,MAAAzxB,EAAA1Y,GAAA+O,IACTk8B,IACAh/B,EAAAjM,GAAAvB,KAAA2rC,uBAAA1xB,EAAA1Y,GAAA8F,IAEAilC,EAAA9+B,EAAAjM,GAAAqV,UACAi1B,EAAA1qC,KAAAmrC,IACS,MAAAryB,EAAA1Y,GAAA+O,IAAA,MAAA2J,EAAA1Y,GAAA+O,IAAA,MAAA2J,EAAA1Y,GAAA+O,IAAA,MAAA2J,EAAA1Y,GAAA+O,IACTk8B,IACAh/B,EAAAjM,GAAAvB,KAAA4rC,mBAAA3xB,EAAA1Y,GAAAsqC,EAAAZ,EAAA5jC,IAEAmG,EAAAjM,GAAAoI,SAAA3J,KAAAksC,oBAES,MAAAjyB,EAAA1Y,GAAA+O,IAAA,MAAA2J,EAAA1Y,GAAA+O,IAAA,MAAA2J,EAAA1Y,GAAA+O,IACTk8B,GAMAD,EAAA/+B,EAAAjM,GACAgrC,EAAAxpB,QAAA,IANAwpB,EAAA1V,GAAAG,YAAA/c,EAAA1Y,GAAA+O,IACAi8B,EAAA5oC,KAAA3D,KAAAia,EAAA1Y,GAAA8F,GACAmG,EAAAjM,GAAAgrC,EACAvsC,KAAA0N,eAAAvM,KAAAorC,IAKAG,EAAAvrC,KAAAorC,IACS,MAAAtyB,EAAA1Y,GAAA+O,KACTk8B,GAOAD,EAAA/+B,EAAAjM,GACAgrC,EAAAxpB,QAAA,IAPAwpB,EAAA1V,GAAAG,YAAA/c,EAAA1Y,GAAA+O,IACA9C,EAAAjM,GAAAgrC,EACAA,EAAA5oC,KAAA3D,KAAAia,EAAA1Y,EAAAiM,EAAAnG,GACArH,KAAA0N,eAAAvM,KAAAorC,GACAF,GAAA,GAKAK,EAAAvrC,KAAAorC,GAEAvsC,MAAAgqC,oBAAA/vB,EAAA1Y,KAAA,GAGA,IADAC,EAAAirC,EAAAhrC,OACAF,EAAA,EAAYA,EAAAC,EAAMD,GAAA,EAClBkrC,EAAAlrC,GAAAwhB,QAAA,CAGA,KADAvhB,EAAAkrC,EAAAjrC,OACAF,EAAA,EAAYA,EAAAC,EAAMD,GAAA,EAClBmrC,EAAAnrC,GAAAwhB,QAAA,GAIA1V,EAAA/I,UAAA2nC,oBAAA,SAAA7kC,GACA,GAAA7F,GAAAC,EAAAxB,KAAA0N,eAAAjM,MACA,KAAAF,EAAA,EAAYA,EAAAC,EAAMD,GAAA,EAClBvB,KAAA0N,eAAAnM,GAAAizB,SAAAptB,IAIAiG,EAAA/I,UAAA6nC,gBAAA,WACA,GAAAnsC,KAAA0N,eAAAjM,OAAA,CAGA,GAAAF,GAAAC,EAAAxB,KAAA0F,OAAAjE,MACA,KAAAF,EAAA,EAAYA,EAAAC,EAAMD,GAAA,EAClBvB,KAAA0F,OAAAnE,GAAA0T,OAMA,KAFAzT,EAAAxB,KAAA0N,eAAAjM,OAEAF,EAAAC,EAAA,EAAgBD,GAAA,EAAKA,GAAA,EACrBvB,KAAA0N,eAAAnM,GAAAu2B,cAAA93B,KAAAW,cAIA0M,EAAA/I,UAAA8gC,YAAA,SAAAuH,GAGA,QADA3sC,KAAA0E,QAAA0gC,YAAA1mC,KAAAsB,KAAA2sC,GAGA,WADA3sC,MAAA2lC,MAGA3lC,MAAAgoC,SACAhoC,KAAA6P,aAAAvQ,MAAAsmC,QAAA,QACA5lC,KAAAgoC,QAAA,GAEAhoC,KAAAmsC,iBACA,IAAA5qC,GAAAC,EAAAxB,KAAAuN,WAAA9L,MACA,KAAAF,EAAA,EAAYA,EAAAC,EAAMD,GAAA,EAClBvB,KAAAuN,WAAAhM,GAAAxB,EAAA,GACAC,KAAAuN,WAAAhM,GAAAwE,KAAA,CAIA,KAFA/F,KAAA4sC,YAAA5sC,KAAAsN,WAAAtN,KAAAwN,UAAA,MAEAjM,EAAA,EAAeA,EAAAC,EAASD,GAAA,EACxB,MAAAvB,KAAAuN,WAAAhM,GAAA4pC,KACAnrC,KAAAuN,WAAAhM,GAAA4pC,GAAA,IACAnrC,KAAAuN,WAAAhM,GAAAiqC,MAAAlsC,MAAAsmC,QAAA,UAGA5lC,KAAAuN,WAAAhM,GAAAwE,KAAA/F,KAAAW,cACAX,KAAAuN,WAAAhM,GAAAiqC,MAAAlgC,aAAA,IAAAtL,KAAAuN,WAAAhM,GAAAxB,GACAC,KAAAuN,WAAAhM,GAAAwpC,QACA/qC,KAAAuN,WAAAhM,GAAAwpC,OAAAz/B,aAAA,IAAAtL,KAAAuN,WAAAhM,GAAAxB,GAIAC,MAAAW,aACAX,KAAAW,YAAA,IAIA0M,EAAA/I,UAAAqhC,KAAA,WACA,IAAA3lC,KAAAgoC,OAAA,CACAhoC,KAAA6P,aAAAvQ,MAAAsmC,QAAA,MACA,IAAArkC,GAAAC,EAAAxB,KAAAuN,WAAA9L,MACA,KAAAF,EAAAC,EAAA,EAAoBD,GAAA,EAAKA,GAAA,EACzB,MAAAvB,KAAAuN,WAAAhM,GAAA4pC,KACAnrC,KAAAuN,WAAAhM,GAAA4pC,GAAA,IACAnrC,KAAAuN,WAAAhM,GAAAiqC,MAAAlsC,MAAAsmC,QAAA,OACA5lC,KAAAuN,WAAAhM,GAAAiqC,MAAA9iB,aACA1oB,KAAAuN,WAAAhM,GAAAyC,OAAAhE,KAAAuN,WAAAhM,GAAAiqC,MAAA9iB,YAKA1oB,MAAAgoC,QAAA,IAIA36B,EAAA/I,UAAAsoC,YAAA,SAAAnR,EAAAr0B,EAAAglC,GACA,GAAA7qC,GACA+O,EADA9O,EAAAi6B,EAAAh6B,OAAA,CAEA,KAAAF,EAAAC,EAAcD,GAAA,EAAKA,GAAA,EACnB+O,EAAAmrB,EAAAl6B,GAAA+O,GACA,MAAAA,IACAtQ,KAAAW,YAAAyG,EAAA7F,GAAAqV,UAAAtK,GAAAvG,KAAAqmC,IACAA,EAAA9gC,aAAA,UAAAlE,EAAA7F,GAAAqV,UAAAtK,GAAAlK,IAEApC,KAAAW,YAAAyG,EAAA7F,GAAAqV,UAAA+kB,OAAA51B,KAAAqmC,IACAA,EAAA9gC,aAAA,YAAAlE,EAAA7F,GAAAqV,UAAA+kB,OAAAv5B,EAAAqY,YAES,MAAAnK,GAAA,MAAAA,GAAA,MAAAA,GAAA,MAAAA,EACTtQ,KAAA6sC,WAAApR,EAAAl6B,GAAA6F,EAAA7F,IACS,MAAA+O,EACTtQ,KAAA8sC,WAAArR,EAAAl6B,GAAA6F,EAAA7F,IACS,MAAA+O,EACTtQ,KAAA+sC,eAAAtR,EAAAl6B,GAAA6F,EAAA7F,IACS,MAAA+O,GACTtQ,KAAA+sC,eAAAtR,EAAAl6B,GAAA6F,EAAA7F,IACAvB,KAAAgtC,aAAAvR,EAAAl6B,GAAA6F,EAAA7F,KACS,MAAA+O,EACTtQ,KAAAgtC,aAAAvR,EAAAl6B,GAAA6F,EAAA7F,IACS,MAAA+O,GACTtQ,KAAA4sC,YAAAnR,EAAAl6B,GAAAwlB,GAAA3f,EAAA7F,GAAAwlB,GAAA3f,EAAA7F,GAAAmqC,KAQAr+B,EAAA/I,UAAA2oC,iBAAA,SAAA7G,EAAA3kC,EAAAshB,EAAAuN,GACA,GAAA/uB,GAAA2rC,EAAA,EACA,KAAA3rC,EAAA,EAAcA,EAAAE,EAAYF,GAAA,EAC1B,IAAAA,IACA2rC,GAAA,KAAA5c,EAAAlW,wBAAAgsB,EAAAhkC,EAAA,MAAAgkC,EAAAhkC,EAAA,QAEA8qC,GAAA,KAAA5c,EAAAlW,wBAAAgsB,EAAAxiC,EAAArC,EAAA,MAAA6kC,EAAAxiC,EAAArC,EAAA,WAAA+uB,EAAAlW,wBAAAgsB,EAAA7kC,KAAA,GAAA6kC,EAAA7kC,KAAA,QAAA+uB,EAAAlW,wBAAAgsB,EAAAhkC,EAAAb,GAAA,GAAA6kC,EAAAhkC,EAAAb,GAAA,GASA,OAPA,KAAAE,IACAyrC,GAAA,KAAA5c,EAAAlW,wBAAAgsB,EAAAhkC,EAAA,MAAAgkC,EAAAhkC,EAAA,QAEA2gB,GAAAthB,IACAyrC,GAAA,KAAA5c,EAAAlW,wBAAAgsB,EAAAxiC,EAAArC,EAAA,MAAA6kC,EAAAxiC,EAAArC,EAAA,WAAA+uB,EAAAlW,wBAAAgsB,EAAA7kC,EAAA,MAAA6kC,EAAA7kC,EAAA,WAAA+uB,EAAAlW,wBAAAgsB,EAAAhkC,EAAA,MAAAgkC,EAAAhkC,EAAA,OACA8qC,GAAA,KAEAA,GAGA7/B,EAAA/I,UAAAuoC,WAAA,SAAA5kB,EAAAklB,GACA,GAAArlC,GAAAsC,EAAAgjC,EAAAC,EAAAjH,EAAAp+B,EAAAslC,EAAAH,EAAAxjC,SAAAlI,OACA2pC,EAAA+B,EAAA/B,GACA,IAAAnjB,EAAA4S,QAGA,IAAA7yB,EAAA,EAAYA,EAAAslC,EAAOtlC,GAAA,EACnB,GAAAmlC,EAAAxjC,SAAA3B,GAAAZ,KAAAyzB,QAAA,CACAwS,EAAAF,EAAA1f,GAAA1nB,KAAA/F,KAAAW,WACAysC,EAAA,MACA,IAAA9pC,GAAA6pC,EAAA1f,GAAAnqB,KAEA,IADA8G,EAAA9G,EAAA2B,QACAkoC,EAAAxjC,SAAA3B,GAAAojC,MAAA,CAIA,IAHA,GAAAl2B,GAAAob,EAAAtwB,KAAA+9B,QAAA9oB,QACAs4B,EAAAnC,EAAA+B,EAAAxjC,SAAA3B,GAAAojC,IACAlgC,EAAAiiC,EAAApB,aAAAtqC,OAAA,EACA8rC,EAAA,GACAF,EAAAF,EAAApB,aAAA7gC,GAAAywB,OAAA51B,KAAAsnC,EACAn4B,EAAAi4B,EAAApB,aAAA7gC,GAAAywB,OAAAv5B,EAAA8S,MACAob,EAAA1Z,UAAA1B,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,KACAq4B,IACAriC,GAEA,IAAAmiC,EAAA,CACA,IAAAvlC,EAAA,EAA4BA,EAAAsC,EAAOtC,GAAA,GACnCs+B,EAAA9iC,EAAAoC,OAAAoC,KACAs+B,EAAAnhC,UACAmoC,GAAAptC,KAAAitC,iBAAA7G,IAAAnhC,QAAAmhC,EAAAvmC,EAAAywB,GAGA6c,GAAArB,OAAA9jC,GAAAolC,MAEAA,GAAAD,EAAArB,OAAA9jC,OAGA,IAAAqlC,EAAA,CACA,IAAAvlC,EAAA,EAA4BA,EAAAsC,EAAOtC,GAAA,GACnCs+B,EAAA9iC,EAAAoC,OAAAoC,KACAs+B,EAAAnhC,UACAmoC,GAAAptC,KAAAitC,iBAAA7G,IAAAnhC,QAAAmhC,EAAAvmC,EAAAG,KAAAypC,gBAGA0D,GAAArB,OAAA9jC,GAAAolC,MAEAA,GAAAD,EAAArB,OAAA9jC,EAGAmlC,GAAAxjC,SAAA3B,GAAAjI,GAAAqtC,EACAD,EAAAxjC,SAAA3B,GAAAjC,IAAAsnC,GAAAF,EAAAxjC,SAAA3B,GAAAjC,QAEAonC,GAAAxjC,SAAA3B,GAAAjC,KAAA,GAKAsH,EAAA/I,UAAAwoC,WAAA,SAAAU,EAAAL,GACA,GAAAM,GAAAN,EAAA7tC,OAEA6tC,EAAAttC,EAAAkG,KAAA/F,KAAAW,aACA8sC,EAAAjC,MAAAlgC,aAAA,cAAA8I,GAAA+4B,EAAAttC,EAAAuC,EAAA,QAAAgS,GAAA+4B,EAAAttC,EAAAuC,EAAA,QAAAgS,GAAA+4B,EAAAttC,EAAAuC,EAAA,UAGA+qC,EAAAvpC,EAAAmC,KAAA/F,KAAAW,aACA8sC,EAAAjC,MAAAlgC,aAAA,eAAA6hC,EAAAvpC,EAAAxB,IAIAiL,EAAA/I,UAAAyoC,eAAA,SAAAS,EAAAL,GACA,GAAA9C,GAAA8C,EAAA3C,GACAI,EAAAuC,EAAA/kC,GACAkc,EAAA6oB,EAAAhrC,EAAAC,EAAAmiB,EAAA4oB,EAAA32B,EAAApU,CAEA,IAAA+qC,EAAAvpC,EAAAmC,KAAA/F,KAAAW,WAAA,CACA,GAAAmE,GAAA,OAAA0oC,EAAAl9B,GAAA,+BACA68B,GAAArnC,KAAAwF,aAAAxG,EAAAqoC,EAAAvpC,EAAAxB,GAGA,GAAA+qC,EAAAhrC,EAAA4D,KAAA/F,KAAAW,WAAA,CACA,GAAA+sC,GAAA,IAAAF,EAAA1tC,EAAA,UACA6tC,EAAA,OAAAD,EAAA,SACArD,GAAA/+B,aAAAoiC,EAAAppB,EAAA,IACA+lB,EAAA/+B,aAAAqiC,EAAArpB,EAAA,IACAsmB,IACAA,EAAAt/B,aAAAoiC,EAAAppB,EAAA,IACAsmB,EAAAt/B,aAAAqiC,EAAArpB,EAAA,KAGA,GAAAimB,GAAAhpC,EAAAC,EAAAsQ,CACA,IAAAq7B,EAAA7qC,EAAAgvB,MAAAtxB,KAAAW,WAAA,CACA4pC,EAAA4C,EAAA1C,GACA,IAAAmD,GAAAT,EAAA7qC,EAAAzC,CAEA,KADA2B,EAAA+oC,EAAA9oC,OACAF,EAAA,EAAgBA,EAAAC,EAAMD,GAAA,EACtBuQ,EAAAy4B,EAAAhpC,GACAuQ,EAAAxG,aAAA,SAAAsiC,EAAA,EAAArsC,GAAA,KACAuQ,EAAAxG,aAAA,oBAAAsiC,EAAA,EAAArsC,EAAA,OAAAqsC,EAAA,EAAArsC,EAAA,OAAAqsC,EAAA,EAAArsC,EAAA,QAGA,GAAAqpC,IAAAuC,EAAA7qC,EAAAivB,MAAAvxB,KAAAW,YAAA,CACA4pC,EAAA4C,EAAArC,GACA,IAAA+C,GAAAV,EAAA7qC,EAAAsB,CAEA,KADApC,EAAA+oC,EAAA9oC,OACAF,EAAA,EAAgBA,EAAAC,EAAMD,GAAA,EACtBuQ,EAAAy4B,EAAAhpC,GACAuQ,EAAAxG,aAAA,SAAAuiC,EAAA,EAAAtsC,GAAA,KACAuQ,EAAAxG,aAAA,eAAAuiC,EAAA,EAAAtsC,EAAA,IAGA,OAAAisC,EAAA1tC,GACAqtC,EAAA32B,EAAAzQ,KAAA/F,KAAAW,cACA0pC,EAAA/+B,aAAA,KAAAiZ,EAAA,IACA8lB,EAAA/+B,aAAA,KAAAiZ,EAAA,IACAqmB,IACAA,EAAAt/B,aAAA,KAAAiZ,EAAA,IACAqmB,EAAAt/B,aAAA,KAAAiZ,EAAA,UAGK,CACL,GAAAkR,EAQA,KAPA0X,EAAAhrC,EAAA4D,KAAAonC,EAAA32B,EAAAzQ,KAAA/F,KAAAW,cACA80B,EAAAz2B,KAAAmV,KAAAnV,KAAAiV,IAAAqQ,EAAA,GAAAC,EAAA,MAAAvlB,KAAAiV,IAAAqQ,EAAA,GAAAC,EAAA,OACA8lB,EAAA/+B,aAAA,IAAAmqB,GACAmV,GACAA,EAAAt/B,aAAA,IAAAmqB,IAGA0X,EAAA32B,EAAAzQ,KAAAonC,EAAAjrC,EAAA6D,KAAAonC,EAAA3mC,EAAAT,KAAA/F,KAAAW,WAAA,CACA80B,IACAA,EAAAz2B,KAAAmV,KAAAnV,KAAAiV,IAAAqQ,EAAA,GAAAC,EAAA,MAAAvlB,KAAAiV,IAAAqQ,EAAA,GAAAC,EAAA,OAEA,IAAAupB,GAAA9uC,KAAA8xB,MAAAvM,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,IAEAK,EAAAwoB,EAAAjrC,EAAAE,GAAA,MAAA+qC,EAAAjrC,EAAAE,IAAA,OAAA+qC,EAAAjrC,EAAAE,EACA2e,EAAA0U,EAAA9Q,EACAna,EAAAxL,KAAAsW,IAAAw4B,EAAAX,EAAA3mC,EAAApE,GAAA2e,EAAAuD,EAAA,GACAlL,EAAApa,KAAAwW,IAAAs4B,EAAAX,EAAA3mC,EAAApE,GAAA2e,EAAAuD,EAAA,EACA+lB,GAAA/+B,aAAA,KAAAd,GACA6/B,EAAA/+B,aAAA,KAAA8N,GACAwxB,IACAA,EAAAt/B,aAAA,KAAAd,GACAogC,EAAAt/B,aAAA,KAAA8N,OAOA/L,EAAA/I,UAAA0oC,aAAA,SAAAQ,EAAAL,GACA,GAAAM,GAAAN,EAAA7tC,MAEAS,EAAAotC,EAAAptC,CAEAA,MAAAmL,IAAAnL,EAAAgG,KAAA/F,KAAAW,cACA8sC,EAAAjC,MAAAlgC,aAAA,mBAAAvL,EAAA4xB,WAEA8b,EAAAjC,MAAAlgC,aAAA,oBAAAvL,EAAA6xB,aAGAub,EAAAttC,IAAAstC,EAAAttC,EAAAkG,KAAA/F,KAAAW,aACA8sC,EAAAjC,MAAAlgC,aAAA,gBAAA8I,GAAA+4B,EAAAttC,EAAAuC,EAAA,QAAAgS,GAAA+4B,EAAAttC,EAAAuC,EAAA,QAAAgS,GAAA+4B,EAAAttC,EAAAuC,EAAA,UAGA+qC,EAAAvpC,EAAAmC,KAAA/F,KAAAW,aACA8sC,EAAAjC,MAAAlgC,aAAA,iBAAA6hC,EAAAvpC,EAAAxB,IAEA+qC,EAAA3hC,EAAAzF,KAAA/F,KAAAW,cACA8sC,EAAAjC,MAAAlgC,aAAA,eAAA6hC,EAAA3hC,EAAApJ,GACAqrC,EAAA1C,QACA0C,EAAA1C,OAAAz/B,aAAA,eAAA6hC,EAAA3hC,EAAApJ,KAMAiL,EAAA/I,UAAAwO,QAAA,WACA9S,KAAA0E,QAAAoO,QAAApU,KAAAsB,KAAA0E,SACA1E,KAAA8iB,UAAA,KACA9iB,KAAAwN,UAAA,KACAxN,KAAA+M,gBAAA,KACA/M,KAAAgN,YAAA,MAKAY,EAAAtJ,UAAAX,KAAA,WACA3D,KAAA6G,oBAAA,EACA7G,KAAAqH,kBAAArH,KAAAqH,sBACArH,KAAA+tC,aAAA,GAAApoC,GAAA3F,KAAAoH,KAAAtH,EAAAE,KAAA6F,WAAA7F,MACAA,KAAAgyB,aAAA,GAAA7qB,GAAAnH,UAAAoH,KAAAtH,EAAAE,KAAAqH,mBACArH,KAAA0E,QAAAf,KAAAjF,KAAAsB,MACAA,KAAA+tC,aAAA7Q,iBAAAl9B,KAAAqH,oBAGAuG,EAAAtJ,UAAAghC,aAAA,SAAAzC,GACA7iC,KAAA0E,QAAA4gC,aAAA5mC,KAAAsB,KAAA6iC,IACA7iC,KAAAgyB,aAAAjsB,KAAA/F,KAAAgyB,aAAArxB,cACAX,KAAAguC,eACAhuC,KAAAgyB,aAAArxB,YAAA,IAIAiN,EAAAtJ,UAAA2pC,gBAAA,SAAAnQ,EAAAp4B,GACA,GAAAoC,GACAs+B,EADAh8B,EAAA1E,EAAAjE,OAEAysC,EAAA,EACA,KAAApmC,EAAA,EAAYA,EAAAsC,EAAOtC,GAAA,EACnBs+B,EAAA1gC,EAAAoC,GAAAgf,GAAA5b,EACAgjC,GAAAluC,KAAAitC,iBAAA7G,IAAA7kC,EAAAE,QAAA,EAAAq8B,EAEA,OAAAoQ,IAGAtgC,EAAAtJ,UAAA69B,mBAAA,SAAAC,EAAA5I,GACAx5B,KAAAgyB,aAAAmQ,mBAAAC,EAAA5I,IAGA5rB,EAAAtJ,UAAA6pC,4BAAA,SAAArmB,EAAAgW,EAAAsQ,EAAAzQ,EAAAC,GAKA,OAJA9V,EAAAyY,IACAzC,EAAArnB,UAAAqR,EAAAyY,GAAA,GAAAzY,EAAAyY,GAAA,GAAAzY,EAAApgB,OAAA,GAEAo2B,EAAArnB,UAAA,GAAAqR,EAAA3f,GAAA,GACA2f,EAAAhgB,GACA,OACAg2B,EAAArnB,UAAAqR,EAAA/f,eAAA+f,EAAAngB,SAAAmgB,EAAA5f,WAAAkmC,IAAA,IACA,MACA,QACAtQ,EAAArnB,UAAAqR,EAAA/f,eAAA+f,EAAAngB,SAAAmgB,EAAA5f,WAAAkmC,IAAA,OAGAtQ,EAAArnB,UAAAknB,EAAAC,EAAA,IAGAhwB,EAAAtJ,UAAA+pC,WAAA,SAAAC,GACA,aAAAtvC,KAAAC,MAAA,IAAAqvC,EAAA,QAAAtvC,KAAAC,MAAA,IAAAqvC,EAAA,QAAAtvC,KAAAC,MAAA,IAAAqvC,EAAA,SAGA1gC,EAAAtJ,UAAA2oC,iBAAA5/B,EAAA/I,UAAA2oC,iBAEAr/B,EAAAtJ,UAAAiqC,UAAA,GAAAznC,GAEA8G,EAAAtJ,UAAAwO,QAAA,WACA9S,KAAA0E,QAAAoO,QAAApU,KAAAsB,KAAA0E,UAOAX,EAAA+I,EAAAe,GAEAlJ,EAAAiJ,EAAAC,GAEAA,EAAAvJ,UAAAgkC,eAAA,WAEAtoC,KAAA0E,QAAA4jC,eAAA5pC,KAAAsB,MAGAA,KAAAoH,KAAA8hC,IACAlpC,KAAA6P,aAAAvE,aAAA,KAAAtL,KAAAoH,KAAA8hC,IAEAlpC,KAAAoH,KAAAghB,IACApoB,KAAA6P,aAAAvE,aAAA,QAAAtL,KAAAoH,KAAAghB,IAEApoB,KAAAoH,KAAAugB,cAAA3nB,KAAAmJ,WAAA6c,YAAAlkB,QACA9B,KAAAwuC,cAAArjC,SAAAC,gBAAAC,GAAA,UAIAwC,EAAAvJ,UAAA0pC,aAAA,WACA,GAAAzsC,GAAAC,EAEAsmB,EAAA9nB,KAAAgyB,aAAAvqB,WACAzH,MAAA4G,gBAAAzB,MAAAC,MAAA,MAA6C3D,OAAAqmB,IAAA9f,EAAAvG,OAAA,IAC7CqmB,EAAA7gB,GACAjH,KAAA6P,aAAAvE,aAAA,OAAAtL,KAAAquC,WAAAvmB,EAAA7gB,KAEAjH,KAAA6P,aAAAvE,aAAA,wBAEAwc,EAAA9gB,KACAhH,KAAA6P,aAAAvE,aAAA,SAAAtL,KAAAquC,WAAAvmB,EAAA9gB,KACAhH,KAAA6P,aAAAvE,aAAA,eAAAwc,EAAA/gB,KAEA/G,KAAA6P,aAAAvE,aAAA,YAAAwc,EAAA3lB,EACA,IAAAwoB,GAAA3qB,KAAAmJ,WAAA6c,YAAAgG,cAAAlE,EAAApnB,EACA,IAAAiqB,EAAAI,OACA/qB,KAAA6P,aAAAvE,aAAA,QAAAqf,EAAAI,YACK,CACL/qB,KAAA6P,aAAAvE,aAAA,cAAAqf,EAAAE,QACA,IAAAhjB,GAAAigB,EAAAjgB,QAAAD,EAAAkgB,EAAAlgB,MACA5H,MAAA6P,aAAAvE,aAAA,aAAA1D,GACA5H,KAAA6P,aAAAvE,aAAA,cAAAzD,GAGA,GAAAo2B,GAAAnW,EAAA9f,MACAymC,EAAAzuC,KAAAmJ,WAAA6c,YAAAlkB,KAEA,IADAN,EAAAy8B,EAAAx8B,OACA,CAGA,GAAAitC,GAEAhpC,EADAo4B,EAAA99B,KAAA+9B,QACAmQ,EAAA,GAAAvmB,EAAA3nB,KAAAoH,KAAAugB,YACAgW,EAAA,EAAAC,EAAA,EAAAkB,GAAA,EACAyC,EAAAzZ,EAAAzf,GAAA,IAAAyf,EAAA3lB,CACA,IAAAwlB,IAAA8mB,EAAA,CACA,GAAAE,GAAA3uC,KAAAwuC,cACAI,EAAA,EACA,QAAA9mB,EAAAhgB,GACA,OACA8mC,EAAA,KACA,MACA,QACAA,EAAA,QACA,MACA,QACAA,EAAA,QAGAD,EAAArjC,aAAA,cAAAsjC,GACAD,EAAArjC,aAAA,iBAAAi2B,EACA,IAAAzW,GAAAhD,EAAAhoB,EAAAsnB,MAAAxJ,OAAAC,aAAA,IACArc,GAAAspB,EAAArpB,MACA,IAAAm8B,GAAA9V,EAAAyY,GAAAzY,EAAAyY,GAAA,GAAAzY,EAAApgB,OAAA,CACA,KAAAnG,EAAA,EAAoBA,EAAAC,EAASD,GAAA,EAC7BmtC,EAAA1uC,KAAA8N,UAAAvM,IAAA4J,SAAAC,gBAAAC,GAAA,SACAqjC,EAAA5jB,cAAAvpB,GACAmtC,EAAApjC,aAAA,OACAojC,EAAApjC,aAAA,IAAAsyB,GACA8Q,EAAApvC,MAAAsmC,QAAA,UACA+I,EAAA/iC,YAAA8iC,GACA1uC,KAAA8N,UAAAvM,GAAAmtC,EACA9Q,GAAA9V,EAAA7f,EAGAjI,MAAA6P,aAAAjE,YAAA+iC,OACK,CACL,GACA7rB,GAAAie,EADA8N,EAAA7uC,KAAA8N,UAAArM,MAEA,KAAAF,EAAA,EAAmBA,EAAAC,EAASD,GAAA,EAC5BktC,GAAA9mB,GAAA,IAAApmB,IACAmtC,EAAAG,EAAAttC,EAAAvB,KAAA8N,UAAAvM,GAAA4J,SAAAC,gBAAAC,GAAAojC,EAAA,eACAI,GAAAttC,IACAmtC,EAAApjC,aAAA,yBACAojC,EAAApjC,aAAA,2BACAojC,EAAApjC,aAAA,yBACAtL,KAAA8N,UAAAvM,GAAAmtC,EACA1uC,KAAA6P,aAAAjE,YAAA8iC,IAEAA,EAAApvC,MAAAsmC,QAAA,WAGA9H,EAAA7oB,QACAw5B,GACA3Q,EAAAznB,MAAAyR,EAAA3lB,EAAA,IAAA2lB,EAAA3lB,EAAA,KACAwlB,IACAsW,EAAA18B,GAAA3B,IACA+9B,GAAA4D,EACA3D,GAAA9V,EAAArf,QACAm1B,GAAAkB,EAAA,IACAA,GAAA,GAEA9+B,KAAAmuC,4BAAArmB,EAAAgW,EAAAG,EAAA18B,GAAAw+B,KAAApC,EAAAC,GACAD,GAAAM,EAAA18B,GAAAyG,GAAA,EAEA21B,GAAA4D,GAEAR,EAAA/gC,KAAAmJ,WAAA6c,YAAA2F,YAAA7D,EAAAhoB,EAAA2hC,OAAAlgC,GAAAopB,EAAA/iB,OAAA5H,KAAAmJ,WAAA6c,YAAAgG,cAAAlE,EAAApnB,GAAAmqB,SACA/H,EAAAie,KAAA35B,SACA1B,EAAAod,EAAApd,OAAAod,EAAApd,OAAA,GAAAqhB,MACAY,EAGAumB,GAAAluC,KAAAiuC,gBAAAnQ,EAAAp4B,GAFAgpC,EAAApjC,aAAA,IAAAtL,KAAAiuC,gBAAAnQ,EAAAp4B,MAKAgpC,EAAA5jB,YAAAmT,EAAA18B,GAAArC,IACAwvC,EAAAI,eAAA,+DAIAnnB,IACA+mB,EAAApjC,aAAA,IAAA4iC,GAGA,KAAA3sC,EAAAvB,KAAA8N,UAAArM,QACAzB,KAAA8N,UAAAvM,GAAAjC,MAAAsmC,QAAA,OACArkC,GAAA,CAGAvB,MAAAoN,cAAA,IAGAS,EAAAvJ,UAAAqkC,iBAAA,SAAAoG,GAGA,GAFA/uC,KAAAslC,aAAAtlC,KAAAuL,KAAArC,cAAAlJ,KAAAoH,KAAAwnB,IACA5uB,KAAAgvC,gBACAhvC,KAAAoN,aAAA,CACApN,KAAAoN,cAAA,CACA,IAAA6hC,GAAAjvC,KAAA6P,aAAAq/B,SACAlvC,MAAAmvC,MACAnmB,IAAAimB,EAAA71B,EACA2P,KAAAkmB,EAAAzkC,EACAoR,MAAAqzB,EAAArzB,MACA6oB,OAAAwK,EAAAxK,QAGA,MAAAzkC,MAAAmvC,MAGAthC,EAAAvJ,UAAA0qC,cAAA,WAEA,IAAAhvC,KAAAoH,KAAAugB,cACA3nB,KAAA+tC,aAAArQ,YAAA19B,KAAAgyB,aAAAvqB,YAAAzH,KAAA6G,oBACA7G,KAAA6G,oBAAA7G,KAAA+tC,aAAAlnC,oBAAA,CACA7G,KAAAoN,cAAA,CACA,IAAA7L,GAAAC,EACAoF,EAAA5G,KAAA+tC,aAAAnnC,gBAEAq3B,EAAAj+B,KAAAgyB,aAAAvqB,YAAAO,CAEAxG,GAAAy8B,EAAAx8B,MACA,IAAA2tC,GAAAC,CACA,KAAA9tC,EAAA,EAAoBA,EAAAC,EAAMD,GAAA,EAC1B08B,EAAA18B,GAAA3B,IAGAwvC,EAAAxoC,EAAArF,GACA8tC,EAAArvC,KAAA8N,UAAAvM,GACA6tC,EAAArpC,IAAAmB,GACAmoC,EAAA/jC,aAAA,YAAA8jC,EAAAloC,GAEAkoC,EAAArpC,IAAAnC,GACAyrC,EAAA/jC,aAAA,UAAA8jC,EAAAxrC,GAEAwrC,EAAArpC,IAAAgB,IACAsoC,EAAA/jC,aAAA,eAAA8jC,EAAAroC,IAEAqoC,EAAArpC,IAAAiB,IACAqoC,EAAA/jC,aAAA,SAAA8jC,EAAApoC,IAEAooC,EAAArpC,IAAAkB,IACAooC,EAAA/jC,aAAA,OAAA8jC,EAAAnoC,OAOA4G,EAAAvJ,UAAA8gC,YAAA,SAAAuH,GAGA,QADA3sC,KAAA0E,QAAA0gC,YAAA1mC,KAAAsB,KAAA2sC,GAGA,WADA3sC,MAAA2lC,MAGA3lC,MAAAgoC,QACAhoC,KAAA6lC,OAEA7lC,KAAAW,aACAX,KAAAW,YAAA,GAEAX,KAAAgvC,iBA8BAjhC,EAAAzJ,UAAA8gC,YAAA,SAAA/T,GACA,GAAAA,GAAArxB,KAAAiO,cAAAlI,IAAA,CACA,GAAAupC,GAAAtvC,KAAAiO,cAAAG,eAAA,GAAA5L,EAAAJ,EACAmtC,EAAAvvC,KAAAiO,cAAAG,eAAA,GAAA5L,EAAAJ,EACAgmC,EAAApoC,KAAAiO,cAAAG,eAAA,GAAA5L,EAAAJ,EAAA,GACApC,MAAAmO,aAAA7C,aAAA,SAAAikC,EAAA,GAAAD,EAAA,aAAAA,EAAA,QAAAC,EAAA,GAAAD,EAAA,cAAAA,EAAA,QAAAC,EAAA,GAAAD,EAAA,cAAAA,EAAA,aAAAlH,EAAA,QAYA75B,EAAAjK,UAAA8gC,YAAA,SAAA/T,GACA,GAAAA,GAAArxB,KAAAiO,cAAAlI,IAAA,CACA,GAAA/C,GAAAhD,KAAAiO,cAAAG,eAAA,GAAA5L,EAAAJ,EACAgmC,EAAApoC,KAAAiO,cAAAG,eAAA,GAAA5L,EAAAJ,CACApC,MAAAmO,aAAA7C,aAAA,oBAAAtI,EAAA,eAAAA,EAAA,eAAAA,EAAA,aAAAolC,EAAA,QAUA55B,EAAAlK,UAAAkrC,WAAA,WAEA,GACArlC,GAAAslC,EAAAluC,EAAAC,EADAkuC,EAAA1vC,KAAA8F,KAAA+J,aAAA8/B,UAAA3vC,KAAA8F,KAAA+J,aAAA+/B,UAaA,KAXA,IAAA5vC,KAAAiO,cAAAG,eAAA,GAAA5L,EAAAJ,GACAZ,EAAAxB,KAAA8F,KAAA03B,YAAAxzB,gBAAAvI,OACAF,EAAA,IAEAA,EAAAvB,KAAAiO,cAAAG,eAAA,GAAA5L,EAAAJ,EAAA,EACAZ,EAAAD,EAAA,GAEAkuC,EAAAtkC,SAAAC,gBAAAC,GAAA,KACAokC,EAAAnkC,aAAA,eACAmkC,EAAAnkC,aAAA,0BACAmkC,EAAAnkC,aAAA,uBACA/J,EAAUA,EAAAC,EAAMD,GAAA,EAChB4I,EAAAgB,SAAAC,gBAAAC,GAAA,QACAokC,EAAA7jC,YAAAzB,GACAnK,KAAAsD,MAAAnC,MAAyBqB,EAAA2H,EAAAjD,EAAA3F,GAEzB,QAAAvB,KAAAiO,cAAAG,eAAA,IAAA5L,EAAAJ,EAAA,CACA,GAAA8J,GAAAf,SAAAC,gBAAAC,GAAA,QACAoW,EAAA,QAAA5f,EAAA,GACAqK,GAAAZ,aAAA,KAAAmW,GACAvV,EAAAZ,aAAA,qBACAY,EAAAN,YAAA6jC,GACAzvC,KAAA8F,KAAAqD,WAAAsB,KAAAmB,YAAAM,EACA,IAAA5J,GAAA6I,SAAAC,gBAAAC,GAAA,IACA/I,GAAAgJ,aAAA,cAAAa,GAAA,IAAAsV,EAAA,KACAiuB,EAAA,IACAptC,EAAAsJ,YAAA8jC,EAAA,IAEA1vC,KAAA8F,KAAA+J,aAAAjE,YAAAtJ,GACAtC,KAAA6oC,OAAA38B,EACAujC,EAAAnkC,aAAA,qBACK,QAAAtL,KAAAiO,cAAAG,eAAA,IAAA5L,EAAAJ,GAAA,IAAApC,KAAAiO,cAAAG,eAAA,IAAA5L,EAAAJ,EAAA,CACL,OAAApC,KAAAiO,cAAAG,eAAA,IAAA5L,EAAAJ,EAEA,IADA,GAAAstC,GAAA1vC,KAAA8F,KAAA+J,aAAA8/B,UAAA3vC,KAAA8F,KAAA+J,aAAA+/B,WACAF,EAAAjuC,QACAzB,KAAA8F,KAAA+J,aAAAwa,YAAAqlB,EAAA,GAGA1vC,MAAA8F,KAAA+J,aAAAjE,YAAA6jC,GACAzvC,KAAA8F,KAAA+J,aAAAggC,gBAAA,QACAJ,EAAAnkC,aAAA,iBAEAtL,KAAAyO,aAAA,EACAzO,KAAA8vC,WAAAL,GAGAjhC,EAAAlK,UAAA8gC,YAAA,SAAA/T,GACArxB,KAAAyO,aACAzO,KAAAwvC,YAEA,IAAAjuC,GACA2K,EAAA/B,EADA3I,EAAAxB,KAAAsD,MAAA7B,MAEA,KAAAF,EAAA,EAAYA,EAAAC,EAAMD,GAAA,EAMlB,GALA2K,EAAAlM,KAAA8F,KAAA03B,YAAAvzB,SAAAjK,KAAAsD,MAAA/B,GAAA2F,GACAiD,EAAAnK,KAAAsD,MAAA/B,GAAAiB,GACA6uB,GAAArxB,KAAAiO,cAAAlI,KAAAmG,EAAAK,KAAAxG,MACAoE,EAAAmB,aAAA,IAAAY,EAAAJ,UAEAulB,GAAArxB,KAAAiO,cAAAG,eAAA,GAAA5L,EAAAuD,KAAA/F,KAAAiO,cAAAG,eAAA,GAAA5L,EAAAuD,KAAA/F,KAAAiO,cAAAG,eAAA,GAAA5L,EAAAuD,KAAA/F,KAAAiO,cAAAG,eAAA,GAAA5L,EAAAuD,KAAAmG,EAAAK,KAAAxG,IAAA,CACA,GAAAgqC,EACA,QAAA/vC,KAAAiO,cAAAG,eAAA,GAAA5L,EAAAJ,GAAA,MAAApC,KAAAiO,cAAAG,eAAA,GAAA5L,EAAAJ,EAAA,CACA,GAAAD,GAAAnD,KAAA8D,IAAA9C,KAAAiO,cAAAG,eAAA,GAAA5L,EAAAJ,EAAApC,KAAAiO,cAAAG,eAAA,GAAA5L,EAAAJ,GAAA,IACAoU,EAAAxX,KAAA6D,IAAA7C,KAAAiO,cAAAG,eAAA,GAAA5L,EAAAJ,EAAApC,KAAAiO,cAAAG,eAAA,GAAA5L,EAAAJ,GAAA,IACA4F,EAAAmC,EAAA6lC,gBACAD,GAAA,SAAA/nC,EAAA7F,EAAA,GACA,IAGA2F,GAHA63B,EAAA33B,GAAAwO,EAAArU,GACA22B,EAAA,IAAA94B,KAAAiO,cAAAG,eAAA,GAAA5L,EAAAJ,EAAApC,KAAAiO,cAAAG,eAAA,GAAA5L,EAAAJ,EAAA,IACA6tC,EAAAjxC,KAAA2D,MAAAg9B,EAAA7G,EAEA,KAAAhxB,EAAA,EAAwBA,EAAAmoC,EAAQnoC,GAAA,EAChCioC,GAAA,OAAA/vC,KAAAiO,cAAAG,eAAA,GAAA5L,EAAAJ,EAAApC,KAAAiO,cAAAG,eAAA,GAAA5L,EAAAJ,EAAA,OAEA2tC,IAAA,QAAA/nC,EAAA,WAEA+nC,GAAA,OAAA/vC,KAAAiO,cAAAG,eAAA,GAAA5L,EAAAJ,EAAApC,KAAAiO,cAAAG,eAAA,GAAA5L,EAAAJ,EAAA,GAEA+H,GAAAmB,aAAA,mBAAAykC,GAUA,IAPA1e,GAAArxB,KAAAiO,cAAAG,eAAA,GAAA5L,EAAAuD,MACA/F,KAAA8vC,WAAAxkC,aAAA,iBAAAtL,KAAAiO,cAAAG,eAAA,GAAA5L,EAAAJ,IAGAivB,GAAArxB,KAAAiO,cAAAG,eAAA,GAAA5L,EAAAuD,MACA/F,KAAA8vC,WAAAxkC,aAAA,UAAAtL,KAAAiO,cAAAG,eAAA,GAAA5L,EAAAJ,IAEA,IAAApC,KAAAiO,cAAAG,eAAA,IAAA5L,EAAAJ,GAAA,IAAApC,KAAAiO,cAAAG,eAAA,IAAA5L,EAAAJ,KACAivB,GAAArxB,KAAAiO,cAAAG,eAAA,GAAA5L,EAAAuD,KAAA,CACA,GAAA/C,GAAAhD,KAAAiO,cAAAG,eAAA,GAAA5L,EAAAJ,CACApC,MAAA8vC,WAAAxkC,aAAA,gBAAA8I,GAAA,IAAApR,EAAA,QAAAoR,GAAA,IAAApR,EAAA,QAAAoR,GAAA,IAAApR,EAAA,WA8BA0L,EAAApK,UAAA8gC,YAAA,SAAA/T,GACA,GAAAA,GAAArxB,KAAAiO,cAAAlI,IAAA,CACA,GAAAmqC,GAAAlwC,KAAAiO,cAAAG,eAAA,GAAA5L,EAAAJ,EACA+tC,EAAAnwC,KAAAiO,cAAAG,eAAA,GAAA5L,EAAAJ,EACAguC,EAAApwC,KAAAiO,cAAAG,eAAA,GAAA5L,EAAAJ,EACAiuC,EAAAD,EAAA,OAAAD,EAAA,OAAAD,EAAA,GACAI,EAAAF,EAAA,OAAAD,EAAA,OAAAD,EAAA,GACAK,EAAAH,EAAA,OAAAD,EAAA,OAAAD,EAAA,EACAlwC,MAAA4O,QAAAtD,aAAA,cAAA+kC,GACArwC,KAAA6O,QAAAvD,aAAA,cAAAglC,GACAtwC,KAAA8O,QAAAxD,aAAA,cAAAilC,KAwCAxhC,EAAAzK,UAAA0K,aAAA,SAAA/O,EAAA0O,GACA,GAAA6hC,GAAArlC,SAAAC,gBAAAC,GAAApL,EAGA,OAFAuwC,GAAAllC,aAAA,gBACAqD,EAAA/C,YAAA4kC,GACAA,GAGAzhC,EAAAzK,UAAAmsC,cAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAWA,IAVA,GAEAhtB,GAIAitB,EANAltC,EAAA,EAGAf,EAAA9D,KAAA8D,IAAA4tC,EAAAC,GACA9tC,EAAA7D,KAAA6D,IAAA6tC,EAAAC,GACAK,EAAA7rC,MAAAzG,KAAA,MAAiC+C,OAJjC,MAMAsxB,EAAA,EACAke,EAAAH,EAAAD,EACAK,EAAAP,EAAAD,EACA7sC,GAAA,KACAigB,EAAAjgB,EAAA,IAEAktC,EADAjtB,GAAAhhB,EACAouC,EAAA,EAAAJ,EAAAD,EACS/sB,GAAAjhB,EACTquC,EAAA,EAAAL,EAAAC,EAEAD,EAAAI,EAAAjyC,KAAAiV,KAAA6P,EAAA4sB,GAAAQ,EAAA,EAAAN,GAEAI,EAAAje,KAAAge,EACAltC,GAAA,OAEA,OAAAmtC,GAAAx2B,KAAA,MAGAzL,EAAAzK,UAAA8gC,YAAA,SAAA/T,GACA,GAAAA,GAAArxB,KAAAiO,cAAAlI,IAAA,CACA,GAAA7G,GACAkP,EAAApO,KAAAiO,cAAAG,cACApO,MAAAkP,kBAAAmiB,GAAAjjB,EAAA,GAAA5L,EAAAuD,KAAAqI,EAAA,GAAA5L,EAAAuD,KAAAqI,EAAA,GAAA5L,EAAAuD,KAAAqI,EAAA,GAAA5L,EAAAuD,KAAAqI,EAAA,GAAA5L,EAAAuD,OACA7G,EAAAc,KAAAywC,cAAAriC,EAAA,GAAA5L,EAAAJ,EAAAgM,EAAA,GAAA5L,EAAAJ,EAAAgM,EAAA,GAAA5L,EAAAJ,EAAAgM,EAAA,GAAA5L,EAAAJ,EAAAgM,EAAA,GAAA5L,EAAAJ,GACApC,KAAAkP,gBAAA5D,aAAA,cAAApM,GACAc,KAAAmP,gBAAA7D,aAAA,cAAApM,GACAc,KAAAoP,gBAAA9D,aAAA,cAAApM,IAGAc,KAAA4O,UAAAyiB,GAAAjjB,EAAA,GAAA5L,EAAAuD,KAAAqI,EAAA,IAAA5L,EAAAuD,KAAAqI,EAAA,IAAA5L,EAAAuD,KAAAqI,EAAA,IAAA5L,EAAAuD,KAAAqI,EAAA,IAAA5L,EAAAuD,OACA7G,EAAAc,KAAAywC,cAAAriC,EAAA,GAAA5L,EAAAJ,EAAAgM,EAAA,IAAA5L,EAAAJ,EAAAgM,EAAA,IAAA5L,EAAAJ,EAAAgM,EAAA,IAAA5L,EAAAJ,EAAAgM,EAAA,IAAA5L,EAAAJ,GACApC,KAAA4O,QAAAtD,aAAA,cAAApM,IAGAc,KAAA6O,UAAAwiB,GAAAjjB,EAAA,IAAA5L,EAAAuD,KAAAqI,EAAA,IAAA5L,EAAAuD,KAAAqI,EAAA,IAAA5L,EAAAuD,KAAAqI,EAAA,IAAA5L,EAAAuD,KAAAqI,EAAA,IAAA5L,EAAAuD,OACA7G,EAAAc,KAAAywC,cAAAriC,EAAA,IAAA5L,EAAAJ,EAAAgM,EAAA,IAAA5L,EAAAJ,EAAAgM,EAAA,IAAA5L,EAAAJ,EAAAgM,EAAA,IAAA5L,EAAAJ,EAAAgM,EAAA,IAAA5L,EAAAJ,GACApC,KAAA6O,QAAAvD,aAAA,cAAApM,IAGAc,KAAA8O,UAAAuiB,GAAAjjB,EAAA,IAAA5L,EAAAuD,KAAAqI,EAAA,IAAA5L,EAAAuD,KAAAqI,EAAA,IAAA5L,EAAAuD,KAAAqI,EAAA,IAAA5L,EAAAuD,KAAAqI,EAAA,IAAA5L,EAAAuD,OACA7G,EAAAc,KAAAywC,cAAAriC,EAAA,IAAA5L,EAAAJ,EAAAgM,EAAA,IAAA5L,EAAAJ,EAAAgM,EAAA,IAAA5L,EAAAJ,EAAAgM,EAAA,IAAA5L,EAAAJ,EAAAgM,EAAA,IAAA5L,EAAAJ,GACApC,KAAA8O,QAAAxD,aAAA,cAAApM,IAGAc,KAAAiP,UAAAoiB,GAAAjjB,EAAA,IAAA5L,EAAAuD,KAAAqI,EAAA,IAAA5L,EAAAuD,KAAAqI,EAAA,IAAA5L,EAAAuD,KAAAqI,EAAA,IAAA5L,EAAAuD,KAAAqI,EAAA,IAAA5L,EAAAuD,OACA7G,EAAAc,KAAAywC,cAAAriC,EAAA,IAAA5L,EAAAJ,EAAAgM,EAAA,IAAA5L,EAAAJ,EAAAgM,EAAA,IAAA5L,EAAAJ,EAAAgM,EAAA,IAAA5L,EAAAJ,EAAAgM,EAAA,IAAA5L,EAAAJ,GACApC,KAAAiP,QAAA3D,aAAA,cAAApM,MA6DAmQ,EAAA/K,UAAA8gC,YAAA,SAAA/T,GACA,GAAAA,GAAArxB,KAAAiO,cAAAlI,IAAA,CAIA,IAHAsrB,GAAArxB,KAAAiO,cAAAG,eAAA,GAAA5L,EAAAuD,MACA/F,KAAAsP,eAAAhE,aAAA,eAAAtL,KAAAiO,cAAAG,eAAA,GAAA5L,EAAAJ,EAAA,GAEAivB,GAAArxB,KAAAiO,cAAAG,eAAA,GAAA5L,EAAAuD,IAAA,CACA,GAAAorC,GAAAnxC,KAAAiO,cAAAG,eAAA,GAAA5L,EAAAJ,CACApC,MAAAwP,QAAAlE,aAAA,cAAAwJ,GAAA9V,KAAAC,MAAA,IAAAkyC,EAAA,IAAAnyC,KAAAC,MAAA,IAAAkyC,EAAA,IAAAnyC,KAAAC,MAAA,IAAAkyC,EAAA,MAKA,IAHA9f,GAAArxB,KAAAiO,cAAAG,eAAA,GAAA5L,EAAAuD,MACA/F,KAAAwP,QAAAlE,aAAA,gBAAAtL,KAAAiO,cAAAG,eAAA,GAAA5L,EAAAJ,EAAA,KAEAivB,GAAArxB,KAAAiO,cAAAG,eAAA,GAAA5L,EAAAuD,KAAA/F,KAAAiO,cAAAG,eAAA,GAAA5L,EAAAuD,IAAA,CACA,GAAAuzB,GAAAt5B,KAAAiO,cAAAG,eAAA,GAAA5L,EAAAJ,EACAgT,GAAApV,KAAAiO,cAAAG,eAAA,GAAA5L,EAAAJ,EAAA,IAAAuS,GACAnK,EAAA8uB,EAAAt6B,KAAAsW,IAAAF,GACAgE,EAAAkgB,EAAAt6B,KAAAwW,IAAAJ,EACApV,MAAAuP,SAAAjE,aAAA,KAAAd,GACAxK,KAAAuP,SAAAjE,aAAA,KAAA8N,MAwBAzJ,EAAArL,UAAA8sC,iBAAA,SAAAtrC,EAAAoG,GACA,GAAA28B,GAAA19B,SAAAC,gBAAAC,GAAA,OACAw9B,GAAAv9B,aAAA,KAAAY,EAAArB,SACAg+B,EAAAv9B,aAAA,qBACAu9B,EAAAj9B,YAAAM,EAAA2D,cACA/J,EAAAo/B,SAAAh5B,EAAArB,SACAqB,EAAA9E,KAAAoiC,IAAA,EACA1jC,EAAAqD,WAAAsB,KACAmB,YAAAi9B,IAGAl5B,EAAArL,UAAAkrC,WAAA,WAGA,IAFA,GAAA5iB,GAAA5sB,KAAAiO,cAAAG,eAAA,GAAA5L,EAAAJ,EACAb,EAAA,EAAAC,EAAAxB,KAAA8F,KAAAyF,KAAA5B,SAAAlI,OACAF,EAAAC,GACAxB,KAAA8F,KAAAyF,KAAA5B,SAAApI,GAAA6F,KAAAwlB,SACA5sB,KAAAoxC,iBAAApxC,KAAA8F,KAAA9F,KAAA8F,KAAAyF,KAAA5B,SAAApI,IAEAA,GAAA,CAEAvB,MAAAyO,aAAA,GAGAkB,EAAArL,UAAA8gC,YAAA,WACAplC,KAAAyO,aACAzO,KAAAwvC,cA8CAz/B,EAAAzL,UAAA8gC,YAAA,SAAAzkC,GACA,GAAAY,GAAAC,EAAAxB,KAAAqQ,QAAA5O,MACA,KAAAF,EAAA,EAAYA,EAAAC,EAAMD,GAAA,EAClBvB,KAAAqQ,QAAA9O,GAAA6jC,YAAAzkC,IAoBAoD,EAAA+I,EAAA0D,GAEAA,EAAAlM,UAAAqhC,KAAA,WACA,IAAA3lC,KAAAgoC,OAAA,CACAhoC,KAAA0E,QAAAihC,KAAAjnC,KAAAsB,KACA,IAAAuB,GAAAC,EAAAxB,KAAA2J,SAAAlI,MACA,KAAAF,EAAA,EAAmBA,EAAAC,EAASD,GAAA,EAC5BvB,KAAA2J,SAAApI,IACAvB,KAAA2J,SAAApI,GAAAokC,SAMAn1B,EAAAlM,UAAAghC,aAAA,SAAAzC,GAEA,GADA7iC,KAAA0E,QAAA4gC,aAAA5mC,KAAAsB,KAAA6iC,IACA,IAAA7iC,KAAAumC,WAAAvmC,KAAAoH,KAAAyJ,GAAA,CAIA,GAAA7Q,KAAA2Q,GAAA,CACA,GAAA0gC,GAAArxC,KAAA2Q,GAAAvO,CACAivC,KAAArxC,KAAAoH,KAAAkF,KACA+kC,EAAArxC,KAAAoH,KAAAkF,GAAA,GAEAtM,KAAAkJ,cAAAmoC,MAEArxC,MAAAkJ,cAAA25B,EAAA7iC,KAAAoH,KAAAq/B,EAEA,IAAAllC,GAAAC,EAAAxB,KAAA2J,SAAAlI,MAIA,KAHAzB,KAAA0Q,gBACA1Q,KAAA4iC,YAAA5iC,KAAAkJ,eAEA3H,EAAA,EAAeA,EAAAC,EAASD,GAAA,GACxBvB,KAAA0Q,gBAAA1Q,KAAA2J,SAAApI,KACAvB,KAAA2J,SAAApI,GAAA+jC,aAAAtlC,KAAAkJ,cAAAlJ,KAAAiJ,OAAA1H,GAAAqtB,MAKApe,EAAAlM,UAAA8gC,YAAA,SAAAuH,GACA,GACAprC,GADA+vC,EAAAtxC,KAAA0E,QAAA0gC,YAAA1mC,KAAAsB,KAAA2sC,GACAnrC,EAAAxB,KAAAiJ,OAAAxH,MACA,SAAA6vC,EAEA,WADAtxC,MAAA2lC,MAOA,KAHA3lC,KAAAgoC,QACAhoC,KAAA6lC,OAEAtkC,EAAA,EAAeA,EAAAC,EAASD,GAAA,GACxBvB,KAAA0Q,gBAAA1Q,KAAA2J,SAAApI,KACAvB,KAAA2J,SAAApI,GAAA6jC,aAGAplC,MAAAW,aACAX,KAAAW,YAAA,IAIA6P,EAAAlM,UAAAitC,YAAA,SAAAC,GACAxxC,KAAA2J,SAAA6nC,GAGAhhC,EAAAlM,UAAAmtC,YAAA,WACA,MAAAzxC,MAAA2J,UAGA6G,EAAAlM,UAAAwO,QAAA,WACA9S,KAAA0E,QAAAoO,QAAApU,KAAAsB,KAAA0E,QACA,IAAAnD,GAAAC,EAAAxB,KAAAiJ,OAAAxH,MACA,KAAAF,EAAA,EAAeA,EAAAC,EAASD,GAAA,EACxBvB,KAAA2J,SAAApI,IACAvB,KAAA2J,SAAApI,GAAAuR,WAKAtC,EAAAlM,UAAAs+B,YAAA95B,EAAAxE,UAAAs+B,YACApyB,EAAAlM,UAAAy+B,UAAAj6B,EAAAxE,UAAAy+B,UACAvyB,EAAAlM,UAAAwM,cAAAhI,EAAAxE,UAAAwM,cACAN,EAAAlM,UAAA2/B,sBAAAn7B,EAAAxE,UAAA2/B,sBACAzzB,EAAAlM,UAAA2+B,WAAAn6B,EAAAxE,UAAA2+B,WACAzyB,EAAAlM,UAAA6+B,YAAAr6B,EAAAxE,UAAA6+B,YACA3yB,EAAAlM,UAAA8+B,WAAAt6B,EAAAxE,UAAA8+B,WACA5yB,EAAAlM,UAAA++B,YAAAv6B,EAAAxE,UAAA++B,YACA7yB,EAAAlM,UAAAg/B,YAAAx6B,EAAAxE,UAAAg/B,YACA9yB,EAAAlM,UAAAi/B,WAAAz6B,EAAAxE,UAAAi/B,WACA/yB,EAAAlM,UAAAm/B,WAAA36B,EAAAxE,UAAAm/B,WACAjzB,EAAAlM,UAAA2gC,mBAAAn8B,EAAAxE,UAAA2gC,mBACAz0B,EAAAlM,UAAA0+B,qBAAAl6B,EAAAxE,UAAA0+B,qBACAxyB,EAAAlM,UAAAggC,kBAAAx7B,EAAAxE,UAAAggC,kBAKAvgC,EAAA+I,EAAAiE,GAEAA,EAAAzM,UAAAgkC,eAAA,WAEA,GAAAoJ,GAAA1xC,KAAAmJ,WAAA+yB,cAAAl8B,KAAAgR,UAEAhR,MAAA0E,QAAA4jC,eAAA5pC,KAAAsB,MAEAA,KAAA2xC,UAAAxmC,SAAAC,gBAAAC,GAAA,SACArL,KAAA2xC,UAAArmC,aAAA,QAAAtL,KAAAgR,UAAAxF,EAAA,MACAxL,KAAA2xC,UAAArmC,aAAA,SAAAtL,KAAAgR,UAAA9O,EAAA,MACAlC,KAAA2xC,UAAArmC,aAAA,wCACAtL,KAAA2xC,UAAA7C,eAAA,sCAAA4C,GACA1xC,KAAA4M,cAAA5M,KAAA2xC,UACA3xC,KAAA6P,aAAAjE,YAAA5L,KAAA2xC,WACA3xC,KAAAoH,KAAA8hC,IACAlpC,KAAA6P,aAAAvE,aAAA,KAAAtL,KAAAoH,KAAA8hC,IAEAlpC,KAAAoH,KAAAghB,IACApoB,KAAA6P,aAAAvE,aAAA,QAAAtL,KAAAoH,KAAAghB,KAKArX,EAAAzM,UAAA8gC,YAAA,SAAAuH,GAEA,QADA3sC,KAAA0E,QAAA0gC,YAAA1mC,KAAAsB,KAAA2sC,GAGA,WADA3sC,MAAA2lC,MAGA3lC,MAAAgoC,QACAhoC,KAAA6lC,OAEA7lC,KAAAW,aACAX,KAAAW,YAAA,IAIAoQ,EAAAzM,UAAAwO,QAAA,WACA9S,KAAA0E,QAAAoO,QAAApU,KAAAsB,KAAA0E,SACA1E,KAAA2xC,UAAA,MAKA5tC,EAAA+I,EAAAqE,GAEAA,EAAA7M,UAAAgkC,eAAA,WACAtoC,KAAA0E,QAAA4jC,eAAA5pC,KAAAsB,KAEA,IAAAqK,GAAAc,SAAAC,gBAAAC,GAAA,OAIAhB,GAAAiB,aAAA,QAAAtL,KAAAoH,KAAAL,IACAsD,EAAAiB,aAAA,SAAAtL,KAAAoH,KAAAqmB,IACApjB,EAAAiB,aAAA,OAAAtL,KAAAoH,KAAAJ,IACAhH,KAAA6P,aAAAjE,YAAAvB,GACArK,KAAA2xC,UAAAtnC,EACArK,KAAAoH,KAAA8hC,IACAlpC,KAAA6P,aAAAvE,aAAA,KAAAtL,KAAAoH,KAAA8hC,IAEAlpC,KAAAoH,KAAAghB,IACApoB,KAAA6P,aAAAvE,aAAA,QAAAtL,KAAAoH,KAAAghB,KAIAjX,EAAA7M,UAAA8gC,YAAAr0B,EAAAzM,UAAA8gC,YACAj0B,EAAA7M,UAAAwO,QAAA/B,EAAAzM,UAAAwO,OAEA,IAAAtB,IAAA,WAQA,QAAAogC,GAAAC,GAGA,IAFA,GAAAtwC,GAAA,EACAuwC,EAAAD,EAAA/wC,OACAS,EAAAC,GACAuwC,EAAAxwC,GAAAgQ,YAAAugC,IACAC,EAAArwC,OAAAH,EAAA,GACAA,GAAA,EACAC,GAAA,EACAswC,EAAAE,UACAC,KAGA1wC,GAAA,EAIA,QAAA6Q,GAAA/S,EAAA6S,GACA,IAAA7S,EACA,WAGA,KADA,GAAAkC,GAAA,EACAA,EAAAC,GAAA,CACA,GAAAuwC,EAAAxwC,GAAAuE,MAAAzG,GAAA,OAAA0yC,EAAAxwC,GAAAuE,KACA,MAAAisC,GAAAxwC,GAAAgQ,SAEAhQ,IAAA,EAEA,GAAAuwC,GAAA,GAAAI,GAGA,OAFAC,GAAAL,EAAAzyC,GACAyyC,EAAAM,QAAA/yC,EAAA6S,GACA4/B,EAGA,QAAAO,KACAC,GAAA,EACAC,IAGA,QAAAN,KAEA,KADAK,GAAA,KAEAE,GAAA,GAIA,QAAAL,GAAAL,EAAAzyC,GACAyyC,EAAArV,iBAAA,UAAAmV,GACAE,EAAArV,iBAAA,UAAA4V,GACAP,EAAArV,iBAAA,QAAAwV,GACAF,EAAA5wC,MAAmC2E,KAAAzG,EAAAkS,UAAAugC,IACnCtwC,GAAA,EAGA,QAAAmR,GAAAzO,GACA,GAAA4tC,GAAA,GAAAI,GAGA,OAFAC,GAAAL,EAAA,MACAA,EAAAW,UAAAvuC,GACA4tC,EAIA,QAAAngC,GAAAzS,EAAAqS,GACA,GAAAhQ,EACA,KAAAA,EAAA,EAAgBA,EAAAC,EAAMD,GAAA,EACtBwwC,EAAAxwC,GAAAgQ,UAAAI,SAAAzS,EAAAqS,GAIA,QAAAM,GAAA3S,EAAAqS,GACA,GAAAhQ,EACA,KAAAA,EAAA,EAAgBA,EAAAC,EAAMD,GAAA,EACtBwwC,EAAAxwC,GAAAgQ,UAAAM,aAAA3S,EAAAqS,GAIA,QAAAD,GAAAC,GACA,GAAAhQ,EACA,KAAAA,EAAA,EAAgBA,EAAAC,EAAMD,GAAA,EACtBwwC,EAAAxwC,GAAAgQ,UAAAD,KAAAC,GAIA,QAAAQ,GAAAH,EAAAL,GACAgZ,EAAA7M,KAAA4M,KACA,IAAA/oB,EACA,KAAAA,EAAA,EAAgBA,EAAAC,EAAMD,GAAA,EACtBwwC,EAAAxwC,GAAAgQ,UAAAQ,UAAAH,EAAAL,GAIA,QAAAmhC,GAAAC,GAEA,GACApxC,GADAqxC,EAAAD,EAAApoB,CAEA,KAAAhpB,EAAA,EAAgBA,EAAAC,EAAMD,GAAA,EACtBwwC,EAAAxwC,GAAAgQ,UAAAshC,YAAAD,EAEAroB,GAAAooB,EACAH,GACA7zC,EAAAyiB,sBAAAsxB,GAIA,QAAAI,GAAAH,GACApoB,EAAAooB,EACAh0C,EAAAyiB,sBAAAsxB,GAGA,QAAAjhC,GAAAF,GACA,GAAAhQ,EACA,KAAAA,EAAA,EAAgBA,EAAAC,EAAMD,GAAA,EACtBwwC,EAAAxwC,GAAAgQ,UAAAE,MAAAF,GAIA,QAAAgB,GAAAX,EAAAY,EAAAjB,GACA,GAAAhQ,EACA,KAAAA,EAAA,EAAgBA,EAAAC,EAAMD,GAAA,EACtBwwC,EAAAxwC,GAAAgQ,UAAAgB,YAAAX,EAAAY,EAAAjB,GAIA,QAAAO,GAAAP,GACA,GAAAhQ,EACA,KAAAA,EAAA,EAAgBA,EAAAC,EAAMD,GAAA,EACtBwwC,EAAAxwC,GAAAgQ,UAAAO,KAAAP,GAIA,QAAAG,GAAAH,GACA,GAAAhQ,EACA,KAAAA,EAAA,EAAgBA,EAAAC,EAAMD,GAAA,EACtBwwC,EAAAxwC,GAAAgQ,UAAAG,YAAAH,GAIA,QAAAuB,GAAAvB,GACA,GAAAhQ,EACA,KAAAA,EAAAC,EAAA,EAAsBD,GAAA,EAAKA,GAAA,EAC3BwwC,EAAAxwC,GAAAgQ,UAAAuB,QAAAvB,GAIA,QAAAS,GAAAE,EAAAD,EAAAE,GACA,GACA5Q,GADAwxC,EAAA5nC,SAAA6nC,uBAAA,aACAxxC,EAAAuxC,EAAAtxC,MACA,KAAAF,EAAA,EAAgBA,EAAAC,EAAMD,GAAA,EACtB4Q,GACA4gC,EAAAxxC,GAAA+J,aAAA,eAAA6G,GAEAC,EAAA2gC,EAAAxxC,GAAA2Q,EAEA,IAAAD,GAAA,IAAAzQ,EAAA,CACA2Q,IACAA,EAAA,MAEA,IAAAmX,GAAAne,SAAA8nC,qBAAA,UACA3pB,GAAAT,UAAA,EACA,IAAAqqB,GAAA/nC,SAAApH,cAAA,MACAmvC,GAAA5zC,MAAAsc,MAAA,OACAs3B,EAAA5zC,MAAAmlC,OAAA,OACAyO,EAAA5nC,aAAA,eAAA6G,GACAmX,EAAA1d,YAAAsnC,GACA9gC,EAAA8gC,EAAAhhC,IAIA,QAAAG,KACA,GAAA9Q,EACA,KAAAA,EAAA,EAAgBA,EAAAC,EAAMD,GAAA,EACtBwwC,EAAAxwC,GAAAgQ,UAAAc,SAIA,QAAAC,KACA3T,EAAAyiB,sBAAA0xB,GAGA,QAAAP,KACAC,IACAA,GAAA,EACA7zC,EAAAyiB,sBAAA0xB,IA5LA,GAAAzqB,MACA0pB,KACAxnB,EAAA,EACA/oB,EAAA,EACAgxC,GAAA,EACAF,EAAA,CA6MA,OAhBA5wB,YAAApP,EAAA,GAEA+V,EAAAjW,oBACAiW,EAAA1V,gBACA0V,EAAA1W,WACA0W,EAAAxW,eACAwW,EAAA/W,OACA+W,EAAAtW,YACAsW,EAAA5W,QACA4W,EAAAvW,OACAuW,EAAA3W,cACA2W,EAAArW,mBACAqW,EAAAhW,SACAgW,EAAA/V,QACA+V,EAAA9V,cACA8V,EAAAvV,UACAuV,KAGA6pB,GAAA,WACAlyC,KAAAkB,QACAlB,KAAAwT,KAAA,GACAxT,KAAAmK,KAAA,GACAnK,KAAAmzC,UAAA,EACAnzC,KAAAqlC,aAAA,EACArlC,KAAAozC,gBAAA,EACApzC,KAAAY,YAAA,EACAZ,KAAA4Q,UAAA,EACA5Q,KAAAqzC,UAAA,EACArzC,KAAAszC,UAAA,EACAtzC,KAAAuzC,cAAA,EACAvzC,KAAA4J,gBAAA,EACA5J,KAAAwzC,UAAA,EACAxzC,KAAAyzC,qBAAA,EACAzzC,KAAAkS,iBACAlS,KAAAiJ,UACAjJ,KAAA0nB,UACA1nB,KAAAgyC,UAAA,EACAhyC,KAAA0zC,UAAA,EACA1zC,KAAA2zC,MAAA,EACA3zC,KAAAmS,SAAA,KACAnS,KAAA4zC,YAAA/xC,EAAA,IACA7B,KAAA6zC,UAAA,MACA7zC,KAAAm8B,WAAA,GACAn8B,KAAA8zC,cAAA,EACA9zC,KAAA+zC,WAAA,EACA/zC,KAAA0S,mBACA1S,KAAAgkB,YACAhkB,KAAAg0C,gBAAA,EACAh0C,KAAAi0C,OAAA,EACAj0C,KAAA+jC,iBAAAnlC,IAGAszC,IAAA5tC,UAAAmuC,UAAA,SAAAvuC,GACA,GAAAgwC,GAAAl0C,IACAkE,GAAAiwC,UACAn0C,KAAAm0C,QAAAjwC,EAAAiwC,UAEAjwC,EAAAwgC,SAAAxgC,EAAAkoC,aACApsC,KAAA0kC,QAAAxgC,EAAAwgC,SAAAxgC,EAAAkoC,UAEA,IAAAgI,GAAAlwC,EAAAkwC,SAAAlwC,EAAAkwC,SAAAlwC,EAAAiO,SAAAjO,EAAAiO,SAAA,KACA,QAAAiiC,GACA,aACAp0C,KAAAmS,SAAA,GAAAkiC,gBAAAr0C,KAAAkE,EAAAowC,iBACA,MACA,WACAt0C,KAAAmS,SAAA,GAAArJ,GAAA9I,KAAAkE,EAAAowC,iBACA,MACA,cACA,WACA,QACAt0C,KAAAmS,SAAA,GAAAoiC,gBAAAv0C,KAAAkE,EAAAowC,kBAkBA,GAfAt0C,KAAAmS,SAAA0xB,oBAAA7jC,KAAA+jC,kBACA/jC,KAAAo0C,WAEA,KAAAlwC,EAAAyvC,MAAA,OAAAzvC,EAAAyvC,QACK,IAAAzvC,EAAAyvC,KACL3zC,KAAA2zC,MAAA,GACK,IAAAzvC,EAAAyvC,KACL3zC,KAAA2zC,MAAA,EAEA3zC,KAAA2zC,KAAAa,SAAAtwC,EAAAyvC,OAEA3zC,KAAA0zC,WAAA,YAAAxvC,OAAAwvC,SACA1zC,KAAAwT,KAAAtP,EAAAsP,KAAAtP,EAAAsP,KAAA,GACAxT,KAAAyzC,sBAAA,aAAAvvC,OAAAuwC,UACAz0C,KAAA00C,kBAAAxwC,EAAAa,eAAA,qBAAAb,EAAAwwC,iBACAxwC,EAAAgO,cACAgiC,EAAA3P,gBAAArgC,EAAAgO,mBACK,IAAAhO,EAAAiG,KAAA,CACL,QAAAjG,EAAAiG,KAAAu3B,QAAA,KACA,KAAAx9B,EAAAiG,KAAAu3B,QAAA,OACAx9B,EAAAiG,MAAA,KAEAjG,EAAAiG,MAAA,YAGA,IAAAwqC,GAAA,GAAAC,iBACA,GAAA1wC,EAAAiG,KAAA0qC,YAAA,MACA70C,KAAAmK,KAAAjG,EAAAiG,KAAAu3B,OAAA,EAAAx9B,EAAAiG,KAAA0qC,YAAA,SAEA70C,KAAAmK,KAAAjG,EAAAiG,KAAAu3B,OAAA,EAAAx9B,EAAAiG,KAAA0qC,YAAA,QAEA70C,KAAAm8B,WAAAj4B,EAAAi4B,WACAn8B,KAAA80C,SAAA5wC,EAAAiG,KAAAu3B,OAAAx9B,EAAAiG,KAAA0qC,YAAA,QACA70C,KAAA80C,SAAA90C,KAAA80C,SAAApT,OAAA,EAAA1hC,KAAA80C,SAAAD,YAAA,UACAF,EAAAI,KAAA,MAAA7wC,EAAAiG,MAAA,GACAwqC,EAAAK,OACAL,EAAAM,mBAAA,WACA,MAAAN,EAAAjhC,WACA,QAAAihC,EAAAO,OACAhB,EAAA3P,gBAAA3xB,KAAAC,MAAA8hC,EAAAQ,mBAEA,KACA,GAAAC,GAAAxiC,KAAAC,MAAA8hC,EAAAQ,aACAjB,GAAA3P,gBAAA6Q,GACqB,MAAAC,QAQrBnD,GAAA5tC,UAAA8tC,QAAA,SAAA1N,EAAAxyB,GACA,GAAAhO,IACAwgC,UACAxyB,gBAAA,gBAAAA,KAAAU,KAAAC,MAAAX,GAAA,MAEAojC,EAAA5Q,EAAA6Q,UAEArxC,GAAAiG,KAAAmrC,EAAAE,aAAA,uBAAAF,EAAAE,aAAA,uBAAA5jC,MAAA0jC,EAAAE,aAAA,gBAAAF,EAAAE,aAAA,gBAAA5jC,MAAA0jC,EAAAE,aAAA,WAAAF,EAAAE,aAAA,WAAA5jC,MAAA,GACA1N,EAAAkwC,SAAAkB,EAAAE,aAAA,kBAAAF,EAAAE,aAAA,kBAAA5jC,MAAA0jC,EAAAE,aAAA,gBAAAF,EAAAE,aAAA,gBAAA5jC,MAAA0jC,EAAAE,aAAA,WAAAF,EAAAE,aAAA,WAAA5jC,MAAA0jC,EAAAE,aAAA,oBAAAF,EAAAE,aAAA,oBAAA5jC,MAAA0jC,EAAAE,aAAA,eAAAF,EAAAE,aAAA,eAAA5jC,MAAA,QAEA,IAAA+hC,GAAA2B,EAAAE,aAAA,kBAAAF,EAAAE,aAAA,kBAAA5jC,MAAA0jC,EAAAE,aAAA,gBAAAF,EAAAE,aAAA,gBAAA5jC,MAAA0jC,EAAAE,aAAA,WAAAF,EAAAE,aAAA,WAAA5jC,MAAA,EACA,MAAA+hC,IAEAzvC,EAAAyvC,KADK,UAAAA,IAEA,SAAAA,GAGLa,SAAAb,IAEA,IAAAD,GAAA4B,EAAAE,aAAA,sBAAAF,EAAAE,aAAA,sBAAA5jC,MAAA0jC,EAAAE,aAAA,oBAAAF,EAAAE,aAAA,oBAAA5jC,OAAA0jC,EAAAE,aAAA,gBAAAF,EAAAE,aAAA,eAAA5jC,KACA1N,GAAAwvC,SAAA,UAAAA,EAEAxvC,EAAAsP,KAAA8hC,EAAAE,aAAA,aAAAF,EAAAE,aAAA,aAAA5jC,MAAA0jC,EAAAE,aAAA,gBAAAF,EAAAE,aAAA,gBAAA5jC,MAAA0jC,EAAAE,aAAA,WAAAF,EAAAE,aAAA,WAAA5jC,MAAA,GAGA,WAFA0jC,EAAAE,aAAA,uBAAAF,EAAAE,aAAA,uBAAA5jC,MAAA0jC,EAAAE,aAAA,qBAAAF,EAAAE,aAAA,qBAAA5jC,MAAA0jC,EAAAE,aAAA,gBAAAF,EAAAE,aAAA,gBAAA5jC,MAAA,MAGA1N,EAAAuwC,WAAA,GAEAz0C,KAAAyyC,UAAAvuC,IAGAguC,GAAA5tC,UAAAq/B,cAAA,SAAAv8B,GACAA,EAAAkF,GAAAtM,KAAAkS,cAAA5F,KACAtM,KAAAkS,cAAA5F,GAAAlF,EAAAkF,GACAtM,KAAAY,YAAA5B,KAAA2D,MAAAyE,EAAAkF,GAAAtM,KAAAkS,cAAA4wB,IACA9iC,KAAAkS,cAAAujC,GAAAz1C,KAAAY,YAEA,IACAW,GAEAuG,EAHAmB,EAAAjJ,KAAAkS,cAAAjJ,OACAzH,EAAAyH,EAAAxH,OACAmiC,EAAAx8B,EAAA6B,OACAmB,EAAAw5B,EAAAniC,MACA,KAAAqG,EAAA,EAAYA,EAAAsC,EAAOtC,GAAA,EAEnB,IADAvG,EAAA,EACAA,EAAAC,GAAA,CACA,GAAAyH,EAAA1H,GAAAkgB,IAAAmiB,EAAA97B,GAAA2Z,GAAA,CACAxY,EAAA1H,GAAAqiC,EAAA97B,EACA,OAEAvG,GAAA,EAOA,IAJA6F,EAAAtF,OAAAsF,EAAAqiB,SACAzpB,KAAAmS,SAAAhJ,WAAA6c,YAAAwF,SAAApkB,EAAAtF,OACA9B,KAAAmS,SAAAhJ,WAAA6c,YAAAkF,SAAA9jB,EAAAqiB,MAAAzpB,KAAAmS,SAAAhJ,WAAAsB,OAEArD,EAAAsgB,OAEA,IADAlmB,EAAA4F,EAAAsgB,OAAAjmB,OACAF,EAAA,EAAkBA,EAAAC,EAASD,GAAA,EAC3BvB,KAAAkS,cAAAwV,OAAAvmB,KAAAiG,EAAAsgB,OAAAnmB,GAKAvB,MAAAkS,cAAAxJ,YAAA,EACAod,GAAAuB,aAAArnB,KAAAkS,cAAAlS,KAAAmS,SAAAhJ,WAAA6c,aACAhmB,KAAAmS,SAAAwxB,cAAAv8B,EAAA6B,QACAqK,IACAA,GAAA0xB,gBAAAhlC,MAEAA,KAAAmS,SAAAizB,YAAA,MACAplC,KAAA01C,mBAGAxD,GAAA5tC,UAAAoxC,gBAAA,WACA,GAAA1xB,GAAAhkB,KAAAkS,cAAA8R,QACA,KAAAA,GAAA,IAAAA,EAAAviB,SAAAzB,KAAA00C,iBAGA,MAFA10C,MAAA21C,QAAA,mBACA31C,KAAA8zC,cAAA9zC,KAAAkS,cAAAujC,GAGA,IAAA3c,GAAA9U,EAAA4xB,OACA51C,MAAA8zC,cAAAhb,EAAAiW,KAAA/uC,KAAA4Q,SACA,IAAA+jC,GAAA,GAAAC,gBACAV,EAAAl0C,KACA61C,EAAA71C,KAAAmK,KAAAnK,KAAA80C,SAAA,IAAA90C,KAAA+zC,WAAA,OACA/zC,MAAA+zC,YAAA,EACAY,EAAAI,KAAA,MAAAc,GAAA,GACAlB,EAAAK,OACAL,EAAAM,mBAAA,WACA,MAAAN,EAAAjhC,WACA,QAAAihC,EAAAO,OACAhB,EAAAvQ,cAAA/wB,KAAAC,MAAA8hC,EAAAQ,mBAEA,KACA,GAAAC,GAAAxiC,KAAAC,MAAA8hC,EAAAQ,aACAjB,GAAAvQ,cAAAyR,GACiB,MAAAC,OAOjBnD,GAAA5tC,UAAAwxC,aAAA,WACA91C,KAAAkS,cAAA8R,WAEAhkB,KAAA8zC,cAAA9zC,KAAAkS,cAAAujC,IAEAz1C,KAAA01C,mBAGAxD,GAAA5tC,UAAAigC,gBAAA,SAAAC,GACA,GAAAuR,GAAA/1C,IACAA,MAAAmS,UAAAnS,KAAAmS,SAAAtI,YAMA7J,KAAAkS,cAAAsyB,EACAxkC,KAAAY,YAAA5B,KAAA2D,MAAA3C,KAAAkS,cAAA5F,GAAAtM,KAAAkS,cAAA4wB,IACA9iC,KAAAkS,cAAAujC,GAAAz1C,KAAAY,YACAZ,KAAAmS,SAAAoyB,gBAAAC,GACAA,EAAA9c,SACA8c,EAAA9c,WAEA8c,EAAAze,QACAye,EAAA9c,OAAA8c,EAAA9c,OAAAmL,OAAA2R,EAAAze,OACAye,EAAAze,MAAA,MAEA/lB,KAAAmS,SAAA2zB,wBAAAtB,EAAA9c,QAEA1nB,KAAAiJ,OAAAjJ,KAAAkS,cAAAjJ,OACAjJ,KAAA0nB,OAAA1nB,KAAAkS,cAAAwV,OACA1nB,KAAA4Q,UAAA5Q,KAAAkS,cAAA0yB,GACA5kC,KAAAW,WAAA3B,KAAAC,MAAAe,KAAAkS,cAAA4wB,IACA9iC,KAAAqzC,UAAArzC,KAAAkS,cAAA0yB,GAAA,IACA5kC,KAAA21C,QAAA,gBACA31C,KAAAg2C,eAAA,GAAAna,IACA77B,KAAAg2C,eAAAjZ,cAAA/8B,KAAAm8B,YACAn8B,KAAAg2C,eAAAlZ,QAAA98B,KAAAmK,MACAnK,KAAAg2C,eAAArZ,WAAA6H,EAAA9c,OAAA,SAAA2tB,GACAA,GACAU,EAAAJ,QAAA,mBAGA31C,KAAA81C,eACA91C,KAAAi2C,oBACAj2C,KAAAmS,SAAAhJ,WAAA6c,YACAhmB,KAAAk2C,sBAEApwB,GAAAuB,aAAArnB,KAAAkS,cAAAlS,KAAAmS,SAAAhJ,WAAA6c,aACAhmB,KAAAm2C,iBAIAjE,GAAA5tC,UAAA4xC,mBAAA,WACA,QAAAE,KACAp2C,KAAAmS,SAAAhJ,WAAA6c,YAAA2D,QACA7D,GAAAuB,aAAArnB,KAAAkS,cAAAlS,KAAAmS,SAAAhJ,WAAA6c,aAEAhmB,KAAAm2C,eAEAz0B,WAAA00B,EAAA/0C,KAAArB,MAAA,IAIA,kBACAo2C,EAAA/0C,KAAArB,YAIAkyC,GAAA5tC,UAAAggC,kBAAA,WACAtkC,KAAA4J,iBAAA,GAGAsoC,GAAA5tC,UAAA+xC,cAAA,WACAr2C,KAAA4J,kBACA5J,KAAAm2C,eAGAjE,GAAA5tC,UAAA6xC,YAAA,WACA,IAAAn2C,KAAA4J,kBACA0J,IACAA,GAAA0xB,gBAAAhlC,MAEAA,KAAAmS,SAAA6xB,YACAtiB,WAAA,WACA1hB,KAAA21C,QAAA,cACSt0C,KAAArB,MAAA,GACTA,KAAAmzC,UAAA,EACAnzC,KAAAs2C,YACAt2C,KAAA0zC,UACA1zC,KAAAsR,SAKA4gC,GAAA5tC,UAAA+N,OAAA,WACArS,KAAAmS,SAAA2yB,uBAGAoN,GAAA5tC,UAAAiyC,YAAA,SAAAz3C,GACAkB,KAAA0S,kBAAA5T,GAGAozC,GAAA5tC,UAAAgyC,UAAA,WACAt2C,KAAA0S,gBACA1S,KAAAqlC,aAAArlC,KAAAozC,gBAEApzC,KAAAqlC,aAAArmC,KAAA2D,MAAA3C,KAAAozC,iBAGApzC,KAAA8zC,gBAAA9zC,KAAAY,aAAAZ,KAAAqlC,aAAArlC,KAAA8zC,gBACA9zC,KAAAqlC,aAAArlC,KAAA8zC,eAEA9zC,KAAA21C,QAAA,cACA31C,KAAAolC,eAGA8M,GAAA5tC,UAAA8gC,YAAA,YACA,IAAAplC,KAAAmzC,UAIAnzC,KAAAmS,SAAAizB,YAAAplC,KAAAqlC,aAAArlC,KAAAW,aAGAuxC,GAAA5tC,UAAAgN,KAAA,SAAAkC,GACAA,GAAAxT,KAAAwT,UAGA,IAAAxT,KAAAgyC,WACAhyC,KAAAgyC,UAAA,EACAhyC,KAAAi0C,QACAj0C,KAAAi0C,OAAA,EACAj0C,KAAA21C,QAAA,cAKAzD,GAAA5tC,UAAAmN,MAAA,SAAA+B,GACAA,GAAAxT,KAAAwT,UAGA,IAAAxT,KAAAgyC,WACAhyC,KAAAgyC,UAAA,EACAhyC,KAAAg0C,iBACAh0C,KAAAi0C,OAAA,EACAj0C,KAAA21C,QAAA,YAKAzD,GAAA5tC,UAAAoN,YAAA,SAAA8B,GACAA,GAAAxT,KAAAwT,WAGA,IAAAxT,KAAAgyC,SACAhyC,KAAAsR,OAEAtR,KAAAyR,UAIAygC,GAAA5tC,UAAAwN,KAAA,SAAA0B,GACAA,GAAAxT,KAAAwT,UAGAxT,KAAAyR,QACAzR,KAAAqlC,aAAArlC,KAAAozC,gBAAA,EACApzC,KAAAwzC,UAAA,EACAxzC,KAAAs2C,cAGApE,GAAA5tC,UAAAiO,YAAA,SAAAX,EAAAY,EAAAgB,GACAA,GAAAxT,KAAAwT,UAGAhB,EACAxS,KAAAw2C,wBAAA5kC,GAEA5R,KAAAw2C,wBAAA5kC,EAAA5R,KAAAy2C,eAEAz2C,KAAAyR,UAGAygC,GAAA5tC,UAAAoyC,YAAA,SAAA9kC,EAAAY,EAAAgB,GACAxT,KAAAuS,YAAAX,EAAAY,EAAAgB,GACAxT,KAAAsR,QAGA4gC,GAAA5tC,UAAAuuC,YAAA,SAAAjhC,GACA,GAAA5R,KAAAg0C,eAMA,MALAh0C,MAAAg0C,gBAAA,EACAh0C,KAAA22C,cAAA32C,KAAAgkB,SAAA4xB,cACA51C,KAAAgyC,UACAhyC,KAAAsR,SAIA,IAAAtR,KAAAgyC,WAAA,IAAAhyC,KAAAmzC,UAGAnzC,KAAAw2C,wBAAAx2C,KAAAozC,gBAAAxhC,EAAA5R,KAAAy2C,gBAGAvE,GAAA5tC,UAAAsyC,gBAAA,SAAA9yB,GACA9jB,KAAAw2C,wBAAAx2C,KAAAY,YAAAkjB,IAGAouB,GAAA5tC,UAAAyN,UAAA,SAAAH,EAAA4B,GACAA,GAAAxT,KAAAwT,SAGAxT,KAAAw2C,wBAAAx2C,KAAAozC,gBAAAxhC,IAGAsgC,GAAA5tC,UAAAqyC,cAAA,SAAA18B,GACAja,KAAAwzC,UAAA,EACAv5B,EAAA,GAAAA,EAAA,IACAja,KAAAy2C,cAAA,IACAz2C,KAAAszC,UAAA,EACAtzC,KAAA2R,UAAA3R,KAAAszC,WAEAtzC,KAAA6R,cAAA,IAGA7R,KAAAY,YAAAqZ,EAAA,GAAAA,EAAA,GACAja,KAAAW,WAAAsZ,EAAA,GACAja,KAAAw2C,wBAAAx2C,KAAAY,YAAA,MACKqZ,EAAA,GAAAA,EAAA,KACLja,KAAAy2C,cAAA,IACAz2C,KAAAszC,UAAA,EACAtzC,KAAA2R,UAAA3R,KAAAszC,WAEAtzC,KAAA6R,aAAA,IAGA7R,KAAAY,YAAAqZ,EAAA,GAAAA,EAAA,GACAja,KAAAW,WAAAsZ,EAAA,GACAja,KAAAw2C,wBAAA,IAEAx2C,KAAA21C,QAAA,iBAEAzD,GAAA5tC,UAAAuyC,WAAA,SAAAlzC,EAAAmzC,GACA,GAAAC,IAAA,CACA/2C,MAAAgyC,WACAhyC,KAAAozC,gBAAApzC,KAAAW,WAAAgD,EACAozC,EAAApzC,EACS3D,KAAAozC,gBAAApzC,KAAAW,WAAAm2C,IACTC,EAAAD,EAAAnzC,EAAA,MAIA3D,KAAAW,WAAAgD,EACA3D,KAAAY,YAAAk2C,EAAAnzC,GACA,IAAAozC,GACA/2C,KAAAuS,YAAAwkC,GAAA,IAIA7E,GAAA5tC,UAAA0yC,aAAA,SAAA/8B,EAAAg9B,GACA,mBAAAh9B,GAAA,IACA,GAAA1Y,GAAAC,EAAAyY,EAAAxY,MACA,KAAAF,EAAA,EAAgBA,EAAAC,EAAMD,GAAA,EACtBvB,KAAAgkB,SAAA7iB,KAAA8Y,EAAA1Y,QAGAvB,MAAAgkB,SAAA7iB,KAAA8Y,EAEAg9B,IACAj3C,KAAA22C,cAAA32C,KAAAgkB,SAAA4xB,SAEA51C,KAAAgyC,UACAhyC,KAAAsR,QAIA4gC,GAAA5tC,UAAA4yC,cAAA,SAAAD,GACAj3C,KAAAgkB,SAAAviB,OAAA,EACAzB,KAAAgkB,SAAA7iB,MAAAnB,KAAAkS,cAAA4wB,GAAA9iC,KAAA4Q,UAAA5R,KAAA2D,MAAA3C,KAAAkS,cAAA5F,GAAAtM,KAAAkS,cAAA4wB,GAAA9iC,KAAAkS,cAAA4wB,GAAA9iC,KAAA4Q,aACAqmC,GACAj3C,KAAA22C,cAAA32C,KAAAgkB,SAAA4xB,UAGA1D,GAAA5tC,UAAA6yC,cAAA,WACAn3C,KAAAgkB,SAAAviB,SACAzB,KAAAg0C,gBAAA,IAIA9B,GAAA5tC,UAAA8yC,OAAA,SAAA5jC,GACAA,GAAAxT,KAAAwT,SAGAxT,KAAAmS,SAAAW,WAGAo/B,GAAA5tC,UAAAwO,QAAA,SAAAU,GACAA,GAAAxT,KAAAwT,SAAAxT,KAAAmS,UAAAnS,KAAAmS,SAAAtI,YAGA7J,KAAAmS,SAAAW,UACA9S,KAAA21C,QAAA,WACA31C,KAAAkB,KAAA,KACAlB,KAAAq3C,aAAAr3C,KAAAs3C,eAAAt3C,KAAAu3C,WAAAv3C,KAAAw3C,eAAAx3C,KAAAy3C,UAAA,OAGAvF,GAAA5tC,UAAAkyC,wBAAA,SAAA5kC,GAGA,GAFA5R,KAAAozC,gBAAAxhC,EAEA5R,KAAAozC,iBAAApzC,KAAAY,YAAA,CAEA,GADAZ,KAAAm3C,iBACA,IAAAn3C,KAAA2zC,KAKA,MAJA3zC,MAAAozC,gBAAApzC,KAAAY,YAAA,IACAZ,KAAAs2C,YACAt2C,KAAAyR,YACAzR,MAAA21C,QAAA,WAKA,IAFA31C,KAAA21C,QAAA,gBACA31C,KAAAwzC,WAAA,GACA,IAAAxzC,KAAA2zC,MAAA3zC,KAAAwzC,WAAAxzC,KAAA2zC,MAAA3zC,KAAAg0C,eAKA,MAJAh0C,MAAAozC,gBAAApzC,KAAAY,YAAA,IACAZ,KAAAs2C,YACAt2C,KAAAyR,YACAzR,MAAA21C,QAAA,WAGA31C,MAAAozC,gBAAApzC,KAAAozC,gBAAApzC,KAAAY,gBAGK,IAAAZ,KAAAozC,gBAAA,EAML,MALApzC,MAAAm3C,gBACAn3C,KAAAwzC,WAAA,EACAxzC,KAAAwzC,UAAA,IACAxzC,KAAAwzC,UAAA,IAEA,IAAAxzC,KAAA2zC,MAAA3zC,KAAAg0C,gBACAh0C,KAAAozC,gBAAA,EACApzC,KAAAs2C,YACAt2C,KAAAyR,YACAzR,MAAA21C,QAAA,cAGA31C,KAAA21C,QAAA,gBACA31C,KAAAozC,iBAAApzC,KAAAY,YAAAZ,KAAAozC,iBAAApzC,KAAAY,gBACAZ,MAAAs2C,YAKAt2C,MAAAs2C,aAGApE,GAAA5tC,UAAAqN,SAAA,SAAAzS,GACAc,KAAAszC,UAAAp0C,EACAc,KAAAi2C,qBAGA/D,GAAA5tC,UAAAuN,aAAA,SAAA3S,GACAc,KAAAuzC,cAAAr0C,EAAA,OACAc,KAAAi2C,qBAGA/D,GAAA5tC,UAAA2xC,kBAAA,WACAj2C,KAAAy2C,cAAAz2C,KAAAqzC,UAAArzC,KAAAszC,UAAAtzC,KAAAuzC,eAGArB,GAAA5tC,UAAAozC,QAAA,WACA,MAAA13C,MAAAmK,MAGA+nC,GAAA5tC,UAAA43B,cAAA,SAAAlrB,GACA,GAAA7G,GAAA,EACA,IAAAnK,KAAAm8B,WAAA,CACA,GAAAC,GAAAprB,EAAAxO,GACA,IAAA45B,EAAAC,QAAA,aACAD,IAAAhV,MAAA,SAEAjd,EAAAnK,KAAAm8B,WAAAC,MAEAjyB,GAAAnK,KAAAmK,KACAA,GAAA6G,EAAAsrB,EAAAtrB,EAAAsrB,EAAA,GACAnyB,GAAA6G,EAAAxO,CAEA,OAAA2H,IAGA+nC,GAAA5tC,UAAA2M,aAAA,SAAAwQ,GAEA,IADA,GAAAlgB,GAAA,EAAAC,EAAAxB,KAAA0nB,OAAAjmB,OACAF,EAAAC,GAAA,CACA,GAAAigB,GAAAzhB,KAAA0nB,OAAAnmB,GAAAkgB,GACA,MAAAzhB,MAAA0nB,OAAAnmB,EAEAA,IAAA,IAIA2wC,GAAA5tC,UAAAqhC,KAAA,WACA3lC,KAAAmS,SAAAwzB,QAGAuM,GAAA5tC,UAAAuhC,KAAA,WACA7lC,KAAAmS,SAAA0zB,QAGAqM,GAAA5tC,UAAAqzC,UAAA,WACA,MAAA33C,MAAA0nB,QAGAwqB,GAAA5tC,UAAAqxC,QAAA,SAAAniC,GACA,GAAAxT,KAAAkB,MAAAlB,KAAAkB,KAAAsS,GACA,OAAAA,GACA,iBACAxT,KAAA43C,aAAApkC,EAAA,GAAA7T,GAAA6T,EAAAxT,KAAAqlC,aAAArlC,KAAAY,YAAAZ,KAAAqzC,WACA,MACA,oBACArzC,KAAA43C,aAAApkC,EAAA,GAAAlT,GAAAkT,EAAAxT,KAAA2zC,KAAA3zC,KAAAwzC,UAAAxzC,KAAAqzC,WACA,MACA,gBACArzC,KAAA43C,aAAApkC,EAAA,GAAAnT,GAAAmT,EAAAxT,KAAAqzC,WACA,MACA,oBACArzC,KAAA43C,aAAApkC,EAAA,GAAA/S,GAAA+S,EAAAxT,KAAAW,WAAAX,KAAAY,aACA,MACA,eACAZ,KAAA43C,aAAApkC,EAAA,GAAA3S,GAAA2S,EAAAxT,MACA,MACA,SACAA,KAAA43C,aAAApkC,GAGA,eAAAA,GAAAxT,KAAAq3C,cACAr3C,KAAAq3C,aAAA34C,KAAAsB,KAAA,GAAAL,GAAA6T,EAAAxT,KAAAqlC,aAAArlC,KAAAY,YAAAZ,KAAAqzC,YAEA,iBAAA7/B,GAAAxT,KAAAs3C,gBACAt3C,KAAAs3C,eAAA54C,KAAAsB,KAAA,GAAAM,GAAAkT,EAAAxT,KAAA2zC,KAAA3zC,KAAAwzC,UAAAxzC,KAAAqzC,YAEA,aAAA7/B,GAAAxT,KAAAu3C,YACAv3C,KAAAu3C,WAAA74C,KAAAsB,KAAA,GAAAK,GAAAmT,EAAAxT,KAAAqzC,YAEA,iBAAA7/B,GAAAxT,KAAAw3C,gBACAx3C,KAAAw3C,eAAA94C,KAAAsB,KAAA,GAAAS,GAAA+S,EAAAxT,KAAAW,WAAAX,KAAAY,cAEA,YAAA4S,GAAAxT,KAAAy3C,WACAz3C,KAAAy3C,UAAA/4C,KAAAsB,KAAA,GAAAa,GAAA2S,EAAAxT,QAIAkyC,GAAA5tC,UAAAm4B,iBAAA17B,EACAmxC,GAAA5tC,UAAAlD,oBAAAE,EACA4wC,GAAA5tC,UAAAszC,aAAAj2C,CAEA,IAAAk2C,MAmHAA,IAAAvmC,OACAumC,GAAApmC,QACAomC,GAAAzmC,kBACAymC,GAAAnmC,eACAmmC,GAAAlmC,YACAkmC,GAAAhmC,gBACAgmC,GAAA/lC,QACA+lC,GAAA9lC,aACA8lC,GAAA7lC,oBACA6lC,GAAAzlC,qBACAylC,GAAAllC,iBACAklC,GAAAplC,wBACAolC,GAAAxlC,UACAwlC,GAAAvlC,SACAulC,GAAAtlC,eACAslC,GAAA/kC,WACA+kC,GAAA9kC,cACA8kC,GAAA3kC,aACA2kC,GAAAzkC,iBACAykC,GAAAC,aAAAvkC,GACAskC,GAAAE,QAAA,QAkBA,IAAA9lC,IAAA,mBACAC,GAAA,sBACAC,GAAA,EACA,IAAAF,GAAA,CACA,GAAA+lC,IAAA7sC,SAAA8nC,qBAAA,UACAzZ,GAAAwe,GAAAv2C,OAAA,EACAw2C,GAAAD,GAAAxe,MACAkD,IAAA,IAEAwb,GAAAD,GAAAvb,IAAAxe,QAAA,gBACA/L,IAnBA,SAAAgmC,GAEA,OADAC,GAAAF,GAAA9wB,MAAA,KACA7lB,EAAA,EAAuBA,EAAA62C,EAAA32C,OAAiBF,IAAA,CACxC,GAAA82C,GAAAD,EAAA72C,GAAA6lB,MAAA,IACA,IAAAkxB,mBAAAD,EAAA,KAAAF,EACA,MAAAG,oBAAAD,EAAA,MAcA,YAEA,GAAAzkC,IAAA2kC,YAAA9kC,GAAA,IACA,OAAAokC,ODWMjO,EACA,SAAUzrC,EAAQC,GE1mSxBD,EAAAC,QAAA,SACAo6C,EACAC,EACAC,EACAC,EACAC,GAEA,GAAAC,GACAC,EAAAN,QAGAv4C,QAAAu4C,GAAAO,OACA,YAAA94C,GAAA,aAAAA,IACA44C,EAAAL,EACAM,EAAAN,EAAAO,QAIA,IAAAj+B,GAAA,kBAAAg+B,GACAA,EAAAh+B,QACAg+B,CAGAL,KACA39B,EAAAuxB,OAAAoM,EAAApM,OACAvxB,EAAAk+B,gBAAAP,EAAAO,iBAIAL,IACA79B,EAAAm+B,SAAAN,EAGA,IAAAO,EA4BA,IA3BAN,GACAM,EAAA,SAAA/E,GAEAA,EACAA,GACAn0C,KAAAm5C,QAAAn5C,KAAAm5C,OAAAC,YACAp5C,KAAAgE,QAAAhE,KAAAgE,OAAAm1C,QAAAn5C,KAAAgE,OAAAm1C,OAAAC,WAEAjF,GAAA,mBAAAkF,uBACAlF,EAAAkF,qBAGAX,GACAA,EAAAh6C,KAAAsB,KAAAm0C,GAGAA,KAAAmF,uBACAnF,EAAAmF,sBAAAlZ,IAAAwY,IAKA99B,EAAAy+B,aAAAL,GACGR,IACHQ,EAAAR,GAGAQ,EAAA,CACA,GAAAM,GAAA1+B,EAAA0+B,WACAC,EAAAD,EACA1+B,EAAAuxB,OACAvxB,EAAA4+B,YACAF,GAOA1+B,EAAAuxB,OAAA,SAAAnqC,EAAAiyC,GAEA,MADA+E,GAAAx6C,KAAAy1C,GACAsF,EAAAv3C,EAAAiyC,IAPAr5B,EAAA4+B,aAAAD,KACA5mB,OAAA4mB,EAAAP,IACAA,GAUA,OACAL,WACAz6C,QAAA06C,EACAh+B","file":"docs/js/vendor.bcd91250bccff8dfc4e5.js","sourcesContent":["webpackJsonp([2],{\n\n/***/ 10:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;(function(root, factory) {\r\n    if (true) {\r\n        !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\r\n            return factory(root);\r\n        }.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n    } else if (typeof module === \"object\" && module.exports) {\r\n        module.exports = factory(root);\r\n    } else {\r\n        root.bodymovin = factory(root);\r\n    }\r\n}((window || {}), function(window) {\r\n    var svgNS = \"http://www.w3.org/2000/svg\";\r\n\r\nvar locationHref = '';\r\n\nvar subframeEnabled = true;\r\nvar expressionsPlugin;\r\nvar isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\r\nvar cachedColors = {};\r\nvar bm_rounder = Math.round;\r\nvar bm_rnd;\r\nvar bm_pow = Math.pow;\r\nvar bm_sqrt = Math.sqrt;\r\nvar bm_abs = Math.abs;\r\nvar bm_floor = Math.floor;\r\nvar bm_max = Math.max;\r\nvar bm_min = Math.min;\r\nvar blitter = 10;\r\n\r\nvar BMMath = {};\r\n(function(){\r\n    var propertyNames = Object.getOwnPropertyNames(Math);\r\n    var i, len = propertyNames.length;\r\n    for(i=0;i<len;i+=1){\r\n        BMMath[propertyNames[i]] = Math[propertyNames[i]];\r\n    }\r\n}());\r\n\r\nfunction ProjectInterface(){return {}};\r\n\r\nBMMath.random = Math.random;\r\nBMMath.abs = function(val){\r\n    var tOfVal = typeof val;\r\n    if(tOfVal === 'object' && val.length){\r\n        var absArr = Array.apply(null,{length:val.length});\r\n        var i, len = val.length;\r\n        for(i=0;i<len;i+=1){\r\n            absArr[i] = Math.abs(val[i]);\r\n        }\r\n        return absArr;\r\n    }\r\n    return Math.abs(val);\r\n\r\n}\r\nvar defaultCurveSegments = 150;\r\nvar degToRads = Math.PI/180;\r\nvar roundCorner = 0.5519;\r\n\r\nfunction roundValues(flag){\r\n    if(flag){\r\n        bm_rnd = Math.round;\r\n    }else{\r\n        bm_rnd = function(val){\r\n            return val;\r\n        };\r\n    }\r\n}\r\nroundValues(false);\r\n\r\nfunction roundTo2Decimals(val){\r\n    return Math.round(val*10000)/10000;\r\n}\r\n\r\nfunction roundTo3Decimals(val){\r\n    return Math.round(val*100)/100;\r\n}\r\n\r\nfunction styleDiv(element){\r\n    element.style.position = 'absolute';\r\n    element.style.top = 0;\r\n    element.style.left = 0;\r\n    element.style.display = 'block';\r\n    element.style.transformOrigin = element.style.webkitTransformOrigin = '0 0';\r\n    element.style.backfaceVisibility  = element.style.webkitBackfaceVisibility = 'visible';\r\n    element.style.transformStyle = element.style.webkitTransformStyle = element.style.mozTransformStyle = \"preserve-3d\";\r\n}\r\n\r\nfunction styleUnselectableDiv(element){\r\n    element.style.userSelect = 'none';\r\n    element.style.MozUserSelect = 'none';\r\n    element.style.webkitUserSelect = 'none';\r\n    element.style.oUserSelect = 'none';\r\n\r\n}\r\n\r\nfunction BMEnterFrameEvent(n,c,t,d){\r\n    this.type = n;\r\n    this.currentTime = c;\r\n    this.totalTime = t;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMCompleteEvent(n,d){\r\n    this.type = n;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMCompleteLoopEvent(n,c,t,d){\r\n    this.type = n;\r\n    this.currentLoop = c;\r\n    this.totalLoops = t;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMSegmentStartEvent(n,f,t){\r\n    this.type = n;\r\n    this.firstFrame = f;\r\n    this.totalFrames = t;\r\n}\r\n\r\nfunction BMDestroyEvent(n,t){\r\n    this.type = n;\r\n    this.target = t;\r\n}\r\n\r\nfunction _addEventListener(eventName, callback){\r\n\r\n    if (!this._cbs[eventName]){\r\n        this._cbs[eventName] = [];\r\n    }\r\n    this._cbs[eventName].push(callback);\r\n\r\n\treturn function() {\r\n\t\tthis.removeEventListener(eventName, callback);\r\n\t}.bind(this);\r\n}\r\n\r\nfunction _removeEventListener(eventName,callback){\r\n\r\n    if (!callback){\r\n        this._cbs[eventName] = null;\r\n    }else if(this._cbs[eventName]){\r\n        var i = 0, len = this._cbs[eventName].length;\r\n        while(i<len){\r\n            if(this._cbs[eventName][i] === callback){\r\n                this._cbs[eventName].splice(i,1);\r\n                i -=1;\r\n                len -= 1;\r\n            }\r\n            i += 1;\r\n        }\r\n        if(!this._cbs[eventName].length){\r\n            this._cbs[eventName] = null;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nfunction _triggerEvent(eventName, args){\r\n    if (this._cbs[eventName]) {\r\n        var len = this._cbs[eventName].length;\r\n        for (var i = 0; i < len; i++){\r\n            this._cbs[eventName][i](args);\r\n        }\r\n    }\r\n}\r\n\r\nfunction randomString(length, chars){\r\n    if(chars === undefined){\r\n        chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890';\r\n    }\r\n    var i;\r\n    var result = '';\r\n    for (i = length; i > 0; --i) result += chars[Math.round(Math.random() * (chars.length - 1))];\r\n    return result;\r\n}\r\n\r\nfunction HSVtoRGB(h, s, v) {\r\n    var r, g, b, i, f, p, q, t;\r\n    if (arguments.length === 1) {\r\n        s = h.s, v = h.v, h = h.h;\r\n    }\r\n    i = Math.floor(h * 6);\r\n    f = h * 6 - i;\r\n    p = v * (1 - s);\r\n    q = v * (1 - f * s);\r\n    t = v * (1 - (1 - f) * s);\r\n    switch (i % 6) {\r\n        case 0: r = v, g = t, b = p; break;\r\n        case 1: r = q, g = v, b = p; break;\r\n        case 2: r = p, g = v, b = t; break;\r\n        case 3: r = p, g = q, b = v; break;\r\n        case 4: r = t, g = p, b = v; break;\r\n        case 5: r = v, g = p, b = q; break;\r\n    }\r\n    return [ r,\r\n        g,\r\n         b ];\r\n}\r\n\r\nfunction RGBtoHSV(r, g, b) {\r\n    if (arguments.length === 1) {\r\n        g = r.g, b = r.b, r = r.r;\r\n    }\r\n    var max = Math.max(r, g, b), min = Math.min(r, g, b),\r\n        d = max - min,\r\n        h,\r\n        s = (max === 0 ? 0 : d / max),\r\n        v = max / 255;\r\n\r\n    switch (max) {\r\n        case min: h = 0; break;\r\n        case r: h = (g - b) + d * (g < b ? 6: 0); h /= 6 * d; break;\r\n        case g: h = (b - r) + d * 2; h /= 6 * d; break;\r\n        case b: h = (r - g) + d * 4; h /= 6 * d; break;\r\n    }\r\n\r\n    return [\r\n         h,\r\n         s,\r\n         v\r\n    ];\r\n}\r\n\r\nfunction addSaturationToRGB(color,offset){\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[1] += offset;\r\n    if (hsv[1] > 1) {\r\n        hsv[1] = 1;\r\n    }\r\n    else if (hsv[1] <= 0) {\r\n        hsv[1] = 0;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nfunction addBrightnessToRGB(color,offset){\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[2] += offset;\r\n    if (hsv[2] > 1) {\r\n        hsv[2] = 1;\r\n    }\r\n    else if (hsv[2] < 0) {\r\n        hsv[2] = 0;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nfunction addHueToRGB(color,offset) {\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[0] += offset/360;\r\n    if (hsv[0] > 1) {\r\n        hsv[0] -= 1;\r\n    }\r\n    else if (hsv[0] < 0) {\r\n        hsv[0] += 1;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nfunction componentToHex(c) {\r\n    var hex = c.toString(16);\r\n    return hex.length == 1 ? '0' + hex : hex;\r\n}\r\n\r\nvar rgbToHex = (function(){\r\n    var colorMap = [];\r\n    var i;\r\n    var hex;\r\n    for(i=0;i<256;i+=1){\r\n        hex = i.toString(16);\r\n        colorMap[i] = hex.length == 1 ? '0' + hex : hex;\r\n    }\r\n\r\n    return function(r, g, b) {\r\n        if(r<0){\r\n            r = 0;\r\n        }\r\n        if(g<0){\r\n            g = 0;\r\n        }\r\n        if(b<0){\r\n            b = 0;\r\n        }\r\n        return '#' + colorMap[r] + colorMap[g] + colorMap[b];\r\n    };\r\n}());\r\n\r\nfunction fillToRgba(hex,alpha){\r\n    if(!cachedColors[hex]){\r\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n        cachedColors[hex] = parseInt(result[1], 16)+','+parseInt(result[2], 16)+','+parseInt(result[3], 16);\r\n    }\r\n    return 'rgba('+cachedColors[hex]+','+alpha+')';\r\n}\r\n\r\nvar fillColorToString = (function(){\r\n\r\n    var colorMap = [];\r\n    return function(colorArr,alpha){\r\n        if(alpha !== undefined){\r\n            colorArr[3] = alpha;\r\n        }\r\n        if(!colorMap[colorArr[0]]){\r\n            colorMap[colorArr[0]] = {};\r\n        }\r\n        if(!colorMap[colorArr[0]][colorArr[1]]){\r\n            colorMap[colorArr[0]][colorArr[1]] = {};\r\n        }\r\n        if(!colorMap[colorArr[0]][colorArr[1]][colorArr[2]]){\r\n            colorMap[colorArr[0]][colorArr[1]][colorArr[2]] = {};\r\n        }\r\n        if(!colorMap[colorArr[0]][colorArr[1]][colorArr[2]][colorArr[3]]){\r\n            colorMap[colorArr[0]][colorArr[1]][colorArr[2]][colorArr[3]] = 'rgba(' + colorArr.join(',')+')';\r\n        }\r\n        return colorMap[colorArr[0]][colorArr[1]][colorArr[2]][colorArr[3]];\r\n    };\r\n}());\r\n\r\nfunction RenderedFrame(tr,o) {\r\n    this.tr = tr;\r\n    this.o = o;\r\n}\r\n\r\nfunction iterateDynamicProperties(num){\r\n    var i, len = this.dynamicProperties;\r\n    for(i=0;i<len;i+=1){\r\n        this.dynamicProperties[i].getValue(num);\r\n    }\r\n}\r\n\r\nfunction reversePath(paths){\r\n    var newI = [], newO = [], newV = [];\r\n    var i, len, newPaths = {};\r\n    var init = 0;\r\n    if (paths.c) {\r\n        newI[0] = paths.o[0];\r\n        newO[0] = paths.i[0];\r\n        newV[0] = paths.v[0];\r\n        init = 1;\r\n    }\r\n    len = paths.i.length;\r\n    var cnt = len - 1;\r\n\r\n    for (i = init; i < len; i += 1) {\r\n        newI.push(paths.o[cnt]);\r\n        newO.push(paths.i[cnt]);\r\n        newV.push(paths.v[cnt]);\r\n        cnt -= 1;\r\n    }\r\n\r\n    newPaths.i = newI;\r\n    newPaths.o = newO;\r\n    newPaths.v = newV;\r\n\r\n    return newPaths;\r\n}\n/*!\r\n Transformation Matrix v2.0\r\n (c) Epistemex 2014-2015\r\n www.epistemex.com\r\n By Ken Fyrstenberg\r\n Contributions by leeoniya.\r\n License: MIT, header required.\r\n */\r\n\r\n/**\r\n * 2D transformation matrix object initialized with identity matrix.\r\n *\r\n * The matrix can synchronize a canvas context by supplying the context\r\n * as an argument, or later apply current absolute transform to an\r\n * existing context.\r\n *\r\n * All values are handled as floating point values.\r\n *\r\n * @param {CanvasRenderingContext2D} [context] - Optional context to sync with Matrix\r\n * @prop {number} a - scale x\r\n * @prop {number} b - shear y\r\n * @prop {number} c - shear x\r\n * @prop {number} d - scale y\r\n * @prop {number} e - translate x\r\n * @prop {number} f - translate y\r\n * @prop {CanvasRenderingContext2D|null} [context=null] - set or get current canvas context\r\n * @constructor\r\n */\r\n\r\nvar Matrix = (function(){\r\n\r\n    function reset(){\r\n        this.props[0] = 1;\r\n        this.props[1] = 0;\r\n        this.props[2] = 0;\r\n        this.props[3] = 0;\r\n        this.props[4] = 0;\r\n        this.props[5] = 1;\r\n        this.props[6] = 0;\r\n        this.props[7] = 0;\r\n        this.props[8] = 0;\r\n        this.props[9] = 0;\r\n        this.props[10] = 1;\r\n        this.props[11] = 0;\r\n        this.props[12] = 0;\r\n        this.props[13] = 0;\r\n        this.props[14] = 0;\r\n        this.props[15] = 1;\r\n        return this;\r\n    }\r\n\r\n    function rotate(angle) {\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = Math.cos(angle);\r\n        var mSin = Math.sin(angle);\r\n        return this._t(mCos, -mSin,  0, 0\r\n            , mSin,  mCos, 0, 0\r\n            , 0,  0,  1, 0\r\n            , 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateX(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = Math.cos(angle);\r\n        var mSin = Math.sin(angle);\r\n        return this._t(1, 0, 0, 0\r\n            , 0, mCos, -mSin, 0\r\n            , 0, mSin,  mCos, 0\r\n            , 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateY(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = Math.cos(angle);\r\n        var mSin = Math.sin(angle);\r\n        return this._t(mCos,  0,  mSin, 0\r\n            , 0, 1, 0, 0\r\n            , -mSin,  0,  mCos, 0\r\n            , 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateZ(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = Math.cos(angle);\r\n        var mSin = Math.sin(angle);\r\n        return this._t(mCos, -mSin,  0, 0\r\n            , mSin,  mCos, 0, 0\r\n            , 0,  0,  1, 0\r\n            , 0, 0, 0, 1);\r\n    }\r\n\r\n    function shear(sx,sy){\r\n        return this._t(1, sy, sx, 1, 0, 0);\r\n    }\r\n\r\n    function skew(ax, ay){\r\n        return this.shear(Math.tan(ax), Math.tan(ay));\r\n    }\r\n\r\n    function skewFromAxis(ax, angle){\r\n        var mCos = Math.cos(angle);\r\n        var mSin = Math.sin(angle);\r\n        return this._t(mCos, mSin,  0, 0\r\n            , -mSin,  mCos, 0, 0\r\n            , 0,  0,  1, 0\r\n            , 0, 0, 0, 1)\r\n            ._t(1, 0,  0, 0\r\n            , Math.tan(ax),  1, 0, 0\r\n            , 0,  0,  1, 0\r\n            , 0, 0, 0, 1)\r\n            ._t(mCos, -mSin,  0, 0\r\n            , mSin,  mCos, 0, 0\r\n            , 0,  0,  1, 0\r\n            , 0, 0, 0, 1);\r\n        //return this._t(mCos, mSin, -mSin, mCos, 0, 0)._t(1, 0, Math.tan(ax), 1, 0, 0)._t(mCos, -mSin, mSin, mCos, 0, 0);\r\n    }\r\n\r\n    function scale(sx, sy, sz) {\r\n        sz = isNaN(sz) ? 1 : sz;\r\n        if(sx == 1 && sy == 1 && sz == 1){\r\n            return this;\r\n        }\r\n        return this._t(sx, 0, 0, 0, 0, sy, 0, 0, 0, 0, sz, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function setTransform(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {\r\n        this.props[0] = a;\r\n        this.props[1] = b;\r\n        this.props[2] = c;\r\n        this.props[3] = d;\r\n        this.props[4] = e;\r\n        this.props[5] = f;\r\n        this.props[6] = g;\r\n        this.props[7] = h;\r\n        this.props[8] = i;\r\n        this.props[9] = j;\r\n        this.props[10] = k;\r\n        this.props[11] = l;\r\n        this.props[12] = m;\r\n        this.props[13] = n;\r\n        this.props[14] = o;\r\n        this.props[15] = p;\r\n        return this;\r\n    }\r\n\r\n    function translate(tx, ty, tz) {\r\n        tz = tz || 0;\r\n        if(tx !== 0 || ty !== 0 || tz !== 0){\r\n            return this._t(1,0,0,0,0,1,0,0,0,0,1,0,tx,ty,tz,1);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function transform(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2, m2, n2, o2, p2) {\r\n\r\n        if(a2 === 1 && b2 === 0 && c2 === 0 && d2 === 0 && e2 === 0 && f2 === 1 && g2 === 0 && h2 === 0 && i2 === 0 && j2 === 0 && k2 === 1 && l2 === 0){\r\n            if(m2 !== 0 || n2 !== 0 || o2 !== 0){\r\n\r\n                this.props[12] = this.props[12] * a2 + this.props[13] * e2 + this.props[14] * i2 + this.props[15] * m2 ;\r\n                this.props[13] = this.props[12] * b2 + this.props[13] * f2 + this.props[14] * j2 + this.props[15] * n2 ;\r\n                this.props[14] = this.props[12] * c2 + this.props[13] * g2 + this.props[14] * k2 + this.props[15] * o2 ;\r\n                this.props[15] = this.props[12] * d2 + this.props[13] * h2 + this.props[14] * l2 + this.props[15] * p2 ;\r\n            }\r\n            this._identityCalculated = false;\r\n            return this;\r\n        }\r\n\r\n        var a1 = this.props[0];\r\n        var b1 = this.props[1];\r\n        var c1 = this.props[2];\r\n        var d1 = this.props[3];\r\n        var e1 = this.props[4];\r\n        var f1 = this.props[5];\r\n        var g1 = this.props[6];\r\n        var h1 = this.props[7];\r\n        var i1 = this.props[8];\r\n        var j1 = this.props[9];\r\n        var k1 = this.props[10];\r\n        var l1 = this.props[11];\r\n        var m1 = this.props[12];\r\n        var n1 = this.props[13];\r\n        var o1 = this.props[14];\r\n        var p1 = this.props[15];\r\n\r\n        /* matrix order (canvas compatible):\r\n         * ace\r\n         * bdf\r\n         * 001\r\n         */\r\n        this.props[0] = a1 * a2 + b1 * e2 + c1 * i2 + d1 * m2;\r\n        this.props[1] = a1 * b2 + b1 * f2 + c1 * j2 + d1 * n2 ;\r\n        this.props[2] = a1 * c2 + b1 * g2 + c1 * k2 + d1 * o2 ;\r\n        this.props[3] = a1 * d2 + b1 * h2 + c1 * l2 + d1 * p2 ;\r\n\r\n        this.props[4] = e1 * a2 + f1 * e2 + g1 * i2 + h1 * m2 ;\r\n        this.props[5] = e1 * b2 + f1 * f2 + g1 * j2 + h1 * n2 ;\r\n        this.props[6] = e1 * c2 + f1 * g2 + g1 * k2 + h1 * o2 ;\r\n        this.props[7] = e1 * d2 + f1 * h2 + g1 * l2 + h1 * p2 ;\r\n\r\n        this.props[8] = i1 * a2 + j1 * e2 + k1 * i2 + l1 * m2 ;\r\n        this.props[9] = i1 * b2 + j1 * f2 + k1 * j2 + l1 * n2 ;\r\n        this.props[10] = i1 * c2 + j1 * g2 + k1 * k2 + l1 * o2 ;\r\n        this.props[11] = i1 * d2 + j1 * h2 + k1 * l2 + l1 * p2 ;\r\n\r\n        this.props[12] = m1 * a2 + n1 * e2 + o1 * i2 + p1 * m2 ;\r\n        this.props[13] = m1 * b2 + n1 * f2 + o1 * j2 + p1 * n2 ;\r\n        this.props[14] = m1 * c2 + n1 * g2 + o1 * k2 + p1 * o2 ;\r\n        this.props[15] = m1 * d2 + n1 * h2 + o1 * l2 + p1 * p2 ;\r\n\r\n        this._identityCalculated = false;\r\n        return this;\r\n    }\r\n\r\n    function isIdentity() {\r\n        if(!this._identityCalculated){\r\n            this._identity = !(this.props[0] !== 1 || this.props[1] !== 0 || this.props[2] !== 0 || this.props[3] !== 0\r\n                || this.props[4] !== 0 || this.props[5] !== 1 || this.props[6] !== 0 || this.props[7] !== 0\r\n                || this.props[8] !== 0 || this.props[9] !== 0 || this.props[10] !== 1 || this.props[11] !== 0\r\n                || this.props[12] !== 0 || this.props[13] !== 0 || this.props[14] !== 0 || this.props[15] !== 1);\r\n            this._identityCalculated = true;\r\n        }\r\n        return this._identity;\r\n    }\r\n\r\n    function clone(matr){\r\n        var i;\r\n        for(i=0;i<16;i+=1){\r\n            matr.props[i] = this.props[i];\r\n        }\r\n    }\r\n\r\n    function cloneFromProps(props){\r\n        var i;\r\n        for(i=0;i<16;i+=1){\r\n            this.props[i] = props[i];\r\n        }\r\n    }\r\n\r\n    function applyToPoint(x, y, z) {\r\n\r\n        return {\r\n            x: x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],\r\n            y: x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],\r\n            z: x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]\r\n        };\r\n        /*return {\r\n         x: x * me.a + y * me.c + me.e,\r\n         y: x * me.b + y * me.d + me.f\r\n         };*/\r\n    }\r\n    function applyToX(x, y, z) {\r\n        return x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12];\r\n    }\r\n    function applyToY(x, y, z) {\r\n        return x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13];\r\n    }\r\n    function applyToZ(x, y, z) {\r\n        return x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14];\r\n    }\r\n\r\n    function inversePoint(pt) {\r\n        var determinant = this.props[0] * this.props[5] - this.props[1] * this.props[4];\r\n        var a = this.props[5]/determinant;\r\n        var b = - this.props[1]/determinant;\r\n        var c = - this.props[4]/determinant;\r\n        var d = this.props[0]/determinant;\r\n        var e = (this.props[4] * this.props[13] - this.props[5] * this.props[12])/determinant;\r\n        var f = - (this.props[0] * this.props[13] - this.props[1] * this.props[12])/determinant;\r\n        return [pt[0] * a + pt[1] * c + e, pt[0] * b + pt[1] * d + f, 0];\r\n    }\r\n\r\n    function inversePoints(pts){\r\n        var i, len = pts.length, retPts = [];\r\n        for(i=0;i<len;i+=1){\r\n            retPts[i] = inversePoint(pts[i]);\r\n        }\r\n        return retPts;\r\n    }\r\n\r\n    function applyToPointArray(x,y,z,dimensions){\r\n        if(dimensions && dimensions === 2) {\r\n            var arr = point_pool.newPoint();\r\n            arr[0] = x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12]; \r\n            arr[1] = x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13]; \r\n            return arr;    \r\n        }\r\n        return [x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]];\r\n    }\r\n    function applyToPointStringified(x, y) {\r\n        if(this.isIdentity()) {\r\n            return x + ',' + y;\r\n        }\r\n        return (bm_rnd(x * this.props[0] + y * this.props[4] + this.props[12]))+','+(bm_rnd(x * this.props[1] + y * this.props[5] + this.props[13]));\r\n    }\r\n\r\n    function toArray() {\r\n        return [this.props[0],this.props[1],this.props[2],this.props[3],this.props[4],this.props[5],this.props[6],this.props[7],this.props[8],this.props[9],this.props[10],this.props[11],this.props[12],this.props[13],this.props[14],this.props[15]];\r\n    }\r\n\r\n    function toCSS() {\r\n        if(isSafari){\r\n            return \"matrix3d(\" + roundTo2Decimals(this.props[0]) + ',' + roundTo2Decimals(this.props[1]) + ',' + roundTo2Decimals(this.props[2]) + ',' + roundTo2Decimals(this.props[3]) + ',' + roundTo2Decimals(this.props[4]) + ',' + roundTo2Decimals(this.props[5]) + ',' + roundTo2Decimals(this.props[6]) + ',' + roundTo2Decimals(this.props[7]) + ',' + roundTo2Decimals(this.props[8]) + ',' + roundTo2Decimals(this.props[9]) + ',' + roundTo2Decimals(this.props[10]) + ',' + roundTo2Decimals(this.props[11]) + ',' + roundTo2Decimals(this.props[12]) + ',' + roundTo2Decimals(this.props[13]) + ',' + roundTo2Decimals(this.props[14]) + ',' + roundTo2Decimals(this.props[15]) + ')';\r\n        } else {\r\n            this.cssParts[1] = this.props.join(',');\r\n            return this.cssParts.join('');\r\n        }\r\n    }\r\n\r\n    function to2dCSS() {\r\n        return \"matrix(\" + roundTo2Decimals(this.props[0]) + ',' + roundTo2Decimals(this.props[1]) + ',' + roundTo2Decimals(this.props[4]) + ',' + roundTo2Decimals(this.props[5]) + ',' + roundTo2Decimals(this.props[12]) + ',' + roundTo2Decimals(this.props[13]) + \")\";\r\n    }\r\n\r\n    function toString() {\r\n        return \"\" + this.toArray();\r\n    }\r\n\r\n    return function(){\r\n        this.reset = reset;\r\n        this.rotate = rotate;\r\n        this.rotateX = rotateX;\r\n        this.rotateY = rotateY;\r\n        this.rotateZ = rotateZ;\r\n        this.skew = skew;\r\n        this.skewFromAxis = skewFromAxis;\r\n        this.shear = shear;\r\n        this.scale = scale;\r\n        this.setTransform = setTransform;\r\n        this.translate = translate;\r\n        this.transform = transform;\r\n        this.applyToPoint = applyToPoint;\r\n        this.applyToX = applyToX;\r\n        this.applyToY = applyToY;\r\n        this.applyToZ = applyToZ;\r\n        this.applyToPointArray = applyToPointArray;\r\n        this.applyToPointStringified = applyToPointStringified;\r\n        this.toArray = toArray;\r\n        this.toCSS = toCSS;\r\n        this.to2dCSS = to2dCSS;\r\n        this.toString = toString;\r\n        this.clone = clone;\r\n        this.cloneFromProps = cloneFromProps;\r\n        this.inversePoints = inversePoints;\r\n        this.inversePoint = inversePoint;\r\n        this._t = this.transform;\r\n        this.isIdentity = isIdentity;\r\n        this._identity = true;\r\n        this._identityCalculated = false;\r\n\r\n        this.props = [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];\r\n\r\n        this.cssParts = ['matrix3d(','',')'];\r\n    }\r\n}());\r\n\r\nfunction Matrix() {\r\n\r\n\r\n}\r\n\n/*\r\n Copyright 2014 David Bau.\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining\r\n a copy of this software and associated documentation files (the\r\n \"Software\"), to deal in the Software without restriction, including\r\n without limitation the rights to use, copy, modify, merge, publish,\r\n distribute, sublicense, and/or sell copies of the Software, and to\r\n permit persons to whom the Software is furnished to do so, subject to\r\n the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be\r\n included in all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\n IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\n CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\n TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n */\r\n\r\n(function (pool, math) {\r\n//\r\n// The following constants are related to IEEE 754 limits.\r\n//\r\n    var global = this,\r\n        width = 256,        // each RC4 output is 0 <= x < 256\r\n        chunks = 6,         // at least six RC4 outputs for each double\r\n        digits = 52,        // there are 52 significant digits in a double\r\n        rngname = 'random', // rngname: name for Math.random and Math.seedrandom\r\n        startdenom = math.pow(width, chunks),\r\n        significance = math.pow(2, digits),\r\n        overflow = significance * 2,\r\n        mask = width - 1,\r\n        nodecrypto;         // node.js crypto module, initialized at the bottom.\r\n\r\n//\r\n// seedrandom()\r\n// This is the seedrandom function described above.\r\n//\r\n    function seedrandom(seed, options, callback) {\r\n        var key = [];\r\n        options = (options == true) ? { entropy: true } : (options || {});\r\n\r\n        // Flatten the seed string or build one from local entropy if needed.\r\n        var shortseed = mixkey(flatten(\r\n            options.entropy ? [seed, tostring(pool)] :\r\n                (seed == null) ? autoseed() : seed, 3), key);\r\n\r\n        // Use the seed to initialize an ARC4 generator.\r\n        var arc4 = new ARC4(key);\r\n\r\n        // This function returns a random double in [0, 1) that contains\r\n        // randomness in every bit of the mantissa of the IEEE 754 value.\r\n        var prng = function() {\r\n            var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\r\n                d = startdenom,                 //   and denominator d = 2 ^ 48.\r\n                x = 0;                          //   and no 'extra last byte'.\r\n            while (n < significance) {          // Fill up all significant digits by\r\n                n = (n + x) * width;              //   shifting numerator and\r\n                d *= width;                       //   denominator and generating a\r\n                x = arc4.g(1);                    //   new least-significant-byte.\r\n            }\r\n            while (n >= overflow) {             // To avoid rounding up, before adding\r\n                n /= 2;                           //   last byte, shift everything\r\n                d /= 2;                           //   right using integer math until\r\n                x >>>= 1;                         //   we have exactly the desired bits.\r\n            }\r\n            return (n + x) / d;                 // Form the number within [0, 1).\r\n        };\r\n\r\n        prng.int32 = function() { return arc4.g(4) | 0; }\r\n        prng.quick = function() { return arc4.g(4) / 0x100000000; }\r\n        prng.double = prng;\r\n\r\n        // Mix the randomness into accumulated entropy.\r\n        mixkey(tostring(arc4.S), pool);\r\n\r\n        // Calling convention: what to return as a function of prng, seed, is_math.\r\n        return (options.pass || callback ||\r\n        function(prng, seed, is_math_call, state) {\r\n            if (state) {\r\n                // Load the arc4 state from the given state if it has an S array.\r\n                if (state.S) { copy(state, arc4); }\r\n                // Only provide the .state method if requested via options.state.\r\n                prng.state = function() { return copy(arc4, {}); }\r\n            }\r\n\r\n            // If called as a method of Math (Math.seedrandom()), mutate\r\n            // Math.random because that is how seedrandom.js has worked since v1.0.\r\n            if (is_math_call) { math[rngname] = prng; return seed; }\r\n\r\n            // Otherwise, it is a newer calling convention, so return the\r\n            // prng directly.\r\n            else return prng;\r\n        })(\r\n            prng,\r\n            shortseed,\r\n            'global' in options ? options.global : (this == math),\r\n            options.state);\r\n    }\r\n    math['seed' + rngname] = seedrandom;\r\n\r\n//\r\n// ARC4\r\n//\r\n// An ARC4 implementation.  The constructor takes a key in the form of\r\n// an array of at most (width) integers that should be 0 <= x < (width).\r\n//\r\n// The g(count) method returns a pseudorandom integer that concatenates\r\n// the next (count) outputs from ARC4.  Its return value is a number x\r\n// that is in the range 0 <= x < (width ^ count).\r\n//\r\n    function ARC4(key) {\r\n        var t, keylen = key.length,\r\n            me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\r\n\r\n        // The empty key [] is treated as [0].\r\n        if (!keylen) { key = [keylen++]; }\r\n\r\n        // Set up S using the standard key scheduling algorithm.\r\n        while (i < width) {\r\n            s[i] = i++;\r\n        }\r\n        for (i = 0; i < width; i++) {\r\n            s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\r\n            s[j] = t;\r\n        }\r\n\r\n        // The \"g\" method returns the next (count) outputs as one number.\r\n        (me.g = function(count) {\r\n            // Using instance members instead of closure state nearly doubles speed.\r\n            var t, r = 0,\r\n                i = me.i, j = me.j, s = me.S;\r\n            while (count--) {\r\n                t = s[i = mask & (i + 1)];\r\n                r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\r\n            }\r\n            me.i = i; me.j = j;\r\n            return r;\r\n            // For robust unpredictability, the function call below automatically\r\n            // discards an initial batch of values.  This is called RC4-drop[256].\r\n            // See http://google.com/search?q=rsa+fluhrer+response&btnI\r\n        })(width);\r\n    }\r\n\r\n//\r\n// copy()\r\n// Copies internal state of ARC4 to or from a plain object.\r\n//\r\n    function copy(f, t) {\r\n        t.i = f.i;\r\n        t.j = f.j;\r\n        t.S = f.S.slice();\r\n        return t;\r\n    };\r\n\r\n//\r\n// flatten()\r\n// Converts an object tree to nested arrays of strings.\r\n//\r\n    function flatten(obj, depth) {\r\n        var result = [], typ = (typeof obj), prop;\r\n        if (depth && typ == 'object') {\r\n            for (prop in obj) {\r\n                try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\r\n            }\r\n        }\r\n        return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\r\n    }\r\n\r\n//\r\n// mixkey()\r\n// Mixes a string seed into a key that is an array of integers, and\r\n// returns a shortened string seed that is equivalent to the result key.\r\n//\r\n    function mixkey(seed, key) {\r\n        var stringseed = seed + '', smear, j = 0;\r\n        while (j < stringseed.length) {\r\n            key[mask & j] =\r\n                mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\r\n        }\r\n        return tostring(key);\r\n    }\r\n\r\n//\r\n// autoseed()\r\n// Returns an object for autoseeding, using window.crypto and Node crypto\r\n// module if available.\r\n//\r\n    function autoseed() {\r\n        try {\r\n            if (nodecrypto) { return tostring(nodecrypto.randomBytes(width)); }\r\n            var out = new Uint8Array(width);\r\n            (global.crypto || global.msCrypto).getRandomValues(out);\r\n            return tostring(out);\r\n        } catch (e) {\r\n            var browser = global.navigator,\r\n                plugins = browser && browser.plugins;\r\n            return [+new Date, global, plugins, global.screen, tostring(pool)];\r\n        }\r\n    }\r\n\r\n//\r\n// tostring()\r\n// Converts an array of charcodes to a string\r\n//\r\n    function tostring(a) {\r\n        return String.fromCharCode.apply(0, a);\r\n    }\r\n\r\n//\r\n// When seedrandom.js is loaded, we immediately mix a few bits\r\n// from the built-in RNG into the entropy pool.  Because we do\r\n// not want to interfere with deterministic PRNG state later,\r\n// seedrandom will not call math.random on its own again after\r\n// initialization.\r\n//\r\n    mixkey(math.random(), pool);\r\n\r\n//\r\n// Nodejs and AMD support: export the implementation as a module using\r\n// either convention.\r\n//\r\n\r\n// End anonymous scope, and pass initial values.\r\n})(\r\n    [],     // pool: entropy pool starts empty\r\n    BMMath    // math: package containing random, pow, and seedrandom\r\n);\nvar BezierFactory = (function(){\r\n    /**\r\n     * BezierEasing - use bezier curve for transition easing function\r\n     * by Gaëtan Renaudeau 2014 - 2015 – MIT License\r\n     *\r\n     * Credits: is based on Firefox's nsSMILKeySpline.cpp\r\n     * Usage:\r\n     * var spline = BezierEasing([ 0.25, 0.1, 0.25, 1.0 ])\r\n     * spline.get(x) => returns the easing value | x must be in [0, 1] range\r\n     *\r\n     */\r\n\r\n        var ob = {};\r\n    ob.getBezierEasing = getBezierEasing;\r\n    var beziers = {};\r\n\r\n    function getBezierEasing(a,b,c,d,nm){\r\n        var str = nm || ('bez_' + a+'_'+b+'_'+c+'_'+d).replace(/\\./g, 'p');\r\n        if(beziers[str]){\r\n            return beziers[str];\r\n        }\r\n        var bezEasing = new BezierEasing([a,b,c,d]);\r\n        beziers[str] = bezEasing;\r\n        return bezEasing;\r\n    }\r\n\r\n// These values are established by empiricism with tests (tradeoff: performance VS precision)\r\n    var NEWTON_ITERATIONS = 4;\r\n    var NEWTON_MIN_SLOPE = 0.001;\r\n    var SUBDIVISION_PRECISION = 0.0000001;\r\n    var SUBDIVISION_MAX_ITERATIONS = 10;\r\n\r\n    var kSplineTableSize = 11;\r\n    var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\r\n\r\n    var float32ArraySupported = typeof Float32Array === \"function\";\r\n\r\n    function A (aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }\r\n    function B (aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }\r\n    function C (aA1)      { return 3.0 * aA1; }\r\n\r\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\r\n    function calcBezier (aT, aA1, aA2) {\r\n        return ((A(aA1, aA2)*aT + B(aA1, aA2))*aT + C(aA1))*aT;\r\n    }\r\n\r\n// Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\r\n    function getSlope (aT, aA1, aA2) {\r\n        return 3.0 * A(aA1, aA2)*aT*aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\r\n    }\r\n\r\n    function binarySubdivide (aX, aA, aB, mX1, mX2) {\r\n        var currentX, currentT, i = 0;\r\n        do {\r\n            currentT = aA + (aB - aA) / 2.0;\r\n            currentX = calcBezier(currentT, mX1, mX2) - aX;\r\n            if (currentX > 0.0) {\r\n                aB = currentT;\r\n            } else {\r\n                aA = currentT;\r\n            }\r\n        } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\r\n        return currentT;\r\n    }\r\n\r\n    function newtonRaphsonIterate (aX, aGuessT, mX1, mX2) {\r\n        for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\r\n            var currentSlope = getSlope(aGuessT, mX1, mX2);\r\n            if (currentSlope === 0.0) return aGuessT;\r\n            var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\r\n            aGuessT -= currentX / currentSlope;\r\n        }\r\n        return aGuessT;\r\n    }\r\n\r\n    /**\r\n     * points is an array of [ mX1, mY1, mX2, mY2 ]\r\n     */\r\n    function BezierEasing (points) {\r\n        this._p = points;\r\n        this._mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\r\n        this._precomputed = false;\r\n\r\n        this.get = this.get.bind(this);\r\n    }\r\n\r\n    BezierEasing.prototype = {\r\n\r\n        get: function (x) {\r\n            var mX1 = this._p[0],\r\n                mY1 = this._p[1],\r\n                mX2 = this._p[2],\r\n                mY2 = this._p[3];\r\n            if (!this._precomputed) this._precompute();\r\n            if (mX1 === mY1 && mX2 === mY2) return x; // linear\r\n            // Because JavaScript number are imprecise, we should guarantee the extremes are right.\r\n            if (x === 0) return 0;\r\n            if (x === 1) return 1;\r\n            return calcBezier(this._getTForX(x), mY1, mY2);\r\n        },\r\n\r\n        // Private part\r\n\r\n        _precompute: function () {\r\n            var mX1 = this._p[0],\r\n                mY1 = this._p[1],\r\n                mX2 = this._p[2],\r\n                mY2 = this._p[3];\r\n            this._precomputed = true;\r\n            if (mX1 !== mY1 || mX2 !== mY2)\r\n                this._calcSampleValues();\r\n        },\r\n\r\n        _calcSampleValues: function () {\r\n            var mX1 = this._p[0],\r\n                mX2 = this._p[2];\r\n            for (var i = 0; i < kSplineTableSize; ++i) {\r\n                this._mSampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * getTForX chose the fastest heuristic to determine the percentage value precisely from a given X projection.\r\n         */\r\n        _getTForX: function (aX) {\r\n            var mX1 = this._p[0],\r\n                mX2 = this._p[2],\r\n                mSampleValues = this._mSampleValues;\r\n\r\n            var intervalStart = 0.0;\r\n            var currentSample = 1;\r\n            var lastSample = kSplineTableSize - 1;\r\n\r\n            for (; currentSample !== lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {\r\n                intervalStart += kSampleStepSize;\r\n            }\r\n            --currentSample;\r\n\r\n            // Interpolate to provide an initial guess for t\r\n            var dist = (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample+1] - mSampleValues[currentSample]);\r\n            var guessForT = intervalStart + dist * kSampleStepSize;\r\n\r\n            var initialSlope = getSlope(guessForT, mX1, mX2);\r\n            if (initialSlope >= NEWTON_MIN_SLOPE) {\r\n                return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\r\n            } else if (initialSlope === 0.0) {\r\n                return guessForT;\r\n            } else {\r\n                return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\r\n            }\r\n        }\r\n    };\r\n\r\n    return ob;\r\n\r\n}());\n(function () {\r\n    var lastTime = 0;\r\n    var vendors = ['ms', 'moz', 'webkit', 'o'];\r\n    for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\r\n        window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\r\n        window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\r\n    }\r\n    if(!window.requestAnimationFrame)\r\n        window.requestAnimationFrame = function (callback, element) {\r\n            var currTime = new Date().getTime();\r\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n            var id = setTimeout(function () {\r\n                    callback(currTime + timeToCall);\r\n                },\r\n                timeToCall);\r\n            lastTime = currTime + timeToCall;\r\n            return id;\r\n        };\r\n    if(!window.cancelAnimationFrame)\r\n        window.cancelAnimationFrame = function (id) {\r\n            clearTimeout(id);\r\n        };\r\n}());\r\n\nfunction createElement(parent,child,params){\r\n    if(child){\r\n        child.prototype = Object.create(parent.prototype);\r\n        child.prototype.constructor = child;\r\n        child.prototype._parent = parent.prototype;\r\n    }else{\r\n        var instance = Object.create(parent.prototype,params);\r\n        var getType = {};\r\n        if(instance && getType.toString.call(instance.init) === '[object Function]'){\r\n            instance.init();\r\n        }\r\n        return instance;\r\n    }\r\n}\r\n\r\nfunction extendPrototype(source,destination){\r\n    for (var attr in source.prototype) {\r\n        if (source.prototype.hasOwnProperty(attr)) destination.prototype[attr] = source.prototype[attr];\r\n    }\r\n}\nfunction bezFunction(){\r\n\r\n    var easingFunctions = [];\r\n    var math = Math;\r\n\r\n    function pointOnLine2D(x1,y1, x2,y2, x3,y3){\r\n        var det1 = (x1*y2) + (y1*x3) + (x2*y3) - (x3*y2) - (y3*x1) - (x2*y1);\r\n        return det1 > -0.0001 && det1 < 0.0001;\r\n    }\r\n\r\n    function pointOnLine3D(x1,y1,z1, x2,y2,z2, x3,y3,z3){\r\n        if(z1 === 0 && z2 === 0 && z3 === 0) {\r\n            return pointOnLine2D(x1,y1, x2,y2, x3,y3);\r\n        }\r\n        var dist1 = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2) + Math.pow(z2 - z1, 2));\r\n        var dist2 = Math.sqrt(Math.pow(x3 - x1, 2) + Math.pow(y3 - y1, 2) + Math.pow(z3 - z1, 2));\r\n        var dist3 = Math.sqrt(Math.pow(x3 - x2, 2) + Math.pow(y3 - y2, 2) + Math.pow(z3 - z2, 2));\r\n        var diffDist;\r\n        if(dist1 > dist2){\r\n            if(dist1 > dist3){\r\n                diffDist = dist1 - dist2 - dist3;\r\n            } else {\r\n                diffDist = dist3 - dist2 - dist1;\r\n            }\r\n        } else if(dist3 > dist2){\r\n            diffDist = dist3 - dist2 - dist1;\r\n        } else {\r\n            diffDist = dist2 - dist1 - dist3;\r\n        }\r\n        return diffDist > -0.0001 && diffDist < 0.0001;\r\n    }\r\n\r\n    /*function getEasingCurve(aa,bb,cc,dd,encodedFuncName) {\r\n        if(!encodedFuncName){\r\n            encodedFuncName = ('bez_' + aa+'_'+bb+'_'+cc+'_'+dd).replace(/\\./g, 'p');\r\n        }\r\n        if(easingFunctions[encodedFuncName]){\r\n            return easingFunctions[encodedFuncName];\r\n        }\r\n        var A0, B0, C0;\r\n        var A1, B1, C1;\r\n        easingFunctions[encodedFuncName] = function(tt) {\r\n            var x = tt;\r\n            var i = 0, z;\r\n            while (++i < 20) {\r\n                C0 = 3 * aa;\r\n                B0 = 3 * (cc - aa) - C0;\r\n                A0 = 1 - C0 - B0;\r\n                z = (x * (C0 + x * (B0 + x * A0))) - tt;\r\n                if (bm_abs(z) < 1e-3) break;\r\n                x -= z / (C0 + x * (2 * B0 + 3 * A0 * x));\r\n            }\r\n            C1 = 3 * bb;\r\n            B1 = 3 * (dd - bb) - C1;\r\n            A1 = 1 - C1 - B1;\r\n            var polyB = x * (C1 + x * (B1 + x * A1));\r\n            //return c * polyB + b;\r\n            return polyB;\r\n        };\r\n        return easingFunctions[encodedFuncName];\r\n    }*/\r\n    var getBezierLength = (function(){\r\n\r\n        function Segment(l,p){\r\n            this.l = l;\r\n            this.p = p;\r\n        }\r\n\r\n        return function(pt1,pt2,pt3,pt4){\r\n            var curveSegments = defaultCurveSegments;\r\n            var k;\r\n            var i, len;\r\n            var ptCoord,perc,addedLength = 0;\r\n            var ptDistance;\r\n            var point = [],lastPoint = [];\r\n            var lengthData = {\r\n                addedLength: 0,\r\n                segments: []\r\n            };\r\n            len = pt3.length;\r\n            for(k=0;k<curveSegments;k+=1){\r\n                perc = k/(curveSegments-1);\r\n                ptDistance = 0;\r\n                for(i=0;i<len;i+=1){\r\n                    ptCoord = bm_pow(1-perc,3)*pt1[i]+3*bm_pow(1-perc,2)*perc*pt3[i]+3*(1-perc)*bm_pow(perc,2)*pt4[i]+bm_pow(perc,3)*pt2[i];\r\n                    point[i] = ptCoord;\r\n                    if(lastPoint[i] !== null){\r\n                        ptDistance += bm_pow(point[i] - lastPoint[i],2);\r\n                    }\r\n                    lastPoint[i] = point[i];\r\n                }\r\n                if(ptDistance){\r\n                    ptDistance = bm_sqrt(ptDistance);\r\n                    addedLength += ptDistance;\r\n                }\r\n                lengthData.segments.push(new Segment(addedLength,perc));\r\n            }\r\n            lengthData.addedLength = addedLength;\r\n            return lengthData;\r\n        };\r\n    }());\r\n\r\n    function getSegmentsLength(shapeData) {\r\n        var closed = shapeData.c;\r\n        var pathV = shapeData.v;\r\n        var pathO = shapeData.o;\r\n        var pathI = shapeData.i;\r\n        var i, len = shapeData._length;\r\n        var lengths = [];\r\n        var totalLength = 0;\r\n        for(i=0;i<len-1;i+=1){\r\n            lengths[i] = getBezierLength(pathV[i],pathV[i+1],pathO[i],pathI[i+1]);\r\n            totalLength += lengths[i].addedLength;\r\n        }\r\n        if(closed){\r\n            lengths[i] = getBezierLength(pathV[i],pathV[0],pathO[i],pathI[0]);\r\n            totalLength += lengths[i].addedLength;\r\n        }\r\n        return {lengths:lengths,totalLength:totalLength};\r\n    }\r\n\r\n    function BezierData(length){\r\n        this.segmentLength = 0;\r\n        this.points = new Array(length);\r\n    }\r\n\r\n    function PointData(partial,point){\r\n        this.partialLength = partial;\r\n        this.point = point;\r\n    }\r\n\r\n    var buildBezierData = (function(){\r\n\r\n        var storedData = {};\r\n\r\n        return function (keyData){\r\n            var pt1 = keyData.s;\r\n            var pt2 = keyData.e;\r\n            var pt3 = keyData.to;\r\n            var pt4 = keyData.ti;\r\n            var bezierName = (pt1.join('_')+'_'+pt2.join('_')+'_'+pt3.join('_')+'_'+pt4.join('_')).replace(/\\./g, 'p');\r\n            if(storedData[bezierName]){\r\n                keyData.bezierData = storedData[bezierName];\r\n                return;\r\n            }\r\n        var curveSegments = defaultCurveSegments;\r\n        var k, i, len;\r\n            var ptCoord,perc,addedLength = 0;\r\n            var ptDistance;\r\n            var point,lastPoint = null;\r\n            if(pt1.length === 2 && (pt1[0] != pt2[0] || pt1[1] != pt2[1]) && pointOnLine2D(pt1[0],pt1[1],pt2[0],pt2[1],pt1[0]+pt3[0],pt1[1]+pt3[1]) && pointOnLine2D(pt1[0],pt1[1],pt2[0],pt2[1],pt2[0]+pt4[0],pt2[1]+pt4[1])){\r\n                curveSegments = 2;\r\n            }\r\n            var bezierData = new BezierData(curveSegments);\r\n            len = pt3.length;\r\n            for(k=0;k<curveSegments;k+=1){\r\n            point = new Array(len);\r\n                perc = k/(curveSegments-1);\r\n                ptDistance = 0;\r\n                for(i=0;i<len;i+=1){\r\n                ptCoord = bm_pow(1-perc,3)*pt1[i]+3*bm_pow(1-perc,2)*perc*(pt1[i] + pt3[i])+3*(1-perc)*bm_pow(perc,2)*(pt2[i] + pt4[i])+bm_pow(perc,3)*pt2[i];\r\n                point[i] = ptCoord;\r\n                    if(lastPoint !== null){\r\n                    ptDistance += bm_pow(point[i] - lastPoint[i],2);\r\n                    }\r\n                }\r\n            ptDistance = bm_sqrt(ptDistance);\r\n                addedLength += ptDistance;\r\n                bezierData.points[k] = new PointData(ptDistance,point);\r\n                lastPoint = point;\r\n            }\r\n            bezierData.segmentLength = addedLength;\r\n            keyData.bezierData = bezierData;\r\n            storedData[bezierName] = bezierData;\r\n\r\n        }\r\n    }());\r\n\r\n    function getDistancePerc(perc,bezierData){\r\n        var segments = bezierData.segments;\r\n        var len = segments.length;\r\n        var initPos = bm_floor((len-1)*perc);\r\n        var lengthPos = perc*bezierData.addedLength;\r\n        var lPerc = 0;\r\n        if(lengthPos == segments[initPos].l){\r\n            return segments[initPos].p;\r\n        }else{\r\n            var dir = segments[initPos].l > lengthPos ? -1 : 1;\r\n            var flag = true;\r\n            while(flag){\r\n                if(segments[initPos].l <= lengthPos && segments[initPos+1].l > lengthPos){\r\n                    lPerc = (lengthPos - segments[initPos].l)/(segments[initPos+1].l-segments[initPos].l);\r\n                    flag = false;\r\n                }else{\r\n                    initPos += dir;\r\n                }\r\n                if(initPos < 0 || initPos >= len - 1){\r\n                    flag = false;\r\n                }\r\n            }\r\n            return segments[initPos].p + (segments[initPos+1].p - segments[initPos].p)*lPerc;\r\n        }\r\n    }\r\n\r\n    function SegmentPoints(){\r\n        this.pt1 = new Array(2);\r\n        this.pt2 = new Array(2);\r\n        this.pt3 = new Array(2);\r\n        this.pt4 = new Array(2);\r\n    }\r\n\r\n    function getPointInSegment(pt1, pt2, pt3, pt4, percent, bezierData) {\r\n        var t1 = getDistancePerc(percent,bezierData);\r\n        var u0 = 1;\r\n        var u1 = 1 - t1;\r\n        var ptX = Math.round((u1*u1*u1* pt1[0] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[0] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[0] + t1*t1*t1* pt2[0])* 1000) / 1000;\r\n        var ptY = Math.round((u1*u1*u1* pt1[1] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[1] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[1] + t1*t1*t1* pt2[1])* 1000) / 1000;\r\n        return [ptX, ptY];\r\n    }\r\n\r\n    function getNewSegment(pt1,pt2,pt3,pt4,startPerc,endPerc, bezierData){\r\n\r\n        var pts = new SegmentPoints();\r\n        startPerc = startPerc < 0 ? 0 : startPerc > 1 ? 1 : startPerc;\r\n        var t0 = getDistancePerc(startPerc,bezierData);\r\n        endPerc = endPerc > 1 ? 1 : endPerc;\r\n        var t1 = getDistancePerc(endPerc,bezierData);\r\n        var i, len = pt1.length;\r\n        var u0 = 1 - t0;\r\n        var u1 = 1 - t1;\r\n        //Math.round(num * 100) / 100\r\n        for(i=0;i<len;i+=1){\r\n            pts.pt1[i] =  Math.round((u0*u0*u0* pt1[i] + (t0*u0*u0 + u0*t0*u0 + u0*u0*t0) * pt3[i] + (t0*t0*u0 + u0*t0*t0 + t0*u0*t0)* pt4[i] + t0*t0*t0* pt2[i])* 1000) / 1000;\r\n            pts.pt3[i] = Math.round((u0*u0*u1*pt1[i] + (t0*u0*u1 + u0*t0*u1 + u0*u0*t1)* pt3[i] + (t0*t0*u1 + u0*t0*t1 + t0*u0*t1)* pt4[i] + t0*t0*t1* pt2[i])* 1000) / 1000;\r\n            pts.pt4[i] = Math.round((u0*u1*u1* pt1[i] + (t0*u1*u1 + u0*t1*u1 + u0*u1*t1)* pt3[i] + (t0*t1*u1 + u0*t1*t1 + t0*u1*t1)* pt4[i] + t0*t1*t1* pt2[i])* 1000) / 1000;\r\n            pts.pt2[i] = Math.round((u1*u1*u1* pt1[i] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[i] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[i] + t1*t1*t1* pt2[i])* 1000) / 1000;\r\n        }\r\n        return pts;\r\n    }\r\n\r\n    return {\r\n        //getEasingCurve : getEasingCurve,\r\n        getBezierLength : getBezierLength,\r\n        getSegmentsLength : getSegmentsLength,\r\n        getNewSegment : getNewSegment,\r\n        getPointInSegment : getPointInSegment,\r\n        buildBezierData : buildBezierData,\r\n        pointOnLine2D : pointOnLine2D,\r\n        pointOnLine3D : pointOnLine3D\r\n    };\r\n}\r\n\r\nvar bez = bezFunction();\nfunction dataFunctionManager(){\r\n\r\n    //var tCanvasHelper = document.createElement('canvas').getContext('2d');\r\n\r\n    function completeLayers(layers, comps, fontManager){\r\n        var layerData;\r\n        var animArray, lastFrame;\r\n        var i, len = layers.length;\r\n        var j, jLen, k, kLen;\r\n        for(i=0;i<len;i+=1){\r\n            layerData = layers[i];\r\n            if(!('ks' in layerData) || layerData.completed){\r\n                continue;\r\n            }\r\n            layerData.completed = true;\r\n            if(layerData.tt){\r\n                layers[i-1].td = layerData.tt;\r\n            }\r\n            animArray = [];\r\n            lastFrame = -1;\r\n            if(layerData.hasMask){\r\n                var maskProps = layerData.masksProperties;\r\n                jLen = maskProps.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    if(maskProps[j].pt.k.i){\r\n                        convertPathsToAbsoluteValues(maskProps[j].pt.k);\r\n                    }else{\r\n                        kLen = maskProps[j].pt.k.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            if(maskProps[j].pt.k[k].s){\r\n                                convertPathsToAbsoluteValues(maskProps[j].pt.k[k].s[0]);\r\n                            }\r\n                            if(maskProps[j].pt.k[k].e){\r\n                                convertPathsToAbsoluteValues(maskProps[j].pt.k[k].e[0]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(layerData.ty===0){\r\n                layerData.layers = findCompLayers(layerData.refId, comps);\r\n                completeLayers(layerData.layers,comps, fontManager);\r\n            }else if(layerData.ty === 4){\r\n                completeShapes(layerData.shapes);\r\n            }else if(layerData.ty == 5){\r\n                completeText(layerData, fontManager);\r\n            }\r\n        }\r\n    }\r\n\r\n    function findCompLayers(id,comps){\r\n        var i = 0, len = comps.length;\r\n        while(i<len){\r\n            if(comps[i].id === id){\r\n                if(!comps[i].layers.__used) {\r\n                    comps[i].layers.__used = true;\r\n                    return comps[i].layers;\r\n                }\r\n                return JSON.parse(JSON.stringify(comps[i].layers));\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    function completeShapes(arr){\r\n        var i, len = arr.length;\r\n        var j, jLen;\r\n        var hasPaths = false;\r\n        for(i=len-1;i>=0;i-=1){\r\n            if(arr[i].ty == 'sh'){\r\n                if(arr[i].ks.k.i){\r\n                    convertPathsToAbsoluteValues(arr[i].ks.k);\r\n                }else{\r\n                    jLen = arr[i].ks.k.length;\r\n                    for(j=0;j<jLen;j+=1){\r\n                        if(arr[i].ks.k[j].s){\r\n                            convertPathsToAbsoluteValues(arr[i].ks.k[j].s[0]);\r\n                        }\r\n                        if(arr[i].ks.k[j].e){\r\n                            convertPathsToAbsoluteValues(arr[i].ks.k[j].e[0]);\r\n                        }\r\n                    }\r\n                }\r\n                hasPaths = true;\r\n            }else if(arr[i].ty == 'gr'){\r\n                completeShapes(arr[i].it);\r\n            }\r\n        }\r\n        /*if(hasPaths){\r\n            //mx: distance\r\n            //ss: sensitivity\r\n            //dc: decay\r\n            arr.splice(arr.length-1,0,{\r\n                \"ty\": \"ms\",\r\n                \"mx\":20,\r\n                \"ss\":10,\r\n                 \"dc\":0.001,\r\n                \"maxDist\":200\r\n            });\r\n        }*/\r\n    }\r\n\r\n    function convertPathsToAbsoluteValues(path){\r\n        var i, len = path.i.length;\r\n        for(i=0;i<len;i+=1){\r\n            path.i[i][0] += path.v[i][0];\r\n            path.i[i][1] += path.v[i][1];\r\n            path.o[i][0] += path.v[i][0];\r\n            path.o[i][1] += path.v[i][1];\r\n        }\r\n    }\r\n\r\n    function checkVersion(minimum,animVersionString){\r\n        var animVersion = animVersionString ? animVersionString.split('.') : [100,100,100];\r\n        if(minimum[0]>animVersion[0]){\r\n            return true;\r\n        } else if(animVersion[0] > minimum[0]){\r\n            return false;\r\n        }\r\n        if(minimum[1]>animVersion[1]){\r\n            return true;\r\n        } else if(animVersion[1] > minimum[1]){\r\n            return false;\r\n        }\r\n        if(minimum[2]>animVersion[2]){\r\n            return true;\r\n        } else if(animVersion[2] > minimum[2]){\r\n            return false;\r\n        }\r\n    }\r\n\r\n    var checkText = (function(){\r\n        var minimumVersion = [4,4,14];\r\n\r\n        function updateTextLayer(textLayer){\r\n            var documentData = textLayer.t.d;\r\n            textLayer.t.d = {\r\n                k: [\r\n                    {\r\n                        s:documentData,\r\n                        t:0\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var i, len = layers.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(layers[i].ty === 5){\r\n                    updateTextLayer(layers[i]);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }())\r\n\r\n    var checkChars = (function() {\r\n        var minimumVersion = [4,7,99];\r\n        return function (animationData){\r\n            if(animationData.chars && !checkVersion(minimumVersion,animationData.v)){\r\n                var i, len = animationData.chars.length, j, jLen, k, kLen;\r\n                var pathData, paths;\r\n                for(i = 0; i < len; i += 1) {\r\n                    if(animationData.chars[i].data && animationData.chars[i].data.shapes) {\r\n                        paths = animationData.chars[i].data.shapes[0].it;\r\n                        jLen = paths.length;\r\n\r\n                        for(j = 0; j < jLen; j += 1) {\r\n                            pathData = paths[j].ks.k;\r\n                            if(!pathData.__converted) {\r\n                                convertPathsToAbsoluteValues(paths[j].ks.k);\r\n                                pathData.__converted = true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }())\r\n\r\n    var checkColors = (function(){\r\n        var minimumVersion = [4,1,9];\r\n\r\n        function iterateShapes(shapes){\r\n            var i, len = shapes.length;\r\n            var j, jLen;\r\n            for(i=0;i<len;i+=1){\r\n                if(shapes[i].ty === 'gr'){\r\n                    iterateShapes(shapes[i].it);\r\n                }else if(shapes[i].ty === 'fl' || shapes[i].ty === 'st'){\r\n                    if(shapes[i].c.k && shapes[i].c.k[0].i){\r\n                        jLen = shapes[i].c.k.length;\r\n                        for(j=0;j<jLen;j+=1){\r\n                            if(shapes[i].c.k[j].s){\r\n                                shapes[i].c.k[j].s[0] /= 255;\r\n                                shapes[i].c.k[j].s[1] /= 255;\r\n                                shapes[i].c.k[j].s[2] /= 255;\r\n                                shapes[i].c.k[j].s[3] /= 255;\r\n                            }\r\n                            if(shapes[i].c.k[j].e){\r\n                                shapes[i].c.k[j].e[0] /= 255;\r\n                                shapes[i].c.k[j].e[1] /= 255;\r\n                                shapes[i].c.k[j].e[2] /= 255;\r\n                                shapes[i].c.k[j].e[3] /= 255;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        shapes[i].c.k[0] /= 255;\r\n                        shapes[i].c.k[1] /= 255;\r\n                        shapes[i].c.k[2] /= 255;\r\n                        shapes[i].c.k[3] /= 255;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var i, len = layers.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(layers[i].ty === 4){\r\n                    iterateShapes(layers[i].shapes);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }());\r\n\r\n    var checkShapes = (function(){\r\n        var minimumVersion = [4,4,18];\r\n\r\n\r\n\r\n        function completeShapes(arr){\r\n            var i, len = arr.length;\r\n            var j, jLen;\r\n            var hasPaths = false;\r\n            for(i=len-1;i>=0;i-=1){\r\n                if(arr[i].ty == 'sh'){\r\n                    if(arr[i].ks.k.i){\r\n                        arr[i].ks.k.c = arr[i].closed;\r\n                    }else{\r\n                        jLen = arr[i].ks.k.length;\r\n                        for(j=0;j<jLen;j+=1){\r\n                            if(arr[i].ks.k[j].s){\r\n                                arr[i].ks.k[j].s[0].c = arr[i].closed;\r\n                            }\r\n                            if(arr[i].ks.k[j].e){\r\n                                arr[i].ks.k[j].e[0].c = arr[i].closed;\r\n                            }\r\n                        }\r\n                    }\r\n                    hasPaths = true;\r\n                }else if(arr[i].ty == 'gr'){\r\n                    completeShapes(arr[i].it);\r\n                }\r\n            }\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var layerData;\r\n            var i, len = layers.length;\r\n            var j, jLen, k, kLen;\r\n            for(i=0;i<len;i+=1){\r\n                layerData = layers[i];\r\n                if(layerData.hasMask){\r\n                    var maskProps = layerData.masksProperties;\r\n                    jLen = maskProps.length;\r\n                    for(j=0;j<jLen;j+=1){\r\n                        if(maskProps[j].pt.k.i){\r\n                            maskProps[j].pt.k.c = maskProps[j].cl;\r\n                        }else{\r\n                            kLen = maskProps[j].pt.k.length;\r\n                            for(k=0;k<kLen;k+=1){\r\n                                if(maskProps[j].pt.k[k].s){\r\n                                    maskProps[j].pt.k[k].s[0].c = maskProps[j].cl;\r\n                                }\r\n                                if(maskProps[j].pt.k[k].e){\r\n                                    maskProps[j].pt.k[k].e[0].c = maskProps[j].cl;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if(layerData.ty === 4){\r\n                    completeShapes(layerData.shapes);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }());\r\n\r\n    /*function blitPaths(path){\r\n        var i, len = path.i.length;\r\n        for(i=0;i<len;i+=1){\r\n            path.i[i][0] /= blitter;\r\n            path.i[i][1] /= blitter;\r\n            path.o[i][0] /= blitter;\r\n            path.o[i][1] /= blitter;\r\n            path.v[i][0] /= blitter;\r\n            path.v[i][1] /= blitter;\r\n        }\r\n    }\r\n\r\n    function blitShapes(arr){\r\n        var i, len = arr.length;\r\n        var j, jLen;\r\n        var hasPaths = false;\r\n        for(i=len-1;i>=0;i-=1){\r\n            if(arr[i].ty == 'sh'){\r\n                if(arr[i].ks.k.i){\r\n                    blitPaths(arr[i].ks.k);\r\n                }else{\r\n                    jLen = arr[i].ks.k.length;\r\n                    for(j=0;j<jLen;j+=1){\r\n                        if(arr[i].ks.k[j].s){\r\n                            blitPaths(arr[i].ks.k[j].s[0]);\r\n                        }\r\n                        if(arr[i].ks.k[j].e){\r\n                            blitPaths(arr[i].ks.k[j].e[0]);\r\n                        }\r\n                    }\r\n                }\r\n                hasPaths = true;\r\n            }else if(arr[i].ty == 'gr'){\r\n                blitShapes(arr[i].it);\r\n            }else if(arr[i].ty == 'rc'){\r\n                blitProperty(arr[i].p);\r\n                blitProperty(arr[i].s);\r\n            }else if(arr[i].ty == 'st'){\r\n                blitProperty(arr[i].w);\r\n            }else if(arr[i].ty == 'tr'){\r\n                blitProperty(arr[i].p);\r\n                blitProperty(arr[i].sk);\r\n                blitProperty(arr[i].a);\r\n            }else if(arr[i].ty == 'el'){\r\n                blitProperty(arr[i].p);\r\n                blitProperty(arr[i].s);\r\n            }else if(arr[i].ty == 'rd'){\r\n                blitProperty(arr[i].r);\r\n            }else{\r\n\r\n                //console.log(arr[i].ty );\r\n            }\r\n        }\r\n    }\r\n\r\n    function blitText(data, fontManager){\r\n\r\n    }\r\n\r\n    function blitValue(val){\r\n        if(typeof(val) === 'number'){\r\n            val /= blitter;\r\n        } else {\r\n            var i = val.length-1;\r\n            while(i>=0){\r\n                val[i] /= blitter;\r\n                i-=1;\r\n            }\r\n        }\r\n        return val;\r\n    }\r\n\r\n    function blitProperty(data){\r\n        if(!data.k.length){\r\n            data.k = blitValue(data.k);\r\n        }else if(typeof(data.k[0]) === 'number'){\r\n            data.k = blitValue(data.k);\r\n        } else {\r\n            var i, len = data.k.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(data.k[i].s){\r\n                    //console.log('pre S: ', data.k[i].s);\r\n                    data.k[i].s = blitValue(data.k[i].s);\r\n                    //console.log('post S: ', data.k[i].s);\r\n                }\r\n                if(data.k[i].e){\r\n                    //console.log('pre E: ', data.k[i].e);\r\n                    data.k[i].e = blitValue(data.k[i].e);\r\n                    //console.log('post E: ', data.k[i].e);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function blitLayers(layers,comps, fontManager){\r\n        var layerData;\r\n        var animArray, lastFrame;\r\n        var i, len = layers.length;\r\n        var j, jLen, k, kLen;\r\n        for(i=0;i<len;i+=1){\r\n            layerData = layers[i];\r\n            if(!('ks' in layerData)){\r\n                continue;\r\n            }\r\n            blitProperty(layerData.ks.a);\r\n            blitProperty(layerData.ks.p);\r\n            layerData.completed = true;\r\n            if(layerData.tt){\r\n                layers[i-1].td = layerData.tt;\r\n            }\r\n            animArray = [];\r\n            lastFrame = -1;\r\n            if(layerData.hasMask){\r\n                var maskProps = layerData.masksProperties;\r\n                jLen = maskProps.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    if(maskProps[j].pt.k.i){\r\n                        blitPaths(maskProps[j].pt.k);\r\n                    }else{\r\n                        kLen = maskProps[j].pt.k.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            if(maskProps[j].pt.k[k].s){\r\n                                blitPaths(maskProps[j].pt.k[k].s[0]);\r\n                            }\r\n                            if(maskProps[j].pt.k[k].e){\r\n                                blitPaths(maskProps[j].pt.k[k].e[0]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(layerData.ty===0){\r\n                layerData.w = Math.round(layerData.w/blitter);\r\n                layerData.h = Math.round(layerData.h/blitter);\r\n                blitLayers(layerData.layers,comps, fontManager);\r\n            }else if(layerData.ty === 4){\r\n                blitShapes(layerData.shapes);\r\n            }else if(layerData.ty == 5){\r\n                blitText(layerData, fontManager);\r\n            }else if(layerData.ty == 1){\r\n                layerData.sh /= blitter;\r\n                layerData.sw /= blitter;\r\n            } else {\r\n            }\r\n        }\r\n    }\r\n\r\n    function blitAnimation(animationData,comps, fontManager){\r\n        blitLayers(animationData.layers,comps, fontManager);\r\n    }*/\r\n\r\n    function completeData(animationData, fontManager){\r\n        if(animationData.__complete){\r\n            return;\r\n        }\r\n        checkColors(animationData);\r\n        checkText(animationData);\r\n        checkChars(animationData);\r\n        checkShapes(animationData);\r\n        completeLayers(animationData.layers, animationData.assets, fontManager);\r\n        animationData.__complete = true;\r\n        //blitAnimation(animationData, animationData.assets, fontManager);\r\n    }\r\n\r\n    function completeText(data, fontManager){\r\n        if(data.t.a.length === 0 && !('m' in data.t.p)){\r\n            data.singleShape = true;\r\n        }\r\n    }\r\n\r\n    var moduleOb = {};\r\n    moduleOb.completeData = completeData;\r\n\r\n    return moduleOb;\r\n}\r\n\r\nvar dataManager = dataFunctionManager();\nvar FontManager = (function(){\r\n\r\n    var maxWaitingTime = 5000;\r\n\r\n    function setUpNode(font, family){\r\n        var parentNode = document.createElement('span');\r\n        parentNode.style.fontFamily    = family;\r\n        var node = document.createElement('span');\r\n        // Characters that vary significantly among different fonts\r\n        node.innerHTML = 'giItT1WQy@!-/#';\r\n        // Visible - so we can measure it - but not on the screen\r\n        parentNode.style.position      = 'absolute';\r\n        parentNode.style.left          = '-10000px';\r\n        parentNode.style.top           = '-10000px';\r\n        // Large font size makes even subtle changes obvious\r\n        parentNode.style.fontSize      = '300px';\r\n        // Reset any font properties\r\n        parentNode.style.fontVariant   = 'normal';\r\n        parentNode.style.fontStyle     = 'normal';\r\n        parentNode.style.fontWeight    = 'normal';\r\n        parentNode.style.letterSpacing = '0';\r\n        parentNode.appendChild(node);\r\n        document.body.appendChild(parentNode);\r\n\r\n        // Remember width with no applied web font\r\n        var width = node.offsetWidth;\r\n        node.style.fontFamily = font + ', '+family;\r\n        return {node:node, w:width, parent:parentNode};\r\n    }\r\n\r\n    function checkLoadedFonts() {\r\n        var i, len = this.fonts.length;\r\n        var node, w;\r\n        var loadedCount = len;\r\n        for(i=0;i<len; i+= 1){\r\n            if(this.fonts[i].loaded){\r\n                loadedCount -= 1;\r\n                continue;\r\n            }\r\n            if(this.fonts[i].fOrigin === 't' || this.fonts[i].origin === 2){\r\n                if(window.Typekit && window.Typekit.load && this.typekitLoaded === 0){\r\n                    this.typekitLoaded = 1;\r\n                    try{window.Typekit.load({\r\n                        async: true,\r\n                        active: function() {\r\n                            this.typekitLoaded = 2;\r\n                        }.bind(this)\r\n                    });}catch(e){}\r\n                }\r\n                if(this.typekitLoaded === 2) {\r\n                    this.fonts[i].loaded = true;\r\n                }\r\n            } else if(this.fonts[i].fOrigin === 'n' || this.fonts[i].origin === 0){\r\n                this.fonts[i].loaded = true;\r\n            } else{\r\n                node = this.fonts[i].monoCase.node;\r\n                w = this.fonts[i].monoCase.w;\r\n                if(node.offsetWidth !== w){\r\n                    loadedCount -= 1;\r\n                    this.fonts[i].loaded = true;\r\n                }else{\r\n                    node = this.fonts[i].sansCase.node;\r\n                    w = this.fonts[i].sansCase.w;\r\n                    if(node.offsetWidth !== w){\r\n                        loadedCount -= 1;\r\n                        this.fonts[i].loaded = true;\r\n                    }\r\n                }\r\n                if(this.fonts[i].loaded){\r\n                    this.fonts[i].sansCase.parent.parentNode.removeChild(this.fonts[i].sansCase.parent);\r\n                    this.fonts[i].monoCase.parent.parentNode.removeChild(this.fonts[i].monoCase.parent);\r\n                }\r\n            }\r\n        }\r\n\r\n        if(loadedCount !== 0 && Date.now() - this.initTime < maxWaitingTime){\r\n            setTimeout(checkLoadedFonts.bind(this),20);\r\n        }else{\r\n            setTimeout(function(){this.loaded = true;}.bind(this),0);\r\n\r\n        }\r\n    };\r\n\r\n    function createHelper(def, fontData){\r\n        var tHelper = document.createElementNS(svgNS,'text');\r\n        tHelper.style.fontSize = '100px';\r\n        tHelper.style.fontFamily = fontData.fFamily;\r\n        tHelper.textContent = '1';\r\n        if(fontData.fClass){\r\n            tHelper.style.fontFamily = 'inherit';\r\n            tHelper.className = fontData.fClass;\r\n        } else {\r\n            tHelper.style.fontFamily = fontData.fFamily;\r\n        }\r\n        def.appendChild(tHelper);\r\n        var tCanvasHelper = document.createElement('canvas').getContext('2d');\r\n        tCanvasHelper.font = '100px '+ fontData.fFamily;\r\n        return tCanvasHelper;\r\n    }\r\n\r\n    function addFonts(fontData, defs){\r\n        if(!fontData){\r\n            this.loaded = true;\r\n            return;\r\n        }\r\n        if(this.chars){\r\n            this.loaded = true;\r\n            this.fonts = fontData.list;\r\n            return;\r\n        }\r\n\r\n        var fontArr = fontData.list;\r\n        var i, len = fontArr.length;\r\n        for(i=0; i<len; i+= 1){\r\n            fontArr[i].loaded = false;\r\n            fontArr[i].monoCase = setUpNode(fontArr[i].fFamily,'monospace');\r\n            fontArr[i].sansCase = setUpNode(fontArr[i].fFamily,'sans-serif');\r\n            if(!fontArr[i].fPath) {\r\n                fontArr[i].loaded = true;\r\n            }else if(fontArr[i].fOrigin === 'p' || fontArr[i].origin === 3){\r\n                var s = document.createElement('style');\r\n                s.type = \"text/css\";\r\n                s.innerHTML = \"@font-face {\" + \"font-family: \"+fontArr[i].fFamily+\"; font-style: normal; src: url('\"+fontArr[i].fPath+\"');}\";\r\n                defs.appendChild(s);\r\n            } else if(fontArr[i].fOrigin === 'g' || fontArr[i].origin === 1){\r\n                //<link href='https://fonts.googleapis.com/css?family=Montserrat' rel='stylesheet' type='text/css'>\r\n                var l = document.createElement('link');\r\n                l.type = \"text/css\";\r\n                l.rel = \"stylesheet\";\r\n                l.href = fontArr[i].fPath;\r\n                defs.appendChild(l);\r\n            } else if(fontArr[i].fOrigin === 't' || fontArr[i].origin === 2){\r\n                //<link href='https://fonts.googleapis.com/css?family=Montserrat' rel='stylesheet' type='text/css'>\r\n                var sc = document.createElement('script');\r\n                sc.setAttribute('src',fontArr[i].fPath);\r\n                defs.appendChild(sc);\r\n            }\r\n            fontArr[i].helper = createHelper(defs,fontArr[i]);\r\n            this.fonts.push(fontArr[i]);\r\n        }\r\n        checkLoadedFonts.bind(this)();\r\n    }\r\n\r\n    function addChars(chars){\r\n        if(!chars){\r\n            return;\r\n        }\r\n        if(!this.chars){\r\n            this.chars = [];\r\n        }\r\n        var i, len = chars.length;\r\n        var j, jLen = this.chars.length, found;\r\n        for(i=0;i<len;i+=1){\r\n            j = 0;\r\n            found = false;\r\n            while(j<jLen){\r\n                if(this.chars[j].style === chars[i].style && this.chars[j].fFamily === chars[i].fFamily && this.chars[j].ch === chars[i].ch){\r\n                    found = true;\r\n                }\r\n                j += 1;\r\n            }\r\n            if(!found){\r\n                this.chars.push(chars[i]);\r\n                jLen += 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    function getCharData(char, style, font){\r\n        var i = 0, len = this.chars.length;\r\n        while( i < len) {\r\n            if(this.chars[i].ch === char && this.chars[i].style === style && this.chars[i].fFamily === font){\r\n                return this.chars[i];\r\n            }\r\n            i+= 1;\r\n        }\r\n    }\r\n\r\n    function measureText(char, fontName, size){\r\n        var fontData = this.getFontByName(fontName);\r\n        var tHelper = fontData.helper;\r\n        //tHelper.textContent = char;\r\n        return tHelper.measureText(char).width*size/100;\r\n        //return tHelper.getComputedTextLength()*size/100;\r\n    }\r\n\r\n    function getFontByName(name){\r\n        var i = 0, len = this.fonts.length;\r\n        while(i<len){\r\n            if(this.fonts[i].fName === name) {\r\n                return this.fonts[i];\r\n            }\r\n            i += 1;\r\n        }\r\n        return 'sans-serif';\r\n    }\r\n\r\n    var Font = function(){\r\n        this.fonts = [];\r\n        this.chars = null;\r\n        this.typekitLoaded = 0;\r\n        this.loaded = false;\r\n        this.initTime = Date.now();\r\n    };\r\n    Font.prototype.addChars = addChars;\r\n    Font.prototype.addFonts = addFonts;\r\n    Font.prototype.getCharData = getCharData;\r\n    Font.prototype.getFontByName = getFontByName;\r\n    Font.prototype.measureText = measureText;\r\n\r\n    return Font;\r\n\r\n}());\nvar PropertyFactory = (function(){\r\n\r\n    var initFrame = -999999;\r\n\r\n    function interpolateValue(frameNum, iterationIndex, previousValue, caching){\r\n        var offsetTime = this.offsetTime;\r\n        var newValue;\r\n        if(previousValue.constructor === Array) {\r\n            newValue = Array.apply(null,{length:previousValue.length})\r\n        }\r\n        var i = iterationIndex;\r\n        var len = this.keyframes.length- 1,flag = true;\r\n        var keyData, nextKeyData;\r\n\r\n        while(flag){\r\n            keyData = this.keyframes[i];\r\n            nextKeyData = this.keyframes[i+1];\r\n            if(i == len-1 && frameNum >= nextKeyData.t - offsetTime){\r\n                if(keyData.h){\r\n                    keyData = nextKeyData;\r\n                }\r\n                iterationIndex = 0;\r\n                break;\r\n            }\r\n            if((nextKeyData.t - offsetTime) > frameNum){\r\n                iterationIndex = i;\r\n                break;\r\n            }\r\n            if(i < len - 1){\r\n                i += 1;\r\n            }else{\r\n                iterationIndex = 0;\r\n                flag = false;\r\n            }\r\n        }\r\n\r\n        var k, kLen,perc,jLen, j, fnc;\r\n        if(keyData.to){\r\n\r\n            if(!keyData.bezierData){\r\n                bez.buildBezierData(keyData);\r\n            }\r\n            var bezierData = keyData.bezierData;\r\n            if(frameNum >= nextKeyData.t-offsetTime || frameNum < keyData.t-offsetTime){\r\n                var ind = frameNum >= nextKeyData.t-offsetTime ? bezierData.points.length - 1 : 0;\r\n                kLen = bezierData.points[ind].point.length;\r\n                for(k = 0; k < kLen; k += 1){\r\n                    newValue[k] = bezierData.points[ind].point[k];\r\n                }\r\n                caching._lastBezierData = null;\r\n            }else{\r\n                if(keyData.__fnct){\r\n                    fnc = keyData.__fnct;\r\n                }else{\r\n                    fnc = BezierFactory.getBezierEasing(keyData.o.x,keyData.o.y,keyData.i.x,keyData.i.y,keyData.n).get;\r\n                    keyData.__fnct = fnc;\r\n                }\r\n                perc = fnc((frameNum-(keyData.t-offsetTime))/((nextKeyData.t-offsetTime)-(keyData.t-offsetTime)));\r\n                var distanceInLine = bezierData.segmentLength*perc;\r\n\r\n                var segmentPerc;\r\n                var addedLength =  (caching.lastFrame < frameNum && caching._lastBezierData === bezierData) ? caching._lastAddedLength : 0;\r\n                j =  (caching.lastFrame < frameNum && caching._lastBezierData === bezierData) ? caching._lastPoint : 0;\r\n                flag = true;\r\n                jLen = bezierData.points.length;\r\n                while(flag){\r\n                    addedLength +=bezierData.points[j].partialLength;\r\n                    if(distanceInLine === 0 || perc === 0 || j == bezierData.points.length - 1){\r\n                        kLen = bezierData.points[j].point.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            newValue[k] = bezierData.points[j].point[k];\r\n                        }\r\n                        break;\r\n                    }else if(distanceInLine >= addedLength && distanceInLine < addedLength + bezierData.points[j+1].partialLength){\r\n                        segmentPerc = (distanceInLine-addedLength)/(bezierData.points[j+1].partialLength);\r\n                        kLen = bezierData.points[j].point.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            newValue[k] = bezierData.points[j].point[k] + (bezierData.points[j+1].point[k] - bezierData.points[j].point[k])*segmentPerc;\r\n                        }\r\n                        break;\r\n                    }\r\n                    if(j < jLen - 1){\r\n                        j += 1;\r\n                    }else{\r\n                        flag = false;\r\n                    }\r\n                }\r\n                caching._lastPoint = j;\r\n                caching._lastAddedLength = addedLength - bezierData.points[j].partialLength;\r\n                caching._lastBezierData = bezierData;\r\n            }\r\n        }else{\r\n            var outX,outY,inX,inY, keyValue;\r\n            len = keyData.s.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(keyData.h !== 1){\r\n                    if(frameNum >= nextKeyData.t-offsetTime){\r\n                        perc = 1;\r\n                    }else if(frameNum < keyData.t-offsetTime){\r\n                        perc = 0;\r\n                    }else{\r\n                        if(keyData.o.x.constructor === Array){\r\n                            if(!keyData.__fnct){\r\n                                keyData.__fnct = [];\r\n                            }\r\n                            if (!keyData.__fnct[i]) {\r\n                                outX = keyData.o.x[i] || keyData.o.x[0];\r\n                                outY = keyData.o.y[i] || keyData.o.y[0];\r\n                                inX = keyData.i.x[i] || keyData.i.x[0];\r\n                                inY = keyData.i.y[i] || keyData.i.y[0];\r\n                                fnc = BezierFactory.getBezierEasing(outX,outY,inX,inY).get;\r\n                                keyData.__fnct[i] = fnc;\r\n                            } else {\r\n                                fnc = keyData.__fnct[i];\r\n                            }\r\n                        } else {\r\n                            if (!keyData.__fnct) {\r\n                                outX = keyData.o.x;\r\n                                outY = keyData.o.y;\r\n                                inX = keyData.i.x;\r\n                                inY = keyData.i.y;\r\n                                fnc = BezierFactory.getBezierEasing(outX,outY,inX,inY).get;\r\n                                keyData.__fnct = fnc;\r\n                            } else{\r\n                                fnc = keyData.__fnct;\r\n                            }\r\n                        }\r\n                        perc = fnc((frameNum-(keyData.t-offsetTime))/((nextKeyData.t-offsetTime)-(keyData.t-offsetTime)));\r\n                    }\r\n                }\r\n                if(this.sh && keyData.h !== 1){\r\n                    var initP = keyData.s[i];\r\n                    var endP = keyData.e[i];\r\n                    if(initP-endP < -180){\r\n                        initP += 360;\r\n                    } else if(initP-endP > 180){\r\n                        initP -= 360;\r\n                    }\r\n                    keyValue = initP+(endP-initP)*perc;\r\n                } else {\r\n                    keyValue = keyData.h === 1 ? keyData.s[i] : keyData.s[i]+(keyData.e[i]-keyData.s[i])*perc;\r\n                }\r\n                if(len === 1){\r\n                    newValue = keyValue;\r\n                }else{\r\n                    newValue[i] = keyValue;\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            value: newValue,\r\n            iterationIndex: iterationIndex\r\n        }\r\n    }\r\n\r\n    function getValueAtCurrentTime(){\r\n        if(this.elem.globalData.frameId === this.frameId){\r\n            return;\r\n        }\r\n        this.mdf = false;\r\n        var frameNum = this.comp.renderedFrame - this.offsetTime;\r\n        var initTime = this.keyframes[0].t-this.offsetTime;\r\n        var endTime = this.keyframes[this.keyframes.length- 1].t-this.offsetTime;\r\n        if(!(frameNum === this._caching.lastFrame || (this._caching.lastFrame !== initFrame && ((this._caching.lastFrame >= endTime && frameNum >= endTime) || (this._caching.lastFrame < initTime && frameNum < initTime))))){\r\n            var i = this._caching.lastFrame < frameNum ? this._caching.lastIndex : 0;\r\n            var renderResult = this.interpolateValue(frameNum, i, this.pv, this._caching);\r\n            this._caching.lastIndex = renderResult.iterationIndex;\r\n            if(this.pv.constructor === Array){\r\n                i = 0;\r\n                while(i<this.v.length){\r\n                    this.pv[i] = renderResult.value[i];\r\n                    this.v[i] = this.mult ? this.pv[i] * this.mult : this.pv[i];\r\n                    if(this.lastPValue[i] !== this.pv[i]) {\r\n                        this.mdf = true;\r\n                        this.lastPValue[i] = this.pv[i];\r\n                    }\r\n                    i += 1;\r\n                }\r\n            } else {\r\n                this.pv = renderResult.value;\r\n                this.v = this.mult ? this.pv*this.mult : this.pv;\r\n                if(this.lastPValue != this.pv){\r\n                    this.mdf = true;\r\n                    this.lastPValue = this.pv;\r\n                }\r\n            }\r\n            \r\n        }\r\n        this._caching.lastFrame = frameNum;\r\n        this.frameId = this.elem.globalData.frameId;\r\n    }\r\n\r\n    function getNoValue(){}\r\n\r\n    function ValueProperty(elem,data, mult){\r\n        this.mult = mult;\r\n        this.v = mult ? data.k * mult : data.k;\r\n        this.pv = data.k;\r\n        this.mdf = false;\r\n        this.comp = elem.comp;\r\n        this.k = false;\r\n        this.kf = false;\r\n        this.vel = 0;\r\n        this.getValue = getNoValue;\r\n    }\r\n\r\n    function MultiDimensionalProperty(elem,data, mult){\r\n        this.mult = mult;\r\n        this.data = data;\r\n        this.mdf = false;\r\n        this.comp = elem.comp;\r\n        this.k = false;\r\n        this.kf = false;\r\n        this.frameId = -1;\r\n        this.v = Array.apply(null, {length:data.k.length});\r\n        this.pv = Array.apply(null, {length:data.k.length});\r\n        this.lastValue = Array.apply(null, {length:data.k.length});\r\n        var arr = Array.apply(null, {length:data.k.length});\r\n        this.vel = arr.map(function () { return 0 });\r\n        var i, len = data.k.length;\r\n        for(i = 0;i<len;i+=1){\r\n            this.v[i] = mult ? data.k[i] * mult : data.k[i];\r\n            this.pv[i] = data.k[i];\r\n        }\r\n        this.getValue = getNoValue;\r\n    }\r\n\r\n    function KeyframedValueProperty(elem, data, mult){\r\n        this.keyframes = data.k;\r\n        this.offsetTime = elem.data.st;\r\n        this.lastValue = -99999;\r\n        this.lastPValue = -99999;\r\n        this.frameId = -1;\r\n        this._caching={lastFrame:initFrame,lastIndex:0};\r\n        this.k = true;\r\n        this.kf = true;\r\n        this.data = data;\r\n        this.mult = mult;\r\n        this.elem = elem;\r\n        this.comp = elem.comp;\r\n        this.v = mult ? data.k[0].s[0]*mult : data.k[0].s[0];\r\n        this.pv = data.k[0].s[0];\r\n        this.getValue = getValueAtCurrentTime;\r\n        this.interpolateValue = interpolateValue;\r\n    }\r\n\r\n    function KeyframedMultidimensionalProperty(elem, data, mult){\r\n        var i, len = data.k.length;\r\n        var s, e,to,ti;\r\n        for(i=0;i<len-1;i+=1){\r\n            if(data.k[i].to && data.k[i].s && data.k[i].e){\r\n                s = data.k[i].s;\r\n                e = data.k[i].e;\r\n                to = data.k[i].to;\r\n                ti = data.k[i].ti;\r\n                if((s.length === 2 && !(s[0] === e[0] && s[1] === e[1]) && bez.pointOnLine2D(s[0],s[1],e[0],e[1],s[0] + to[0],s[1] + to[1]) && bez.pointOnLine2D(s[0],s[1],e[0],e[1],e[0] + ti[0],e[1] + ti[1])) || (s.length === 3 && !(s[0] === e[0] && s[1] === e[1] && s[2] === e[2]) && bez.pointOnLine3D(s[0],s[1],s[2],e[0],e[1],e[2],s[0] + to[0],s[1] + to[1],s[2] + to[2]) && bez.pointOnLine3D(s[0],s[1],s[2],e[0],e[1],e[2],e[0] + ti[0],e[1] + ti[1],e[2] + ti[2]))){\r\n                    data.k[i].to = null;\r\n                    data.k[i].ti = null;\r\n                }\r\n            }\r\n        }\r\n        this.keyframes = data.k;\r\n        this.offsetTime = elem.data.st;\r\n        this.k = true;\r\n        this.kf = true;\r\n        this.mult = mult;\r\n        this.elem = elem;\r\n        this.comp = elem.comp;\r\n        this._caching={lastFrame:initFrame,lastIndex:0};\r\n        this.getValue = getValueAtCurrentTime;\r\n        this.interpolateValue = interpolateValue;\r\n        this.frameId = -1;\r\n        this.v = Array.apply(null, {length:data.k[0].s.length});\r\n        this.pv = Array.apply(null, {length:data.k[0].s.length});\r\n        this.lastValue = Array.apply(null, {length:data.k[0].s.length});\r\n        this.lastPValue = Array.apply(null, {length:data.k[0].s.length});\r\n    }\r\n\r\n    var TransformProperty = (function() {\r\n        function positionGetter() {\r\n            if(this.p) {\r\n                return ExpressionValue(this.p);\r\n            } else {\r\n                return [this.px.v, this.py.v, this.pz ? this.pz.v : 0];\r\n            }\r\n        }\r\n        function xPositionGetter() {\r\n            return ExpressionValue(this.px);\r\n        }\r\n        function yPositionGetter() {\r\n            return ExpressionValue(this.py);\r\n        }\r\n        function zPositionGetter() {\r\n            return ExpressionValue(this.pz);\r\n        }\r\n        function anchorGetter() {\r\n            return ExpressionValue(this.a);\r\n        }\r\n        function orientationGetter() {\r\n            return ExpressionValue(this.or);\r\n        }\r\n        function rotationGetter() {\r\n            if(this.r) {\r\n                return ExpressionValue(this.r, 1/degToRads);\r\n            } else {\r\n                return ExpressionValue(this.rz, 1/degToRads);\r\n            }\r\n        }\r\n        function scaleGetter() {\r\n            return ExpressionValue(this.s, 100);\r\n        }\r\n        function opacityGetter() {\r\n            return ExpressionValue(this.o, 100);\r\n        }\r\n        function skewGetter() {\r\n            return ExpressionValue(this.sk);\r\n        }\r\n        function skewAxisGetter() {\r\n            return ExpressionValue(this.sa);\r\n        }\r\n        function applyToMatrix(mat) {\r\n            var i, len = this.dynamicProperties.length;\r\n            for(i = 0; i < len; i += 1) {\r\n                this.dynamicProperties[i].getValue();\r\n                if (this.dynamicProperties[i].mdf) {\r\n                    this.mdf = true;\r\n                }\r\n            }\r\n            if (this.a) {\r\n                mat.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n            }\r\n            if (this.s) {\r\n                mat.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n            }\r\n            if (this.r) {\r\n                mat.rotate(-this.r.v);\r\n            } else {\r\n                mat.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n            }\r\n            if (this.data.p.s) {\r\n                if (this.data.p.z) {\r\n                    mat.translate(this.px.v, this.py.v, -this.pz.v);\r\n                } else {\r\n                    mat.translate(this.px.v, this.py.v, 0);\r\n                }\r\n            } else {\r\n                mat.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);\r\n            }\r\n        }\r\n        function processKeys(){\r\n            if (this.elem.globalData.frameId === this.frameId) {\r\n                return;\r\n            }\r\n\r\n            this.mdf = false;\r\n            var i, len = this.dynamicProperties.length;\r\n\r\n            for(i = 0; i < len; i += 1) {\r\n                this.dynamicProperties[i].getValue();\r\n                if (this.dynamicProperties[i].mdf) {\r\n                    this.mdf = true;\r\n                }\r\n            }\r\n            if (this.mdf) {\r\n                this.v.reset();\r\n                if (this.a) {\r\n                    this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n                }\r\n                if(this.s) {\r\n                    this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n                }\r\n                if (this.sk) {\r\n                    this.v.skewFromAxis(-this.sk.v, this.sa.v);\r\n                }\r\n                if (this.r) {\r\n                    this.v.rotate(-this.r.v);\r\n                } else {\r\n                    this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n                }\r\n                if (this.autoOriented && this.p.keyframes && this.p.getValueAtTime) {\r\n                    var v1,v2;\r\n                    if (this.p._caching.lastFrame+this.p.offsetTime <= this.p.keyframes[0].t) {\r\n                        v1 = this.p.getValueAtTime((this.p.keyframes[0].t + 0.01) / this.elem.globalData.frameRate,0);\r\n                        v2 = this.p.getValueAtTime(this.p.keyframes[0].t / this.elem.globalData.frameRate, 0);\r\n                    } else if(this.p._caching.lastFrame+this.p.offsetTime >= this.p.keyframes[this.p.keyframes.length - 1].t) {\r\n                        v1 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t / this.elem.globalData.frameRate), 0);\r\n                        v2 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t - 0.01) / this.elem.globalData.frameRate, 0);\r\n                    } else {\r\n                        v1 = this.p.pv;\r\n                        v2 = this.p.getValueAtTime((this.p._caching.lastFrame+this.p.offsetTime - 0.01) / this.elem.globalData.frameRate, this.p.offsetTime);\r\n                    }\r\n                    this.v.rotate(-Math.atan2(v1[1] - v2[1], v1[0] - v2[0]));\r\n                }\r\n                if(this.data.p.s){\r\n                    if(this.data.p.z) {\r\n                        this.v.translate(this.px.v, this.py.v, -this.pz.v);\r\n                    } else {\r\n                        this.v.translate(this.px.v, this.py.v, 0);\r\n                    }\r\n                }else{\r\n                    this.v.translate(this.p.v[0],this.p.v[1],-this.p.v[2]);\r\n                }\r\n            }\r\n            this.frameId = this.elem.globalData.frameId;\r\n        }\r\n\r\n        function setInverted(){\r\n            this.inverted = true;\r\n            this.iv = new Matrix();\r\n            if(!this.k){\r\n                if(this.data.p.s){\r\n                    this.iv.translate(this.px.v,this.py.v,-this.pz.v);\r\n                }else{\r\n                    this.iv.translate(this.p.v[0],this.p.v[1],-this.p.v[2]);\r\n                }\r\n                if(this.r){\r\n                    this.iv.rotate(-this.r.v);\r\n                }else{\r\n                    this.iv.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v);\r\n                }\r\n                if(this.s){\r\n                    this.iv.scale(this.s.v[0],this.s.v[1],1);\r\n                }\r\n                if(this.a){\r\n                    this.iv.translate(-this.a.v[0],-this.a.v[1],this.a.v[2]);\r\n                }\r\n            }\r\n        }\r\n\r\n        function autoOrient(){\r\n            //\r\n            //var prevP = this.getValueAtTime();\r\n        }\r\n\r\n        return function TransformProperty(elem,data,arr){\r\n            this.elem = elem;\r\n            this.frameId = -1;\r\n            this.type = 'transform';\r\n            this.dynamicProperties = [];\r\n            this.mdf = false;\r\n            this.data = data;\r\n            this.getValue = processKeys;\r\n            this.applyToMatrix = applyToMatrix;\r\n            this.setInverted = setInverted;\r\n            this.autoOrient = autoOrient;\r\n            this.v = new Matrix();\r\n            if(data.p.s){\r\n                this.px = PropertyFactory.getProp(elem,data.p.x,0,0,this.dynamicProperties);\r\n                this.py = PropertyFactory.getProp(elem,data.p.y,0,0,this.dynamicProperties);\r\n                if(data.p.z){\r\n                    this.pz = PropertyFactory.getProp(elem,data.p.z,0,0,this.dynamicProperties);\r\n                }\r\n            }else{\r\n                this.p = PropertyFactory.getProp(elem,data.p,1,0,this.dynamicProperties);\r\n            }\r\n            if(data.r) {\r\n                this.r = PropertyFactory.getProp(elem, data.r, 0, degToRads, this.dynamicProperties);\r\n            } else if(data.rx) {\r\n                this.rx = PropertyFactory.getProp(elem, data.rx, 0, degToRads, this.dynamicProperties);\r\n                this.ry = PropertyFactory.getProp(elem, data.ry, 0, degToRads, this.dynamicProperties);\r\n                this.rz = PropertyFactory.getProp(elem, data.rz, 0, degToRads, this.dynamicProperties);\r\n                this.or = PropertyFactory.getProp(elem, data.or, 1, degToRads, this.dynamicProperties);\r\n                //sh Indicates it needs to be capped between -180 and 180\r\n                this.or.sh = true;\r\n            }\r\n            if(data.sk){\r\n                this.sk = PropertyFactory.getProp(elem, data.sk, 0, degToRads, this.dynamicProperties);\r\n                this.sa = PropertyFactory.getProp(elem, data.sa, 0, degToRads, this.dynamicProperties);\r\n            }\r\n            if(data.a) {\r\n                this.a = PropertyFactory.getProp(elem,data.a,1,0,this.dynamicProperties);\r\n            }\r\n            if(data.s) {\r\n                this.s = PropertyFactory.getProp(elem,data.s,1,0.01,this.dynamicProperties);\r\n            }\r\n            if(data.o){\r\n                this.o = PropertyFactory.getProp(elem,data.o,0,0.01,this.dynamicProperties);\r\n            } else {\r\n                this.o = {mdf:false,v:1};\r\n            }\r\n            if(this.dynamicProperties.length){\r\n                arr.push(this);\r\n            }else{\r\n                if(this.a){\r\n                    this.v.translate(-this.a.v[0],-this.a.v[1],this.a.v[2]);\r\n                }\r\n                if(this.s){\r\n                    this.v.scale(this.s.v[0],this.s.v[1],this.s.v[2]);\r\n                }\r\n                if(this.sk){\r\n                    this.v.skewFromAxis(-this.sk.v,this.sa.v);\r\n                }\r\n                if(this.r){\r\n                    this.v.rotate(-this.r.v);\r\n                }else{\r\n                    this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n                }\r\n                if(this.data.p.s){\r\n                    if(data.p.z) {\r\n                        this.v.translate(this.px.v, this.py.v, -this.pz.v);\r\n                    } else {\r\n                        this.v.translate(this.px.v, this.py.v, 0);\r\n                    }\r\n                }else{\r\n                    this.v.translate(this.p.v[0],this.p.v[1],-this.p.v[2]);\r\n                }\r\n            }\r\n            Object.defineProperty(this, \"position\", { get: positionGetter});\r\n            Object.defineProperty(this, \"xPosition\", { get: xPositionGetter});\r\n            Object.defineProperty(this, \"yPosition\", { get: yPositionGetter});\r\n            Object.defineProperty(this, \"orientation\", { get: orientationGetter});\r\n            Object.defineProperty(this, \"anchorPoint\", { get: anchorGetter});\r\n            Object.defineProperty(this, \"rotation\", { get: rotationGetter});\r\n            Object.defineProperty(this, \"scale\", { get: scaleGetter});\r\n            Object.defineProperty(this, \"opacity\", { get: opacityGetter});\r\n            Object.defineProperty(this, \"skew\", { get: skewGetter});\r\n            Object.defineProperty(this, \"skewAxis\", { get: skewAxisGetter});\r\n        }\r\n    }());\r\n\r\n    function getProp(elem,data,type, mult, arr) {\r\n        var p;\r\n        if(type === 2){\r\n            p = new TransformProperty(elem, data, arr);\r\n        } else if(data.a === 0){\r\n            if(type === 0) {\r\n                p = new ValueProperty(elem,data,mult);\r\n            } else {\r\n                p = new MultiDimensionalProperty(elem,data, mult);\r\n            }\r\n        } else if(data.a === 1){\r\n            if(type === 0) {\r\n                p = new KeyframedValueProperty(elem,data,mult);\r\n            } else {\r\n                p = new KeyframedMultidimensionalProperty(elem,data, mult);\r\n            }\r\n        } else if(!data.k.length){\r\n            p = new ValueProperty(elem,data, mult);\r\n        }else if(typeof(data.k[0]) === 'number'){\r\n            p = new MultiDimensionalProperty(elem,data, mult);\r\n        }else{\r\n            switch(type){\r\n                case 0:\r\n                    p = new KeyframedValueProperty(elem,data,mult);\r\n                    break;\r\n                case 1:\r\n                    p = new KeyframedMultidimensionalProperty(elem,data,mult);\r\n                    break;\r\n            }\r\n        }\r\n        if(p.k){\r\n            arr.push(p);\r\n        }\r\n        return p;\r\n    }\r\n\r\n    var getGradientProp = (function(){\r\n\r\n        function getValue(forceRender){\r\n            this.prop.getValue();\r\n            this.cmdf = false;\r\n            this.omdf = false;\r\n            if(this.prop.mdf || forceRender){\r\n                var i, len = this.data.p*4;\r\n                var mult, val;\r\n                for(i=0;i<len;i+=1){\r\n                    mult = i%4 === 0 ? 100 : 255;\r\n                    val = Math.round(this.prop.v[i]*mult);\r\n                    if(this.c[i] !== val){\r\n                        this.c[i] = val;\r\n                        this.cmdf = true;\r\n                    }\r\n                }\r\n                if(this.o.length){\r\n                    len = this.prop.v.length;\r\n                    for(i=this.data.p*4;i<len;i+=1){\r\n                        mult = i%2 === 0 ? 100 : 1;\r\n                        val = i%2 === 0 ?  Math.round(this.prop.v[i]*100):this.prop.v[i];\r\n                        if(this.o[i-this.data.p*4] !== val){\r\n                            this.o[i-this.data.p*4] = val;\r\n                            this.omdf = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        function gradientProp(elem,data,arr){\r\n            this.prop = getProp(elem,data.k,1,null,[]);\r\n            this.data = data;\r\n            this.k = this.prop.k;\r\n            this.c = Array.apply(null,{length:data.p*4});\r\n            var cLength = data.k.k[0].s ? (data.k.k[0].s.length - data.p*4) : data.k.k.length - data.p*4;\r\n            this.o = Array.apply(null,{length:cLength});\r\n            this.cmdf = false;\r\n            this.omdf = false;\r\n            this.getValue = getValue;\r\n            if(this.prop.k){\r\n                arr.push(this);\r\n            }\r\n            this.getValue(true);\r\n        }\r\n\r\n        return function getGradientProp(elem,data,arr){\r\n            return new gradientProp(elem,data,arr);\r\n        }\r\n    }());\r\n\r\n\r\n\r\n\r\n    var DashProperty = (function(){\r\n\r\n        function processKeys(forceRender){\r\n            var i = 0, len = this.dataProps.length;\r\n\r\n            if(this.elem.globalData.frameId === this.frameId && !forceRender){\r\n                return;\r\n            }\r\n            this.mdf = false;\r\n            this.frameId = this.elem.globalData.frameId;\r\n            while(i<len){\r\n                if(this.dataProps[i].p.mdf){\r\n                    this.mdf = true;\r\n                    break;\r\n                }\r\n                i+=1;\r\n            }\r\n            if(this.mdf || forceRender){\r\n                if(this.renderer === 'svg') {\r\n                    this.dasharray = '';\r\n                }\r\n                for(i=0;i<len;i+=1){\r\n                    if(this.dataProps[i].n != 'o'){\r\n                        if(this.renderer === 'svg') {\r\n                            this.dasharray += ' ' + this.dataProps[i].p.v;\r\n                        }else{\r\n                            this.dasharray[i] = this.dataProps[i].p.v;\r\n                        }\r\n                    }else{\r\n                        this.dashoffset = this.dataProps[i].p.v;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return function(elem, data,renderer, dynamicProperties){\r\n            this.elem = elem;\r\n            this.frameId = -1;\r\n            this.dataProps = new Array(data.length);\r\n            this.renderer = renderer;\r\n            this.mdf = false;\r\n            this.k = false;\r\n            if(this.renderer === 'svg'){\r\n                this.dasharray = '';\r\n            }else{\r\n\r\n                this.dasharray = new Array(data.length - 1);\r\n            }\r\n            this.dashoffset = 0;\r\n            var i, len = data.length, prop;\r\n            for(i=0;i<len;i+=1){\r\n                prop = PropertyFactory.getProp(elem,data[i].v,0, 0, dynamicProperties);\r\n                this.k = prop.k ? true : this.k;\r\n                this.dataProps[i] = {n:data[i].n,p:prop};\r\n            }\r\n            this.getValue = processKeys;\r\n            if(this.k){\r\n                dynamicProperties.push(this);\r\n            }else{\r\n                this.getValue(true);\r\n            }\r\n\r\n        }\r\n    }());\r\n\r\n    function getDashProp(elem, data,renderer, dynamicProperties) {\r\n        return new DashProperty(elem, data,renderer, dynamicProperties);\r\n    };\r\n\r\n    var TextSelectorProp = (function(){\r\n        var max = Math.max;\r\n        var min = Math.min;\r\n        var floor = Math.floor;\r\n        function updateRange(newCharsFlag){\r\n            this.mdf = newCharsFlag || false;\r\n            if(this.dynamicProperties.length){\r\n                var i, len = this.dynamicProperties.length;\r\n                for(i=0;i<len;i+=1){\r\n                    this.dynamicProperties[i].getValue();\r\n                    if(this.dynamicProperties[i].mdf){\r\n                        this.mdf = true;\r\n                    }\r\n                }\r\n            }\r\n            var totalChars = this.elem.textProperty.currentData ? this.elem.textProperty.currentData.l.length : 0;\r\n            if(newCharsFlag && this.data.r === 2) {\r\n                this.e.v = totalChars;\r\n            }\r\n            var divisor = this.data.r === 2 ? 1 : 100 / totalChars;\r\n            var o = this.o.v/divisor;\r\n            var s = this.s.v/divisor + o;\r\n            var e = (this.e.v/divisor) + o;\r\n            if(s>e){\r\n                var _s = s;\r\n                s = e;\r\n                e = _s;\r\n            }\r\n            this.finalS = s;\r\n            this.finalE = e;\r\n        }\r\n\r\n        function getMult(ind){\r\n            //var easer = bez.getEasingCurve(this.ne.v/100,0,1-this.xe.v/100,1);\r\n            var easer = BezierFactory.getBezierEasing(this.ne.v/100,0,1-this.xe.v/100,1).get;\r\n            var mult = 0;\r\n            var s = this.finalS;\r\n            var e = this.finalE;\r\n            var type = this.data.sh;\r\n            if(type == 2){\r\n                if(e === s){\r\n                    mult = ind >= e ? 1 : 0;\r\n                }else{\r\n                    mult = max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n                }\r\n                mult = easer(mult);\r\n            }else if(type == 3){\r\n                if(e === s){\r\n                    mult = ind >= e ? 0 : 1;\r\n                }else{\r\n                    mult = 1 - max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n                }\r\n\r\n                mult = easer(mult);\r\n            }else if(type == 4){\r\n                if(e === s){\r\n                    mult = 0;\r\n                }else{\r\n                    mult = max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n                    if(mult<.5){\r\n                        mult *= 2;\r\n                    }else{\r\n                        mult = 1 - 2*(mult-0.5);\r\n                    }\r\n                }\r\n                mult = easer(mult);\r\n            }else if(type == 5){\r\n                if(e === s){\r\n                    mult = 0;\r\n                }else{\r\n                    var tot = e - s;\r\n                    /*ind += 0.5;\r\n                    mult = -4/(tot*tot)*(ind*ind)+(4/tot)*ind;*/\r\n                    ind = min(max(0,ind+0.5-s),e-s);\r\n                    var x = -tot/2+ind;\r\n                    var a = tot/2;\r\n                    mult = Math.sqrt(1 - (x*x)/(a*a));\r\n                }\r\n                mult = easer(mult);\r\n            }else if(type == 6){\r\n                if(e === s){\r\n                    mult = 0;\r\n                }else{\r\n                    ind = min(max(0,ind+0.5-s),e-s);\r\n                    mult = (1+(Math.cos((Math.PI+Math.PI*2*(ind)/(e-s)))))/2;\r\n                    /*\r\n                     ind = Math.min(Math.max(s,ind),e-1);\r\n                     mult = (1+(Math.cos((Math.PI+Math.PI*2*(ind-s)/(e-1-s)))))/2;\r\n                     mult = Math.max(mult,(1/(e-1-s))/(e-1-s));*/\r\n                }\r\n                mult = easer(mult);\r\n            }else {\r\n                if(ind >= floor(s)){\r\n                    if(ind-s < 0){\r\n                        mult = 1 - (s - ind);\r\n                    }else{\r\n                        mult = max(0,min(e-ind,1));\r\n                    }\r\n                }\r\n                mult = easer(mult);\r\n            }\r\n            return mult*this.a.v;\r\n        }\r\n\r\n        return function TextSelectorProp(elem,data, arr){\r\n            this.mdf = false;\r\n            this.k = false;\r\n            this.data = data;\r\n            this.dynamicProperties = [];\r\n            this.getValue = updateRange;\r\n            this.getMult = getMult;\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.finalS = 0;\r\n            this.finalE = 0;\r\n            this.s = PropertyFactory.getProp(elem,data.s || {k:0},0,0,this.dynamicProperties);\r\n            if('e' in data){\r\n                this.e = PropertyFactory.getProp(elem,data.e,0,0,this.dynamicProperties);\r\n            }else{\r\n                this.e = {v:100};\r\n            }\r\n            this.o = PropertyFactory.getProp(elem,data.o || {k:0},0,0,this.dynamicProperties);\r\n            this.xe = PropertyFactory.getProp(elem,data.xe || {k:0},0,0,this.dynamicProperties);\r\n            this.ne = PropertyFactory.getProp(elem,data.ne || {k:0},0,0,this.dynamicProperties);\r\n            this.a = PropertyFactory.getProp(elem,data.a,0,0.01,this.dynamicProperties);\r\n            if(this.dynamicProperties.length){\r\n                arr.push(this);\r\n            }else{\r\n                this.getValue();\r\n            }\r\n        }\r\n    }());\r\n\r\n    function getTextSelectorProp(elem, data,arr) {\r\n        return new TextSelectorProp(elem, data, arr);\r\n    };\r\n\r\n    var ob = {\r\n        getProp: getProp,\r\n        getDashProp: getDashProp,\r\n        getTextSelectorProp: getTextSelectorProp,\r\n        getGradientProp: getGradientProp\r\n    };\r\n    return ob;\r\n}());\nfunction ShapePath(){\r\n\tthis.c = false;\r\n\tthis._length = 0;\r\n\tthis._maxLength = 8;\r\n\tthis.v = Array.apply(null,{length:this._maxLength});\r\n\tthis.o = Array.apply(null,{length:this._maxLength});\r\n\tthis.i = Array.apply(null,{length:this._maxLength});\r\n};\r\n\r\nShapePath.prototype.setPathData = function(closed, len) {\r\n\tthis.c = closed;\r\n\tthis.setLength(len);\r\n\tvar i = 0;\r\n\twhile(i < len){\r\n\t\tthis.v[i] = point_pool.newPoint();\r\n\t\tthis.o[i] = point_pool.newPoint();\r\n\t\tthis.i[i] = point_pool.newPoint();\r\n\t\ti += 1;\r\n\t}\r\n};\r\n\r\nShapePath.prototype.setLength = function(len) {\r\n\twhile(this._maxLength < len) {\r\n\t\tthis.doubleArrayLength();\r\n\t}\r\n\tthis._length = len;\r\n}\r\n\r\nShapePath.prototype.doubleArrayLength = function() {\r\n\tthis.v = this.v.concat(Array.apply(null,{length:this._maxLength}))\r\n\tthis.i = this.i.concat(Array.apply(null,{length:this._maxLength}))\r\n\tthis.o = this.o.concat(Array.apply(null,{length:this._maxLength}))\r\n\tthis._maxLength *= 2;\r\n};\r\n\r\nShapePath.prototype.setXYAt = function(x, y, type, pos, replace) {\r\n\tvar arr;\r\n\tthis._length = Math.max(this._length, pos + 1);\r\n\tif(this._length >= this._maxLength) {\r\n\t\tthis.doubleArrayLength();\r\n\t}\r\n\tswitch(type){\r\n\t\tcase 'v':\r\n\t\t\tarr = this.v;\r\n\t\t\tbreak;\r\n\t\tcase 'i':\r\n\t\t\tarr = this.i;\r\n\t\t\tbreak;\r\n\t\tcase 'o':\r\n\t\t\tarr = this.o;\r\n\t\t\tbreak;\r\n\t}\r\n\tif(!arr[pos] || (arr[pos] && !replace)){\r\n\t\tarr[pos] = point_pool.newPoint();\r\n\t}\r\n\tarr[pos][0] = x;\r\n\tarr[pos][1] = y;\r\n};\r\n\r\nShapePath.prototype.setTripleAt = function(vX,vY,oX,oY,iX,iY,pos, replace) {\r\n\tthis.setXYAt(vX,vY,'v',pos, replace);\r\n\tthis.setXYAt(oX,oY,'o',pos, replace);\r\n\tthis.setXYAt(iX,iY,'i',pos, replace);\r\n};\nvar ShapePropertyFactory = (function(){\r\n\r\n    var initFrame = -999999;\r\n\r\n    function interpolateShape(frameNum, iterationIndex, previousValue, isCurrentRender) {\r\n        var keyPropS,keyPropE,isHold;\r\n        if(frameNum < this.keyframes[0].t-this.offsetTime){\r\n            keyPropS = this.keyframes[0].s[0];\r\n            isHold = true;\r\n            iterationIndex = 0;\r\n        }else if(frameNum >= this.keyframes[this.keyframes.length - 1].t-this.offsetTime){\r\n            if(this.keyframes[this.keyframes.length - 2].h === 1){\r\n                keyPropS = this.keyframes[this.keyframes.length - 1].s[0];\r\n            }else{\r\n                keyPropS = this.keyframes[this.keyframes.length - 2].e[0];\r\n            }\r\n            isHold = true;\r\n        }else{\r\n            var i = iterationIndex;\r\n            var len = this.keyframes.length- 1,flag = true,keyData,nextKeyData, j, jLen, k, kLen;\r\n            while(flag){\r\n                keyData = this.keyframes[i];\r\n                nextKeyData = this.keyframes[i+1];\r\n                if((nextKeyData.t - this.offsetTime) > frameNum){\r\n                    break;\r\n                }\r\n                if(i < len - 1){\r\n                    i += 1;\r\n                }else{\r\n                    flag = false;\r\n                }\r\n            }\r\n            isHold = keyData.h === 1;\r\n            iterationIndex = i;\r\n\r\n            var perc;\r\n            if(!isHold){\r\n                if(frameNum >= nextKeyData.t-this.offsetTime){\r\n                    perc = 1;\r\n                }else if(frameNum < keyData.t-this.offsetTime){\r\n                    perc = 0;\r\n                }else{\r\n                    var fnc;\r\n                    if(keyData.__fnct){\r\n                        fnc = keyData.__fnct;\r\n                    }else{\r\n                        fnc = BezierFactory.getBezierEasing(keyData.o.x,keyData.o.y,keyData.i.x,keyData.i.y).get;\r\n                        keyData.__fnct = fnc;\r\n                    }\r\n                    perc = fnc((frameNum-(keyData.t-this.offsetTime))/((nextKeyData.t-this.offsetTime)-(keyData.t-this.offsetTime)));\r\n                }\r\n                keyPropE = keyData.e[0];\r\n            }\r\n            keyPropS = keyData.s[0];\r\n        }\r\n        jLen = previousValue._length;\r\n        kLen = keyPropS.i[0].length;\r\n        var hasModified = false;\r\n        var vertexValue;\r\n        for(j=0;j<jLen;j+=1){\r\n            for(k=0;k<kLen;k+=1){\r\n                if(isHold){\r\n                    vertexValue = keyPropS.i[j][k];\r\n                    if(previousValue.i[j][k] !== vertexValue){\r\n                        previousValue.i[j][k] = vertexValue;\r\n                        if(isCurrentRender) {\r\n                            this.pv.i[j][k] = vertexValue;\r\n                        }\r\n                        hasModified = true;\r\n                    }\r\n                    vertexValue = keyPropS.o[j][k];\r\n                    if(previousValue.o[j][k] !== vertexValue){\r\n                        previousValue.o[j][k] = vertexValue;\r\n                        if(isCurrentRender) {\r\n                            this.pv.o[j][k] = vertexValue;\r\n                        }\r\n                        hasModified = true;\r\n                    }\r\n                    vertexValue = keyPropS.v[j][k];\r\n                    if(previousValue.v[j][k] !== vertexValue){\r\n                        previousValue.v[j][k] = vertexValue;\r\n                        if(isCurrentRender) {\r\n                            this.pv.v[j][k] = vertexValue;\r\n                        }\r\n                        hasModified = true;\r\n                    }\r\n                }else{\r\n                    vertexValue = keyPropS.i[j][k]+(keyPropE.i[j][k]-keyPropS.i[j][k])*perc;\r\n                    if(previousValue.i[j][k] !== vertexValue){\r\n                        previousValue.i[j][k] = vertexValue;\r\n                        if(isCurrentRender) {\r\n                            this.pv.i[j][k] = vertexValue;\r\n                        }\r\n                        hasModified = true;\r\n                    }\r\n                    vertexValue = keyPropS.o[j][k]+(keyPropE.o[j][k]-keyPropS.o[j][k])*perc;\r\n                    if(previousValue.o[j][k] !== vertexValue){\r\n                        previousValue.o[j][k] = vertexValue;\r\n                        if(isCurrentRender) {\r\n                            this.pv.o[j][k] = vertexValue;\r\n                        }\r\n                        hasModified = true;\r\n                    }\r\n                    vertexValue = keyPropS.v[j][k]+(keyPropE.v[j][k]-keyPropS.v[j][k])*perc;\r\n                    if(previousValue.v[j][k] !== vertexValue){\r\n                        previousValue.v[j][k] = vertexValue;\r\n                        if(isCurrentRender) {\r\n                            this.pv.v[j][k] = vertexValue;\r\n                        }\r\n                        hasModified = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if(hasModified) {\r\n            previousValue.c = keyPropS.c;\r\n        }\r\n        return {\r\n            iterationIndex: iterationIndex,\r\n            hasModified: hasModified\r\n        }\r\n    }\r\n\r\n    function interpolateShapeCurrentTime(){\r\n        if(this.elem.globalData.frameId === this.frameId){\r\n            return;\r\n        }\r\n        this.mdf = false;\r\n        var frameNum = this.comp.renderedFrame - this.offsetTime;\r\n        var initTime = this.keyframes[0].t - this.offsetTime;\r\n        var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;\r\n        if(!(this.lastFrame !== initFrame && ((this.lastFrame < initTime && frameNum < initTime) || (this.lastFrame > endTime && frameNum > endTime)))){\r\n            ////\r\n            var i = this.lastFrame < frameNum ? this._lastIndex : 0;\r\n            var renderResult = this.interpolateShape(frameNum, i, this.v, true);\r\n            ////\r\n            this._lastIndex = renderResult.iterationIndex;\r\n            this.mdf = renderResult.hasModified;\r\n            if(renderResult.hasModified) {\r\n                this.paths = this.localShapeCollection;\r\n            }\r\n        }\r\n        this.lastFrame = frameNum;\r\n        this.frameId = this.elem.globalData.frameId;\r\n    }\r\n\r\n    function getShapeValue(){\r\n        return this.v;\r\n    }\r\n\r\n    function resetShape(){\r\n        this.paths = this.localShapeCollection;\r\n        if(!this.k){\r\n            this.mdf = false;\r\n        }\r\n    }\r\n\r\n    function ShapeProperty(elem, data, type){\r\n        this.__shapeObject = 1;\r\n        this.comp = elem.comp;\r\n        this.k = false;\r\n        this.mdf = false;\r\n        var pathData = type === 3 ? data.pt.k : data.ks.k;\r\n        this.v = shape_pool.clone(pathData);\r\n        this.pv = shape_pool.clone(this.v);\r\n        this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n        this.paths = this.localShapeCollection;\r\n        this.paths.addShape(this.v);\r\n        this.reset = resetShape;\r\n    }\r\n    ShapeProperty.prototype.interpolateShape = interpolateShape;\r\n    ShapeProperty.prototype.getValue = getShapeValue;\r\n\r\n    function KeyframedShapeProperty(elem,data,type){\r\n        this.__shapeObject = 1;\r\n        this.comp = elem.comp;\r\n        this.elem = elem;\r\n        this.offsetTime = elem.data.st;\r\n        this._lastIndex = 0;\r\n        this.keyframes = type === 3 ? data.pt.k : data.ks.k;\r\n        this.k = true;\r\n        this.kf = true;\r\n        var i, len = this.keyframes[0].s[0].i.length;\r\n        var jLen = this.keyframes[0].s[0].i[0].length;\r\n        this.v = shape_pool.newShape();\r\n        this.v.setPathData(this.keyframes[0].s[0].c, len);\r\n        this.pv = shape_pool.clone(this.v);\r\n        this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n        this.paths = this.localShapeCollection;\r\n        this.paths.addShape(this.v);\r\n        this.lastFrame = initFrame;\r\n        this.reset = resetShape;\r\n    }\r\n    KeyframedShapeProperty.prototype.getValue = interpolateShapeCurrentTime;\r\n    KeyframedShapeProperty.prototype.interpolateShape = interpolateShape;\r\n\r\n    var EllShapeProperty = (function(){\r\n\r\n        var cPoint = roundCorner;\r\n\r\n        function convertEllToPath(){\r\n            var p0 = this.p.v[0], p1 = this.p.v[1], s0 = this.s.v[0]/2, s1 = this.s.v[1]/2;\r\n            if(this.d !== 3){\r\n                this.v.v[0][0] = p0;\r\n                this.v.v[0][1] = p1-s1;\r\n                this.v.v[1][0] = p0 + s0;\r\n                this.v.v[1][1] = p1;\r\n                this.v.v[2][0] = p0;\r\n                this.v.v[2][1] = p1+s1;\r\n                this.v.v[3][0] = p0 - s0;\r\n                this.v.v[3][1] = p1;\r\n                this.v.i[0][0] = p0 - s0*cPoint;\r\n                this.v.i[0][1] = p1 - s1;\r\n                this.v.i[1][0] = p0 + s0;\r\n                this.v.i[1][1] = p1 - s1*cPoint;\r\n                this.v.i[2][0] = p0 + s0*cPoint;\r\n                this.v.i[2][1] = p1 + s1;\r\n                this.v.i[3][0] = p0 - s0;\r\n                this.v.i[3][1] = p1 + s1*cPoint;\r\n                this.v.o[0][0] = p0 + s0*cPoint;\r\n                this.v.o[0][1] = p1 - s1;\r\n                this.v.o[1][0] = p0 + s0;\r\n                this.v.o[1][1] = p1 + s1*cPoint;\r\n                this.v.o[2][0] = p0 - s0*cPoint;\r\n                this.v.o[2][1] = p1 + s1;\r\n                this.v.o[3][0] = p0 - s0;\r\n                this.v.o[3][1] = p1 - s1*cPoint;\r\n            }else{\r\n                this.v.v[0][0] = p0;\r\n                this.v.v[0][1] = p1-s1;\r\n                this.v.v[1][0] = p0 - s0;\r\n                this.v.v[1][1] = p1;\r\n                this.v.v[2][0] = p0;\r\n                this.v.v[2][1] = p1+s1;\r\n                this.v.v[3][0] = p0 + s0;\r\n                this.v.v[3][1] = p1;\r\n                this.v.i[0][0] = p0 + s0*cPoint;\r\n                this.v.i[0][1] = p1 - s1;\r\n                this.v.i[1][0] = p0 - s0;\r\n                this.v.i[1][1] = p1 - s1*cPoint;\r\n                this.v.i[2][0] = p0 - s0*cPoint;\r\n                this.v.i[2][1] = p1 + s1;\r\n                this.v.i[3][0] = p0 + s0;\r\n                this.v.i[3][1] = p1 + s1*cPoint;\r\n                this.v.o[0][0] = p0 - s0*cPoint;\r\n                this.v.o[0][1] = p1 - s1;\r\n                this.v.o[1][0] = p0 - s0;\r\n                this.v.o[1][1] = p1 + s1*cPoint;\r\n                this.v.o[2][0] = p0 + s0*cPoint;\r\n                this.v.o[2][1] = p1 + s1;\r\n                this.v.o[3][0] = p0 + s0;\r\n                this.v.o[3][1] = p1 - s1*cPoint;\r\n            }\r\n        }\r\n\r\n        function processKeys(frameNum){\r\n            var i, len = this.dynamicProperties.length;\r\n            if(this.elem.globalData.frameId === this.frameId){\r\n                return;\r\n            }\r\n            this.mdf = false;\r\n            this.frameId = this.elem.globalData.frameId;\r\n\r\n            for(i=0;i<len;i+=1){\r\n                this.dynamicProperties[i].getValue(frameNum);\r\n                if(this.dynamicProperties[i].mdf){\r\n                    this.mdf = true;\r\n                }\r\n            }\r\n            if(this.mdf){\r\n                this.convertEllToPath();\r\n            }\r\n        }\r\n\r\n        return function EllShapeProperty(elem,data) {\r\n            /*this.v = {\r\n                v: Array.apply(null,{length:4}),\r\n                i: Array.apply(null,{length:4}),\r\n                o: Array.apply(null,{length:4}),\r\n                c: true\r\n            };*/\r\n            this.v = shape_pool.newShape();\r\n            this.v.setPathData(true, 4);\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.paths = this.localShapeCollection;\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.d = data.d;\r\n            this.dynamicProperties = [];\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.frameId = -1;\r\n            this.mdf = false;\r\n            this.getValue = processKeys;\r\n            this.convertEllToPath = convertEllToPath;\r\n            this.reset = resetShape;\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this.dynamicProperties);\r\n            this.s = PropertyFactory.getProp(elem,data.s,1,0,this.dynamicProperties);\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.convertEllToPath();\r\n            }\r\n        }\r\n    }());\r\n\r\n    var StarShapeProperty = (function() {\r\n\r\n        function convertPolygonToPath(){\r\n            var numPts = Math.floor(this.pt.v);\r\n            var angle = Math.PI*2/numPts;\r\n            /*this.v.v.length = numPts;\r\n            this.v.i.length = numPts;\r\n            this.v.o.length = numPts;*/\r\n            var rad = this.or.v;\r\n            var roundness = this.os.v;\r\n            var perimSegment = 2*Math.PI*rad/(numPts*4);\r\n            var i, currentAng = -Math.PI/ 2;\r\n            var dir = this.data.d === 3 ? -1 : 1;\r\n            currentAng += this.r.v;\r\n            this.v._length = 0;\r\n            for(i=0;i<numPts;i+=1){\r\n                var x = rad * Math.cos(currentAng);\r\n                var y = rad * Math.sin(currentAng);\r\n                var ox = x === 0 && y === 0 ? 0 : y/Math.sqrt(x*x + y*y);\r\n                var oy = x === 0 && y === 0 ? 0 : -x/Math.sqrt(x*x + y*y);\r\n                x +=  + this.p.v[0];\r\n                y +=  + this.p.v[1];\r\n                this.v.setTripleAt(x,y,x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir,x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir, i, true);\r\n                /*this.v.v[i] = [x,y];\r\n                this.v.i[i] = [x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir];\r\n                this.v.o[i] = [x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir];*/\r\n                currentAng += angle*dir;\r\n            }\r\n            this.paths.length = 0;\r\n            this.paths[0] = this.v;\r\n        }\r\n\r\n        function convertStarToPath() {\r\n            var numPts = Math.floor(this.pt.v)*2;\r\n            var angle = Math.PI*2/numPts;\r\n            /*this.v.v.length = numPts;\r\n            this.v.i.length = numPts;\r\n            this.v.o.length = numPts;*/\r\n            var longFlag = true;\r\n            var longRad = this.or.v;\r\n            var shortRad = this.ir.v;\r\n            var longRound = this.os.v;\r\n            var shortRound = this.is.v;\r\n            var longPerimSegment = 2*Math.PI*longRad/(numPts*2);\r\n            var shortPerimSegment = 2*Math.PI*shortRad/(numPts*2);\r\n            var i, rad,roundness,perimSegment, currentAng = -Math.PI/ 2;\r\n            currentAng += this.r.v;\r\n            var dir = this.data.d === 3 ? -1 : 1;\r\n            this.v._length = 0;\r\n            for(i=0;i<numPts;i+=1){\r\n                rad = longFlag ? longRad : shortRad;\r\n                roundness = longFlag ? longRound : shortRound;\r\n                perimSegment = longFlag ? longPerimSegment : shortPerimSegment;\r\n                var x = rad * Math.cos(currentAng);\r\n                var y = rad * Math.sin(currentAng);\r\n                var ox = x === 0 && y === 0 ? 0 : y/Math.sqrt(x*x + y*y);\r\n                var oy = x === 0 && y === 0 ? 0 : -x/Math.sqrt(x*x + y*y);\r\n                x +=  + this.p.v[0];\r\n                y +=  + this.p.v[1];\r\n                this.v.setTripleAt(x,y,x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir,x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir, i, true);\r\n\r\n                /*this.v.v[i] = [x,y];\r\n                this.v.i[i] = [x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir];\r\n                this.v.o[i] = [x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir];\r\n                this.v._length = numPts;*/\r\n                longFlag = !longFlag;\r\n                currentAng += angle*dir;\r\n            }\r\n        }\r\n\r\n        function processKeys() {\r\n            if(this.elem.globalData.frameId === this.frameId){\r\n                return;\r\n            }\r\n            this.mdf = false;\r\n            this.frameId = this.elem.globalData.frameId;\r\n            var i, len = this.dynamicProperties.length;\r\n\r\n            for(i=0;i<len;i+=1){\r\n                this.dynamicProperties[i].getValue();\r\n                if(this.dynamicProperties[i].mdf){\r\n                    this.mdf = true;\r\n                }\r\n            }\r\n            if(this.mdf){\r\n                this.convertToPath();\r\n            }\r\n        }\r\n\r\n        return function StarShapeProperty(elem,data) {\r\n            /*this.v = {\r\n                v: [],\r\n                i: [],\r\n                o: [],\r\n                c: true\r\n            };*/\r\n            this.v = shape_pool.newShape();\r\n            this.v.setPathData(true, 0);\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.data = data;\r\n            this.frameId = -1;\r\n            this.d = data.d;\r\n            this.dynamicProperties = [];\r\n            this.mdf = false;\r\n            this.getValue = processKeys;\r\n            this.reset = resetShape;\r\n            if(data.sy === 1){\r\n                this.ir = PropertyFactory.getProp(elem,data.ir,0,0,this.dynamicProperties);\r\n                this.is = PropertyFactory.getProp(elem,data.is,0,0.01,this.dynamicProperties);\r\n                this.convertToPath = convertStarToPath;\r\n            } else {\r\n                this.convertToPath = convertPolygonToPath;\r\n            }\r\n            this.pt = PropertyFactory.getProp(elem,data.pt,0,0,this.dynamicProperties);\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this.dynamicProperties);\r\n            this.r = PropertyFactory.getProp(elem,data.r,0,degToRads,this.dynamicProperties);\r\n            this.or = PropertyFactory.getProp(elem,data.or,0,0,this.dynamicProperties);\r\n            this.os = PropertyFactory.getProp(elem,data.os,0,0.01,this.dynamicProperties);\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.paths = this.localShapeCollection;\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.convertToPath();\r\n            }\r\n        }\r\n    }());\r\n\r\n    var RectShapeProperty = (function() {\r\n        function processKeys(frameNum){\r\n            if(this.elem.globalData.frameId === this.frameId){\r\n                return;\r\n            }\r\n            this.mdf = false;\r\n            this.frameId = this.elem.globalData.frameId;\r\n            var i, len = this.dynamicProperties.length;\r\n\r\n            for(i=0;i<len;i+=1){\r\n                this.dynamicProperties[i].getValue(frameNum);\r\n                if(this.dynamicProperties[i].mdf){\r\n                    this.mdf = true;\r\n                }\r\n            }\r\n            if(this.mdf){\r\n                this.convertRectToPath();\r\n            }\r\n\r\n        }\r\n\r\n        function convertRectToPath(){\r\n            var p0 = this.p.v[0], p1 = this.p.v[1], v0 = this.s.v[0]/2, v1 = this.s.v[1]/2;\r\n            var round = bm_min(v0,v1,this.r.v);\r\n            var cPoint = round*(1-roundCorner);\r\n            this.v._length = 0;\r\n\r\n            if(this.d === 2 || this.d === 1) {\r\n                this.v.setTripleAt(p0+v0, p1-v1+round,p0+v0, p1-v1+round,p0+v0,p1-v1+cPoint,0, true);\r\n                this.v.setTripleAt(p0+v0, p1+v1-round,p0+v0, p1+v1-cPoint,p0+v0, p1+v1-round,1, true);\r\n                if(round!== 0){\r\n                    this.v.setTripleAt(p0+v0-round, p1+v1,p0+v0-round,p1+v1,p0+v0-cPoint,p1+v1,2, true);\r\n                    this.v.setTripleAt(p0-v0+round,p1+v1,p0-v0+cPoint,p1+v1,p0-v0+round,p1+v1,3, true);\r\n                    this.v.setTripleAt(p0-v0,p1+v1-round,p0-v0,p1+v1-round,p0-v0,p1+v1-cPoint,4, true);\r\n                    this.v.setTripleAt(p0-v0,p1-v1+round,p0-v0,p1-v1+cPoint,p0-v0,p1-v1+round,5, true);\r\n                    this.v.setTripleAt(p0-v0+round,p1-v1,p0-v0+round,p1-v1,p0-v0+cPoint,p1-v1,6, true);\r\n                    this.v.setTripleAt(p0+v0-round,p1-v1,p0+v0-cPoint,p1-v1,p0+v0-round,p1-v1,7, true);\r\n                } else {\r\n                    this.v.setTripleAt(p0-v0,p1+v1,p0-v0+cPoint,p1+v1,p0-v0,p1+v1,2);\r\n                    this.v.setTripleAt(p0-v0,p1-v1,p0-v0,p1-v1+cPoint,p0-v0,p1-v1,3);\r\n                }\r\n            }else{\r\n                this.v.setTripleAt(p0+v0,p1-v1+round,p0+v0,p1-v1+cPoint,p0+v0,p1-v1+round,0, true);\r\n                if(round!== 0){\r\n                    this.v.setTripleAt(p0+v0-round,p1-v1,p0+v0-round,p1-v1,p0+v0-cPoint,p1-v1,1, true);\r\n                    this.v.setTripleAt(p0-v0+round,p1-v1,p0-v0+cPoint,p1-v1,p0-v0+round,p1-v1,2, true);\r\n                    this.v.setTripleAt(p0-v0,p1-v1+round,p0-v0,p1-v1+round,p0-v0,p1-v1+cPoint,3, true);\r\n                    this.v.setTripleAt(p0-v0,p1+v1-round,p0-v0,p1+v1-cPoint,p0-v0,p1+v1-round,4, true);\r\n                    this.v.setTripleAt(p0-v0+round,p1+v1,p0-v0+round,p1+v1,p0-v0+cPoint,p1+v1,5, true);\r\n                    this.v.setTripleAt(p0+v0-round,p1+v1,p0+v0-cPoint,p1+v1,p0+v0-round,p1+v1,6, true);\r\n                    this.v.setTripleAt(p0+v0,p1+v1-round,p0+v0,p1+v1-round,p0+v0,p1+v1-cPoint,7, true);\r\n                } else {\r\n                    this.v.setTripleAt(p0-v0,p1-v1,p0-v0+cPoint,p1-v1,p0-v0,p1-v1,1, true);\r\n                    this.v.setTripleAt(p0-v0,p1+v1,p0-v0,p1+v1-cPoint,p0-v0,p1+v1,2, true);\r\n                    this.v.setTripleAt(p0+v0,p1+v1,p0+v0-cPoint,p1+v1,p0+v0,p1+v1,3, true);\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        return function RectShapeProperty(elem,data) {\r\n            this.v = shape_pool.newShape();\r\n            this.v.c = true;\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.paths = this.localShapeCollection;\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.frameId = -1;\r\n            this.d = data.d;\r\n            this.dynamicProperties = [];\r\n            this.mdf = false;\r\n            this.getValue = processKeys;\r\n            this.convertRectToPath = convertRectToPath;\r\n            this.reset = resetShape;\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this.dynamicProperties);\r\n            this.s = PropertyFactory.getProp(elem,data.s,1,0,this.dynamicProperties);\r\n            this.r = PropertyFactory.getProp(elem,data.r,0,0,this.dynamicProperties);\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.convertRectToPath();\r\n            }\r\n        }\r\n    }());\r\n\r\n    function getShapeProp(elem,data,type, arr){\r\n        var prop;\r\n        if(type === 3 || type === 4){\r\n            var dataProp = type === 3 ? data.pt : data.ks;\r\n            var keys = dataProp.k;\r\n            if(dataProp.a === 1 || keys.length){\r\n                prop = new KeyframedShapeProperty(elem, data, type);\r\n            }else{\r\n                prop = new ShapeProperty(elem, data, type);\r\n            }\r\n        }else if(type === 5){\r\n            prop = new RectShapeProperty(elem, data);\r\n        }else if(type === 6){\r\n            prop = new EllShapeProperty(elem, data);\r\n        }else if(type === 7){\r\n            prop = new StarShapeProperty(elem, data);\r\n        }\r\n        if(prop.k){\r\n            arr.push(prop);\r\n        }\r\n        return prop;\r\n    }\r\n\r\n    function getConstructorFunction() {\r\n        return ShapeProperty;\r\n    }\r\n\r\n    function getKeyframedConstructorFunction() {\r\n        return KeyframedShapeProperty;\r\n    }\r\n\r\n    var ob = {};\r\n    ob.getShapeProp = getShapeProp;\r\n    ob.getConstructorFunction = getConstructorFunction;\r\n    ob.getKeyframedConstructorFunction = getKeyframedConstructorFunction;\r\n    return ob;\r\n}());\nvar ShapeModifiers = (function(){\r\n    var ob = {};\r\n    var modifiers = {};\r\n    ob.registerModifier = registerModifier;\r\n    ob.getModifier = getModifier;\r\n\r\n    function registerModifier(nm,factory){\r\n        if(!modifiers[nm]){\r\n            modifiers[nm] = factory;\r\n        }\r\n    }\r\n\r\n    function getModifier(nm,elem, data, dynamicProperties){\r\n        return new modifiers[nm](elem, data, dynamicProperties);\r\n    }\r\n\r\n    return ob;\r\n}());\r\n\r\nfunction ShapeModifier(){}\r\nShapeModifier.prototype.initModifierProperties = function(){};\r\nShapeModifier.prototype.addShapeToModifier = function(){};\r\nShapeModifier.prototype.addShape = function(data){\r\n    if(!this.closed){\r\n        this.shapes.push({shape:data.sh, data: data, localShapeCollection:shapeCollection_pool.newShapeCollection()});\r\n        this.addShapeToModifier(data.sh);\r\n    }\r\n}\r\nShapeModifier.prototype.init = function(elem,data,dynamicProperties){\r\n    this.elem = elem;\r\n    this.frameId = -1;\r\n    this.shapes = [];\r\n    this.dynamicProperties = [];\r\n    this.mdf = false;\r\n    this.closed = false;\r\n    this.k = false;\r\n    this.comp = elem.comp;\r\n    this.initModifierProperties(elem,data);\r\n    if(this.dynamicProperties.length){\r\n        this.k = true;\r\n        dynamicProperties.push(this);\r\n    }else{\r\n        this.getValue(true);\r\n    }\r\n}\nfunction TrimModifier(){};\r\nextendPrototype(ShapeModifier,TrimModifier);\r\nTrimModifier.prototype.processKeys = function(forceRender){\r\n    if(this.elem.globalData.frameId === this.frameId && !forceRender){\r\n        return;\r\n    }\r\n    this.mdf = forceRender ? true : false;\r\n    this.frameId = this.elem.globalData.frameId;\r\n    var i, len = this.dynamicProperties.length;\r\n\r\n    for(i=0;i<len;i+=1){\r\n        this.dynamicProperties[i].getValue();\r\n        if(this.dynamicProperties[i].mdf){\r\n            this.mdf = true;\r\n        }\r\n    }\r\n    if(this.mdf || forceRender){\r\n        var o = (this.o.v%360)/360;\r\n        if(o < 0){\r\n            o += 1;\r\n        }\r\n        var s = this.s.v + o;\r\n        var e = this.e.v + o;\r\n        if(s == e){\r\n\r\n        }\r\n        if(s>e){\r\n            var _s = s;\r\n            s = e;\r\n            e = _s;\r\n        }\r\n        this.sValue = s;\r\n        this.eValue = e;\r\n        this.oValue = o;\r\n    }\r\n}\r\nTrimModifier.prototype.initModifierProperties = function(elem,data){\r\n    this.sValue = 0;\r\n    this.eValue = 0;\r\n    this.oValue = 0;\r\n    this.getValue = this.processKeys;\r\n    this.s = PropertyFactory.getProp(elem,data.s,0,0.01,this.dynamicProperties);\r\n    this.e = PropertyFactory.getProp(elem,data.e,0,0.01,this.dynamicProperties);\r\n    this.o = PropertyFactory.getProp(elem,data.o,0,0,this.dynamicProperties);\r\n    this.m = data.m;\r\n    if(!this.dynamicProperties.length){\r\n        this.getValue(true);\r\n    }\r\n};\r\n\r\nTrimModifier.prototype.calculateShapeEdges = function(s, e, shapeLength, addedLength, totalModifierLength) {\r\n    var segments = []\r\n    if(e <= 1){\r\n        segments.push({\r\n            s: s,\r\n            e: e\r\n        })\r\n    }else if(s >= 1){\r\n        segments.push({\r\n            s: s - 1,\r\n            e: e - 1\r\n        })\r\n    }else{\r\n        segments.push({\r\n            s: s,\r\n            e: 1\r\n        })\r\n        segments.push({\r\n            s: 0,\r\n            e: e - 1\r\n        })\r\n    }\r\n    var shapeSegments = [];\r\n    var i, len = segments.length, segmentOb;\r\n    for(i = 0; i < len; i += 1) {\r\n        segmentOb = segments[i];\r\n        if (segmentOb.e * totalModifierLength < addedLength || segmentOb.s * totalModifierLength > addedLength + shapeLength) {\r\n            \r\n        } else {\r\n            var shapeS, shapeE;\r\n            if(segmentOb.s * totalModifierLength <= addedLength) {\r\n                shapeS = 0;\r\n            } else {\r\n                shapeS = (segmentOb.s * totalModifierLength - addedLength) / shapeLength;\r\n            }\r\n            if(segmentOb.e * totalModifierLength >= addedLength + shapeLength) {\r\n                shapeE = 1;\r\n            } else {\r\n                shapeE = ((segmentOb.e * totalModifierLength - addedLength) / shapeLength);\r\n            }\r\n            shapeSegments.push([shapeS, shapeE]);\r\n        }\r\n    }\r\n    if(!shapeSegments.length){\r\n        shapeSegments.push([0,0]);\r\n    }\r\n    return shapeSegments;\r\n}\r\n\r\nTrimModifier.prototype.processShapes = function(firstFrame){\r\n    var shapePaths;\r\n    var i, len = this.shapes.length;\r\n    var j, jLen;\r\n    var s = this.sValue;\r\n    var e = this.eValue;\r\n    var pathsData,pathData, totalShapeLength, totalModifierLength = 0;\r\n\r\n    if(e === s){\r\n        for(i=0;i<len;i+=1){\r\n            this.shapes[i].localShapeCollection.releaseShapes();\r\n            this.shapes[i].shape.mdf = true;\r\n            this.shapes[i].shape.paths = this.shapes[i].localShapeCollection;\r\n        }\r\n    } else if(!((e === 1 && s === 0) || (e===0 && s === 1))){\r\n        var segments = [], shapeData, localShapeCollection;\r\n        for(i=0;i<len;i+=1){\r\n            shapeData = this.shapes[i];\r\n            if(!shapeData.shape.mdf && !this.mdf && !firstFrame && this.m !== 2){\r\n                shapeData.shape.paths = shapeData.localShapeCollection;\r\n            } else {\r\n                shapePaths = shapeData.shape.paths;\r\n                jLen = shapePaths._length;\r\n                totalShapeLength = 0;\r\n                if(!shapeData.shape.mdf && shapeData.pathsData){\r\n                    totalShapeLength = shapeData.totalShapeLength;\r\n                } else {\r\n                    pathsData = [];\r\n                    for(j=0;j<jLen;j+=1){\r\n                        pathData = bez.getSegmentsLength(shapePaths.shapes[j]);\r\n                        pathsData.push(pathData);\r\n                        totalShapeLength += pathData.totalLength;\r\n                    }\r\n                    shapeData.totalShapeLength = totalShapeLength;\r\n                    shapeData.pathsData = pathsData;\r\n                }\r\n\r\n                totalModifierLength += totalShapeLength;\r\n                shapeData.shape.mdf = true;\r\n            }\r\n        }\r\n        var shapeS = s, shapeE = e, addedLength = 0;\r\n        var j, jLen;\r\n        for(i = len - 1; i >= 0; i -= 1){\r\n            shapeData = this.shapes[i];\r\n            if (shapeData.shape.mdf) {\r\n                localShapeCollection = shapeData.localShapeCollection;\r\n                localShapeCollection.releaseShapes();\r\n                if(this.m === 2 && len > 1) {\r\n                    var edges = this.calculateShapeEdges(s, e, shapeData.totalShapeLength, addedLength, totalModifierLength);\r\n                    addedLength += shapeData.totalShapeLength;\r\n                } else {\r\n                    edges = [[shapeS, shapeE]]\r\n                }\r\n                jLen = edges.length;\r\n                for (j = 0; j < jLen; j += 1) {\r\n                    shapeS = edges[j][0];\r\n                    shapeE = edges[j][1];\r\n                    segments.length = 0;\r\n                    if(shapeE <= 1){\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * shapeS,\r\n                            e:shapeData.totalShapeLength * shapeE\r\n                        })\r\n                    }else if(shapeS >= 1){\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * (shapeS - 1),\r\n                            e:shapeData.totalShapeLength * (shapeE - 1)\r\n                        })\r\n                    }else{\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * shapeS,\r\n                            e:shapeData.totalShapeLength\r\n                        })\r\n                        segments.push({\r\n                            s:0,\r\n                            e:shapeData.totalShapeLength*(shapeE - 1)\r\n                        })\r\n                    }\r\n                    var newShapesData = this.addShapes(shapeData,segments[0]);\r\n                    if (segments[0].s !== segments[0].e) {\r\n                        var lastPos;\r\n                        if(segments.length > 1){\r\n                            if(shapeData.shape.v.c){\r\n                                var lastShape = newShapesData.pop();\r\n                                this.addPaths(newShapesData, localShapeCollection);\r\n                                newShapesData = this.addShapes(shapeData,segments[1], lastShape);\r\n                            } else {\r\n                                this.addPaths(newShapesData, localShapeCollection);\r\n                                newShapesData = this.addShapes(shapeData,segments[1]);\r\n                            }\r\n                        } \r\n                        this.addPaths(newShapesData, localShapeCollection);\r\n                    }\r\n                    \r\n                }\r\n                shapeData.shape.paths = localShapeCollection;\r\n            }\r\n        }\r\n    } else if(this.mdf){\r\n        for(i=0;i<len;i+=1){\r\n            this.shapes[i].shape.mdf = true;\r\n        }\r\n    }\r\n    if(!this.dynamicProperties.length){\r\n        this.mdf = false;\r\n    }\r\n}\r\n\r\nTrimModifier.prototype.addPaths = function(newPaths, localShapeCollection) {\r\n    var i, len = newPaths.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        localShapeCollection.addShape(newPaths[i])\r\n    }\r\n}\r\n\r\nTrimModifier.prototype.addSegment = function(pt1,pt2,pt3,pt4,shapePath,pos, newShape) {\r\n    /*console.log(pt1, 'vertex: v, at: ', pos);\r\n    console.log(pt2, 'vertex: o, at: ', pos);\r\n    console.log(pt3, 'vertex: i, at: ', pos + 1);\r\n    console.log(pt4, 'vertex: v, at: ', pos + 1);\r\n    console.log('newShape: ', newShape);*/\r\n    shapePath.setXYAt(pt2[0],pt2[1],'o',pos);\r\n    shapePath.setXYAt(pt3[0],pt3[1],'i',pos + 1);\r\n    if(newShape){\r\n        shapePath.setXYAt(pt1[0],pt1[1],'v',pos);\r\n    }\r\n    shapePath.setXYAt(pt4[0],pt4[1],'v',pos + 1);\r\n}\r\n\r\nTrimModifier.prototype.addShapes = function(shapeData, shapeSegment, shapePath){\r\n    var pathsData = shapeData.pathsData;\r\n    var shapePaths = shapeData.shape.paths.shapes;\r\n    var i, len = shapeData.shape.paths._length, j, jLen;\r\n    var addedLength = 0;\r\n    var currentLengthData,segmentCount;\r\n    var lengths;\r\n    var segment;\r\n    var shapes = [];\r\n    var initPos;\r\n    var newShape = true;\r\n    if(!shapePath){\r\n        shapePath = shape_pool.newShape();\r\n        segmentCount = 0;\r\n        initPos = 0;\r\n    } else {\r\n        segmentCount = shapePath._length;\r\n        initPos = shapePath._length;\r\n    }\r\n    shapes.push(shapePath);\r\n    for(i=0;i<len;i+=1){\r\n        lengths = pathsData[i].lengths;\r\n        shapePath.c = shapePaths[i].c;\r\n        jLen = shapePaths[i].c ? lengths.length : lengths.length + 1;\r\n        for(j=1;j<jLen;j+=1){\r\n            currentLengthData = lengths[j-1];\r\n            if(addedLength + currentLengthData.addedLength < shapeSegment.s){\r\n                addedLength += currentLengthData.addedLength;\r\n                shapePath.c = false;\r\n            } else if(addedLength > shapeSegment.e){\r\n                shapePath.c = false;\r\n                break;\r\n            } else {\r\n                if(shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + currentLengthData.addedLength){\r\n                    this.addSegment(shapePaths[i].v[j-1],shapePaths[i].o[j-1],shapePaths[i].i[j],shapePaths[i].v[j],shapePath,segmentCount,newShape);\r\n                    newShape = false;\r\n                } else {\r\n                    segment = bez.getNewSegment(shapePaths[i].v[j-1],shapePaths[i].v[j],shapePaths[i].o[j-1],shapePaths[i].i[j], (shapeSegment.s - addedLength)/currentLengthData.addedLength,(shapeSegment.e - addedLength)/currentLengthData.addedLength, lengths[j-1]);\r\n                    this.addSegment(segment.pt1,segment.pt3,segment.pt4,segment.pt2,shapePath,segmentCount,newShape);\r\n                    newShape = false;\r\n                    shapePath.c = false;\r\n                }\r\n                addedLength += currentLengthData.addedLength;\r\n                segmentCount += 1;\r\n            }\r\n        }\r\n        if(shapePaths[i].c){\r\n            currentLengthData = lengths[j-1];\r\n            if(addedLength <= shapeSegment.e){\r\n                var segmentLength = lengths[j-1].addedLength;\r\n                if(shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + segmentLength){\r\n                    this.addSegment(shapePaths[i].v[j-1],shapePaths[i].o[j-1],shapePaths[i].i[0],shapePaths[i].v[0],shapePath,segmentCount,newShape);\r\n                    newShape = false;\r\n                }else{\r\n                    segment = bez.getNewSegment(shapePaths[i].v[j-1],shapePaths[i].v[0],shapePaths[i].o[j-1],shapePaths[i].i[0], (shapeSegment.s - addedLength)/segmentLength,(shapeSegment.e - addedLength)/segmentLength, lengths[j-1]);\r\n                    this.addSegment(segment.pt1,segment.pt3,segment.pt4,segment.pt2,shapePath,segmentCount,newShape);\r\n                    newShape = false;\r\n                    shapePath.c = false;\r\n                }\r\n            } else {\r\n                shapePath.c = false;\r\n            }\r\n            addedLength += currentLengthData.addedLength;\r\n            segmentCount += 1;\r\n        }\r\n        if(shapePath._length){\r\n            shapePath.setXYAt(shapePath.v[initPos][0],shapePath.v[initPos][1],'i',initPos);\r\n            shapePath.setXYAt(shapePath.v[shapePath._length - 1][0],shapePath.v[shapePath._length - 1][1],'o',shapePath._length - 1);\r\n        }\r\n        if(addedLength > shapeSegment.e){\r\n            break;\r\n        }\r\n        if(i<len-1){\r\n            shapePath = shape_pool.newShape();\r\n            newShape = true;\r\n            shapes.push(shapePath);\r\n            segmentCount = 0;\r\n        }\r\n    }\r\n    return shapes;\r\n\r\n}\r\n\r\n\r\nShapeModifiers.registerModifier('tm',TrimModifier);\nfunction RoundCornersModifier(){};\r\nextendPrototype(ShapeModifier,RoundCornersModifier);\r\nRoundCornersModifier.prototype.processKeys = function(forceRender){\r\n    if(this.elem.globalData.frameId === this.frameId && !forceRender){\r\n        return;\r\n    }\r\n    this.mdf = forceRender ? true : false;\r\n    this.frameId = this.elem.globalData.frameId;\r\n    var i, len = this.dynamicProperties.length;\r\n\r\n    for(i=0;i<len;i+=1){\r\n        this.dynamicProperties[i].getValue();\r\n        if(this.dynamicProperties[i].mdf){\r\n            this.mdf = true;\r\n        }\r\n    }\r\n}\r\nRoundCornersModifier.prototype.initModifierProperties = function(elem,data){\r\n    this.getValue = this.processKeys;\r\n    this.rd = PropertyFactory.getProp(elem,data.r,0,null,this.dynamicProperties);\r\n    if(!this.dynamicProperties.length){\r\n        this.getValue(true);\r\n    }\r\n};\r\n\r\nRoundCornersModifier.prototype.processPath = function(path, round){\r\n    var cloned_path = shape_pool.newShape();\r\n    cloned_path.c = path.c;\r\n    var i, len = path._length;\r\n    var currentV,currentI,currentO,closerV, newV,newO,newI,distance,newPosPerc,index = 0;\r\n    var vX,vY,oX,oY,iX,iY;\r\n    for(i=0;i<len;i+=1){\r\n        currentV = path.v[i];\r\n        currentO = path.o[i];\r\n        currentI = path.i[i];\r\n        if(currentV[0]===currentO[0] && currentV[1]===currentO[1] && currentV[0]===currentI[0] && currentV[1]===currentI[1]){\r\n            if((i===0 || i === len - 1) && !path.c){\r\n                cloned_path.setTripleAt(currentV[0],currentV[1],currentO[0],currentO[1],currentI[0],currentI[1],index);\r\n                /*cloned_path.v[index] = currentV;\r\n                cloned_path.o[index] = currentO;\r\n                cloned_path.i[index] = currentI;*/\r\n                index += 1;\r\n            } else {\r\n                if(i===0){\r\n                    closerV = path.v[len-1];\r\n                } else {\r\n                    closerV = path.v[i-1];\r\n                }\r\n                distance = Math.sqrt(Math.pow(currentV[0]-closerV[0],2)+Math.pow(currentV[1]-closerV[1],2));\r\n                newPosPerc = distance ? Math.min(distance/2,round)/distance : 0;\r\n                vX = iX = currentV[0]+(closerV[0]-currentV[0])*newPosPerc;\r\n                vY = iY = currentV[1]-(currentV[1]-closerV[1])*newPosPerc;\r\n                oX = vX-(vX-currentV[0])*roundCorner;\r\n                oY = vY-(vY-currentV[1])*roundCorner;\r\n                cloned_path.setTripleAt(vX,vY,oX,oY,iX,iY,index);\r\n                index += 1;\r\n\r\n                if(i === len - 1){\r\n                    closerV = path.v[0];\r\n                } else {\r\n                    closerV = path.v[i+1];\r\n                }\r\n                distance = Math.sqrt(Math.pow(currentV[0]-closerV[0],2)+Math.pow(currentV[1]-closerV[1],2));\r\n                newPosPerc = distance ? Math.min(distance/2,round)/distance : 0;\r\n                vX = oX = currentV[0]+(closerV[0]-currentV[0])*newPosPerc;\r\n                vY = oY = currentV[1]+(closerV[1]-currentV[1])*newPosPerc;\r\n                iX = vX-(vX-currentV[0])*roundCorner;\r\n                iY = vY-(vY-currentV[1])*roundCorner;\r\n                cloned_path.setTripleAt(vX,vY,oX,oY,iX,iY,index);\r\n                index += 1;\r\n            }\r\n        } else {\r\n            cloned_path.setTripleAt(path.v[i][0],path.v[i][1],path.o[i][0],path.o[i][1],path.i[i][0],path.i[i][1],index);\r\n            index += 1;\r\n        }\r\n    }\r\n    return cloned_path;\r\n}\r\n\r\nRoundCornersModifier.prototype.processShapes = function(firstFrame){\r\n    var shapePaths;\r\n    var i, len = this.shapes.length;\r\n    var j, jLen;\r\n    var rd = this.rd.v;\r\n\r\n    if(rd !== 0){\r\n        var shapeData, newPaths, localShapeCollection;\r\n        for(i=0;i<len;i+=1){\r\n            shapeData = this.shapes[i];\r\n            newPaths = shapeData.shape.paths;\r\n            localShapeCollection = shapeData.localShapeCollection;\r\n            if(!(!shapeData.shape.mdf && !this.mdf && !firstFrame)){\r\n                localShapeCollection.releaseShapes();\r\n                shapeData.shape.mdf = true;\r\n                shapePaths = shapeData.shape.paths.shapes;\r\n                jLen = shapeData.shape.paths._length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    localShapeCollection.addShape(this.processPath(shapePaths[j],rd));\r\n                }\r\n            }\r\n            shapeData.shape.paths = shapeData.localShapeCollection;\r\n        }\r\n\r\n    }\r\n    if(!this.dynamicProperties.length){\r\n        this.mdf = false;\r\n    }\r\n}\r\n\r\n\r\nShapeModifiers.registerModifier('rd',RoundCornersModifier);\nfunction RepeaterModifier(){};\r\nRepeaterModifier.prototype.processKeys = function(forceRender){\r\n    if(this.elem.globalData.frameId === this.frameId && !forceRender){\r\n        return;\r\n    }\r\n    this.mdf = forceRender ? true : false;\r\n    var i, len = this.dynamicProperties.length;\r\n\r\n    for(i=0;i<len;i+=1){\r\n        this.dynamicProperties[i].getValue();\r\n        if(this.dynamicProperties[i].mdf){\r\n            this.mdf = true;\r\n        }\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.initModifierProperties = function(elem,data){\r\n    this.getValue = this.processKeys;\r\n    this.c = PropertyFactory.getProp(elem,data.c,0,null,this.dynamicProperties);\r\n    this.o = PropertyFactory.getProp(elem,data.o,0,null,this.dynamicProperties);\r\n    this.tr = PropertyFactory.getProp(elem,data.tr,2,null,this.dynamicProperties);\r\n    this.data = data;\r\n    if(!this.dynamicProperties.length){\r\n        this.getValue(true);\r\n    }\r\n    this.pMatrix = new Matrix();\r\n    this.rMatrix = new Matrix();\r\n    this.sMatrix = new Matrix();\r\n    this.tMatrix = new Matrix();\r\n    this.matrix = new Matrix();\r\n};\r\n\r\nRepeaterModifier.prototype.applyTransforms = function(pMatrix, rMatrix, sMatrix, transform, perc, inv){\r\n    var dir = inv ? -1 : 1;\r\n    var scaleX = transform.s.v[0] + (1 - transform.s.v[0]) * (1 - perc);\r\n    var scaleY = transform.s.v[1] + (1 - transform.s.v[1]) * (1 - perc);\r\n    pMatrix.translate(transform.p.v[0] * dir * perc, transform.p.v[1] * dir * perc, transform.p.v[2]);\r\n    rMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\r\n    rMatrix.rotate(-transform.r.v * dir * perc);\r\n    rMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\r\n    sMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\r\n    sMatrix.scale(inv ? 1/scaleX : scaleX, inv ? 1/scaleY : scaleY);\r\n    sMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\r\n}\r\n\r\nRepeaterModifier.prototype.init = function(elem, arr, pos, elemsData, dynamicProperties) {\r\n    this.elem = elem;\r\n    this.arr = arr;\r\n    this.pos = pos;\r\n    this.elemsData = elemsData;\r\n    this._currentCopies = 0;\r\n    this._elements = [];\r\n    this._groups = [];\r\n    this.dynamicProperties = [];\r\n    this.frameId = -1;\r\n    this.initModifierProperties(elem,arr[pos]);\r\n    var cont = 0;\r\n    while(pos>0){\r\n        pos -= 1;\r\n        //this._elements.unshift(arr.splice(pos,1)[0]);\r\n        this._elements.unshift(arr[pos]);\r\n        cont += 1;\r\n    }\r\n    if(this.dynamicProperties.length){\r\n        this.k = true;\r\n        dynamicProperties.push(this);\r\n    }else{\r\n        this.getValue(true);\r\n    }\r\n}\r\n\r\nRepeaterModifier.prototype.resetElements = function(elements){\r\n    var i, len = elements.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        elements[i]._processed = false;\r\n        if(elements[i].ty === 'gr'){\r\n            this.resetElements(elements[i].it);\r\n        }\r\n    }\r\n}\r\n\r\nRepeaterModifier.prototype.cloneElements = function(elements){\r\n    var i, len = elements.length;\r\n    var newElements = JSON.parse(JSON.stringify(elements));\r\n    this.resetElements(newElements);\r\n    return newElements;\r\n}\r\n\r\nRepeaterModifier.prototype.changeGroupRender = function(elements, renderFlag) {\r\n    var i, len = elements.length;\r\n    for(i = 0; i < len ; i += 1) {\r\n        elements[i]._render = renderFlag;\r\n        if(elements[i].ty === 'gr') {\r\n            this.changeGroupRender(elements[i].it, renderFlag);\r\n        }\r\n    }\r\n}\r\n\r\nRepeaterModifier.prototype.processShapes = function(firstFrame){\r\n\r\n    if(this.elem.globalData.frameId === this.frameId){\r\n        return;\r\n    }\r\n    this.frameId = this.elem.globalData.frameId;\r\n    if(!this.dynamicProperties.length && !firstFrame){\r\n        this.mdf = false;\r\n    }\r\n    if(this.mdf){\r\n        var copies = Math.ceil(this.c.v);\r\n        if(this._groups.length < copies){\r\n            while(this._groups.length < copies){\r\n                var group = {\r\n                    it:this.cloneElements(this._elements),\r\n                    ty:'gr'\r\n                }\r\n                group.it.push({\"a\":{\"a\":0,\"ix\":1,\"k\":[0,0]},\"nm\":\"Transform\",\"o\":{\"a\":0,\"ix\":7,\"k\":100},\"p\":{\"a\":0,\"ix\":2,\"k\":[0,0]},\"r\":{\"a\":0,\"ix\":6,\"k\":0},\"s\":{\"a\":0,\"ix\":3,\"k\":[100,100]},\"sa\":{\"a\":0,\"ix\":5,\"k\":0},\"sk\":{\"a\":0,\"ix\":4,\"k\":0},\"ty\":\"tr\"});\r\n                \r\n                this.arr.splice(0,0,group);\r\n                this._groups.splice(0,0,group);\r\n                this._currentCopies += 1;\r\n            }\r\n            this.elem.reloadShapes();\r\n        }\r\n        var i, cont = 0, renderFlag;\r\n        for(i = 0; i  <= this._groups.length - 1; i += 1){\r\n            renderFlag = cont < copies;\r\n            this._groups[i]._render = renderFlag;\r\n            this.changeGroupRender(this._groups[i].it, renderFlag);\r\n            cont += 1;\r\n        }\r\n        \r\n        this._currentCopies = copies;\r\n        this.elem.firstFrame = true;\r\n        ////\r\n\r\n        var offset = this.o.v;\r\n        var offsetModulo = offset%1;\r\n        var roundOffset = offset > 0 ? Math.floor(offset) : Math.ceil(offset);\r\n        var k;\r\n        var tMat = this.tr.v.props;\r\n        var pProps = this.pMatrix.props;\r\n        var rProps = this.rMatrix.props;\r\n        var sProps = this.sMatrix.props;\r\n        this.pMatrix.reset();\r\n        this.rMatrix.reset();\r\n        this.sMatrix.reset();\r\n        this.tMatrix.reset();\r\n        this.matrix.reset();\r\n        var iteration = 0;\r\n\r\n        if(offset > 0) {\r\n            while(iteration<roundOffset){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\r\n                iteration += 1;\r\n            }\r\n            if(offsetModulo){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, offsetModulo, false);\r\n                iteration += offsetModulo;\r\n            }\r\n        } else if(offset < 0) {\r\n            while(iteration>roundOffset){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, true);\r\n                iteration -= 1;\r\n            }\r\n            if(offsetModulo){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, - offsetModulo, true);\r\n                iteration -= offsetModulo;\r\n            }\r\n        }\r\n        i = this.data.m === 1 ? 0 : this._currentCopies - 1;\r\n        var dir = this.data.m === 1 ? 1 : -1;\r\n        cont = this._currentCopies;\r\n        while(cont){\r\n            if(iteration !== 0){\r\n                if((i !== 0 && dir === 1) || (i !== this._currentCopies - 1 && dir === -1)){\r\n                    this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\r\n                }\r\n                this.matrix.transform(rProps[0],rProps[1],rProps[2],rProps[3],rProps[4],rProps[5],rProps[6],rProps[7],rProps[8],rProps[9],rProps[10],rProps[11],rProps[12],rProps[13],rProps[14],rProps[15]);\r\n                this.matrix.transform(sProps[0],sProps[1],sProps[2],sProps[3],sProps[4],sProps[5],sProps[6],sProps[7],sProps[8],sProps[9],sProps[10],sProps[11],sProps[12],sProps[13],sProps[14],sProps[15]);\r\n                this.matrix.transform(pProps[0],pProps[1],pProps[2],pProps[3],pProps[4],pProps[5],pProps[6],pProps[7],pProps[8],pProps[9],pProps[10],pProps[11],pProps[12],pProps[13],pProps[14],pProps[15]);\r\n                var items = this.elemsData[i].it;\r\n                var itemsTransform = items[items.length - 1].transform.mProps.v.props;\r\n                var j, jLen = itemsTransform.length;\r\n                for(j=0;j<jLen;j+=1) {\r\n                    itemsTransform[j] = this.matrix.props[j];\r\n                }\r\n                this.matrix.reset();\r\n            } else {\r\n                this.matrix.reset();\r\n                var items = this.elemsData[i].it;\r\n                var itemsTransform = items[items.length - 1].transform.mProps.v.props;\r\n                var j, jLen = itemsTransform.length;\r\n                for(j=0;j<jLen;j+=1) {\r\n                    itemsTransform[j] = this.matrix.props[j];\r\n                }\r\n            }\r\n            iteration += 1;\r\n            cont -= 1;\r\n            i += dir;\r\n        }\r\n    }\r\n}\r\n\r\nRepeaterModifier.prototype.addShape = function(){}\r\n\r\nShapeModifiers.registerModifier('rp',RepeaterModifier);\nfunction ShapeCollection(){\r\n\tthis._length = 0;\r\n\tthis._maxLength = 4;\r\n\tthis.shapes = Array.apply(null,{length:this._maxLength});\r\n};\r\n\r\nShapeCollection.prototype.addShape = function(shapeData){\r\n\tif(this._length === this._maxLength){\r\n\t\tthis.shapes = this.shapes.concat(Array.apply(null,{length:this._maxLength}));\r\n\t\tthis._maxLength *= 2;\r\n\t}\r\n\tthis.shapes[this._length] = shapeData;\r\n\tthis._length += 1;\r\n};\r\n\r\nShapeCollection.prototype.releaseShapes = function(){\r\n\tvar i;\r\n\tfor(i = 0; i < this._length; i += 1) {\r\n\t\tshape_pool.release(this.shapes[i]);\r\n\t}\r\n\tthis._length = 0;\r\n};\nvar ImagePreloader = (function(){\r\n\r\n    var imagesLoadedCb;\r\n\r\n    function imageLoaded(){\r\n        this.loadedAssets += 1;\r\n        if(this.loadedAssets === this.totalImages){\r\n            if(imagesLoadedCb) {\r\n                imagesLoadedCb(null);\r\n            }\r\n        }\r\n    }\r\n\r\n    function getAssetsPath(assetData){\r\n        var path = '';\r\n        if(this.assetsPath){\r\n            var imagePath = assetData.p;\r\n            if(imagePath.indexOf('images/') !== -1){\r\n                imagePath = imagePath.split('/')[1];\r\n            }\r\n            path = this.assetsPath + imagePath;\r\n        } else {\r\n            path = this.path;\r\n            path += assetData.u ? assetData.u : '';\r\n            path += assetData.p;\r\n        }\r\n        return path;\r\n    }\r\n\r\n    function loadImage(path){\r\n        var img = document.createElement('img');\r\n        img.addEventListener('load', imageLoaded.bind(this), false);\r\n        img.addEventListener('error', imageLoaded.bind(this), false);\r\n        img.src = path;\r\n    }\r\n    function loadAssets(assets, cb){\r\n        imagesLoadedCb = cb;\r\n        this.totalAssets = assets.length;\r\n        var i;\r\n        for(i=0;i<this.totalAssets;i+=1){\r\n            if(!assets[i].layers){\r\n                loadImage.bind(this)(getAssetsPath.bind(this)(assets[i]));\r\n                this.totalImages += 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    function setPath(path){\r\n        this.path = path || '';\r\n    }\r\n\r\n    function setAssetsPath(path){\r\n        this.assetsPath = path || '';\r\n    }\r\n\r\n    return function ImagePreloader(){\r\n        this.loadAssets = loadAssets;\r\n        this.setAssetsPath = setAssetsPath;\r\n        this.setPath = setPath;\r\n        this.assetsPath = '';\r\n        this.path = '';\r\n        this.totalAssets = 0;\r\n        this.totalImages = 0;\r\n        this.loadedAssets = 0;\r\n    }\r\n}());\nvar featureSupport = (function(){\r\n\tvar ob = {\r\n\t\tmaskType: true\r\n\t}\r\n\tif (/MSIE 10/i.test(navigator.userAgent) || /MSIE 9/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /Edge\\/\\d./i.test(navigator.userAgent)) {\r\n\t   ob.maskType = false;\r\n\t}\r\n\treturn ob;\r\n}());\nvar filtersFactory = (function(){\r\n\tvar ob = {};\r\n\tob.createFilter = createFilter;\r\n\tob.createAlphaToLuminanceFilter = createAlphaToLuminanceFilter;\r\n\r\n\tfunction createFilter(filId){\r\n        \tvar fil = document.createElementNS(svgNS,'filter');\r\n        \tfil.setAttribute('id',filId);\r\n                fil.setAttribute('filterUnits','objectBoundingBox');\r\n                fil.setAttribute('x','0%');\r\n                fil.setAttribute('y','0%');\r\n                fil.setAttribute('width','100%');\r\n                fil.setAttribute('height','100%');\r\n                return fil;\r\n\t}\r\n\r\n\tfunction createAlphaToLuminanceFilter(){\r\n                var feColorMatrix = document.createElementNS(svgNS,'feColorMatrix');\r\n                feColorMatrix.setAttribute('type','matrix');\r\n                feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n                feColorMatrix.setAttribute('values','0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1');\r\n                return feColorMatrix;\r\n\t}\r\n\r\n\treturn ob;\r\n}())\nfunction TextAnimatorProperty(textData, renderType, elem){\r\n    this.mdf = false;\r\n    this._firstFrame = true;\r\n\tthis._hasMaskedPath = false;\r\n\tthis._frameId = -1;\r\n\tthis._dynamicProperties = [];\r\n\tthis._textData = textData;\r\n\tthis._renderType = renderType;\r\n\tthis._elem = elem;\r\n\tthis._animatorsData = Array.apply(null,{length:this._textData.a.length});\r\n\tthis._pathData = {}\r\n\tthis._moreOptions = {\r\n\t\talignment: {}\r\n\t};\r\n\tthis.renderedLetters = [];\r\n    this.lettersChangedFlag = false;\r\n\r\n}\r\n\r\nTextAnimatorProperty.prototype.searchProperties = function(dynamicProperties){\r\n    var i, len = this._textData.a.length, animatorData, animatorProps;\r\n    var getProp = PropertyFactory.getProp;\r\n    for(i=0;i<len;i+=1){\r\n        animatorProps = this._textData.a[i];\r\n        animatorData = {\r\n            a: {},\r\n            s: {}\r\n        };\r\n        if('r' in animatorProps.a) {\r\n            animatorData.a.r = getProp(this._elem,animatorProps.a.r,0,degToRads,this._dynamicProperties);\r\n        }\r\n        if('rx' in animatorProps.a) {\r\n            animatorData.a.rx = getProp(this._elem,animatorProps.a.rx,0,degToRads,this._dynamicProperties);\r\n        }\r\n        if('ry' in animatorProps.a) {\r\n            animatorData.a.ry = getProp(this._elem,animatorProps.a.ry,0,degToRads,this._dynamicProperties);\r\n        }\r\n        if('sk' in animatorProps.a) {\r\n            animatorData.a.sk = getProp(this._elem,animatorProps.a.sk,0,degToRads,this._dynamicProperties);\r\n        }\r\n        if('sa' in animatorProps.a) {\r\n            animatorData.a.sa = getProp(this._elem,animatorProps.a.sa,0,degToRads,this._dynamicProperties);\r\n        }\r\n        if('s' in animatorProps.a) {\r\n            animatorData.a.s = getProp(this._elem,animatorProps.a.s,1,0.01,this._dynamicProperties);\r\n        }\r\n        if('a' in animatorProps.a) {\r\n            animatorData.a.a = getProp(this._elem,animatorProps.a.a,1,0,this._dynamicProperties);\r\n        }\r\n        if('o' in animatorProps.a) {\r\n            animatorData.a.o = getProp(this._elem,animatorProps.a.o,0,0.01,this._dynamicProperties);\r\n        }\r\n        if('p' in animatorProps.a) {\r\n            animatorData.a.p = getProp(this._elem,animatorProps.a.p,1,0,this._dynamicProperties);\r\n        }\r\n        if('sw' in animatorProps.a) {\r\n            animatorData.a.sw = getProp(this._elem,animatorProps.a.sw,0,0,this._dynamicProperties);\r\n        }\r\n        if('sc' in animatorProps.a) {\r\n            animatorData.a.sc = getProp(this._elem,animatorProps.a.sc,1,0,this._dynamicProperties);\r\n        }\r\n        if('fc' in animatorProps.a) {\r\n            animatorData.a.fc = getProp(this._elem,animatorProps.a.fc,1,0,this._dynamicProperties);\r\n        }\r\n        if('fh' in animatorProps.a) {\r\n            animatorData.a.fh = getProp(this._elem,animatorProps.a.fh,0,0,this._dynamicProperties);\r\n        }\r\n        if('fs' in animatorProps.a) {\r\n            animatorData.a.fs = getProp(this._elem,animatorProps.a.fs,0,0.01,this._dynamicProperties);\r\n        }\r\n        if('fb' in animatorProps.a) {\r\n            animatorData.a.fb = getProp(this._elem,animatorProps.a.fb,0,0.01,this._dynamicProperties);\r\n        }\r\n        if('t' in animatorProps.a) {\r\n            animatorData.a.t = getProp(this._elem,animatorProps.a.t,0,0,this._dynamicProperties);\r\n        }\r\n        animatorData.s = PropertyFactory.getTextSelectorProp(this._elem,animatorProps.s,this._dynamicProperties);\r\n        animatorData.s.t = animatorProps.s.t;\r\n        this._animatorsData[i] = animatorData;\r\n    }\r\n    if(this._textData.p && 'm' in this._textData.p){\r\n        this._pathData = {\r\n            f: getProp(this._elem,this._textData.p.f,0,0,this._dynamicProperties),\r\n            l: getProp(this._elem,this._textData.p.l,0,0,this._dynamicProperties),\r\n            r: this._textData.p.r,\r\n            m: this._elem.maskManager.getMaskProperty(this._textData.p.m)\r\n        };\r\n        this._hasMaskedPath = true;\r\n    } else {\r\n        this._hasMaskedPath = false;\r\n    }\r\n    this._moreOptions.alignment = getProp(this._elem,this._textData.m.a,1,0,this._dynamicProperties);\r\n    if(this._dynamicProperties.length) {\r\n    \tdynamicProperties.push(this);\r\n    }\r\n}\r\n\r\nTextAnimatorProperty.prototype.getMeasures = function(documentData, lettersChangedFlag){\r\n    this.lettersChangedFlag = lettersChangedFlag;\r\n    if(!this.mdf && !this._firstFrame && !lettersChangedFlag && (!this._hasMaskedPath || !this._pathData.m.mdf)) {\r\n        return;\r\n    }\r\n    this._firstFrame = false;\r\n    var alignment = this._moreOptions.alignment.v;\r\n    var animators = this._animatorsData;\r\n    var textData = this._textData;\r\n    var matrixHelper = this.mHelper;\r\n    var renderType = this._renderType;\r\n    var renderedLettersCount = this.renderedLetters.length;\r\n    var data = this.data;\r\n    var xPos,yPos;\r\n    var i, len;\r\n    var letters = documentData.l;\r\n    if(this._hasMaskedPath) {\r\n        var mask = this._pathData.m;\r\n        if(!this._pathData.n || this._pathData.mdf){\r\n            var paths = mask.v;\r\n            if(this._pathData.r){\r\n                paths = reversePath(paths);\r\n            }\r\n            var pathInfo = {\r\n                tLength: 0,\r\n                segments: []\r\n            };\r\n            len = paths._length - 1;\r\n            var pathData;\r\n            var totalLength = 0;\r\n            for (i = 0; i < len; i += 1) {\r\n                pathData = {\r\n                    s: paths.v[i],\r\n                    e: paths.v[i + 1],\r\n                    to: [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]],\r\n                    ti: [paths.i[i + 1][0] - paths.v[i + 1][0], paths.i[i + 1][1] - paths.v[i + 1][1]]\r\n                };\r\n                bez.buildBezierData(pathData);\r\n                pathInfo.tLength += pathData.bezierData.segmentLength;\r\n                pathInfo.segments.push(pathData);\r\n                totalLength += pathData.bezierData.segmentLength;\r\n            }\r\n            i = len;\r\n            if (mask.v.c) {\r\n                pathData = {\r\n                    s: paths.v[i],\r\n                    e: paths.v[0],\r\n                    to: [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]],\r\n                    ti: [paths.i[0][0] - paths.v[0][0], paths.i[0][1] - paths.v[0][1]]\r\n                };\r\n                bez.buildBezierData(pathData);\r\n                pathInfo.tLength += pathData.bezierData.segmentLength;\r\n                pathInfo.segments.push(pathData);\r\n                totalLength += pathData.bezierData.segmentLength;\r\n            }\r\n            this._pathData.pi = pathInfo;\r\n        }\r\n        var pathInfo = this._pathData.pi;\r\n\r\n        var currentLength = this._pathData.f.v, segmentInd = 0, pointInd = 1, currentPoint, prevPoint, points;\r\n        var segmentLength = 0, flag = true;\r\n        var segments = pathInfo.segments;\r\n        if (currentLength < 0 && mask.v.c) {\r\n            if (pathInfo.tLength < Math.abs(currentLength)) {\r\n                currentLength = -Math.abs(currentLength) % pathInfo.tLength;\r\n            }\r\n            segmentInd = segments.length - 1;\r\n            points = segments[segmentInd].bezierData.points;\r\n            pointInd = points.length - 1;\r\n            while (currentLength < 0) {\r\n                currentLength += points[pointInd].partialLength;\r\n                pointInd -= 1;\r\n                if (pointInd < 0) {\r\n                    segmentInd -= 1;\r\n                    points = segments[segmentInd].bezierData.points;\r\n                    pointInd = points.length - 1;\r\n                }\r\n            }\r\n\r\n        }\r\n        points = segments[segmentInd].bezierData.points;\r\n        prevPoint = points[pointInd - 1];\r\n        currentPoint = points[pointInd];\r\n        var partialLength = currentPoint.partialLength;\r\n        var perc, tanAngle;\r\n    }\r\n\r\n\r\n    len = letters.length;\r\n    xPos = 0;\r\n    yPos = 0;\r\n    var yOff = documentData.s*1.2*.714;\r\n    var firstLine = true;\r\n    var animatorProps, animatorSelector;\r\n    var j, jLen;\r\n    var letterValue;\r\n\r\n    jLen = animators.length;\r\n    if (lettersChangedFlag) {\r\n        for (j = 0; j < jLen; j += 1) {\r\n            animatorSelector = animators[j].s;\r\n            animatorSelector.getValue(true);\r\n        }\r\n    }\r\n    var lastLetter;\r\n\r\n    var mult, ind = -1, offf, xPathPos, yPathPos;\r\n    var initPathPos = currentLength,initSegmentInd = segmentInd, initPointInd = pointInd, currentLine = -1;\r\n    var elemOpacity;\r\n    var sc,sw,fc,k;\r\n    var lineLength = 0;\r\n    var letterSw,letterSc,letterFc,letterM = '',letterP = this.defaultPropsArray,letterO;\r\n    for( i = 0; i < len; i += 1) {\r\n        matrixHelper.reset();\r\n        elemOpacity = 1;\r\n        if(letters[i].n) {\r\n            xPos = 0;\r\n            yPos += documentData.yOffset;\r\n            yPos += firstLine ? 1 : 0;\r\n            currentLength = initPathPos ;\r\n            firstLine = false;\r\n            lineLength = 0;\r\n            if(this._hasMaskedPath) {\r\n                segmentInd = initSegmentInd;\r\n                pointInd = initPointInd;\r\n                points = segments[segmentInd].bezierData.points;\r\n                prevPoint = points[pointInd - 1];\r\n                currentPoint = points[pointInd];\r\n                partialLength = currentPoint.partialLength;\r\n                segmentLength = 0;\r\n            }\r\n            letterO = letterSw = letterFc = letterM = '';\r\n            letterP = this.defaultPropsArray;\r\n        }else{\r\n            if(this._hasMaskedPath) {\r\n                if(currentLine !== letters[i].line){\r\n                    switch(documentData.j){\r\n                        case 1:\r\n                            currentLength += totalLength - documentData.lineWidths[letters[i].line];\r\n                            break;\r\n                        case 2:\r\n                            currentLength += (totalLength - documentData.lineWidths[letters[i].line])/2;\r\n                            break;\r\n                    }\r\n                    currentLine = letters[i].line;\r\n                }\r\n                if (ind !== letters[i].ind) {\r\n                    if (letters[ind]) {\r\n                        currentLength += letters[ind].extra;\r\n                    }\r\n                    currentLength += letters[i].an / 2;\r\n                    ind = letters[i].ind;\r\n                }\r\n                currentLength += alignment[0] * letters[i].an / 200;\r\n                var animatorOffset = 0;\r\n                for (j = 0; j < jLen; j += 1) {\r\n                    animatorProps = animators[j].a;\r\n                    if ('p' in animatorProps) {\r\n                        animatorSelector = animators[j].s;\r\n                        mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                        if(mult.length){\r\n                            animatorOffset += animatorProps.p.v[0] * mult[0];\r\n                        } else{\r\n                            animatorOffset += animatorProps.p.v[0] * mult;\r\n                        }\r\n\r\n                    }\r\n                    if ('a' in animatorProps) {\r\n                        animatorSelector = animators[j].s;\r\n                        mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                        if(mult.length){\r\n                            animatorOffset += animatorProps.a.v[0] * mult[0];\r\n                        } else{\r\n                            animatorOffset += animatorProps.a.v[0] * mult;\r\n                        }\r\n\r\n                    }\r\n                }\r\n                flag = true;\r\n                while (flag) {\r\n                    if (segmentLength + partialLength >= currentLength + animatorOffset || !points) {\r\n                        perc = (currentLength + animatorOffset - segmentLength) / currentPoint.partialLength;\r\n                        xPathPos = prevPoint.point[0] + (currentPoint.point[0] - prevPoint.point[0]) * perc;\r\n                        yPathPos = prevPoint.point[1] + (currentPoint.point[1] - prevPoint.point[1]) * perc;\r\n                        matrixHelper.translate(-alignment[0]*letters[i].an/200, -(alignment[1] * yOff / 100));\r\n                        flag = false;\r\n                    } else if (points) {\r\n                        segmentLength += currentPoint.partialLength;\r\n                        pointInd += 1;\r\n                        if (pointInd >= points.length) {\r\n                            pointInd = 0;\r\n                            segmentInd += 1;\r\n                            if (!segments[segmentInd]) {\r\n                                if (mask.v.c) {\r\n                                    pointInd = 0;\r\n                                    segmentInd = 0;\r\n                                    points = segments[segmentInd].bezierData.points;\r\n                                } else {\r\n                                    segmentLength -= currentPoint.partialLength;\r\n                                    points = null;\r\n                                }\r\n                            } else {\r\n                                points = segments[segmentInd].bezierData.points;\r\n                            }\r\n                        }\r\n                        if (points) {\r\n                            prevPoint = currentPoint;\r\n                            currentPoint = points[pointInd];\r\n                            partialLength = currentPoint.partialLength;\r\n                        }\r\n                    }\r\n                }\r\n                offf = letters[i].an / 2 - letters[i].add;\r\n                matrixHelper.translate(-offf, 0, 0);\r\n            } else {\r\n                offf = letters[i].an/2 - letters[i].add;\r\n                matrixHelper.translate(-offf,0,0);\r\n\r\n                // Grouping alignment\r\n                matrixHelper.translate(-alignment[0]*letters[i].an/200, -alignment[1]*yOff/100, 0);\r\n            }\r\n\r\n            lineLength += letters[i].l/2;\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if ('t' in animatorProps) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    if(this._hasMaskedPath) {\r\n                        if(mult.length) {\r\n                            currentLength += animatorProps.t*mult[0];\r\n                        } else {\r\n                            currentLength += animatorProps.t*mult;\r\n                        }\r\n                    }else{\r\n                        if(mult.length) {\r\n                            xPos += animatorProps.t.v*mult[0];\r\n                        } else {\r\n                            xPos += animatorProps.t.v*mult;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            lineLength += letters[i].l/2;\r\n            if(documentData.strokeWidthAnim) {\r\n                sw = documentData.sw || 0;\r\n            }\r\n            if(documentData.strokeColorAnim) {\r\n                if(documentData.sc){\r\n                    sc = [documentData.sc[0], documentData.sc[1], documentData.sc[2]];\r\n                }else{\r\n                    sc = [0,0,0];\r\n                }\r\n            }\r\n            if(documentData.fillColorAnim && documentData.fc) {\r\n                fc = [documentData.fc[0], documentData.fc[1], documentData.fc[2]];\r\n            }\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if ('a' in animatorProps) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n\r\n                    if(mult.length){\r\n                        matrixHelper.translate(-animatorProps.a.v[0]*mult[0], -animatorProps.a.v[1]*mult[1], animatorProps.a.v[2]*mult[2]);\r\n                    } else {\r\n                        matrixHelper.translate(-animatorProps.a.v[0]*mult, -animatorProps.a.v[1]*mult, animatorProps.a.v[2]*mult);\r\n                    }\r\n                }\r\n            }\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if ('s' in animatorProps) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    if(mult.length){\r\n                        matrixHelper.scale(1+((animatorProps.s.v[0]-1)*mult[0]),1+((animatorProps.s.v[1]-1)*mult[1]),1);\r\n                    } else {\r\n                        matrixHelper.scale(1+((animatorProps.s.v[0]-1)*mult),1+((animatorProps.s.v[1]-1)*mult),1);\r\n                    }\r\n                }\r\n            }\r\n            for(j=0;j<jLen;j+=1) {\r\n                animatorProps = animators[j].a;\r\n                animatorSelector = animators[j].s;\r\n                mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                if ('sk' in animatorProps) {\r\n                    if(mult.length) {\r\n                        matrixHelper.skewFromAxis(-animatorProps.sk.v * mult[0], animatorProps.sa.v * mult[1]);\r\n                    } else {\r\n                        matrixHelper.skewFromAxis(-animatorProps.sk.v * mult, animatorProps.sa.v * mult);\r\n                    }\r\n                }\r\n                if ('r' in animatorProps) {\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateZ(-animatorProps.r.v * mult[2]);\r\n                    } else {\r\n                        matrixHelper.rotateZ(-animatorProps.r.v * mult);\r\n                    }\r\n                }\r\n                if ('ry' in animatorProps) {\r\n\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateY(animatorProps.ry.v*mult[1]);\r\n                    }else{\r\n                        matrixHelper.rotateY(animatorProps.ry.v*mult);\r\n                    }\r\n                }\r\n                if ('rx' in animatorProps) {\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateX(animatorProps.rx.v*mult[0]);\r\n                    } else {\r\n                        matrixHelper.rotateX(animatorProps.rx.v*mult);\r\n                    }\r\n                }\r\n                if ('o' in animatorProps) {\r\n                    if(mult.length) {\r\n                        elemOpacity += ((animatorProps.o.v)*mult[0] - elemOpacity)*mult[0];\r\n                    } else {\r\n                        elemOpacity += ((animatorProps.o.v)*mult - elemOpacity)*mult;\r\n                    }\r\n                }\r\n                if (documentData.strokeWidthAnim && 'sw' in animatorProps) {\r\n                    if(mult.length) {\r\n                        sw += animatorProps.sw.v*mult[0];\r\n                    } else {\r\n                        sw += animatorProps.sw.v*mult;\r\n                    }\r\n                }\r\n                if (documentData.strokeColorAnim && 'sc' in animatorProps) {\r\n                    for(k=0;k<3;k+=1){\r\n                        if(mult.length) {\r\n                            sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k])*mult[0]\r\n                        } else {\r\n                            sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k])*mult;\r\n                        }\r\n                    }\r\n                }\r\n                if (documentData.fillColorAnim && documentData.fc) {\r\n                    if('fc' in animatorProps){\r\n                        for(k=0;k<3;k+=1){\r\n                            if(mult.length) {\r\n                                fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k])*mult[0];\r\n                            } else {\r\n                                fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k])*mult;\r\n                            }\r\n                        }\r\n                    }\r\n                    if('fh' in animatorProps){\r\n                        if(mult.length) {\r\n                            fc = addHueToRGB(fc,animatorProps.fh.v*mult[0]);\r\n                        } else {\r\n                            fc = addHueToRGB(fc,animatorProps.fh.v*mult);\r\n                        }\r\n                    }\r\n                    if('fs' in animatorProps){\r\n                        if(mult.length) {\r\n                            fc = addSaturationToRGB(fc,animatorProps.fs.v*mult[0]);\r\n                        } else {\r\n                            fc = addSaturationToRGB(fc,animatorProps.fs.v*mult);\r\n                        }\r\n                    }\r\n                    if('fb' in animatorProps){\r\n                        if(mult.length) {\r\n                            fc = addBrightnessToRGB(fc,animatorProps.fb.v*mult[0]);\r\n                        } else {\r\n                            fc = addBrightnessToRGB(fc,animatorProps.fb.v*mult);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n\r\n                if ('p' in animatorProps) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    if(this._hasMaskedPath) {\r\n                        if(mult.length) {\r\n                            matrixHelper.translate(0, animatorProps.p.v[1] * mult[0], -animatorProps.p.v[2] * mult[1]);\r\n                        } else {\r\n                            matrixHelper.translate(0, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\r\n                        }\r\n                    }else{\r\n                        if(mult.length) {\r\n                            matrixHelper.translate(animatorProps.p.v[0] * mult[0], animatorProps.p.v[1] * mult[1], -animatorProps.p.v[2] * mult[2]);\r\n                        } else {\r\n                            matrixHelper.translate(animatorProps.p.v[0] * mult, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(documentData.strokeWidthAnim){\r\n                letterSw = sw < 0 ? 0 : sw;\r\n            }\r\n            if(documentData.strokeColorAnim){\r\n                letterSc = 'rgb('+Math.round(sc[0]*255)+','+Math.round(sc[1]*255)+','+Math.round(sc[2]*255)+')';\r\n            }\r\n            if(documentData.fillColorAnim && documentData.fc){\r\n                letterFc = 'rgb('+Math.round(fc[0]*255)+','+Math.round(fc[1]*255)+','+Math.round(fc[2]*255)+')';\r\n            }\r\n\r\n            if(this._hasMaskedPath) {\r\n                matrixHelper.translate(0,-documentData.ls);\r\n\r\n                matrixHelper.translate(0, alignment[1]*yOff/100 + yPos,0);\r\n                if (textData.p.p) {\r\n                    tanAngle = (currentPoint.point[1] - prevPoint.point[1]) / (currentPoint.point[0] - prevPoint.point[0]);\r\n                    var rot = Math.atan(tanAngle) * 180 / Math.PI;\r\n                    if (currentPoint.point[0] < prevPoint.point[0]) {\r\n                        rot += 180;\r\n                    }\r\n                    matrixHelper.rotate(-rot * Math.PI / 180);\r\n                }\r\n                matrixHelper.translate(xPathPos, yPathPos, 0);\r\n                currentLength -= alignment[0]*letters[i].an/200;\r\n                if(letters[i+1] && ind !== letters[i+1].ind){\r\n                    currentLength += letters[i].an / 2;\r\n                    currentLength += documentData.tr/1000*documentData.s;\r\n                }\r\n            }else{\r\n\r\n                matrixHelper.translate(xPos,yPos,0);\r\n\r\n                if(documentData.ps){\r\n                    //matrixHelper.translate(documentData.ps[0],documentData.ps[1],0);\r\n                    matrixHelper.translate(documentData.ps[0],documentData.ps[1] + documentData.ascent,0);\r\n                }\r\n                switch(documentData.j){\r\n                    case 1:\r\n                        matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]),0,0);\r\n                        break;\r\n                    case 2:\r\n                        matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line])/2,0,0);\r\n                        break;\r\n                }\r\n                matrixHelper.translate(0,-documentData.ls);\r\n                matrixHelper.translate(offf,0,0);\r\n                matrixHelper.translate(alignment[0]*letters[i].an/200,alignment[1]*yOff/100,0);\r\n                xPos += letters[i].l + documentData.tr/1000*documentData.s;\r\n            }\r\n            if(renderType === 'html'){\r\n                letterM = matrixHelper.toCSS();\r\n            }else if(renderType === 'svg'){\r\n                letterM = matrixHelper.to2dCSS();\r\n            }else{\r\n                letterP = [matrixHelper.props[0],matrixHelper.props[1],matrixHelper.props[2],matrixHelper.props[3],matrixHelper.props[4],matrixHelper.props[5],matrixHelper.props[6],matrixHelper.props[7],matrixHelper.props[8],matrixHelper.props[9],matrixHelper.props[10],matrixHelper.props[11],matrixHelper.props[12],matrixHelper.props[13],matrixHelper.props[14],matrixHelper.props[15]];\r\n            }\r\n            letterO = elemOpacity;\r\n        }\r\n\r\n        if(renderedLettersCount <= i) {\r\n            letterValue = new LetterProps(letterO,letterSw,letterSc,letterFc,letterM,letterP);\r\n            this.renderedLetters.push(letterValue);\r\n            renderedLettersCount += 1;\r\n            this.lettersChangedFlag = true;\r\n        } else {\r\n            letterValue = this.renderedLetters[i];\r\n            this.lettersChangedFlag = letterValue.update(letterO, letterSw, letterSc, letterFc, letterM, letterP) || this.lettersChangedFlag;\r\n        }\r\n    }\r\n}\r\n\r\nTextAnimatorProperty.prototype.getValue = function(){\r\n\tif(this._elem.globalData.frameId === this._frameId){\r\n        return;\r\n    }\r\n    this._frameId = this._elem.globalData.frameId;\r\n\tvar i, len = this._dynamicProperties.length;\r\n    this.mdf = false;\r\n\tfor(i = 0; i < len; i += 1) {\r\n\t\tthis._dynamicProperties[i].getValue();\r\n        this.mdf = this._dynamicProperties[i].mdf || this.mdf;\r\n\t}\r\n}\r\n\r\nTextAnimatorProperty.prototype.mHelper = new Matrix();\r\nTextAnimatorProperty.prototype.defaultPropsArray = [];\nfunction LetterProps(o, sw, sc, fc, m, p){\r\n    this.o = o;\r\n    this.sw = sw;\r\n    this.sc = sc;\r\n    this.fc = fc;\r\n    this.m = m;\r\n    this.p = p;\r\n    this.mdf = {\r\n    \to: true,\r\n    \tsw: !!sw,\r\n    \tsc: !!sc,\r\n    \tfc: !!fc,\r\n    \tm: true,\r\n    \tp: true\r\n    };\r\n}\r\n\r\nLetterProps.prototype.update = function(o, sw, sc, fc, m, p) {\r\n\tthis.mdf.o = false;\r\n\tthis.mdf.sw = false;\r\n\tthis.mdf.sc = false;\r\n\tthis.mdf.fc = false;\r\n\tthis.mdf.m = false;\r\n\tthis.mdf.p = false;\r\n\tvar updated = false;\r\n\r\n\tif(this.o !== o) {\r\n\t\tthis.o = o;\r\n\t\tthis.mdf.o = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.sw !== sw) {\r\n\t\tthis.sw = sw;\r\n\t\tthis.mdf.sw = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.sc !== sc) {\r\n\t\tthis.sc = sc;\r\n\t\tthis.mdf.sc = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.fc !== fc) {\r\n\t\tthis.fc = fc;\r\n\t\tthis.mdf.fc = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.m !== m) {\r\n\t\tthis.m = m;\r\n\t\tthis.mdf.m = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(p.length && (this.p[0] !== p[0] || this.p[1] !== p[1] || this.p[4] !== p[4] || this.p[5] !== p[5] || this.p[12] !== p[12] || this.p[13] !== p[13])) {\r\n\t\tthis.p = p;\r\n\t\tthis.mdf.p = true;\r\n\t\tupdated = true;\r\n\t}\r\n\treturn updated;\r\n}\nfunction TextProperty(elem, data, dynamicProperties){\r\n\tthis._frameId = -99999;\r\n\tthis.pv = '';\r\n\tthis.v = '';\r\n\tthis.kf = false;\r\n\tthis.firstFrame = true;\r\n\tthis.mdf = true;\r\n\tthis.data = data;\r\n\tthis.elem = elem;\r\n\tthis.keysIndex = -1;\r\n\tthis.currentData = {\r\n\t\tascent: 0,\r\n        boxWidth: [0,0],\r\n        f: '',\r\n        fStyle: '',\r\n        fWeight: '',\r\n        fc: '',\r\n        j: '',\r\n        justifyOffset: '',\r\n        l: [],\r\n        lh: 0,\r\n        lineWidths: [],\r\n        ls: '',\r\n        of: '',\r\n        s: '',\r\n        sc: '',\r\n        sw: 0,\r\n        t: 0,\r\n        tr: 0,\r\n        fillColorAnim: false,\r\n        strokeColorAnim: false,\r\n        strokeWidthAnim: false,\r\n        yOffset: 0,\r\n        __complete: false\r\n\r\n\t}\r\n\tif(this.searchProperty()) {\r\n\t\tdynamicProperties.push(this);\r\n\t} else {\r\n\t\tthis.getValue(true);\r\n\t}\r\n}\r\n\r\nTextProperty.prototype.setCurrentData = function(data){\r\n\t\tvar currentData = this.currentData;\r\n        currentData.ascent = data.ascent;\r\n        currentData.boxWidth = data.boxWidth ? data.boxWidth : currentData.boxWidth;\r\n        currentData.f = data.f;\r\n        currentData.fStyle = data.fStyle;\r\n        currentData.fWeight = data.fWeight;\r\n        currentData.fc = data.fc;\r\n        currentData.j = data.j;\r\n        currentData.justifyOffset = data.justifyOffset;\r\n        currentData.l = data.l;\r\n        currentData.lh = data.lh;\r\n        currentData.lineWidths = data.lineWidths;\r\n        currentData.ls = data.ls;\r\n        currentData.of = data.of;\r\n        currentData.s = data.s;\r\n        currentData.sc = data.sc;\r\n        currentData.sw = data.sw;\r\n        currentData.t = data.t;\r\n        currentData.tr = data.tr;\r\n        currentData.fillColorAnim = data.fillColorAnim || currentData.fillColorAnim;\r\n        currentData.strokeColorAnim = data.strokeColorAnim || currentData.strokeColorAnim;\r\n        currentData.strokeWidthAnim = data.strokeWidthAnim || currentData.strokeWidthAnim;\r\n        currentData.yOffset = data.yOffset;\r\n        currentData.__complete = false;\r\n}\r\n\r\nTextProperty.prototype.searchProperty = function() {\r\n\tthis.kf = this.data.d.k.length > 1;\r\n\treturn this.kf;\r\n}\r\n\r\nTextProperty.prototype.getValue = function() {\r\n\tthis.mdf = false;\r\n\tvar frameId = this.elem.globalData.frameId;\r\n\tif((frameId === this._frameId || !this.kf) && !this.firstFrame) {\r\n\t\treturn;\r\n\t}\r\n\tvar textKeys = this.data.d.k, textDocumentData;\r\n    var i = 0, len = textKeys.length;\r\n    while(i <= len - 1) {\r\n        textDocumentData = textKeys[i].s;\r\n        if(i === len - 1 || textKeys[i+1].t > frameId){\r\n            break;\r\n        }\r\n        i += 1;\r\n    }\r\n    if(this.keysIndex !== i) {\r\n    \tif(!textDocumentData.__complete) {\r\n            this.completeTextData(textDocumentData);\r\n        }\r\n        this.setCurrentData(textDocumentData);\r\n        this.mdf = this.firstFrame ? false : true;\r\n        this.pv = this.v = this.currentData.t;\r\n        this.keysIndex = i;\r\n    }\r\n\tthis._frameId = frameId;\r\n}\r\n\r\nTextProperty.prototype.completeTextData = function(documentData) {\r\n    documentData.__complete = true;\r\n    var fontManager = this.elem.globalData.fontManager;\r\n    var data = this.data;\r\n    var letters = [];\r\n    var i, len;\r\n    var newLineFlag, index = 0, val;\r\n    var anchorGrouping = data.m.g;\r\n    var currentSize = 0, currentPos = 0, currentLine = 0, lineWidths = [];\r\n    var lineWidth = 0;\r\n    var maxLineWidth = 0;\r\n    var j, jLen;\r\n    var fontData = fontManager.getFontByName(documentData.f);\r\n    var charData, cLength = 0;\r\n    var styles = fontData.fStyle.split(' ');\r\n\r\n    var fWeight = 'normal', fStyle = 'normal';\r\n    len = styles.length;\r\n    var styleName;\r\n    for(i=0;i<len;i+=1){\r\n        styleName = styles[i].toLowerCase();\r\n        switch(styleName) {\r\n            case 'italic':\r\n            fStyle = 'italic';\r\n            break;\r\n            case 'bold':\r\n            fWeight = '700';\r\n            break;\r\n            case 'black':\r\n            fWeight = '900';\r\n            break;\r\n            case 'medium':\r\n            fWeight = '500';\r\n            break;\r\n            case 'regular':\r\n            case 'normal':\r\n            fWeight = '400';\r\n            case 'light':\r\n            case 'thin':\r\n            fWeight = '200';\r\n            break;\r\n        }\r\n    }\r\n    documentData.fWeight = fWeight;\r\n    documentData.fStyle = fStyle;\r\n    len = documentData.t.length;\r\n    var trackingOffset = documentData.tr/1000*documentData.s;\r\n    if(documentData.sz){\r\n        var boxWidth = documentData.sz[0];\r\n        var lastSpaceIndex = -1;\r\n        for(i=0;i<len;i+=1){\r\n            newLineFlag = false;\r\n            if(documentData.t.charAt(i) === ' '){\r\n                lastSpaceIndex = i;\r\n            }else if(documentData.t.charCodeAt(i) === 13){\r\n                lineWidth = 0;\r\n                newLineFlag = true;\r\n            }\r\n            if(fontManager.chars){\r\n                charData = fontManager.getCharData(documentData.t.charAt(i), fontData.fStyle, fontData.fFamily);\r\n                cLength = newLineFlag ? 0 : charData.w*documentData.s/100;\r\n            }else{\r\n                //tCanvasHelper.font = documentData.s + 'px '+ fontData.fFamily;\r\n                cLength = fontManager.measureText(documentData.t.charAt(i), documentData.f, documentData.s);\r\n            }\r\n            if(lineWidth + cLength > boxWidth && documentData.t.charAt(i) !== ' '){\r\n                if(lastSpaceIndex === -1){\r\n                    len += 1;\r\n                } else {\r\n                    i = lastSpaceIndex;\r\n                }\r\n                documentData.t = documentData.t.substr(0,i) + \"\\r\" + documentData.t.substr(i === lastSpaceIndex ? i + 1 : i);\r\n                lastSpaceIndex = -1;\r\n                lineWidth = 0;\r\n            }else {\r\n                lineWidth += cLength;\r\n                lineWidth += trackingOffset;\r\n            }\r\n        }\r\n        len = documentData.t.length;\r\n    }\r\n    lineWidth = - trackingOffset;\r\n    cLength = 0;\r\n    var uncollapsedSpaces = 0;\r\n    var currentChar;\r\n    for (i = 0;i < len ;i += 1) {\r\n        newLineFlag = false;\r\n        currentChar = documentData.t.charAt(i);\r\n        if(currentChar === ' '){\r\n            val = '\\u00A0';\r\n        }else if(currentChar.charCodeAt(0) === 13){\r\n            uncollapsedSpaces = 0;\r\n            lineWidths.push(lineWidth);\r\n            maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\r\n            lineWidth = - 2 * trackingOffset;\r\n            val = '';\r\n            newLineFlag = true;\r\n            currentLine += 1;\r\n        }else{\r\n            val = documentData.t.charAt(i);\r\n        }\r\n        if(fontManager.chars){\r\n            charData = fontManager.getCharData(currentChar, fontData.fStyle, fontManager.getFontByName(documentData.f).fFamily);\r\n            cLength = newLineFlag ? 0 : charData.w*documentData.s/100;\r\n        }else{\r\n            //var charWidth = fontManager.measureText(val, documentData.f, documentData.s);\r\n            //tCanvasHelper.font = documentData.s + 'px '+ fontManager.getFontByName(documentData.f).fFamily;\r\n            cLength = fontManager.measureText(val, documentData.f, documentData.s);\r\n        }\r\n\r\n        //\r\n        if(currentChar === ' '){\r\n            uncollapsedSpaces += cLength + trackingOffset;\r\n        } else {\r\n            lineWidth += cLength + trackingOffset + uncollapsedSpaces;\r\n            uncollapsedSpaces = 0;\r\n        }\r\n        letters.push({l:cLength,an:cLength,add:currentSize,n:newLineFlag, anIndexes:[], val: val, line: currentLine});\r\n        if(anchorGrouping == 2){\r\n            currentSize += cLength;\r\n            if(val == '' || val == '\\u00A0' || i == len - 1){\r\n                if(val == '' || val == '\\u00A0'){\r\n                    currentSize -= cLength;\r\n                }\r\n                while(currentPos<=i){\r\n                    letters[currentPos].an = currentSize;\r\n                    letters[currentPos].ind = index;\r\n                    letters[currentPos].extra = cLength;\r\n                    currentPos += 1;\r\n                }\r\n                index += 1;\r\n                currentSize = 0;\r\n            }\r\n        }else if(anchorGrouping == 3){\r\n            currentSize += cLength;\r\n            if(val == '' || i == len - 1){\r\n                if(val == ''){\r\n                    currentSize -= cLength;\r\n                }\r\n                while(currentPos<=i){\r\n                    letters[currentPos].an = currentSize;\r\n                    letters[currentPos].ind = index;\r\n                    letters[currentPos].extra = cLength;\r\n                    currentPos += 1;\r\n                }\r\n                currentSize = 0;\r\n                index += 1;\r\n            }\r\n        }else{\r\n            letters[index].ind = index;\r\n            letters[index].extra = 0;\r\n            index += 1;\r\n        }\r\n    }\r\n    documentData.l = letters;\r\n    maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\r\n    lineWidths.push(lineWidth);\r\n    if(documentData.sz){\r\n        documentData.boxWidth = documentData.sz[0];\r\n        documentData.justifyOffset = 0;\r\n    }else{\r\n        documentData.boxWidth = maxLineWidth;\r\n        switch(documentData.j){\r\n            case 1:\r\n                documentData.justifyOffset = - documentData.boxWidth;\r\n                break;\r\n            case 2:\r\n                documentData.justifyOffset = - documentData.boxWidth/2;\r\n                break;\r\n            default:\r\n                documentData.justifyOffset = 0;\r\n        }\r\n    }\r\n    documentData.lineWidths = lineWidths;\r\n\r\n    var animators = data.a, animatorData, letterData;\r\n    jLen = animators.length;\r\n    var based, ind, indexes = [];\r\n    for(j=0;j<jLen;j+=1){\r\n        animatorData = animators[j];\r\n        if(animatorData.a.sc){\r\n            documentData.strokeColorAnim = true;\r\n        }\r\n        if(animatorData.a.sw){\r\n            documentData.strokeWidthAnim = true;\r\n        }\r\n        if(animatorData.a.fc || animatorData.a.fh || animatorData.a.fs || animatorData.a.fb){\r\n            documentData.fillColorAnim = true;\r\n        }\r\n        ind = 0;\r\n        based = animatorData.s.b;\r\n        for(i=0;i<len;i+=1){\r\n            letterData = letters[i];\r\n            letterData.anIndexes[j] = ind;\r\n            if((based == 1 && letterData.val != '') || (based == 2 && letterData.val != '' && letterData.val != '\\u00A0') || (based == 3 && (letterData.n || letterData.val == '\\u00A0' || i == len - 1)) || (based == 4 && (letterData.n || i == len - 1))){\r\n                if(animatorData.s.rn === 1){\r\n                    indexes.push(ind);\r\n                }\r\n                ind += 1;\r\n            }\r\n        }\r\n        data.a[j].s.totalChars = ind;\r\n        var currentInd = -1, newInd;\r\n        if(animatorData.s.rn === 1){\r\n            for(i = 0; i < len; i += 1){\r\n                letterData = letters[i];\r\n                if(currentInd != letterData.anIndexes[j]){\r\n                    currentInd = letterData.anIndexes[j];\r\n                    newInd = indexes.splice(Math.floor(Math.random()*indexes.length),1)[0];\r\n                }\r\n                letterData.anIndexes[j] = newInd;\r\n            }\r\n        }\r\n    }\r\n    documentData.yOffset = documentData.lh || documentData.s*1.2;\r\n    documentData.ls = documentData.ls || 0;\r\n    documentData.ascent = fontData.ascent*documentData.s/100;\r\n}\r\n\r\nTextProperty.prototype.updateDocumentData = function(newData, index) {\r\n\tindex = index === undefined ? this.keysIndex : index;\r\n    var dData = this.data.d.k[index].s;\r\n    dData.__complete = false;\r\n    dData.t = newData.t;\r\n    this.keysIndex = -1;\r\n    this.firstFrame = true;\r\n    this.getValue();\r\n}\r\n\nvar pooling = (function(){\r\n\r\n\tfunction double(arr){\r\n\t\treturn arr.concat(Array.apply(null,{length:arr.length}))\r\n\t}\r\n\r\n\treturn {\r\n\t\tdouble: double\r\n\t}\r\n}());\nvar point_pool = (function(){\r\n\tvar ob = {\r\n\t\tnewPoint: newPoint,\r\n\t\trelease: release\r\n\t}\r\n\r\n\tvar _length = 0;\r\n\tvar _maxLength = 8;\r\n\tvar pool = Array.apply(null,{length:_maxLength});\r\n\r\n\tfunction newPoint(){\r\n\t\tvar point;\r\n\t\tif(_length){\r\n\t\t\t_length -= 1;\r\n\t\t\tpoint = pool[_length];\r\n\t\t} else {\r\n\t\t\tpoint = [0.1,0.1];\r\n\t\t}\r\n\t\treturn point;\r\n\t}\r\n\r\n\tfunction release(point) {\r\n\t\tif(_length === _maxLength) {\r\n\t\t\tpool = pooling.double(pool);\r\n\t\t\t_maxLength = _maxLength*2;\r\n\t\t}\r\n\t\tpool[_length] = point;\r\n\t\t_length += 1;\r\n\t}\r\n\r\n\r\n\treturn ob;\r\n}());\nvar shape_pool = (function(){\r\n\tvar ob = {\r\n\t\tclone: clone,\r\n\t\tnewShape: newShape,\r\n\t\trelease: release,\r\n\t\treleaseArray: releaseArray\r\n\t}\r\n\r\n\tvar _length = 0;\r\n\tvar _maxLength = 4;\r\n\tvar pool = Array.apply(null,{length:_maxLength});\r\n\r\n\tfunction newShape(){\r\n\t\tvar shapePath;\r\n\t\tif(_length){\r\n\t\t\t_length -= 1;\r\n\t\t\tshapePath = pool[_length];\r\n\t\t} else {\r\n\t\t\tshapePath = new ShapePath();\r\n\t\t}\r\n\t\treturn shapePath;\r\n\t}\r\n\r\n\tfunction release(shapePath) {\r\n\t\tif(_length === _maxLength) {\r\n\t\t\tpool = pooling.double(pool);\r\n\t\t\t_maxLength = _maxLength*2;\r\n\t\t}\r\n\t\tvar len = shapePath._length, i;\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tpoint_pool.release(shapePath.v[i]);\r\n\t\t\tpoint_pool.release(shapePath.i[i]);\r\n\t\t\tpoint_pool.release(shapePath.o[i]);\r\n\t\t\tshapePath.v[i] = null;\r\n\t\t\tshapePath.i[i] = null;\r\n\t\t\tshapePath.o[i] = null;\r\n\t\t}\r\n\t\tshapePath._length = 0;\r\n\t\tshapePath.c = false;\r\n\t\tpool[_length] = shapePath;\r\n\t\t_length += 1;\r\n\t}\r\n\r\n\tfunction releaseArray(shapePathsCollection, length) {\r\n\t\twhile(length--) {\r\n\t\t\trelease(shapePathsCollection[length]);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction clone(shape, transform) {\r\n\t\tvar i, len = shape._length === undefined ? shape.v.length : shape._length;\r\n\t\tvar cloned = newShape();\r\n\t\tcloned.setLength(len);\r\n\t\tcloned.c = shape.c;\r\n\r\n\t\tvar pt;\r\n\t\t\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tif(transform){\r\n\t\t\t\tpt = transform.applyToPointArray(shape.v[i][0],shape.v[i][1],0,2);\r\n\t\t\t\tcloned.setXYAt(pt[0],pt[1],'v',i);\r\n\t\t\t\tpoint_pool.release(pt);\r\n\t\t\t\tpt = transform.applyToPointArray(shape.o[i][0],shape.o[i][1],0,2);\r\n\t\t\t\tcloned.setXYAt(pt[0],pt[1],'o',i);\r\n\t\t\t\tpoint_pool.release(pt);\r\n\t\t\t\tpt = transform.applyToPointArray(shape.i[i][0],shape.i[i][1],0,2);\r\n\t\t\t\tcloned.setXYAt(pt[0],pt[1],'i',i);\r\n\t\t\t\tpoint_pool.release(pt);\r\n\t\t\t}else{\r\n\t\t\t\tcloned.setTripleAt(shape.v[i][0],shape.v[i][1],shape.o[i][0],shape.o[i][1],shape.i[i][0],shape.i[i][1], i);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn cloned\r\n\t}\r\n\r\n\r\n\treturn ob;\r\n}());\nvar shapeCollection_pool = (function(){\r\n\tvar ob = {\r\n\t\tnewShapeCollection: newShapeCollection,\r\n\t\trelease: release,\r\n\t\tclone: clone\r\n\t}\r\n\r\n\tvar _length = 0;\r\n\tvar _maxLength = 4;\r\n\tvar pool = Array.apply(null,{length:_maxLength});\r\n\r\n\tvar cont = 0;\r\n\r\n\tfunction newShapeCollection(){\r\n\t\tvar shapeCollection;\r\n\t\tif(_length){\r\n\t\t\t_length -= 1;\r\n\t\t\tshapeCollection = pool[_length];\r\n\t\t} else {\r\n\t\t\tshapeCollection = new ShapeCollection();\r\n\t\t}\r\n\t\treturn shapeCollection;\r\n\t}\r\n\r\n\tfunction release(shapeCollection) {\r\n\t\tvar i, len = shapeCollection._length;\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tshape_pool.release(shapeCollection.shapes[i]);\r\n\t\t}\r\n\t\tshapeCollection._length = 0;\r\n\r\n\t\tif(_length === _maxLength) {\r\n\t\t\tpool = pooling.double(pool);\r\n\t\t\t_maxLength = _maxLength*2;\r\n\t\t}\r\n\t\tpool[_length] = shapeCollection;\r\n\t\t_length += 1;\r\n\t}\r\n\r\n\tfunction clone(shapeCollection, originCollection) {\r\n\t\trelease(shapeCollection);\r\n\t\tif(_length === _maxLength) {\r\n\t\t\tpool = pooling.double(pool);\r\n\t\t\t_maxLength = _maxLength*2;\r\n\t\t}\r\n\t\tpool[_length] = shapeCollection;\r\n\t\t_length += 1;\r\n\t}\r\n\r\n\r\n\treturn ob;\r\n}());\nfunction BaseRenderer(){}\r\nBaseRenderer.prototype.checkLayers = function(num){\r\n    var i, len = this.layers.length, data;\r\n    this.completeLayers = true;\r\n    for (i = len - 1; i >= 0; i--) {\r\n        if (!this.elements[i]) {\r\n            data = this.layers[i];\r\n            if(data.ip - data.st <= (num - this.layers[i].st) && data.op - data.st > (num - this.layers[i].st))\r\n            {\r\n                this.buildItem(i);\r\n            }\r\n        }\r\n        this.completeLayers = this.elements[i] ? this.completeLayers:false;\r\n    }\r\n    this.checkPendingElements();\r\n};\r\n\r\nBaseRenderer.prototype.createItem = function(layer){\r\n    switch(layer.ty){\r\n        case 2:\r\n            return this.createImage(layer);\r\n        case 0:\r\n            return this.createComp(layer);\r\n        case 1:\r\n            return this.createSolid(layer);\r\n        case 4:\r\n            return this.createShape(layer);\r\n        case 5:\r\n            return this.createText(layer);\r\n        case 13:\r\n            return this.createCamera(layer);\r\n        case 99:\r\n            return null;\r\n    }\r\n    return this.createBase(layer);\r\n};\r\n\r\nBaseRenderer.prototype.createCamera = function(){\r\n    throw new Error('You\\'re using a 3d camera. Try the html renderer.');\r\n}\r\n\r\nBaseRenderer.prototype.buildAllItems = function(){\r\n    var i, len = this.layers.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.buildItem(i);\r\n    }\r\n    this.checkPendingElements();\r\n};\r\n\r\nBaseRenderer.prototype.includeLayers = function(newLayers){\r\n    this.completeLayers = false;\r\n    var i, len = newLayers.length;\r\n    var j, jLen = this.layers.length;\r\n    for(i=0;i<len;i+=1){\r\n        j = 0;\r\n        while(j<jLen){\r\n            if(this.layers[j].id == newLayers[i].id){\r\n                this.layers[j] = newLayers[i];\r\n                break;\r\n            }\r\n            j += 1;\r\n        }\r\n    }\r\n};\r\n\r\nBaseRenderer.prototype.setProjectInterface = function(pInterface){\r\n    this.globalData.projectInterface = pInterface;\r\n};\r\n\r\nBaseRenderer.prototype.initItems = function(){\r\n    if(!this.globalData.progressiveLoad){\r\n        this.buildAllItems();\r\n    }\r\n};\r\nBaseRenderer.prototype.buildElementParenting = function(element, parentName, hierarchy){\r\n    hierarchy = hierarchy || [];\r\n    var elements = this.elements;\r\n    var layers = this.layers;\r\n    var i=0, len = layers.length;\r\n    while(i<len){\r\n        if(layers[i].ind == parentName){\r\n            if(!elements[i] || elements[i] === true){\r\n                this.buildItem(i);\r\n                this.addPendingElement(element);\r\n            } else if(layers[i].parent !== undefined){\r\n                hierarchy.push(elements[i]);\r\n                elements[i]._isParent = true;\r\n                this.buildElementParenting(element,layers[i].parent, hierarchy);\r\n            } else {\r\n                hierarchy.push(elements[i]);\r\n                elements[i]._isParent = true;\r\n                element.setHierarchy(hierarchy);\r\n            }\r\n\r\n\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nBaseRenderer.prototype.addPendingElement = function(element){\r\n    this.pendingElements.push(element);\r\n};\nfunction SVGRenderer(animationItem, config){\r\n    this.animationItem = animationItem;\r\n    this.layers = null;\r\n    this.renderedFrame = -1;\r\n    this.globalData = {\r\n        frameNum: -1\r\n    };\r\n    this.renderConfig = {\r\n        preserveAspectRatio: (config && config.preserveAspectRatio) || 'xMidYMid meet',\r\n        progressiveLoad: (config && config.progressiveLoad) || false,\r\n        hideOnTransparent: (config && config.hideOnTransparent === false) ? false : true,\r\n        viewBoxOnly: (config && config.viewBoxOnly) || false,\r\n        className: (config && config.className) || ''\r\n    };\r\n    this.globalData.renderConfig = this.renderConfig;\r\n    this.elements = [];\r\n    this.pendingElements = [];\r\n    this.destroyed = false;\r\n\r\n}\r\n\r\nextendPrototype(BaseRenderer,SVGRenderer);\r\n\r\nSVGRenderer.prototype.createBase = function (data) {\r\n    return new SVGBaseElement(data, this.layerElement,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createShape = function (data) {\r\n    return new IShapeElement(data, this.layerElement,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createText = function (data) {\r\n    return new SVGTextElement(data, this.layerElement,this.globalData,this);\r\n\r\n};\r\n\r\nSVGRenderer.prototype.createImage = function (data) {\r\n    return new IImageElement(data, this.layerElement,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createComp = function (data) {\r\n    return new ICompElement(data, this.layerElement,this.globalData,this);\r\n\r\n};\r\n\r\nSVGRenderer.prototype.createSolid = function (data) {\r\n    return new ISolidElement(data, this.layerElement,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.configAnimation = function(animData){\r\n    this.layerElement = document.createElementNS(svgNS,'svg');\r\n    this.layerElement.setAttribute('xmlns','http://www.w3.org/2000/svg');\r\n    this.layerElement.setAttribute('viewBox','0 0 '+animData.w+' '+animData.h);\r\n    if(!this.renderConfig.viewBoxOnly) {\r\n        this.layerElement.setAttribute('width',animData.w);\r\n        this.layerElement.setAttribute('height',animData.h);\r\n        this.layerElement.style.width = '100%';\r\n        this.layerElement.style.height = '100%';\r\n    }\r\n    if(this.renderConfig.className) {\r\n        this.layerElement.setAttribute('class', this.renderConfig.className);\r\n    }\r\n    this.layerElement.setAttribute('preserveAspectRatio',this.renderConfig.preserveAspectRatio);\r\n    //this.layerElement.style.transform = 'translate3d(0,0,0)';\r\n    //this.layerElement.style.transformOrigin = this.layerElement.style.mozTransformOrigin = this.layerElement.style.webkitTransformOrigin = this.layerElement.style['-webkit-transform'] = \"0px 0px 0px\";\r\n    this.animationItem.wrapper.appendChild(this.layerElement);\r\n    //Mask animation\r\n    var defs = document.createElementNS(svgNS, 'defs');\r\n    this.globalData.defs = defs;\r\n    this.layerElement.appendChild(defs);\r\n    this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem);\r\n    this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem);\r\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\r\n    this.globalData.frameId = 0;\r\n    this.globalData.nm = animData.nm;\r\n    this.globalData.compSize = {\r\n        w: animData.w,\r\n        h: animData.h\r\n    };\r\n    this.data = animData;\r\n    this.globalData.frameRate = animData.fr;\r\n    var maskElement = document.createElementNS(svgNS, 'clipPath');\r\n    var rect = document.createElementNS(svgNS,'rect');\r\n    rect.setAttribute('width',animData.w);\r\n    rect.setAttribute('height',animData.h);\r\n    rect.setAttribute('x',0);\r\n    rect.setAttribute('y',0);\r\n    var maskId = 'animationMask_'+randomString(10);\r\n    maskElement.setAttribute('id', maskId);\r\n    maskElement.appendChild(rect);\r\n    var maskedElement = document.createElementNS(svgNS,'g');\r\n    maskedElement.setAttribute(\"clip-path\", \"url(\" + locationHref + \"#\"+maskId+\")\");\r\n    this.layerElement.appendChild(maskedElement);\r\n    defs.appendChild(maskElement);\r\n    this.layerElement = maskedElement;\r\n    this.layers = animData.layers;\r\n    this.globalData.fontManager = new FontManager();\r\n    this.globalData.fontManager.addChars(animData.chars);\r\n    this.globalData.fontManager.addFonts(animData.fonts,defs);\r\n    this.elements = Array.apply(null,{length:animData.layers.length});\r\n};\r\n\r\n\r\nSVGRenderer.prototype.destroy = function () {\r\n    this.animationItem.wrapper.innerHTML = '';\r\n    this.layerElement = null;\r\n    this.globalData.defs = null;\r\n    var i, len = this.layers ? this.layers.length : 0;\r\n    for (i = 0; i < len; i++) {\r\n        if(this.elements[i]){\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n    this.elements.length = 0;\r\n    this.destroyed = true;\r\n    this.animationItem = null;\r\n};\r\n\r\nSVGRenderer.prototype.updateContainerSize = function () {\r\n};\r\n\r\nSVGRenderer.prototype.buildItem  = function(pos){\r\n    var elements = this.elements;\r\n    if(elements[pos] || this.layers[pos].ty == 99){\r\n        return;\r\n    }\r\n    elements[pos] = true;\r\n    var element = this.createItem(this.layers[pos]);\r\n\r\n    elements[pos] = element;\r\n    if(expressionsPlugin){\r\n        if(this.layers[pos].ty === 0){\r\n            this.globalData.projectInterface.registerComposition(element);\r\n        }\r\n        element.initExpressions();\r\n    }\r\n    this.appendElementInPos(element,pos);\r\n    if(this.layers[pos].tt){\r\n        if(!this.elements[pos - 1] || this.elements[pos - 1] === true){\r\n            this.buildItem(pos - 1);\r\n            this.addPendingElement(element);\r\n        } else {\r\n            element.setMatte(elements[pos - 1].layerId);\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.checkPendingElements  = function(){\r\n    while(this.pendingElements.length){\r\n        var element = this.pendingElements.pop();\r\n        element.checkParenting();\r\n        if(element.data.tt){\r\n            var i = 0, len = this.elements.length;\r\n            while(i<len){\r\n                if(this.elements[i] === element){\r\n                    element.setMatte(this.elements[i - 1].layerId);\r\n                    break;\r\n                }\r\n                i += 1;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.renderFrame = function(num){\r\n    if(this.renderedFrame == num || this.destroyed){\r\n        return;\r\n    }\r\n    if(num === null){\r\n        num = this.renderedFrame;\r\n    }else{\r\n        this.renderedFrame = num;\r\n    }\r\n    //clearPoints();\r\n    /*console.log('-------');\r\n    console.log('FRAME ',num);*/\r\n    this.globalData.frameNum = num;\r\n    this.globalData.frameId += 1;\r\n    this.globalData.projectInterface.currentFrame = num;\r\n    var i, len = this.layers.length;\r\n    if(!this.completeLayers){\r\n        this.checkLayers(num);\r\n    }\r\n    for (i = len - 1; i >= 0; i--) {\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].prepareFrame(num - this.layers[i].st);\r\n        }\r\n    }\r\n    for (i = len - 1; i >= 0; i--) {\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].renderFrame();\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.appendElementInPos = function(element, pos){\r\n    var newElement = element.getBaseElement();\r\n    if(!newElement){\r\n        return;\r\n    }\r\n    var i = 0;\r\n    var nextElement;\r\n    while(i<pos){\r\n        if(this.elements[i] && this.elements[i]!== true && this.elements[i].getBaseElement()){\r\n            nextElement = this.elements[i].getBaseElement();\r\n        }\r\n        i += 1;\r\n    }\r\n    if(nextElement){\r\n        this.layerElement.insertBefore(newElement, nextElement);\r\n    } else {\r\n        this.layerElement.appendChild(newElement);\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.hide = function(){\r\n    this.layerElement.style.display = 'none';\r\n};\r\n\r\nSVGRenderer.prototype.show = function(){\r\n    this.layerElement.style.display = 'block';\r\n};\r\n\r\nSVGRenderer.prototype.searchExtraCompositions = function(assets){\r\n    var i, len = assets.length;\r\n    var floatingContainer = document.createElementNS(svgNS,'g');\r\n    for(i=0;i<len;i+=1){\r\n        if(assets[i].xt){\r\n            var comp = this.createComp(assets[i],floatingContainer,this.globalData.comp,null);\r\n            comp.initExpressions();\r\n            //comp.compInterface = CompExpressionInterface(comp);\r\n            //Expressions.addLayersInterface(comp.elements, this.globalData.projectInterface);\r\n            this.globalData.projectInterface.registerComposition(comp);\r\n        }\r\n    }\r\n};\r\n\nfunction MaskElement(data,element,globalData) {\r\n    this.dynamicProperties = [];\r\n    this.data = data;\r\n    this.element = element;\r\n    this.globalData = globalData;\r\n    this.storedData = [];\r\n    this.masksProperties = this.data.masksProperties;\r\n    this.viewData = Array.apply(null,{length:this.masksProperties.length});\r\n    this.maskElement = null;\r\n    this.firstFrame = true;\r\n    var defs = this.globalData.defs;\r\n    var i, len = this.masksProperties.length;\r\n\r\n\r\n    var path, properties = this.masksProperties;\r\n    var count = 0;\r\n    var currentMasks = [];\r\n    var j, jLen;\r\n    var layerId = randomString(10);\r\n    var rect, expansor, feMorph,x;\r\n    var maskType = 'clipPath', maskRef = 'clip-path';\r\n    for (i = 0; i < len; i++) {\r\n\r\n        if((properties[i].mode !== 'a' && properties[i].mode !== 'n')|| properties[i].inv || properties[i].o.k !== 100){\r\n            maskType = 'mask';\r\n            maskRef = 'mask';\r\n        }\r\n\r\n        if((properties[i].mode == 's' || properties[i].mode == 'i') && count == 0){\r\n            rect = document.createElementNS(svgNS, 'rect');\r\n            rect.setAttribute('fill', '#ffffff');\r\n            rect.setAttribute('width', this.element.comp.data.w);\r\n            rect.setAttribute('height', this.element.comp.data.h);\r\n            currentMasks.push(rect);\r\n        } else {\r\n            rect = null;\r\n        }\r\n\r\n        path = document.createElementNS(svgNS, 'path');\r\n        if(properties[i].mode == 'n') {\r\n            this.viewData[i] = {\r\n                op: PropertyFactory.getProp(this.element,properties[i].o,0,0.01,this.dynamicProperties),\r\n                prop: ShapePropertyFactory.getShapeProp(this.element,properties[i],3,this.dynamicProperties,null),\r\n                elem: path\r\n            };\r\n            defs.appendChild(path);\r\n            continue;\r\n        }\r\n        count += 1;\r\n\r\n        if(properties[i].mode == 's'){\r\n            path.setAttribute('fill', '#000000');\r\n        }else{\r\n            path.setAttribute('fill', '#ffffff');\r\n        }\r\n        path.setAttribute('clip-rule','nonzero');\r\n\r\n        if(properties[i].x.k !== 0){\r\n            maskType = 'mask';\r\n            maskRef = 'mask';\r\n            x = PropertyFactory.getProp(this.element,properties[i].x,0,null,this.dynamicProperties);\r\n            var filterID = 'fi_'+randomString(10);\r\n            expansor = document.createElementNS(svgNS,'filter');\r\n            expansor.setAttribute('id',filterID);\r\n            feMorph = document.createElementNS(svgNS,'feMorphology');\r\n            feMorph.setAttribute('operator','dilate');\r\n            feMorph.setAttribute('in','SourceGraphic');\r\n            feMorph.setAttribute('radius','0');\r\n            expansor.appendChild(feMorph);\r\n            defs.appendChild(expansor);\r\n            if(properties[i].mode == 's'){\r\n                path.setAttribute('stroke', '#000000');\r\n            }else{\r\n                path.setAttribute('stroke', '#ffffff');\r\n            }\r\n        }else{\r\n            feMorph = null;\r\n            x = null;\r\n        }\r\n\r\n\r\n        this.storedData[i] = {\r\n             elem: path,\r\n             x: x,\r\n             expan: feMorph,\r\n            lastPath: '',\r\n            lastOperator:'',\r\n            filterId:filterID,\r\n            lastRadius:0\r\n        };\r\n        if(properties[i].mode == 'i'){\r\n            jLen = currentMasks.length;\r\n            var g = document.createElementNS(svgNS,'g');\r\n            for(j=0;j<jLen;j+=1){\r\n                g.appendChild(currentMasks[j]);\r\n            }\r\n            var mask = document.createElementNS(svgNS,'mask');\r\n            mask.setAttribute('mask-type','alpha');\r\n            mask.setAttribute('id',layerId+'_'+count);\r\n            mask.appendChild(path);\r\n            defs.appendChild(mask);\r\n            g.setAttribute('mask','url(' + locationHref + '#'+layerId+'_'+count+')');\r\n\r\n            currentMasks.length = 0;\r\n            currentMasks.push(g);\r\n        }else{\r\n            currentMasks.push(path);\r\n        }\r\n        if(properties[i].inv && !this.solidPath){\r\n            this.solidPath = this.createLayerSolidPath();\r\n        }\r\n        this.viewData[i] = {\r\n            elem: path,\r\n            lastPath: '',\r\n            op: PropertyFactory.getProp(this.element,properties[i].o,0,0.01,this.dynamicProperties),\r\n            prop:ShapePropertyFactory.getShapeProp(this.element,properties[i],3,this.dynamicProperties,null)\r\n        };\r\n        if(rect){\r\n            this.viewData[i].invRect = rect;\r\n        }\r\n        if(!this.viewData[i].prop.k){\r\n            this.drawPath(properties[i],this.viewData[i].prop.v,this.viewData[i]);\r\n        }\r\n    }\r\n\r\n    this.maskElement = document.createElementNS(svgNS, maskType);\r\n\r\n    len = currentMasks.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.maskElement.appendChild(currentMasks[i]);\r\n    }\r\n\r\n    this.maskElement.setAttribute('id', layerId);\r\n    if(count > 0){\r\n        this.element.maskedElement.setAttribute(maskRef, \"url(\" + locationHref + \"#\" + layerId + \")\");\r\n    }\r\n\r\n    defs.appendChild(this.maskElement);\r\n};\r\n\r\nMaskElement.prototype.getMaskProperty = function(pos){\r\n    return this.viewData[pos].prop;\r\n};\r\n\r\nMaskElement.prototype.prepareFrame = function(){\r\n    var i, len = this.dynamicProperties.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.dynamicProperties[i].getValue();\r\n\r\n    }\r\n};\r\n\r\nMaskElement.prototype.renderFrame = function (finalMat) {\r\n    var i, len = this.masksProperties.length;\r\n    for (i = 0; i < len; i++) {\r\n        if(this.viewData[i].prop.mdf || this.firstFrame){\r\n            this.drawPath(this.masksProperties[i],this.viewData[i].prop.v,this.viewData[i]);\r\n        }\r\n        if(this.viewData[i].op.mdf || this.firstFrame){\r\n            this.viewData[i].elem.setAttribute('fill-opacity',this.viewData[i].op.v);\r\n        }\r\n        if(this.masksProperties[i].mode !== 'n'){\r\n            if(this.viewData[i].invRect && (this.element.finalTransform.mProp.mdf || this.firstFrame)){\r\n                this.viewData[i].invRect.setAttribute('x', -finalMat.props[12]);\r\n                this.viewData[i].invRect.setAttribute('y', -finalMat.props[13]);\r\n            }\r\n            if(this.storedData[i].x && (this.storedData[i].x.mdf || this.firstFrame)){\r\n                var feMorph = this.storedData[i].expan;\r\n                if(this.storedData[i].x.v < 0){\r\n                    if(this.storedData[i].lastOperator !== 'erode'){\r\n                        this.storedData[i].lastOperator = 'erode';\r\n                        this.storedData[i].elem.setAttribute('filter','url(' + locationHref + '#'+this.storedData[i].filterId+')');\r\n                    }\r\n                    feMorph.setAttribute('radius',-this.storedData[i].x.v);\r\n                }else{\r\n                    if(this.storedData[i].lastOperator !== 'dilate'){\r\n                        this.storedData[i].lastOperator = 'dilate';\r\n                        this.storedData[i].elem.setAttribute('filter',null);\r\n                    }\r\n                    this.storedData[i].elem.setAttribute('stroke-width', this.storedData[i].x.v*2);\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n    this.firstFrame = false;\r\n};\r\n\r\nMaskElement.prototype.getMaskelement = function () {\r\n    return this.maskElement;\r\n};\r\n\r\nMaskElement.prototype.createLayerSolidPath = function(){\r\n    var path = 'M0,0 ';\r\n    path += ' h' + this.globalData.compSize.w ;\r\n    path += ' v' + this.globalData.compSize.h ;\r\n    path += ' h-' + this.globalData.compSize.w ;\r\n    path += ' v-' + this.globalData.compSize.h + ' ';\r\n    return path;\r\n};\r\n\r\nMaskElement.prototype.drawPath = function(pathData,pathNodes,viewData){\r\n    var pathString = \" M\"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    var i, len;\r\n    len = pathNodes._length;\r\n    for(i=1;i<len;i+=1){\r\n        //pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[i][0]+','+pathNodes.i[i][1] + \" \"+pathNodes.v[i][0]+','+pathNodes.v[i][1];\r\n        pathString += \" C\"+bm_rnd(pathNodes.o[i-1][0])+','+bm_rnd(pathNodes.o[i-1][1]) + \" \"+bm_rnd(pathNodes.i[i][0])+','+bm_rnd(pathNodes.i[i][1]) + \" \"+bm_rnd(pathNodes.v[i][0])+','+bm_rnd(pathNodes.v[i][1]);\r\n    }\r\n        //pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[0][0]+','+pathNodes.i[0][1] + \" \"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    if(pathNodes.c && len > 1){\r\n        pathString += \" C\"+bm_rnd(pathNodes.o[i-1][0])+','+bm_rnd(pathNodes.o[i-1][1]) + \" \"+bm_rnd(pathNodes.i[0][0])+','+bm_rnd(pathNodes.i[0][1]) + \" \"+bm_rnd(pathNodes.v[0][0])+','+bm_rnd(pathNodes.v[0][1]);\r\n    }\r\n    //pathNodes.__renderedString = pathString;\r\n\r\n\r\n    if(viewData.lastPath !== pathString){\r\n        if(viewData.elem){\r\n            if(!pathNodes.c){\r\n                viewData.elem.setAttribute('d','');\r\n            }else if(pathData.inv){\r\n                viewData.elem.setAttribute('d',this.solidPath + pathString);\r\n            }else{\r\n                viewData.elem.setAttribute('d',pathString);\r\n            }\r\n        }\r\n        viewData.lastPath = pathString;\r\n    }\r\n};\r\n\r\nMaskElement.prototype.destroy = function(){\r\n    this.element = null;\r\n    this.globalData = null;\r\n    this.maskElement = null;\r\n    this.data = null;\r\n    this.masksProperties = null;\r\n};\nfunction BaseElement(){\r\n};\r\nBaseElement.prototype.checkMasks = function(){\r\n    if(!this.data.hasMask){\r\n        return false;\r\n    }\r\n    var i = 0, len = this.data.masksProperties.length;\r\n    while(i<len) {\r\n        if((this.data.masksProperties[i].mode !== 'n' && this.data.masksProperties[i].cl !== false)) {\r\n            return true;\r\n        }\r\n        i += 1;\r\n    }\r\n    return false;\r\n}\r\n\r\nBaseElement.prototype.checkParenting = function(){\r\n    if(this.data.parent !== undefined){\r\n        this.comp.buildElementParenting(this, this.data.parent);\r\n    }\r\n}\r\n\r\nBaseElement.prototype.prepareFrame = function(num){\r\n    if(this.data.ip - this.data.st <= num && this.data.op - this.data.st > num)\r\n    {\r\n        if(this.isVisible !== true){\r\n            this.elemMdf = true;\r\n            this.globalData.mdf = true;\r\n            this.isVisible = true;\r\n            this.firstFrame = true;\r\n            if(this.data.hasMask){\r\n                this.maskManager.firstFrame = true;\r\n            }\r\n        }\r\n    }else{\r\n        if(this.isVisible !== false){\r\n            this.elemMdf = true;\r\n            this.globalData.mdf = true;\r\n            this.isVisible = false;\r\n        }\r\n    }\r\n    var i, len = this.dynamicProperties.length;\r\n    for(i=0;i<len;i+=1){\r\n        if(this.isVisible || (this._isParent && this.dynamicProperties[i].type === 'transform')){\r\n            this.dynamicProperties[i].getValue();\r\n            if(this.dynamicProperties[i].mdf){\r\n                this.elemMdf = true;\r\n                this.globalData.mdf = true;\r\n            }\r\n        }\r\n    }\r\n    if(this.data.hasMask && this.isVisible){\r\n        this.maskManager.prepareFrame(num*this.data.sr);\r\n    }\r\n    \r\n    /* TODO check this\r\n    if(this.data.sy){\r\n        if(this.data.sy[0].renderedData[num]){\r\n            if(this.data.sy[0].renderedData[num].c){\r\n                this.feFlood.setAttribute('flood-color','rgb('+Math.round(this.data.sy[0].renderedData[num].c[0])+','+Math.round(this.data.sy[0].renderedData[num].c[1])+','+Math.round(this.data.sy[0].renderedData[num].c[2])+')');\r\n            }\r\n            if(this.data.sy[0].renderedData[num].s){\r\n                this.feMorph.setAttribute('radius',this.data.sy[0].renderedData[num].s);\r\n            }\r\n        }\r\n    }\r\n    */\r\n\r\n\r\n    this.currentFrameNum = num*this.data.sr;\r\n    return this.isVisible;\r\n};\r\n\r\nBaseElement.prototype.globalToLocal = function(pt){\r\n    var transforms = [];\r\n    transforms.push(this.finalTransform);\r\n    var flag = true;\r\n    var comp = this.comp;\r\n    while(flag){\r\n        if(comp.finalTransform){\r\n            if(comp.data.hasMask){\r\n                transforms.splice(0,0,comp.finalTransform);\r\n            }\r\n            comp = comp.comp;\r\n        } else {\r\n            flag = false;\r\n        }\r\n    }\r\n    var i, len = transforms.length,ptNew;\r\n    for(i=0;i<len;i+=1){\r\n        ptNew = transforms[i].mat.applyToPointArray(0,0,0);\r\n        //ptNew = transforms[i].mat.applyToPointArray(pt[0],pt[1],pt[2]);\r\n        pt = [pt[0] - ptNew[0],pt[1] - ptNew[1],0];\r\n    }\r\n    return pt;\r\n};\r\n\r\nBaseElement.prototype.initExpressions = function(){\r\n    this.layerInterface = LayerExpressionInterface(this);\r\n    //layers[i].layerInterface = LayerExpressionInterface(layers[i]);\r\n    //layers[i].layerInterface = LayerExpressionInterface(layers[i]);\r\n    if(this.data.hasMask){\r\n        this.layerInterface.registerMaskInterface(this.maskManager);\r\n    }\r\n    var effectsInterface = EffectsExpressionInterface.createEffectsInterface(this,this.layerInterface);\r\n    this.layerInterface.registerEffectsInterface(effectsInterface);\r\n\r\n    if(this.data.ty === 0 || this.data.xt){\r\n        this.compInterface = CompExpressionInterface(this);\r\n    } else if(this.data.ty === 4){\r\n        this.layerInterface.shapeInterface = ShapeExpressionInterface.createShapeInterface(this.shapesData,this.itemsData,this.layerInterface);\r\n    } else if(this.data.ty === 5){\r\n        this.layerInterface.textInterface = TextExpressionInterface(this);\r\n    }\r\n}\r\n\r\nBaseElement.prototype.setBlendMode = function(){\r\n    var blendModeValue = '';\r\n    switch(this.data.bm){\r\n        case 1:\r\n            blendModeValue = 'multiply';\r\n            break;\r\n        case 2:\r\n            blendModeValue = 'screen';\r\n            break;\r\n        case 3:\r\n            blendModeValue = 'overlay';\r\n            break;\r\n        case 4:\r\n            blendModeValue = 'darken';\r\n            break;\r\n        case 5:\r\n            blendModeValue = 'lighten';\r\n            break;\r\n        case 6:\r\n            blendModeValue = 'color-dodge';\r\n            break;\r\n        case 7:\r\n            blendModeValue = 'color-burn';\r\n            break;\r\n        case 8:\r\n            blendModeValue = 'hard-light';\r\n            break;\r\n        case 9:\r\n            blendModeValue = 'soft-light';\r\n            break;\r\n        case 10:\r\n            blendModeValue = 'difference';\r\n            break;\r\n        case 11:\r\n            blendModeValue = 'exclusion';\r\n            break;\r\n        case 12:\r\n            blendModeValue = 'hue';\r\n            break;\r\n        case 13:\r\n            blendModeValue = 'saturation';\r\n            break;\r\n        case 14:\r\n            blendModeValue = 'color';\r\n            break;\r\n        case 15:\r\n            blendModeValue = 'luminosity';\r\n            break;\r\n    }\r\n    var elem = this.baseElement || this.layerElement;\r\n\r\n    elem.style['mix-blend-mode'] = blendModeValue;\r\n}\r\n\r\nBaseElement.prototype.init = function(){\r\n    if(!this.data.sr){\r\n        this.data.sr = 1;\r\n    }\r\n    this.dynamicProperties = this.dynamicProperties || [];\r\n    if(this.data.ef){\r\n        this.effects = new EffectsManager(this.data,this,this.dynamicProperties);\r\n        //this.effect = this.effectsManager.bind(this.effectsManager);\r\n    }\r\n    //this.elemInterface = buildLayerExpressionInterface(this);\r\n    this.hidden = false;\r\n    this.firstFrame = true;\r\n    this.isVisible = false;\r\n    this._isParent = false;\r\n    this.currentFrameNum = -99999;\r\n    this.lastNum = -99999;\r\n    if(this.data.ks){\r\n        this.finalTransform = {\r\n            mProp: PropertyFactory.getProp(this,this.data.ks,2,null,this.dynamicProperties),\r\n            matMdf: false,\r\n            opMdf: false,\r\n            mat: new Matrix(),\r\n            opacity: 1\r\n        };\r\n        if(this.data.ao){\r\n            this.finalTransform.mProp.autoOriented = true;\r\n        }\r\n        this.finalTransform.op = this.finalTransform.mProp.o;\r\n        this.transform = this.finalTransform.mProp;\r\n        if(this.data.ty !== 11){\r\n            this.createElements();\r\n        }\r\n        if(this.data.hasMask){\r\n            this.addMasks(this.data);\r\n        }\r\n    }\r\n    this.elemMdf = false;\r\n};\r\nBaseElement.prototype.getType = function(){\r\n    return this.type;\r\n};\r\n\r\nBaseElement.prototype.resetHierarchy = function(){\r\n    if(!this.hierarchy){\r\n        this.hierarchy = [];\r\n    }else{\r\n        this.hierarchy.length = 0;\r\n    }\r\n};\r\n\r\nBaseElement.prototype.getHierarchy = function(){\r\n    if(!this.hierarchy){\r\n        this.hierarchy = [];\r\n    }\r\n    return this.hierarchy;\r\n};\r\n\r\nBaseElement.prototype.setHierarchy = function(hierarchy){\r\n    this.hierarchy = hierarchy;\r\n};\r\n\r\nBaseElement.prototype.getLayerSize = function(){\r\n    if(this.data.ty === 5){\r\n        return {w:this.data.textData.width,h:this.data.textData.height};\r\n    }else{\r\n        return {w:this.data.width,h:this.data.height};\r\n    }\r\n};\r\n\r\nBaseElement.prototype.hide = function(){\r\n\r\n};\r\n\r\nBaseElement.prototype.sourceRectAtTime = function(){\r\n    return {\r\n        top:0,\r\n        left:0,\r\n        width:100,\r\n        height:100\r\n    }\r\n};\r\n\r\nBaseElement.prototype.mHelper = new Matrix();\nfunction SVGBaseElement(data,parentContainer,globalData,comp, placeholder){\r\n    this.globalData = globalData;\r\n    this.comp = comp;\r\n    this.data = data;\r\n    this.matteElement = null;\r\n    this.transformedElement = null;\r\n    this.isTransparent = false;\r\n    this.parentContainer = parentContainer;\r\n    this.layerId = placeholder ? placeholder.layerId : 'ly_'+randomString(10);\r\n    this.placeholder = placeholder;\r\n    this._sizeChanged = false;\r\n    this.init();\r\n};\r\n\r\ncreateElement(BaseElement, SVGBaseElement);\r\n\r\nSVGBaseElement.prototype.createElements = function(){\r\n    this.layerElement = document.createElementNS(svgNS,'g');\r\n    this.transformedElement = this.layerElement;\r\n    if(this.data.hasMask){\r\n        this.maskedElement = this.layerElement;\r\n    }\r\n    var layerElementParent = null;\r\n    if(this.data.td){\r\n        if(this.data.td == 3 || this.data.td == 1){\r\n            var masker = document.createElementNS(svgNS,'mask');\r\n            masker.setAttribute('id',this.layerId);\r\n            masker.setAttribute('mask-type',this.data.td == 3 ? 'luminance':'alpha');\r\n            masker.appendChild(this.layerElement);\r\n            layerElementParent = masker;\r\n            this.globalData.defs.appendChild(masker);\r\n            ////// This is only for IE and Edge when mask if of type alpha\r\n            if(!featureSupport.maskType && this.data.td == 1){\r\n                masker.setAttribute('mask-type','luminance');\r\n                var filId = randomString(10);\r\n                var fil = filtersFactory.createFilter(filId);\r\n                this.globalData.defs.appendChild(fil);\r\n                fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\r\n                var gg = document.createElementNS(svgNS,'g');\r\n                gg.appendChild(this.layerElement);\r\n                layerElementParent = gg;\r\n                masker.appendChild(gg);\r\n                gg.setAttribute('filter','url(' + locationHref + '#'+filId+')');\r\n            }\r\n        }else if(this.data.td == 2){\r\n            var maskGroup = document.createElementNS(svgNS,'mask');\r\n            maskGroup.setAttribute('id',this.layerId);\r\n            maskGroup.setAttribute('mask-type','alpha');\r\n            var maskGrouper = document.createElementNS(svgNS,'g');\r\n            maskGroup.appendChild(maskGrouper);\r\n            var filId = randomString(10);\r\n            var fil = filtersFactory.createFilter(filId);\r\n            ////\r\n\r\n            var feColorMatrix = document.createElementNS(svgNS,'feColorMatrix');\r\n            feColorMatrix.setAttribute('type','matrix');\r\n            feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n            feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 -1 1');\r\n            fil.appendChild(feColorMatrix);\r\n\r\n            ////\r\n            /*var feCTr = document.createElementNS(svgNS,'feComponentTransfer');\r\n            feCTr.setAttribute('in','SourceGraphic');\r\n            fil.appendChild(feCTr);\r\n            var feFunc = document.createElementNS(svgNS,'feFuncA');\r\n            feFunc.setAttribute('type','table');\r\n            feFunc.setAttribute('tableValues','1.0 0.0');\r\n            feCTr.appendChild(feFunc);*/\r\n            this.globalData.defs.appendChild(fil);\r\n            var alphaRect = document.createElementNS(svgNS,'rect');\r\n            alphaRect.setAttribute('width',this.comp.data.w);\r\n            alphaRect.setAttribute('height',this.comp.data.h);\r\n            alphaRect.setAttribute('x','0');\r\n            alphaRect.setAttribute('y','0');\r\n            alphaRect.setAttribute('fill','#ffffff');\r\n            alphaRect.setAttribute('opacity','0');\r\n            maskGrouper.setAttribute('filter','url(' + locationHref + '#'+filId+')');\r\n            maskGrouper.appendChild(alphaRect);\r\n            maskGrouper.appendChild(this.layerElement);\r\n            layerElementParent = maskGrouper;\r\n            if(!featureSupport.maskType){\r\n                maskGroup.setAttribute('mask-type','luminance');\r\n                fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\r\n                var gg = document.createElementNS(svgNS,'g');\r\n                maskGrouper.appendChild(alphaRect);\r\n                gg.appendChild(this.layerElement);\r\n                layerElementParent = gg;\r\n                maskGrouper.appendChild(gg);\r\n            }\r\n            this.globalData.defs.appendChild(maskGroup);\r\n        }\r\n    }else if(this.data.hasMask || this.data.tt){\r\n        if(this.data.tt){\r\n            this.matteElement = document.createElementNS(svgNS,'g');\r\n            this.matteElement.appendChild(this.layerElement);\r\n            layerElementParent = this.matteElement;\r\n            this.baseElement = this.matteElement;\r\n        }else{\r\n            this.baseElement = this.layerElement;\r\n        }\r\n    }else{\r\n        this.baseElement = this.layerElement;\r\n    }\r\n    if((this.data.ln || this.data.cl) && (this.data.ty === 4 || this.data.ty === 0)){\r\n        if(this.data.ln){\r\n            this.layerElement.setAttribute('id',this.data.ln);\r\n        }\r\n        if(this.data.cl){\r\n            this.layerElement.setAttribute('class',this.data.cl);\r\n        }\r\n    }\r\n    if(this.data.ty === 0){\r\n            var cp = document.createElementNS(svgNS, 'clipPath');\r\n            var pt = document.createElementNS(svgNS,'path');\r\n            pt.setAttribute('d','M0,0 L'+this.data.w+',0'+' L'+this.data.w+','+this.data.h+' L0,'+this.data.h+'z');\r\n            var clipId = 'cp_'+randomString(8);\r\n            cp.setAttribute('id',clipId);\r\n            cp.appendChild(pt);\r\n            this.globalData.defs.appendChild(cp);\r\n        if(this.checkMasks()){\r\n            var cpGroup = document.createElementNS(svgNS,'g');\r\n            cpGroup.setAttribute('clip-path','url(' + locationHref + '#'+clipId+')');\r\n            cpGroup.appendChild(this.layerElement);\r\n            this.transformedElement = cpGroup;\r\n            if(layerElementParent){\r\n                layerElementParent.appendChild(this.transformedElement);\r\n            } else {\r\n                this.baseElement = this.transformedElement;\r\n            }\r\n        } else {\r\n            this.layerElement.setAttribute('clip-path','url(' + locationHref + '#'+clipId+')');\r\n        }\r\n        \r\n    }\r\n    if(this.data.bm !== 0){\r\n        this.setBlendMode();\r\n    }\r\n    if(this.layerElement !== this.parentContainer){\r\n        this.placeholder = null;\r\n    }\r\n    /* Todo performance killer\r\n    if(this.data.sy){\r\n        var filterID = 'st_'+randomString(10);\r\n        var c = this.data.sy[0].c.k;\r\n        var r = this.data.sy[0].s.k;\r\n        var expansor = document.createElementNS(svgNS,'filter');\r\n        expansor.setAttribute('id',filterID);\r\n        var feFlood = document.createElementNS(svgNS,'feFlood');\r\n        this.feFlood = feFlood;\r\n        if(!c[0].e){\r\n            feFlood.setAttribute('flood-color','rgb('+c[0]+','+c[1]+','+c[2]+')');\r\n        }\r\n        feFlood.setAttribute('result','base');\r\n        expansor.appendChild(feFlood);\r\n        var feMorph = document.createElementNS(svgNS,'feMorphology');\r\n        feMorph.setAttribute('operator','dilate');\r\n        feMorph.setAttribute('in','SourceGraphic');\r\n        feMorph.setAttribute('result','bigger');\r\n        this.feMorph = feMorph;\r\n        if(!r.length){\r\n            feMorph.setAttribute('radius',this.data.sy[0].s.k);\r\n        }\r\n        expansor.appendChild(feMorph);\r\n        var feColorMatrix = document.createElementNS(svgNS,'feColorMatrix');\r\n        feColorMatrix.setAttribute('result','mask');\r\n        feColorMatrix.setAttribute('in','bigger');\r\n        feColorMatrix.setAttribute('type','matrix');\r\n        feColorMatrix.setAttribute('values','0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0');\r\n        expansor.appendChild(feColorMatrix);\r\n        var feComposite = document.createElementNS(svgNS,'feComposite');\r\n        feComposite.setAttribute('result','drop');\r\n        feComposite.setAttribute('in','base');\r\n        feComposite.setAttribute('in2','mask');\r\n        feComposite.setAttribute('operator','in');\r\n        expansor.appendChild(feComposite);\r\n        var feBlend = document.createElementNS(svgNS,'feBlend');\r\n        feBlend.setAttribute('in','SourceGraphic');\r\n        feBlend.setAttribute('in2','drop');\r\n        feBlend.setAttribute('mode','normal');\r\n        expansor.appendChild(feBlend);\r\n        this.globalData.defs.appendChild(expansor);\r\n        var cont = document.createElementNS(svgNS,'g');\r\n        if(this.layerElement === this.parentContainer){\r\n            this.layerElement = cont;\r\n        }else{\r\n            cont.appendChild(this.layerElement);\r\n        }\r\n        cont.setAttribute('filter','url(#'+filterID+')');\r\n        if(this.data.td){\r\n            cont.setAttribute('data-td',this.data.td);\r\n        }\r\n        if(this.data.td == 3){\r\n            this.globalData.defs.appendChild(cont);\r\n        }else if(this.data.td == 2){\r\n            maskGrouper.appendChild(cont);\r\n        }else if(this.data.td == 1){\r\n            masker.appendChild(cont);\r\n        }else{\r\n            if(this.data.hasMask && this.data.tt){\r\n                this.matteElement.appendChild(cont);\r\n            }else{\r\n                this.appendNodeToParent(cont);\r\n            }\r\n        }\r\n    }*/\r\n    if(this.data.ef){\r\n        this.effectsManager = new SVGEffects(this);\r\n    }\r\n    this.checkParenting();\r\n};\r\n\r\n\r\nSVGBaseElement.prototype.setBlendMode = BaseElement.prototype.setBlendMode;\r\n\r\nSVGBaseElement.prototype.renderFrame = function(parentTransform){\r\n    if(this.data.ty === 3 || this.data.hd || !this.isVisible){\r\n        return false;\r\n    }\r\n\r\n    this.lastNum = this.currentFrameNum;\r\n    this.finalTransform.opMdf = this.firstFrame || this.finalTransform.op.mdf;\r\n    this.finalTransform.matMdf = this.firstFrame || this.finalTransform.mProp.mdf;\r\n    this.finalTransform.opacity = this.finalTransform.op.v;\r\n\r\n    var mat;\r\n    var finalMat = this.finalTransform.mat;\r\n\r\n    if(this.hierarchy){\r\n        var i = 0, len = this.hierarchy.length;\r\n        if(!this.finalTransform.matMdf) {\r\n            while(i < len) {\r\n                if(this.hierarchy[i].finalTransform.mProp.mdf) {\r\n                    this.finalTransform.matMdf = true;\r\n                    break;\r\n                }\r\n                i += 1;\r\n            }\r\n        }\r\n        \r\n        if(this.finalTransform.matMdf) {\r\n            mat = this.finalTransform.mProp.v.props;\r\n            finalMat.cloneFromProps(mat);\r\n            for(i=0;i<len;i+=1){\r\n                mat = this.hierarchy[i].finalTransform.mProp.v.props;\r\n                finalMat.transform(mat[0],mat[1],mat[2],mat[3],mat[4],mat[5],mat[6],mat[7],mat[8],mat[9],mat[10],mat[11],mat[12],mat[13],mat[14],mat[15]);\r\n            }\r\n        }\r\n        \r\n    }else if(this.isVisible){\r\n        finalMat = this.finalTransform.mProp.v;\r\n    }\r\n    if(this.finalTransform.matMdf && this.layerElement){\r\n        this.transformedElement.setAttribute('transform',finalMat.to2dCSS());\r\n    }\r\n    if(this.finalTransform.opMdf && this.layerElement){\r\n        if(this.finalTransform.op.v <= 0) {\r\n            if(!this.isTransparent && this.globalData.renderConfig.hideOnTransparent){\r\n                this.isTransparent = true;\r\n                this.hide();\r\n            }\r\n        } else if(this.hidden && this.isTransparent){\r\n            this.isTransparent = false;\r\n            this.show();\r\n        }\r\n        this.transformedElement.setAttribute('opacity',this.finalTransform.op.v);\r\n    }\r\n\r\n    if(this.data.hasMask){\r\n        this.maskManager.renderFrame(finalMat);\r\n    }\r\n    if(this.effectsManager){\r\n        this.effectsManager.renderFrame(this.firstFrame);\r\n    }\r\n    return this.isVisible;\r\n};\r\n\r\nSVGBaseElement.prototype.destroy = function(){\r\n    this.layerElement = null;\r\n    this.parentContainer = null;\r\n    if(this.matteElement) {\r\n        this.matteElement = null;\r\n    }\r\n    if(this.maskManager) {\r\n        this.maskManager.destroy();\r\n    }\r\n};\r\n\r\nSVGBaseElement.prototype.getBaseElement = function(){\r\n    return this.baseElement;\r\n};\r\nSVGBaseElement.prototype.addMasks = function(data){\r\n    this.maskManager = new MaskElement(data,this,this.globalData);\r\n};\r\n\r\nSVGBaseElement.prototype.setMatte = function(id){\r\n    if(!this.matteElement){\r\n        return;\r\n    }\r\n    this.matteElement.setAttribute(\"mask\", \"url(\" + locationHref + \"#\" + id + \")\");\r\n};\r\n\r\nSVGBaseElement.prototype.hide = function(){\r\n    if(!this.hidden){\r\n        this.layerElement.style.display = 'none';\r\n        this.hidden = true;\r\n    }\r\n};\r\n\r\nSVGBaseElement.prototype.show = function(){\r\n    if(this.isVisible && !this.isTransparent){\r\n        this.hidden = false;\r\n        this.layerElement.style.display = 'block';\r\n    }\r\n};\r\n\nfunction IShapeElement(data,parentContainer,globalData,comp, placeholder){\r\n    this.shapes = [];\r\n    this.shapesData = data.shapes;\r\n    this.stylesList = [];\r\n    this.itemsData = [];\r\n    this.prevViewData = [];\r\n    this.shapeModifiers = [];\r\n    this.processedElements = [];\r\n    this._parent.constructor.call(this,data,parentContainer,globalData,comp, placeholder);\r\n}\r\ncreateElement(SVGBaseElement, IShapeElement);\r\n\r\nIShapeElement.prototype.identityMatrix = new Matrix();\r\n\r\nIShapeElement.prototype.lcEnum = {\r\n    '1': 'butt',\r\n    '2': 'round',\r\n    '3': 'square'\r\n}\r\n\r\nIShapeElement.prototype.ljEnum = {\r\n    '1': 'miter',\r\n    '2': 'round',\r\n    '3': 'butt'\r\n}\r\n\r\nIShapeElement.prototype.searchProcessedElement = function(elem){\r\n    var i = this.processedElements.length;\r\n    while(i){\r\n        i -= 1;\r\n        if(this.processedElements[i].elem === elem){\r\n            return this.processedElements[i].pos;\r\n        }\r\n    }\r\n    return 0;\r\n};\r\n\r\nIShapeElement.prototype.addProcessedElement = function(elem, pos){\r\n    var i = this.processedElements.length;\r\n    while(i){\r\n        i -= 1;\r\n        if(this.processedElements[i].elem === elem){\r\n            this.processedElements[i].pos = pos;\r\n            break;\r\n        }\r\n    }\r\n    if(i === 0){\r\n        this.processedElements.push({\r\n            elem: elem,\r\n            pos: pos\r\n        })\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.buildExpressionInterface = function(){};\r\n\r\nIShapeElement.prototype.createElements = function(){\r\n    //TODO check if I can use symbol so i can set its viewBox\r\n    this._parent.createElements.call(this);\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement,this.dynamicProperties, 0, [], true);\r\n    if(!this.data.hd || this.data.td){\r\n        styleUnselectableDiv(this.layerElement);\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.setGradientData = function(pathElement,arr,data){\r\n\r\n    var gradientId = 'gr_'+randomString(10);\r\n    var gfill;\r\n    if(arr.t === 1){\r\n        gfill = document.createElementNS(svgNS,'linearGradient');\r\n    } else {\r\n        gfill = document.createElementNS(svgNS,'radialGradient');\r\n    }\r\n    gfill.setAttribute('id',gradientId);\r\n    gfill.setAttribute('spreadMethod','pad');\r\n    gfill.setAttribute('gradientUnits','userSpaceOnUse');\r\n    var stops = [];\r\n    var stop, j, jLen;\r\n    jLen = arr.g.p*4;\r\n    for(j=0;j<jLen;j+=4){\r\n        stop = document.createElementNS(svgNS,'stop');\r\n        gfill.appendChild(stop);\r\n        stops.push(stop);\r\n    }\r\n    pathElement.setAttribute( arr.ty === 'gf' ? 'fill':'stroke','url(#'+gradientId+')');\r\n    this.globalData.defs.appendChild(gfill);\r\n    data.gf = gfill;\r\n    data.cst = stops;\r\n}\r\n\r\nIShapeElement.prototype.setGradientOpacity = function(arr, data, styleOb){\r\n    if((arr.g.k.k[0].s && arr.g.k.k[0].s.length > arr.g.p*4) || arr.g.k.k.length > arr.g.p*4){\r\n        var opFill;\r\n        var stop, j, jLen;\r\n        var mask = document.createElementNS(svgNS,\"mask\");\r\n        var maskElement = document.createElementNS(svgNS, 'path');\r\n        mask.appendChild(maskElement);\r\n        var opacityId = 'op_'+randomString(10);\r\n        var maskId = 'mk_'+randomString(10);\r\n        mask.setAttribute('id',maskId);\r\n        if(arr.t === 1){\r\n            opFill = document.createElementNS(svgNS,'linearGradient');\r\n        } else {\r\n            opFill = document.createElementNS(svgNS,'radialGradient');\r\n        }\r\n        opFill.setAttribute('id',opacityId);\r\n        opFill.setAttribute('spreadMethod','pad');\r\n        opFill.setAttribute('gradientUnits','userSpaceOnUse');\r\n        jLen = arr.g.k.k[0].s ? arr.g.k.k[0].s.length : arr.g.k.k.length;\r\n        var stops = [];\r\n        for(j=arr.g.p*4;j<jLen;j+=2){\r\n            stop = document.createElementNS(svgNS,'stop');\r\n            stop.setAttribute('stop-color','rgb(255,255,255)');\r\n            //stop.setAttribute('offset',Math.round(arr.y[j][0]*100)+'%');\r\n            //stop.setAttribute('style','stop-color:rgb(255,255,255);stop-opacity:'+arr.y[j][1]);\r\n            opFill.appendChild(stop);\r\n            stops.push(stop);\r\n        }\r\n        maskElement.setAttribute( arr.ty === 'gf' ? 'fill':'stroke','url(#'+opacityId+')');\r\n        this.globalData.defs.appendChild(opFill);\r\n        this.globalData.defs.appendChild(mask);\r\n        data.of = opFill;\r\n        data.ost = stops;\r\n        styleOb.msElem = maskElement;\r\n        return maskId;\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.createStyleElement = function(data, level, dynamicProperties){\r\n    var elementData = {\r\n    };\r\n    var styleOb = {\r\n        data: data,\r\n        type: data.ty,\r\n        d: '',\r\n        ld: '',\r\n        lvl: level,\r\n        mdf: false,\r\n        closed: false\r\n    };\r\n    var pathElement = document.createElementNS(svgNS, \"path\");\r\n    elementData.o = PropertyFactory.getProp(this,data.o,0,0.01,dynamicProperties);\r\n    if(data.ty == 'st' || data.ty == 'gs') {\r\n        pathElement.setAttribute('stroke-linecap', this.lcEnum[data.lc] || 'round');\r\n        ////pathElement.style.strokeLinecap = this.lcEnum[data.lc] || 'round';\r\n        pathElement.setAttribute('stroke-linejoin',this.ljEnum[data.lj] || 'round');\r\n        ////pathElement.style.strokeLinejoin = this.ljEnum[data.lj] || 'round';\r\n        pathElement.setAttribute('fill-opacity','0');\r\n        ////pathElement.style.fillOpacity = 0;\r\n        if(data.lj == 1) {\r\n            pathElement.setAttribute('stroke-miterlimit',data.ml);\r\n            ////pathElement.style.strokeMiterlimit = data.ml;\r\n        }\r\n\r\n        elementData.w = PropertyFactory.getProp(this,data.w,0,null,dynamicProperties);\r\n        if(data.d){\r\n            var d = PropertyFactory.getDashProp(this,data.d,'svg',dynamicProperties);\r\n            if(!d.k){\r\n                pathElement.setAttribute('stroke-dasharray', d.dasharray);\r\n                ////pathElement.style.strokeDasharray = d.dasharray;\r\n                pathElement.setAttribute('stroke-dashoffset', d.dashoffset);\r\n                ////pathElement.style.strokeDashoffset = d.dashoffset;\r\n            }\r\n            elementData.d = d;\r\n        }\r\n\r\n    }\r\n    if(data.ty == 'fl' || data.ty == 'st'){\r\n        elementData.c = PropertyFactory.getProp(this,data.c,1,255,dynamicProperties);\r\n    } else {\r\n        elementData.g = PropertyFactory.getGradientProp(this,data.g,dynamicProperties);\r\n        if(data.t == 2){\r\n            elementData.h = PropertyFactory.getProp(this,data.h,0,0.01,dynamicProperties);\r\n            elementData.a = PropertyFactory.getProp(this,data.a,0,degToRads,dynamicProperties);\r\n        }\r\n        elementData.s = PropertyFactory.getProp(this,data.s,1,null,dynamicProperties);\r\n        elementData.e = PropertyFactory.getProp(this,data.e,1,null,dynamicProperties);\r\n        this.setGradientData(pathElement,data,elementData, styleOb);\r\n        var maskId = this.setGradientOpacity(data,elementData, styleOb);\r\n        if(maskId){\r\n            pathElement.setAttribute('mask','url(#'+maskId+')');\r\n        }\r\n    }\r\n    elementData.elem = pathElement;\r\n    //container.appendChild(pathElement);\r\n    if(data.r === 2) {\r\n        pathElement.setAttribute('fill-rule', 'evenodd');\r\n    }\r\n\r\n    if(data.ln){\r\n        pathElement.setAttribute('id',data.ln);\r\n    }\r\n    if(data.cl){\r\n        pathElement.setAttribute('class',data.cl);\r\n    }\r\n    styleOb.pElem = pathElement;\r\n    this.stylesList.push(styleOb);\r\n    elementData.style = styleOb;\r\n    return elementData;\r\n}\r\n\r\nIShapeElement.prototype.createGroupElement = function(data) {\r\n    var elementData = {\r\n        it: [],\r\n        prevViewData: []\r\n    };\r\n    var g = document.createElementNS(svgNS,'g');\r\n    elementData.gr = g;\r\n    if(data.ln){\r\n        elementData.gr.setAttribute('id',data.ln);\r\n    }\r\n    return elementData;\r\n}\r\n\r\nIShapeElement.prototype.createTransformElement = function(data, dynamicProperties) {\r\n    var elementData = {\r\n        transform : {\r\n            op: PropertyFactory.getProp(this,data.o,0,0.01,dynamicProperties),\r\n            mProps: PropertyFactory.getProp(this,data,2,null,dynamicProperties)\r\n        },\r\n        elements: []\r\n    };\r\n    return elementData;\r\n}\r\n\r\nIShapeElement.prototype.createShapeElement = function(data, ownTransformers, level, dynamicProperties) {\r\n    var elementData = {\r\n        elements : [],\r\n        caches:[],\r\n        styles : [],\r\n        transformers: ownTransformers,\r\n        lStr: ''\r\n    };\r\n    var ty = 4;\r\n    if(data.ty == 'rc'){\r\n        ty = 5;\r\n    }else if(data.ty == 'el'){\r\n        ty = 6;\r\n    }else if(data.ty == 'sr'){\r\n        ty = 7;\r\n    }\r\n    elementData.sh = ShapePropertyFactory.getShapeProp(this,data,ty,dynamicProperties);\r\n    elementData.lvl = level;\r\n    this.shapes.push(elementData.sh);\r\n    this.addShapeToModifiers(elementData);\r\n    return elementData;\r\n}\r\n\r\nvar cont = 0;\r\n\r\nIShapeElement.prototype.setElementStyles = function(){\r\n    var j, jLen = this.stylesList.length;\r\n    var arr = [];\r\n    for(j=0;j<jLen;j+=1){\r\n        if(!this.stylesList[j].closed){\r\n            arr.push(this.stylesList[j]);\r\n        }\r\n    }\r\n    return arr;\r\n}\r\n\r\nIShapeElement.prototype.reloadShapes = function(){\r\n    this.firstFrame = true;\r\n    var i, len = this.itemsData.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.prevViewData[i] = this.itemsData[i];\r\n    }\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement,this.dynamicProperties, 0, [], true);\r\n    var i, len = this.dynamicProperties.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.dynamicProperties[i].getValue();\r\n    }\r\n    this.renderModifiers();\r\n}\r\n\r\nIShapeElement.prototype.searchShapes = function(arr,itemsData,prevViewData,container,dynamicProperties, level, transformers, render){\r\n    var ownTransformers = [].concat(transformers);\r\n    var i, len = arr.length - 1;\r\n    var j, jLen;\r\n    var ownStyles = [], ownModifiers = [], styleOb, currentTransform, modifier, processedPos;\r\n    for(i=len;i>=0;i-=1){\r\n        processedPos = this.searchProcessedElement(arr[i]);\r\n        if(!processedPos){\r\n            arr[i]._render = render;\r\n        } else {\r\n            itemsData[i] = prevViewData[processedPos - 1];\r\n        }\r\n        if(arr[i].ty == 'fl' || arr[i].ty == 'st' || arr[i].ty == 'gf' || arr[i].ty == 'gs'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createStyleElement(arr[i], level, dynamicProperties);\r\n            } else {\r\n                itemsData[i].style.closed = false;\r\n            }\r\n            if(arr[i]._render){\r\n                container.appendChild(itemsData[i].elem);\r\n            }\r\n            ownStyles.push(itemsData[i].style);\r\n        }else if(arr[i].ty == 'gr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createGroupElement(arr[i]);\r\n            } else {\r\n                jLen = itemsData[i].it.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    itemsData[i].prevViewData[j] = itemsData[i].it[j];\r\n                }\r\n            }\r\n            this.searchShapes(arr[i].it,itemsData[i].it,itemsData[i].prevViewData,itemsData[i].gr,dynamicProperties, level + 1, ownTransformers, render);\r\n            if(arr[i]._render){\r\n                container.appendChild(itemsData[i].gr);\r\n            }\r\n        }else if(arr[i].ty == 'tr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createTransformElement(arr[i], dynamicProperties);\r\n            }\r\n            currentTransform = itemsData[i].transform;\r\n            ownTransformers.push(currentTransform);\r\n        }else if(arr[i].ty == 'sh' || arr[i].ty == 'rc' || arr[i].ty == 'el' || arr[i].ty == 'sr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createShapeElement(arr[i], ownTransformers, level, dynamicProperties);\r\n            }\r\n            itemsData[i].elements = this.setElementStyles();\r\n\r\n        }else if(arr[i].ty == 'tm' || arr[i].ty == 'rd' || arr[i].ty == 'ms'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                modifier.init(this,arr[i],dynamicProperties);\r\n                itemsData[i] = modifier;\r\n                this.shapeModifiers.push(modifier);\r\n            } else {\r\n                modifier = itemsData[i];\r\n                modifier.closed = false;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        }else if(arr[i].ty == 'rp'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                itemsData[i] = modifier;\r\n                modifier.init(this,arr,i,itemsData,dynamicProperties);\r\n                this.shapeModifiers.push(modifier);\r\n                render = false;\r\n            }else{\r\n                modifier = itemsData[i];\r\n                modifier.closed = true;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        }\r\n        this.addProcessedElement(arr[i], i + 1);\r\n    }\r\n    len = ownStyles.length;\r\n    for(i=0;i<len;i+=1){\r\n        ownStyles[i].closed = true;\r\n    }\r\n    len = ownModifiers.length;\r\n    for(i=0;i<len;i+=1){\r\n        ownModifiers[i].closed = true;\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.addShapeToModifiers = function(data) {\r\n    var i, len = this.shapeModifiers.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.shapeModifiers[i].addShape(data);\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.renderModifiers = function() {\r\n    if(!this.shapeModifiers.length){\r\n        return;\r\n    }\r\n    var i, len = this.shapes.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.shapes[i].reset();\r\n    }\r\n\r\n\r\n    len = this.shapeModifiers.length;\r\n\r\n    for(i=len-1;i>=0;i-=1){\r\n        this.shapeModifiers[i].processShapes(this.firstFrame);\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.renderFrame = function(parentMatrix){\r\n    //this.reloadShapes();\r\n    var renderParent = this._parent.renderFrame.call(this,parentMatrix);\r\n    if(renderParent===false){\r\n        this.hide();\r\n        return;\r\n    }\r\n    if(this.hidden){\r\n        this.layerElement.style.display = 'block';\r\n        this.hidden = false;\r\n    }\r\n    this.renderModifiers();\r\n    var i, len = this.stylesList.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.stylesList[i].d = '';\r\n        this.stylesList[i].mdf = false;\r\n    }\r\n    this.renderShape(this.shapesData,this.itemsData, null);\r\n\r\n    for (i = 0; i < len; i += 1) {\r\n        if (this.stylesList[i].ld === '0') {\r\n            this.stylesList[i].ld = '1';\r\n            this.stylesList[i].pElem.style.display = 'block';\r\n            //this.stylesList[i].parent.appendChild(this.stylesList[i].pElem);\r\n        }\r\n        if (this.stylesList[i].mdf || this.firstFrame) {\r\n            this.stylesList[i].pElem.setAttribute('d', this.stylesList[i].d);\r\n            if(this.stylesList[i].msElem){\r\n                this.stylesList[i].msElem.setAttribute('d', this.stylesList[i].d);\r\n            }\r\n        }\r\n    }\r\n    if (this.firstFrame) {\r\n        this.firstFrame = false;\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.hide = function(){\r\n    if(!this.hidden){\r\n        this.layerElement.style.display = 'none';\r\n        var i, len = this.stylesList.length;\r\n        for(i=len-1;i>=0;i-=1){\r\n            if(this.stylesList[i].ld !== '0'){\r\n                this.stylesList[i].ld = '0';\r\n                this.stylesList[i].pElem.style.display = 'none';\r\n                if(this.stylesList[i].pElem.parentNode){\r\n                    this.stylesList[i].parent = this.stylesList[i].pElem.parentNode;\r\n                    //this.stylesList[i].pElem.parentNode.removeChild(this.stylesList[i].pElem);\r\n                }\r\n            }\r\n        }\r\n        this.hidden = true;\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.renderShape = function(items,data, container){\r\n    var i, len = items.length - 1;\r\n    var ty;\r\n    for(i=len;i>=0;i-=1){\r\n        ty = items[i].ty;\r\n        if(ty == 'tr'){\r\n            if(this.firstFrame || data[i].transform.op.mdf && container){\r\n                container.setAttribute('opacity',data[i].transform.op.v);\r\n            }\r\n            if(this.firstFrame || data[i].transform.mProps.mdf && container){\r\n                container.setAttribute('transform',data[i].transform.mProps.v.to2dCSS());\r\n            }\r\n        }else if(ty == 'sh' || ty == 'el' || ty == 'rc' || ty == 'sr'){\r\n            this.renderPath(items[i],data[i]);\r\n        }else if(ty == 'fl'){\r\n            this.renderFill(items[i],data[i]);\r\n        }else if(ty == 'gf'){\r\n            this.renderGradient(items[i],data[i]);\r\n        }else if(ty == 'gs'){\r\n            this.renderGradient(items[i],data[i]);\r\n            this.renderStroke(items[i],data[i]);\r\n        }else if(ty == 'st'){\r\n            this.renderStroke(items[i],data[i]);\r\n        }else if(ty == 'gr'){\r\n            this.renderShape(items[i].it,data[i].it, data[i].gr);\r\n        }else if(ty == 'tm'){\r\n            //\r\n        }\r\n    }\r\n\r\n};\r\n\r\nIShapeElement.prototype.buildShapeString = function(pathNodes, length, closed, mat) {\r\n    var i, shapeString = '';\r\n    for(i = 1; i < length; i += 1) {\r\n        if (i === 1) {\r\n            shapeString += \" M\" + mat.applyToPointStringified(pathNodes.v[0][0], pathNodes.v[0][1]);\r\n        }\r\n        shapeString += \" C\" + mat.applyToPointStringified(pathNodes.o[i - 1][0], pathNodes.o[i - 1][1]) + \" \" + mat.applyToPointStringified(pathNodes.i[i][0], pathNodes.i[i][1]) + \" \" + mat.applyToPointStringified(pathNodes.v[i][0], pathNodes.v[i][1]);\r\n    }\r\n    if (length === 1) {\r\n        shapeString += \" M\" + mat.applyToPointStringified(pathNodes.v[0][0], pathNodes.v[0][1]);\r\n    }\r\n    if (closed && length) {\r\n        shapeString += \" C\" + mat.applyToPointStringified(pathNodes.o[i - 1][0], pathNodes.o[i - 1][1]) + \" \" + mat.applyToPointStringified(pathNodes.i[0][0], pathNodes.i[0][1]) + \" \" + mat.applyToPointStringified(pathNodes.v[0][0], pathNodes.v[0][1]);\r\n        shapeString += 'z';\r\n    }\r\n    return shapeString;\r\n};\r\n\r\nIShapeElement.prototype.renderPath = function(pathData,itemData){\r\n    var len, i, j, jLen,pathStringTransformed,redraw,pathNodes,l, lLen = itemData.elements.length;\r\n    var lvl = itemData.lvl;\r\n    if(!pathData._render){\r\n        return;\r\n    }\r\n    for(l=0;l<lLen;l+=1){\r\n        if(itemData.elements[l].data._render){\r\n            redraw = itemData.sh.mdf || this.firstFrame;\r\n            pathStringTransformed = 'M0 0';\r\n            var paths = itemData.sh.paths;\r\n            jLen = paths._length;\r\n            if(itemData.elements[l].lvl < lvl){\r\n                var mat = this.mHelper.reset(), props;\r\n                var iterations = lvl - itemData.elements[l].lvl;\r\n                var k = itemData.transformers.length-1;\r\n                while(iterations > 0) {\r\n                    redraw = itemData.transformers[k].mProps.mdf || redraw;\r\n                    props = itemData.transformers[k].mProps.v.props;\r\n                    mat.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\r\n                    iterations --;\r\n                    k --;\r\n                }\r\n                if(redraw){\r\n                    for(j=0;j<jLen;j+=1){\r\n                        pathNodes = paths.shapes[j];\r\n                        if(pathNodes && pathNodes._length){\r\n                            pathStringTransformed += this.buildShapeString(pathNodes, pathNodes._length, pathNodes.c, mat);\r\n                        }\r\n                    }\r\n                    itemData.caches[l] = pathStringTransformed;\r\n                } else {\r\n                    pathStringTransformed = itemData.caches[l];\r\n                }\r\n            } else {\r\n                if(redraw){\r\n                    for(j=0;j<jLen;j+=1){\r\n                        pathNodes = paths.shapes[j];\r\n                        if(pathNodes && pathNodes._length){\r\n                            pathStringTransformed += this.buildShapeString(pathNodes, pathNodes._length, pathNodes.c, this.identityMatrix);\r\n                        }\r\n                    }\r\n                    itemData.caches[l] = pathStringTransformed;\r\n                } else {\r\n                    pathStringTransformed = itemData.caches[l];\r\n                }\r\n            }\r\n            itemData.elements[l].d += pathStringTransformed;\r\n            itemData.elements[l].mdf = redraw || itemData.elements[l].mdf;\r\n        } else {\r\n            itemData.elements[l].mdf = true;\r\n        }\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.renderFill = function(styleData,itemData){\r\n    var styleElem = itemData.style;\r\n\r\n    if(itemData.c.mdf || this.firstFrame){\r\n        styleElem.pElem.setAttribute('fill','rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')');\r\n        ////styleElem.pElem.style.fill = 'rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')';\r\n    }\r\n    if(itemData.o.mdf || this.firstFrame){\r\n        styleElem.pElem.setAttribute('fill-opacity',itemData.o.v);\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.renderGradient = function(styleData,itemData){\r\n    var gfill = itemData.gf;\r\n    var opFill = itemData.of;\r\n    var pt1 = itemData.s.v,pt2 = itemData.e.v;\r\n\r\n    if(itemData.o.mdf || this.firstFrame){\r\n        var attr = styleData.ty === 'gf' ? 'fill-opacity':'stroke-opacity';\r\n        itemData.elem.setAttribute(attr,itemData.o.v);\r\n    }\r\n    //clippedElement.setAttribute('transform','matrix(1,0,0,1,-100,0)');\r\n    if(itemData.s.mdf || this.firstFrame){\r\n        var attr1 = styleData.t === 1 ? 'x1':'cx';\r\n        var attr2 = attr1 === 'x1' ? 'y1':'cy';\r\n        gfill.setAttribute(attr1,pt1[0]);\r\n        gfill.setAttribute(attr2,pt1[1]);\r\n        if(opFill){\r\n            opFill.setAttribute(attr1,pt1[0]);\r\n            opFill.setAttribute(attr2,pt1[1]);\r\n        }\r\n    }\r\n    var stops, i, len, stop;\r\n    if(itemData.g.cmdf || this.firstFrame){\r\n        stops = itemData.cst;\r\n        var cValues = itemData.g.c;\r\n        len = stops.length;\r\n        for(i=0;i<len;i+=1){\r\n            stop = stops[i];\r\n            stop.setAttribute('offset',cValues[i*4]+'%');\r\n            stop.setAttribute('stop-color','rgb('+cValues[i*4+1]+','+cValues[i*4+2]+','+cValues[i*4+3]+')');\r\n        }\r\n    }\r\n    if(opFill && (itemData.g.omdf || this.firstFrame)){\r\n        stops = itemData.ost;\r\n        var oValues = itemData.g.o;\r\n        len = stops.length;\r\n        for(i=0;i<len;i+=1){\r\n            stop = stops[i];\r\n            stop.setAttribute('offset',oValues[i*2]+'%');\r\n            stop.setAttribute('stop-opacity',oValues[i*2+1]);\r\n        }\r\n    }\r\n    if(styleData.t === 1){\r\n        if(itemData.e.mdf  || this.firstFrame){\r\n            gfill.setAttribute('x2',pt2[0]);\r\n            gfill.setAttribute('y2',pt2[1]);\r\n            if(opFill){\r\n                opFill.setAttribute('x2',pt2[0]);\r\n                opFill.setAttribute('y2',pt2[1]);\r\n            }\r\n        }\r\n    } else {\r\n        var rad;\r\n        if(itemData.s.mdf || itemData.e.mdf || this.firstFrame){\r\n            rad = Math.sqrt(Math.pow(pt1[0]-pt2[0],2)+Math.pow(pt1[1]-pt2[1],2));\r\n            gfill.setAttribute('r',rad);\r\n            if(opFill){\r\n                opFill.setAttribute('r',rad);\r\n            }\r\n        }\r\n        if(itemData.e.mdf || itemData.h.mdf || itemData.a.mdf || this.firstFrame){\r\n            if(!rad){\r\n                rad = Math.sqrt(Math.pow(pt1[0]-pt2[0],2)+Math.pow(pt1[1]-pt2[1],2));\r\n            }\r\n            var ang = Math.atan2(pt2[1]-pt1[1], pt2[0]-pt1[0]);\r\n\r\n            var percent = itemData.h.v >= 1 ? 0.99 : itemData.h.v <= -1 ? -0.99:itemData.h.v;\r\n            var dist = rad*percent;\r\n            var x = Math.cos(ang + itemData.a.v)*dist + pt1[0];\r\n            var y = Math.sin(ang + itemData.a.v)*dist + pt1[1];\r\n            gfill.setAttribute('fx',x);\r\n            gfill.setAttribute('fy',y);\r\n            if(opFill){\r\n                opFill.setAttribute('fx',x);\r\n                opFill.setAttribute('fy',y);\r\n            }\r\n        }\r\n        //gfill.setAttribute('fy','200');\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.renderStroke = function(styleData,itemData){\r\n    var styleElem = itemData.style;\r\n    //TODO fix dashes\r\n    var d = itemData.d;\r\n    var dasharray,dashoffset;\r\n    if(d && d.k && (d.mdf || this.firstFrame)){\r\n        styleElem.pElem.setAttribute('stroke-dasharray', d.dasharray);\r\n        ////styleElem.pElem.style.strokeDasharray = d.dasharray;\r\n        styleElem.pElem.setAttribute('stroke-dashoffset', d.dashoffset);\r\n        ////styleElem.pElem.style.strokeDashoffset = d.dashoffset;\r\n    }\r\n    if(itemData.c && (itemData.c.mdf || this.firstFrame)){\r\n        styleElem.pElem.setAttribute('stroke','rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')');\r\n        ////styleElem.pElem.style.stroke = 'rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')';\r\n    }\r\n    if(itemData.o.mdf || this.firstFrame){\r\n        styleElem.pElem.setAttribute('stroke-opacity',itemData.o.v);\r\n    }\r\n    if(itemData.w.mdf || this.firstFrame){\r\n        styleElem.pElem.setAttribute('stroke-width',itemData.w.v);\r\n        if(styleElem.msElem){\r\n            styleElem.msElem.setAttribute('stroke-width',itemData.w.v);\r\n        }\r\n        ////styleElem.pElem.style.strokeWidth = itemData.w.v;\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.destroy = function(){\r\n    this._parent.destroy.call(this._parent);\r\n    this.shapeData = null;\r\n    this.itemsData = null;\r\n    this.parentContainer = null;\r\n    this.placeholder = null;\r\n};\r\n\nfunction ITextElement(data, animationItem,parentContainer,globalData){\r\n}\r\nITextElement.prototype.init = function(){\r\n    this.lettersChangedFlag = true;\r\n    this.dynamicProperties = this.dynamicProperties || [];\r\n    this.textAnimator = new TextAnimatorProperty(this.data.t, this.renderType, this);\r\n    this.textProperty = new TextProperty(this, this.data.t, this.dynamicProperties);\r\n    this._parent.init.call(this);\r\n    this.textAnimator.searchProperties(this.dynamicProperties);\r\n};\r\n\r\nITextElement.prototype.prepareFrame = function(num) {\r\n    this._parent.prepareFrame.call(this, num);\r\n    if(this.textProperty.mdf || this.textProperty.firstFrame) {\r\n        this.buildNewText();\r\n        this.textProperty.firstFrame = false;\r\n    }\r\n}\r\n\r\nITextElement.prototype.createPathShape = function(matrixHelper, shapes) {\r\n    var j,jLen = shapes.length;\r\n    var k, kLen, pathNodes;\r\n    var shapeStr = '';\r\n    for(j=0;j<jLen;j+=1){\r\n        pathNodes = shapes[j].ks.k;\r\n        shapeStr += this.buildShapeString(pathNodes, pathNodes.i.length, true, matrixHelper);\r\n    }\r\n    return shapeStr;\r\n};\r\n\r\nITextElement.prototype.updateDocumentData = function(newData, index) {\r\n    this.textProperty.updateDocumentData(newData, index);\r\n}\r\n\r\nITextElement.prototype.applyTextPropertiesToMatrix = function(documentData, matrixHelper, lineNumber, xPos, yPos) {\r\n    if(documentData.ps){\r\n        matrixHelper.translate(documentData.ps[0],documentData.ps[1] + documentData.ascent,0);\r\n    }\r\n    matrixHelper.translate(0,-documentData.ls,0);\r\n    switch(documentData.j){\r\n        case 1:\r\n            matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]),0,0);\r\n            break;\r\n        case 2:\r\n            matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber] )/2,0,0);\r\n            break;\r\n    }\r\n    matrixHelper.translate(xPos, yPos, 0);\r\n}\r\n\r\nITextElement.prototype.buildColor = function(colorData) {\r\n    return 'rgb(' + Math.round(colorData[0]*255) + ',' + Math.round(colorData[1]*255) + ',' + Math.round(colorData[2]*255) + ')';\r\n}\r\n\r\nITextElement.prototype.buildShapeString = IShapeElement.prototype.buildShapeString;\r\n\r\nITextElement.prototype.emptyProp = new LetterProps();\r\n\r\nITextElement.prototype.destroy = function(){\r\n    this._parent.destroy.call(this._parent);\r\n};\nfunction SVGTextElement(data,parentContainer,globalData,comp, placeholder){\r\n    this.textSpans = [];\r\n    this.renderType = 'svg';\r\n    this._parent.constructor.call(this,data,parentContainer,globalData,comp, placeholder);\r\n}\r\ncreateElement(SVGBaseElement, SVGTextElement);\r\n\r\nextendPrototype(ITextElement, SVGTextElement);\r\n\r\nSVGTextElement.prototype.createElements = function(){\r\n\r\n    this._parent.createElements.call(this);\r\n\r\n\r\n    if(this.data.ln){\r\n        this.layerElement.setAttribute('id',this.data.ln);\r\n    }\r\n    if(this.data.cl){\r\n        this.layerElement.setAttribute('class',this.data.cl);\r\n    }\r\n    if (this.data.singleShape && !this.globalData.fontManager.chars) {\r\n        this.textContainer = document.createElementNS(svgNS,'text');\r\n    }\r\n};\r\n\r\nSVGTextElement.prototype.buildNewText = function(){\r\n    var i, len;\r\n\r\n    var documentData = this.textProperty.currentData;\r\n    this.renderedLetters = Array.apply(null,{length:documentData ? documentData.l.length : 0});\r\n    if(documentData.fc) {\r\n        this.layerElement.setAttribute('fill', this.buildColor(documentData.fc));\r\n    }else{\r\n        this.layerElement.setAttribute('fill', 'rgba(0,0,0,0)');\r\n    }\r\n    if(documentData.sc){\r\n        this.layerElement.setAttribute('stroke', this.buildColor(documentData.sc));\r\n        this.layerElement.setAttribute('stroke-width', documentData.sw);\r\n    }\r\n    this.layerElement.setAttribute('font-size', documentData.s);\r\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\r\n    if(fontData.fClass){\r\n        this.layerElement.setAttribute('class',fontData.fClass);\r\n    } else {\r\n        this.layerElement.setAttribute('font-family', fontData.fFamily);\r\n        var fWeight = documentData.fWeight, fStyle = documentData.fStyle;\r\n        this.layerElement.setAttribute('font-style', fStyle);\r\n        this.layerElement.setAttribute('font-weight', fWeight);\r\n    }\r\n\r\n    var letters = documentData.l || [];\r\n    var usesGlyphs = this.globalData.fontManager.chars;\r\n    len = letters.length;\r\n    if(!len){\r\n        return;\r\n    }\r\n    var tSpan;\r\n    var matrixHelper = this.mHelper;\r\n    var shapes, shapeStr = '', singleShape = this.data.singleShape;\r\n    var xPos = 0, yPos = 0, firstLine = true;\r\n    var trackingOffset = documentData.tr/1000*documentData.s;\r\n    if(singleShape && !usesGlyphs) {\r\n        var tElement = this.textContainer;\r\n        var justify = '';\r\n        switch(documentData.j) {\r\n            case 1:\r\n                justify = 'end';\r\n                break;\r\n            case 2:\r\n                justify = 'middle';\r\n                break;\r\n            case 2:\r\n                justify = 'start';\r\n                break;\r\n        }\r\n        tElement.setAttribute('text-anchor',justify);\r\n        tElement.setAttribute('letter-spacing',trackingOffset);\r\n        var textContent = documentData.t.split(String.fromCharCode(13));\r\n        len = textContent.length;\r\n        var yPos = documentData.ps ? documentData.ps[1] + documentData.ascent : 0;\r\n        for ( i = 0; i < len; i += 1) {\r\n            tSpan = this.textSpans[i] || document.createElementNS(svgNS,'tspan');\r\n            tSpan.textContent = textContent[i];\r\n            tSpan.setAttribute('x', 0);\r\n            tSpan.setAttribute('y', yPos);\r\n            tSpan.style.display = 'inherit';\r\n            tElement.appendChild(tSpan);\r\n            this.textSpans[i] = tSpan;\r\n            yPos += documentData.lh;\r\n        }\r\n        \r\n        this.layerElement.appendChild(tElement);\r\n    } else {\r\n        var cachedSpansLength = this.textSpans.length;\r\n        var shapeData, charData;\r\n        for (i = 0; i < len; i += 1) {\r\n            if(!usesGlyphs || !singleShape || i === 0){\r\n                tSpan = cachedSpansLength > i ? this.textSpans[i] : document.createElementNS(svgNS,usesGlyphs?'path':'text');\r\n                if (cachedSpansLength <= i) {\r\n                    tSpan.setAttribute('stroke-linecap', 'butt');\r\n                    tSpan.setAttribute('stroke-linejoin','round');\r\n                    tSpan.setAttribute('stroke-miterlimit','4');\r\n                    this.textSpans[i] = tSpan;\r\n                    this.layerElement.appendChild(tSpan);\r\n                }\r\n                tSpan.style.display = 'inherit';\r\n            }\r\n            \r\n            matrixHelper.reset();\r\n            if(usesGlyphs) {\r\n                matrixHelper.scale(documentData.s / 100, documentData.s / 100);\r\n                if (singleShape) {\r\n                    if(letters[i].n) {\r\n                        xPos = -trackingOffset;\r\n                        yPos += documentData.yOffset;\r\n                        yPos += firstLine ? 1 : 0;\r\n                        firstLine = false;\r\n                    }\r\n                    this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\r\n                    xPos += letters[i].l || 0;\r\n                    //xPos += letters[i].val === ' ' ? 0 : trackingOffset;\r\n                    xPos += trackingOffset;\r\n                }\r\n                charData = this.globalData.fontManager.getCharData(documentData.t.charAt(i), fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\r\n                shapeData = charData && charData.data || {};\r\n                shapes = shapeData.shapes ? shapeData.shapes[0].it : [];\r\n                if(!singleShape){\r\n                    tSpan.setAttribute('d',this.createPathShape(matrixHelper,shapes));\r\n                } else {\r\n                    shapeStr += this.createPathShape(matrixHelper,shapes);\r\n                }\r\n            } else {\r\n                tSpan.textContent = letters[i].val;\r\n                tSpan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\",\"preserve\");\r\n            }\r\n            //\r\n        }\r\n        if (singleShape) {\r\n            tSpan.setAttribute('d',shapeStr);\r\n        }\r\n    }\r\n    while (i < this.textSpans.length){\r\n        this.textSpans[i].style.display = 'none';\r\n        i += 1;\r\n    }\r\n    \r\n    this._sizeChanged = true;\r\n}\r\n\r\nSVGTextElement.prototype.sourceRectAtTime = function(time){\r\n    this.prepareFrame(this.comp.renderedFrame - this.data.st);\r\n    this.renderLetters();\r\n    if(this._sizeChanged){\r\n        this._sizeChanged = false;\r\n        var textBox = this.layerElement.getBBox();\r\n        this.bbox = {\r\n            top: textBox.y,\r\n            left: textBox.x,\r\n            width: textBox.width,\r\n            height: textBox.height\r\n        }\r\n    }\r\n    return this.bbox;\r\n}\r\n\r\nSVGTextElement.prototype.renderLetters = function(){\r\n\r\n    if(!this.data.singleShape){\r\n        this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\r\n        if(this.lettersChangedFlag || this.textAnimator.lettersChangedFlag){\r\n            this._sizeChanged = true;\r\n            var  i,len;\r\n            var renderedLetters = this.textAnimator.renderedLetters;\r\n\r\n            var letters = this.textProperty.currentData.l;\r\n\r\n            len = letters.length;\r\n            var renderedLetter, textSpan;\r\n            for(i=0;i<len;i+=1){\r\n                if(letters[i].n){\r\n                    continue;\r\n                }\r\n                renderedLetter = renderedLetters[i];\r\n                textSpan = this.textSpans[i];\r\n                if(renderedLetter.mdf.m) {\r\n                    textSpan.setAttribute('transform',renderedLetter.m);\r\n                }\r\n                if(renderedLetter.mdf.o) {\r\n                    textSpan.setAttribute('opacity',renderedLetter.o);\r\n                }\r\n                if(renderedLetter.mdf.sw){\r\n                    textSpan.setAttribute('stroke-width',renderedLetter.sw);\r\n                }\r\n                if(renderedLetter.mdf.sc){\r\n                    textSpan.setAttribute('stroke',renderedLetter.sc);\r\n                }\r\n                if(renderedLetter.mdf.fc){\r\n                    textSpan.setAttribute('fill',renderedLetter.fc);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nSVGTextElement.prototype.renderFrame = function(parentMatrix){\r\n\r\n    var renderParent = this._parent.renderFrame.call(this,parentMatrix);\r\n    if(renderParent===false){\r\n        this.hide();\r\n        return;\r\n    }\r\n    if(this.hidden){\r\n        this.show();\r\n    }\r\n    if(this.firstFrame) {\r\n        this.firstFrame = false;\r\n    }\r\n    this.renderLetters();\r\n}\nfunction SVGTintFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = document.createElementNS(svgNS,'feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','linearRGB');\r\n    feColorMatrix.setAttribute('values','0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f1');\r\n    filter.appendChild(feColorMatrix);\r\n    feColorMatrix = document.createElementNS(svgNS,'feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n    feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f2');\r\n    filter.appendChild(feColorMatrix);\r\n    this.matrixFilter = feColorMatrix;\r\n    if(filterManager.effectElements[2].p.v !== 100 || filterManager.effectElements[2].p.k){\r\n        var feMerge = document.createElementNS(svgNS,'feMerge');\r\n        filter.appendChild(feMerge);\r\n        var feMergeNode;\r\n        feMergeNode = document.createElementNS(svgNS,'feMergeNode');\r\n        feMergeNode.setAttribute('in','SourceGraphic');\r\n        feMerge.appendChild(feMergeNode);\r\n        feMergeNode = document.createElementNS(svgNS,'feMergeNode');\r\n        feMergeNode.setAttribute('in','f2');\r\n        feMerge.appendChild(feMergeNode);\r\n    }\r\n}\r\n\r\nSVGTintFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager.mdf){\r\n        var colorBlack = this.filterManager.effectElements[0].p.v;\r\n        var colorWhite = this.filterManager.effectElements[1].p.v;\r\n        var opacity = this.filterManager.effectElements[2].p.v/100;\r\n        this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');\r\n    }\r\n};\nfunction SVGFillFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = document.createElementNS(svgNS,'feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n    feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\r\n    filter.appendChild(feColorMatrix);\r\n    this.matrixFilter = feColorMatrix;\r\n}\r\nSVGFillFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager.mdf){\r\n        var color = this.filterManager.effectElements[2].p.v;\r\n        var opacity = this.filterManager.effectElements[6].p.v;\r\n        this.matrixFilter.setAttribute('values','0 0 0 0 '+color[0]+' 0 0 0 0 '+color[1]+' 0 0 0 0 '+color[2]+' 0 0 0 '+opacity+' 0');\r\n    }\r\n};\nfunction SVGStrokeEffect(elem, filterManager){\r\n    this.initialized = false;\r\n    this.filterManager = filterManager;\r\n    this.elem = elem;\r\n    this.paths = [];\r\n}\r\n\r\nSVGStrokeEffect.prototype.initialize = function(){\r\n\r\n    var elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\r\n    var path,groupPath, i, len;\r\n    if(this.filterManager.effectElements[1].p.v === 1){\r\n        len = this.elem.maskManager.masksProperties.length;\r\n        i = 0;\r\n    } else {\r\n        i = this.filterManager.effectElements[0].p.v - 1;\r\n        len = i + 1;\r\n    }\r\n    groupPath = document.createElementNS(svgNS,'g'); \r\n    groupPath.setAttribute('fill','none');\r\n    groupPath.setAttribute('stroke-linecap','round');\r\n    groupPath.setAttribute('stroke-dashoffset',1);\r\n    for(i;i<len;i+=1){\r\n        path = document.createElementNS(svgNS,'path');\r\n        groupPath.appendChild(path);\r\n        this.paths.push({p:path,m:i});\r\n    }\r\n    if(this.filterManager.effectElements[10].p.v === 3){\r\n        var mask = document.createElementNS(svgNS,'mask');\r\n        var id = 'stms_' + randomString(10);\r\n        mask.setAttribute('id',id);\r\n        mask.setAttribute('mask-type','alpha');\r\n        mask.appendChild(groupPath);\r\n        this.elem.globalData.defs.appendChild(mask);\r\n        var g = document.createElementNS(svgNS,'g');\r\n        g.setAttribute('mask','url(' + locationHref + '#'+id+')');\r\n        if(elemChildren[0]){\r\n            g.appendChild(elemChildren[0]);\r\n        }\r\n        this.elem.layerElement.appendChild(g);\r\n        this.masker = mask;\r\n        groupPath.setAttribute('stroke','#fff');\r\n    } else if(this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2){\r\n        if(this.filterManager.effectElements[10].p.v === 2){\r\n            var elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\r\n            while(elemChildren.length){\r\n                this.elem.layerElement.removeChild(elemChildren[0]);\r\n            }\r\n        }\r\n        this.elem.layerElement.appendChild(groupPath);\r\n        this.elem.layerElement.removeAttribute('mask');\r\n        groupPath.setAttribute('stroke','#fff');\r\n    }\r\n    this.initialized = true;\r\n    this.pathMasker = groupPath;\r\n}\r\n\r\nSVGStrokeEffect.prototype.renderFrame = function(forceRender){\r\n    if(!this.initialized){\r\n        this.initialize();\r\n    }\r\n    var i, len = this.paths.length;\r\n    var mask, path;\r\n    for(i=0;i<len;i+=1){\r\n        mask = this.elem.maskManager.viewData[this.paths[i].m];\r\n        path = this.paths[i].p;\r\n        if(forceRender || this.filterManager.mdf || mask.prop.mdf){\r\n            path.setAttribute('d',mask.lastPath);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[9].p.mdf || this.filterManager.effectElements[4].p.mdf || this.filterManager.effectElements[7].p.mdf || this.filterManager.effectElements[8].p.mdf || mask.prop.mdf){\r\n            var dasharrayValue;\r\n            if(this.filterManager.effectElements[7].p.v !== 0 || this.filterManager.effectElements[8].p.v !== 100){\r\n                var s = Math.min(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)/100;\r\n                var e = Math.max(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)/100;\r\n                var l = path.getTotalLength();\r\n                dasharrayValue = '0 0 0 ' + l*s + ' ';\r\n                var lineLength = l*(e-s);\r\n                var segment = 1+this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100;\r\n                var units = Math.floor(lineLength/segment);\r\n                var j;\r\n                for(j=0;j<units;j+=1){\r\n                    dasharrayValue += '1 ' + this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100 + ' ';\r\n                }\r\n                dasharrayValue += '0 ' + l*10 + ' 0 0';\r\n            } else {\r\n                dasharrayValue = '1 ' + this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100;\r\n            }\r\n            path.setAttribute('stroke-dasharray',dasharrayValue);\r\n        }\r\n    }\r\n    if(forceRender || this.filterManager.effectElements[4].p.mdf){\r\n        this.pathMasker.setAttribute('stroke-width',this.filterManager.effectElements[4].p.v*2);\r\n    }\r\n    \r\n    if(forceRender || this.filterManager.effectElements[6].p.mdf){\r\n        this.pathMasker.setAttribute('opacity',this.filterManager.effectElements[6].p.v);\r\n    }\r\n    if(this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2){\r\n        if(forceRender || this.filterManager.effectElements[3].p.mdf){\r\n            var color = this.filterManager.effectElements[3].p.v;\r\n            this.pathMasker.setAttribute('stroke','rgb('+bm_floor(color[0]*255)+','+bm_floor(color[1]*255)+','+bm_floor(color[2]*255)+')');\r\n        }\r\n    }\r\n};\nfunction SVGTritoneFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = document.createElementNS(svgNS,'feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','linearRGB');\r\n    feColorMatrix.setAttribute('values','0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f1');\r\n    filter.appendChild(feColorMatrix);\r\n    var feComponentTransfer = document.createElementNS(svgNS,'feComponentTransfer');\r\n    feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n    filter.appendChild(feComponentTransfer);\r\n    this.matrixFilter = feComponentTransfer;\r\n    var feFuncR = document.createElementNS(svgNS,'feFuncR');\r\n    feFuncR.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncR);\r\n    this.feFuncR = feFuncR;\r\n    var feFuncG = document.createElementNS(svgNS,'feFuncG');\r\n    feFuncG.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncG);\r\n    this.feFuncG = feFuncG;\r\n    var feFuncB = document.createElementNS(svgNS,'feFuncB');\r\n    feFuncB.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncB);\r\n    this.feFuncB = feFuncB;\r\n}\r\n\r\nSVGTritoneFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager.mdf){\r\n        var color1 = this.filterManager.effectElements[0].p.v;\r\n        var color2 = this.filterManager.effectElements[1].p.v;\r\n        var color3 = this.filterManager.effectElements[2].p.v;\r\n        var tableR = color3[0] + ' ' + color2[0] + ' ' + color1[0]\r\n        var tableG = color3[1] + ' ' + color2[1] + ' ' + color1[1]\r\n        var tableB = color3[2] + ' ' + color2[2] + ' ' + color1[2]\r\n        this.feFuncR.setAttribute('tableValues', tableR);\r\n        this.feFuncG.setAttribute('tableValues', tableG);\r\n        this.feFuncB.setAttribute('tableValues', tableB);\r\n        //var opacity = this.filterManager.effectElements[2].p.v/100;\r\n        //this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');\r\n    }\r\n};\nfunction SVGProLevelsFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var effectElements = this.filterManager.effectElements;\r\n    var feComponentTransfer = document.createElementNS(svgNS,'feComponentTransfer');\r\n    var feFuncR, feFuncG, feFuncB;\r\n    \r\n    if(effectElements[9].p.k || effectElements[9].p.v !== 0 || effectElements[10].p.k || effectElements[10].p.v !== 1 || effectElements[11].p.k || effectElements[11].p.v !== 1 || effectElements[12].p.k || effectElements[12].p.v !== 0 || effectElements[13].p.k || effectElements[13].p.v !== 1){\r\n        this.feFuncR = this.createFeFunc('feFuncR', feComponentTransfer);\r\n    }\r\n    if(effectElements[16].p.k || effectElements[16].p.v !== 0 || effectElements[17].p.k || effectElements[17].p.v !== 1 || effectElements[18].p.k || effectElements[18].p.v !== 1 || effectElements[19].p.k || effectElements[19].p.v !== 0 || effectElements[20].p.k || effectElements[20].p.v !== 1){\r\n        this.feFuncG = this.createFeFunc('feFuncG', feComponentTransfer);\r\n    }\r\n    if(effectElements[23].p.k || effectElements[23].p.v !== 0 || effectElements[24].p.k || effectElements[24].p.v !== 1 || effectElements[25].p.k || effectElements[25].p.v !== 1 || effectElements[26].p.k || effectElements[26].p.v !== 0 || effectElements[27].p.k || effectElements[27].p.v !== 1){\r\n        this.feFuncB = this.createFeFunc('feFuncB', feComponentTransfer);\r\n    }\r\n    if(effectElements[30].p.k || effectElements[30].p.v !== 0 || effectElements[31].p.k || effectElements[31].p.v !== 1 || effectElements[32].p.k || effectElements[32].p.v !== 1 || effectElements[33].p.k || effectElements[33].p.v !== 0 || effectElements[34].p.k || effectElements[34].p.v !== 1){\r\n        this.feFuncA = this.createFeFunc('feFuncA', feComponentTransfer);\r\n    }\r\n    \r\n    if(this.feFuncR || this.feFuncG || this.feFuncB || this.feFuncA){\r\n        feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n        filter.appendChild(feComponentTransfer);\r\n        feComponentTransfer = document.createElementNS(svgNS,'feComponentTransfer');\r\n    }\r\n\r\n    if(effectElements[2].p.k || effectElements[2].p.v !== 0 || effectElements[3].p.k || effectElements[3].p.v !== 1 || effectElements[4].p.k || effectElements[4].p.v !== 1 || effectElements[5].p.k || effectElements[5].p.v !== 0 || effectElements[6].p.k || effectElements[6].p.v !== 1){\r\n\r\n        feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n        filter.appendChild(feComponentTransfer);\r\n        this.feFuncRComposed = this.createFeFunc('feFuncR', feComponentTransfer);\r\n        this.feFuncGComposed = this.createFeFunc('feFuncG', feComponentTransfer);\r\n        this.feFuncBComposed = this.createFeFunc('feFuncB', feComponentTransfer);\r\n    }\r\n}\r\n\r\nSVGProLevelsFilter.prototype.createFeFunc = function(type, feComponentTransfer) {\r\n    var feFunc = document.createElementNS(svgNS,type);\r\n    feFunc.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFunc);\r\n    return feFunc;\r\n};\r\n\r\nSVGProLevelsFilter.prototype.getTableValue = function(inputBlack, inputWhite, gamma, outputBlack, outputWhite) {\r\n    var cnt = 0;\r\n    var segments = 256;\r\n    var perc;\r\n    var min = Math.min(inputBlack, inputWhite);\r\n    var max = Math.max(inputBlack, inputWhite);\r\n    var table = Array.call(null,{length:segments});\r\n    var colorValue;\r\n    var pos = 0;\r\n    var outputDelta = outputWhite - outputBlack; \r\n    var inputDelta = inputWhite - inputBlack; \r\n    while(cnt <= 256) {\r\n        perc = cnt/256;\r\n        if(perc <= min){\r\n            colorValue = inputDelta < 0 ? outputWhite : outputBlack;\r\n        } else if(perc >= max){\r\n            colorValue = inputDelta < 0 ? outputBlack : outputWhite;\r\n        } else {\r\n            colorValue = (outputBlack + outputDelta * Math.pow((perc - inputBlack) / inputDelta, 1 / gamma));\r\n        }\r\n        table[pos++] = colorValue;\r\n        cnt += 256/(segments-1);\r\n    }\r\n    return table.join(' ');\r\n};\r\n\r\nSVGProLevelsFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager.mdf){\r\n        var val, cnt, perc, bezier;\r\n        var effectElements = this.filterManager.effectElements;\r\n        if(this.feFuncRComposed && (forceRender || effectElements[2].p.mdf || effectElements[3].p.mdf || effectElements[4].p.mdf || effectElements[5].p.mdf || effectElements[6].p.mdf)){\r\n            val = this.getTableValue(effectElements[2].p.v,effectElements[3].p.v,effectElements[4].p.v,effectElements[5].p.v,effectElements[6].p.v);\r\n            this.feFuncRComposed.setAttribute('tableValues',val);\r\n            this.feFuncGComposed.setAttribute('tableValues',val);\r\n            this.feFuncBComposed.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncR && (forceRender || effectElements[9].p.mdf || effectElements[10].p.mdf || effectElements[11].p.mdf || effectElements[12].p.mdf || effectElements[13].p.mdf)){\r\n            val = this.getTableValue(effectElements[9].p.v,effectElements[10].p.v,effectElements[11].p.v,effectElements[12].p.v,effectElements[13].p.v);\r\n            this.feFuncR.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncG && (forceRender || effectElements[16].p.mdf || effectElements[17].p.mdf || effectElements[18].p.mdf || effectElements[19].p.mdf || effectElements[20].p.mdf)){\r\n            val = this.getTableValue(effectElements[16].p.v,effectElements[17].p.v,effectElements[18].p.v,effectElements[19].p.v,effectElements[20].p.v);\r\n            this.feFuncG.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncB && (forceRender || effectElements[23].p.mdf || effectElements[24].p.mdf || effectElements[25].p.mdf || effectElements[26].p.mdf || effectElements[27].p.mdf)){\r\n            val = this.getTableValue(effectElements[23].p.v,effectElements[24].p.v,effectElements[25].p.v,effectElements[26].p.v,effectElements[27].p.v);\r\n            this.feFuncB.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncA && (forceRender || effectElements[30].p.mdf || effectElements[31].p.mdf || effectElements[32].p.mdf || effectElements[33].p.mdf || effectElements[34].p.mdf)){\r\n            val = this.getTableValue(effectElements[30].p.v,effectElements[31].p.v,effectElements[32].p.v,effectElements[33].p.v,effectElements[34].p.v);\r\n            this.feFuncA.setAttribute('tableValues',val);\r\n        }\r\n        \r\n    }\r\n};\nfunction SVGDropShadowEffect(filter, filterManager){\r\n    /*<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"3\"/> <!-- stdDeviation is how much to blur -->\r\n  <feOffset dx=\"2\" dy=\"2\" result=\"offsetblur\"/> <!-- how much to offset -->\r\n  <feMerge> \r\n    <feMergeNode/> <!-- this contains the offset blurred image -->\r\n    <feMergeNode in=\"SourceGraphic\"/> <!-- this contains the element that the filter is applied to -->\r\n  </feMerge>*/\r\n  /*<feFlood flood-color=\"#3D4574\" flood-opacity=\"0.5\" result=\"offsetColor\"/>*/\r\n    filter.setAttribute('x','-100%');\r\n    filter.setAttribute('y','-100%');\r\n    filter.setAttribute('width','400%');\r\n    filter.setAttribute('height','400%');\r\n    this.filterManager = filterManager;\r\n\r\n    var feGaussianBlur = document.createElementNS(svgNS,'feGaussianBlur');\r\n    feGaussianBlur.setAttribute('in','SourceAlpha');\r\n    feGaussianBlur.setAttribute('result','drop_shadow_1');\r\n    feGaussianBlur.setAttribute('stdDeviation','0');\r\n    this.feGaussianBlur = feGaussianBlur;\r\n    filter.appendChild(feGaussianBlur);\r\n\r\n    var feOffset = document.createElementNS(svgNS,'feOffset');\r\n    feOffset.setAttribute('dx','25');\r\n    feOffset.setAttribute('dy','0');\r\n    feOffset.setAttribute('in','drop_shadow_1');\r\n    feOffset.setAttribute('result','drop_shadow_2');\r\n    this.feOffset = feOffset;\r\n    filter.appendChild(feOffset);\r\n    var feFlood = document.createElementNS(svgNS,'feFlood');\r\n    feFlood.setAttribute('flood-color','#00ff00');\r\n    feFlood.setAttribute('flood-opacity','1');\r\n    feFlood.setAttribute('result','drop_shadow_3');\r\n    this.feFlood = feFlood;\r\n    filter.appendChild(feFlood);\r\n\r\n    var feComposite = document.createElementNS(svgNS,'feComposite');\r\n    feComposite.setAttribute('in','drop_shadow_3');\r\n    feComposite.setAttribute('in2','drop_shadow_2');\r\n    feComposite.setAttribute('operator','in');\r\n    feComposite.setAttribute('result','drop_shadow_4');\r\n    filter.appendChild(feComposite);\r\n\r\n\r\n    var feMerge = document.createElementNS(svgNS,'feMerge');\r\n    filter.appendChild(feMerge);\r\n    var feMergeNode;\r\n    feMergeNode = document.createElementNS(svgNS,'feMergeNode');\r\n    feMerge.appendChild(feMergeNode);\r\n    feMergeNode = document.createElementNS(svgNS,'feMergeNode');\r\n    feMergeNode.setAttribute('in','SourceGraphic');\r\n    this.feMergeNode = feMergeNode;\r\n    this.feMerge = feMerge;\r\n    this.originalNodeAdded = false;\r\n    feMerge.appendChild(feMergeNode);\r\n}\r\n\r\nSVGDropShadowEffect.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager.mdf){\r\n        if(forceRender || this.filterManager.effectElements[4].p.mdf){\r\n            this.feGaussianBlur.setAttribute('stdDeviation', this.filterManager.effectElements[4].p.v / 4);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[0].p.mdf){\r\n            var col = this.filterManager.effectElements[0].p.v;\r\n            this.feFlood.setAttribute('flood-color',rgbToHex(Math.round(col[0]*255),Math.round(col[1]*255),Math.round(col[2]*255)));\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[1].p.mdf){\r\n            this.feFlood.setAttribute('flood-opacity',this.filterManager.effectElements[1].p.v/255);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[2].p.mdf || this.filterManager.effectElements[3].p.mdf){\r\n            var distance = this.filterManager.effectElements[3].p.v\r\n            var angle = (this.filterManager.effectElements[2].p.v - 90) * degToRads\r\n            var x = distance * Math.cos(angle)\r\n            var y = distance * Math.sin(angle)\r\n            this.feOffset.setAttribute('dx', x);\r\n            this.feOffset.setAttribute('dy', y);\r\n        }\r\n        /*if(forceRender || this.filterManager.effectElements[5].p.mdf){\r\n            if(this.filterManager.effectElements[5].p.v === 1 && this.originalNodeAdded) {\r\n                this.feMerge.removeChild(this.feMergeNode);\r\n                this.originalNodeAdded = false;\r\n            } else if(this.filterManager.effectElements[5].p.v === 0 && !this.originalNodeAdded) {\r\n                this.feMerge.appendChild(this.feMergeNode);\r\n                this.originalNodeAdded = true;\r\n            }\r\n        }*/\r\n    }\r\n};\nfunction SVGMatte3Effect(filterElem, filterManager, elem){\r\n    this.initialized = false;\r\n    this.filterManager = filterManager;\r\n    this.filterElem = filterElem;\r\n    this.elem = elem;\r\n    elem.matteElement = document.createElementNS(svgNS,'g');\r\n    elem.matteElement.appendChild(elem.layerElement);\r\n    elem.matteElement.appendChild(elem.transformedElement);\r\n    elem.baseElement = elem.matteElement;\r\n}\r\n\r\nSVGMatte3Effect.prototype.setElementAsMask = function(elem, mask) {\r\n    var masker = document.createElementNS(svgNS,'mask');\r\n    masker.setAttribute('id',mask.layerId);\r\n    masker.setAttribute('mask-type','alpha');\r\n    masker.appendChild(mask.layerElement);\r\n    elem.setMatte(mask.layerId);\r\n    mask.data.hd = false;\r\n    var defs = elem.globalData.defs;\r\n    defs.appendChild(masker);\r\n}\r\n\r\nSVGMatte3Effect.prototype.initialize = function() {\r\n    var ind = this.filterManager.effectElements[0].p.v;\r\n    var i = 0, len = this.elem.comp.elements.length;\r\n    while(i < len) {\r\n    \tif(this.elem.comp.elements[i].data.ind === ind) {\r\n    \t\tthis.setElementAsMask(this.elem, this.elem.comp.elements[i]);\r\n    \t}\r\n    \ti += 1;\r\n    }\r\n    this.initialized = true;\r\n}\r\n\r\nSVGMatte3Effect.prototype.renderFrame = function() {\r\n\tif(!this.initialized) {\r\n\t\tthis.initialize();\r\n\t}\r\n}\nfunction SVGEffects(elem){\r\n    var i, len = elem.data.ef.length;\r\n    var filId = randomString(10);\r\n    var fil = filtersFactory.createFilter(filId);\r\n    var count = 0;\r\n    this.filters = [];\r\n    var filterManager;\r\n    for(i=0;i<len;i+=1){\r\n        if(elem.data.ef[i].ty === 20){\r\n            count += 1;\r\n            filterManager = new SVGTintFilter(fil, elem.effects.effectElements[i]);\r\n            this.filters.push(filterManager);\r\n        }else if(elem.data.ef[i].ty === 21){\r\n            count += 1;\r\n            filterManager = new SVGFillFilter(fil, elem.effects.effectElements[i]);\r\n            this.filters.push(filterManager);\r\n        }else if(elem.data.ef[i].ty === 22){\r\n            filterManager = new SVGStrokeEffect(elem, elem.effects.effectElements[i]);\r\n            this.filters.push(filterManager);\r\n        }else if(elem.data.ef[i].ty === 23){\r\n            count += 1;\r\n            filterManager = new SVGTritoneFilter(fil, elem.effects.effectElements[i]);\r\n            this.filters.push(filterManager);\r\n        }else if(elem.data.ef[i].ty === 24){\r\n            count += 1;\r\n            filterManager = new SVGProLevelsFilter(fil, elem.effects.effectElements[i]);\r\n            this.filters.push(filterManager);\r\n        }else if(elem.data.ef[i].ty === 25){\r\n            count += 1;\r\n            filterManager = new SVGDropShadowEffect(fil, elem.effects.effectElements[i]);\r\n            this.filters.push(filterManager);\r\n        }else if(elem.data.ef[i].ty === 28){\r\n            //count += 1;\r\n            filterManager = new SVGMatte3Effect(fil, elem.effects.effectElements[i], elem);\r\n            this.filters.push(filterManager);\r\n        }\r\n    }\r\n    if(count){\r\n        elem.globalData.defs.appendChild(fil);\r\n        elem.layerElement.setAttribute('filter','url(' + locationHref + '#'+filId+')');\r\n    }\r\n}\r\n\r\nSVGEffects.prototype.renderFrame = function(firstFrame){\r\n    var i, len = this.filters.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.filters[i].renderFrame(firstFrame);\r\n    }\r\n};\nfunction ICompElement(data,parentContainer,globalData,comp, placeholder){\r\n    this._parent.constructor.call(this,data,parentContainer,globalData,comp, placeholder);\r\n    this.layers = data.layers;\r\n    this.supports3d = true;\r\n    this.completeLayers = false;\r\n    this.pendingElements = [];\r\n    this.elements = this.layers ? Array.apply(null,{length:this.layers.length}) : [];\r\n    if(this.data.tm){\r\n        this.tm = PropertyFactory.getProp(this,this.data.tm,0,globalData.frameRate,this.dynamicProperties);\r\n    }\r\n    if(this.data.xt){\r\n        this.layerElement = document.createElementNS(svgNS,'g');\r\n        this.buildAllItems();\r\n    } else if(!globalData.progressiveLoad){\r\n        this.buildAllItems();\r\n    }\r\n}\r\ncreateElement(SVGBaseElement, ICompElement);\r\n\r\nICompElement.prototype.hide = function(){\r\n    if(!this.hidden){\r\n        this._parent.hide.call(this);\r\n        var i,len = this.elements.length;\r\n        for( i = 0; i < len; i+=1 ){\r\n            if(this.elements[i]){\r\n                this.elements[i].hide();\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.prepareFrame = function(num){\r\n    this._parent.prepareFrame.call(this,num);\r\n    if(this.isVisible===false && !this.data.xt){\r\n        return;\r\n    }\r\n\r\n    if(this.tm){\r\n        var timeRemapped = this.tm.v;\r\n        if(timeRemapped === this.data.op){\r\n            timeRemapped = this.data.op - 1;\r\n        }\r\n        this.renderedFrame = timeRemapped;\r\n    } else {\r\n        this.renderedFrame = num/this.data.sr;\r\n    }\r\n    var i,len = this.elements.length;\r\n    if(!this.completeLayers){\r\n        this.checkLayers(this.renderedFrame);\r\n    }\r\n    for( i = 0; i < len; i+=1 ){\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].prepareFrame(this.renderedFrame - this.layers[i].st);\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.renderFrame = function(parentMatrix){\r\n    var renderParent = this._parent.renderFrame.call(this,parentMatrix);\r\n    var i,len = this.layers.length;\r\n    if(renderParent===false){\r\n        this.hide();\r\n        return;\r\n    }\r\n\r\n    if(this.hidden) {\r\n        this.show();\r\n    }\r\n    for( i = 0; i < len; i+=1 ){\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].renderFrame();\r\n        }\r\n    }\r\n    if(this.firstFrame){\r\n        this.firstFrame = false;\r\n    }\r\n};\r\n\r\nICompElement.prototype.setElements = function(elems){\r\n    this.elements = elems;\r\n};\r\n\r\nICompElement.prototype.getElements = function(){\r\n    return this.elements;\r\n};\r\n\r\nICompElement.prototype.destroy = function(){\r\n    this._parent.destroy.call(this._parent);\r\n    var i,len = this.layers.length;\r\n    for( i = 0; i < len; i+=1 ){\r\n        if(this.elements[i]){\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.checkLayers = SVGRenderer.prototype.checkLayers;\r\nICompElement.prototype.buildItem = SVGRenderer.prototype.buildItem;\r\nICompElement.prototype.buildAllItems = SVGRenderer.prototype.buildAllItems;\r\nICompElement.prototype.buildElementParenting = SVGRenderer.prototype.buildElementParenting;\r\nICompElement.prototype.createItem = SVGRenderer.prototype.createItem;\r\nICompElement.prototype.createImage = SVGRenderer.prototype.createImage;\r\nICompElement.prototype.createComp = SVGRenderer.prototype.createComp;\r\nICompElement.prototype.createSolid = SVGRenderer.prototype.createSolid;\r\nICompElement.prototype.createShape = SVGRenderer.prototype.createShape;\r\nICompElement.prototype.createText = SVGRenderer.prototype.createText;\r\nICompElement.prototype.createBase = SVGRenderer.prototype.createBase;\r\nICompElement.prototype.appendElementInPos = SVGRenderer.prototype.appendElementInPos;\r\nICompElement.prototype.checkPendingElements = SVGRenderer.prototype.checkPendingElements;\r\nICompElement.prototype.addPendingElement = SVGRenderer.prototype.addPendingElement;\nfunction IImageElement(data,parentContainer,globalData,comp,placeholder){\r\n    this.assetData = globalData.getAssetData(data.refId);\r\n    this._parent.constructor.call(this,data,parentContainer,globalData,comp,placeholder);\r\n}\r\ncreateElement(SVGBaseElement, IImageElement);\r\n\r\nIImageElement.prototype.createElements = function(){\r\n\r\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\r\n\r\n    this._parent.createElements.call(this);\r\n\r\n    this.innerElem = document.createElementNS(svgNS,'image');\r\n    this.innerElem.setAttribute('width',this.assetData.w+\"px\");\r\n    this.innerElem.setAttribute('height',this.assetData.h+\"px\");\r\n    this.innerElem.setAttribute('preserveAspectRatio','xMidYMid slice');\r\n    this.innerElem.setAttributeNS('http://www.w3.org/1999/xlink','href',assetPath);\r\n    this.maskedElement = this.innerElem;\r\n    this.layerElement.appendChild(this.innerElem);\r\n    if(this.data.ln){\r\n        this.layerElement.setAttribute('id',this.data.ln);\r\n    }\r\n    if(this.data.cl){\r\n        this.layerElement.setAttribute('class',this.data.cl);\r\n    }\r\n\r\n};\r\n\r\nIImageElement.prototype.renderFrame = function(parentMatrix){\r\n    var renderParent = this._parent.renderFrame.call(this,parentMatrix);\r\n    if(renderParent===false){\r\n        this.hide();\r\n        return;\r\n    }\r\n    if(this.hidden){\r\n        this.show();\r\n    }\r\n    if(this.firstFrame){\r\n        this.firstFrame = false;\r\n    }\r\n};\r\n\r\nIImageElement.prototype.destroy = function(){\r\n    this._parent.destroy.call(this._parent);\r\n    this.innerElem =  null;\r\n};\nfunction ISolidElement(data,parentContainer,globalData,comp, placeholder){\r\n    this._parent.constructor.call(this,data,parentContainer,globalData,comp, placeholder);\r\n}\r\ncreateElement(SVGBaseElement, ISolidElement);\r\n\r\nISolidElement.prototype.createElements = function(){\r\n    this._parent.createElements.call(this);\r\n\r\n    var rect = document.createElementNS(svgNS,'rect');\r\n    ////rect.style.width = this.data.sw;\r\n    ////rect.style.height = this.data.sh;\r\n    ////rect.style.fill = this.data.sc;\r\n    rect.setAttribute('width',this.data.sw);\r\n    rect.setAttribute('height',this.data.sh);\r\n    rect.setAttribute('fill',this.data.sc);\r\n    this.layerElement.appendChild(rect);\r\n    this.innerElem = rect;\r\n    if(this.data.ln){\r\n        this.layerElement.setAttribute('id',this.data.ln);\r\n    }\r\n    if(this.data.cl){\r\n        this.layerElement.setAttribute('class',this.data.cl);\r\n    }\r\n};\r\n\r\nISolidElement.prototype.renderFrame = IImageElement.prototype.renderFrame;\r\nISolidElement.prototype.destroy = IImageElement.prototype.destroy;\r\n\nvar animationManager = (function(){\r\n    var moduleOb = {};\r\n    var registeredAnimations = [];\r\n    var initTime = 0;\r\n    var len = 0;\r\n    var idled = true;\r\n    var playingAnimationsNum = 0;\r\n\r\n    function removeElement(ev){\r\n        var i = 0;\r\n        var animItem = ev.target;\r\n        while(i<len) {\r\n            if (registeredAnimations[i].animation === animItem) {\r\n                registeredAnimations.splice(i, 1);\r\n                i -= 1;\r\n                len -= 1;\r\n                if(!animItem.isPaused){\r\n                    subtractPlayingCount();\r\n                }\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    function registerAnimation(element, animationData){\r\n        if(!element){\r\n            return null;\r\n        }\r\n        var i=0;\r\n        while(i<len){\r\n            if(registeredAnimations[i].elem == element && registeredAnimations[i].elem !== null ){\r\n                return registeredAnimations[i].animation;\r\n            }\r\n            i+=1;\r\n        }\r\n        var animItem = new AnimationItem();\r\n        setupAnimation(animItem, element);\r\n        animItem.setData(element, animationData);\r\n        return animItem;\r\n    }\r\n\r\n    function addPlayingCount(){\r\n        playingAnimationsNum += 1;\r\n        activate();\r\n    }\r\n\r\n    function subtractPlayingCount(){\r\n        playingAnimationsNum -= 1;\r\n        if(playingAnimationsNum === 0){\r\n            idled = true;\r\n        }\r\n    }\r\n\r\n    function setupAnimation(animItem, element){\r\n        animItem.addEventListener('destroy',removeElement);\r\n        animItem.addEventListener('_active',addPlayingCount);\r\n        animItem.addEventListener('_idle',subtractPlayingCount);\r\n        registeredAnimations.push({elem: element,animation:animItem});\r\n        len += 1;\r\n    }\r\n\r\n    function loadAnimation(params){\r\n        var animItem = new AnimationItem();\r\n        setupAnimation(animItem, null);\r\n        animItem.setParams(params);\r\n        return animItem;\r\n    }\r\n\r\n\r\n    function setSpeed(val,animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.setSpeed(val, animation);\r\n        }\r\n    }\r\n\r\n    function setDirection(val, animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.setDirection(val, animation);\r\n        }\r\n    }\r\n\r\n    function play(animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.play(animation);\r\n        }\r\n    }\r\n\r\n    function moveFrame (value, animation) {\r\n        initTime = Date.now();\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.moveFrame(value,animation);\r\n        }\r\n    }\r\n\r\n    function resume(nowTime) {\r\n\r\n        var elapsedTime = nowTime - initTime;\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.advanceTime(elapsedTime);\r\n        }\r\n        initTime = nowTime;\r\n        if(!idled) {\r\n            window.requestAnimationFrame(resume);\r\n        }\r\n    }\r\n\r\n    function first(nowTime){\r\n        initTime = nowTime;\r\n        window.requestAnimationFrame(resume);\r\n    }\r\n\r\n    function pause(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.pause(animation);\r\n        }\r\n    }\r\n\r\n    function goToAndStop(value,isFrame,animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.goToAndStop(value,isFrame,animation);\r\n        }\r\n    }\r\n\r\n    function stop(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.stop(animation);\r\n        }\r\n    }\r\n\r\n    function togglePause(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.togglePause(animation);\r\n        }\r\n    }\r\n\r\n    function destroy(animation) {\r\n        var i;\r\n        for(i=(len-1);i>=0;i-=1){\r\n            registeredAnimations[i].animation.destroy(animation);\r\n        }\r\n    }\r\n\r\n    function searchAnimations(animationData, standalone, renderer){\r\n        var animElements = document.getElementsByClassName('bodymovin');\r\n        var i, len = animElements.length;\r\n        for(i=0;i<len;i+=1){\r\n            if(renderer){\r\n                animElements[i].setAttribute('data-bm-type',renderer);\r\n            }\r\n            registerAnimation(animElements[i], animationData);\r\n        }\r\n        if(standalone && len === 0){\r\n            if(!renderer){\r\n                renderer = 'svg';\r\n            }\r\n            var body = document.getElementsByTagName('body')[0];\r\n            body.innerHTML = '';\r\n            var div = document.createElement('div');\r\n            div.style.width = '100%';\r\n            div.style.height = '100%';\r\n            div.setAttribute('data-bm-type',renderer);\r\n            body.appendChild(div);\r\n            registerAnimation(div, animationData);\r\n        }\r\n    }\r\n\r\n    function resize(){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.resize();\r\n        }\r\n    }\r\n\r\n    function start(){\r\n        window.requestAnimationFrame(first);\r\n    }\r\n\r\n    function activate(){\r\n        if(idled){\r\n            idled = false;\r\n            window.requestAnimationFrame(first);\r\n        }\r\n    }\r\n\r\n    //start();\r\n\r\n    setTimeout(start,0);\r\n\r\n    moduleOb.registerAnimation = registerAnimation;\r\n    moduleOb.loadAnimation = loadAnimation;\r\n    moduleOb.setSpeed = setSpeed;\r\n    moduleOb.setDirection = setDirection;\r\n    moduleOb.play = play;\r\n    moduleOb.moveFrame = moveFrame;\r\n    moduleOb.pause = pause;\r\n    moduleOb.stop = stop;\r\n    moduleOb.togglePause = togglePause;\r\n    moduleOb.searchAnimations = searchAnimations;\r\n    moduleOb.resize = resize;\r\n    moduleOb.start = start;\r\n    moduleOb.goToAndStop = goToAndStop;\r\n    moduleOb.destroy = destroy;\r\n    return moduleOb;\r\n}());\r\n\nvar AnimationItem = function () {\r\n    this._cbs = [];\r\n    this.name = '';\r\n    this.path = '';\r\n    this.isLoaded = false;\r\n    this.currentFrame = 0;\r\n    this.currentRawFrame = 0;\r\n    this.totalFrames = 0;\r\n    this.frameRate = 0;\r\n    this.frameMult = 0;\r\n    this.playSpeed = 1;\r\n    this.playDirection = 1;\r\n    this.pendingElements = 0;\r\n    this.playCount = 0;\r\n    this.prerenderFramesFlag = true;\r\n    this.animationData = {};\r\n    this.layers = [];\r\n    this.assets = [];\r\n    this.isPaused = true;\r\n    this.autoplay = false;\r\n    this.loop = true;\r\n    this.renderer = null;\r\n    this.animationID = randomString(10);\r\n    this.scaleMode = 'fit';\r\n    this.assetsPath = '';\r\n    this.timeCompleted = 0;\r\n    this.segmentPos = 0;\r\n    this.subframeEnabled = subframeEnabled;\r\n    this.segments = [];\r\n    this.pendingSegment = false;\r\n    this._idle = true;\r\n    this.projectInterface = ProjectInterface();\r\n};\r\n\r\nAnimationItem.prototype.setParams = function(params) {\r\n    var self = this;\r\n    if(params.context){\r\n        this.context = params.context;\r\n    }\r\n    if(params.wrapper || params.container){\r\n        this.wrapper = params.wrapper || params.container;\r\n    }\r\n    var animType = params.animType ? params.animType : params.renderer ? params.renderer : 'svg';\r\n    switch(animType){\r\n        case 'canvas':\r\n            this.renderer = new CanvasRenderer(this, params.rendererSettings);\r\n            break;\r\n        case 'svg':\r\n            this.renderer = new SVGRenderer(this, params.rendererSettings);\r\n            break;\r\n        case 'hybrid':\r\n        case 'html':\r\n        default:\r\n            this.renderer = new HybridRenderer(this, params.rendererSettings);\r\n            break;\r\n    }\r\n    this.renderer.setProjectInterface(this.projectInterface);\r\n    this.animType = animType;\r\n\r\n    if(params.loop === '' || params.loop === null){\r\n    }else if(params.loop === false){\r\n        this.loop = false;\r\n    }else if(params.loop === true){\r\n        this.loop = true;\r\n    }else{\r\n        this.loop = parseInt(params.loop);\r\n    }\r\n    this.autoplay = 'autoplay' in params ? params.autoplay : true;\r\n    this.name = params.name ? params.name :  '';\r\n    this.prerenderFramesFlag = 'prerender' in params ? params.prerender : true;\r\n    this.autoloadSegments = params.hasOwnProperty('autoloadSegments') ? params.autoloadSegments :  true;\r\n    if(params.animationData){\r\n        self.configAnimation(params.animationData);\r\n    }else if(params.path){\r\n        if(params.path.substr(-4) != 'json'){\r\n            if (params.path.substr(-1, 1) != '/') {\r\n                params.path += '/';\r\n            }\r\n            params.path += 'data.json';\r\n        }\r\n\r\n        var xhr = new XMLHttpRequest();\r\n        if(params.path.lastIndexOf('\\\\') != -1){\r\n            this.path = params.path.substr(0,params.path.lastIndexOf('\\\\')+1);\r\n        }else{\r\n            this.path = params.path.substr(0,params.path.lastIndexOf('/')+1);\r\n        }\r\n        this.assetsPath = params.assetsPath;\r\n        this.fileName = params.path.substr(params.path.lastIndexOf('/')+1);\r\n        this.fileName = this.fileName.substr(0,this.fileName.lastIndexOf('.json'));\r\n        xhr.open('GET', params.path, true);\r\n        xhr.send();\r\n        xhr.onreadystatechange = function () {\r\n            if (xhr.readyState == 4) {\r\n                if(xhr.status == 200){\r\n                    self.configAnimation(JSON.parse(xhr.responseText));\r\n                }else{\r\n                    try{\r\n                        var response = JSON.parse(xhr.responseText);\r\n                        self.configAnimation(response);\r\n                    }catch(err){\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.setData = function (wrapper, animationData) {\r\n    var params = {\r\n        wrapper: wrapper,\r\n        animationData: animationData ? (typeof animationData  === \"object\") ? animationData : JSON.parse(animationData) : null\r\n    };\r\n    var wrapperAttributes = wrapper.attributes;\r\n\r\n    params.path = wrapperAttributes.getNamedItem('data-animation-path') ? wrapperAttributes.getNamedItem('data-animation-path').value : wrapperAttributes.getNamedItem('data-bm-path') ? wrapperAttributes.getNamedItem('data-bm-path').value :  wrapperAttributes.getNamedItem('bm-path') ? wrapperAttributes.getNamedItem('bm-path').value : '';\r\n    params.animType = wrapperAttributes.getNamedItem('data-anim-type') ? wrapperAttributes.getNamedItem('data-anim-type').value : wrapperAttributes.getNamedItem('data-bm-type') ? wrapperAttributes.getNamedItem('data-bm-type').value : wrapperAttributes.getNamedItem('bm-type') ? wrapperAttributes.getNamedItem('bm-type').value :  wrapperAttributes.getNamedItem('data-bm-renderer') ? wrapperAttributes.getNamedItem('data-bm-renderer').value : wrapperAttributes.getNamedItem('bm-renderer') ? wrapperAttributes.getNamedItem('bm-renderer').value : 'canvas';\r\n\r\n    var loop = wrapperAttributes.getNamedItem('data-anim-loop') ? wrapperAttributes.getNamedItem('data-anim-loop').value :  wrapperAttributes.getNamedItem('data-bm-loop') ? wrapperAttributes.getNamedItem('data-bm-loop').value :  wrapperAttributes.getNamedItem('bm-loop') ? wrapperAttributes.getNamedItem('bm-loop').value : '';\r\n    if(loop === ''){\r\n    }else if(loop === 'false'){\r\n        params.loop = false;\r\n    }else if(loop === 'true'){\r\n        params.loop = true;\r\n    }else{\r\n        params.loop = parseInt(loop);\r\n    }\r\n    var autoplay = wrapperAttributes.getNamedItem('data-anim-autoplay') ? wrapperAttributes.getNamedItem('data-anim-autoplay').value :  wrapperAttributes.getNamedItem('data-bm-autoplay') ? wrapperAttributes.getNamedItem('data-bm-autoplay').value :  wrapperAttributes.getNamedItem('bm-autoplay') ? wrapperAttributes.getNamedItem('bm-autoplay').value : true;\r\n    params.autoplay = autoplay !== \"false\";\r\n\r\n    params.name = wrapperAttributes.getNamedItem('data-name') ? wrapperAttributes.getNamedItem('data-name').value :  wrapperAttributes.getNamedItem('data-bm-name') ? wrapperAttributes.getNamedItem('data-bm-name').value : wrapperAttributes.getNamedItem('bm-name') ? wrapperAttributes.getNamedItem('bm-name').value :  '';\r\n    var prerender = wrapperAttributes.getNamedItem('data-anim-prerender') ? wrapperAttributes.getNamedItem('data-anim-prerender').value :  wrapperAttributes.getNamedItem('data-bm-prerender') ? wrapperAttributes.getNamedItem('data-bm-prerender').value :  wrapperAttributes.getNamedItem('bm-prerender') ? wrapperAttributes.getNamedItem('bm-prerender').value : '';\r\n\r\n    if(prerender === 'false'){\r\n        params.prerender = false;\r\n    }\r\n    this.setParams(params);\r\n};\r\n\r\nAnimationItem.prototype.includeLayers = function(data) {\r\n    if(data.op > this.animationData.op){\r\n        this.animationData.op = data.op;\r\n        this.totalFrames = Math.floor(data.op - this.animationData.ip);\r\n        this.animationData.tf = this.totalFrames;\r\n    }\r\n    var layers = this.animationData.layers;\r\n    var i, len = layers.length;\r\n    var newLayers = data.layers;\r\n    var j, jLen = newLayers.length;\r\n    for(j=0;j<jLen;j+=1){\r\n        i = 0;\r\n        while(i<len){\r\n            if(layers[i].id == newLayers[j].id){\r\n                layers[i] = newLayers[j];\r\n                break;\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n    if(data.chars || data.fonts){\r\n        this.renderer.globalData.fontManager.addChars(data.chars);\r\n        this.renderer.globalData.fontManager.addFonts(data.fonts, this.renderer.globalData.defs);\r\n    }\r\n    if(data.assets){\r\n        len = data.assets.length;\r\n        for(i = 0; i < len; i += 1){\r\n            this.animationData.assets.push(data.assets[i]);\r\n        }\r\n    }\r\n    //this.totalFrames = 50;\r\n    //this.animationData.tf = 50;\r\n    this.animationData.__complete = false;\r\n    dataManager.completeData(this.animationData,this.renderer.globalData.fontManager);\r\n    this.renderer.includeLayers(data.layers);\r\n    if(expressionsPlugin){\r\n        expressionsPlugin.initExpressions(this);\r\n    }\r\n    this.renderer.renderFrame(null);\r\n    this.loadNextSegment();\r\n};\r\n\r\nAnimationItem.prototype.loadNextSegment = function() {\r\n    var segments = this.animationData.segments;\r\n    if(!segments || segments.length === 0 || !this.autoloadSegments){\r\n        this.trigger('data_ready');\r\n        this.timeCompleted = this.animationData.tf;\r\n        return;\r\n    }\r\n    var segment = segments.shift();\r\n    this.timeCompleted = segment.time * this.frameRate;\r\n    var xhr = new XMLHttpRequest();\r\n    var self = this;\r\n    var segmentPath = this.path+this.fileName+'_' + this.segmentPos + '.json';\r\n    this.segmentPos += 1;\r\n    xhr.open('GET', segmentPath, true);\r\n    xhr.send();\r\n    xhr.onreadystatechange = function () {\r\n        if (xhr.readyState == 4) {\r\n            if(xhr.status == 200){\r\n                self.includeLayers(JSON.parse(xhr.responseText));\r\n            }else{\r\n                try{\r\n                    var response = JSON.parse(xhr.responseText);\r\n                    self.includeLayers(response);\r\n                }catch(err){\r\n                }\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\nAnimationItem.prototype.loadSegments = function() {\r\n    var segments = this.animationData.segments;\r\n    if(!segments) {\r\n        this.timeCompleted = this.animationData.tf;\r\n    }\r\n    this.loadNextSegment();\r\n};\r\n\r\nAnimationItem.prototype.configAnimation = function (animData) {\r\n    var _this = this;\r\n    if(this.renderer && this.renderer.destroyed){\r\n        return;\r\n    }\r\n    //console.log(JSON.parse(JSON.stringify(animData)));\r\n    //animData.w = Math.round(animData.w/blitter);\r\n    //animData.h = Math.round(animData.h/blitter);\r\n    this.animationData = animData;\r\n    this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip);\r\n    this.animationData.tf = this.totalFrames;\r\n    this.renderer.configAnimation(animData);\r\n    if(!animData.assets){\r\n        animData.assets = [];\r\n    }\r\n    if(animData.comps) {\r\n        animData.assets = animData.assets.concat(animData.comps);\r\n        animData.comps = null;\r\n    }\r\n    this.renderer.searchExtraCompositions(animData.assets);\r\n\r\n    this.layers = this.animationData.layers;\r\n    this.assets = this.animationData.assets;\r\n    this.frameRate = this.animationData.fr;\r\n    this.firstFrame = Math.round(this.animationData.ip);\r\n    this.frameMult = this.animationData.fr / 1000;\r\n    this.trigger('config_ready');\r\n    this.imagePreloader = new ImagePreloader();\r\n    this.imagePreloader.setAssetsPath(this.assetsPath);\r\n    this.imagePreloader.setPath(this.path);\r\n    this.imagePreloader.loadAssets(animData.assets, function(err) {\r\n        if(!err) {\r\n            _this.trigger('loaded_images');\r\n        }\r\n    });\r\n    this.loadSegments();\r\n    this.updaFrameModifier();\r\n    if(this.renderer.globalData.fontManager){\r\n        this.waitForFontsLoaded();\r\n    }else{\r\n        dataManager.completeData(this.animationData,this.renderer.globalData.fontManager);\r\n        this.checkLoaded();\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.waitForFontsLoaded = (function(){\r\n    function checkFontsLoaded(){\r\n        if(this.renderer.globalData.fontManager.loaded){\r\n            dataManager.completeData(this.animationData,this.renderer.globalData.fontManager);\r\n            //this.renderer.buildItems(this.animationData.layers);\r\n            this.checkLoaded();\r\n        }else{\r\n            setTimeout(checkFontsLoaded.bind(this),20);\r\n        }\r\n    }\r\n\r\n    return function(){\r\n        checkFontsLoaded.bind(this)();\r\n    }\r\n}());\r\n\r\nAnimationItem.prototype.addPendingElement = function () {\r\n    this.pendingElements += 1;\r\n}\r\n\r\nAnimationItem.prototype.elementLoaded = function () {\r\n    this.pendingElements--;\r\n    this.checkLoaded();\r\n};\r\n\r\nAnimationItem.prototype.checkLoaded = function () {\r\n    if (this.pendingElements === 0) {\r\n        if(expressionsPlugin){\r\n            expressionsPlugin.initExpressions(this);\r\n        }\r\n        this.renderer.initItems();\r\n        setTimeout(function(){\r\n            this.trigger('DOMLoaded');\r\n        }.bind(this),0);\r\n        this.isLoaded = true;\r\n        this.gotoFrame();\r\n        if(this.autoplay){\r\n            this.play();\r\n        }\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.resize = function () {\r\n    this.renderer.updateContainerSize();\r\n};\r\n\r\nAnimationItem.prototype.setSubframe = function(flag){\r\n    this.subframeEnabled = flag ? true : false;\r\n}\r\n\r\nAnimationItem.prototype.gotoFrame = function () {\r\n    if(this.subframeEnabled){\r\n        this.currentFrame = this.currentRawFrame;\r\n    }else{\r\n        this.currentFrame = Math.floor(this.currentRawFrame);\r\n    }\r\n\r\n    if(this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted){\r\n        this.currentFrame = this.timeCompleted;\r\n    }\r\n    this.trigger('enterFrame');\r\n    this.renderFrame();\r\n};\r\n\r\nAnimationItem.prototype.renderFrame = function () {\r\n    if(this.isLoaded === false){\r\n        return;\r\n    }\r\n    //console.log('this.currentFrame:',this.currentFrame + this.firstFrame);\r\n    this.renderer.renderFrame(this.currentFrame + this.firstFrame);\r\n};\r\n\r\nAnimationItem.prototype.play = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === true){\r\n        this.isPaused = false;\r\n        if(this._idle){\r\n            this._idle = false;\r\n            this.trigger('_active');\r\n        }\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.pause = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === false){\r\n        this.isPaused = true;\r\n        if(!this.pendingSegment){\r\n            this._idle = true;\r\n            this.trigger('_idle');\r\n        }\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.togglePause = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === true){\r\n        this.play();\r\n    }else{\r\n        this.pause();\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.stop = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    this.pause();\r\n    this.currentFrame = this.currentRawFrame = 0;\r\n    this.playCount = 0;\r\n    this.gotoFrame();\r\n};\r\n\r\nAnimationItem.prototype.goToAndStop = function (value, isFrame, name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(isFrame){\r\n        this.setCurrentRawFrameValue(value);\r\n    }else{\r\n        this.setCurrentRawFrameValue(value * this.frameModifier);\r\n    }\r\n    this.pause();\r\n};\r\n\r\nAnimationItem.prototype.goToAndPlay = function (value, isFrame, name) {\r\n    this.goToAndStop(value, isFrame, name);\r\n    this.play();\r\n};\r\n\r\nAnimationItem.prototype.advanceTime = function (value) {\r\n    if(this.pendingSegment){\r\n        this.pendingSegment = false;\r\n        this.adjustSegment(this.segments.shift());\r\n        if(this.isPaused){\r\n            this.play();\r\n        }\r\n        return;\r\n    }\r\n    if (this.isPaused === true || this.isLoaded === false) {\r\n        return;\r\n    }\r\n    this.setCurrentRawFrameValue(this.currentRawFrame + value * this.frameModifier);\r\n};\r\n\r\nAnimationItem.prototype.updateAnimation = function (perc) {\r\n    this.setCurrentRawFrameValue(this.totalFrames * perc);\r\n};\r\n\r\nAnimationItem.prototype.moveFrame = function (value, name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    this.setCurrentRawFrameValue(this.currentRawFrame+value);\r\n};\r\n\r\nAnimationItem.prototype.adjustSegment = function(arr){\r\n    this.playCount = 0;\r\n    if(arr[1] < arr[0]){\r\n        if(this.frameModifier > 0){\r\n            if(this.playSpeed < 0){\r\n                this.setSpeed(-this.playSpeed);\r\n            } else {\r\n                this.setDirection(-1);\r\n            }\r\n        }\r\n        this.totalFrames = arr[0] - arr[1];\r\n        this.firstFrame = arr[1];\r\n        this.setCurrentRawFrameValue(this.totalFrames - 0.01);\r\n    } else if(arr[1] > arr[0]){\r\n        if(this.frameModifier < 0){\r\n            if(this.playSpeed < 0){\r\n                this.setSpeed(-this.playSpeed);\r\n            } else {\r\n                this.setDirection(1);\r\n            }\r\n        }\r\n        this.totalFrames = arr[1] - arr[0];\r\n        this.firstFrame = arr[0];\r\n        this.setCurrentRawFrameValue(0);\r\n    }\r\n    this.trigger('segmentStart');\r\n};\r\nAnimationItem.prototype.setSegment = function (init,end) {\r\n    var pendingFrame = -1;\r\n    if(this.isPaused) {\r\n        if (this.currentRawFrame + this.firstFrame < init) {\r\n            pendingFrame = init;\r\n        } else if (this.currentRawFrame + this.firstFrame > end) {\r\n            pendingFrame = end - init - 0.01;\r\n        }\r\n    }\r\n\r\n    this.firstFrame = init;\r\n    this.totalFrames = end - init;\r\n    if(pendingFrame !== -1) {\r\n        this.goToAndStop(pendingFrame,true);\r\n    }\r\n}\r\n\r\nAnimationItem.prototype.playSegments = function (arr,forceFlag) {\r\n    if(typeof arr[0] === 'object'){\r\n        var i, len = arr.length;\r\n        for(i=0;i<len;i+=1){\r\n            this.segments.push(arr[i]);\r\n        }\r\n    }else{\r\n        this.segments.push(arr);\r\n    }\r\n    if(forceFlag){\r\n        this.adjustSegment(this.segments.shift());\r\n    }\r\n    if(this.isPaused){\r\n        this.play();\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.resetSegments = function (forceFlag) {\r\n    this.segments.length = 0;\r\n    this.segments.push([this.animationData.ip*this.frameRate,Math.floor(this.animationData.op - this.animationData.ip+this.animationData.ip*this.frameRate)]);\r\n    if(forceFlag){\r\n        this.adjustSegment(this.segments.shift());\r\n    }\r\n};\r\nAnimationItem.prototype.checkSegments = function(){\r\n    if(this.segments.length){\r\n        this.pendingSegment = true;\r\n    }\r\n}\r\n\r\nAnimationItem.prototype.remove = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    this.renderer.destroy();\r\n};\r\n\r\nAnimationItem.prototype.destroy = function (name) {\r\n    if((name && this.name != name) || (this.renderer && this.renderer.destroyed)){\r\n        return;\r\n    }\r\n    this.renderer.destroy();\r\n    this.trigger('destroy');\r\n    this._cbs = null;\r\n    this.onEnterFrame = this.onLoopComplete = this.onComplete = this.onSegmentStart = this.onDestroy = null;\r\n};\r\n\r\nAnimationItem.prototype.setCurrentRawFrameValue = function(value){\r\n    this.currentRawFrame = value;\r\n    //console.log(this.totalFrames);\r\n    if (this.currentRawFrame >= this.totalFrames) {\r\n        this.checkSegments();\r\n        if(this.loop === false){\r\n            this.currentRawFrame = this.totalFrames - 0.01;\r\n            this.gotoFrame();\r\n            this.pause();\r\n            this.trigger('complete');\r\n            return;\r\n        }else{\r\n            this.trigger('loopComplete');\r\n            this.playCount += 1;\r\n            if((this.loop !== true && this.playCount == this.loop) || this.pendingSegment){\r\n                this.currentRawFrame = this.totalFrames - 0.01;\r\n                this.gotoFrame();\r\n                this.pause();\r\n                this.trigger('complete');\r\n                return;\r\n            } else {\r\n                this.currentRawFrame = this.currentRawFrame % this.totalFrames;\r\n            }\r\n        }\r\n    } else if (this.currentRawFrame < 0) {\r\n        this.checkSegments();\r\n        this.playCount -= 1;\r\n        if(this.playCount < 0){\r\n            this.playCount = 0;\r\n        }\r\n        if(this.loop === false  || this.pendingSegment){\r\n            this.currentRawFrame = 0;\r\n            this.gotoFrame();\r\n            this.pause();\r\n            this.trigger('complete');\r\n            return;\r\n        }else{\r\n            this.trigger('loopComplete');\r\n            this.currentRawFrame = (this.totalFrames + this.currentRawFrame) % this.totalFrames;\r\n            this.gotoFrame();\r\n            return;\r\n        }\r\n    }\r\n\r\n    this.gotoFrame();\r\n};\r\n\r\nAnimationItem.prototype.setSpeed = function (val) {\r\n    this.playSpeed = val;\r\n    this.updaFrameModifier();\r\n};\r\n\r\nAnimationItem.prototype.setDirection = function (val) {\r\n    this.playDirection = val < 0 ? -1 : 1;\r\n    this.updaFrameModifier();\r\n};\r\n\r\nAnimationItem.prototype.updaFrameModifier = function () {\r\n    this.frameModifier = this.frameMult * this.playSpeed * this.playDirection;\r\n};\r\n\r\nAnimationItem.prototype.getPath = function () {\r\n    return this.path;\r\n};\r\n\r\nAnimationItem.prototype.getAssetsPath = function (assetData) {\r\n    var path = '';\r\n    if(this.assetsPath){\r\n        var imagePath = assetData.p;\r\n        if(imagePath.indexOf('images/') !== -1){\r\n            imagePath = imagePath.split('/')[1];\r\n        }\r\n        path = this.assetsPath + imagePath;\r\n    } else {\r\n        path = this.path;\r\n        path += assetData.u ? assetData.u : '';\r\n        path += assetData.p;\r\n    }\r\n    return path;\r\n};\r\n\r\nAnimationItem.prototype.getAssetData = function (id) {\r\n    var i = 0, len = this.assets.length;\r\n    while (i < len) {\r\n        if(id == this.assets[i].id){\r\n            return this.assets[i];\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.hide = function () {\r\n    this.renderer.hide();\r\n};\r\n\r\nAnimationItem.prototype.show = function () {\r\n    this.renderer.show();\r\n};\r\n\r\nAnimationItem.prototype.getAssets = function () {\r\n    return this.assets;\r\n};\r\n\r\nAnimationItem.prototype.trigger = function(name){\r\n    if(this._cbs && this._cbs[name]){\r\n        switch(name){\r\n            case 'enterFrame':\r\n                this.triggerEvent(name,new BMEnterFrameEvent(name,this.currentFrame,this.totalFrames,this.frameMult));\r\n                break;\r\n            case 'loopComplete':\r\n                this.triggerEvent(name,new BMCompleteLoopEvent(name,this.loop,this.playCount,this.frameMult));\r\n                break;\r\n            case 'complete':\r\n                this.triggerEvent(name,new BMCompleteEvent(name,this.frameMult));\r\n                break;\r\n            case 'segmentStart':\r\n                this.triggerEvent(name,new BMSegmentStartEvent(name,this.firstFrame,this.totalFrames));\r\n                break;\r\n            case 'destroy':\r\n                this.triggerEvent(name,new BMDestroyEvent(name,this));\r\n                break;\r\n            default:\r\n                this.triggerEvent(name);\r\n        }\r\n    }\r\n    if(name === 'enterFrame' && this.onEnterFrame){\r\n        this.onEnterFrame.call(this,new BMEnterFrameEvent(name,this.currentFrame,this.totalFrames,this.frameMult));\r\n    }\r\n    if(name === 'loopComplete' && this.onLoopComplete){\r\n        this.onLoopComplete.call(this,new BMCompleteLoopEvent(name,this.loop,this.playCount,this.frameMult));\r\n    }\r\n    if(name === 'complete' && this.onComplete){\r\n        this.onComplete.call(this,new BMCompleteEvent(name,this.frameMult));\r\n    }\r\n    if(name === 'segmentStart' && this.onSegmentStart){\r\n        this.onSegmentStart.call(this,new BMSegmentStartEvent(name,this.firstFrame,this.totalFrames));\r\n    }\r\n    if(name === 'destroy' && this.onDestroy){\r\n        this.onDestroy.call(this,new BMDestroyEvent(name,this));\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.addEventListener = _addEventListener;\r\nAnimationItem.prototype.removeEventListener = _removeEventListener;\r\nAnimationItem.prototype.triggerEvent = _triggerEvent;\r\n\r\n    var bodymovinjs = {};\r\n\r\n    function setLocationHref (href) {\r\n        locationHref = href;\r\n    }\r\n    function play(animation){\r\n        animationManager.play(animation);\r\n    }\r\n\r\n    function pause(animation) {\r\n        animationManager.pause(animation);\r\n    }\r\n\r\n    function togglePause(animation) {\r\n        animationManager.togglePause(animation);\r\n    }\r\n\r\n    function setSpeed(value, animation) {\r\n        animationManager.setSpeed(value, animation);\r\n    }\r\n\r\n    function setDirection(value, animation) {\r\n        animationManager.setDirection(value, animation);\r\n    }\r\n\r\n    function stop(animation) {\r\n        animationManager.stop(animation);\r\n    }\r\n\r\n    function moveFrame(value) {\r\n        animationManager.moveFrame(value);\r\n    }\r\n\r\n    function searchAnimations() {\r\n        if (standalone === true) {\r\n            animationManager.searchAnimations(animationData, standalone, renderer);\r\n        } else {\r\n            animationManager.searchAnimations();\r\n        }\r\n    }\r\n\r\n    function registerAnimation(elem) {\r\n        return animationManager.registerAnimation(elem);\r\n    }\r\n\r\n    function resize() {\r\n        animationManager.resize();\r\n    }\r\n\r\n    function start() {\r\n        animationManager.start();\r\n    }\r\n\r\n    function goToAndStop(val, isFrame, animation) {\r\n        animationManager.goToAndStop(val, isFrame, animation);\r\n    }\r\n\r\n    function setSubframeRendering(flag) {\r\n        subframeEnabled = flag;\r\n    }\r\n\r\n    function loadAnimation(params) {\r\n        if (standalone === true) {\r\n            params.animationData = JSON.parse(animationData);\r\n        }\r\n        return animationManager.loadAnimation(params);\r\n    }\r\n\r\n    function destroy(animation) {\r\n        return animationManager.destroy(animation);\r\n    }\r\n\r\n    function setQuality(value) {\r\n        if (typeof value === 'string') {\r\n            switch (value) {\r\n                case 'high':\r\n                    defaultCurveSegments = 200;\r\n                    break;\r\n                case 'medium':\r\n                    defaultCurveSegments = 50;\r\n                    break;\r\n                case 'low':\r\n                    defaultCurveSegments = 10;\r\n                    break;\r\n            }\r\n        } else if (!isNaN(value) && value > 1) {\r\n            defaultCurveSegments = value;\r\n        }\r\n        if (defaultCurveSegments >= 50) {\r\n            roundValues(false);\r\n        } else {\r\n            roundValues(true);\r\n        }\r\n    }\r\n\r\n    function inBrowser() {\r\n        return typeof navigator !== 'undefined';\r\n    }\r\n\r\n    function installPlugin(type, plugin) {\r\n        if (type === 'expressions') {\r\n            expressionsPlugin = plugin;\r\n        }\r\n    }\r\n\r\n    function getFactory(name) {\r\n        switch (name) {\r\n            case \"propertyFactory\":\r\n                return PropertyFactory;\r\n            case \"shapePropertyFactory\":\r\n                return ShapePropertyFactory;\r\n            case \"matrix\":\r\n                return Matrix;\r\n        }\r\n    }\r\n    bodymovinjs.play = play;\r\n    bodymovinjs.pause = pause;\r\n    bodymovinjs.setLocationHref = setLocationHref;\r\n    bodymovinjs.togglePause = togglePause;\r\n    bodymovinjs.setSpeed = setSpeed;\r\n    bodymovinjs.setDirection = setDirection;\r\n    bodymovinjs.stop = stop;\r\n    bodymovinjs.moveFrame = moveFrame;\r\n    bodymovinjs.searchAnimations = searchAnimations;\r\n    bodymovinjs.registerAnimation = registerAnimation;\r\n    bodymovinjs.loadAnimation = loadAnimation;\r\n    bodymovinjs.setSubframeRendering = setSubframeRendering;\r\n    bodymovinjs.resize = resize;\r\n    bodymovinjs.start = start;\r\n    bodymovinjs.goToAndStop = goToAndStop;\r\n    bodymovinjs.destroy = destroy;\r\n    bodymovinjs.setQuality = setQuality;\r\n    bodymovinjs.inBrowser = inBrowser;\r\n    bodymovinjs.installPlugin = installPlugin;\r\n    bodymovinjs.__getFactory = getFactory;\r\n    bodymovinjs.version = '4.13.0';\r\n\r\n    function checkReady() {\r\n        if (document.readyState === \"complete\") {\r\n            clearInterval(readyStateCheckInterval);\r\n            searchAnimations();\r\n        }\r\n    }\r\n\r\n    function getQueryVariable(variable) {\r\n        var vars = queryString.split('&');\r\n        for (var i = 0; i < vars.length; i++) {\r\n            var pair = vars[i].split('=');\r\n            if (decodeURIComponent(pair[0]) == variable) {\r\n                return decodeURIComponent(pair[1]);\r\n            }\r\n        }\r\n    }\r\n    var standalone = '__[STANDALONE]__';\r\n    var animationData = '__[ANIMATIONDATA]__';\r\n    var renderer = '';\r\n    if (standalone) {\r\n        var scripts = document.getElementsByTagName('script');\r\n        var index = scripts.length - 1;\r\n        var myScript = scripts[index] || {\r\n            src: ''\r\n        };\r\n        var queryString = myScript.src.replace(/^[^\\?]+\\??/, '');\r\n        renderer = getQueryVariable('renderer');\r\n    }\r\n    var readyStateCheckInterval = setInterval(checkReady, 100);\r\n    return bodymovinjs;\r\n}));\n\n/***/ }),\n\n/***/ 2:\n/***/ (function(module, exports) {\n\n/* globals __VUE_SSR_CONTEXT__ */\n\n// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// docs/js/vendor.bcd91250bccff8dfc4e5.js","(function(root, factory) {\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(function() {\r\n            return factory(root);\r\n        });\r\n    } else if (typeof module === \"object\" && module.exports) {\r\n        module.exports = factory(root);\r\n    } else {\r\n        root.bodymovin = factory(root);\r\n    }\r\n}((window || {}), function(window) {\r\n    var svgNS = \"http://www.w3.org/2000/svg\";\r\n\r\nvar locationHref = '';\r\n\nvar subframeEnabled = true;\r\nvar expressionsPlugin;\r\nvar isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\r\nvar cachedColors = {};\r\nvar bm_rounder = Math.round;\r\nvar bm_rnd;\r\nvar bm_pow = Math.pow;\r\nvar bm_sqrt = Math.sqrt;\r\nvar bm_abs = Math.abs;\r\nvar bm_floor = Math.floor;\r\nvar bm_max = Math.max;\r\nvar bm_min = Math.min;\r\nvar blitter = 10;\r\n\r\nvar BMMath = {};\r\n(function(){\r\n    var propertyNames = Object.getOwnPropertyNames(Math);\r\n    var i, len = propertyNames.length;\r\n    for(i=0;i<len;i+=1){\r\n        BMMath[propertyNames[i]] = Math[propertyNames[i]];\r\n    }\r\n}());\r\n\r\nfunction ProjectInterface(){return {}};\r\n\r\nBMMath.random = Math.random;\r\nBMMath.abs = function(val){\r\n    var tOfVal = typeof val;\r\n    if(tOfVal === 'object' && val.length){\r\n        var absArr = Array.apply(null,{length:val.length});\r\n        var i, len = val.length;\r\n        for(i=0;i<len;i+=1){\r\n            absArr[i] = Math.abs(val[i]);\r\n        }\r\n        return absArr;\r\n    }\r\n    return Math.abs(val);\r\n\r\n}\r\nvar defaultCurveSegments = 150;\r\nvar degToRads = Math.PI/180;\r\nvar roundCorner = 0.5519;\r\n\r\nfunction roundValues(flag){\r\n    if(flag){\r\n        bm_rnd = Math.round;\r\n    }else{\r\n        bm_rnd = function(val){\r\n            return val;\r\n        };\r\n    }\r\n}\r\nroundValues(false);\r\n\r\nfunction roundTo2Decimals(val){\r\n    return Math.round(val*10000)/10000;\r\n}\r\n\r\nfunction roundTo3Decimals(val){\r\n    return Math.round(val*100)/100;\r\n}\r\n\r\nfunction styleDiv(element){\r\n    element.style.position = 'absolute';\r\n    element.style.top = 0;\r\n    element.style.left = 0;\r\n    element.style.display = 'block';\r\n    element.style.transformOrigin = element.style.webkitTransformOrigin = '0 0';\r\n    element.style.backfaceVisibility  = element.style.webkitBackfaceVisibility = 'visible';\r\n    element.style.transformStyle = element.style.webkitTransformStyle = element.style.mozTransformStyle = \"preserve-3d\";\r\n}\r\n\r\nfunction styleUnselectableDiv(element){\r\n    element.style.userSelect = 'none';\r\n    element.style.MozUserSelect = 'none';\r\n    element.style.webkitUserSelect = 'none';\r\n    element.style.oUserSelect = 'none';\r\n\r\n}\r\n\r\nfunction BMEnterFrameEvent(n,c,t,d){\r\n    this.type = n;\r\n    this.currentTime = c;\r\n    this.totalTime = t;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMCompleteEvent(n,d){\r\n    this.type = n;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMCompleteLoopEvent(n,c,t,d){\r\n    this.type = n;\r\n    this.currentLoop = c;\r\n    this.totalLoops = t;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMSegmentStartEvent(n,f,t){\r\n    this.type = n;\r\n    this.firstFrame = f;\r\n    this.totalFrames = t;\r\n}\r\n\r\nfunction BMDestroyEvent(n,t){\r\n    this.type = n;\r\n    this.target = t;\r\n}\r\n\r\nfunction _addEventListener(eventName, callback){\r\n\r\n    if (!this._cbs[eventName]){\r\n        this._cbs[eventName] = [];\r\n    }\r\n    this._cbs[eventName].push(callback);\r\n\r\n\treturn function() {\r\n\t\tthis.removeEventListener(eventName, callback);\r\n\t}.bind(this);\r\n}\r\n\r\nfunction _removeEventListener(eventName,callback){\r\n\r\n    if (!callback){\r\n        this._cbs[eventName] = null;\r\n    }else if(this._cbs[eventName]){\r\n        var i = 0, len = this._cbs[eventName].length;\r\n        while(i<len){\r\n            if(this._cbs[eventName][i] === callback){\r\n                this._cbs[eventName].splice(i,1);\r\n                i -=1;\r\n                len -= 1;\r\n            }\r\n            i += 1;\r\n        }\r\n        if(!this._cbs[eventName].length){\r\n            this._cbs[eventName] = null;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nfunction _triggerEvent(eventName, args){\r\n    if (this._cbs[eventName]) {\r\n        var len = this._cbs[eventName].length;\r\n        for (var i = 0; i < len; i++){\r\n            this._cbs[eventName][i](args);\r\n        }\r\n    }\r\n}\r\n\r\nfunction randomString(length, chars){\r\n    if(chars === undefined){\r\n        chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890';\r\n    }\r\n    var i;\r\n    var result = '';\r\n    for (i = length; i > 0; --i) result += chars[Math.round(Math.random() * (chars.length - 1))];\r\n    return result;\r\n}\r\n\r\nfunction HSVtoRGB(h, s, v) {\r\n    var r, g, b, i, f, p, q, t;\r\n    if (arguments.length === 1) {\r\n        s = h.s, v = h.v, h = h.h;\r\n    }\r\n    i = Math.floor(h * 6);\r\n    f = h * 6 - i;\r\n    p = v * (1 - s);\r\n    q = v * (1 - f * s);\r\n    t = v * (1 - (1 - f) * s);\r\n    switch (i % 6) {\r\n        case 0: r = v, g = t, b = p; break;\r\n        case 1: r = q, g = v, b = p; break;\r\n        case 2: r = p, g = v, b = t; break;\r\n        case 3: r = p, g = q, b = v; break;\r\n        case 4: r = t, g = p, b = v; break;\r\n        case 5: r = v, g = p, b = q; break;\r\n    }\r\n    return [ r,\r\n        g,\r\n         b ];\r\n}\r\n\r\nfunction RGBtoHSV(r, g, b) {\r\n    if (arguments.length === 1) {\r\n        g = r.g, b = r.b, r = r.r;\r\n    }\r\n    var max = Math.max(r, g, b), min = Math.min(r, g, b),\r\n        d = max - min,\r\n        h,\r\n        s = (max === 0 ? 0 : d / max),\r\n        v = max / 255;\r\n\r\n    switch (max) {\r\n        case min: h = 0; break;\r\n        case r: h = (g - b) + d * (g < b ? 6: 0); h /= 6 * d; break;\r\n        case g: h = (b - r) + d * 2; h /= 6 * d; break;\r\n        case b: h = (r - g) + d * 4; h /= 6 * d; break;\r\n    }\r\n\r\n    return [\r\n         h,\r\n         s,\r\n         v\r\n    ];\r\n}\r\n\r\nfunction addSaturationToRGB(color,offset){\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[1] += offset;\r\n    if (hsv[1] > 1) {\r\n        hsv[1] = 1;\r\n    }\r\n    else if (hsv[1] <= 0) {\r\n        hsv[1] = 0;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nfunction addBrightnessToRGB(color,offset){\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[2] += offset;\r\n    if (hsv[2] > 1) {\r\n        hsv[2] = 1;\r\n    }\r\n    else if (hsv[2] < 0) {\r\n        hsv[2] = 0;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nfunction addHueToRGB(color,offset) {\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[0] += offset/360;\r\n    if (hsv[0] > 1) {\r\n        hsv[0] -= 1;\r\n    }\r\n    else if (hsv[0] < 0) {\r\n        hsv[0] += 1;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nfunction componentToHex(c) {\r\n    var hex = c.toString(16);\r\n    return hex.length == 1 ? '0' + hex : hex;\r\n}\r\n\r\nvar rgbToHex = (function(){\r\n    var colorMap = [];\r\n    var i;\r\n    var hex;\r\n    for(i=0;i<256;i+=1){\r\n        hex = i.toString(16);\r\n        colorMap[i] = hex.length == 1 ? '0' + hex : hex;\r\n    }\r\n\r\n    return function(r, g, b) {\r\n        if(r<0){\r\n            r = 0;\r\n        }\r\n        if(g<0){\r\n            g = 0;\r\n        }\r\n        if(b<0){\r\n            b = 0;\r\n        }\r\n        return '#' + colorMap[r] + colorMap[g] + colorMap[b];\r\n    };\r\n}());\r\n\r\nfunction fillToRgba(hex,alpha){\r\n    if(!cachedColors[hex]){\r\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n        cachedColors[hex] = parseInt(result[1], 16)+','+parseInt(result[2], 16)+','+parseInt(result[3], 16);\r\n    }\r\n    return 'rgba('+cachedColors[hex]+','+alpha+')';\r\n}\r\n\r\nvar fillColorToString = (function(){\r\n\r\n    var colorMap = [];\r\n    return function(colorArr,alpha){\r\n        if(alpha !== undefined){\r\n            colorArr[3] = alpha;\r\n        }\r\n        if(!colorMap[colorArr[0]]){\r\n            colorMap[colorArr[0]] = {};\r\n        }\r\n        if(!colorMap[colorArr[0]][colorArr[1]]){\r\n            colorMap[colorArr[0]][colorArr[1]] = {};\r\n        }\r\n        if(!colorMap[colorArr[0]][colorArr[1]][colorArr[2]]){\r\n            colorMap[colorArr[0]][colorArr[1]][colorArr[2]] = {};\r\n        }\r\n        if(!colorMap[colorArr[0]][colorArr[1]][colorArr[2]][colorArr[3]]){\r\n            colorMap[colorArr[0]][colorArr[1]][colorArr[2]][colorArr[3]] = 'rgba(' + colorArr.join(',')+')';\r\n        }\r\n        return colorMap[colorArr[0]][colorArr[1]][colorArr[2]][colorArr[3]];\r\n    };\r\n}());\r\n\r\nfunction RenderedFrame(tr,o) {\r\n    this.tr = tr;\r\n    this.o = o;\r\n}\r\n\r\nfunction iterateDynamicProperties(num){\r\n    var i, len = this.dynamicProperties;\r\n    for(i=0;i<len;i+=1){\r\n        this.dynamicProperties[i].getValue(num);\r\n    }\r\n}\r\n\r\nfunction reversePath(paths){\r\n    var newI = [], newO = [], newV = [];\r\n    var i, len, newPaths = {};\r\n    var init = 0;\r\n    if (paths.c) {\r\n        newI[0] = paths.o[0];\r\n        newO[0] = paths.i[0];\r\n        newV[0] = paths.v[0];\r\n        init = 1;\r\n    }\r\n    len = paths.i.length;\r\n    var cnt = len - 1;\r\n\r\n    for (i = init; i < len; i += 1) {\r\n        newI.push(paths.o[cnt]);\r\n        newO.push(paths.i[cnt]);\r\n        newV.push(paths.v[cnt]);\r\n        cnt -= 1;\r\n    }\r\n\r\n    newPaths.i = newI;\r\n    newPaths.o = newO;\r\n    newPaths.v = newV;\r\n\r\n    return newPaths;\r\n}\n/*!\r\n Transformation Matrix v2.0\r\n (c) Epistemex 2014-2015\r\n www.epistemex.com\r\n By Ken Fyrstenberg\r\n Contributions by leeoniya.\r\n License: MIT, header required.\r\n */\r\n\r\n/**\r\n * 2D transformation matrix object initialized with identity matrix.\r\n *\r\n * The matrix can synchronize a canvas context by supplying the context\r\n * as an argument, or later apply current absolute transform to an\r\n * existing context.\r\n *\r\n * All values are handled as floating point values.\r\n *\r\n * @param {CanvasRenderingContext2D} [context] - Optional context to sync with Matrix\r\n * @prop {number} a - scale x\r\n * @prop {number} b - shear y\r\n * @prop {number} c - shear x\r\n * @prop {number} d - scale y\r\n * @prop {number} e - translate x\r\n * @prop {number} f - translate y\r\n * @prop {CanvasRenderingContext2D|null} [context=null] - set or get current canvas context\r\n * @constructor\r\n */\r\n\r\nvar Matrix = (function(){\r\n\r\n    function reset(){\r\n        this.props[0] = 1;\r\n        this.props[1] = 0;\r\n        this.props[2] = 0;\r\n        this.props[3] = 0;\r\n        this.props[4] = 0;\r\n        this.props[5] = 1;\r\n        this.props[6] = 0;\r\n        this.props[7] = 0;\r\n        this.props[8] = 0;\r\n        this.props[9] = 0;\r\n        this.props[10] = 1;\r\n        this.props[11] = 0;\r\n        this.props[12] = 0;\r\n        this.props[13] = 0;\r\n        this.props[14] = 0;\r\n        this.props[15] = 1;\r\n        return this;\r\n    }\r\n\r\n    function rotate(angle) {\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = Math.cos(angle);\r\n        var mSin = Math.sin(angle);\r\n        return this._t(mCos, -mSin,  0, 0\r\n            , mSin,  mCos, 0, 0\r\n            , 0,  0,  1, 0\r\n            , 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateX(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = Math.cos(angle);\r\n        var mSin = Math.sin(angle);\r\n        return this._t(1, 0, 0, 0\r\n            , 0, mCos, -mSin, 0\r\n            , 0, mSin,  mCos, 0\r\n            , 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateY(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = Math.cos(angle);\r\n        var mSin = Math.sin(angle);\r\n        return this._t(mCos,  0,  mSin, 0\r\n            , 0, 1, 0, 0\r\n            , -mSin,  0,  mCos, 0\r\n            , 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateZ(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = Math.cos(angle);\r\n        var mSin = Math.sin(angle);\r\n        return this._t(mCos, -mSin,  0, 0\r\n            , mSin,  mCos, 0, 0\r\n            , 0,  0,  1, 0\r\n            , 0, 0, 0, 1);\r\n    }\r\n\r\n    function shear(sx,sy){\r\n        return this._t(1, sy, sx, 1, 0, 0);\r\n    }\r\n\r\n    function skew(ax, ay){\r\n        return this.shear(Math.tan(ax), Math.tan(ay));\r\n    }\r\n\r\n    function skewFromAxis(ax, angle){\r\n        var mCos = Math.cos(angle);\r\n        var mSin = Math.sin(angle);\r\n        return this._t(mCos, mSin,  0, 0\r\n            , -mSin,  mCos, 0, 0\r\n            , 0,  0,  1, 0\r\n            , 0, 0, 0, 1)\r\n            ._t(1, 0,  0, 0\r\n            , Math.tan(ax),  1, 0, 0\r\n            , 0,  0,  1, 0\r\n            , 0, 0, 0, 1)\r\n            ._t(mCos, -mSin,  0, 0\r\n            , mSin,  mCos, 0, 0\r\n            , 0,  0,  1, 0\r\n            , 0, 0, 0, 1);\r\n        //return this._t(mCos, mSin, -mSin, mCos, 0, 0)._t(1, 0, Math.tan(ax), 1, 0, 0)._t(mCos, -mSin, mSin, mCos, 0, 0);\r\n    }\r\n\r\n    function scale(sx, sy, sz) {\r\n        sz = isNaN(sz) ? 1 : sz;\r\n        if(sx == 1 && sy == 1 && sz == 1){\r\n            return this;\r\n        }\r\n        return this._t(sx, 0, 0, 0, 0, sy, 0, 0, 0, 0, sz, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function setTransform(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {\r\n        this.props[0] = a;\r\n        this.props[1] = b;\r\n        this.props[2] = c;\r\n        this.props[3] = d;\r\n        this.props[4] = e;\r\n        this.props[5] = f;\r\n        this.props[6] = g;\r\n        this.props[7] = h;\r\n        this.props[8] = i;\r\n        this.props[9] = j;\r\n        this.props[10] = k;\r\n        this.props[11] = l;\r\n        this.props[12] = m;\r\n        this.props[13] = n;\r\n        this.props[14] = o;\r\n        this.props[15] = p;\r\n        return this;\r\n    }\r\n\r\n    function translate(tx, ty, tz) {\r\n        tz = tz || 0;\r\n        if(tx !== 0 || ty !== 0 || tz !== 0){\r\n            return this._t(1,0,0,0,0,1,0,0,0,0,1,0,tx,ty,tz,1);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function transform(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2, m2, n2, o2, p2) {\r\n\r\n        if(a2 === 1 && b2 === 0 && c2 === 0 && d2 === 0 && e2 === 0 && f2 === 1 && g2 === 0 && h2 === 0 && i2 === 0 && j2 === 0 && k2 === 1 && l2 === 0){\r\n            if(m2 !== 0 || n2 !== 0 || o2 !== 0){\r\n\r\n                this.props[12] = this.props[12] * a2 + this.props[13] * e2 + this.props[14] * i2 + this.props[15] * m2 ;\r\n                this.props[13] = this.props[12] * b2 + this.props[13] * f2 + this.props[14] * j2 + this.props[15] * n2 ;\r\n                this.props[14] = this.props[12] * c2 + this.props[13] * g2 + this.props[14] * k2 + this.props[15] * o2 ;\r\n                this.props[15] = this.props[12] * d2 + this.props[13] * h2 + this.props[14] * l2 + this.props[15] * p2 ;\r\n            }\r\n            this._identityCalculated = false;\r\n            return this;\r\n        }\r\n\r\n        var a1 = this.props[0];\r\n        var b1 = this.props[1];\r\n        var c1 = this.props[2];\r\n        var d1 = this.props[3];\r\n        var e1 = this.props[4];\r\n        var f1 = this.props[5];\r\n        var g1 = this.props[6];\r\n        var h1 = this.props[7];\r\n        var i1 = this.props[8];\r\n        var j1 = this.props[9];\r\n        var k1 = this.props[10];\r\n        var l1 = this.props[11];\r\n        var m1 = this.props[12];\r\n        var n1 = this.props[13];\r\n        var o1 = this.props[14];\r\n        var p1 = this.props[15];\r\n\r\n        /* matrix order (canvas compatible):\r\n         * ace\r\n         * bdf\r\n         * 001\r\n         */\r\n        this.props[0] = a1 * a2 + b1 * e2 + c1 * i2 + d1 * m2;\r\n        this.props[1] = a1 * b2 + b1 * f2 + c1 * j2 + d1 * n2 ;\r\n        this.props[2] = a1 * c2 + b1 * g2 + c1 * k2 + d1 * o2 ;\r\n        this.props[3] = a1 * d2 + b1 * h2 + c1 * l2 + d1 * p2 ;\r\n\r\n        this.props[4] = e1 * a2 + f1 * e2 + g1 * i2 + h1 * m2 ;\r\n        this.props[5] = e1 * b2 + f1 * f2 + g1 * j2 + h1 * n2 ;\r\n        this.props[6] = e1 * c2 + f1 * g2 + g1 * k2 + h1 * o2 ;\r\n        this.props[7] = e1 * d2 + f1 * h2 + g1 * l2 + h1 * p2 ;\r\n\r\n        this.props[8] = i1 * a2 + j1 * e2 + k1 * i2 + l1 * m2 ;\r\n        this.props[9] = i1 * b2 + j1 * f2 + k1 * j2 + l1 * n2 ;\r\n        this.props[10] = i1 * c2 + j1 * g2 + k1 * k2 + l1 * o2 ;\r\n        this.props[11] = i1 * d2 + j1 * h2 + k1 * l2 + l1 * p2 ;\r\n\r\n        this.props[12] = m1 * a2 + n1 * e2 + o1 * i2 + p1 * m2 ;\r\n        this.props[13] = m1 * b2 + n1 * f2 + o1 * j2 + p1 * n2 ;\r\n        this.props[14] = m1 * c2 + n1 * g2 + o1 * k2 + p1 * o2 ;\r\n        this.props[15] = m1 * d2 + n1 * h2 + o1 * l2 + p1 * p2 ;\r\n\r\n        this._identityCalculated = false;\r\n        return this;\r\n    }\r\n\r\n    function isIdentity() {\r\n        if(!this._identityCalculated){\r\n            this._identity = !(this.props[0] !== 1 || this.props[1] !== 0 || this.props[2] !== 0 || this.props[3] !== 0\r\n                || this.props[4] !== 0 || this.props[5] !== 1 || this.props[6] !== 0 || this.props[7] !== 0\r\n                || this.props[8] !== 0 || this.props[9] !== 0 || this.props[10] !== 1 || this.props[11] !== 0\r\n                || this.props[12] !== 0 || this.props[13] !== 0 || this.props[14] !== 0 || this.props[15] !== 1);\r\n            this._identityCalculated = true;\r\n        }\r\n        return this._identity;\r\n    }\r\n\r\n    function clone(matr){\r\n        var i;\r\n        for(i=0;i<16;i+=1){\r\n            matr.props[i] = this.props[i];\r\n        }\r\n    }\r\n\r\n    function cloneFromProps(props){\r\n        var i;\r\n        for(i=0;i<16;i+=1){\r\n            this.props[i] = props[i];\r\n        }\r\n    }\r\n\r\n    function applyToPoint(x, y, z) {\r\n\r\n        return {\r\n            x: x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],\r\n            y: x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],\r\n            z: x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]\r\n        };\r\n        /*return {\r\n         x: x * me.a + y * me.c + me.e,\r\n         y: x * me.b + y * me.d + me.f\r\n         };*/\r\n    }\r\n    function applyToX(x, y, z) {\r\n        return x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12];\r\n    }\r\n    function applyToY(x, y, z) {\r\n        return x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13];\r\n    }\r\n    function applyToZ(x, y, z) {\r\n        return x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14];\r\n    }\r\n\r\n    function inversePoint(pt) {\r\n        var determinant = this.props[0] * this.props[5] - this.props[1] * this.props[4];\r\n        var a = this.props[5]/determinant;\r\n        var b = - this.props[1]/determinant;\r\n        var c = - this.props[4]/determinant;\r\n        var d = this.props[0]/determinant;\r\n        var e = (this.props[4] * this.props[13] - this.props[5] * this.props[12])/determinant;\r\n        var f = - (this.props[0] * this.props[13] - this.props[1] * this.props[12])/determinant;\r\n        return [pt[0] * a + pt[1] * c + e, pt[0] * b + pt[1] * d + f, 0];\r\n    }\r\n\r\n    function inversePoints(pts){\r\n        var i, len = pts.length, retPts = [];\r\n        for(i=0;i<len;i+=1){\r\n            retPts[i] = inversePoint(pts[i]);\r\n        }\r\n        return retPts;\r\n    }\r\n\r\n    function applyToPointArray(x,y,z,dimensions){\r\n        if(dimensions && dimensions === 2) {\r\n            var arr = point_pool.newPoint();\r\n            arr[0] = x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12]; \r\n            arr[1] = x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13]; \r\n            return arr;    \r\n        }\r\n        return [x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]];\r\n    }\r\n    function applyToPointStringified(x, y) {\r\n        if(this.isIdentity()) {\r\n            return x + ',' + y;\r\n        }\r\n        return (bm_rnd(x * this.props[0] + y * this.props[4] + this.props[12]))+','+(bm_rnd(x * this.props[1] + y * this.props[5] + this.props[13]));\r\n    }\r\n\r\n    function toArray() {\r\n        return [this.props[0],this.props[1],this.props[2],this.props[3],this.props[4],this.props[5],this.props[6],this.props[7],this.props[8],this.props[9],this.props[10],this.props[11],this.props[12],this.props[13],this.props[14],this.props[15]];\r\n    }\r\n\r\n    function toCSS() {\r\n        if(isSafari){\r\n            return \"matrix3d(\" + roundTo2Decimals(this.props[0]) + ',' + roundTo2Decimals(this.props[1]) + ',' + roundTo2Decimals(this.props[2]) + ',' + roundTo2Decimals(this.props[3]) + ',' + roundTo2Decimals(this.props[4]) + ',' + roundTo2Decimals(this.props[5]) + ',' + roundTo2Decimals(this.props[6]) + ',' + roundTo2Decimals(this.props[7]) + ',' + roundTo2Decimals(this.props[8]) + ',' + roundTo2Decimals(this.props[9]) + ',' + roundTo2Decimals(this.props[10]) + ',' + roundTo2Decimals(this.props[11]) + ',' + roundTo2Decimals(this.props[12]) + ',' + roundTo2Decimals(this.props[13]) + ',' + roundTo2Decimals(this.props[14]) + ',' + roundTo2Decimals(this.props[15]) + ')';\r\n        } else {\r\n            this.cssParts[1] = this.props.join(',');\r\n            return this.cssParts.join('');\r\n        }\r\n    }\r\n\r\n    function to2dCSS() {\r\n        return \"matrix(\" + roundTo2Decimals(this.props[0]) + ',' + roundTo2Decimals(this.props[1]) + ',' + roundTo2Decimals(this.props[4]) + ',' + roundTo2Decimals(this.props[5]) + ',' + roundTo2Decimals(this.props[12]) + ',' + roundTo2Decimals(this.props[13]) + \")\";\r\n    }\r\n\r\n    function toString() {\r\n        return \"\" + this.toArray();\r\n    }\r\n\r\n    return function(){\r\n        this.reset = reset;\r\n        this.rotate = rotate;\r\n        this.rotateX = rotateX;\r\n        this.rotateY = rotateY;\r\n        this.rotateZ = rotateZ;\r\n        this.skew = skew;\r\n        this.skewFromAxis = skewFromAxis;\r\n        this.shear = shear;\r\n        this.scale = scale;\r\n        this.setTransform = setTransform;\r\n        this.translate = translate;\r\n        this.transform = transform;\r\n        this.applyToPoint = applyToPoint;\r\n        this.applyToX = applyToX;\r\n        this.applyToY = applyToY;\r\n        this.applyToZ = applyToZ;\r\n        this.applyToPointArray = applyToPointArray;\r\n        this.applyToPointStringified = applyToPointStringified;\r\n        this.toArray = toArray;\r\n        this.toCSS = toCSS;\r\n        this.to2dCSS = to2dCSS;\r\n        this.toString = toString;\r\n        this.clone = clone;\r\n        this.cloneFromProps = cloneFromProps;\r\n        this.inversePoints = inversePoints;\r\n        this.inversePoint = inversePoint;\r\n        this._t = this.transform;\r\n        this.isIdentity = isIdentity;\r\n        this._identity = true;\r\n        this._identityCalculated = false;\r\n\r\n        this.props = [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];\r\n\r\n        this.cssParts = ['matrix3d(','',')'];\r\n    }\r\n}());\r\n\r\nfunction Matrix() {\r\n\r\n\r\n}\r\n\n/*\r\n Copyright 2014 David Bau.\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining\r\n a copy of this software and associated documentation files (the\r\n \"Software\"), to deal in the Software without restriction, including\r\n without limitation the rights to use, copy, modify, merge, publish,\r\n distribute, sublicense, and/or sell copies of the Software, and to\r\n permit persons to whom the Software is furnished to do so, subject to\r\n the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be\r\n included in all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\n IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\n CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\n TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n */\r\n\r\n(function (pool, math) {\r\n//\r\n// The following constants are related to IEEE 754 limits.\r\n//\r\n    var global = this,\r\n        width = 256,        // each RC4 output is 0 <= x < 256\r\n        chunks = 6,         // at least six RC4 outputs for each double\r\n        digits = 52,        // there are 52 significant digits in a double\r\n        rngname = 'random', // rngname: name for Math.random and Math.seedrandom\r\n        startdenom = math.pow(width, chunks),\r\n        significance = math.pow(2, digits),\r\n        overflow = significance * 2,\r\n        mask = width - 1,\r\n        nodecrypto;         // node.js crypto module, initialized at the bottom.\r\n\r\n//\r\n// seedrandom()\r\n// This is the seedrandom function described above.\r\n//\r\n    function seedrandom(seed, options, callback) {\r\n        var key = [];\r\n        options = (options == true) ? { entropy: true } : (options || {});\r\n\r\n        // Flatten the seed string or build one from local entropy if needed.\r\n        var shortseed = mixkey(flatten(\r\n            options.entropy ? [seed, tostring(pool)] :\r\n                (seed == null) ? autoseed() : seed, 3), key);\r\n\r\n        // Use the seed to initialize an ARC4 generator.\r\n        var arc4 = new ARC4(key);\r\n\r\n        // This function returns a random double in [0, 1) that contains\r\n        // randomness in every bit of the mantissa of the IEEE 754 value.\r\n        var prng = function() {\r\n            var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\r\n                d = startdenom,                 //   and denominator d = 2 ^ 48.\r\n                x = 0;                          //   and no 'extra last byte'.\r\n            while (n < significance) {          // Fill up all significant digits by\r\n                n = (n + x) * width;              //   shifting numerator and\r\n                d *= width;                       //   denominator and generating a\r\n                x = arc4.g(1);                    //   new least-significant-byte.\r\n            }\r\n            while (n >= overflow) {             // To avoid rounding up, before adding\r\n                n /= 2;                           //   last byte, shift everything\r\n                d /= 2;                           //   right using integer math until\r\n                x >>>= 1;                         //   we have exactly the desired bits.\r\n            }\r\n            return (n + x) / d;                 // Form the number within [0, 1).\r\n        };\r\n\r\n        prng.int32 = function() { return arc4.g(4) | 0; }\r\n        prng.quick = function() { return arc4.g(4) / 0x100000000; }\r\n        prng.double = prng;\r\n\r\n        // Mix the randomness into accumulated entropy.\r\n        mixkey(tostring(arc4.S), pool);\r\n\r\n        // Calling convention: what to return as a function of prng, seed, is_math.\r\n        return (options.pass || callback ||\r\n        function(prng, seed, is_math_call, state) {\r\n            if (state) {\r\n                // Load the arc4 state from the given state if it has an S array.\r\n                if (state.S) { copy(state, arc4); }\r\n                // Only provide the .state method if requested via options.state.\r\n                prng.state = function() { return copy(arc4, {}); }\r\n            }\r\n\r\n            // If called as a method of Math (Math.seedrandom()), mutate\r\n            // Math.random because that is how seedrandom.js has worked since v1.0.\r\n            if (is_math_call) { math[rngname] = prng; return seed; }\r\n\r\n            // Otherwise, it is a newer calling convention, so return the\r\n            // prng directly.\r\n            else return prng;\r\n        })(\r\n            prng,\r\n            shortseed,\r\n            'global' in options ? options.global : (this == math),\r\n            options.state);\r\n    }\r\n    math['seed' + rngname] = seedrandom;\r\n\r\n//\r\n// ARC4\r\n//\r\n// An ARC4 implementation.  The constructor takes a key in the form of\r\n// an array of at most (width) integers that should be 0 <= x < (width).\r\n//\r\n// The g(count) method returns a pseudorandom integer that concatenates\r\n// the next (count) outputs from ARC4.  Its return value is a number x\r\n// that is in the range 0 <= x < (width ^ count).\r\n//\r\n    function ARC4(key) {\r\n        var t, keylen = key.length,\r\n            me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\r\n\r\n        // The empty key [] is treated as [0].\r\n        if (!keylen) { key = [keylen++]; }\r\n\r\n        // Set up S using the standard key scheduling algorithm.\r\n        while (i < width) {\r\n            s[i] = i++;\r\n        }\r\n        for (i = 0; i < width; i++) {\r\n            s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\r\n            s[j] = t;\r\n        }\r\n\r\n        // The \"g\" method returns the next (count) outputs as one number.\r\n        (me.g = function(count) {\r\n            // Using instance members instead of closure state nearly doubles speed.\r\n            var t, r = 0,\r\n                i = me.i, j = me.j, s = me.S;\r\n            while (count--) {\r\n                t = s[i = mask & (i + 1)];\r\n                r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\r\n            }\r\n            me.i = i; me.j = j;\r\n            return r;\r\n            // For robust unpredictability, the function call below automatically\r\n            // discards an initial batch of values.  This is called RC4-drop[256].\r\n            // See http://google.com/search?q=rsa+fluhrer+response&btnI\r\n        })(width);\r\n    }\r\n\r\n//\r\n// copy()\r\n// Copies internal state of ARC4 to or from a plain object.\r\n//\r\n    function copy(f, t) {\r\n        t.i = f.i;\r\n        t.j = f.j;\r\n        t.S = f.S.slice();\r\n        return t;\r\n    };\r\n\r\n//\r\n// flatten()\r\n// Converts an object tree to nested arrays of strings.\r\n//\r\n    function flatten(obj, depth) {\r\n        var result = [], typ = (typeof obj), prop;\r\n        if (depth && typ == 'object') {\r\n            for (prop in obj) {\r\n                try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\r\n            }\r\n        }\r\n        return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\r\n    }\r\n\r\n//\r\n// mixkey()\r\n// Mixes a string seed into a key that is an array of integers, and\r\n// returns a shortened string seed that is equivalent to the result key.\r\n//\r\n    function mixkey(seed, key) {\r\n        var stringseed = seed + '', smear, j = 0;\r\n        while (j < stringseed.length) {\r\n            key[mask & j] =\r\n                mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\r\n        }\r\n        return tostring(key);\r\n    }\r\n\r\n//\r\n// autoseed()\r\n// Returns an object for autoseeding, using window.crypto and Node crypto\r\n// module if available.\r\n//\r\n    function autoseed() {\r\n        try {\r\n            if (nodecrypto) { return tostring(nodecrypto.randomBytes(width)); }\r\n            var out = new Uint8Array(width);\r\n            (global.crypto || global.msCrypto).getRandomValues(out);\r\n            return tostring(out);\r\n        } catch (e) {\r\n            var browser = global.navigator,\r\n                plugins = browser && browser.plugins;\r\n            return [+new Date, global, plugins, global.screen, tostring(pool)];\r\n        }\r\n    }\r\n\r\n//\r\n// tostring()\r\n// Converts an array of charcodes to a string\r\n//\r\n    function tostring(a) {\r\n        return String.fromCharCode.apply(0, a);\r\n    }\r\n\r\n//\r\n// When seedrandom.js is loaded, we immediately mix a few bits\r\n// from the built-in RNG into the entropy pool.  Because we do\r\n// not want to interfere with deterministic PRNG state later,\r\n// seedrandom will not call math.random on its own again after\r\n// initialization.\r\n//\r\n    mixkey(math.random(), pool);\r\n\r\n//\r\n// Nodejs and AMD support: export the implementation as a module using\r\n// either convention.\r\n//\r\n\r\n// End anonymous scope, and pass initial values.\r\n})(\r\n    [],     // pool: entropy pool starts empty\r\n    BMMath    // math: package containing random, pow, and seedrandom\r\n);\nvar BezierFactory = (function(){\r\n    /**\r\n     * BezierEasing - use bezier curve for transition easing function\r\n     * by Gaëtan Renaudeau 2014 - 2015 – MIT License\r\n     *\r\n     * Credits: is based on Firefox's nsSMILKeySpline.cpp\r\n     * Usage:\r\n     * var spline = BezierEasing([ 0.25, 0.1, 0.25, 1.0 ])\r\n     * spline.get(x) => returns the easing value | x must be in [0, 1] range\r\n     *\r\n     */\r\n\r\n        var ob = {};\r\n    ob.getBezierEasing = getBezierEasing;\r\n    var beziers = {};\r\n\r\n    function getBezierEasing(a,b,c,d,nm){\r\n        var str = nm || ('bez_' + a+'_'+b+'_'+c+'_'+d).replace(/\\./g, 'p');\r\n        if(beziers[str]){\r\n            return beziers[str];\r\n        }\r\n        var bezEasing = new BezierEasing([a,b,c,d]);\r\n        beziers[str] = bezEasing;\r\n        return bezEasing;\r\n    }\r\n\r\n// These values are established by empiricism with tests (tradeoff: performance VS precision)\r\n    var NEWTON_ITERATIONS = 4;\r\n    var NEWTON_MIN_SLOPE = 0.001;\r\n    var SUBDIVISION_PRECISION = 0.0000001;\r\n    var SUBDIVISION_MAX_ITERATIONS = 10;\r\n\r\n    var kSplineTableSize = 11;\r\n    var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\r\n\r\n    var float32ArraySupported = typeof Float32Array === \"function\";\r\n\r\n    function A (aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }\r\n    function B (aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }\r\n    function C (aA1)      { return 3.0 * aA1; }\r\n\r\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\r\n    function calcBezier (aT, aA1, aA2) {\r\n        return ((A(aA1, aA2)*aT + B(aA1, aA2))*aT + C(aA1))*aT;\r\n    }\r\n\r\n// Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\r\n    function getSlope (aT, aA1, aA2) {\r\n        return 3.0 * A(aA1, aA2)*aT*aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\r\n    }\r\n\r\n    function binarySubdivide (aX, aA, aB, mX1, mX2) {\r\n        var currentX, currentT, i = 0;\r\n        do {\r\n            currentT = aA + (aB - aA) / 2.0;\r\n            currentX = calcBezier(currentT, mX1, mX2) - aX;\r\n            if (currentX > 0.0) {\r\n                aB = currentT;\r\n            } else {\r\n                aA = currentT;\r\n            }\r\n        } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\r\n        return currentT;\r\n    }\r\n\r\n    function newtonRaphsonIterate (aX, aGuessT, mX1, mX2) {\r\n        for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\r\n            var currentSlope = getSlope(aGuessT, mX1, mX2);\r\n            if (currentSlope === 0.0) return aGuessT;\r\n            var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\r\n            aGuessT -= currentX / currentSlope;\r\n        }\r\n        return aGuessT;\r\n    }\r\n\r\n    /**\r\n     * points is an array of [ mX1, mY1, mX2, mY2 ]\r\n     */\r\n    function BezierEasing (points) {\r\n        this._p = points;\r\n        this._mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\r\n        this._precomputed = false;\r\n\r\n        this.get = this.get.bind(this);\r\n    }\r\n\r\n    BezierEasing.prototype = {\r\n\r\n        get: function (x) {\r\n            var mX1 = this._p[0],\r\n                mY1 = this._p[1],\r\n                mX2 = this._p[2],\r\n                mY2 = this._p[3];\r\n            if (!this._precomputed) this._precompute();\r\n            if (mX1 === mY1 && mX2 === mY2) return x; // linear\r\n            // Because JavaScript number are imprecise, we should guarantee the extremes are right.\r\n            if (x === 0) return 0;\r\n            if (x === 1) return 1;\r\n            return calcBezier(this._getTForX(x), mY1, mY2);\r\n        },\r\n\r\n        // Private part\r\n\r\n        _precompute: function () {\r\n            var mX1 = this._p[0],\r\n                mY1 = this._p[1],\r\n                mX2 = this._p[2],\r\n                mY2 = this._p[3];\r\n            this._precomputed = true;\r\n            if (mX1 !== mY1 || mX2 !== mY2)\r\n                this._calcSampleValues();\r\n        },\r\n\r\n        _calcSampleValues: function () {\r\n            var mX1 = this._p[0],\r\n                mX2 = this._p[2];\r\n            for (var i = 0; i < kSplineTableSize; ++i) {\r\n                this._mSampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * getTForX chose the fastest heuristic to determine the percentage value precisely from a given X projection.\r\n         */\r\n        _getTForX: function (aX) {\r\n            var mX1 = this._p[0],\r\n                mX2 = this._p[2],\r\n                mSampleValues = this._mSampleValues;\r\n\r\n            var intervalStart = 0.0;\r\n            var currentSample = 1;\r\n            var lastSample = kSplineTableSize - 1;\r\n\r\n            for (; currentSample !== lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {\r\n                intervalStart += kSampleStepSize;\r\n            }\r\n            --currentSample;\r\n\r\n            // Interpolate to provide an initial guess for t\r\n            var dist = (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample+1] - mSampleValues[currentSample]);\r\n            var guessForT = intervalStart + dist * kSampleStepSize;\r\n\r\n            var initialSlope = getSlope(guessForT, mX1, mX2);\r\n            if (initialSlope >= NEWTON_MIN_SLOPE) {\r\n                return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\r\n            } else if (initialSlope === 0.0) {\r\n                return guessForT;\r\n            } else {\r\n                return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\r\n            }\r\n        }\r\n    };\r\n\r\n    return ob;\r\n\r\n}());\n(function () {\r\n    var lastTime = 0;\r\n    var vendors = ['ms', 'moz', 'webkit', 'o'];\r\n    for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\r\n        window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\r\n        window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\r\n    }\r\n    if(!window.requestAnimationFrame)\r\n        window.requestAnimationFrame = function (callback, element) {\r\n            var currTime = new Date().getTime();\r\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n            var id = setTimeout(function () {\r\n                    callback(currTime + timeToCall);\r\n                },\r\n                timeToCall);\r\n            lastTime = currTime + timeToCall;\r\n            return id;\r\n        };\r\n    if(!window.cancelAnimationFrame)\r\n        window.cancelAnimationFrame = function (id) {\r\n            clearTimeout(id);\r\n        };\r\n}());\r\n\nfunction createElement(parent,child,params){\r\n    if(child){\r\n        child.prototype = Object.create(parent.prototype);\r\n        child.prototype.constructor = child;\r\n        child.prototype._parent = parent.prototype;\r\n    }else{\r\n        var instance = Object.create(parent.prototype,params);\r\n        var getType = {};\r\n        if(instance && getType.toString.call(instance.init) === '[object Function]'){\r\n            instance.init();\r\n        }\r\n        return instance;\r\n    }\r\n}\r\n\r\nfunction extendPrototype(source,destination){\r\n    for (var attr in source.prototype) {\r\n        if (source.prototype.hasOwnProperty(attr)) destination.prototype[attr] = source.prototype[attr];\r\n    }\r\n}\nfunction bezFunction(){\r\n\r\n    var easingFunctions = [];\r\n    var math = Math;\r\n\r\n    function pointOnLine2D(x1,y1, x2,y2, x3,y3){\r\n        var det1 = (x1*y2) + (y1*x3) + (x2*y3) - (x3*y2) - (y3*x1) - (x2*y1);\r\n        return det1 > -0.0001 && det1 < 0.0001;\r\n    }\r\n\r\n    function pointOnLine3D(x1,y1,z1, x2,y2,z2, x3,y3,z3){\r\n        if(z1 === 0 && z2 === 0 && z3 === 0) {\r\n            return pointOnLine2D(x1,y1, x2,y2, x3,y3);\r\n        }\r\n        var dist1 = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2) + Math.pow(z2 - z1, 2));\r\n        var dist2 = Math.sqrt(Math.pow(x3 - x1, 2) + Math.pow(y3 - y1, 2) + Math.pow(z3 - z1, 2));\r\n        var dist3 = Math.sqrt(Math.pow(x3 - x2, 2) + Math.pow(y3 - y2, 2) + Math.pow(z3 - z2, 2));\r\n        var diffDist;\r\n        if(dist1 > dist2){\r\n            if(dist1 > dist3){\r\n                diffDist = dist1 - dist2 - dist3;\r\n            } else {\r\n                diffDist = dist3 - dist2 - dist1;\r\n            }\r\n        } else if(dist3 > dist2){\r\n            diffDist = dist3 - dist2 - dist1;\r\n        } else {\r\n            diffDist = dist2 - dist1 - dist3;\r\n        }\r\n        return diffDist > -0.0001 && diffDist < 0.0001;\r\n    }\r\n\r\n    /*function getEasingCurve(aa,bb,cc,dd,encodedFuncName) {\r\n        if(!encodedFuncName){\r\n            encodedFuncName = ('bez_' + aa+'_'+bb+'_'+cc+'_'+dd).replace(/\\./g, 'p');\r\n        }\r\n        if(easingFunctions[encodedFuncName]){\r\n            return easingFunctions[encodedFuncName];\r\n        }\r\n        var A0, B0, C0;\r\n        var A1, B1, C1;\r\n        easingFunctions[encodedFuncName] = function(tt) {\r\n            var x = tt;\r\n            var i = 0, z;\r\n            while (++i < 20) {\r\n                C0 = 3 * aa;\r\n                B0 = 3 * (cc - aa) - C0;\r\n                A0 = 1 - C0 - B0;\r\n                z = (x * (C0 + x * (B0 + x * A0))) - tt;\r\n                if (bm_abs(z) < 1e-3) break;\r\n                x -= z / (C0 + x * (2 * B0 + 3 * A0 * x));\r\n            }\r\n            C1 = 3 * bb;\r\n            B1 = 3 * (dd - bb) - C1;\r\n            A1 = 1 - C1 - B1;\r\n            var polyB = x * (C1 + x * (B1 + x * A1));\r\n            //return c * polyB + b;\r\n            return polyB;\r\n        };\r\n        return easingFunctions[encodedFuncName];\r\n    }*/\r\n    var getBezierLength = (function(){\r\n\r\n        function Segment(l,p){\r\n            this.l = l;\r\n            this.p = p;\r\n        }\r\n\r\n        return function(pt1,pt2,pt3,pt4){\r\n            var curveSegments = defaultCurveSegments;\r\n            var k;\r\n            var i, len;\r\n            var ptCoord,perc,addedLength = 0;\r\n            var ptDistance;\r\n            var point = [],lastPoint = [];\r\n            var lengthData = {\r\n                addedLength: 0,\r\n                segments: []\r\n            };\r\n            len = pt3.length;\r\n            for(k=0;k<curveSegments;k+=1){\r\n                perc = k/(curveSegments-1);\r\n                ptDistance = 0;\r\n                for(i=0;i<len;i+=1){\r\n                    ptCoord = bm_pow(1-perc,3)*pt1[i]+3*bm_pow(1-perc,2)*perc*pt3[i]+3*(1-perc)*bm_pow(perc,2)*pt4[i]+bm_pow(perc,3)*pt2[i];\r\n                    point[i] = ptCoord;\r\n                    if(lastPoint[i] !== null){\r\n                        ptDistance += bm_pow(point[i] - lastPoint[i],2);\r\n                    }\r\n                    lastPoint[i] = point[i];\r\n                }\r\n                if(ptDistance){\r\n                    ptDistance = bm_sqrt(ptDistance);\r\n                    addedLength += ptDistance;\r\n                }\r\n                lengthData.segments.push(new Segment(addedLength,perc));\r\n            }\r\n            lengthData.addedLength = addedLength;\r\n            return lengthData;\r\n        };\r\n    }());\r\n\r\n    function getSegmentsLength(shapeData) {\r\n        var closed = shapeData.c;\r\n        var pathV = shapeData.v;\r\n        var pathO = shapeData.o;\r\n        var pathI = shapeData.i;\r\n        var i, len = shapeData._length;\r\n        var lengths = [];\r\n        var totalLength = 0;\r\n        for(i=0;i<len-1;i+=1){\r\n            lengths[i] = getBezierLength(pathV[i],pathV[i+1],pathO[i],pathI[i+1]);\r\n            totalLength += lengths[i].addedLength;\r\n        }\r\n        if(closed){\r\n            lengths[i] = getBezierLength(pathV[i],pathV[0],pathO[i],pathI[0]);\r\n            totalLength += lengths[i].addedLength;\r\n        }\r\n        return {lengths:lengths,totalLength:totalLength};\r\n    }\r\n\r\n    function BezierData(length){\r\n        this.segmentLength = 0;\r\n        this.points = new Array(length);\r\n    }\r\n\r\n    function PointData(partial,point){\r\n        this.partialLength = partial;\r\n        this.point = point;\r\n    }\r\n\r\n    var buildBezierData = (function(){\r\n\r\n        var storedData = {};\r\n\r\n        return function (keyData){\r\n            var pt1 = keyData.s;\r\n            var pt2 = keyData.e;\r\n            var pt3 = keyData.to;\r\n            var pt4 = keyData.ti;\r\n            var bezierName = (pt1.join('_')+'_'+pt2.join('_')+'_'+pt3.join('_')+'_'+pt4.join('_')).replace(/\\./g, 'p');\r\n            if(storedData[bezierName]){\r\n                keyData.bezierData = storedData[bezierName];\r\n                return;\r\n            }\r\n        var curveSegments = defaultCurveSegments;\r\n        var k, i, len;\r\n            var ptCoord,perc,addedLength = 0;\r\n            var ptDistance;\r\n            var point,lastPoint = null;\r\n            if(pt1.length === 2 && (pt1[0] != pt2[0] || pt1[1] != pt2[1]) && pointOnLine2D(pt1[0],pt1[1],pt2[0],pt2[1],pt1[0]+pt3[0],pt1[1]+pt3[1]) && pointOnLine2D(pt1[0],pt1[1],pt2[0],pt2[1],pt2[0]+pt4[0],pt2[1]+pt4[1])){\r\n                curveSegments = 2;\r\n            }\r\n            var bezierData = new BezierData(curveSegments);\r\n            len = pt3.length;\r\n            for(k=0;k<curveSegments;k+=1){\r\n            point = new Array(len);\r\n                perc = k/(curveSegments-1);\r\n                ptDistance = 0;\r\n                for(i=0;i<len;i+=1){\r\n                ptCoord = bm_pow(1-perc,3)*pt1[i]+3*bm_pow(1-perc,2)*perc*(pt1[i] + pt3[i])+3*(1-perc)*bm_pow(perc,2)*(pt2[i] + pt4[i])+bm_pow(perc,3)*pt2[i];\r\n                point[i] = ptCoord;\r\n                    if(lastPoint !== null){\r\n                    ptDistance += bm_pow(point[i] - lastPoint[i],2);\r\n                    }\r\n                }\r\n            ptDistance = bm_sqrt(ptDistance);\r\n                addedLength += ptDistance;\r\n                bezierData.points[k] = new PointData(ptDistance,point);\r\n                lastPoint = point;\r\n            }\r\n            bezierData.segmentLength = addedLength;\r\n            keyData.bezierData = bezierData;\r\n            storedData[bezierName] = bezierData;\r\n\r\n        }\r\n    }());\r\n\r\n    function getDistancePerc(perc,bezierData){\r\n        var segments = bezierData.segments;\r\n        var len = segments.length;\r\n        var initPos = bm_floor((len-1)*perc);\r\n        var lengthPos = perc*bezierData.addedLength;\r\n        var lPerc = 0;\r\n        if(lengthPos == segments[initPos].l){\r\n            return segments[initPos].p;\r\n        }else{\r\n            var dir = segments[initPos].l > lengthPos ? -1 : 1;\r\n            var flag = true;\r\n            while(flag){\r\n                if(segments[initPos].l <= lengthPos && segments[initPos+1].l > lengthPos){\r\n                    lPerc = (lengthPos - segments[initPos].l)/(segments[initPos+1].l-segments[initPos].l);\r\n                    flag = false;\r\n                }else{\r\n                    initPos += dir;\r\n                }\r\n                if(initPos < 0 || initPos >= len - 1){\r\n                    flag = false;\r\n                }\r\n            }\r\n            return segments[initPos].p + (segments[initPos+1].p - segments[initPos].p)*lPerc;\r\n        }\r\n    }\r\n\r\n    function SegmentPoints(){\r\n        this.pt1 = new Array(2);\r\n        this.pt2 = new Array(2);\r\n        this.pt3 = new Array(2);\r\n        this.pt4 = new Array(2);\r\n    }\r\n\r\n    function getPointInSegment(pt1, pt2, pt3, pt4, percent, bezierData) {\r\n        var t1 = getDistancePerc(percent,bezierData);\r\n        var u0 = 1;\r\n        var u1 = 1 - t1;\r\n        var ptX = Math.round((u1*u1*u1* pt1[0] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[0] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[0] + t1*t1*t1* pt2[0])* 1000) / 1000;\r\n        var ptY = Math.round((u1*u1*u1* pt1[1] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[1] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[1] + t1*t1*t1* pt2[1])* 1000) / 1000;\r\n        return [ptX, ptY];\r\n    }\r\n\r\n    function getNewSegment(pt1,pt2,pt3,pt4,startPerc,endPerc, bezierData){\r\n\r\n        var pts = new SegmentPoints();\r\n        startPerc = startPerc < 0 ? 0 : startPerc > 1 ? 1 : startPerc;\r\n        var t0 = getDistancePerc(startPerc,bezierData);\r\n        endPerc = endPerc > 1 ? 1 : endPerc;\r\n        var t1 = getDistancePerc(endPerc,bezierData);\r\n        var i, len = pt1.length;\r\n        var u0 = 1 - t0;\r\n        var u1 = 1 - t1;\r\n        //Math.round(num * 100) / 100\r\n        for(i=0;i<len;i+=1){\r\n            pts.pt1[i] =  Math.round((u0*u0*u0* pt1[i] + (t0*u0*u0 + u0*t0*u0 + u0*u0*t0) * pt3[i] + (t0*t0*u0 + u0*t0*t0 + t0*u0*t0)* pt4[i] + t0*t0*t0* pt2[i])* 1000) / 1000;\r\n            pts.pt3[i] = Math.round((u0*u0*u1*pt1[i] + (t0*u0*u1 + u0*t0*u1 + u0*u0*t1)* pt3[i] + (t0*t0*u1 + u0*t0*t1 + t0*u0*t1)* pt4[i] + t0*t0*t1* pt2[i])* 1000) / 1000;\r\n            pts.pt4[i] = Math.round((u0*u1*u1* pt1[i] + (t0*u1*u1 + u0*t1*u1 + u0*u1*t1)* pt3[i] + (t0*t1*u1 + u0*t1*t1 + t0*u1*t1)* pt4[i] + t0*t1*t1* pt2[i])* 1000) / 1000;\r\n            pts.pt2[i] = Math.round((u1*u1*u1* pt1[i] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[i] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[i] + t1*t1*t1* pt2[i])* 1000) / 1000;\r\n        }\r\n        return pts;\r\n    }\r\n\r\n    return {\r\n        //getEasingCurve : getEasingCurve,\r\n        getBezierLength : getBezierLength,\r\n        getSegmentsLength : getSegmentsLength,\r\n        getNewSegment : getNewSegment,\r\n        getPointInSegment : getPointInSegment,\r\n        buildBezierData : buildBezierData,\r\n        pointOnLine2D : pointOnLine2D,\r\n        pointOnLine3D : pointOnLine3D\r\n    };\r\n}\r\n\r\nvar bez = bezFunction();\nfunction dataFunctionManager(){\r\n\r\n    //var tCanvasHelper = document.createElement('canvas').getContext('2d');\r\n\r\n    function completeLayers(layers, comps, fontManager){\r\n        var layerData;\r\n        var animArray, lastFrame;\r\n        var i, len = layers.length;\r\n        var j, jLen, k, kLen;\r\n        for(i=0;i<len;i+=1){\r\n            layerData = layers[i];\r\n            if(!('ks' in layerData) || layerData.completed){\r\n                continue;\r\n            }\r\n            layerData.completed = true;\r\n            if(layerData.tt){\r\n                layers[i-1].td = layerData.tt;\r\n            }\r\n            animArray = [];\r\n            lastFrame = -1;\r\n            if(layerData.hasMask){\r\n                var maskProps = layerData.masksProperties;\r\n                jLen = maskProps.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    if(maskProps[j].pt.k.i){\r\n                        convertPathsToAbsoluteValues(maskProps[j].pt.k);\r\n                    }else{\r\n                        kLen = maskProps[j].pt.k.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            if(maskProps[j].pt.k[k].s){\r\n                                convertPathsToAbsoluteValues(maskProps[j].pt.k[k].s[0]);\r\n                            }\r\n                            if(maskProps[j].pt.k[k].e){\r\n                                convertPathsToAbsoluteValues(maskProps[j].pt.k[k].e[0]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(layerData.ty===0){\r\n                layerData.layers = findCompLayers(layerData.refId, comps);\r\n                completeLayers(layerData.layers,comps, fontManager);\r\n            }else if(layerData.ty === 4){\r\n                completeShapes(layerData.shapes);\r\n            }else if(layerData.ty == 5){\r\n                completeText(layerData, fontManager);\r\n            }\r\n        }\r\n    }\r\n\r\n    function findCompLayers(id,comps){\r\n        var i = 0, len = comps.length;\r\n        while(i<len){\r\n            if(comps[i].id === id){\r\n                if(!comps[i].layers.__used) {\r\n                    comps[i].layers.__used = true;\r\n                    return comps[i].layers;\r\n                }\r\n                return JSON.parse(JSON.stringify(comps[i].layers));\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    function completeShapes(arr){\r\n        var i, len = arr.length;\r\n        var j, jLen;\r\n        var hasPaths = false;\r\n        for(i=len-1;i>=0;i-=1){\r\n            if(arr[i].ty == 'sh'){\r\n                if(arr[i].ks.k.i){\r\n                    convertPathsToAbsoluteValues(arr[i].ks.k);\r\n                }else{\r\n                    jLen = arr[i].ks.k.length;\r\n                    for(j=0;j<jLen;j+=1){\r\n                        if(arr[i].ks.k[j].s){\r\n                            convertPathsToAbsoluteValues(arr[i].ks.k[j].s[0]);\r\n                        }\r\n                        if(arr[i].ks.k[j].e){\r\n                            convertPathsToAbsoluteValues(arr[i].ks.k[j].e[0]);\r\n                        }\r\n                    }\r\n                }\r\n                hasPaths = true;\r\n            }else if(arr[i].ty == 'gr'){\r\n                completeShapes(arr[i].it);\r\n            }\r\n        }\r\n        /*if(hasPaths){\r\n            //mx: distance\r\n            //ss: sensitivity\r\n            //dc: decay\r\n            arr.splice(arr.length-1,0,{\r\n                \"ty\": \"ms\",\r\n                \"mx\":20,\r\n                \"ss\":10,\r\n                 \"dc\":0.001,\r\n                \"maxDist\":200\r\n            });\r\n        }*/\r\n    }\r\n\r\n    function convertPathsToAbsoluteValues(path){\r\n        var i, len = path.i.length;\r\n        for(i=0;i<len;i+=1){\r\n            path.i[i][0] += path.v[i][0];\r\n            path.i[i][1] += path.v[i][1];\r\n            path.o[i][0] += path.v[i][0];\r\n            path.o[i][1] += path.v[i][1];\r\n        }\r\n    }\r\n\r\n    function checkVersion(minimum,animVersionString){\r\n        var animVersion = animVersionString ? animVersionString.split('.') : [100,100,100];\r\n        if(minimum[0]>animVersion[0]){\r\n            return true;\r\n        } else if(animVersion[0] > minimum[0]){\r\n            return false;\r\n        }\r\n        if(minimum[1]>animVersion[1]){\r\n            return true;\r\n        } else if(animVersion[1] > minimum[1]){\r\n            return false;\r\n        }\r\n        if(minimum[2]>animVersion[2]){\r\n            return true;\r\n        } else if(animVersion[2] > minimum[2]){\r\n            return false;\r\n        }\r\n    }\r\n\r\n    var checkText = (function(){\r\n        var minimumVersion = [4,4,14];\r\n\r\n        function updateTextLayer(textLayer){\r\n            var documentData = textLayer.t.d;\r\n            textLayer.t.d = {\r\n                k: [\r\n                    {\r\n                        s:documentData,\r\n                        t:0\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var i, len = layers.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(layers[i].ty === 5){\r\n                    updateTextLayer(layers[i]);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }())\r\n\r\n    var checkChars = (function() {\r\n        var minimumVersion = [4,7,99];\r\n        return function (animationData){\r\n            if(animationData.chars && !checkVersion(minimumVersion,animationData.v)){\r\n                var i, len = animationData.chars.length, j, jLen, k, kLen;\r\n                var pathData, paths;\r\n                for(i = 0; i < len; i += 1) {\r\n                    if(animationData.chars[i].data && animationData.chars[i].data.shapes) {\r\n                        paths = animationData.chars[i].data.shapes[0].it;\r\n                        jLen = paths.length;\r\n\r\n                        for(j = 0; j < jLen; j += 1) {\r\n                            pathData = paths[j].ks.k;\r\n                            if(!pathData.__converted) {\r\n                                convertPathsToAbsoluteValues(paths[j].ks.k);\r\n                                pathData.__converted = true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }())\r\n\r\n    var checkColors = (function(){\r\n        var minimumVersion = [4,1,9];\r\n\r\n        function iterateShapes(shapes){\r\n            var i, len = shapes.length;\r\n            var j, jLen;\r\n            for(i=0;i<len;i+=1){\r\n                if(shapes[i].ty === 'gr'){\r\n                    iterateShapes(shapes[i].it);\r\n                }else if(shapes[i].ty === 'fl' || shapes[i].ty === 'st'){\r\n                    if(shapes[i].c.k && shapes[i].c.k[0].i){\r\n                        jLen = shapes[i].c.k.length;\r\n                        for(j=0;j<jLen;j+=1){\r\n                            if(shapes[i].c.k[j].s){\r\n                                shapes[i].c.k[j].s[0] /= 255;\r\n                                shapes[i].c.k[j].s[1] /= 255;\r\n                                shapes[i].c.k[j].s[2] /= 255;\r\n                                shapes[i].c.k[j].s[3] /= 255;\r\n                            }\r\n                            if(shapes[i].c.k[j].e){\r\n                                shapes[i].c.k[j].e[0] /= 255;\r\n                                shapes[i].c.k[j].e[1] /= 255;\r\n                                shapes[i].c.k[j].e[2] /= 255;\r\n                                shapes[i].c.k[j].e[3] /= 255;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        shapes[i].c.k[0] /= 255;\r\n                        shapes[i].c.k[1] /= 255;\r\n                        shapes[i].c.k[2] /= 255;\r\n                        shapes[i].c.k[3] /= 255;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var i, len = layers.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(layers[i].ty === 4){\r\n                    iterateShapes(layers[i].shapes);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }());\r\n\r\n    var checkShapes = (function(){\r\n        var minimumVersion = [4,4,18];\r\n\r\n\r\n\r\n        function completeShapes(arr){\r\n            var i, len = arr.length;\r\n            var j, jLen;\r\n            var hasPaths = false;\r\n            for(i=len-1;i>=0;i-=1){\r\n                if(arr[i].ty == 'sh'){\r\n                    if(arr[i].ks.k.i){\r\n                        arr[i].ks.k.c = arr[i].closed;\r\n                    }else{\r\n                        jLen = arr[i].ks.k.length;\r\n                        for(j=0;j<jLen;j+=1){\r\n                            if(arr[i].ks.k[j].s){\r\n                                arr[i].ks.k[j].s[0].c = arr[i].closed;\r\n                            }\r\n                            if(arr[i].ks.k[j].e){\r\n                                arr[i].ks.k[j].e[0].c = arr[i].closed;\r\n                            }\r\n                        }\r\n                    }\r\n                    hasPaths = true;\r\n                }else if(arr[i].ty == 'gr'){\r\n                    completeShapes(arr[i].it);\r\n                }\r\n            }\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var layerData;\r\n            var i, len = layers.length;\r\n            var j, jLen, k, kLen;\r\n            for(i=0;i<len;i+=1){\r\n                layerData = layers[i];\r\n                if(layerData.hasMask){\r\n                    var maskProps = layerData.masksProperties;\r\n                    jLen = maskProps.length;\r\n                    for(j=0;j<jLen;j+=1){\r\n                        if(maskProps[j].pt.k.i){\r\n                            maskProps[j].pt.k.c = maskProps[j].cl;\r\n                        }else{\r\n                            kLen = maskProps[j].pt.k.length;\r\n                            for(k=0;k<kLen;k+=1){\r\n                                if(maskProps[j].pt.k[k].s){\r\n                                    maskProps[j].pt.k[k].s[0].c = maskProps[j].cl;\r\n                                }\r\n                                if(maskProps[j].pt.k[k].e){\r\n                                    maskProps[j].pt.k[k].e[0].c = maskProps[j].cl;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if(layerData.ty === 4){\r\n                    completeShapes(layerData.shapes);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }());\r\n\r\n    /*function blitPaths(path){\r\n        var i, len = path.i.length;\r\n        for(i=0;i<len;i+=1){\r\n            path.i[i][0] /= blitter;\r\n            path.i[i][1] /= blitter;\r\n            path.o[i][0] /= blitter;\r\n            path.o[i][1] /= blitter;\r\n            path.v[i][0] /= blitter;\r\n            path.v[i][1] /= blitter;\r\n        }\r\n    }\r\n\r\n    function blitShapes(arr){\r\n        var i, len = arr.length;\r\n        var j, jLen;\r\n        var hasPaths = false;\r\n        for(i=len-1;i>=0;i-=1){\r\n            if(arr[i].ty == 'sh'){\r\n                if(arr[i].ks.k.i){\r\n                    blitPaths(arr[i].ks.k);\r\n                }else{\r\n                    jLen = arr[i].ks.k.length;\r\n                    for(j=0;j<jLen;j+=1){\r\n                        if(arr[i].ks.k[j].s){\r\n                            blitPaths(arr[i].ks.k[j].s[0]);\r\n                        }\r\n                        if(arr[i].ks.k[j].e){\r\n                            blitPaths(arr[i].ks.k[j].e[0]);\r\n                        }\r\n                    }\r\n                }\r\n                hasPaths = true;\r\n            }else if(arr[i].ty == 'gr'){\r\n                blitShapes(arr[i].it);\r\n            }else if(arr[i].ty == 'rc'){\r\n                blitProperty(arr[i].p);\r\n                blitProperty(arr[i].s);\r\n            }else if(arr[i].ty == 'st'){\r\n                blitProperty(arr[i].w);\r\n            }else if(arr[i].ty == 'tr'){\r\n                blitProperty(arr[i].p);\r\n                blitProperty(arr[i].sk);\r\n                blitProperty(arr[i].a);\r\n            }else if(arr[i].ty == 'el'){\r\n                blitProperty(arr[i].p);\r\n                blitProperty(arr[i].s);\r\n            }else if(arr[i].ty == 'rd'){\r\n                blitProperty(arr[i].r);\r\n            }else{\r\n\r\n                //console.log(arr[i].ty );\r\n            }\r\n        }\r\n    }\r\n\r\n    function blitText(data, fontManager){\r\n\r\n    }\r\n\r\n    function blitValue(val){\r\n        if(typeof(val) === 'number'){\r\n            val /= blitter;\r\n        } else {\r\n            var i = val.length-1;\r\n            while(i>=0){\r\n                val[i] /= blitter;\r\n                i-=1;\r\n            }\r\n        }\r\n        return val;\r\n    }\r\n\r\n    function blitProperty(data){\r\n        if(!data.k.length){\r\n            data.k = blitValue(data.k);\r\n        }else if(typeof(data.k[0]) === 'number'){\r\n            data.k = blitValue(data.k);\r\n        } else {\r\n            var i, len = data.k.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(data.k[i].s){\r\n                    //console.log('pre S: ', data.k[i].s);\r\n                    data.k[i].s = blitValue(data.k[i].s);\r\n                    //console.log('post S: ', data.k[i].s);\r\n                }\r\n                if(data.k[i].e){\r\n                    //console.log('pre E: ', data.k[i].e);\r\n                    data.k[i].e = blitValue(data.k[i].e);\r\n                    //console.log('post E: ', data.k[i].e);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function blitLayers(layers,comps, fontManager){\r\n        var layerData;\r\n        var animArray, lastFrame;\r\n        var i, len = layers.length;\r\n        var j, jLen, k, kLen;\r\n        for(i=0;i<len;i+=1){\r\n            layerData = layers[i];\r\n            if(!('ks' in layerData)){\r\n                continue;\r\n            }\r\n            blitProperty(layerData.ks.a);\r\n            blitProperty(layerData.ks.p);\r\n            layerData.completed = true;\r\n            if(layerData.tt){\r\n                layers[i-1].td = layerData.tt;\r\n            }\r\n            animArray = [];\r\n            lastFrame = -1;\r\n            if(layerData.hasMask){\r\n                var maskProps = layerData.masksProperties;\r\n                jLen = maskProps.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    if(maskProps[j].pt.k.i){\r\n                        blitPaths(maskProps[j].pt.k);\r\n                    }else{\r\n                        kLen = maskProps[j].pt.k.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            if(maskProps[j].pt.k[k].s){\r\n                                blitPaths(maskProps[j].pt.k[k].s[0]);\r\n                            }\r\n                            if(maskProps[j].pt.k[k].e){\r\n                                blitPaths(maskProps[j].pt.k[k].e[0]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(layerData.ty===0){\r\n                layerData.w = Math.round(layerData.w/blitter);\r\n                layerData.h = Math.round(layerData.h/blitter);\r\n                blitLayers(layerData.layers,comps, fontManager);\r\n            }else if(layerData.ty === 4){\r\n                blitShapes(layerData.shapes);\r\n            }else if(layerData.ty == 5){\r\n                blitText(layerData, fontManager);\r\n            }else if(layerData.ty == 1){\r\n                layerData.sh /= blitter;\r\n                layerData.sw /= blitter;\r\n            } else {\r\n            }\r\n        }\r\n    }\r\n\r\n    function blitAnimation(animationData,comps, fontManager){\r\n        blitLayers(animationData.layers,comps, fontManager);\r\n    }*/\r\n\r\n    function completeData(animationData, fontManager){\r\n        if(animationData.__complete){\r\n            return;\r\n        }\r\n        checkColors(animationData);\r\n        checkText(animationData);\r\n        checkChars(animationData);\r\n        checkShapes(animationData);\r\n        completeLayers(animationData.layers, animationData.assets, fontManager);\r\n        animationData.__complete = true;\r\n        //blitAnimation(animationData, animationData.assets, fontManager);\r\n    }\r\n\r\n    function completeText(data, fontManager){\r\n        if(data.t.a.length === 0 && !('m' in data.t.p)){\r\n            data.singleShape = true;\r\n        }\r\n    }\r\n\r\n    var moduleOb = {};\r\n    moduleOb.completeData = completeData;\r\n\r\n    return moduleOb;\r\n}\r\n\r\nvar dataManager = dataFunctionManager();\nvar FontManager = (function(){\r\n\r\n    var maxWaitingTime = 5000;\r\n\r\n    function setUpNode(font, family){\r\n        var parentNode = document.createElement('span');\r\n        parentNode.style.fontFamily    = family;\r\n        var node = document.createElement('span');\r\n        // Characters that vary significantly among different fonts\r\n        node.innerHTML = 'giItT1WQy@!-/#';\r\n        // Visible - so we can measure it - but not on the screen\r\n        parentNode.style.position      = 'absolute';\r\n        parentNode.style.left          = '-10000px';\r\n        parentNode.style.top           = '-10000px';\r\n        // Large font size makes even subtle changes obvious\r\n        parentNode.style.fontSize      = '300px';\r\n        // Reset any font properties\r\n        parentNode.style.fontVariant   = 'normal';\r\n        parentNode.style.fontStyle     = 'normal';\r\n        parentNode.style.fontWeight    = 'normal';\r\n        parentNode.style.letterSpacing = '0';\r\n        parentNode.appendChild(node);\r\n        document.body.appendChild(parentNode);\r\n\r\n        // Remember width with no applied web font\r\n        var width = node.offsetWidth;\r\n        node.style.fontFamily = font + ', '+family;\r\n        return {node:node, w:width, parent:parentNode};\r\n    }\r\n\r\n    function checkLoadedFonts() {\r\n        var i, len = this.fonts.length;\r\n        var node, w;\r\n        var loadedCount = len;\r\n        for(i=0;i<len; i+= 1){\r\n            if(this.fonts[i].loaded){\r\n                loadedCount -= 1;\r\n                continue;\r\n            }\r\n            if(this.fonts[i].fOrigin === 't' || this.fonts[i].origin === 2){\r\n                if(window.Typekit && window.Typekit.load && this.typekitLoaded === 0){\r\n                    this.typekitLoaded = 1;\r\n                    try{window.Typekit.load({\r\n                        async: true,\r\n                        active: function() {\r\n                            this.typekitLoaded = 2;\r\n                        }.bind(this)\r\n                    });}catch(e){}\r\n                }\r\n                if(this.typekitLoaded === 2) {\r\n                    this.fonts[i].loaded = true;\r\n                }\r\n            } else if(this.fonts[i].fOrigin === 'n' || this.fonts[i].origin === 0){\r\n                this.fonts[i].loaded = true;\r\n            } else{\r\n                node = this.fonts[i].monoCase.node;\r\n                w = this.fonts[i].monoCase.w;\r\n                if(node.offsetWidth !== w){\r\n                    loadedCount -= 1;\r\n                    this.fonts[i].loaded = true;\r\n                }else{\r\n                    node = this.fonts[i].sansCase.node;\r\n                    w = this.fonts[i].sansCase.w;\r\n                    if(node.offsetWidth !== w){\r\n                        loadedCount -= 1;\r\n                        this.fonts[i].loaded = true;\r\n                    }\r\n                }\r\n                if(this.fonts[i].loaded){\r\n                    this.fonts[i].sansCase.parent.parentNode.removeChild(this.fonts[i].sansCase.parent);\r\n                    this.fonts[i].monoCase.parent.parentNode.removeChild(this.fonts[i].monoCase.parent);\r\n                }\r\n            }\r\n        }\r\n\r\n        if(loadedCount !== 0 && Date.now() - this.initTime < maxWaitingTime){\r\n            setTimeout(checkLoadedFonts.bind(this),20);\r\n        }else{\r\n            setTimeout(function(){this.loaded = true;}.bind(this),0);\r\n\r\n        }\r\n    };\r\n\r\n    function createHelper(def, fontData){\r\n        var tHelper = document.createElementNS(svgNS,'text');\r\n        tHelper.style.fontSize = '100px';\r\n        tHelper.style.fontFamily = fontData.fFamily;\r\n        tHelper.textContent = '1';\r\n        if(fontData.fClass){\r\n            tHelper.style.fontFamily = 'inherit';\r\n            tHelper.className = fontData.fClass;\r\n        } else {\r\n            tHelper.style.fontFamily = fontData.fFamily;\r\n        }\r\n        def.appendChild(tHelper);\r\n        var tCanvasHelper = document.createElement('canvas').getContext('2d');\r\n        tCanvasHelper.font = '100px '+ fontData.fFamily;\r\n        return tCanvasHelper;\r\n    }\r\n\r\n    function addFonts(fontData, defs){\r\n        if(!fontData){\r\n            this.loaded = true;\r\n            return;\r\n        }\r\n        if(this.chars){\r\n            this.loaded = true;\r\n            this.fonts = fontData.list;\r\n            return;\r\n        }\r\n\r\n        var fontArr = fontData.list;\r\n        var i, len = fontArr.length;\r\n        for(i=0; i<len; i+= 1){\r\n            fontArr[i].loaded = false;\r\n            fontArr[i].monoCase = setUpNode(fontArr[i].fFamily,'monospace');\r\n            fontArr[i].sansCase = setUpNode(fontArr[i].fFamily,'sans-serif');\r\n            if(!fontArr[i].fPath) {\r\n                fontArr[i].loaded = true;\r\n            }else if(fontArr[i].fOrigin === 'p' || fontArr[i].origin === 3){\r\n                var s = document.createElement('style');\r\n                s.type = \"text/css\";\r\n                s.innerHTML = \"@font-face {\" + \"font-family: \"+fontArr[i].fFamily+\"; font-style: normal; src: url('\"+fontArr[i].fPath+\"');}\";\r\n                defs.appendChild(s);\r\n            } else if(fontArr[i].fOrigin === 'g' || fontArr[i].origin === 1){\r\n                //<link href='https://fonts.googleapis.com/css?family=Montserrat' rel='stylesheet' type='text/css'>\r\n                var l = document.createElement('link');\r\n                l.type = \"text/css\";\r\n                l.rel = \"stylesheet\";\r\n                l.href = fontArr[i].fPath;\r\n                defs.appendChild(l);\r\n            } else if(fontArr[i].fOrigin === 't' || fontArr[i].origin === 2){\r\n                //<link href='https://fonts.googleapis.com/css?family=Montserrat' rel='stylesheet' type='text/css'>\r\n                var sc = document.createElement('script');\r\n                sc.setAttribute('src',fontArr[i].fPath);\r\n                defs.appendChild(sc);\r\n            }\r\n            fontArr[i].helper = createHelper(defs,fontArr[i]);\r\n            this.fonts.push(fontArr[i]);\r\n        }\r\n        checkLoadedFonts.bind(this)();\r\n    }\r\n\r\n    function addChars(chars){\r\n        if(!chars){\r\n            return;\r\n        }\r\n        if(!this.chars){\r\n            this.chars = [];\r\n        }\r\n        var i, len = chars.length;\r\n        var j, jLen = this.chars.length, found;\r\n        for(i=0;i<len;i+=1){\r\n            j = 0;\r\n            found = false;\r\n            while(j<jLen){\r\n                if(this.chars[j].style === chars[i].style && this.chars[j].fFamily === chars[i].fFamily && this.chars[j].ch === chars[i].ch){\r\n                    found = true;\r\n                }\r\n                j += 1;\r\n            }\r\n            if(!found){\r\n                this.chars.push(chars[i]);\r\n                jLen += 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    function getCharData(char, style, font){\r\n        var i = 0, len = this.chars.length;\r\n        while( i < len) {\r\n            if(this.chars[i].ch === char && this.chars[i].style === style && this.chars[i].fFamily === font){\r\n                return this.chars[i];\r\n            }\r\n            i+= 1;\r\n        }\r\n    }\r\n\r\n    function measureText(char, fontName, size){\r\n        var fontData = this.getFontByName(fontName);\r\n        var tHelper = fontData.helper;\r\n        //tHelper.textContent = char;\r\n        return tHelper.measureText(char).width*size/100;\r\n        //return tHelper.getComputedTextLength()*size/100;\r\n    }\r\n\r\n    function getFontByName(name){\r\n        var i = 0, len = this.fonts.length;\r\n        while(i<len){\r\n            if(this.fonts[i].fName === name) {\r\n                return this.fonts[i];\r\n            }\r\n            i += 1;\r\n        }\r\n        return 'sans-serif';\r\n    }\r\n\r\n    var Font = function(){\r\n        this.fonts = [];\r\n        this.chars = null;\r\n        this.typekitLoaded = 0;\r\n        this.loaded = false;\r\n        this.initTime = Date.now();\r\n    };\r\n    Font.prototype.addChars = addChars;\r\n    Font.prototype.addFonts = addFonts;\r\n    Font.prototype.getCharData = getCharData;\r\n    Font.prototype.getFontByName = getFontByName;\r\n    Font.prototype.measureText = measureText;\r\n\r\n    return Font;\r\n\r\n}());\nvar PropertyFactory = (function(){\r\n\r\n    var initFrame = -999999;\r\n\r\n    function interpolateValue(frameNum, iterationIndex, previousValue, caching){\r\n        var offsetTime = this.offsetTime;\r\n        var newValue;\r\n        if(previousValue.constructor === Array) {\r\n            newValue = Array.apply(null,{length:previousValue.length})\r\n        }\r\n        var i = iterationIndex;\r\n        var len = this.keyframes.length- 1,flag = true;\r\n        var keyData, nextKeyData;\r\n\r\n        while(flag){\r\n            keyData = this.keyframes[i];\r\n            nextKeyData = this.keyframes[i+1];\r\n            if(i == len-1 && frameNum >= nextKeyData.t - offsetTime){\r\n                if(keyData.h){\r\n                    keyData = nextKeyData;\r\n                }\r\n                iterationIndex = 0;\r\n                break;\r\n            }\r\n            if((nextKeyData.t - offsetTime) > frameNum){\r\n                iterationIndex = i;\r\n                break;\r\n            }\r\n            if(i < len - 1){\r\n                i += 1;\r\n            }else{\r\n                iterationIndex = 0;\r\n                flag = false;\r\n            }\r\n        }\r\n\r\n        var k, kLen,perc,jLen, j, fnc;\r\n        if(keyData.to){\r\n\r\n            if(!keyData.bezierData){\r\n                bez.buildBezierData(keyData);\r\n            }\r\n            var bezierData = keyData.bezierData;\r\n            if(frameNum >= nextKeyData.t-offsetTime || frameNum < keyData.t-offsetTime){\r\n                var ind = frameNum >= nextKeyData.t-offsetTime ? bezierData.points.length - 1 : 0;\r\n                kLen = bezierData.points[ind].point.length;\r\n                for(k = 0; k < kLen; k += 1){\r\n                    newValue[k] = bezierData.points[ind].point[k];\r\n                }\r\n                caching._lastBezierData = null;\r\n            }else{\r\n                if(keyData.__fnct){\r\n                    fnc = keyData.__fnct;\r\n                }else{\r\n                    fnc = BezierFactory.getBezierEasing(keyData.o.x,keyData.o.y,keyData.i.x,keyData.i.y,keyData.n).get;\r\n                    keyData.__fnct = fnc;\r\n                }\r\n                perc = fnc((frameNum-(keyData.t-offsetTime))/((nextKeyData.t-offsetTime)-(keyData.t-offsetTime)));\r\n                var distanceInLine = bezierData.segmentLength*perc;\r\n\r\n                var segmentPerc;\r\n                var addedLength =  (caching.lastFrame < frameNum && caching._lastBezierData === bezierData) ? caching._lastAddedLength : 0;\r\n                j =  (caching.lastFrame < frameNum && caching._lastBezierData === bezierData) ? caching._lastPoint : 0;\r\n                flag = true;\r\n                jLen = bezierData.points.length;\r\n                while(flag){\r\n                    addedLength +=bezierData.points[j].partialLength;\r\n                    if(distanceInLine === 0 || perc === 0 || j == bezierData.points.length - 1){\r\n                        kLen = bezierData.points[j].point.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            newValue[k] = bezierData.points[j].point[k];\r\n                        }\r\n                        break;\r\n                    }else if(distanceInLine >= addedLength && distanceInLine < addedLength + bezierData.points[j+1].partialLength){\r\n                        segmentPerc = (distanceInLine-addedLength)/(bezierData.points[j+1].partialLength);\r\n                        kLen = bezierData.points[j].point.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            newValue[k] = bezierData.points[j].point[k] + (bezierData.points[j+1].point[k] - bezierData.points[j].point[k])*segmentPerc;\r\n                        }\r\n                        break;\r\n                    }\r\n                    if(j < jLen - 1){\r\n                        j += 1;\r\n                    }else{\r\n                        flag = false;\r\n                    }\r\n                }\r\n                caching._lastPoint = j;\r\n                caching._lastAddedLength = addedLength - bezierData.points[j].partialLength;\r\n                caching._lastBezierData = bezierData;\r\n            }\r\n        }else{\r\n            var outX,outY,inX,inY, keyValue;\r\n            len = keyData.s.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(keyData.h !== 1){\r\n                    if(frameNum >= nextKeyData.t-offsetTime){\r\n                        perc = 1;\r\n                    }else if(frameNum < keyData.t-offsetTime){\r\n                        perc = 0;\r\n                    }else{\r\n                        if(keyData.o.x.constructor === Array){\r\n                            if(!keyData.__fnct){\r\n                                keyData.__fnct = [];\r\n                            }\r\n                            if (!keyData.__fnct[i]) {\r\n                                outX = keyData.o.x[i] || keyData.o.x[0];\r\n                                outY = keyData.o.y[i] || keyData.o.y[0];\r\n                                inX = keyData.i.x[i] || keyData.i.x[0];\r\n                                inY = keyData.i.y[i] || keyData.i.y[0];\r\n                                fnc = BezierFactory.getBezierEasing(outX,outY,inX,inY).get;\r\n                                keyData.__fnct[i] = fnc;\r\n                            } else {\r\n                                fnc = keyData.__fnct[i];\r\n                            }\r\n                        } else {\r\n                            if (!keyData.__fnct) {\r\n                                outX = keyData.o.x;\r\n                                outY = keyData.o.y;\r\n                                inX = keyData.i.x;\r\n                                inY = keyData.i.y;\r\n                                fnc = BezierFactory.getBezierEasing(outX,outY,inX,inY).get;\r\n                                keyData.__fnct = fnc;\r\n                            } else{\r\n                                fnc = keyData.__fnct;\r\n                            }\r\n                        }\r\n                        perc = fnc((frameNum-(keyData.t-offsetTime))/((nextKeyData.t-offsetTime)-(keyData.t-offsetTime)));\r\n                    }\r\n                }\r\n                if(this.sh && keyData.h !== 1){\r\n                    var initP = keyData.s[i];\r\n                    var endP = keyData.e[i];\r\n                    if(initP-endP < -180){\r\n                        initP += 360;\r\n                    } else if(initP-endP > 180){\r\n                        initP -= 360;\r\n                    }\r\n                    keyValue = initP+(endP-initP)*perc;\r\n                } else {\r\n                    keyValue = keyData.h === 1 ? keyData.s[i] : keyData.s[i]+(keyData.e[i]-keyData.s[i])*perc;\r\n                }\r\n                if(len === 1){\r\n                    newValue = keyValue;\r\n                }else{\r\n                    newValue[i] = keyValue;\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            value: newValue,\r\n            iterationIndex: iterationIndex\r\n        }\r\n    }\r\n\r\n    function getValueAtCurrentTime(){\r\n        if(this.elem.globalData.frameId === this.frameId){\r\n            return;\r\n        }\r\n        this.mdf = false;\r\n        var frameNum = this.comp.renderedFrame - this.offsetTime;\r\n        var initTime = this.keyframes[0].t-this.offsetTime;\r\n        var endTime = this.keyframes[this.keyframes.length- 1].t-this.offsetTime;\r\n        if(!(frameNum === this._caching.lastFrame || (this._caching.lastFrame !== initFrame && ((this._caching.lastFrame >= endTime && frameNum >= endTime) || (this._caching.lastFrame < initTime && frameNum < initTime))))){\r\n            var i = this._caching.lastFrame < frameNum ? this._caching.lastIndex : 0;\r\n            var renderResult = this.interpolateValue(frameNum, i, this.pv, this._caching);\r\n            this._caching.lastIndex = renderResult.iterationIndex;\r\n            if(this.pv.constructor === Array){\r\n                i = 0;\r\n                while(i<this.v.length){\r\n                    this.pv[i] = renderResult.value[i];\r\n                    this.v[i] = this.mult ? this.pv[i] * this.mult : this.pv[i];\r\n                    if(this.lastPValue[i] !== this.pv[i]) {\r\n                        this.mdf = true;\r\n                        this.lastPValue[i] = this.pv[i];\r\n                    }\r\n                    i += 1;\r\n                }\r\n            } else {\r\n                this.pv = renderResult.value;\r\n                this.v = this.mult ? this.pv*this.mult : this.pv;\r\n                if(this.lastPValue != this.pv){\r\n                    this.mdf = true;\r\n                    this.lastPValue = this.pv;\r\n                }\r\n            }\r\n            \r\n        }\r\n        this._caching.lastFrame = frameNum;\r\n        this.frameId = this.elem.globalData.frameId;\r\n    }\r\n\r\n    function getNoValue(){}\r\n\r\n    function ValueProperty(elem,data, mult){\r\n        this.mult = mult;\r\n        this.v = mult ? data.k * mult : data.k;\r\n        this.pv = data.k;\r\n        this.mdf = false;\r\n        this.comp = elem.comp;\r\n        this.k = false;\r\n        this.kf = false;\r\n        this.vel = 0;\r\n        this.getValue = getNoValue;\r\n    }\r\n\r\n    function MultiDimensionalProperty(elem,data, mult){\r\n        this.mult = mult;\r\n        this.data = data;\r\n        this.mdf = false;\r\n        this.comp = elem.comp;\r\n        this.k = false;\r\n        this.kf = false;\r\n        this.frameId = -1;\r\n        this.v = Array.apply(null, {length:data.k.length});\r\n        this.pv = Array.apply(null, {length:data.k.length});\r\n        this.lastValue = Array.apply(null, {length:data.k.length});\r\n        var arr = Array.apply(null, {length:data.k.length});\r\n        this.vel = arr.map(function () { return 0 });\r\n        var i, len = data.k.length;\r\n        for(i = 0;i<len;i+=1){\r\n            this.v[i] = mult ? data.k[i] * mult : data.k[i];\r\n            this.pv[i] = data.k[i];\r\n        }\r\n        this.getValue = getNoValue;\r\n    }\r\n\r\n    function KeyframedValueProperty(elem, data, mult){\r\n        this.keyframes = data.k;\r\n        this.offsetTime = elem.data.st;\r\n        this.lastValue = -99999;\r\n        this.lastPValue = -99999;\r\n        this.frameId = -1;\r\n        this._caching={lastFrame:initFrame,lastIndex:0};\r\n        this.k = true;\r\n        this.kf = true;\r\n        this.data = data;\r\n        this.mult = mult;\r\n        this.elem = elem;\r\n        this.comp = elem.comp;\r\n        this.v = mult ? data.k[0].s[0]*mult : data.k[0].s[0];\r\n        this.pv = data.k[0].s[0];\r\n        this.getValue = getValueAtCurrentTime;\r\n        this.interpolateValue = interpolateValue;\r\n    }\r\n\r\n    function KeyframedMultidimensionalProperty(elem, data, mult){\r\n        var i, len = data.k.length;\r\n        var s, e,to,ti;\r\n        for(i=0;i<len-1;i+=1){\r\n            if(data.k[i].to && data.k[i].s && data.k[i].e){\r\n                s = data.k[i].s;\r\n                e = data.k[i].e;\r\n                to = data.k[i].to;\r\n                ti = data.k[i].ti;\r\n                if((s.length === 2 && !(s[0] === e[0] && s[1] === e[1]) && bez.pointOnLine2D(s[0],s[1],e[0],e[1],s[0] + to[0],s[1] + to[1]) && bez.pointOnLine2D(s[0],s[1],e[0],e[1],e[0] + ti[0],e[1] + ti[1])) || (s.length === 3 && !(s[0] === e[0] && s[1] === e[1] && s[2] === e[2]) && bez.pointOnLine3D(s[0],s[1],s[2],e[0],e[1],e[2],s[0] + to[0],s[1] + to[1],s[2] + to[2]) && bez.pointOnLine3D(s[0],s[1],s[2],e[0],e[1],e[2],e[0] + ti[0],e[1] + ti[1],e[2] + ti[2]))){\r\n                    data.k[i].to = null;\r\n                    data.k[i].ti = null;\r\n                }\r\n            }\r\n        }\r\n        this.keyframes = data.k;\r\n        this.offsetTime = elem.data.st;\r\n        this.k = true;\r\n        this.kf = true;\r\n        this.mult = mult;\r\n        this.elem = elem;\r\n        this.comp = elem.comp;\r\n        this._caching={lastFrame:initFrame,lastIndex:0};\r\n        this.getValue = getValueAtCurrentTime;\r\n        this.interpolateValue = interpolateValue;\r\n        this.frameId = -1;\r\n        this.v = Array.apply(null, {length:data.k[0].s.length});\r\n        this.pv = Array.apply(null, {length:data.k[0].s.length});\r\n        this.lastValue = Array.apply(null, {length:data.k[0].s.length});\r\n        this.lastPValue = Array.apply(null, {length:data.k[0].s.length});\r\n    }\r\n\r\n    var TransformProperty = (function() {\r\n        function positionGetter() {\r\n            if(this.p) {\r\n                return ExpressionValue(this.p);\r\n            } else {\r\n                return [this.px.v, this.py.v, this.pz ? this.pz.v : 0];\r\n            }\r\n        }\r\n        function xPositionGetter() {\r\n            return ExpressionValue(this.px);\r\n        }\r\n        function yPositionGetter() {\r\n            return ExpressionValue(this.py);\r\n        }\r\n        function zPositionGetter() {\r\n            return ExpressionValue(this.pz);\r\n        }\r\n        function anchorGetter() {\r\n            return ExpressionValue(this.a);\r\n        }\r\n        function orientationGetter() {\r\n            return ExpressionValue(this.or);\r\n        }\r\n        function rotationGetter() {\r\n            if(this.r) {\r\n                return ExpressionValue(this.r, 1/degToRads);\r\n            } else {\r\n                return ExpressionValue(this.rz, 1/degToRads);\r\n            }\r\n        }\r\n        function scaleGetter() {\r\n            return ExpressionValue(this.s, 100);\r\n        }\r\n        function opacityGetter() {\r\n            return ExpressionValue(this.o, 100);\r\n        }\r\n        function skewGetter() {\r\n            return ExpressionValue(this.sk);\r\n        }\r\n        function skewAxisGetter() {\r\n            return ExpressionValue(this.sa);\r\n        }\r\n        function applyToMatrix(mat) {\r\n            var i, len = this.dynamicProperties.length;\r\n            for(i = 0; i < len; i += 1) {\r\n                this.dynamicProperties[i].getValue();\r\n                if (this.dynamicProperties[i].mdf) {\r\n                    this.mdf = true;\r\n                }\r\n            }\r\n            if (this.a) {\r\n                mat.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n            }\r\n            if (this.s) {\r\n                mat.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n            }\r\n            if (this.r) {\r\n                mat.rotate(-this.r.v);\r\n            } else {\r\n                mat.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n            }\r\n            if (this.data.p.s) {\r\n                if (this.data.p.z) {\r\n                    mat.translate(this.px.v, this.py.v, -this.pz.v);\r\n                } else {\r\n                    mat.translate(this.px.v, this.py.v, 0);\r\n                }\r\n            } else {\r\n                mat.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);\r\n            }\r\n        }\r\n        function processKeys(){\r\n            if (this.elem.globalData.frameId === this.frameId) {\r\n                return;\r\n            }\r\n\r\n            this.mdf = false;\r\n            var i, len = this.dynamicProperties.length;\r\n\r\n            for(i = 0; i < len; i += 1) {\r\n                this.dynamicProperties[i].getValue();\r\n                if (this.dynamicProperties[i].mdf) {\r\n                    this.mdf = true;\r\n                }\r\n            }\r\n            if (this.mdf) {\r\n                this.v.reset();\r\n                if (this.a) {\r\n                    this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n                }\r\n                if(this.s) {\r\n                    this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n                }\r\n                if (this.sk) {\r\n                    this.v.skewFromAxis(-this.sk.v, this.sa.v);\r\n                }\r\n                if (this.r) {\r\n                    this.v.rotate(-this.r.v);\r\n                } else {\r\n                    this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n                }\r\n                if (this.autoOriented && this.p.keyframes && this.p.getValueAtTime) {\r\n                    var v1,v2;\r\n                    if (this.p._caching.lastFrame+this.p.offsetTime <= this.p.keyframes[0].t) {\r\n                        v1 = this.p.getValueAtTime((this.p.keyframes[0].t + 0.01) / this.elem.globalData.frameRate,0);\r\n                        v2 = this.p.getValueAtTime(this.p.keyframes[0].t / this.elem.globalData.frameRate, 0);\r\n                    } else if(this.p._caching.lastFrame+this.p.offsetTime >= this.p.keyframes[this.p.keyframes.length - 1].t) {\r\n                        v1 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t / this.elem.globalData.frameRate), 0);\r\n                        v2 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t - 0.01) / this.elem.globalData.frameRate, 0);\r\n                    } else {\r\n                        v1 = this.p.pv;\r\n                        v2 = this.p.getValueAtTime((this.p._caching.lastFrame+this.p.offsetTime - 0.01) / this.elem.globalData.frameRate, this.p.offsetTime);\r\n                    }\r\n                    this.v.rotate(-Math.atan2(v1[1] - v2[1], v1[0] - v2[0]));\r\n                }\r\n                if(this.data.p.s){\r\n                    if(this.data.p.z) {\r\n                        this.v.translate(this.px.v, this.py.v, -this.pz.v);\r\n                    } else {\r\n                        this.v.translate(this.px.v, this.py.v, 0);\r\n                    }\r\n                }else{\r\n                    this.v.translate(this.p.v[0],this.p.v[1],-this.p.v[2]);\r\n                }\r\n            }\r\n            this.frameId = this.elem.globalData.frameId;\r\n        }\r\n\r\n        function setInverted(){\r\n            this.inverted = true;\r\n            this.iv = new Matrix();\r\n            if(!this.k){\r\n                if(this.data.p.s){\r\n                    this.iv.translate(this.px.v,this.py.v,-this.pz.v);\r\n                }else{\r\n                    this.iv.translate(this.p.v[0],this.p.v[1],-this.p.v[2]);\r\n                }\r\n                if(this.r){\r\n                    this.iv.rotate(-this.r.v);\r\n                }else{\r\n                    this.iv.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v);\r\n                }\r\n                if(this.s){\r\n                    this.iv.scale(this.s.v[0],this.s.v[1],1);\r\n                }\r\n                if(this.a){\r\n                    this.iv.translate(-this.a.v[0],-this.a.v[1],this.a.v[2]);\r\n                }\r\n            }\r\n        }\r\n\r\n        function autoOrient(){\r\n            //\r\n            //var prevP = this.getValueAtTime();\r\n        }\r\n\r\n        return function TransformProperty(elem,data,arr){\r\n            this.elem = elem;\r\n            this.frameId = -1;\r\n            this.type = 'transform';\r\n            this.dynamicProperties = [];\r\n            this.mdf = false;\r\n            this.data = data;\r\n            this.getValue = processKeys;\r\n            this.applyToMatrix = applyToMatrix;\r\n            this.setInverted = setInverted;\r\n            this.autoOrient = autoOrient;\r\n            this.v = new Matrix();\r\n            if(data.p.s){\r\n                this.px = PropertyFactory.getProp(elem,data.p.x,0,0,this.dynamicProperties);\r\n                this.py = PropertyFactory.getProp(elem,data.p.y,0,0,this.dynamicProperties);\r\n                if(data.p.z){\r\n                    this.pz = PropertyFactory.getProp(elem,data.p.z,0,0,this.dynamicProperties);\r\n                }\r\n            }else{\r\n                this.p = PropertyFactory.getProp(elem,data.p,1,0,this.dynamicProperties);\r\n            }\r\n            if(data.r) {\r\n                this.r = PropertyFactory.getProp(elem, data.r, 0, degToRads, this.dynamicProperties);\r\n            } else if(data.rx) {\r\n                this.rx = PropertyFactory.getProp(elem, data.rx, 0, degToRads, this.dynamicProperties);\r\n                this.ry = PropertyFactory.getProp(elem, data.ry, 0, degToRads, this.dynamicProperties);\r\n                this.rz = PropertyFactory.getProp(elem, data.rz, 0, degToRads, this.dynamicProperties);\r\n                this.or = PropertyFactory.getProp(elem, data.or, 1, degToRads, this.dynamicProperties);\r\n                //sh Indicates it needs to be capped between -180 and 180\r\n                this.or.sh = true;\r\n            }\r\n            if(data.sk){\r\n                this.sk = PropertyFactory.getProp(elem, data.sk, 0, degToRads, this.dynamicProperties);\r\n                this.sa = PropertyFactory.getProp(elem, data.sa, 0, degToRads, this.dynamicProperties);\r\n            }\r\n            if(data.a) {\r\n                this.a = PropertyFactory.getProp(elem,data.a,1,0,this.dynamicProperties);\r\n            }\r\n            if(data.s) {\r\n                this.s = PropertyFactory.getProp(elem,data.s,1,0.01,this.dynamicProperties);\r\n            }\r\n            if(data.o){\r\n                this.o = PropertyFactory.getProp(elem,data.o,0,0.01,this.dynamicProperties);\r\n            } else {\r\n                this.o = {mdf:false,v:1};\r\n            }\r\n            if(this.dynamicProperties.length){\r\n                arr.push(this);\r\n            }else{\r\n                if(this.a){\r\n                    this.v.translate(-this.a.v[0],-this.a.v[1],this.a.v[2]);\r\n                }\r\n                if(this.s){\r\n                    this.v.scale(this.s.v[0],this.s.v[1],this.s.v[2]);\r\n                }\r\n                if(this.sk){\r\n                    this.v.skewFromAxis(-this.sk.v,this.sa.v);\r\n                }\r\n                if(this.r){\r\n                    this.v.rotate(-this.r.v);\r\n                }else{\r\n                    this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n                }\r\n                if(this.data.p.s){\r\n                    if(data.p.z) {\r\n                        this.v.translate(this.px.v, this.py.v, -this.pz.v);\r\n                    } else {\r\n                        this.v.translate(this.px.v, this.py.v, 0);\r\n                    }\r\n                }else{\r\n                    this.v.translate(this.p.v[0],this.p.v[1],-this.p.v[2]);\r\n                }\r\n            }\r\n            Object.defineProperty(this, \"position\", { get: positionGetter});\r\n            Object.defineProperty(this, \"xPosition\", { get: xPositionGetter});\r\n            Object.defineProperty(this, \"yPosition\", { get: yPositionGetter});\r\n            Object.defineProperty(this, \"orientation\", { get: orientationGetter});\r\n            Object.defineProperty(this, \"anchorPoint\", { get: anchorGetter});\r\n            Object.defineProperty(this, \"rotation\", { get: rotationGetter});\r\n            Object.defineProperty(this, \"scale\", { get: scaleGetter});\r\n            Object.defineProperty(this, \"opacity\", { get: opacityGetter});\r\n            Object.defineProperty(this, \"skew\", { get: skewGetter});\r\n            Object.defineProperty(this, \"skewAxis\", { get: skewAxisGetter});\r\n        }\r\n    }());\r\n\r\n    function getProp(elem,data,type, mult, arr) {\r\n        var p;\r\n        if(type === 2){\r\n            p = new TransformProperty(elem, data, arr);\r\n        } else if(data.a === 0){\r\n            if(type === 0) {\r\n                p = new ValueProperty(elem,data,mult);\r\n            } else {\r\n                p = new MultiDimensionalProperty(elem,data, mult);\r\n            }\r\n        } else if(data.a === 1){\r\n            if(type === 0) {\r\n                p = new KeyframedValueProperty(elem,data,mult);\r\n            } else {\r\n                p = new KeyframedMultidimensionalProperty(elem,data, mult);\r\n            }\r\n        } else if(!data.k.length){\r\n            p = new ValueProperty(elem,data, mult);\r\n        }else if(typeof(data.k[0]) === 'number'){\r\n            p = new MultiDimensionalProperty(elem,data, mult);\r\n        }else{\r\n            switch(type){\r\n                case 0:\r\n                    p = new KeyframedValueProperty(elem,data,mult);\r\n                    break;\r\n                case 1:\r\n                    p = new KeyframedMultidimensionalProperty(elem,data,mult);\r\n                    break;\r\n            }\r\n        }\r\n        if(p.k){\r\n            arr.push(p);\r\n        }\r\n        return p;\r\n    }\r\n\r\n    var getGradientProp = (function(){\r\n\r\n        function getValue(forceRender){\r\n            this.prop.getValue();\r\n            this.cmdf = false;\r\n            this.omdf = false;\r\n            if(this.prop.mdf || forceRender){\r\n                var i, len = this.data.p*4;\r\n                var mult, val;\r\n                for(i=0;i<len;i+=1){\r\n                    mult = i%4 === 0 ? 100 : 255;\r\n                    val = Math.round(this.prop.v[i]*mult);\r\n                    if(this.c[i] !== val){\r\n                        this.c[i] = val;\r\n                        this.cmdf = true;\r\n                    }\r\n                }\r\n                if(this.o.length){\r\n                    len = this.prop.v.length;\r\n                    for(i=this.data.p*4;i<len;i+=1){\r\n                        mult = i%2 === 0 ? 100 : 1;\r\n                        val = i%2 === 0 ?  Math.round(this.prop.v[i]*100):this.prop.v[i];\r\n                        if(this.o[i-this.data.p*4] !== val){\r\n                            this.o[i-this.data.p*4] = val;\r\n                            this.omdf = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        function gradientProp(elem,data,arr){\r\n            this.prop = getProp(elem,data.k,1,null,[]);\r\n            this.data = data;\r\n            this.k = this.prop.k;\r\n            this.c = Array.apply(null,{length:data.p*4});\r\n            var cLength = data.k.k[0].s ? (data.k.k[0].s.length - data.p*4) : data.k.k.length - data.p*4;\r\n            this.o = Array.apply(null,{length:cLength});\r\n            this.cmdf = false;\r\n            this.omdf = false;\r\n            this.getValue = getValue;\r\n            if(this.prop.k){\r\n                arr.push(this);\r\n            }\r\n            this.getValue(true);\r\n        }\r\n\r\n        return function getGradientProp(elem,data,arr){\r\n            return new gradientProp(elem,data,arr);\r\n        }\r\n    }());\r\n\r\n\r\n\r\n\r\n    var DashProperty = (function(){\r\n\r\n        function processKeys(forceRender){\r\n            var i = 0, len = this.dataProps.length;\r\n\r\n            if(this.elem.globalData.frameId === this.frameId && !forceRender){\r\n                return;\r\n            }\r\n            this.mdf = false;\r\n            this.frameId = this.elem.globalData.frameId;\r\n            while(i<len){\r\n                if(this.dataProps[i].p.mdf){\r\n                    this.mdf = true;\r\n                    break;\r\n                }\r\n                i+=1;\r\n            }\r\n            if(this.mdf || forceRender){\r\n                if(this.renderer === 'svg') {\r\n                    this.dasharray = '';\r\n                }\r\n                for(i=0;i<len;i+=1){\r\n                    if(this.dataProps[i].n != 'o'){\r\n                        if(this.renderer === 'svg') {\r\n                            this.dasharray += ' ' + this.dataProps[i].p.v;\r\n                        }else{\r\n                            this.dasharray[i] = this.dataProps[i].p.v;\r\n                        }\r\n                    }else{\r\n                        this.dashoffset = this.dataProps[i].p.v;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return function(elem, data,renderer, dynamicProperties){\r\n            this.elem = elem;\r\n            this.frameId = -1;\r\n            this.dataProps = new Array(data.length);\r\n            this.renderer = renderer;\r\n            this.mdf = false;\r\n            this.k = false;\r\n            if(this.renderer === 'svg'){\r\n                this.dasharray = '';\r\n            }else{\r\n\r\n                this.dasharray = new Array(data.length - 1);\r\n            }\r\n            this.dashoffset = 0;\r\n            var i, len = data.length, prop;\r\n            for(i=0;i<len;i+=1){\r\n                prop = PropertyFactory.getProp(elem,data[i].v,0, 0, dynamicProperties);\r\n                this.k = prop.k ? true : this.k;\r\n                this.dataProps[i] = {n:data[i].n,p:prop};\r\n            }\r\n            this.getValue = processKeys;\r\n            if(this.k){\r\n                dynamicProperties.push(this);\r\n            }else{\r\n                this.getValue(true);\r\n            }\r\n\r\n        }\r\n    }());\r\n\r\n    function getDashProp(elem, data,renderer, dynamicProperties) {\r\n        return new DashProperty(elem, data,renderer, dynamicProperties);\r\n    };\r\n\r\n    var TextSelectorProp = (function(){\r\n        var max = Math.max;\r\n        var min = Math.min;\r\n        var floor = Math.floor;\r\n        function updateRange(newCharsFlag){\r\n            this.mdf = newCharsFlag || false;\r\n            if(this.dynamicProperties.length){\r\n                var i, len = this.dynamicProperties.length;\r\n                for(i=0;i<len;i+=1){\r\n                    this.dynamicProperties[i].getValue();\r\n                    if(this.dynamicProperties[i].mdf){\r\n                        this.mdf = true;\r\n                    }\r\n                }\r\n            }\r\n            var totalChars = this.elem.textProperty.currentData ? this.elem.textProperty.currentData.l.length : 0;\r\n            if(newCharsFlag && this.data.r === 2) {\r\n                this.e.v = totalChars;\r\n            }\r\n            var divisor = this.data.r === 2 ? 1 : 100 / totalChars;\r\n            var o = this.o.v/divisor;\r\n            var s = this.s.v/divisor + o;\r\n            var e = (this.e.v/divisor) + o;\r\n            if(s>e){\r\n                var _s = s;\r\n                s = e;\r\n                e = _s;\r\n            }\r\n            this.finalS = s;\r\n            this.finalE = e;\r\n        }\r\n\r\n        function getMult(ind){\r\n            //var easer = bez.getEasingCurve(this.ne.v/100,0,1-this.xe.v/100,1);\r\n            var easer = BezierFactory.getBezierEasing(this.ne.v/100,0,1-this.xe.v/100,1).get;\r\n            var mult = 0;\r\n            var s = this.finalS;\r\n            var e = this.finalE;\r\n            var type = this.data.sh;\r\n            if(type == 2){\r\n                if(e === s){\r\n                    mult = ind >= e ? 1 : 0;\r\n                }else{\r\n                    mult = max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n                }\r\n                mult = easer(mult);\r\n            }else if(type == 3){\r\n                if(e === s){\r\n                    mult = ind >= e ? 0 : 1;\r\n                }else{\r\n                    mult = 1 - max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n                }\r\n\r\n                mult = easer(mult);\r\n            }else if(type == 4){\r\n                if(e === s){\r\n                    mult = 0;\r\n                }else{\r\n                    mult = max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n                    if(mult<.5){\r\n                        mult *= 2;\r\n                    }else{\r\n                        mult = 1 - 2*(mult-0.5);\r\n                    }\r\n                }\r\n                mult = easer(mult);\r\n            }else if(type == 5){\r\n                if(e === s){\r\n                    mult = 0;\r\n                }else{\r\n                    var tot = e - s;\r\n                    /*ind += 0.5;\r\n                    mult = -4/(tot*tot)*(ind*ind)+(4/tot)*ind;*/\r\n                    ind = min(max(0,ind+0.5-s),e-s);\r\n                    var x = -tot/2+ind;\r\n                    var a = tot/2;\r\n                    mult = Math.sqrt(1 - (x*x)/(a*a));\r\n                }\r\n                mult = easer(mult);\r\n            }else if(type == 6){\r\n                if(e === s){\r\n                    mult = 0;\r\n                }else{\r\n                    ind = min(max(0,ind+0.5-s),e-s);\r\n                    mult = (1+(Math.cos((Math.PI+Math.PI*2*(ind)/(e-s)))))/2;\r\n                    /*\r\n                     ind = Math.min(Math.max(s,ind),e-1);\r\n                     mult = (1+(Math.cos((Math.PI+Math.PI*2*(ind-s)/(e-1-s)))))/2;\r\n                     mult = Math.max(mult,(1/(e-1-s))/(e-1-s));*/\r\n                }\r\n                mult = easer(mult);\r\n            }else {\r\n                if(ind >= floor(s)){\r\n                    if(ind-s < 0){\r\n                        mult = 1 - (s - ind);\r\n                    }else{\r\n                        mult = max(0,min(e-ind,1));\r\n                    }\r\n                }\r\n                mult = easer(mult);\r\n            }\r\n            return mult*this.a.v;\r\n        }\r\n\r\n        return function TextSelectorProp(elem,data, arr){\r\n            this.mdf = false;\r\n            this.k = false;\r\n            this.data = data;\r\n            this.dynamicProperties = [];\r\n            this.getValue = updateRange;\r\n            this.getMult = getMult;\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.finalS = 0;\r\n            this.finalE = 0;\r\n            this.s = PropertyFactory.getProp(elem,data.s || {k:0},0,0,this.dynamicProperties);\r\n            if('e' in data){\r\n                this.e = PropertyFactory.getProp(elem,data.e,0,0,this.dynamicProperties);\r\n            }else{\r\n                this.e = {v:100};\r\n            }\r\n            this.o = PropertyFactory.getProp(elem,data.o || {k:0},0,0,this.dynamicProperties);\r\n            this.xe = PropertyFactory.getProp(elem,data.xe || {k:0},0,0,this.dynamicProperties);\r\n            this.ne = PropertyFactory.getProp(elem,data.ne || {k:0},0,0,this.dynamicProperties);\r\n            this.a = PropertyFactory.getProp(elem,data.a,0,0.01,this.dynamicProperties);\r\n            if(this.dynamicProperties.length){\r\n                arr.push(this);\r\n            }else{\r\n                this.getValue();\r\n            }\r\n        }\r\n    }());\r\n\r\n    function getTextSelectorProp(elem, data,arr) {\r\n        return new TextSelectorProp(elem, data, arr);\r\n    };\r\n\r\n    var ob = {\r\n        getProp: getProp,\r\n        getDashProp: getDashProp,\r\n        getTextSelectorProp: getTextSelectorProp,\r\n        getGradientProp: getGradientProp\r\n    };\r\n    return ob;\r\n}());\nfunction ShapePath(){\r\n\tthis.c = false;\r\n\tthis._length = 0;\r\n\tthis._maxLength = 8;\r\n\tthis.v = Array.apply(null,{length:this._maxLength});\r\n\tthis.o = Array.apply(null,{length:this._maxLength});\r\n\tthis.i = Array.apply(null,{length:this._maxLength});\r\n};\r\n\r\nShapePath.prototype.setPathData = function(closed, len) {\r\n\tthis.c = closed;\r\n\tthis.setLength(len);\r\n\tvar i = 0;\r\n\twhile(i < len){\r\n\t\tthis.v[i] = point_pool.newPoint();\r\n\t\tthis.o[i] = point_pool.newPoint();\r\n\t\tthis.i[i] = point_pool.newPoint();\r\n\t\ti += 1;\r\n\t}\r\n};\r\n\r\nShapePath.prototype.setLength = function(len) {\r\n\twhile(this._maxLength < len) {\r\n\t\tthis.doubleArrayLength();\r\n\t}\r\n\tthis._length = len;\r\n}\r\n\r\nShapePath.prototype.doubleArrayLength = function() {\r\n\tthis.v = this.v.concat(Array.apply(null,{length:this._maxLength}))\r\n\tthis.i = this.i.concat(Array.apply(null,{length:this._maxLength}))\r\n\tthis.o = this.o.concat(Array.apply(null,{length:this._maxLength}))\r\n\tthis._maxLength *= 2;\r\n};\r\n\r\nShapePath.prototype.setXYAt = function(x, y, type, pos, replace) {\r\n\tvar arr;\r\n\tthis._length = Math.max(this._length, pos + 1);\r\n\tif(this._length >= this._maxLength) {\r\n\t\tthis.doubleArrayLength();\r\n\t}\r\n\tswitch(type){\r\n\t\tcase 'v':\r\n\t\t\tarr = this.v;\r\n\t\t\tbreak;\r\n\t\tcase 'i':\r\n\t\t\tarr = this.i;\r\n\t\t\tbreak;\r\n\t\tcase 'o':\r\n\t\t\tarr = this.o;\r\n\t\t\tbreak;\r\n\t}\r\n\tif(!arr[pos] || (arr[pos] && !replace)){\r\n\t\tarr[pos] = point_pool.newPoint();\r\n\t}\r\n\tarr[pos][0] = x;\r\n\tarr[pos][1] = y;\r\n};\r\n\r\nShapePath.prototype.setTripleAt = function(vX,vY,oX,oY,iX,iY,pos, replace) {\r\n\tthis.setXYAt(vX,vY,'v',pos, replace);\r\n\tthis.setXYAt(oX,oY,'o',pos, replace);\r\n\tthis.setXYAt(iX,iY,'i',pos, replace);\r\n};\nvar ShapePropertyFactory = (function(){\r\n\r\n    var initFrame = -999999;\r\n\r\n    function interpolateShape(frameNum, iterationIndex, previousValue, isCurrentRender) {\r\n        var keyPropS,keyPropE,isHold;\r\n        if(frameNum < this.keyframes[0].t-this.offsetTime){\r\n            keyPropS = this.keyframes[0].s[0];\r\n            isHold = true;\r\n            iterationIndex = 0;\r\n        }else if(frameNum >= this.keyframes[this.keyframes.length - 1].t-this.offsetTime){\r\n            if(this.keyframes[this.keyframes.length - 2].h === 1){\r\n                keyPropS = this.keyframes[this.keyframes.length - 1].s[0];\r\n            }else{\r\n                keyPropS = this.keyframes[this.keyframes.length - 2].e[0];\r\n            }\r\n            isHold = true;\r\n        }else{\r\n            var i = iterationIndex;\r\n            var len = this.keyframes.length- 1,flag = true,keyData,nextKeyData, j, jLen, k, kLen;\r\n            while(flag){\r\n                keyData = this.keyframes[i];\r\n                nextKeyData = this.keyframes[i+1];\r\n                if((nextKeyData.t - this.offsetTime) > frameNum){\r\n                    break;\r\n                }\r\n                if(i < len - 1){\r\n                    i += 1;\r\n                }else{\r\n                    flag = false;\r\n                }\r\n            }\r\n            isHold = keyData.h === 1;\r\n            iterationIndex = i;\r\n\r\n            var perc;\r\n            if(!isHold){\r\n                if(frameNum >= nextKeyData.t-this.offsetTime){\r\n                    perc = 1;\r\n                }else if(frameNum < keyData.t-this.offsetTime){\r\n                    perc = 0;\r\n                }else{\r\n                    var fnc;\r\n                    if(keyData.__fnct){\r\n                        fnc = keyData.__fnct;\r\n                    }else{\r\n                        fnc = BezierFactory.getBezierEasing(keyData.o.x,keyData.o.y,keyData.i.x,keyData.i.y).get;\r\n                        keyData.__fnct = fnc;\r\n                    }\r\n                    perc = fnc((frameNum-(keyData.t-this.offsetTime))/((nextKeyData.t-this.offsetTime)-(keyData.t-this.offsetTime)));\r\n                }\r\n                keyPropE = keyData.e[0];\r\n            }\r\n            keyPropS = keyData.s[0];\r\n        }\r\n        jLen = previousValue._length;\r\n        kLen = keyPropS.i[0].length;\r\n        var hasModified = false;\r\n        var vertexValue;\r\n        for(j=0;j<jLen;j+=1){\r\n            for(k=0;k<kLen;k+=1){\r\n                if(isHold){\r\n                    vertexValue = keyPropS.i[j][k];\r\n                    if(previousValue.i[j][k] !== vertexValue){\r\n                        previousValue.i[j][k] = vertexValue;\r\n                        if(isCurrentRender) {\r\n                            this.pv.i[j][k] = vertexValue;\r\n                        }\r\n                        hasModified = true;\r\n                    }\r\n                    vertexValue = keyPropS.o[j][k];\r\n                    if(previousValue.o[j][k] !== vertexValue){\r\n                        previousValue.o[j][k] = vertexValue;\r\n                        if(isCurrentRender) {\r\n                            this.pv.o[j][k] = vertexValue;\r\n                        }\r\n                        hasModified = true;\r\n                    }\r\n                    vertexValue = keyPropS.v[j][k];\r\n                    if(previousValue.v[j][k] !== vertexValue){\r\n                        previousValue.v[j][k] = vertexValue;\r\n                        if(isCurrentRender) {\r\n                            this.pv.v[j][k] = vertexValue;\r\n                        }\r\n                        hasModified = true;\r\n                    }\r\n                }else{\r\n                    vertexValue = keyPropS.i[j][k]+(keyPropE.i[j][k]-keyPropS.i[j][k])*perc;\r\n                    if(previousValue.i[j][k] !== vertexValue){\r\n                        previousValue.i[j][k] = vertexValue;\r\n                        if(isCurrentRender) {\r\n                            this.pv.i[j][k] = vertexValue;\r\n                        }\r\n                        hasModified = true;\r\n                    }\r\n                    vertexValue = keyPropS.o[j][k]+(keyPropE.o[j][k]-keyPropS.o[j][k])*perc;\r\n                    if(previousValue.o[j][k] !== vertexValue){\r\n                        previousValue.o[j][k] = vertexValue;\r\n                        if(isCurrentRender) {\r\n                            this.pv.o[j][k] = vertexValue;\r\n                        }\r\n                        hasModified = true;\r\n                    }\r\n                    vertexValue = keyPropS.v[j][k]+(keyPropE.v[j][k]-keyPropS.v[j][k])*perc;\r\n                    if(previousValue.v[j][k] !== vertexValue){\r\n                        previousValue.v[j][k] = vertexValue;\r\n                        if(isCurrentRender) {\r\n                            this.pv.v[j][k] = vertexValue;\r\n                        }\r\n                        hasModified = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if(hasModified) {\r\n            previousValue.c = keyPropS.c;\r\n        }\r\n        return {\r\n            iterationIndex: iterationIndex,\r\n            hasModified: hasModified\r\n        }\r\n    }\r\n\r\n    function interpolateShapeCurrentTime(){\r\n        if(this.elem.globalData.frameId === this.frameId){\r\n            return;\r\n        }\r\n        this.mdf = false;\r\n        var frameNum = this.comp.renderedFrame - this.offsetTime;\r\n        var initTime = this.keyframes[0].t - this.offsetTime;\r\n        var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;\r\n        if(!(this.lastFrame !== initFrame && ((this.lastFrame < initTime && frameNum < initTime) || (this.lastFrame > endTime && frameNum > endTime)))){\r\n            ////\r\n            var i = this.lastFrame < frameNum ? this._lastIndex : 0;\r\n            var renderResult = this.interpolateShape(frameNum, i, this.v, true);\r\n            ////\r\n            this._lastIndex = renderResult.iterationIndex;\r\n            this.mdf = renderResult.hasModified;\r\n            if(renderResult.hasModified) {\r\n                this.paths = this.localShapeCollection;\r\n            }\r\n        }\r\n        this.lastFrame = frameNum;\r\n        this.frameId = this.elem.globalData.frameId;\r\n    }\r\n\r\n    function getShapeValue(){\r\n        return this.v;\r\n    }\r\n\r\n    function resetShape(){\r\n        this.paths = this.localShapeCollection;\r\n        if(!this.k){\r\n            this.mdf = false;\r\n        }\r\n    }\r\n\r\n    function ShapeProperty(elem, data, type){\r\n        this.__shapeObject = 1;\r\n        this.comp = elem.comp;\r\n        this.k = false;\r\n        this.mdf = false;\r\n        var pathData = type === 3 ? data.pt.k : data.ks.k;\r\n        this.v = shape_pool.clone(pathData);\r\n        this.pv = shape_pool.clone(this.v);\r\n        this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n        this.paths = this.localShapeCollection;\r\n        this.paths.addShape(this.v);\r\n        this.reset = resetShape;\r\n    }\r\n    ShapeProperty.prototype.interpolateShape = interpolateShape;\r\n    ShapeProperty.prototype.getValue = getShapeValue;\r\n\r\n    function KeyframedShapeProperty(elem,data,type){\r\n        this.__shapeObject = 1;\r\n        this.comp = elem.comp;\r\n        this.elem = elem;\r\n        this.offsetTime = elem.data.st;\r\n        this._lastIndex = 0;\r\n        this.keyframes = type === 3 ? data.pt.k : data.ks.k;\r\n        this.k = true;\r\n        this.kf = true;\r\n        var i, len = this.keyframes[0].s[0].i.length;\r\n        var jLen = this.keyframes[0].s[0].i[0].length;\r\n        this.v = shape_pool.newShape();\r\n        this.v.setPathData(this.keyframes[0].s[0].c, len);\r\n        this.pv = shape_pool.clone(this.v);\r\n        this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n        this.paths = this.localShapeCollection;\r\n        this.paths.addShape(this.v);\r\n        this.lastFrame = initFrame;\r\n        this.reset = resetShape;\r\n    }\r\n    KeyframedShapeProperty.prototype.getValue = interpolateShapeCurrentTime;\r\n    KeyframedShapeProperty.prototype.interpolateShape = interpolateShape;\r\n\r\n    var EllShapeProperty = (function(){\r\n\r\n        var cPoint = roundCorner;\r\n\r\n        function convertEllToPath(){\r\n            var p0 = this.p.v[0], p1 = this.p.v[1], s0 = this.s.v[0]/2, s1 = this.s.v[1]/2;\r\n            if(this.d !== 3){\r\n                this.v.v[0][0] = p0;\r\n                this.v.v[0][1] = p1-s1;\r\n                this.v.v[1][0] = p0 + s0;\r\n                this.v.v[1][1] = p1;\r\n                this.v.v[2][0] = p0;\r\n                this.v.v[2][1] = p1+s1;\r\n                this.v.v[3][0] = p0 - s0;\r\n                this.v.v[3][1] = p1;\r\n                this.v.i[0][0] = p0 - s0*cPoint;\r\n                this.v.i[0][1] = p1 - s1;\r\n                this.v.i[1][0] = p0 + s0;\r\n                this.v.i[1][1] = p1 - s1*cPoint;\r\n                this.v.i[2][0] = p0 + s0*cPoint;\r\n                this.v.i[2][1] = p1 + s1;\r\n                this.v.i[3][0] = p0 - s0;\r\n                this.v.i[3][1] = p1 + s1*cPoint;\r\n                this.v.o[0][0] = p0 + s0*cPoint;\r\n                this.v.o[0][1] = p1 - s1;\r\n                this.v.o[1][0] = p0 + s0;\r\n                this.v.o[1][1] = p1 + s1*cPoint;\r\n                this.v.o[2][0] = p0 - s0*cPoint;\r\n                this.v.o[2][1] = p1 + s1;\r\n                this.v.o[3][0] = p0 - s0;\r\n                this.v.o[3][1] = p1 - s1*cPoint;\r\n            }else{\r\n                this.v.v[0][0] = p0;\r\n                this.v.v[0][1] = p1-s1;\r\n                this.v.v[1][0] = p0 - s0;\r\n                this.v.v[1][1] = p1;\r\n                this.v.v[2][0] = p0;\r\n                this.v.v[2][1] = p1+s1;\r\n                this.v.v[3][0] = p0 + s0;\r\n                this.v.v[3][1] = p1;\r\n                this.v.i[0][0] = p0 + s0*cPoint;\r\n                this.v.i[0][1] = p1 - s1;\r\n                this.v.i[1][0] = p0 - s0;\r\n                this.v.i[1][1] = p1 - s1*cPoint;\r\n                this.v.i[2][0] = p0 - s0*cPoint;\r\n                this.v.i[2][1] = p1 + s1;\r\n                this.v.i[3][0] = p0 + s0;\r\n                this.v.i[3][1] = p1 + s1*cPoint;\r\n                this.v.o[0][0] = p0 - s0*cPoint;\r\n                this.v.o[0][1] = p1 - s1;\r\n                this.v.o[1][0] = p0 - s0;\r\n                this.v.o[1][1] = p1 + s1*cPoint;\r\n                this.v.o[2][0] = p0 + s0*cPoint;\r\n                this.v.o[2][1] = p1 + s1;\r\n                this.v.o[3][0] = p0 + s0;\r\n                this.v.o[3][1] = p1 - s1*cPoint;\r\n            }\r\n        }\r\n\r\n        function processKeys(frameNum){\r\n            var i, len = this.dynamicProperties.length;\r\n            if(this.elem.globalData.frameId === this.frameId){\r\n                return;\r\n            }\r\n            this.mdf = false;\r\n            this.frameId = this.elem.globalData.frameId;\r\n\r\n            for(i=0;i<len;i+=1){\r\n                this.dynamicProperties[i].getValue(frameNum);\r\n                if(this.dynamicProperties[i].mdf){\r\n                    this.mdf = true;\r\n                }\r\n            }\r\n            if(this.mdf){\r\n                this.convertEllToPath();\r\n            }\r\n        }\r\n\r\n        return function EllShapeProperty(elem,data) {\r\n            /*this.v = {\r\n                v: Array.apply(null,{length:4}),\r\n                i: Array.apply(null,{length:4}),\r\n                o: Array.apply(null,{length:4}),\r\n                c: true\r\n            };*/\r\n            this.v = shape_pool.newShape();\r\n            this.v.setPathData(true, 4);\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.paths = this.localShapeCollection;\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.d = data.d;\r\n            this.dynamicProperties = [];\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.frameId = -1;\r\n            this.mdf = false;\r\n            this.getValue = processKeys;\r\n            this.convertEllToPath = convertEllToPath;\r\n            this.reset = resetShape;\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this.dynamicProperties);\r\n            this.s = PropertyFactory.getProp(elem,data.s,1,0,this.dynamicProperties);\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.convertEllToPath();\r\n            }\r\n        }\r\n    }());\r\n\r\n    var StarShapeProperty = (function() {\r\n\r\n        function convertPolygonToPath(){\r\n            var numPts = Math.floor(this.pt.v);\r\n            var angle = Math.PI*2/numPts;\r\n            /*this.v.v.length = numPts;\r\n            this.v.i.length = numPts;\r\n            this.v.o.length = numPts;*/\r\n            var rad = this.or.v;\r\n            var roundness = this.os.v;\r\n            var perimSegment = 2*Math.PI*rad/(numPts*4);\r\n            var i, currentAng = -Math.PI/ 2;\r\n            var dir = this.data.d === 3 ? -1 : 1;\r\n            currentAng += this.r.v;\r\n            this.v._length = 0;\r\n            for(i=0;i<numPts;i+=1){\r\n                var x = rad * Math.cos(currentAng);\r\n                var y = rad * Math.sin(currentAng);\r\n                var ox = x === 0 && y === 0 ? 0 : y/Math.sqrt(x*x + y*y);\r\n                var oy = x === 0 && y === 0 ? 0 : -x/Math.sqrt(x*x + y*y);\r\n                x +=  + this.p.v[0];\r\n                y +=  + this.p.v[1];\r\n                this.v.setTripleAt(x,y,x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir,x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir, i, true);\r\n                /*this.v.v[i] = [x,y];\r\n                this.v.i[i] = [x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir];\r\n                this.v.o[i] = [x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir];*/\r\n                currentAng += angle*dir;\r\n            }\r\n            this.paths.length = 0;\r\n            this.paths[0] = this.v;\r\n        }\r\n\r\n        function convertStarToPath() {\r\n            var numPts = Math.floor(this.pt.v)*2;\r\n            var angle = Math.PI*2/numPts;\r\n            /*this.v.v.length = numPts;\r\n            this.v.i.length = numPts;\r\n            this.v.o.length = numPts;*/\r\n            var longFlag = true;\r\n            var longRad = this.or.v;\r\n            var shortRad = this.ir.v;\r\n            var longRound = this.os.v;\r\n            var shortRound = this.is.v;\r\n            var longPerimSegment = 2*Math.PI*longRad/(numPts*2);\r\n            var shortPerimSegment = 2*Math.PI*shortRad/(numPts*2);\r\n            var i, rad,roundness,perimSegment, currentAng = -Math.PI/ 2;\r\n            currentAng += this.r.v;\r\n            var dir = this.data.d === 3 ? -1 : 1;\r\n            this.v._length = 0;\r\n            for(i=0;i<numPts;i+=1){\r\n                rad = longFlag ? longRad : shortRad;\r\n                roundness = longFlag ? longRound : shortRound;\r\n                perimSegment = longFlag ? longPerimSegment : shortPerimSegment;\r\n                var x = rad * Math.cos(currentAng);\r\n                var y = rad * Math.sin(currentAng);\r\n                var ox = x === 0 && y === 0 ? 0 : y/Math.sqrt(x*x + y*y);\r\n                var oy = x === 0 && y === 0 ? 0 : -x/Math.sqrt(x*x + y*y);\r\n                x +=  + this.p.v[0];\r\n                y +=  + this.p.v[1];\r\n                this.v.setTripleAt(x,y,x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir,x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir, i, true);\r\n\r\n                /*this.v.v[i] = [x,y];\r\n                this.v.i[i] = [x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir];\r\n                this.v.o[i] = [x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir];\r\n                this.v._length = numPts;*/\r\n                longFlag = !longFlag;\r\n                currentAng += angle*dir;\r\n            }\r\n        }\r\n\r\n        function processKeys() {\r\n            if(this.elem.globalData.frameId === this.frameId){\r\n                return;\r\n            }\r\n            this.mdf = false;\r\n            this.frameId = this.elem.globalData.frameId;\r\n            var i, len = this.dynamicProperties.length;\r\n\r\n            for(i=0;i<len;i+=1){\r\n                this.dynamicProperties[i].getValue();\r\n                if(this.dynamicProperties[i].mdf){\r\n                    this.mdf = true;\r\n                }\r\n            }\r\n            if(this.mdf){\r\n                this.convertToPath();\r\n            }\r\n        }\r\n\r\n        return function StarShapeProperty(elem,data) {\r\n            /*this.v = {\r\n                v: [],\r\n                i: [],\r\n                o: [],\r\n                c: true\r\n            };*/\r\n            this.v = shape_pool.newShape();\r\n            this.v.setPathData(true, 0);\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.data = data;\r\n            this.frameId = -1;\r\n            this.d = data.d;\r\n            this.dynamicProperties = [];\r\n            this.mdf = false;\r\n            this.getValue = processKeys;\r\n            this.reset = resetShape;\r\n            if(data.sy === 1){\r\n                this.ir = PropertyFactory.getProp(elem,data.ir,0,0,this.dynamicProperties);\r\n                this.is = PropertyFactory.getProp(elem,data.is,0,0.01,this.dynamicProperties);\r\n                this.convertToPath = convertStarToPath;\r\n            } else {\r\n                this.convertToPath = convertPolygonToPath;\r\n            }\r\n            this.pt = PropertyFactory.getProp(elem,data.pt,0,0,this.dynamicProperties);\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this.dynamicProperties);\r\n            this.r = PropertyFactory.getProp(elem,data.r,0,degToRads,this.dynamicProperties);\r\n            this.or = PropertyFactory.getProp(elem,data.or,0,0,this.dynamicProperties);\r\n            this.os = PropertyFactory.getProp(elem,data.os,0,0.01,this.dynamicProperties);\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.paths = this.localShapeCollection;\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.convertToPath();\r\n            }\r\n        }\r\n    }());\r\n\r\n    var RectShapeProperty = (function() {\r\n        function processKeys(frameNum){\r\n            if(this.elem.globalData.frameId === this.frameId){\r\n                return;\r\n            }\r\n            this.mdf = false;\r\n            this.frameId = this.elem.globalData.frameId;\r\n            var i, len = this.dynamicProperties.length;\r\n\r\n            for(i=0;i<len;i+=1){\r\n                this.dynamicProperties[i].getValue(frameNum);\r\n                if(this.dynamicProperties[i].mdf){\r\n                    this.mdf = true;\r\n                }\r\n            }\r\n            if(this.mdf){\r\n                this.convertRectToPath();\r\n            }\r\n\r\n        }\r\n\r\n        function convertRectToPath(){\r\n            var p0 = this.p.v[0], p1 = this.p.v[1], v0 = this.s.v[0]/2, v1 = this.s.v[1]/2;\r\n            var round = bm_min(v0,v1,this.r.v);\r\n            var cPoint = round*(1-roundCorner);\r\n            this.v._length = 0;\r\n\r\n            if(this.d === 2 || this.d === 1) {\r\n                this.v.setTripleAt(p0+v0, p1-v1+round,p0+v0, p1-v1+round,p0+v0,p1-v1+cPoint,0, true);\r\n                this.v.setTripleAt(p0+v0, p1+v1-round,p0+v0, p1+v1-cPoint,p0+v0, p1+v1-round,1, true);\r\n                if(round!== 0){\r\n                    this.v.setTripleAt(p0+v0-round, p1+v1,p0+v0-round,p1+v1,p0+v0-cPoint,p1+v1,2, true);\r\n                    this.v.setTripleAt(p0-v0+round,p1+v1,p0-v0+cPoint,p1+v1,p0-v0+round,p1+v1,3, true);\r\n                    this.v.setTripleAt(p0-v0,p1+v1-round,p0-v0,p1+v1-round,p0-v0,p1+v1-cPoint,4, true);\r\n                    this.v.setTripleAt(p0-v0,p1-v1+round,p0-v0,p1-v1+cPoint,p0-v0,p1-v1+round,5, true);\r\n                    this.v.setTripleAt(p0-v0+round,p1-v1,p0-v0+round,p1-v1,p0-v0+cPoint,p1-v1,6, true);\r\n                    this.v.setTripleAt(p0+v0-round,p1-v1,p0+v0-cPoint,p1-v1,p0+v0-round,p1-v1,7, true);\r\n                } else {\r\n                    this.v.setTripleAt(p0-v0,p1+v1,p0-v0+cPoint,p1+v1,p0-v0,p1+v1,2);\r\n                    this.v.setTripleAt(p0-v0,p1-v1,p0-v0,p1-v1+cPoint,p0-v0,p1-v1,3);\r\n                }\r\n            }else{\r\n                this.v.setTripleAt(p0+v0,p1-v1+round,p0+v0,p1-v1+cPoint,p0+v0,p1-v1+round,0, true);\r\n                if(round!== 0){\r\n                    this.v.setTripleAt(p0+v0-round,p1-v1,p0+v0-round,p1-v1,p0+v0-cPoint,p1-v1,1, true);\r\n                    this.v.setTripleAt(p0-v0+round,p1-v1,p0-v0+cPoint,p1-v1,p0-v0+round,p1-v1,2, true);\r\n                    this.v.setTripleAt(p0-v0,p1-v1+round,p0-v0,p1-v1+round,p0-v0,p1-v1+cPoint,3, true);\r\n                    this.v.setTripleAt(p0-v0,p1+v1-round,p0-v0,p1+v1-cPoint,p0-v0,p1+v1-round,4, true);\r\n                    this.v.setTripleAt(p0-v0+round,p1+v1,p0-v0+round,p1+v1,p0-v0+cPoint,p1+v1,5, true);\r\n                    this.v.setTripleAt(p0+v0-round,p1+v1,p0+v0-cPoint,p1+v1,p0+v0-round,p1+v1,6, true);\r\n                    this.v.setTripleAt(p0+v0,p1+v1-round,p0+v0,p1+v1-round,p0+v0,p1+v1-cPoint,7, true);\r\n                } else {\r\n                    this.v.setTripleAt(p0-v0,p1-v1,p0-v0+cPoint,p1-v1,p0-v0,p1-v1,1, true);\r\n                    this.v.setTripleAt(p0-v0,p1+v1,p0-v0,p1+v1-cPoint,p0-v0,p1+v1,2, true);\r\n                    this.v.setTripleAt(p0+v0,p1+v1,p0+v0-cPoint,p1+v1,p0+v0,p1+v1,3, true);\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        return function RectShapeProperty(elem,data) {\r\n            this.v = shape_pool.newShape();\r\n            this.v.c = true;\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.paths = this.localShapeCollection;\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.frameId = -1;\r\n            this.d = data.d;\r\n            this.dynamicProperties = [];\r\n            this.mdf = false;\r\n            this.getValue = processKeys;\r\n            this.convertRectToPath = convertRectToPath;\r\n            this.reset = resetShape;\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this.dynamicProperties);\r\n            this.s = PropertyFactory.getProp(elem,data.s,1,0,this.dynamicProperties);\r\n            this.r = PropertyFactory.getProp(elem,data.r,0,0,this.dynamicProperties);\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.convertRectToPath();\r\n            }\r\n        }\r\n    }());\r\n\r\n    function getShapeProp(elem,data,type, arr){\r\n        var prop;\r\n        if(type === 3 || type === 4){\r\n            var dataProp = type === 3 ? data.pt : data.ks;\r\n            var keys = dataProp.k;\r\n            if(dataProp.a === 1 || keys.length){\r\n                prop = new KeyframedShapeProperty(elem, data, type);\r\n            }else{\r\n                prop = new ShapeProperty(elem, data, type);\r\n            }\r\n        }else if(type === 5){\r\n            prop = new RectShapeProperty(elem, data);\r\n        }else if(type === 6){\r\n            prop = new EllShapeProperty(elem, data);\r\n        }else if(type === 7){\r\n            prop = new StarShapeProperty(elem, data);\r\n        }\r\n        if(prop.k){\r\n            arr.push(prop);\r\n        }\r\n        return prop;\r\n    }\r\n\r\n    function getConstructorFunction() {\r\n        return ShapeProperty;\r\n    }\r\n\r\n    function getKeyframedConstructorFunction() {\r\n        return KeyframedShapeProperty;\r\n    }\r\n\r\n    var ob = {};\r\n    ob.getShapeProp = getShapeProp;\r\n    ob.getConstructorFunction = getConstructorFunction;\r\n    ob.getKeyframedConstructorFunction = getKeyframedConstructorFunction;\r\n    return ob;\r\n}());\nvar ShapeModifiers = (function(){\r\n    var ob = {};\r\n    var modifiers = {};\r\n    ob.registerModifier = registerModifier;\r\n    ob.getModifier = getModifier;\r\n\r\n    function registerModifier(nm,factory){\r\n        if(!modifiers[nm]){\r\n            modifiers[nm] = factory;\r\n        }\r\n    }\r\n\r\n    function getModifier(nm,elem, data, dynamicProperties){\r\n        return new modifiers[nm](elem, data, dynamicProperties);\r\n    }\r\n\r\n    return ob;\r\n}());\r\n\r\nfunction ShapeModifier(){}\r\nShapeModifier.prototype.initModifierProperties = function(){};\r\nShapeModifier.prototype.addShapeToModifier = function(){};\r\nShapeModifier.prototype.addShape = function(data){\r\n    if(!this.closed){\r\n        this.shapes.push({shape:data.sh, data: data, localShapeCollection:shapeCollection_pool.newShapeCollection()});\r\n        this.addShapeToModifier(data.sh);\r\n    }\r\n}\r\nShapeModifier.prototype.init = function(elem,data,dynamicProperties){\r\n    this.elem = elem;\r\n    this.frameId = -1;\r\n    this.shapes = [];\r\n    this.dynamicProperties = [];\r\n    this.mdf = false;\r\n    this.closed = false;\r\n    this.k = false;\r\n    this.comp = elem.comp;\r\n    this.initModifierProperties(elem,data);\r\n    if(this.dynamicProperties.length){\r\n        this.k = true;\r\n        dynamicProperties.push(this);\r\n    }else{\r\n        this.getValue(true);\r\n    }\r\n}\nfunction TrimModifier(){};\r\nextendPrototype(ShapeModifier,TrimModifier);\r\nTrimModifier.prototype.processKeys = function(forceRender){\r\n    if(this.elem.globalData.frameId === this.frameId && !forceRender){\r\n        return;\r\n    }\r\n    this.mdf = forceRender ? true : false;\r\n    this.frameId = this.elem.globalData.frameId;\r\n    var i, len = this.dynamicProperties.length;\r\n\r\n    for(i=0;i<len;i+=1){\r\n        this.dynamicProperties[i].getValue();\r\n        if(this.dynamicProperties[i].mdf){\r\n            this.mdf = true;\r\n        }\r\n    }\r\n    if(this.mdf || forceRender){\r\n        var o = (this.o.v%360)/360;\r\n        if(o < 0){\r\n            o += 1;\r\n        }\r\n        var s = this.s.v + o;\r\n        var e = this.e.v + o;\r\n        if(s == e){\r\n\r\n        }\r\n        if(s>e){\r\n            var _s = s;\r\n            s = e;\r\n            e = _s;\r\n        }\r\n        this.sValue = s;\r\n        this.eValue = e;\r\n        this.oValue = o;\r\n    }\r\n}\r\nTrimModifier.prototype.initModifierProperties = function(elem,data){\r\n    this.sValue = 0;\r\n    this.eValue = 0;\r\n    this.oValue = 0;\r\n    this.getValue = this.processKeys;\r\n    this.s = PropertyFactory.getProp(elem,data.s,0,0.01,this.dynamicProperties);\r\n    this.e = PropertyFactory.getProp(elem,data.e,0,0.01,this.dynamicProperties);\r\n    this.o = PropertyFactory.getProp(elem,data.o,0,0,this.dynamicProperties);\r\n    this.m = data.m;\r\n    if(!this.dynamicProperties.length){\r\n        this.getValue(true);\r\n    }\r\n};\r\n\r\nTrimModifier.prototype.calculateShapeEdges = function(s, e, shapeLength, addedLength, totalModifierLength) {\r\n    var segments = []\r\n    if(e <= 1){\r\n        segments.push({\r\n            s: s,\r\n            e: e\r\n        })\r\n    }else if(s >= 1){\r\n        segments.push({\r\n            s: s - 1,\r\n            e: e - 1\r\n        })\r\n    }else{\r\n        segments.push({\r\n            s: s,\r\n            e: 1\r\n        })\r\n        segments.push({\r\n            s: 0,\r\n            e: e - 1\r\n        })\r\n    }\r\n    var shapeSegments = [];\r\n    var i, len = segments.length, segmentOb;\r\n    for(i = 0; i < len; i += 1) {\r\n        segmentOb = segments[i];\r\n        if (segmentOb.e * totalModifierLength < addedLength || segmentOb.s * totalModifierLength > addedLength + shapeLength) {\r\n            \r\n        } else {\r\n            var shapeS, shapeE;\r\n            if(segmentOb.s * totalModifierLength <= addedLength) {\r\n                shapeS = 0;\r\n            } else {\r\n                shapeS = (segmentOb.s * totalModifierLength - addedLength) / shapeLength;\r\n            }\r\n            if(segmentOb.e * totalModifierLength >= addedLength + shapeLength) {\r\n                shapeE = 1;\r\n            } else {\r\n                shapeE = ((segmentOb.e * totalModifierLength - addedLength) / shapeLength);\r\n            }\r\n            shapeSegments.push([shapeS, shapeE]);\r\n        }\r\n    }\r\n    if(!shapeSegments.length){\r\n        shapeSegments.push([0,0]);\r\n    }\r\n    return shapeSegments;\r\n}\r\n\r\nTrimModifier.prototype.processShapes = function(firstFrame){\r\n    var shapePaths;\r\n    var i, len = this.shapes.length;\r\n    var j, jLen;\r\n    var s = this.sValue;\r\n    var e = this.eValue;\r\n    var pathsData,pathData, totalShapeLength, totalModifierLength = 0;\r\n\r\n    if(e === s){\r\n        for(i=0;i<len;i+=1){\r\n            this.shapes[i].localShapeCollection.releaseShapes();\r\n            this.shapes[i].shape.mdf = true;\r\n            this.shapes[i].shape.paths = this.shapes[i].localShapeCollection;\r\n        }\r\n    } else if(!((e === 1 && s === 0) || (e===0 && s === 1))){\r\n        var segments = [], shapeData, localShapeCollection;\r\n        for(i=0;i<len;i+=1){\r\n            shapeData = this.shapes[i];\r\n            if(!shapeData.shape.mdf && !this.mdf && !firstFrame && this.m !== 2){\r\n                shapeData.shape.paths = shapeData.localShapeCollection;\r\n            } else {\r\n                shapePaths = shapeData.shape.paths;\r\n                jLen = shapePaths._length;\r\n                totalShapeLength = 0;\r\n                if(!shapeData.shape.mdf && shapeData.pathsData){\r\n                    totalShapeLength = shapeData.totalShapeLength;\r\n                } else {\r\n                    pathsData = [];\r\n                    for(j=0;j<jLen;j+=1){\r\n                        pathData = bez.getSegmentsLength(shapePaths.shapes[j]);\r\n                        pathsData.push(pathData);\r\n                        totalShapeLength += pathData.totalLength;\r\n                    }\r\n                    shapeData.totalShapeLength = totalShapeLength;\r\n                    shapeData.pathsData = pathsData;\r\n                }\r\n\r\n                totalModifierLength += totalShapeLength;\r\n                shapeData.shape.mdf = true;\r\n            }\r\n        }\r\n        var shapeS = s, shapeE = e, addedLength = 0;\r\n        var j, jLen;\r\n        for(i = len - 1; i >= 0; i -= 1){\r\n            shapeData = this.shapes[i];\r\n            if (shapeData.shape.mdf) {\r\n                localShapeCollection = shapeData.localShapeCollection;\r\n                localShapeCollection.releaseShapes();\r\n                if(this.m === 2 && len > 1) {\r\n                    var edges = this.calculateShapeEdges(s, e, shapeData.totalShapeLength, addedLength, totalModifierLength);\r\n                    addedLength += shapeData.totalShapeLength;\r\n                } else {\r\n                    edges = [[shapeS, shapeE]]\r\n                }\r\n                jLen = edges.length;\r\n                for (j = 0; j < jLen; j += 1) {\r\n                    shapeS = edges[j][0];\r\n                    shapeE = edges[j][1];\r\n                    segments.length = 0;\r\n                    if(shapeE <= 1){\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * shapeS,\r\n                            e:shapeData.totalShapeLength * shapeE\r\n                        })\r\n                    }else if(shapeS >= 1){\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * (shapeS - 1),\r\n                            e:shapeData.totalShapeLength * (shapeE - 1)\r\n                        })\r\n                    }else{\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * shapeS,\r\n                            e:shapeData.totalShapeLength\r\n                        })\r\n                        segments.push({\r\n                            s:0,\r\n                            e:shapeData.totalShapeLength*(shapeE - 1)\r\n                        })\r\n                    }\r\n                    var newShapesData = this.addShapes(shapeData,segments[0]);\r\n                    if (segments[0].s !== segments[0].e) {\r\n                        var lastPos;\r\n                        if(segments.length > 1){\r\n                            if(shapeData.shape.v.c){\r\n                                var lastShape = newShapesData.pop();\r\n                                this.addPaths(newShapesData, localShapeCollection);\r\n                                newShapesData = this.addShapes(shapeData,segments[1], lastShape);\r\n                            } else {\r\n                                this.addPaths(newShapesData, localShapeCollection);\r\n                                newShapesData = this.addShapes(shapeData,segments[1]);\r\n                            }\r\n                        } \r\n                        this.addPaths(newShapesData, localShapeCollection);\r\n                    }\r\n                    \r\n                }\r\n                shapeData.shape.paths = localShapeCollection;\r\n            }\r\n        }\r\n    } else if(this.mdf){\r\n        for(i=0;i<len;i+=1){\r\n            this.shapes[i].shape.mdf = true;\r\n        }\r\n    }\r\n    if(!this.dynamicProperties.length){\r\n        this.mdf = false;\r\n    }\r\n}\r\n\r\nTrimModifier.prototype.addPaths = function(newPaths, localShapeCollection) {\r\n    var i, len = newPaths.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        localShapeCollection.addShape(newPaths[i])\r\n    }\r\n}\r\n\r\nTrimModifier.prototype.addSegment = function(pt1,pt2,pt3,pt4,shapePath,pos, newShape) {\r\n    /*console.log(pt1, 'vertex: v, at: ', pos);\r\n    console.log(pt2, 'vertex: o, at: ', pos);\r\n    console.log(pt3, 'vertex: i, at: ', pos + 1);\r\n    console.log(pt4, 'vertex: v, at: ', pos + 1);\r\n    console.log('newShape: ', newShape);*/\r\n    shapePath.setXYAt(pt2[0],pt2[1],'o',pos);\r\n    shapePath.setXYAt(pt3[0],pt3[1],'i',pos + 1);\r\n    if(newShape){\r\n        shapePath.setXYAt(pt1[0],pt1[1],'v',pos);\r\n    }\r\n    shapePath.setXYAt(pt4[0],pt4[1],'v',pos + 1);\r\n}\r\n\r\nTrimModifier.prototype.addShapes = function(shapeData, shapeSegment, shapePath){\r\n    var pathsData = shapeData.pathsData;\r\n    var shapePaths = shapeData.shape.paths.shapes;\r\n    var i, len = shapeData.shape.paths._length, j, jLen;\r\n    var addedLength = 0;\r\n    var currentLengthData,segmentCount;\r\n    var lengths;\r\n    var segment;\r\n    var shapes = [];\r\n    var initPos;\r\n    var newShape = true;\r\n    if(!shapePath){\r\n        shapePath = shape_pool.newShape();\r\n        segmentCount = 0;\r\n        initPos = 0;\r\n    } else {\r\n        segmentCount = shapePath._length;\r\n        initPos = shapePath._length;\r\n    }\r\n    shapes.push(shapePath);\r\n    for(i=0;i<len;i+=1){\r\n        lengths = pathsData[i].lengths;\r\n        shapePath.c = shapePaths[i].c;\r\n        jLen = shapePaths[i].c ? lengths.length : lengths.length + 1;\r\n        for(j=1;j<jLen;j+=1){\r\n            currentLengthData = lengths[j-1];\r\n            if(addedLength + currentLengthData.addedLength < shapeSegment.s){\r\n                addedLength += currentLengthData.addedLength;\r\n                shapePath.c = false;\r\n            } else if(addedLength > shapeSegment.e){\r\n                shapePath.c = false;\r\n                break;\r\n            } else {\r\n                if(shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + currentLengthData.addedLength){\r\n                    this.addSegment(shapePaths[i].v[j-1],shapePaths[i].o[j-1],shapePaths[i].i[j],shapePaths[i].v[j],shapePath,segmentCount,newShape);\r\n                    newShape = false;\r\n                } else {\r\n                    segment = bez.getNewSegment(shapePaths[i].v[j-1],shapePaths[i].v[j],shapePaths[i].o[j-1],shapePaths[i].i[j], (shapeSegment.s - addedLength)/currentLengthData.addedLength,(shapeSegment.e - addedLength)/currentLengthData.addedLength, lengths[j-1]);\r\n                    this.addSegment(segment.pt1,segment.pt3,segment.pt4,segment.pt2,shapePath,segmentCount,newShape);\r\n                    newShape = false;\r\n                    shapePath.c = false;\r\n                }\r\n                addedLength += currentLengthData.addedLength;\r\n                segmentCount += 1;\r\n            }\r\n        }\r\n        if(shapePaths[i].c){\r\n            currentLengthData = lengths[j-1];\r\n            if(addedLength <= shapeSegment.e){\r\n                var segmentLength = lengths[j-1].addedLength;\r\n                if(shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + segmentLength){\r\n                    this.addSegment(shapePaths[i].v[j-1],shapePaths[i].o[j-1],shapePaths[i].i[0],shapePaths[i].v[0],shapePath,segmentCount,newShape);\r\n                    newShape = false;\r\n                }else{\r\n                    segment = bez.getNewSegment(shapePaths[i].v[j-1],shapePaths[i].v[0],shapePaths[i].o[j-1],shapePaths[i].i[0], (shapeSegment.s - addedLength)/segmentLength,(shapeSegment.e - addedLength)/segmentLength, lengths[j-1]);\r\n                    this.addSegment(segment.pt1,segment.pt3,segment.pt4,segment.pt2,shapePath,segmentCount,newShape);\r\n                    newShape = false;\r\n                    shapePath.c = false;\r\n                }\r\n            } else {\r\n                shapePath.c = false;\r\n            }\r\n            addedLength += currentLengthData.addedLength;\r\n            segmentCount += 1;\r\n        }\r\n        if(shapePath._length){\r\n            shapePath.setXYAt(shapePath.v[initPos][0],shapePath.v[initPos][1],'i',initPos);\r\n            shapePath.setXYAt(shapePath.v[shapePath._length - 1][0],shapePath.v[shapePath._length - 1][1],'o',shapePath._length - 1);\r\n        }\r\n        if(addedLength > shapeSegment.e){\r\n            break;\r\n        }\r\n        if(i<len-1){\r\n            shapePath = shape_pool.newShape();\r\n            newShape = true;\r\n            shapes.push(shapePath);\r\n            segmentCount = 0;\r\n        }\r\n    }\r\n    return shapes;\r\n\r\n}\r\n\r\n\r\nShapeModifiers.registerModifier('tm',TrimModifier);\nfunction RoundCornersModifier(){};\r\nextendPrototype(ShapeModifier,RoundCornersModifier);\r\nRoundCornersModifier.prototype.processKeys = function(forceRender){\r\n    if(this.elem.globalData.frameId === this.frameId && !forceRender){\r\n        return;\r\n    }\r\n    this.mdf = forceRender ? true : false;\r\n    this.frameId = this.elem.globalData.frameId;\r\n    var i, len = this.dynamicProperties.length;\r\n\r\n    for(i=0;i<len;i+=1){\r\n        this.dynamicProperties[i].getValue();\r\n        if(this.dynamicProperties[i].mdf){\r\n            this.mdf = true;\r\n        }\r\n    }\r\n}\r\nRoundCornersModifier.prototype.initModifierProperties = function(elem,data){\r\n    this.getValue = this.processKeys;\r\n    this.rd = PropertyFactory.getProp(elem,data.r,0,null,this.dynamicProperties);\r\n    if(!this.dynamicProperties.length){\r\n        this.getValue(true);\r\n    }\r\n};\r\n\r\nRoundCornersModifier.prototype.processPath = function(path, round){\r\n    var cloned_path = shape_pool.newShape();\r\n    cloned_path.c = path.c;\r\n    var i, len = path._length;\r\n    var currentV,currentI,currentO,closerV, newV,newO,newI,distance,newPosPerc,index = 0;\r\n    var vX,vY,oX,oY,iX,iY;\r\n    for(i=0;i<len;i+=1){\r\n        currentV = path.v[i];\r\n        currentO = path.o[i];\r\n        currentI = path.i[i];\r\n        if(currentV[0]===currentO[0] && currentV[1]===currentO[1] && currentV[0]===currentI[0] && currentV[1]===currentI[1]){\r\n            if((i===0 || i === len - 1) && !path.c){\r\n                cloned_path.setTripleAt(currentV[0],currentV[1],currentO[0],currentO[1],currentI[0],currentI[1],index);\r\n                /*cloned_path.v[index] = currentV;\r\n                cloned_path.o[index] = currentO;\r\n                cloned_path.i[index] = currentI;*/\r\n                index += 1;\r\n            } else {\r\n                if(i===0){\r\n                    closerV = path.v[len-1];\r\n                } else {\r\n                    closerV = path.v[i-1];\r\n                }\r\n                distance = Math.sqrt(Math.pow(currentV[0]-closerV[0],2)+Math.pow(currentV[1]-closerV[1],2));\r\n                newPosPerc = distance ? Math.min(distance/2,round)/distance : 0;\r\n                vX = iX = currentV[0]+(closerV[0]-currentV[0])*newPosPerc;\r\n                vY = iY = currentV[1]-(currentV[1]-closerV[1])*newPosPerc;\r\n                oX = vX-(vX-currentV[0])*roundCorner;\r\n                oY = vY-(vY-currentV[1])*roundCorner;\r\n                cloned_path.setTripleAt(vX,vY,oX,oY,iX,iY,index);\r\n                index += 1;\r\n\r\n                if(i === len - 1){\r\n                    closerV = path.v[0];\r\n                } else {\r\n                    closerV = path.v[i+1];\r\n                }\r\n                distance = Math.sqrt(Math.pow(currentV[0]-closerV[0],2)+Math.pow(currentV[1]-closerV[1],2));\r\n                newPosPerc = distance ? Math.min(distance/2,round)/distance : 0;\r\n                vX = oX = currentV[0]+(closerV[0]-currentV[0])*newPosPerc;\r\n                vY = oY = currentV[1]+(closerV[1]-currentV[1])*newPosPerc;\r\n                iX = vX-(vX-currentV[0])*roundCorner;\r\n                iY = vY-(vY-currentV[1])*roundCorner;\r\n                cloned_path.setTripleAt(vX,vY,oX,oY,iX,iY,index);\r\n                index += 1;\r\n            }\r\n        } else {\r\n            cloned_path.setTripleAt(path.v[i][0],path.v[i][1],path.o[i][0],path.o[i][1],path.i[i][0],path.i[i][1],index);\r\n            index += 1;\r\n        }\r\n    }\r\n    return cloned_path;\r\n}\r\n\r\nRoundCornersModifier.prototype.processShapes = function(firstFrame){\r\n    var shapePaths;\r\n    var i, len = this.shapes.length;\r\n    var j, jLen;\r\n    var rd = this.rd.v;\r\n\r\n    if(rd !== 0){\r\n        var shapeData, newPaths, localShapeCollection;\r\n        for(i=0;i<len;i+=1){\r\n            shapeData = this.shapes[i];\r\n            newPaths = shapeData.shape.paths;\r\n            localShapeCollection = shapeData.localShapeCollection;\r\n            if(!(!shapeData.shape.mdf && !this.mdf && !firstFrame)){\r\n                localShapeCollection.releaseShapes();\r\n                shapeData.shape.mdf = true;\r\n                shapePaths = shapeData.shape.paths.shapes;\r\n                jLen = shapeData.shape.paths._length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    localShapeCollection.addShape(this.processPath(shapePaths[j],rd));\r\n                }\r\n            }\r\n            shapeData.shape.paths = shapeData.localShapeCollection;\r\n        }\r\n\r\n    }\r\n    if(!this.dynamicProperties.length){\r\n        this.mdf = false;\r\n    }\r\n}\r\n\r\n\r\nShapeModifiers.registerModifier('rd',RoundCornersModifier);\nfunction RepeaterModifier(){};\r\nRepeaterModifier.prototype.processKeys = function(forceRender){\r\n    if(this.elem.globalData.frameId === this.frameId && !forceRender){\r\n        return;\r\n    }\r\n    this.mdf = forceRender ? true : false;\r\n    var i, len = this.dynamicProperties.length;\r\n\r\n    for(i=0;i<len;i+=1){\r\n        this.dynamicProperties[i].getValue();\r\n        if(this.dynamicProperties[i].mdf){\r\n            this.mdf = true;\r\n        }\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.initModifierProperties = function(elem,data){\r\n    this.getValue = this.processKeys;\r\n    this.c = PropertyFactory.getProp(elem,data.c,0,null,this.dynamicProperties);\r\n    this.o = PropertyFactory.getProp(elem,data.o,0,null,this.dynamicProperties);\r\n    this.tr = PropertyFactory.getProp(elem,data.tr,2,null,this.dynamicProperties);\r\n    this.data = data;\r\n    if(!this.dynamicProperties.length){\r\n        this.getValue(true);\r\n    }\r\n    this.pMatrix = new Matrix();\r\n    this.rMatrix = new Matrix();\r\n    this.sMatrix = new Matrix();\r\n    this.tMatrix = new Matrix();\r\n    this.matrix = new Matrix();\r\n};\r\n\r\nRepeaterModifier.prototype.applyTransforms = function(pMatrix, rMatrix, sMatrix, transform, perc, inv){\r\n    var dir = inv ? -1 : 1;\r\n    var scaleX = transform.s.v[0] + (1 - transform.s.v[0]) * (1 - perc);\r\n    var scaleY = transform.s.v[1] + (1 - transform.s.v[1]) * (1 - perc);\r\n    pMatrix.translate(transform.p.v[0] * dir * perc, transform.p.v[1] * dir * perc, transform.p.v[2]);\r\n    rMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\r\n    rMatrix.rotate(-transform.r.v * dir * perc);\r\n    rMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\r\n    sMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\r\n    sMatrix.scale(inv ? 1/scaleX : scaleX, inv ? 1/scaleY : scaleY);\r\n    sMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\r\n}\r\n\r\nRepeaterModifier.prototype.init = function(elem, arr, pos, elemsData, dynamicProperties) {\r\n    this.elem = elem;\r\n    this.arr = arr;\r\n    this.pos = pos;\r\n    this.elemsData = elemsData;\r\n    this._currentCopies = 0;\r\n    this._elements = [];\r\n    this._groups = [];\r\n    this.dynamicProperties = [];\r\n    this.frameId = -1;\r\n    this.initModifierProperties(elem,arr[pos]);\r\n    var cont = 0;\r\n    while(pos>0){\r\n        pos -= 1;\r\n        //this._elements.unshift(arr.splice(pos,1)[0]);\r\n        this._elements.unshift(arr[pos]);\r\n        cont += 1;\r\n    }\r\n    if(this.dynamicProperties.length){\r\n        this.k = true;\r\n        dynamicProperties.push(this);\r\n    }else{\r\n        this.getValue(true);\r\n    }\r\n}\r\n\r\nRepeaterModifier.prototype.resetElements = function(elements){\r\n    var i, len = elements.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        elements[i]._processed = false;\r\n        if(elements[i].ty === 'gr'){\r\n            this.resetElements(elements[i].it);\r\n        }\r\n    }\r\n}\r\n\r\nRepeaterModifier.prototype.cloneElements = function(elements){\r\n    var i, len = elements.length;\r\n    var newElements = JSON.parse(JSON.stringify(elements));\r\n    this.resetElements(newElements);\r\n    return newElements;\r\n}\r\n\r\nRepeaterModifier.prototype.changeGroupRender = function(elements, renderFlag) {\r\n    var i, len = elements.length;\r\n    for(i = 0; i < len ; i += 1) {\r\n        elements[i]._render = renderFlag;\r\n        if(elements[i].ty === 'gr') {\r\n            this.changeGroupRender(elements[i].it, renderFlag);\r\n        }\r\n    }\r\n}\r\n\r\nRepeaterModifier.prototype.processShapes = function(firstFrame){\r\n\r\n    if(this.elem.globalData.frameId === this.frameId){\r\n        return;\r\n    }\r\n    this.frameId = this.elem.globalData.frameId;\r\n    if(!this.dynamicProperties.length && !firstFrame){\r\n        this.mdf = false;\r\n    }\r\n    if(this.mdf){\r\n        var copies = Math.ceil(this.c.v);\r\n        if(this._groups.length < copies){\r\n            while(this._groups.length < copies){\r\n                var group = {\r\n                    it:this.cloneElements(this._elements),\r\n                    ty:'gr'\r\n                }\r\n                group.it.push({\"a\":{\"a\":0,\"ix\":1,\"k\":[0,0]},\"nm\":\"Transform\",\"o\":{\"a\":0,\"ix\":7,\"k\":100},\"p\":{\"a\":0,\"ix\":2,\"k\":[0,0]},\"r\":{\"a\":0,\"ix\":6,\"k\":0},\"s\":{\"a\":0,\"ix\":3,\"k\":[100,100]},\"sa\":{\"a\":0,\"ix\":5,\"k\":0},\"sk\":{\"a\":0,\"ix\":4,\"k\":0},\"ty\":\"tr\"});\r\n                \r\n                this.arr.splice(0,0,group);\r\n                this._groups.splice(0,0,group);\r\n                this._currentCopies += 1;\r\n            }\r\n            this.elem.reloadShapes();\r\n        }\r\n        var i, cont = 0, renderFlag;\r\n        for(i = 0; i  <= this._groups.length - 1; i += 1){\r\n            renderFlag = cont < copies;\r\n            this._groups[i]._render = renderFlag;\r\n            this.changeGroupRender(this._groups[i].it, renderFlag);\r\n            cont += 1;\r\n        }\r\n        \r\n        this._currentCopies = copies;\r\n        this.elem.firstFrame = true;\r\n        ////\r\n\r\n        var offset = this.o.v;\r\n        var offsetModulo = offset%1;\r\n        var roundOffset = offset > 0 ? Math.floor(offset) : Math.ceil(offset);\r\n        var k;\r\n        var tMat = this.tr.v.props;\r\n        var pProps = this.pMatrix.props;\r\n        var rProps = this.rMatrix.props;\r\n        var sProps = this.sMatrix.props;\r\n        this.pMatrix.reset();\r\n        this.rMatrix.reset();\r\n        this.sMatrix.reset();\r\n        this.tMatrix.reset();\r\n        this.matrix.reset();\r\n        var iteration = 0;\r\n\r\n        if(offset > 0) {\r\n            while(iteration<roundOffset){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\r\n                iteration += 1;\r\n            }\r\n            if(offsetModulo){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, offsetModulo, false);\r\n                iteration += offsetModulo;\r\n            }\r\n        } else if(offset < 0) {\r\n            while(iteration>roundOffset){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, true);\r\n                iteration -= 1;\r\n            }\r\n            if(offsetModulo){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, - offsetModulo, true);\r\n                iteration -= offsetModulo;\r\n            }\r\n        }\r\n        i = this.data.m === 1 ? 0 : this._currentCopies - 1;\r\n        var dir = this.data.m === 1 ? 1 : -1;\r\n        cont = this._currentCopies;\r\n        while(cont){\r\n            if(iteration !== 0){\r\n                if((i !== 0 && dir === 1) || (i !== this._currentCopies - 1 && dir === -1)){\r\n                    this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\r\n                }\r\n                this.matrix.transform(rProps[0],rProps[1],rProps[2],rProps[3],rProps[4],rProps[5],rProps[6],rProps[7],rProps[8],rProps[9],rProps[10],rProps[11],rProps[12],rProps[13],rProps[14],rProps[15]);\r\n                this.matrix.transform(sProps[0],sProps[1],sProps[2],sProps[3],sProps[4],sProps[5],sProps[6],sProps[7],sProps[8],sProps[9],sProps[10],sProps[11],sProps[12],sProps[13],sProps[14],sProps[15]);\r\n                this.matrix.transform(pProps[0],pProps[1],pProps[2],pProps[3],pProps[4],pProps[5],pProps[6],pProps[7],pProps[8],pProps[9],pProps[10],pProps[11],pProps[12],pProps[13],pProps[14],pProps[15]);\r\n                var items = this.elemsData[i].it;\r\n                var itemsTransform = items[items.length - 1].transform.mProps.v.props;\r\n                var j, jLen = itemsTransform.length;\r\n                for(j=0;j<jLen;j+=1) {\r\n                    itemsTransform[j] = this.matrix.props[j];\r\n                }\r\n                this.matrix.reset();\r\n            } else {\r\n                this.matrix.reset();\r\n                var items = this.elemsData[i].it;\r\n                var itemsTransform = items[items.length - 1].transform.mProps.v.props;\r\n                var j, jLen = itemsTransform.length;\r\n                for(j=0;j<jLen;j+=1) {\r\n                    itemsTransform[j] = this.matrix.props[j];\r\n                }\r\n            }\r\n            iteration += 1;\r\n            cont -= 1;\r\n            i += dir;\r\n        }\r\n    }\r\n}\r\n\r\nRepeaterModifier.prototype.addShape = function(){}\r\n\r\nShapeModifiers.registerModifier('rp',RepeaterModifier);\nfunction ShapeCollection(){\r\n\tthis._length = 0;\r\n\tthis._maxLength = 4;\r\n\tthis.shapes = Array.apply(null,{length:this._maxLength});\r\n};\r\n\r\nShapeCollection.prototype.addShape = function(shapeData){\r\n\tif(this._length === this._maxLength){\r\n\t\tthis.shapes = this.shapes.concat(Array.apply(null,{length:this._maxLength}));\r\n\t\tthis._maxLength *= 2;\r\n\t}\r\n\tthis.shapes[this._length] = shapeData;\r\n\tthis._length += 1;\r\n};\r\n\r\nShapeCollection.prototype.releaseShapes = function(){\r\n\tvar i;\r\n\tfor(i = 0; i < this._length; i += 1) {\r\n\t\tshape_pool.release(this.shapes[i]);\r\n\t}\r\n\tthis._length = 0;\r\n};\nvar ImagePreloader = (function(){\r\n\r\n    var imagesLoadedCb;\r\n\r\n    function imageLoaded(){\r\n        this.loadedAssets += 1;\r\n        if(this.loadedAssets === this.totalImages){\r\n            if(imagesLoadedCb) {\r\n                imagesLoadedCb(null);\r\n            }\r\n        }\r\n    }\r\n\r\n    function getAssetsPath(assetData){\r\n        var path = '';\r\n        if(this.assetsPath){\r\n            var imagePath = assetData.p;\r\n            if(imagePath.indexOf('images/') !== -1){\r\n                imagePath = imagePath.split('/')[1];\r\n            }\r\n            path = this.assetsPath + imagePath;\r\n        } else {\r\n            path = this.path;\r\n            path += assetData.u ? assetData.u : '';\r\n            path += assetData.p;\r\n        }\r\n        return path;\r\n    }\r\n\r\n    function loadImage(path){\r\n        var img = document.createElement('img');\r\n        img.addEventListener('load', imageLoaded.bind(this), false);\r\n        img.addEventListener('error', imageLoaded.bind(this), false);\r\n        img.src = path;\r\n    }\r\n    function loadAssets(assets, cb){\r\n        imagesLoadedCb = cb;\r\n        this.totalAssets = assets.length;\r\n        var i;\r\n        for(i=0;i<this.totalAssets;i+=1){\r\n            if(!assets[i].layers){\r\n                loadImage.bind(this)(getAssetsPath.bind(this)(assets[i]));\r\n                this.totalImages += 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    function setPath(path){\r\n        this.path = path || '';\r\n    }\r\n\r\n    function setAssetsPath(path){\r\n        this.assetsPath = path || '';\r\n    }\r\n\r\n    return function ImagePreloader(){\r\n        this.loadAssets = loadAssets;\r\n        this.setAssetsPath = setAssetsPath;\r\n        this.setPath = setPath;\r\n        this.assetsPath = '';\r\n        this.path = '';\r\n        this.totalAssets = 0;\r\n        this.totalImages = 0;\r\n        this.loadedAssets = 0;\r\n    }\r\n}());\nvar featureSupport = (function(){\r\n\tvar ob = {\r\n\t\tmaskType: true\r\n\t}\r\n\tif (/MSIE 10/i.test(navigator.userAgent) || /MSIE 9/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /Edge\\/\\d./i.test(navigator.userAgent)) {\r\n\t   ob.maskType = false;\r\n\t}\r\n\treturn ob;\r\n}());\nvar filtersFactory = (function(){\r\n\tvar ob = {};\r\n\tob.createFilter = createFilter;\r\n\tob.createAlphaToLuminanceFilter = createAlphaToLuminanceFilter;\r\n\r\n\tfunction createFilter(filId){\r\n        \tvar fil = document.createElementNS(svgNS,'filter');\r\n        \tfil.setAttribute('id',filId);\r\n                fil.setAttribute('filterUnits','objectBoundingBox');\r\n                fil.setAttribute('x','0%');\r\n                fil.setAttribute('y','0%');\r\n                fil.setAttribute('width','100%');\r\n                fil.setAttribute('height','100%');\r\n                return fil;\r\n\t}\r\n\r\n\tfunction createAlphaToLuminanceFilter(){\r\n                var feColorMatrix = document.createElementNS(svgNS,'feColorMatrix');\r\n                feColorMatrix.setAttribute('type','matrix');\r\n                feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n                feColorMatrix.setAttribute('values','0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1');\r\n                return feColorMatrix;\r\n\t}\r\n\r\n\treturn ob;\r\n}())\nfunction TextAnimatorProperty(textData, renderType, elem){\r\n    this.mdf = false;\r\n    this._firstFrame = true;\r\n\tthis._hasMaskedPath = false;\r\n\tthis._frameId = -1;\r\n\tthis._dynamicProperties = [];\r\n\tthis._textData = textData;\r\n\tthis._renderType = renderType;\r\n\tthis._elem = elem;\r\n\tthis._animatorsData = Array.apply(null,{length:this._textData.a.length});\r\n\tthis._pathData = {}\r\n\tthis._moreOptions = {\r\n\t\talignment: {}\r\n\t};\r\n\tthis.renderedLetters = [];\r\n    this.lettersChangedFlag = false;\r\n\r\n}\r\n\r\nTextAnimatorProperty.prototype.searchProperties = function(dynamicProperties){\r\n    var i, len = this._textData.a.length, animatorData, animatorProps;\r\n    var getProp = PropertyFactory.getProp;\r\n    for(i=0;i<len;i+=1){\r\n        animatorProps = this._textData.a[i];\r\n        animatorData = {\r\n            a: {},\r\n            s: {}\r\n        };\r\n        if('r' in animatorProps.a) {\r\n            animatorData.a.r = getProp(this._elem,animatorProps.a.r,0,degToRads,this._dynamicProperties);\r\n        }\r\n        if('rx' in animatorProps.a) {\r\n            animatorData.a.rx = getProp(this._elem,animatorProps.a.rx,0,degToRads,this._dynamicProperties);\r\n        }\r\n        if('ry' in animatorProps.a) {\r\n            animatorData.a.ry = getProp(this._elem,animatorProps.a.ry,0,degToRads,this._dynamicProperties);\r\n        }\r\n        if('sk' in animatorProps.a) {\r\n            animatorData.a.sk = getProp(this._elem,animatorProps.a.sk,0,degToRads,this._dynamicProperties);\r\n        }\r\n        if('sa' in animatorProps.a) {\r\n            animatorData.a.sa = getProp(this._elem,animatorProps.a.sa,0,degToRads,this._dynamicProperties);\r\n        }\r\n        if('s' in animatorProps.a) {\r\n            animatorData.a.s = getProp(this._elem,animatorProps.a.s,1,0.01,this._dynamicProperties);\r\n        }\r\n        if('a' in animatorProps.a) {\r\n            animatorData.a.a = getProp(this._elem,animatorProps.a.a,1,0,this._dynamicProperties);\r\n        }\r\n        if('o' in animatorProps.a) {\r\n            animatorData.a.o = getProp(this._elem,animatorProps.a.o,0,0.01,this._dynamicProperties);\r\n        }\r\n        if('p' in animatorProps.a) {\r\n            animatorData.a.p = getProp(this._elem,animatorProps.a.p,1,0,this._dynamicProperties);\r\n        }\r\n        if('sw' in animatorProps.a) {\r\n            animatorData.a.sw = getProp(this._elem,animatorProps.a.sw,0,0,this._dynamicProperties);\r\n        }\r\n        if('sc' in animatorProps.a) {\r\n            animatorData.a.sc = getProp(this._elem,animatorProps.a.sc,1,0,this._dynamicProperties);\r\n        }\r\n        if('fc' in animatorProps.a) {\r\n            animatorData.a.fc = getProp(this._elem,animatorProps.a.fc,1,0,this._dynamicProperties);\r\n        }\r\n        if('fh' in animatorProps.a) {\r\n            animatorData.a.fh = getProp(this._elem,animatorProps.a.fh,0,0,this._dynamicProperties);\r\n        }\r\n        if('fs' in animatorProps.a) {\r\n            animatorData.a.fs = getProp(this._elem,animatorProps.a.fs,0,0.01,this._dynamicProperties);\r\n        }\r\n        if('fb' in animatorProps.a) {\r\n            animatorData.a.fb = getProp(this._elem,animatorProps.a.fb,0,0.01,this._dynamicProperties);\r\n        }\r\n        if('t' in animatorProps.a) {\r\n            animatorData.a.t = getProp(this._elem,animatorProps.a.t,0,0,this._dynamicProperties);\r\n        }\r\n        animatorData.s = PropertyFactory.getTextSelectorProp(this._elem,animatorProps.s,this._dynamicProperties);\r\n        animatorData.s.t = animatorProps.s.t;\r\n        this._animatorsData[i] = animatorData;\r\n    }\r\n    if(this._textData.p && 'm' in this._textData.p){\r\n        this._pathData = {\r\n            f: getProp(this._elem,this._textData.p.f,0,0,this._dynamicProperties),\r\n            l: getProp(this._elem,this._textData.p.l,0,0,this._dynamicProperties),\r\n            r: this._textData.p.r,\r\n            m: this._elem.maskManager.getMaskProperty(this._textData.p.m)\r\n        };\r\n        this._hasMaskedPath = true;\r\n    } else {\r\n        this._hasMaskedPath = false;\r\n    }\r\n    this._moreOptions.alignment = getProp(this._elem,this._textData.m.a,1,0,this._dynamicProperties);\r\n    if(this._dynamicProperties.length) {\r\n    \tdynamicProperties.push(this);\r\n    }\r\n}\r\n\r\nTextAnimatorProperty.prototype.getMeasures = function(documentData, lettersChangedFlag){\r\n    this.lettersChangedFlag = lettersChangedFlag;\r\n    if(!this.mdf && !this._firstFrame && !lettersChangedFlag && (!this._hasMaskedPath || !this._pathData.m.mdf)) {\r\n        return;\r\n    }\r\n    this._firstFrame = false;\r\n    var alignment = this._moreOptions.alignment.v;\r\n    var animators = this._animatorsData;\r\n    var textData = this._textData;\r\n    var matrixHelper = this.mHelper;\r\n    var renderType = this._renderType;\r\n    var renderedLettersCount = this.renderedLetters.length;\r\n    var data = this.data;\r\n    var xPos,yPos;\r\n    var i, len;\r\n    var letters = documentData.l;\r\n    if(this._hasMaskedPath) {\r\n        var mask = this._pathData.m;\r\n        if(!this._pathData.n || this._pathData.mdf){\r\n            var paths = mask.v;\r\n            if(this._pathData.r){\r\n                paths = reversePath(paths);\r\n            }\r\n            var pathInfo = {\r\n                tLength: 0,\r\n                segments: []\r\n            };\r\n            len = paths._length - 1;\r\n            var pathData;\r\n            var totalLength = 0;\r\n            for (i = 0; i < len; i += 1) {\r\n                pathData = {\r\n                    s: paths.v[i],\r\n                    e: paths.v[i + 1],\r\n                    to: [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]],\r\n                    ti: [paths.i[i + 1][0] - paths.v[i + 1][0], paths.i[i + 1][1] - paths.v[i + 1][1]]\r\n                };\r\n                bez.buildBezierData(pathData);\r\n                pathInfo.tLength += pathData.bezierData.segmentLength;\r\n                pathInfo.segments.push(pathData);\r\n                totalLength += pathData.bezierData.segmentLength;\r\n            }\r\n            i = len;\r\n            if (mask.v.c) {\r\n                pathData = {\r\n                    s: paths.v[i],\r\n                    e: paths.v[0],\r\n                    to: [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]],\r\n                    ti: [paths.i[0][0] - paths.v[0][0], paths.i[0][1] - paths.v[0][1]]\r\n                };\r\n                bez.buildBezierData(pathData);\r\n                pathInfo.tLength += pathData.bezierData.segmentLength;\r\n                pathInfo.segments.push(pathData);\r\n                totalLength += pathData.bezierData.segmentLength;\r\n            }\r\n            this._pathData.pi = pathInfo;\r\n        }\r\n        var pathInfo = this._pathData.pi;\r\n\r\n        var currentLength = this._pathData.f.v, segmentInd = 0, pointInd = 1, currentPoint, prevPoint, points;\r\n        var segmentLength = 0, flag = true;\r\n        var segments = pathInfo.segments;\r\n        if (currentLength < 0 && mask.v.c) {\r\n            if (pathInfo.tLength < Math.abs(currentLength)) {\r\n                currentLength = -Math.abs(currentLength) % pathInfo.tLength;\r\n            }\r\n            segmentInd = segments.length - 1;\r\n            points = segments[segmentInd].bezierData.points;\r\n            pointInd = points.length - 1;\r\n            while (currentLength < 0) {\r\n                currentLength += points[pointInd].partialLength;\r\n                pointInd -= 1;\r\n                if (pointInd < 0) {\r\n                    segmentInd -= 1;\r\n                    points = segments[segmentInd].bezierData.points;\r\n                    pointInd = points.length - 1;\r\n                }\r\n            }\r\n\r\n        }\r\n        points = segments[segmentInd].bezierData.points;\r\n        prevPoint = points[pointInd - 1];\r\n        currentPoint = points[pointInd];\r\n        var partialLength = currentPoint.partialLength;\r\n        var perc, tanAngle;\r\n    }\r\n\r\n\r\n    len = letters.length;\r\n    xPos = 0;\r\n    yPos = 0;\r\n    var yOff = documentData.s*1.2*.714;\r\n    var firstLine = true;\r\n    var animatorProps, animatorSelector;\r\n    var j, jLen;\r\n    var letterValue;\r\n\r\n    jLen = animators.length;\r\n    if (lettersChangedFlag) {\r\n        for (j = 0; j < jLen; j += 1) {\r\n            animatorSelector = animators[j].s;\r\n            animatorSelector.getValue(true);\r\n        }\r\n    }\r\n    var lastLetter;\r\n\r\n    var mult, ind = -1, offf, xPathPos, yPathPos;\r\n    var initPathPos = currentLength,initSegmentInd = segmentInd, initPointInd = pointInd, currentLine = -1;\r\n    var elemOpacity;\r\n    var sc,sw,fc,k;\r\n    var lineLength = 0;\r\n    var letterSw,letterSc,letterFc,letterM = '',letterP = this.defaultPropsArray,letterO;\r\n    for( i = 0; i < len; i += 1) {\r\n        matrixHelper.reset();\r\n        elemOpacity = 1;\r\n        if(letters[i].n) {\r\n            xPos = 0;\r\n            yPos += documentData.yOffset;\r\n            yPos += firstLine ? 1 : 0;\r\n            currentLength = initPathPos ;\r\n            firstLine = false;\r\n            lineLength = 0;\r\n            if(this._hasMaskedPath) {\r\n                segmentInd = initSegmentInd;\r\n                pointInd = initPointInd;\r\n                points = segments[segmentInd].bezierData.points;\r\n                prevPoint = points[pointInd - 1];\r\n                currentPoint = points[pointInd];\r\n                partialLength = currentPoint.partialLength;\r\n                segmentLength = 0;\r\n            }\r\n            letterO = letterSw = letterFc = letterM = '';\r\n            letterP = this.defaultPropsArray;\r\n        }else{\r\n            if(this._hasMaskedPath) {\r\n                if(currentLine !== letters[i].line){\r\n                    switch(documentData.j){\r\n                        case 1:\r\n                            currentLength += totalLength - documentData.lineWidths[letters[i].line];\r\n                            break;\r\n                        case 2:\r\n                            currentLength += (totalLength - documentData.lineWidths[letters[i].line])/2;\r\n                            break;\r\n                    }\r\n                    currentLine = letters[i].line;\r\n                }\r\n                if (ind !== letters[i].ind) {\r\n                    if (letters[ind]) {\r\n                        currentLength += letters[ind].extra;\r\n                    }\r\n                    currentLength += letters[i].an / 2;\r\n                    ind = letters[i].ind;\r\n                }\r\n                currentLength += alignment[0] * letters[i].an / 200;\r\n                var animatorOffset = 0;\r\n                for (j = 0; j < jLen; j += 1) {\r\n                    animatorProps = animators[j].a;\r\n                    if ('p' in animatorProps) {\r\n                        animatorSelector = animators[j].s;\r\n                        mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                        if(mult.length){\r\n                            animatorOffset += animatorProps.p.v[0] * mult[0];\r\n                        } else{\r\n                            animatorOffset += animatorProps.p.v[0] * mult;\r\n                        }\r\n\r\n                    }\r\n                    if ('a' in animatorProps) {\r\n                        animatorSelector = animators[j].s;\r\n                        mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                        if(mult.length){\r\n                            animatorOffset += animatorProps.a.v[0] * mult[0];\r\n                        } else{\r\n                            animatorOffset += animatorProps.a.v[0] * mult;\r\n                        }\r\n\r\n                    }\r\n                }\r\n                flag = true;\r\n                while (flag) {\r\n                    if (segmentLength + partialLength >= currentLength + animatorOffset || !points) {\r\n                        perc = (currentLength + animatorOffset - segmentLength) / currentPoint.partialLength;\r\n                        xPathPos = prevPoint.point[0] + (currentPoint.point[0] - prevPoint.point[0]) * perc;\r\n                        yPathPos = prevPoint.point[1] + (currentPoint.point[1] - prevPoint.point[1]) * perc;\r\n                        matrixHelper.translate(-alignment[0]*letters[i].an/200, -(alignment[1] * yOff / 100));\r\n                        flag = false;\r\n                    } else if (points) {\r\n                        segmentLength += currentPoint.partialLength;\r\n                        pointInd += 1;\r\n                        if (pointInd >= points.length) {\r\n                            pointInd = 0;\r\n                            segmentInd += 1;\r\n                            if (!segments[segmentInd]) {\r\n                                if (mask.v.c) {\r\n                                    pointInd = 0;\r\n                                    segmentInd = 0;\r\n                                    points = segments[segmentInd].bezierData.points;\r\n                                } else {\r\n                                    segmentLength -= currentPoint.partialLength;\r\n                                    points = null;\r\n                                }\r\n                            } else {\r\n                                points = segments[segmentInd].bezierData.points;\r\n                            }\r\n                        }\r\n                        if (points) {\r\n                            prevPoint = currentPoint;\r\n                            currentPoint = points[pointInd];\r\n                            partialLength = currentPoint.partialLength;\r\n                        }\r\n                    }\r\n                }\r\n                offf = letters[i].an / 2 - letters[i].add;\r\n                matrixHelper.translate(-offf, 0, 0);\r\n            } else {\r\n                offf = letters[i].an/2 - letters[i].add;\r\n                matrixHelper.translate(-offf,0,0);\r\n\r\n                // Grouping alignment\r\n                matrixHelper.translate(-alignment[0]*letters[i].an/200, -alignment[1]*yOff/100, 0);\r\n            }\r\n\r\n            lineLength += letters[i].l/2;\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if ('t' in animatorProps) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    if(this._hasMaskedPath) {\r\n                        if(mult.length) {\r\n                            currentLength += animatorProps.t*mult[0];\r\n                        } else {\r\n                            currentLength += animatorProps.t*mult;\r\n                        }\r\n                    }else{\r\n                        if(mult.length) {\r\n                            xPos += animatorProps.t.v*mult[0];\r\n                        } else {\r\n                            xPos += animatorProps.t.v*mult;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            lineLength += letters[i].l/2;\r\n            if(documentData.strokeWidthAnim) {\r\n                sw = documentData.sw || 0;\r\n            }\r\n            if(documentData.strokeColorAnim) {\r\n                if(documentData.sc){\r\n                    sc = [documentData.sc[0], documentData.sc[1], documentData.sc[2]];\r\n                }else{\r\n                    sc = [0,0,0];\r\n                }\r\n            }\r\n            if(documentData.fillColorAnim && documentData.fc) {\r\n                fc = [documentData.fc[0], documentData.fc[1], documentData.fc[2]];\r\n            }\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if ('a' in animatorProps) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n\r\n                    if(mult.length){\r\n                        matrixHelper.translate(-animatorProps.a.v[0]*mult[0], -animatorProps.a.v[1]*mult[1], animatorProps.a.v[2]*mult[2]);\r\n                    } else {\r\n                        matrixHelper.translate(-animatorProps.a.v[0]*mult, -animatorProps.a.v[1]*mult, animatorProps.a.v[2]*mult);\r\n                    }\r\n                }\r\n            }\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if ('s' in animatorProps) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    if(mult.length){\r\n                        matrixHelper.scale(1+((animatorProps.s.v[0]-1)*mult[0]),1+((animatorProps.s.v[1]-1)*mult[1]),1);\r\n                    } else {\r\n                        matrixHelper.scale(1+((animatorProps.s.v[0]-1)*mult),1+((animatorProps.s.v[1]-1)*mult),1);\r\n                    }\r\n                }\r\n            }\r\n            for(j=0;j<jLen;j+=1) {\r\n                animatorProps = animators[j].a;\r\n                animatorSelector = animators[j].s;\r\n                mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                if ('sk' in animatorProps) {\r\n                    if(mult.length) {\r\n                        matrixHelper.skewFromAxis(-animatorProps.sk.v * mult[0], animatorProps.sa.v * mult[1]);\r\n                    } else {\r\n                        matrixHelper.skewFromAxis(-animatorProps.sk.v * mult, animatorProps.sa.v * mult);\r\n                    }\r\n                }\r\n                if ('r' in animatorProps) {\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateZ(-animatorProps.r.v * mult[2]);\r\n                    } else {\r\n                        matrixHelper.rotateZ(-animatorProps.r.v * mult);\r\n                    }\r\n                }\r\n                if ('ry' in animatorProps) {\r\n\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateY(animatorProps.ry.v*mult[1]);\r\n                    }else{\r\n                        matrixHelper.rotateY(animatorProps.ry.v*mult);\r\n                    }\r\n                }\r\n                if ('rx' in animatorProps) {\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateX(animatorProps.rx.v*mult[0]);\r\n                    } else {\r\n                        matrixHelper.rotateX(animatorProps.rx.v*mult);\r\n                    }\r\n                }\r\n                if ('o' in animatorProps) {\r\n                    if(mult.length) {\r\n                        elemOpacity += ((animatorProps.o.v)*mult[0] - elemOpacity)*mult[0];\r\n                    } else {\r\n                        elemOpacity += ((animatorProps.o.v)*mult - elemOpacity)*mult;\r\n                    }\r\n                }\r\n                if (documentData.strokeWidthAnim && 'sw' in animatorProps) {\r\n                    if(mult.length) {\r\n                        sw += animatorProps.sw.v*mult[0];\r\n                    } else {\r\n                        sw += animatorProps.sw.v*mult;\r\n                    }\r\n                }\r\n                if (documentData.strokeColorAnim && 'sc' in animatorProps) {\r\n                    for(k=0;k<3;k+=1){\r\n                        if(mult.length) {\r\n                            sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k])*mult[0]\r\n                        } else {\r\n                            sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k])*mult;\r\n                        }\r\n                    }\r\n                }\r\n                if (documentData.fillColorAnim && documentData.fc) {\r\n                    if('fc' in animatorProps){\r\n                        for(k=0;k<3;k+=1){\r\n                            if(mult.length) {\r\n                                fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k])*mult[0];\r\n                            } else {\r\n                                fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k])*mult;\r\n                            }\r\n                        }\r\n                    }\r\n                    if('fh' in animatorProps){\r\n                        if(mult.length) {\r\n                            fc = addHueToRGB(fc,animatorProps.fh.v*mult[0]);\r\n                        } else {\r\n                            fc = addHueToRGB(fc,animatorProps.fh.v*mult);\r\n                        }\r\n                    }\r\n                    if('fs' in animatorProps){\r\n                        if(mult.length) {\r\n                            fc = addSaturationToRGB(fc,animatorProps.fs.v*mult[0]);\r\n                        } else {\r\n                            fc = addSaturationToRGB(fc,animatorProps.fs.v*mult);\r\n                        }\r\n                    }\r\n                    if('fb' in animatorProps){\r\n                        if(mult.length) {\r\n                            fc = addBrightnessToRGB(fc,animatorProps.fb.v*mult[0]);\r\n                        } else {\r\n                            fc = addBrightnessToRGB(fc,animatorProps.fb.v*mult);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n\r\n                if ('p' in animatorProps) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    if(this._hasMaskedPath) {\r\n                        if(mult.length) {\r\n                            matrixHelper.translate(0, animatorProps.p.v[1] * mult[0], -animatorProps.p.v[2] * mult[1]);\r\n                        } else {\r\n                            matrixHelper.translate(0, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\r\n                        }\r\n                    }else{\r\n                        if(mult.length) {\r\n                            matrixHelper.translate(animatorProps.p.v[0] * mult[0], animatorProps.p.v[1] * mult[1], -animatorProps.p.v[2] * mult[2]);\r\n                        } else {\r\n                            matrixHelper.translate(animatorProps.p.v[0] * mult, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(documentData.strokeWidthAnim){\r\n                letterSw = sw < 0 ? 0 : sw;\r\n            }\r\n            if(documentData.strokeColorAnim){\r\n                letterSc = 'rgb('+Math.round(sc[0]*255)+','+Math.round(sc[1]*255)+','+Math.round(sc[2]*255)+')';\r\n            }\r\n            if(documentData.fillColorAnim && documentData.fc){\r\n                letterFc = 'rgb('+Math.round(fc[0]*255)+','+Math.round(fc[1]*255)+','+Math.round(fc[2]*255)+')';\r\n            }\r\n\r\n            if(this._hasMaskedPath) {\r\n                matrixHelper.translate(0,-documentData.ls);\r\n\r\n                matrixHelper.translate(0, alignment[1]*yOff/100 + yPos,0);\r\n                if (textData.p.p) {\r\n                    tanAngle = (currentPoint.point[1] - prevPoint.point[1]) / (currentPoint.point[0] - prevPoint.point[0]);\r\n                    var rot = Math.atan(tanAngle) * 180 / Math.PI;\r\n                    if (currentPoint.point[0] < prevPoint.point[0]) {\r\n                        rot += 180;\r\n                    }\r\n                    matrixHelper.rotate(-rot * Math.PI / 180);\r\n                }\r\n                matrixHelper.translate(xPathPos, yPathPos, 0);\r\n                currentLength -= alignment[0]*letters[i].an/200;\r\n                if(letters[i+1] && ind !== letters[i+1].ind){\r\n                    currentLength += letters[i].an / 2;\r\n                    currentLength += documentData.tr/1000*documentData.s;\r\n                }\r\n            }else{\r\n\r\n                matrixHelper.translate(xPos,yPos,0);\r\n\r\n                if(documentData.ps){\r\n                    //matrixHelper.translate(documentData.ps[0],documentData.ps[1],0);\r\n                    matrixHelper.translate(documentData.ps[0],documentData.ps[1] + documentData.ascent,0);\r\n                }\r\n                switch(documentData.j){\r\n                    case 1:\r\n                        matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]),0,0);\r\n                        break;\r\n                    case 2:\r\n                        matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line])/2,0,0);\r\n                        break;\r\n                }\r\n                matrixHelper.translate(0,-documentData.ls);\r\n                matrixHelper.translate(offf,0,0);\r\n                matrixHelper.translate(alignment[0]*letters[i].an/200,alignment[1]*yOff/100,0);\r\n                xPos += letters[i].l + documentData.tr/1000*documentData.s;\r\n            }\r\n            if(renderType === 'html'){\r\n                letterM = matrixHelper.toCSS();\r\n            }else if(renderType === 'svg'){\r\n                letterM = matrixHelper.to2dCSS();\r\n            }else{\r\n                letterP = [matrixHelper.props[0],matrixHelper.props[1],matrixHelper.props[2],matrixHelper.props[3],matrixHelper.props[4],matrixHelper.props[5],matrixHelper.props[6],matrixHelper.props[7],matrixHelper.props[8],matrixHelper.props[9],matrixHelper.props[10],matrixHelper.props[11],matrixHelper.props[12],matrixHelper.props[13],matrixHelper.props[14],matrixHelper.props[15]];\r\n            }\r\n            letterO = elemOpacity;\r\n        }\r\n\r\n        if(renderedLettersCount <= i) {\r\n            letterValue = new LetterProps(letterO,letterSw,letterSc,letterFc,letterM,letterP);\r\n            this.renderedLetters.push(letterValue);\r\n            renderedLettersCount += 1;\r\n            this.lettersChangedFlag = true;\r\n        } else {\r\n            letterValue = this.renderedLetters[i];\r\n            this.lettersChangedFlag = letterValue.update(letterO, letterSw, letterSc, letterFc, letterM, letterP) || this.lettersChangedFlag;\r\n        }\r\n    }\r\n}\r\n\r\nTextAnimatorProperty.prototype.getValue = function(){\r\n\tif(this._elem.globalData.frameId === this._frameId){\r\n        return;\r\n    }\r\n    this._frameId = this._elem.globalData.frameId;\r\n\tvar i, len = this._dynamicProperties.length;\r\n    this.mdf = false;\r\n\tfor(i = 0; i < len; i += 1) {\r\n\t\tthis._dynamicProperties[i].getValue();\r\n        this.mdf = this._dynamicProperties[i].mdf || this.mdf;\r\n\t}\r\n}\r\n\r\nTextAnimatorProperty.prototype.mHelper = new Matrix();\r\nTextAnimatorProperty.prototype.defaultPropsArray = [];\nfunction LetterProps(o, sw, sc, fc, m, p){\r\n    this.o = o;\r\n    this.sw = sw;\r\n    this.sc = sc;\r\n    this.fc = fc;\r\n    this.m = m;\r\n    this.p = p;\r\n    this.mdf = {\r\n    \to: true,\r\n    \tsw: !!sw,\r\n    \tsc: !!sc,\r\n    \tfc: !!fc,\r\n    \tm: true,\r\n    \tp: true\r\n    };\r\n}\r\n\r\nLetterProps.prototype.update = function(o, sw, sc, fc, m, p) {\r\n\tthis.mdf.o = false;\r\n\tthis.mdf.sw = false;\r\n\tthis.mdf.sc = false;\r\n\tthis.mdf.fc = false;\r\n\tthis.mdf.m = false;\r\n\tthis.mdf.p = false;\r\n\tvar updated = false;\r\n\r\n\tif(this.o !== o) {\r\n\t\tthis.o = o;\r\n\t\tthis.mdf.o = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.sw !== sw) {\r\n\t\tthis.sw = sw;\r\n\t\tthis.mdf.sw = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.sc !== sc) {\r\n\t\tthis.sc = sc;\r\n\t\tthis.mdf.sc = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.fc !== fc) {\r\n\t\tthis.fc = fc;\r\n\t\tthis.mdf.fc = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.m !== m) {\r\n\t\tthis.m = m;\r\n\t\tthis.mdf.m = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(p.length && (this.p[0] !== p[0] || this.p[1] !== p[1] || this.p[4] !== p[4] || this.p[5] !== p[5] || this.p[12] !== p[12] || this.p[13] !== p[13])) {\r\n\t\tthis.p = p;\r\n\t\tthis.mdf.p = true;\r\n\t\tupdated = true;\r\n\t}\r\n\treturn updated;\r\n}\nfunction TextProperty(elem, data, dynamicProperties){\r\n\tthis._frameId = -99999;\r\n\tthis.pv = '';\r\n\tthis.v = '';\r\n\tthis.kf = false;\r\n\tthis.firstFrame = true;\r\n\tthis.mdf = true;\r\n\tthis.data = data;\r\n\tthis.elem = elem;\r\n\tthis.keysIndex = -1;\r\n\tthis.currentData = {\r\n\t\tascent: 0,\r\n        boxWidth: [0,0],\r\n        f: '',\r\n        fStyle: '',\r\n        fWeight: '',\r\n        fc: '',\r\n        j: '',\r\n        justifyOffset: '',\r\n        l: [],\r\n        lh: 0,\r\n        lineWidths: [],\r\n        ls: '',\r\n        of: '',\r\n        s: '',\r\n        sc: '',\r\n        sw: 0,\r\n        t: 0,\r\n        tr: 0,\r\n        fillColorAnim: false,\r\n        strokeColorAnim: false,\r\n        strokeWidthAnim: false,\r\n        yOffset: 0,\r\n        __complete: false\r\n\r\n\t}\r\n\tif(this.searchProperty()) {\r\n\t\tdynamicProperties.push(this);\r\n\t} else {\r\n\t\tthis.getValue(true);\r\n\t}\r\n}\r\n\r\nTextProperty.prototype.setCurrentData = function(data){\r\n\t\tvar currentData = this.currentData;\r\n        currentData.ascent = data.ascent;\r\n        currentData.boxWidth = data.boxWidth ? data.boxWidth : currentData.boxWidth;\r\n        currentData.f = data.f;\r\n        currentData.fStyle = data.fStyle;\r\n        currentData.fWeight = data.fWeight;\r\n        currentData.fc = data.fc;\r\n        currentData.j = data.j;\r\n        currentData.justifyOffset = data.justifyOffset;\r\n        currentData.l = data.l;\r\n        currentData.lh = data.lh;\r\n        currentData.lineWidths = data.lineWidths;\r\n        currentData.ls = data.ls;\r\n        currentData.of = data.of;\r\n        currentData.s = data.s;\r\n        currentData.sc = data.sc;\r\n        currentData.sw = data.sw;\r\n        currentData.t = data.t;\r\n        currentData.tr = data.tr;\r\n        currentData.fillColorAnim = data.fillColorAnim || currentData.fillColorAnim;\r\n        currentData.strokeColorAnim = data.strokeColorAnim || currentData.strokeColorAnim;\r\n        currentData.strokeWidthAnim = data.strokeWidthAnim || currentData.strokeWidthAnim;\r\n        currentData.yOffset = data.yOffset;\r\n        currentData.__complete = false;\r\n}\r\n\r\nTextProperty.prototype.searchProperty = function() {\r\n\tthis.kf = this.data.d.k.length > 1;\r\n\treturn this.kf;\r\n}\r\n\r\nTextProperty.prototype.getValue = function() {\r\n\tthis.mdf = false;\r\n\tvar frameId = this.elem.globalData.frameId;\r\n\tif((frameId === this._frameId || !this.kf) && !this.firstFrame) {\r\n\t\treturn;\r\n\t}\r\n\tvar textKeys = this.data.d.k, textDocumentData;\r\n    var i = 0, len = textKeys.length;\r\n    while(i <= len - 1) {\r\n        textDocumentData = textKeys[i].s;\r\n        if(i === len - 1 || textKeys[i+1].t > frameId){\r\n            break;\r\n        }\r\n        i += 1;\r\n    }\r\n    if(this.keysIndex !== i) {\r\n    \tif(!textDocumentData.__complete) {\r\n            this.completeTextData(textDocumentData);\r\n        }\r\n        this.setCurrentData(textDocumentData);\r\n        this.mdf = this.firstFrame ? false : true;\r\n        this.pv = this.v = this.currentData.t;\r\n        this.keysIndex = i;\r\n    }\r\n\tthis._frameId = frameId;\r\n}\r\n\r\nTextProperty.prototype.completeTextData = function(documentData) {\r\n    documentData.__complete = true;\r\n    var fontManager = this.elem.globalData.fontManager;\r\n    var data = this.data;\r\n    var letters = [];\r\n    var i, len;\r\n    var newLineFlag, index = 0, val;\r\n    var anchorGrouping = data.m.g;\r\n    var currentSize = 0, currentPos = 0, currentLine = 0, lineWidths = [];\r\n    var lineWidth = 0;\r\n    var maxLineWidth = 0;\r\n    var j, jLen;\r\n    var fontData = fontManager.getFontByName(documentData.f);\r\n    var charData, cLength = 0;\r\n    var styles = fontData.fStyle.split(' ');\r\n\r\n    var fWeight = 'normal', fStyle = 'normal';\r\n    len = styles.length;\r\n    var styleName;\r\n    for(i=0;i<len;i+=1){\r\n        styleName = styles[i].toLowerCase();\r\n        switch(styleName) {\r\n            case 'italic':\r\n            fStyle = 'italic';\r\n            break;\r\n            case 'bold':\r\n            fWeight = '700';\r\n            break;\r\n            case 'black':\r\n            fWeight = '900';\r\n            break;\r\n            case 'medium':\r\n            fWeight = '500';\r\n            break;\r\n            case 'regular':\r\n            case 'normal':\r\n            fWeight = '400';\r\n            case 'light':\r\n            case 'thin':\r\n            fWeight = '200';\r\n            break;\r\n        }\r\n    }\r\n    documentData.fWeight = fWeight;\r\n    documentData.fStyle = fStyle;\r\n    len = documentData.t.length;\r\n    var trackingOffset = documentData.tr/1000*documentData.s;\r\n    if(documentData.sz){\r\n        var boxWidth = documentData.sz[0];\r\n        var lastSpaceIndex = -1;\r\n        for(i=0;i<len;i+=1){\r\n            newLineFlag = false;\r\n            if(documentData.t.charAt(i) === ' '){\r\n                lastSpaceIndex = i;\r\n            }else if(documentData.t.charCodeAt(i) === 13){\r\n                lineWidth = 0;\r\n                newLineFlag = true;\r\n            }\r\n            if(fontManager.chars){\r\n                charData = fontManager.getCharData(documentData.t.charAt(i), fontData.fStyle, fontData.fFamily);\r\n                cLength = newLineFlag ? 0 : charData.w*documentData.s/100;\r\n            }else{\r\n                //tCanvasHelper.font = documentData.s + 'px '+ fontData.fFamily;\r\n                cLength = fontManager.measureText(documentData.t.charAt(i), documentData.f, documentData.s);\r\n            }\r\n            if(lineWidth + cLength > boxWidth && documentData.t.charAt(i) !== ' '){\r\n                if(lastSpaceIndex === -1){\r\n                    len += 1;\r\n                } else {\r\n                    i = lastSpaceIndex;\r\n                }\r\n                documentData.t = documentData.t.substr(0,i) + \"\\r\" + documentData.t.substr(i === lastSpaceIndex ? i + 1 : i);\r\n                lastSpaceIndex = -1;\r\n                lineWidth = 0;\r\n            }else {\r\n                lineWidth += cLength;\r\n                lineWidth += trackingOffset;\r\n            }\r\n        }\r\n        len = documentData.t.length;\r\n    }\r\n    lineWidth = - trackingOffset;\r\n    cLength = 0;\r\n    var uncollapsedSpaces = 0;\r\n    var currentChar;\r\n    for (i = 0;i < len ;i += 1) {\r\n        newLineFlag = false;\r\n        currentChar = documentData.t.charAt(i);\r\n        if(currentChar === ' '){\r\n            val = '\\u00A0';\r\n        }else if(currentChar.charCodeAt(0) === 13){\r\n            uncollapsedSpaces = 0;\r\n            lineWidths.push(lineWidth);\r\n            maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\r\n            lineWidth = - 2 * trackingOffset;\r\n            val = '';\r\n            newLineFlag = true;\r\n            currentLine += 1;\r\n        }else{\r\n            val = documentData.t.charAt(i);\r\n        }\r\n        if(fontManager.chars){\r\n            charData = fontManager.getCharData(currentChar, fontData.fStyle, fontManager.getFontByName(documentData.f).fFamily);\r\n            cLength = newLineFlag ? 0 : charData.w*documentData.s/100;\r\n        }else{\r\n            //var charWidth = fontManager.measureText(val, documentData.f, documentData.s);\r\n            //tCanvasHelper.font = documentData.s + 'px '+ fontManager.getFontByName(documentData.f).fFamily;\r\n            cLength = fontManager.measureText(val, documentData.f, documentData.s);\r\n        }\r\n\r\n        //\r\n        if(currentChar === ' '){\r\n            uncollapsedSpaces += cLength + trackingOffset;\r\n        } else {\r\n            lineWidth += cLength + trackingOffset + uncollapsedSpaces;\r\n            uncollapsedSpaces = 0;\r\n        }\r\n        letters.push({l:cLength,an:cLength,add:currentSize,n:newLineFlag, anIndexes:[], val: val, line: currentLine});\r\n        if(anchorGrouping == 2){\r\n            currentSize += cLength;\r\n            if(val == '' || val == '\\u00A0' || i == len - 1){\r\n                if(val == '' || val == '\\u00A0'){\r\n                    currentSize -= cLength;\r\n                }\r\n                while(currentPos<=i){\r\n                    letters[currentPos].an = currentSize;\r\n                    letters[currentPos].ind = index;\r\n                    letters[currentPos].extra = cLength;\r\n                    currentPos += 1;\r\n                }\r\n                index += 1;\r\n                currentSize = 0;\r\n            }\r\n        }else if(anchorGrouping == 3){\r\n            currentSize += cLength;\r\n            if(val == '' || i == len - 1){\r\n                if(val == ''){\r\n                    currentSize -= cLength;\r\n                }\r\n                while(currentPos<=i){\r\n                    letters[currentPos].an = currentSize;\r\n                    letters[currentPos].ind = index;\r\n                    letters[currentPos].extra = cLength;\r\n                    currentPos += 1;\r\n                }\r\n                currentSize = 0;\r\n                index += 1;\r\n            }\r\n        }else{\r\n            letters[index].ind = index;\r\n            letters[index].extra = 0;\r\n            index += 1;\r\n        }\r\n    }\r\n    documentData.l = letters;\r\n    maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\r\n    lineWidths.push(lineWidth);\r\n    if(documentData.sz){\r\n        documentData.boxWidth = documentData.sz[0];\r\n        documentData.justifyOffset = 0;\r\n    }else{\r\n        documentData.boxWidth = maxLineWidth;\r\n        switch(documentData.j){\r\n            case 1:\r\n                documentData.justifyOffset = - documentData.boxWidth;\r\n                break;\r\n            case 2:\r\n                documentData.justifyOffset = - documentData.boxWidth/2;\r\n                break;\r\n            default:\r\n                documentData.justifyOffset = 0;\r\n        }\r\n    }\r\n    documentData.lineWidths = lineWidths;\r\n\r\n    var animators = data.a, animatorData, letterData;\r\n    jLen = animators.length;\r\n    var based, ind, indexes = [];\r\n    for(j=0;j<jLen;j+=1){\r\n        animatorData = animators[j];\r\n        if(animatorData.a.sc){\r\n            documentData.strokeColorAnim = true;\r\n        }\r\n        if(animatorData.a.sw){\r\n            documentData.strokeWidthAnim = true;\r\n        }\r\n        if(animatorData.a.fc || animatorData.a.fh || animatorData.a.fs || animatorData.a.fb){\r\n            documentData.fillColorAnim = true;\r\n        }\r\n        ind = 0;\r\n        based = animatorData.s.b;\r\n        for(i=0;i<len;i+=1){\r\n            letterData = letters[i];\r\n            letterData.anIndexes[j] = ind;\r\n            if((based == 1 && letterData.val != '') || (based == 2 && letterData.val != '' && letterData.val != '\\u00A0') || (based == 3 && (letterData.n || letterData.val == '\\u00A0' || i == len - 1)) || (based == 4 && (letterData.n || i == len - 1))){\r\n                if(animatorData.s.rn === 1){\r\n                    indexes.push(ind);\r\n                }\r\n                ind += 1;\r\n            }\r\n        }\r\n        data.a[j].s.totalChars = ind;\r\n        var currentInd = -1, newInd;\r\n        if(animatorData.s.rn === 1){\r\n            for(i = 0; i < len; i += 1){\r\n                letterData = letters[i];\r\n                if(currentInd != letterData.anIndexes[j]){\r\n                    currentInd = letterData.anIndexes[j];\r\n                    newInd = indexes.splice(Math.floor(Math.random()*indexes.length),1)[0];\r\n                }\r\n                letterData.anIndexes[j] = newInd;\r\n            }\r\n        }\r\n    }\r\n    documentData.yOffset = documentData.lh || documentData.s*1.2;\r\n    documentData.ls = documentData.ls || 0;\r\n    documentData.ascent = fontData.ascent*documentData.s/100;\r\n}\r\n\r\nTextProperty.prototype.updateDocumentData = function(newData, index) {\r\n\tindex = index === undefined ? this.keysIndex : index;\r\n    var dData = this.data.d.k[index].s;\r\n    dData.__complete = false;\r\n    dData.t = newData.t;\r\n    this.keysIndex = -1;\r\n    this.firstFrame = true;\r\n    this.getValue();\r\n}\r\n\nvar pooling = (function(){\r\n\r\n\tfunction double(arr){\r\n\t\treturn arr.concat(Array.apply(null,{length:arr.length}))\r\n\t}\r\n\r\n\treturn {\r\n\t\tdouble: double\r\n\t}\r\n}());\nvar point_pool = (function(){\r\n\tvar ob = {\r\n\t\tnewPoint: newPoint,\r\n\t\trelease: release\r\n\t}\r\n\r\n\tvar _length = 0;\r\n\tvar _maxLength = 8;\r\n\tvar pool = Array.apply(null,{length:_maxLength});\r\n\r\n\tfunction newPoint(){\r\n\t\tvar point;\r\n\t\tif(_length){\r\n\t\t\t_length -= 1;\r\n\t\t\tpoint = pool[_length];\r\n\t\t} else {\r\n\t\t\tpoint = [0.1,0.1];\r\n\t\t}\r\n\t\treturn point;\r\n\t}\r\n\r\n\tfunction release(point) {\r\n\t\tif(_length === _maxLength) {\r\n\t\t\tpool = pooling.double(pool);\r\n\t\t\t_maxLength = _maxLength*2;\r\n\t\t}\r\n\t\tpool[_length] = point;\r\n\t\t_length += 1;\r\n\t}\r\n\r\n\r\n\treturn ob;\r\n}());\nvar shape_pool = (function(){\r\n\tvar ob = {\r\n\t\tclone: clone,\r\n\t\tnewShape: newShape,\r\n\t\trelease: release,\r\n\t\treleaseArray: releaseArray\r\n\t}\r\n\r\n\tvar _length = 0;\r\n\tvar _maxLength = 4;\r\n\tvar pool = Array.apply(null,{length:_maxLength});\r\n\r\n\tfunction newShape(){\r\n\t\tvar shapePath;\r\n\t\tif(_length){\r\n\t\t\t_length -= 1;\r\n\t\t\tshapePath = pool[_length];\r\n\t\t} else {\r\n\t\t\tshapePath = new ShapePath();\r\n\t\t}\r\n\t\treturn shapePath;\r\n\t}\r\n\r\n\tfunction release(shapePath) {\r\n\t\tif(_length === _maxLength) {\r\n\t\t\tpool = pooling.double(pool);\r\n\t\t\t_maxLength = _maxLength*2;\r\n\t\t}\r\n\t\tvar len = shapePath._length, i;\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tpoint_pool.release(shapePath.v[i]);\r\n\t\t\tpoint_pool.release(shapePath.i[i]);\r\n\t\t\tpoint_pool.release(shapePath.o[i]);\r\n\t\t\tshapePath.v[i] = null;\r\n\t\t\tshapePath.i[i] = null;\r\n\t\t\tshapePath.o[i] = null;\r\n\t\t}\r\n\t\tshapePath._length = 0;\r\n\t\tshapePath.c = false;\r\n\t\tpool[_length] = shapePath;\r\n\t\t_length += 1;\r\n\t}\r\n\r\n\tfunction releaseArray(shapePathsCollection, length) {\r\n\t\twhile(length--) {\r\n\t\t\trelease(shapePathsCollection[length]);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction clone(shape, transform) {\r\n\t\tvar i, len = shape._length === undefined ? shape.v.length : shape._length;\r\n\t\tvar cloned = newShape();\r\n\t\tcloned.setLength(len);\r\n\t\tcloned.c = shape.c;\r\n\r\n\t\tvar pt;\r\n\t\t\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tif(transform){\r\n\t\t\t\tpt = transform.applyToPointArray(shape.v[i][0],shape.v[i][1],0,2);\r\n\t\t\t\tcloned.setXYAt(pt[0],pt[1],'v',i);\r\n\t\t\t\tpoint_pool.release(pt);\r\n\t\t\t\tpt = transform.applyToPointArray(shape.o[i][0],shape.o[i][1],0,2);\r\n\t\t\t\tcloned.setXYAt(pt[0],pt[1],'o',i);\r\n\t\t\t\tpoint_pool.release(pt);\r\n\t\t\t\tpt = transform.applyToPointArray(shape.i[i][0],shape.i[i][1],0,2);\r\n\t\t\t\tcloned.setXYAt(pt[0],pt[1],'i',i);\r\n\t\t\t\tpoint_pool.release(pt);\r\n\t\t\t}else{\r\n\t\t\t\tcloned.setTripleAt(shape.v[i][0],shape.v[i][1],shape.o[i][0],shape.o[i][1],shape.i[i][0],shape.i[i][1], i);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn cloned\r\n\t}\r\n\r\n\r\n\treturn ob;\r\n}());\nvar shapeCollection_pool = (function(){\r\n\tvar ob = {\r\n\t\tnewShapeCollection: newShapeCollection,\r\n\t\trelease: release,\r\n\t\tclone: clone\r\n\t}\r\n\r\n\tvar _length = 0;\r\n\tvar _maxLength = 4;\r\n\tvar pool = Array.apply(null,{length:_maxLength});\r\n\r\n\tvar cont = 0;\r\n\r\n\tfunction newShapeCollection(){\r\n\t\tvar shapeCollection;\r\n\t\tif(_length){\r\n\t\t\t_length -= 1;\r\n\t\t\tshapeCollection = pool[_length];\r\n\t\t} else {\r\n\t\t\tshapeCollection = new ShapeCollection();\r\n\t\t}\r\n\t\treturn shapeCollection;\r\n\t}\r\n\r\n\tfunction release(shapeCollection) {\r\n\t\tvar i, len = shapeCollection._length;\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tshape_pool.release(shapeCollection.shapes[i]);\r\n\t\t}\r\n\t\tshapeCollection._length = 0;\r\n\r\n\t\tif(_length === _maxLength) {\r\n\t\t\tpool = pooling.double(pool);\r\n\t\t\t_maxLength = _maxLength*2;\r\n\t\t}\r\n\t\tpool[_length] = shapeCollection;\r\n\t\t_length += 1;\r\n\t}\r\n\r\n\tfunction clone(shapeCollection, originCollection) {\r\n\t\trelease(shapeCollection);\r\n\t\tif(_length === _maxLength) {\r\n\t\t\tpool = pooling.double(pool);\r\n\t\t\t_maxLength = _maxLength*2;\r\n\t\t}\r\n\t\tpool[_length] = shapeCollection;\r\n\t\t_length += 1;\r\n\t}\r\n\r\n\r\n\treturn ob;\r\n}());\nfunction BaseRenderer(){}\r\nBaseRenderer.prototype.checkLayers = function(num){\r\n    var i, len = this.layers.length, data;\r\n    this.completeLayers = true;\r\n    for (i = len - 1; i >= 0; i--) {\r\n        if (!this.elements[i]) {\r\n            data = this.layers[i];\r\n            if(data.ip - data.st <= (num - this.layers[i].st) && data.op - data.st > (num - this.layers[i].st))\r\n            {\r\n                this.buildItem(i);\r\n            }\r\n        }\r\n        this.completeLayers = this.elements[i] ? this.completeLayers:false;\r\n    }\r\n    this.checkPendingElements();\r\n};\r\n\r\nBaseRenderer.prototype.createItem = function(layer){\r\n    switch(layer.ty){\r\n        case 2:\r\n            return this.createImage(layer);\r\n        case 0:\r\n            return this.createComp(layer);\r\n        case 1:\r\n            return this.createSolid(layer);\r\n        case 4:\r\n            return this.createShape(layer);\r\n        case 5:\r\n            return this.createText(layer);\r\n        case 13:\r\n            return this.createCamera(layer);\r\n        case 99:\r\n            return null;\r\n    }\r\n    return this.createBase(layer);\r\n};\r\n\r\nBaseRenderer.prototype.createCamera = function(){\r\n    throw new Error('You\\'re using a 3d camera. Try the html renderer.');\r\n}\r\n\r\nBaseRenderer.prototype.buildAllItems = function(){\r\n    var i, len = this.layers.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.buildItem(i);\r\n    }\r\n    this.checkPendingElements();\r\n};\r\n\r\nBaseRenderer.prototype.includeLayers = function(newLayers){\r\n    this.completeLayers = false;\r\n    var i, len = newLayers.length;\r\n    var j, jLen = this.layers.length;\r\n    for(i=0;i<len;i+=1){\r\n        j = 0;\r\n        while(j<jLen){\r\n            if(this.layers[j].id == newLayers[i].id){\r\n                this.layers[j] = newLayers[i];\r\n                break;\r\n            }\r\n            j += 1;\r\n        }\r\n    }\r\n};\r\n\r\nBaseRenderer.prototype.setProjectInterface = function(pInterface){\r\n    this.globalData.projectInterface = pInterface;\r\n};\r\n\r\nBaseRenderer.prototype.initItems = function(){\r\n    if(!this.globalData.progressiveLoad){\r\n        this.buildAllItems();\r\n    }\r\n};\r\nBaseRenderer.prototype.buildElementParenting = function(element, parentName, hierarchy){\r\n    hierarchy = hierarchy || [];\r\n    var elements = this.elements;\r\n    var layers = this.layers;\r\n    var i=0, len = layers.length;\r\n    while(i<len){\r\n        if(layers[i].ind == parentName){\r\n            if(!elements[i] || elements[i] === true){\r\n                this.buildItem(i);\r\n                this.addPendingElement(element);\r\n            } else if(layers[i].parent !== undefined){\r\n                hierarchy.push(elements[i]);\r\n                elements[i]._isParent = true;\r\n                this.buildElementParenting(element,layers[i].parent, hierarchy);\r\n            } else {\r\n                hierarchy.push(elements[i]);\r\n                elements[i]._isParent = true;\r\n                element.setHierarchy(hierarchy);\r\n            }\r\n\r\n\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nBaseRenderer.prototype.addPendingElement = function(element){\r\n    this.pendingElements.push(element);\r\n};\nfunction SVGRenderer(animationItem, config){\r\n    this.animationItem = animationItem;\r\n    this.layers = null;\r\n    this.renderedFrame = -1;\r\n    this.globalData = {\r\n        frameNum: -1\r\n    };\r\n    this.renderConfig = {\r\n        preserveAspectRatio: (config && config.preserveAspectRatio) || 'xMidYMid meet',\r\n        progressiveLoad: (config && config.progressiveLoad) || false,\r\n        hideOnTransparent: (config && config.hideOnTransparent === false) ? false : true,\r\n        viewBoxOnly: (config && config.viewBoxOnly) || false,\r\n        className: (config && config.className) || ''\r\n    };\r\n    this.globalData.renderConfig = this.renderConfig;\r\n    this.elements = [];\r\n    this.pendingElements = [];\r\n    this.destroyed = false;\r\n\r\n}\r\n\r\nextendPrototype(BaseRenderer,SVGRenderer);\r\n\r\nSVGRenderer.prototype.createBase = function (data) {\r\n    return new SVGBaseElement(data, this.layerElement,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createShape = function (data) {\r\n    return new IShapeElement(data, this.layerElement,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createText = function (data) {\r\n    return new SVGTextElement(data, this.layerElement,this.globalData,this);\r\n\r\n};\r\n\r\nSVGRenderer.prototype.createImage = function (data) {\r\n    return new IImageElement(data, this.layerElement,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createComp = function (data) {\r\n    return new ICompElement(data, this.layerElement,this.globalData,this);\r\n\r\n};\r\n\r\nSVGRenderer.prototype.createSolid = function (data) {\r\n    return new ISolidElement(data, this.layerElement,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.configAnimation = function(animData){\r\n    this.layerElement = document.createElementNS(svgNS,'svg');\r\n    this.layerElement.setAttribute('xmlns','http://www.w3.org/2000/svg');\r\n    this.layerElement.setAttribute('viewBox','0 0 '+animData.w+' '+animData.h);\r\n    if(!this.renderConfig.viewBoxOnly) {\r\n        this.layerElement.setAttribute('width',animData.w);\r\n        this.layerElement.setAttribute('height',animData.h);\r\n        this.layerElement.style.width = '100%';\r\n        this.layerElement.style.height = '100%';\r\n    }\r\n    if(this.renderConfig.className) {\r\n        this.layerElement.setAttribute('class', this.renderConfig.className);\r\n    }\r\n    this.layerElement.setAttribute('preserveAspectRatio',this.renderConfig.preserveAspectRatio);\r\n    //this.layerElement.style.transform = 'translate3d(0,0,0)';\r\n    //this.layerElement.style.transformOrigin = this.layerElement.style.mozTransformOrigin = this.layerElement.style.webkitTransformOrigin = this.layerElement.style['-webkit-transform'] = \"0px 0px 0px\";\r\n    this.animationItem.wrapper.appendChild(this.layerElement);\r\n    //Mask animation\r\n    var defs = document.createElementNS(svgNS, 'defs');\r\n    this.globalData.defs = defs;\r\n    this.layerElement.appendChild(defs);\r\n    this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem);\r\n    this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem);\r\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\r\n    this.globalData.frameId = 0;\r\n    this.globalData.nm = animData.nm;\r\n    this.globalData.compSize = {\r\n        w: animData.w,\r\n        h: animData.h\r\n    };\r\n    this.data = animData;\r\n    this.globalData.frameRate = animData.fr;\r\n    var maskElement = document.createElementNS(svgNS, 'clipPath');\r\n    var rect = document.createElementNS(svgNS,'rect');\r\n    rect.setAttribute('width',animData.w);\r\n    rect.setAttribute('height',animData.h);\r\n    rect.setAttribute('x',0);\r\n    rect.setAttribute('y',0);\r\n    var maskId = 'animationMask_'+randomString(10);\r\n    maskElement.setAttribute('id', maskId);\r\n    maskElement.appendChild(rect);\r\n    var maskedElement = document.createElementNS(svgNS,'g');\r\n    maskedElement.setAttribute(\"clip-path\", \"url(\" + locationHref + \"#\"+maskId+\")\");\r\n    this.layerElement.appendChild(maskedElement);\r\n    defs.appendChild(maskElement);\r\n    this.layerElement = maskedElement;\r\n    this.layers = animData.layers;\r\n    this.globalData.fontManager = new FontManager();\r\n    this.globalData.fontManager.addChars(animData.chars);\r\n    this.globalData.fontManager.addFonts(animData.fonts,defs);\r\n    this.elements = Array.apply(null,{length:animData.layers.length});\r\n};\r\n\r\n\r\nSVGRenderer.prototype.destroy = function () {\r\n    this.animationItem.wrapper.innerHTML = '';\r\n    this.layerElement = null;\r\n    this.globalData.defs = null;\r\n    var i, len = this.layers ? this.layers.length : 0;\r\n    for (i = 0; i < len; i++) {\r\n        if(this.elements[i]){\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n    this.elements.length = 0;\r\n    this.destroyed = true;\r\n    this.animationItem = null;\r\n};\r\n\r\nSVGRenderer.prototype.updateContainerSize = function () {\r\n};\r\n\r\nSVGRenderer.prototype.buildItem  = function(pos){\r\n    var elements = this.elements;\r\n    if(elements[pos] || this.layers[pos].ty == 99){\r\n        return;\r\n    }\r\n    elements[pos] = true;\r\n    var element = this.createItem(this.layers[pos]);\r\n\r\n    elements[pos] = element;\r\n    if(expressionsPlugin){\r\n        if(this.layers[pos].ty === 0){\r\n            this.globalData.projectInterface.registerComposition(element);\r\n        }\r\n        element.initExpressions();\r\n    }\r\n    this.appendElementInPos(element,pos);\r\n    if(this.layers[pos].tt){\r\n        if(!this.elements[pos - 1] || this.elements[pos - 1] === true){\r\n            this.buildItem(pos - 1);\r\n            this.addPendingElement(element);\r\n        } else {\r\n            element.setMatte(elements[pos - 1].layerId);\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.checkPendingElements  = function(){\r\n    while(this.pendingElements.length){\r\n        var element = this.pendingElements.pop();\r\n        element.checkParenting();\r\n        if(element.data.tt){\r\n            var i = 0, len = this.elements.length;\r\n            while(i<len){\r\n                if(this.elements[i] === element){\r\n                    element.setMatte(this.elements[i - 1].layerId);\r\n                    break;\r\n                }\r\n                i += 1;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.renderFrame = function(num){\r\n    if(this.renderedFrame == num || this.destroyed){\r\n        return;\r\n    }\r\n    if(num === null){\r\n        num = this.renderedFrame;\r\n    }else{\r\n        this.renderedFrame = num;\r\n    }\r\n    //clearPoints();\r\n    /*console.log('-------');\r\n    console.log('FRAME ',num);*/\r\n    this.globalData.frameNum = num;\r\n    this.globalData.frameId += 1;\r\n    this.globalData.projectInterface.currentFrame = num;\r\n    var i, len = this.layers.length;\r\n    if(!this.completeLayers){\r\n        this.checkLayers(num);\r\n    }\r\n    for (i = len - 1; i >= 0; i--) {\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].prepareFrame(num - this.layers[i].st);\r\n        }\r\n    }\r\n    for (i = len - 1; i >= 0; i--) {\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].renderFrame();\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.appendElementInPos = function(element, pos){\r\n    var newElement = element.getBaseElement();\r\n    if(!newElement){\r\n        return;\r\n    }\r\n    var i = 0;\r\n    var nextElement;\r\n    while(i<pos){\r\n        if(this.elements[i] && this.elements[i]!== true && this.elements[i].getBaseElement()){\r\n            nextElement = this.elements[i].getBaseElement();\r\n        }\r\n        i += 1;\r\n    }\r\n    if(nextElement){\r\n        this.layerElement.insertBefore(newElement, nextElement);\r\n    } else {\r\n        this.layerElement.appendChild(newElement);\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.hide = function(){\r\n    this.layerElement.style.display = 'none';\r\n};\r\n\r\nSVGRenderer.prototype.show = function(){\r\n    this.layerElement.style.display = 'block';\r\n};\r\n\r\nSVGRenderer.prototype.searchExtraCompositions = function(assets){\r\n    var i, len = assets.length;\r\n    var floatingContainer = document.createElementNS(svgNS,'g');\r\n    for(i=0;i<len;i+=1){\r\n        if(assets[i].xt){\r\n            var comp = this.createComp(assets[i],floatingContainer,this.globalData.comp,null);\r\n            comp.initExpressions();\r\n            //comp.compInterface = CompExpressionInterface(comp);\r\n            //Expressions.addLayersInterface(comp.elements, this.globalData.projectInterface);\r\n            this.globalData.projectInterface.registerComposition(comp);\r\n        }\r\n    }\r\n};\r\n\nfunction MaskElement(data,element,globalData) {\r\n    this.dynamicProperties = [];\r\n    this.data = data;\r\n    this.element = element;\r\n    this.globalData = globalData;\r\n    this.storedData = [];\r\n    this.masksProperties = this.data.masksProperties;\r\n    this.viewData = Array.apply(null,{length:this.masksProperties.length});\r\n    this.maskElement = null;\r\n    this.firstFrame = true;\r\n    var defs = this.globalData.defs;\r\n    var i, len = this.masksProperties.length;\r\n\r\n\r\n    var path, properties = this.masksProperties;\r\n    var count = 0;\r\n    var currentMasks = [];\r\n    var j, jLen;\r\n    var layerId = randomString(10);\r\n    var rect, expansor, feMorph,x;\r\n    var maskType = 'clipPath', maskRef = 'clip-path';\r\n    for (i = 0; i < len; i++) {\r\n\r\n        if((properties[i].mode !== 'a' && properties[i].mode !== 'n')|| properties[i].inv || properties[i].o.k !== 100){\r\n            maskType = 'mask';\r\n            maskRef = 'mask';\r\n        }\r\n\r\n        if((properties[i].mode == 's' || properties[i].mode == 'i') && count == 0){\r\n            rect = document.createElementNS(svgNS, 'rect');\r\n            rect.setAttribute('fill', '#ffffff');\r\n            rect.setAttribute('width', this.element.comp.data.w);\r\n            rect.setAttribute('height', this.element.comp.data.h);\r\n            currentMasks.push(rect);\r\n        } else {\r\n            rect = null;\r\n        }\r\n\r\n        path = document.createElementNS(svgNS, 'path');\r\n        if(properties[i].mode == 'n') {\r\n            this.viewData[i] = {\r\n                op: PropertyFactory.getProp(this.element,properties[i].o,0,0.01,this.dynamicProperties),\r\n                prop: ShapePropertyFactory.getShapeProp(this.element,properties[i],3,this.dynamicProperties,null),\r\n                elem: path\r\n            };\r\n            defs.appendChild(path);\r\n            continue;\r\n        }\r\n        count += 1;\r\n\r\n        if(properties[i].mode == 's'){\r\n            path.setAttribute('fill', '#000000');\r\n        }else{\r\n            path.setAttribute('fill', '#ffffff');\r\n        }\r\n        path.setAttribute('clip-rule','nonzero');\r\n\r\n        if(properties[i].x.k !== 0){\r\n            maskType = 'mask';\r\n            maskRef = 'mask';\r\n            x = PropertyFactory.getProp(this.element,properties[i].x,0,null,this.dynamicProperties);\r\n            var filterID = 'fi_'+randomString(10);\r\n            expansor = document.createElementNS(svgNS,'filter');\r\n            expansor.setAttribute('id',filterID);\r\n            feMorph = document.createElementNS(svgNS,'feMorphology');\r\n            feMorph.setAttribute('operator','dilate');\r\n            feMorph.setAttribute('in','SourceGraphic');\r\n            feMorph.setAttribute('radius','0');\r\n            expansor.appendChild(feMorph);\r\n            defs.appendChild(expansor);\r\n            if(properties[i].mode == 's'){\r\n                path.setAttribute('stroke', '#000000');\r\n            }else{\r\n                path.setAttribute('stroke', '#ffffff');\r\n            }\r\n        }else{\r\n            feMorph = null;\r\n            x = null;\r\n        }\r\n\r\n\r\n        this.storedData[i] = {\r\n             elem: path,\r\n             x: x,\r\n             expan: feMorph,\r\n            lastPath: '',\r\n            lastOperator:'',\r\n            filterId:filterID,\r\n            lastRadius:0\r\n        };\r\n        if(properties[i].mode == 'i'){\r\n            jLen = currentMasks.length;\r\n            var g = document.createElementNS(svgNS,'g');\r\n            for(j=0;j<jLen;j+=1){\r\n                g.appendChild(currentMasks[j]);\r\n            }\r\n            var mask = document.createElementNS(svgNS,'mask');\r\n            mask.setAttribute('mask-type','alpha');\r\n            mask.setAttribute('id',layerId+'_'+count);\r\n            mask.appendChild(path);\r\n            defs.appendChild(mask);\r\n            g.setAttribute('mask','url(' + locationHref + '#'+layerId+'_'+count+')');\r\n\r\n            currentMasks.length = 0;\r\n            currentMasks.push(g);\r\n        }else{\r\n            currentMasks.push(path);\r\n        }\r\n        if(properties[i].inv && !this.solidPath){\r\n            this.solidPath = this.createLayerSolidPath();\r\n        }\r\n        this.viewData[i] = {\r\n            elem: path,\r\n            lastPath: '',\r\n            op: PropertyFactory.getProp(this.element,properties[i].o,0,0.01,this.dynamicProperties),\r\n            prop:ShapePropertyFactory.getShapeProp(this.element,properties[i],3,this.dynamicProperties,null)\r\n        };\r\n        if(rect){\r\n            this.viewData[i].invRect = rect;\r\n        }\r\n        if(!this.viewData[i].prop.k){\r\n            this.drawPath(properties[i],this.viewData[i].prop.v,this.viewData[i]);\r\n        }\r\n    }\r\n\r\n    this.maskElement = document.createElementNS(svgNS, maskType);\r\n\r\n    len = currentMasks.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.maskElement.appendChild(currentMasks[i]);\r\n    }\r\n\r\n    this.maskElement.setAttribute('id', layerId);\r\n    if(count > 0){\r\n        this.element.maskedElement.setAttribute(maskRef, \"url(\" + locationHref + \"#\" + layerId + \")\");\r\n    }\r\n\r\n    defs.appendChild(this.maskElement);\r\n};\r\n\r\nMaskElement.prototype.getMaskProperty = function(pos){\r\n    return this.viewData[pos].prop;\r\n};\r\n\r\nMaskElement.prototype.prepareFrame = function(){\r\n    var i, len = this.dynamicProperties.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.dynamicProperties[i].getValue();\r\n\r\n    }\r\n};\r\n\r\nMaskElement.prototype.renderFrame = function (finalMat) {\r\n    var i, len = this.masksProperties.length;\r\n    for (i = 0; i < len; i++) {\r\n        if(this.viewData[i].prop.mdf || this.firstFrame){\r\n            this.drawPath(this.masksProperties[i],this.viewData[i].prop.v,this.viewData[i]);\r\n        }\r\n        if(this.viewData[i].op.mdf || this.firstFrame){\r\n            this.viewData[i].elem.setAttribute('fill-opacity',this.viewData[i].op.v);\r\n        }\r\n        if(this.masksProperties[i].mode !== 'n'){\r\n            if(this.viewData[i].invRect && (this.element.finalTransform.mProp.mdf || this.firstFrame)){\r\n                this.viewData[i].invRect.setAttribute('x', -finalMat.props[12]);\r\n                this.viewData[i].invRect.setAttribute('y', -finalMat.props[13]);\r\n            }\r\n            if(this.storedData[i].x && (this.storedData[i].x.mdf || this.firstFrame)){\r\n                var feMorph = this.storedData[i].expan;\r\n                if(this.storedData[i].x.v < 0){\r\n                    if(this.storedData[i].lastOperator !== 'erode'){\r\n                        this.storedData[i].lastOperator = 'erode';\r\n                        this.storedData[i].elem.setAttribute('filter','url(' + locationHref + '#'+this.storedData[i].filterId+')');\r\n                    }\r\n                    feMorph.setAttribute('radius',-this.storedData[i].x.v);\r\n                }else{\r\n                    if(this.storedData[i].lastOperator !== 'dilate'){\r\n                        this.storedData[i].lastOperator = 'dilate';\r\n                        this.storedData[i].elem.setAttribute('filter',null);\r\n                    }\r\n                    this.storedData[i].elem.setAttribute('stroke-width', this.storedData[i].x.v*2);\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n    this.firstFrame = false;\r\n};\r\n\r\nMaskElement.prototype.getMaskelement = function () {\r\n    return this.maskElement;\r\n};\r\n\r\nMaskElement.prototype.createLayerSolidPath = function(){\r\n    var path = 'M0,0 ';\r\n    path += ' h' + this.globalData.compSize.w ;\r\n    path += ' v' + this.globalData.compSize.h ;\r\n    path += ' h-' + this.globalData.compSize.w ;\r\n    path += ' v-' + this.globalData.compSize.h + ' ';\r\n    return path;\r\n};\r\n\r\nMaskElement.prototype.drawPath = function(pathData,pathNodes,viewData){\r\n    var pathString = \" M\"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    var i, len;\r\n    len = pathNodes._length;\r\n    for(i=1;i<len;i+=1){\r\n        //pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[i][0]+','+pathNodes.i[i][1] + \" \"+pathNodes.v[i][0]+','+pathNodes.v[i][1];\r\n        pathString += \" C\"+bm_rnd(pathNodes.o[i-1][0])+','+bm_rnd(pathNodes.o[i-1][1]) + \" \"+bm_rnd(pathNodes.i[i][0])+','+bm_rnd(pathNodes.i[i][1]) + \" \"+bm_rnd(pathNodes.v[i][0])+','+bm_rnd(pathNodes.v[i][1]);\r\n    }\r\n        //pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[0][0]+','+pathNodes.i[0][1] + \" \"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    if(pathNodes.c && len > 1){\r\n        pathString += \" C\"+bm_rnd(pathNodes.o[i-1][0])+','+bm_rnd(pathNodes.o[i-1][1]) + \" \"+bm_rnd(pathNodes.i[0][0])+','+bm_rnd(pathNodes.i[0][1]) + \" \"+bm_rnd(pathNodes.v[0][0])+','+bm_rnd(pathNodes.v[0][1]);\r\n    }\r\n    //pathNodes.__renderedString = pathString;\r\n\r\n\r\n    if(viewData.lastPath !== pathString){\r\n        if(viewData.elem){\r\n            if(!pathNodes.c){\r\n                viewData.elem.setAttribute('d','');\r\n            }else if(pathData.inv){\r\n                viewData.elem.setAttribute('d',this.solidPath + pathString);\r\n            }else{\r\n                viewData.elem.setAttribute('d',pathString);\r\n            }\r\n        }\r\n        viewData.lastPath = pathString;\r\n    }\r\n};\r\n\r\nMaskElement.prototype.destroy = function(){\r\n    this.element = null;\r\n    this.globalData = null;\r\n    this.maskElement = null;\r\n    this.data = null;\r\n    this.masksProperties = null;\r\n};\nfunction BaseElement(){\r\n};\r\nBaseElement.prototype.checkMasks = function(){\r\n    if(!this.data.hasMask){\r\n        return false;\r\n    }\r\n    var i = 0, len = this.data.masksProperties.length;\r\n    while(i<len) {\r\n        if((this.data.masksProperties[i].mode !== 'n' && this.data.masksProperties[i].cl !== false)) {\r\n            return true;\r\n        }\r\n        i += 1;\r\n    }\r\n    return false;\r\n}\r\n\r\nBaseElement.prototype.checkParenting = function(){\r\n    if(this.data.parent !== undefined){\r\n        this.comp.buildElementParenting(this, this.data.parent);\r\n    }\r\n}\r\n\r\nBaseElement.prototype.prepareFrame = function(num){\r\n    if(this.data.ip - this.data.st <= num && this.data.op - this.data.st > num)\r\n    {\r\n        if(this.isVisible !== true){\r\n            this.elemMdf = true;\r\n            this.globalData.mdf = true;\r\n            this.isVisible = true;\r\n            this.firstFrame = true;\r\n            if(this.data.hasMask){\r\n                this.maskManager.firstFrame = true;\r\n            }\r\n        }\r\n    }else{\r\n        if(this.isVisible !== false){\r\n            this.elemMdf = true;\r\n            this.globalData.mdf = true;\r\n            this.isVisible = false;\r\n        }\r\n    }\r\n    var i, len = this.dynamicProperties.length;\r\n    for(i=0;i<len;i+=1){\r\n        if(this.isVisible || (this._isParent && this.dynamicProperties[i].type === 'transform')){\r\n            this.dynamicProperties[i].getValue();\r\n            if(this.dynamicProperties[i].mdf){\r\n                this.elemMdf = true;\r\n                this.globalData.mdf = true;\r\n            }\r\n        }\r\n    }\r\n    if(this.data.hasMask && this.isVisible){\r\n        this.maskManager.prepareFrame(num*this.data.sr);\r\n    }\r\n    \r\n    /* TODO check this\r\n    if(this.data.sy){\r\n        if(this.data.sy[0].renderedData[num]){\r\n            if(this.data.sy[0].renderedData[num].c){\r\n                this.feFlood.setAttribute('flood-color','rgb('+Math.round(this.data.sy[0].renderedData[num].c[0])+','+Math.round(this.data.sy[0].renderedData[num].c[1])+','+Math.round(this.data.sy[0].renderedData[num].c[2])+')');\r\n            }\r\n            if(this.data.sy[0].renderedData[num].s){\r\n                this.feMorph.setAttribute('radius',this.data.sy[0].renderedData[num].s);\r\n            }\r\n        }\r\n    }\r\n    */\r\n\r\n\r\n    this.currentFrameNum = num*this.data.sr;\r\n    return this.isVisible;\r\n};\r\n\r\nBaseElement.prototype.globalToLocal = function(pt){\r\n    var transforms = [];\r\n    transforms.push(this.finalTransform);\r\n    var flag = true;\r\n    var comp = this.comp;\r\n    while(flag){\r\n        if(comp.finalTransform){\r\n            if(comp.data.hasMask){\r\n                transforms.splice(0,0,comp.finalTransform);\r\n            }\r\n            comp = comp.comp;\r\n        } else {\r\n            flag = false;\r\n        }\r\n    }\r\n    var i, len = transforms.length,ptNew;\r\n    for(i=0;i<len;i+=1){\r\n        ptNew = transforms[i].mat.applyToPointArray(0,0,0);\r\n        //ptNew = transforms[i].mat.applyToPointArray(pt[0],pt[1],pt[2]);\r\n        pt = [pt[0] - ptNew[0],pt[1] - ptNew[1],0];\r\n    }\r\n    return pt;\r\n};\r\n\r\nBaseElement.prototype.initExpressions = function(){\r\n    this.layerInterface = LayerExpressionInterface(this);\r\n    //layers[i].layerInterface = LayerExpressionInterface(layers[i]);\r\n    //layers[i].layerInterface = LayerExpressionInterface(layers[i]);\r\n    if(this.data.hasMask){\r\n        this.layerInterface.registerMaskInterface(this.maskManager);\r\n    }\r\n    var effectsInterface = EffectsExpressionInterface.createEffectsInterface(this,this.layerInterface);\r\n    this.layerInterface.registerEffectsInterface(effectsInterface);\r\n\r\n    if(this.data.ty === 0 || this.data.xt){\r\n        this.compInterface = CompExpressionInterface(this);\r\n    } else if(this.data.ty === 4){\r\n        this.layerInterface.shapeInterface = ShapeExpressionInterface.createShapeInterface(this.shapesData,this.itemsData,this.layerInterface);\r\n    } else if(this.data.ty === 5){\r\n        this.layerInterface.textInterface = TextExpressionInterface(this);\r\n    }\r\n}\r\n\r\nBaseElement.prototype.setBlendMode = function(){\r\n    var blendModeValue = '';\r\n    switch(this.data.bm){\r\n        case 1:\r\n            blendModeValue = 'multiply';\r\n            break;\r\n        case 2:\r\n            blendModeValue = 'screen';\r\n            break;\r\n        case 3:\r\n            blendModeValue = 'overlay';\r\n            break;\r\n        case 4:\r\n            blendModeValue = 'darken';\r\n            break;\r\n        case 5:\r\n            blendModeValue = 'lighten';\r\n            break;\r\n        case 6:\r\n            blendModeValue = 'color-dodge';\r\n            break;\r\n        case 7:\r\n            blendModeValue = 'color-burn';\r\n            break;\r\n        case 8:\r\n            blendModeValue = 'hard-light';\r\n            break;\r\n        case 9:\r\n            blendModeValue = 'soft-light';\r\n            break;\r\n        case 10:\r\n            blendModeValue = 'difference';\r\n            break;\r\n        case 11:\r\n            blendModeValue = 'exclusion';\r\n            break;\r\n        case 12:\r\n            blendModeValue = 'hue';\r\n            break;\r\n        case 13:\r\n            blendModeValue = 'saturation';\r\n            break;\r\n        case 14:\r\n            blendModeValue = 'color';\r\n            break;\r\n        case 15:\r\n            blendModeValue = 'luminosity';\r\n            break;\r\n    }\r\n    var elem = this.baseElement || this.layerElement;\r\n\r\n    elem.style['mix-blend-mode'] = blendModeValue;\r\n}\r\n\r\nBaseElement.prototype.init = function(){\r\n    if(!this.data.sr){\r\n        this.data.sr = 1;\r\n    }\r\n    this.dynamicProperties = this.dynamicProperties || [];\r\n    if(this.data.ef){\r\n        this.effects = new EffectsManager(this.data,this,this.dynamicProperties);\r\n        //this.effect = this.effectsManager.bind(this.effectsManager);\r\n    }\r\n    //this.elemInterface = buildLayerExpressionInterface(this);\r\n    this.hidden = false;\r\n    this.firstFrame = true;\r\n    this.isVisible = false;\r\n    this._isParent = false;\r\n    this.currentFrameNum = -99999;\r\n    this.lastNum = -99999;\r\n    if(this.data.ks){\r\n        this.finalTransform = {\r\n            mProp: PropertyFactory.getProp(this,this.data.ks,2,null,this.dynamicProperties),\r\n            matMdf: false,\r\n            opMdf: false,\r\n            mat: new Matrix(),\r\n            opacity: 1\r\n        };\r\n        if(this.data.ao){\r\n            this.finalTransform.mProp.autoOriented = true;\r\n        }\r\n        this.finalTransform.op = this.finalTransform.mProp.o;\r\n        this.transform = this.finalTransform.mProp;\r\n        if(this.data.ty !== 11){\r\n            this.createElements();\r\n        }\r\n        if(this.data.hasMask){\r\n            this.addMasks(this.data);\r\n        }\r\n    }\r\n    this.elemMdf = false;\r\n};\r\nBaseElement.prototype.getType = function(){\r\n    return this.type;\r\n};\r\n\r\nBaseElement.prototype.resetHierarchy = function(){\r\n    if(!this.hierarchy){\r\n        this.hierarchy = [];\r\n    }else{\r\n        this.hierarchy.length = 0;\r\n    }\r\n};\r\n\r\nBaseElement.prototype.getHierarchy = function(){\r\n    if(!this.hierarchy){\r\n        this.hierarchy = [];\r\n    }\r\n    return this.hierarchy;\r\n};\r\n\r\nBaseElement.prototype.setHierarchy = function(hierarchy){\r\n    this.hierarchy = hierarchy;\r\n};\r\n\r\nBaseElement.prototype.getLayerSize = function(){\r\n    if(this.data.ty === 5){\r\n        return {w:this.data.textData.width,h:this.data.textData.height};\r\n    }else{\r\n        return {w:this.data.width,h:this.data.height};\r\n    }\r\n};\r\n\r\nBaseElement.prototype.hide = function(){\r\n\r\n};\r\n\r\nBaseElement.prototype.sourceRectAtTime = function(){\r\n    return {\r\n        top:0,\r\n        left:0,\r\n        width:100,\r\n        height:100\r\n    }\r\n};\r\n\r\nBaseElement.prototype.mHelper = new Matrix();\nfunction SVGBaseElement(data,parentContainer,globalData,comp, placeholder){\r\n    this.globalData = globalData;\r\n    this.comp = comp;\r\n    this.data = data;\r\n    this.matteElement = null;\r\n    this.transformedElement = null;\r\n    this.isTransparent = false;\r\n    this.parentContainer = parentContainer;\r\n    this.layerId = placeholder ? placeholder.layerId : 'ly_'+randomString(10);\r\n    this.placeholder = placeholder;\r\n    this._sizeChanged = false;\r\n    this.init();\r\n};\r\n\r\ncreateElement(BaseElement, SVGBaseElement);\r\n\r\nSVGBaseElement.prototype.createElements = function(){\r\n    this.layerElement = document.createElementNS(svgNS,'g');\r\n    this.transformedElement = this.layerElement;\r\n    if(this.data.hasMask){\r\n        this.maskedElement = this.layerElement;\r\n    }\r\n    var layerElementParent = null;\r\n    if(this.data.td){\r\n        if(this.data.td == 3 || this.data.td == 1){\r\n            var masker = document.createElementNS(svgNS,'mask');\r\n            masker.setAttribute('id',this.layerId);\r\n            masker.setAttribute('mask-type',this.data.td == 3 ? 'luminance':'alpha');\r\n            masker.appendChild(this.layerElement);\r\n            layerElementParent = masker;\r\n            this.globalData.defs.appendChild(masker);\r\n            ////// This is only for IE and Edge when mask if of type alpha\r\n            if(!featureSupport.maskType && this.data.td == 1){\r\n                masker.setAttribute('mask-type','luminance');\r\n                var filId = randomString(10);\r\n                var fil = filtersFactory.createFilter(filId);\r\n                this.globalData.defs.appendChild(fil);\r\n                fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\r\n                var gg = document.createElementNS(svgNS,'g');\r\n                gg.appendChild(this.layerElement);\r\n                layerElementParent = gg;\r\n                masker.appendChild(gg);\r\n                gg.setAttribute('filter','url(' + locationHref + '#'+filId+')');\r\n            }\r\n        }else if(this.data.td == 2){\r\n            var maskGroup = document.createElementNS(svgNS,'mask');\r\n            maskGroup.setAttribute('id',this.layerId);\r\n            maskGroup.setAttribute('mask-type','alpha');\r\n            var maskGrouper = document.createElementNS(svgNS,'g');\r\n            maskGroup.appendChild(maskGrouper);\r\n            var filId = randomString(10);\r\n            var fil = filtersFactory.createFilter(filId);\r\n            ////\r\n\r\n            var feColorMatrix = document.createElementNS(svgNS,'feColorMatrix');\r\n            feColorMatrix.setAttribute('type','matrix');\r\n            feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n            feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 -1 1');\r\n            fil.appendChild(feColorMatrix);\r\n\r\n            ////\r\n            /*var feCTr = document.createElementNS(svgNS,'feComponentTransfer');\r\n            feCTr.setAttribute('in','SourceGraphic');\r\n            fil.appendChild(feCTr);\r\n            var feFunc = document.createElementNS(svgNS,'feFuncA');\r\n            feFunc.setAttribute('type','table');\r\n            feFunc.setAttribute('tableValues','1.0 0.0');\r\n            feCTr.appendChild(feFunc);*/\r\n            this.globalData.defs.appendChild(fil);\r\n            var alphaRect = document.createElementNS(svgNS,'rect');\r\n            alphaRect.setAttribute('width',this.comp.data.w);\r\n            alphaRect.setAttribute('height',this.comp.data.h);\r\n            alphaRect.setAttribute('x','0');\r\n            alphaRect.setAttribute('y','0');\r\n            alphaRect.setAttribute('fill','#ffffff');\r\n            alphaRect.setAttribute('opacity','0');\r\n            maskGrouper.setAttribute('filter','url(' + locationHref + '#'+filId+')');\r\n            maskGrouper.appendChild(alphaRect);\r\n            maskGrouper.appendChild(this.layerElement);\r\n            layerElementParent = maskGrouper;\r\n            if(!featureSupport.maskType){\r\n                maskGroup.setAttribute('mask-type','luminance');\r\n                fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\r\n                var gg = document.createElementNS(svgNS,'g');\r\n                maskGrouper.appendChild(alphaRect);\r\n                gg.appendChild(this.layerElement);\r\n                layerElementParent = gg;\r\n                maskGrouper.appendChild(gg);\r\n            }\r\n            this.globalData.defs.appendChild(maskGroup);\r\n        }\r\n    }else if(this.data.hasMask || this.data.tt){\r\n        if(this.data.tt){\r\n            this.matteElement = document.createElementNS(svgNS,'g');\r\n            this.matteElement.appendChild(this.layerElement);\r\n            layerElementParent = this.matteElement;\r\n            this.baseElement = this.matteElement;\r\n        }else{\r\n            this.baseElement = this.layerElement;\r\n        }\r\n    }else{\r\n        this.baseElement = this.layerElement;\r\n    }\r\n    if((this.data.ln || this.data.cl) && (this.data.ty === 4 || this.data.ty === 0)){\r\n        if(this.data.ln){\r\n            this.layerElement.setAttribute('id',this.data.ln);\r\n        }\r\n        if(this.data.cl){\r\n            this.layerElement.setAttribute('class',this.data.cl);\r\n        }\r\n    }\r\n    if(this.data.ty === 0){\r\n            var cp = document.createElementNS(svgNS, 'clipPath');\r\n            var pt = document.createElementNS(svgNS,'path');\r\n            pt.setAttribute('d','M0,0 L'+this.data.w+',0'+' L'+this.data.w+','+this.data.h+' L0,'+this.data.h+'z');\r\n            var clipId = 'cp_'+randomString(8);\r\n            cp.setAttribute('id',clipId);\r\n            cp.appendChild(pt);\r\n            this.globalData.defs.appendChild(cp);\r\n        if(this.checkMasks()){\r\n            var cpGroup = document.createElementNS(svgNS,'g');\r\n            cpGroup.setAttribute('clip-path','url(' + locationHref + '#'+clipId+')');\r\n            cpGroup.appendChild(this.layerElement);\r\n            this.transformedElement = cpGroup;\r\n            if(layerElementParent){\r\n                layerElementParent.appendChild(this.transformedElement);\r\n            } else {\r\n                this.baseElement = this.transformedElement;\r\n            }\r\n        } else {\r\n            this.layerElement.setAttribute('clip-path','url(' + locationHref + '#'+clipId+')');\r\n        }\r\n        \r\n    }\r\n    if(this.data.bm !== 0){\r\n        this.setBlendMode();\r\n    }\r\n    if(this.layerElement !== this.parentContainer){\r\n        this.placeholder = null;\r\n    }\r\n    /* Todo performance killer\r\n    if(this.data.sy){\r\n        var filterID = 'st_'+randomString(10);\r\n        var c = this.data.sy[0].c.k;\r\n        var r = this.data.sy[0].s.k;\r\n        var expansor = document.createElementNS(svgNS,'filter');\r\n        expansor.setAttribute('id',filterID);\r\n        var feFlood = document.createElementNS(svgNS,'feFlood');\r\n        this.feFlood = feFlood;\r\n        if(!c[0].e){\r\n            feFlood.setAttribute('flood-color','rgb('+c[0]+','+c[1]+','+c[2]+')');\r\n        }\r\n        feFlood.setAttribute('result','base');\r\n        expansor.appendChild(feFlood);\r\n        var feMorph = document.createElementNS(svgNS,'feMorphology');\r\n        feMorph.setAttribute('operator','dilate');\r\n        feMorph.setAttribute('in','SourceGraphic');\r\n        feMorph.setAttribute('result','bigger');\r\n        this.feMorph = feMorph;\r\n        if(!r.length){\r\n            feMorph.setAttribute('radius',this.data.sy[0].s.k);\r\n        }\r\n        expansor.appendChild(feMorph);\r\n        var feColorMatrix = document.createElementNS(svgNS,'feColorMatrix');\r\n        feColorMatrix.setAttribute('result','mask');\r\n        feColorMatrix.setAttribute('in','bigger');\r\n        feColorMatrix.setAttribute('type','matrix');\r\n        feColorMatrix.setAttribute('values','0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0');\r\n        expansor.appendChild(feColorMatrix);\r\n        var feComposite = document.createElementNS(svgNS,'feComposite');\r\n        feComposite.setAttribute('result','drop');\r\n        feComposite.setAttribute('in','base');\r\n        feComposite.setAttribute('in2','mask');\r\n        feComposite.setAttribute('operator','in');\r\n        expansor.appendChild(feComposite);\r\n        var feBlend = document.createElementNS(svgNS,'feBlend');\r\n        feBlend.setAttribute('in','SourceGraphic');\r\n        feBlend.setAttribute('in2','drop');\r\n        feBlend.setAttribute('mode','normal');\r\n        expansor.appendChild(feBlend);\r\n        this.globalData.defs.appendChild(expansor);\r\n        var cont = document.createElementNS(svgNS,'g');\r\n        if(this.layerElement === this.parentContainer){\r\n            this.layerElement = cont;\r\n        }else{\r\n            cont.appendChild(this.layerElement);\r\n        }\r\n        cont.setAttribute('filter','url(#'+filterID+')');\r\n        if(this.data.td){\r\n            cont.setAttribute('data-td',this.data.td);\r\n        }\r\n        if(this.data.td == 3){\r\n            this.globalData.defs.appendChild(cont);\r\n        }else if(this.data.td == 2){\r\n            maskGrouper.appendChild(cont);\r\n        }else if(this.data.td == 1){\r\n            masker.appendChild(cont);\r\n        }else{\r\n            if(this.data.hasMask && this.data.tt){\r\n                this.matteElement.appendChild(cont);\r\n            }else{\r\n                this.appendNodeToParent(cont);\r\n            }\r\n        }\r\n    }*/\r\n    if(this.data.ef){\r\n        this.effectsManager = new SVGEffects(this);\r\n    }\r\n    this.checkParenting();\r\n};\r\n\r\n\r\nSVGBaseElement.prototype.setBlendMode = BaseElement.prototype.setBlendMode;\r\n\r\nSVGBaseElement.prototype.renderFrame = function(parentTransform){\r\n    if(this.data.ty === 3 || this.data.hd || !this.isVisible){\r\n        return false;\r\n    }\r\n\r\n    this.lastNum = this.currentFrameNum;\r\n    this.finalTransform.opMdf = this.firstFrame || this.finalTransform.op.mdf;\r\n    this.finalTransform.matMdf = this.firstFrame || this.finalTransform.mProp.mdf;\r\n    this.finalTransform.opacity = this.finalTransform.op.v;\r\n\r\n    var mat;\r\n    var finalMat = this.finalTransform.mat;\r\n\r\n    if(this.hierarchy){\r\n        var i = 0, len = this.hierarchy.length;\r\n        if(!this.finalTransform.matMdf) {\r\n            while(i < len) {\r\n                if(this.hierarchy[i].finalTransform.mProp.mdf) {\r\n                    this.finalTransform.matMdf = true;\r\n                    break;\r\n                }\r\n                i += 1;\r\n            }\r\n        }\r\n        \r\n        if(this.finalTransform.matMdf) {\r\n            mat = this.finalTransform.mProp.v.props;\r\n            finalMat.cloneFromProps(mat);\r\n            for(i=0;i<len;i+=1){\r\n                mat = this.hierarchy[i].finalTransform.mProp.v.props;\r\n                finalMat.transform(mat[0],mat[1],mat[2],mat[3],mat[4],mat[5],mat[6],mat[7],mat[8],mat[9],mat[10],mat[11],mat[12],mat[13],mat[14],mat[15]);\r\n            }\r\n        }\r\n        \r\n    }else if(this.isVisible){\r\n        finalMat = this.finalTransform.mProp.v;\r\n    }\r\n    if(this.finalTransform.matMdf && this.layerElement){\r\n        this.transformedElement.setAttribute('transform',finalMat.to2dCSS());\r\n    }\r\n    if(this.finalTransform.opMdf && this.layerElement){\r\n        if(this.finalTransform.op.v <= 0) {\r\n            if(!this.isTransparent && this.globalData.renderConfig.hideOnTransparent){\r\n                this.isTransparent = true;\r\n                this.hide();\r\n            }\r\n        } else if(this.hidden && this.isTransparent){\r\n            this.isTransparent = false;\r\n            this.show();\r\n        }\r\n        this.transformedElement.setAttribute('opacity',this.finalTransform.op.v);\r\n    }\r\n\r\n    if(this.data.hasMask){\r\n        this.maskManager.renderFrame(finalMat);\r\n    }\r\n    if(this.effectsManager){\r\n        this.effectsManager.renderFrame(this.firstFrame);\r\n    }\r\n    return this.isVisible;\r\n};\r\n\r\nSVGBaseElement.prototype.destroy = function(){\r\n    this.layerElement = null;\r\n    this.parentContainer = null;\r\n    if(this.matteElement) {\r\n        this.matteElement = null;\r\n    }\r\n    if(this.maskManager) {\r\n        this.maskManager.destroy();\r\n    }\r\n};\r\n\r\nSVGBaseElement.prototype.getBaseElement = function(){\r\n    return this.baseElement;\r\n};\r\nSVGBaseElement.prototype.addMasks = function(data){\r\n    this.maskManager = new MaskElement(data,this,this.globalData);\r\n};\r\n\r\nSVGBaseElement.prototype.setMatte = function(id){\r\n    if(!this.matteElement){\r\n        return;\r\n    }\r\n    this.matteElement.setAttribute(\"mask\", \"url(\" + locationHref + \"#\" + id + \")\");\r\n};\r\n\r\nSVGBaseElement.prototype.hide = function(){\r\n    if(!this.hidden){\r\n        this.layerElement.style.display = 'none';\r\n        this.hidden = true;\r\n    }\r\n};\r\n\r\nSVGBaseElement.prototype.show = function(){\r\n    if(this.isVisible && !this.isTransparent){\r\n        this.hidden = false;\r\n        this.layerElement.style.display = 'block';\r\n    }\r\n};\r\n\nfunction IShapeElement(data,parentContainer,globalData,comp, placeholder){\r\n    this.shapes = [];\r\n    this.shapesData = data.shapes;\r\n    this.stylesList = [];\r\n    this.itemsData = [];\r\n    this.prevViewData = [];\r\n    this.shapeModifiers = [];\r\n    this.processedElements = [];\r\n    this._parent.constructor.call(this,data,parentContainer,globalData,comp, placeholder);\r\n}\r\ncreateElement(SVGBaseElement, IShapeElement);\r\n\r\nIShapeElement.prototype.identityMatrix = new Matrix();\r\n\r\nIShapeElement.prototype.lcEnum = {\r\n    '1': 'butt',\r\n    '2': 'round',\r\n    '3': 'square'\r\n}\r\n\r\nIShapeElement.prototype.ljEnum = {\r\n    '1': 'miter',\r\n    '2': 'round',\r\n    '3': 'butt'\r\n}\r\n\r\nIShapeElement.prototype.searchProcessedElement = function(elem){\r\n    var i = this.processedElements.length;\r\n    while(i){\r\n        i -= 1;\r\n        if(this.processedElements[i].elem === elem){\r\n            return this.processedElements[i].pos;\r\n        }\r\n    }\r\n    return 0;\r\n};\r\n\r\nIShapeElement.prototype.addProcessedElement = function(elem, pos){\r\n    var i = this.processedElements.length;\r\n    while(i){\r\n        i -= 1;\r\n        if(this.processedElements[i].elem === elem){\r\n            this.processedElements[i].pos = pos;\r\n            break;\r\n        }\r\n    }\r\n    if(i === 0){\r\n        this.processedElements.push({\r\n            elem: elem,\r\n            pos: pos\r\n        })\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.buildExpressionInterface = function(){};\r\n\r\nIShapeElement.prototype.createElements = function(){\r\n    //TODO check if I can use symbol so i can set its viewBox\r\n    this._parent.createElements.call(this);\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement,this.dynamicProperties, 0, [], true);\r\n    if(!this.data.hd || this.data.td){\r\n        styleUnselectableDiv(this.layerElement);\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.setGradientData = function(pathElement,arr,data){\r\n\r\n    var gradientId = 'gr_'+randomString(10);\r\n    var gfill;\r\n    if(arr.t === 1){\r\n        gfill = document.createElementNS(svgNS,'linearGradient');\r\n    } else {\r\n        gfill = document.createElementNS(svgNS,'radialGradient');\r\n    }\r\n    gfill.setAttribute('id',gradientId);\r\n    gfill.setAttribute('spreadMethod','pad');\r\n    gfill.setAttribute('gradientUnits','userSpaceOnUse');\r\n    var stops = [];\r\n    var stop, j, jLen;\r\n    jLen = arr.g.p*4;\r\n    for(j=0;j<jLen;j+=4){\r\n        stop = document.createElementNS(svgNS,'stop');\r\n        gfill.appendChild(stop);\r\n        stops.push(stop);\r\n    }\r\n    pathElement.setAttribute( arr.ty === 'gf' ? 'fill':'stroke','url(#'+gradientId+')');\r\n    this.globalData.defs.appendChild(gfill);\r\n    data.gf = gfill;\r\n    data.cst = stops;\r\n}\r\n\r\nIShapeElement.prototype.setGradientOpacity = function(arr, data, styleOb){\r\n    if((arr.g.k.k[0].s && arr.g.k.k[0].s.length > arr.g.p*4) || arr.g.k.k.length > arr.g.p*4){\r\n        var opFill;\r\n        var stop, j, jLen;\r\n        var mask = document.createElementNS(svgNS,\"mask\");\r\n        var maskElement = document.createElementNS(svgNS, 'path');\r\n        mask.appendChild(maskElement);\r\n        var opacityId = 'op_'+randomString(10);\r\n        var maskId = 'mk_'+randomString(10);\r\n        mask.setAttribute('id',maskId);\r\n        if(arr.t === 1){\r\n            opFill = document.createElementNS(svgNS,'linearGradient');\r\n        } else {\r\n            opFill = document.createElementNS(svgNS,'radialGradient');\r\n        }\r\n        opFill.setAttribute('id',opacityId);\r\n        opFill.setAttribute('spreadMethod','pad');\r\n        opFill.setAttribute('gradientUnits','userSpaceOnUse');\r\n        jLen = arr.g.k.k[0].s ? arr.g.k.k[0].s.length : arr.g.k.k.length;\r\n        var stops = [];\r\n        for(j=arr.g.p*4;j<jLen;j+=2){\r\n            stop = document.createElementNS(svgNS,'stop');\r\n            stop.setAttribute('stop-color','rgb(255,255,255)');\r\n            //stop.setAttribute('offset',Math.round(arr.y[j][0]*100)+'%');\r\n            //stop.setAttribute('style','stop-color:rgb(255,255,255);stop-opacity:'+arr.y[j][1]);\r\n            opFill.appendChild(stop);\r\n            stops.push(stop);\r\n        }\r\n        maskElement.setAttribute( arr.ty === 'gf' ? 'fill':'stroke','url(#'+opacityId+')');\r\n        this.globalData.defs.appendChild(opFill);\r\n        this.globalData.defs.appendChild(mask);\r\n        data.of = opFill;\r\n        data.ost = stops;\r\n        styleOb.msElem = maskElement;\r\n        return maskId;\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.createStyleElement = function(data, level, dynamicProperties){\r\n    var elementData = {\r\n    };\r\n    var styleOb = {\r\n        data: data,\r\n        type: data.ty,\r\n        d: '',\r\n        ld: '',\r\n        lvl: level,\r\n        mdf: false,\r\n        closed: false\r\n    };\r\n    var pathElement = document.createElementNS(svgNS, \"path\");\r\n    elementData.o = PropertyFactory.getProp(this,data.o,0,0.01,dynamicProperties);\r\n    if(data.ty == 'st' || data.ty == 'gs') {\r\n        pathElement.setAttribute('stroke-linecap', this.lcEnum[data.lc] || 'round');\r\n        ////pathElement.style.strokeLinecap = this.lcEnum[data.lc] || 'round';\r\n        pathElement.setAttribute('stroke-linejoin',this.ljEnum[data.lj] || 'round');\r\n        ////pathElement.style.strokeLinejoin = this.ljEnum[data.lj] || 'round';\r\n        pathElement.setAttribute('fill-opacity','0');\r\n        ////pathElement.style.fillOpacity = 0;\r\n        if(data.lj == 1) {\r\n            pathElement.setAttribute('stroke-miterlimit',data.ml);\r\n            ////pathElement.style.strokeMiterlimit = data.ml;\r\n        }\r\n\r\n        elementData.w = PropertyFactory.getProp(this,data.w,0,null,dynamicProperties);\r\n        if(data.d){\r\n            var d = PropertyFactory.getDashProp(this,data.d,'svg',dynamicProperties);\r\n            if(!d.k){\r\n                pathElement.setAttribute('stroke-dasharray', d.dasharray);\r\n                ////pathElement.style.strokeDasharray = d.dasharray;\r\n                pathElement.setAttribute('stroke-dashoffset', d.dashoffset);\r\n                ////pathElement.style.strokeDashoffset = d.dashoffset;\r\n            }\r\n            elementData.d = d;\r\n        }\r\n\r\n    }\r\n    if(data.ty == 'fl' || data.ty == 'st'){\r\n        elementData.c = PropertyFactory.getProp(this,data.c,1,255,dynamicProperties);\r\n    } else {\r\n        elementData.g = PropertyFactory.getGradientProp(this,data.g,dynamicProperties);\r\n        if(data.t == 2){\r\n            elementData.h = PropertyFactory.getProp(this,data.h,0,0.01,dynamicProperties);\r\n            elementData.a = PropertyFactory.getProp(this,data.a,0,degToRads,dynamicProperties);\r\n        }\r\n        elementData.s = PropertyFactory.getProp(this,data.s,1,null,dynamicProperties);\r\n        elementData.e = PropertyFactory.getProp(this,data.e,1,null,dynamicProperties);\r\n        this.setGradientData(pathElement,data,elementData, styleOb);\r\n        var maskId = this.setGradientOpacity(data,elementData, styleOb);\r\n        if(maskId){\r\n            pathElement.setAttribute('mask','url(#'+maskId+')');\r\n        }\r\n    }\r\n    elementData.elem = pathElement;\r\n    //container.appendChild(pathElement);\r\n    if(data.r === 2) {\r\n        pathElement.setAttribute('fill-rule', 'evenodd');\r\n    }\r\n\r\n    if(data.ln){\r\n        pathElement.setAttribute('id',data.ln);\r\n    }\r\n    if(data.cl){\r\n        pathElement.setAttribute('class',data.cl);\r\n    }\r\n    styleOb.pElem = pathElement;\r\n    this.stylesList.push(styleOb);\r\n    elementData.style = styleOb;\r\n    return elementData;\r\n}\r\n\r\nIShapeElement.prototype.createGroupElement = function(data) {\r\n    var elementData = {\r\n        it: [],\r\n        prevViewData: []\r\n    };\r\n    var g = document.createElementNS(svgNS,'g');\r\n    elementData.gr = g;\r\n    if(data.ln){\r\n        elementData.gr.setAttribute('id',data.ln);\r\n    }\r\n    return elementData;\r\n}\r\n\r\nIShapeElement.prototype.createTransformElement = function(data, dynamicProperties) {\r\n    var elementData = {\r\n        transform : {\r\n            op: PropertyFactory.getProp(this,data.o,0,0.01,dynamicProperties),\r\n            mProps: PropertyFactory.getProp(this,data,2,null,dynamicProperties)\r\n        },\r\n        elements: []\r\n    };\r\n    return elementData;\r\n}\r\n\r\nIShapeElement.prototype.createShapeElement = function(data, ownTransformers, level, dynamicProperties) {\r\n    var elementData = {\r\n        elements : [],\r\n        caches:[],\r\n        styles : [],\r\n        transformers: ownTransformers,\r\n        lStr: ''\r\n    };\r\n    var ty = 4;\r\n    if(data.ty == 'rc'){\r\n        ty = 5;\r\n    }else if(data.ty == 'el'){\r\n        ty = 6;\r\n    }else if(data.ty == 'sr'){\r\n        ty = 7;\r\n    }\r\n    elementData.sh = ShapePropertyFactory.getShapeProp(this,data,ty,dynamicProperties);\r\n    elementData.lvl = level;\r\n    this.shapes.push(elementData.sh);\r\n    this.addShapeToModifiers(elementData);\r\n    return elementData;\r\n}\r\n\r\nvar cont = 0;\r\n\r\nIShapeElement.prototype.setElementStyles = function(){\r\n    var j, jLen = this.stylesList.length;\r\n    var arr = [];\r\n    for(j=0;j<jLen;j+=1){\r\n        if(!this.stylesList[j].closed){\r\n            arr.push(this.stylesList[j]);\r\n        }\r\n    }\r\n    return arr;\r\n}\r\n\r\nIShapeElement.prototype.reloadShapes = function(){\r\n    this.firstFrame = true;\r\n    var i, len = this.itemsData.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.prevViewData[i] = this.itemsData[i];\r\n    }\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement,this.dynamicProperties, 0, [], true);\r\n    var i, len = this.dynamicProperties.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.dynamicProperties[i].getValue();\r\n    }\r\n    this.renderModifiers();\r\n}\r\n\r\nIShapeElement.prototype.searchShapes = function(arr,itemsData,prevViewData,container,dynamicProperties, level, transformers, render){\r\n    var ownTransformers = [].concat(transformers);\r\n    var i, len = arr.length - 1;\r\n    var j, jLen;\r\n    var ownStyles = [], ownModifiers = [], styleOb, currentTransform, modifier, processedPos;\r\n    for(i=len;i>=0;i-=1){\r\n        processedPos = this.searchProcessedElement(arr[i]);\r\n        if(!processedPos){\r\n            arr[i]._render = render;\r\n        } else {\r\n            itemsData[i] = prevViewData[processedPos - 1];\r\n        }\r\n        if(arr[i].ty == 'fl' || arr[i].ty == 'st' || arr[i].ty == 'gf' || arr[i].ty == 'gs'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createStyleElement(arr[i], level, dynamicProperties);\r\n            } else {\r\n                itemsData[i].style.closed = false;\r\n            }\r\n            if(arr[i]._render){\r\n                container.appendChild(itemsData[i].elem);\r\n            }\r\n            ownStyles.push(itemsData[i].style);\r\n        }else if(arr[i].ty == 'gr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createGroupElement(arr[i]);\r\n            } else {\r\n                jLen = itemsData[i].it.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    itemsData[i].prevViewData[j] = itemsData[i].it[j];\r\n                }\r\n            }\r\n            this.searchShapes(arr[i].it,itemsData[i].it,itemsData[i].prevViewData,itemsData[i].gr,dynamicProperties, level + 1, ownTransformers, render);\r\n            if(arr[i]._render){\r\n                container.appendChild(itemsData[i].gr);\r\n            }\r\n        }else if(arr[i].ty == 'tr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createTransformElement(arr[i], dynamicProperties);\r\n            }\r\n            currentTransform = itemsData[i].transform;\r\n            ownTransformers.push(currentTransform);\r\n        }else if(arr[i].ty == 'sh' || arr[i].ty == 'rc' || arr[i].ty == 'el' || arr[i].ty == 'sr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createShapeElement(arr[i], ownTransformers, level, dynamicProperties);\r\n            }\r\n            itemsData[i].elements = this.setElementStyles();\r\n\r\n        }else if(arr[i].ty == 'tm' || arr[i].ty == 'rd' || arr[i].ty == 'ms'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                modifier.init(this,arr[i],dynamicProperties);\r\n                itemsData[i] = modifier;\r\n                this.shapeModifiers.push(modifier);\r\n            } else {\r\n                modifier = itemsData[i];\r\n                modifier.closed = false;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        }else if(arr[i].ty == 'rp'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                itemsData[i] = modifier;\r\n                modifier.init(this,arr,i,itemsData,dynamicProperties);\r\n                this.shapeModifiers.push(modifier);\r\n                render = false;\r\n            }else{\r\n                modifier = itemsData[i];\r\n                modifier.closed = true;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        }\r\n        this.addProcessedElement(arr[i], i + 1);\r\n    }\r\n    len = ownStyles.length;\r\n    for(i=0;i<len;i+=1){\r\n        ownStyles[i].closed = true;\r\n    }\r\n    len = ownModifiers.length;\r\n    for(i=0;i<len;i+=1){\r\n        ownModifiers[i].closed = true;\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.addShapeToModifiers = function(data) {\r\n    var i, len = this.shapeModifiers.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.shapeModifiers[i].addShape(data);\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.renderModifiers = function() {\r\n    if(!this.shapeModifiers.length){\r\n        return;\r\n    }\r\n    var i, len = this.shapes.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.shapes[i].reset();\r\n    }\r\n\r\n\r\n    len = this.shapeModifiers.length;\r\n\r\n    for(i=len-1;i>=0;i-=1){\r\n        this.shapeModifiers[i].processShapes(this.firstFrame);\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.renderFrame = function(parentMatrix){\r\n    //this.reloadShapes();\r\n    var renderParent = this._parent.renderFrame.call(this,parentMatrix);\r\n    if(renderParent===false){\r\n        this.hide();\r\n        return;\r\n    }\r\n    if(this.hidden){\r\n        this.layerElement.style.display = 'block';\r\n        this.hidden = false;\r\n    }\r\n    this.renderModifiers();\r\n    var i, len = this.stylesList.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.stylesList[i].d = '';\r\n        this.stylesList[i].mdf = false;\r\n    }\r\n    this.renderShape(this.shapesData,this.itemsData, null);\r\n\r\n    for (i = 0; i < len; i += 1) {\r\n        if (this.stylesList[i].ld === '0') {\r\n            this.stylesList[i].ld = '1';\r\n            this.stylesList[i].pElem.style.display = 'block';\r\n            //this.stylesList[i].parent.appendChild(this.stylesList[i].pElem);\r\n        }\r\n        if (this.stylesList[i].mdf || this.firstFrame) {\r\n            this.stylesList[i].pElem.setAttribute('d', this.stylesList[i].d);\r\n            if(this.stylesList[i].msElem){\r\n                this.stylesList[i].msElem.setAttribute('d', this.stylesList[i].d);\r\n            }\r\n        }\r\n    }\r\n    if (this.firstFrame) {\r\n        this.firstFrame = false;\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.hide = function(){\r\n    if(!this.hidden){\r\n        this.layerElement.style.display = 'none';\r\n        var i, len = this.stylesList.length;\r\n        for(i=len-1;i>=0;i-=1){\r\n            if(this.stylesList[i].ld !== '0'){\r\n                this.stylesList[i].ld = '0';\r\n                this.stylesList[i].pElem.style.display = 'none';\r\n                if(this.stylesList[i].pElem.parentNode){\r\n                    this.stylesList[i].parent = this.stylesList[i].pElem.parentNode;\r\n                    //this.stylesList[i].pElem.parentNode.removeChild(this.stylesList[i].pElem);\r\n                }\r\n            }\r\n        }\r\n        this.hidden = true;\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.renderShape = function(items,data, container){\r\n    var i, len = items.length - 1;\r\n    var ty;\r\n    for(i=len;i>=0;i-=1){\r\n        ty = items[i].ty;\r\n        if(ty == 'tr'){\r\n            if(this.firstFrame || data[i].transform.op.mdf && container){\r\n                container.setAttribute('opacity',data[i].transform.op.v);\r\n            }\r\n            if(this.firstFrame || data[i].transform.mProps.mdf && container){\r\n                container.setAttribute('transform',data[i].transform.mProps.v.to2dCSS());\r\n            }\r\n        }else if(ty == 'sh' || ty == 'el' || ty == 'rc' || ty == 'sr'){\r\n            this.renderPath(items[i],data[i]);\r\n        }else if(ty == 'fl'){\r\n            this.renderFill(items[i],data[i]);\r\n        }else if(ty == 'gf'){\r\n            this.renderGradient(items[i],data[i]);\r\n        }else if(ty == 'gs'){\r\n            this.renderGradient(items[i],data[i]);\r\n            this.renderStroke(items[i],data[i]);\r\n        }else if(ty == 'st'){\r\n            this.renderStroke(items[i],data[i]);\r\n        }else if(ty == 'gr'){\r\n            this.renderShape(items[i].it,data[i].it, data[i].gr);\r\n        }else if(ty == 'tm'){\r\n            //\r\n        }\r\n    }\r\n\r\n};\r\n\r\nIShapeElement.prototype.buildShapeString = function(pathNodes, length, closed, mat) {\r\n    var i, shapeString = '';\r\n    for(i = 1; i < length; i += 1) {\r\n        if (i === 1) {\r\n            shapeString += \" M\" + mat.applyToPointStringified(pathNodes.v[0][0], pathNodes.v[0][1]);\r\n        }\r\n        shapeString += \" C\" + mat.applyToPointStringified(pathNodes.o[i - 1][0], pathNodes.o[i - 1][1]) + \" \" + mat.applyToPointStringified(pathNodes.i[i][0], pathNodes.i[i][1]) + \" \" + mat.applyToPointStringified(pathNodes.v[i][0], pathNodes.v[i][1]);\r\n    }\r\n    if (length === 1) {\r\n        shapeString += \" M\" + mat.applyToPointStringified(pathNodes.v[0][0], pathNodes.v[0][1]);\r\n    }\r\n    if (closed && length) {\r\n        shapeString += \" C\" + mat.applyToPointStringified(pathNodes.o[i - 1][0], pathNodes.o[i - 1][1]) + \" \" + mat.applyToPointStringified(pathNodes.i[0][0], pathNodes.i[0][1]) + \" \" + mat.applyToPointStringified(pathNodes.v[0][0], pathNodes.v[0][1]);\r\n        shapeString += 'z';\r\n    }\r\n    return shapeString;\r\n};\r\n\r\nIShapeElement.prototype.renderPath = function(pathData,itemData){\r\n    var len, i, j, jLen,pathStringTransformed,redraw,pathNodes,l, lLen = itemData.elements.length;\r\n    var lvl = itemData.lvl;\r\n    if(!pathData._render){\r\n        return;\r\n    }\r\n    for(l=0;l<lLen;l+=1){\r\n        if(itemData.elements[l].data._render){\r\n            redraw = itemData.sh.mdf || this.firstFrame;\r\n            pathStringTransformed = 'M0 0';\r\n            var paths = itemData.sh.paths;\r\n            jLen = paths._length;\r\n            if(itemData.elements[l].lvl < lvl){\r\n                var mat = this.mHelper.reset(), props;\r\n                var iterations = lvl - itemData.elements[l].lvl;\r\n                var k = itemData.transformers.length-1;\r\n                while(iterations > 0) {\r\n                    redraw = itemData.transformers[k].mProps.mdf || redraw;\r\n                    props = itemData.transformers[k].mProps.v.props;\r\n                    mat.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\r\n                    iterations --;\r\n                    k --;\r\n                }\r\n                if(redraw){\r\n                    for(j=0;j<jLen;j+=1){\r\n                        pathNodes = paths.shapes[j];\r\n                        if(pathNodes && pathNodes._length){\r\n                            pathStringTransformed += this.buildShapeString(pathNodes, pathNodes._length, pathNodes.c, mat);\r\n                        }\r\n                    }\r\n                    itemData.caches[l] = pathStringTransformed;\r\n                } else {\r\n                    pathStringTransformed = itemData.caches[l];\r\n                }\r\n            } else {\r\n                if(redraw){\r\n                    for(j=0;j<jLen;j+=1){\r\n                        pathNodes = paths.shapes[j];\r\n                        if(pathNodes && pathNodes._length){\r\n                            pathStringTransformed += this.buildShapeString(pathNodes, pathNodes._length, pathNodes.c, this.identityMatrix);\r\n                        }\r\n                    }\r\n                    itemData.caches[l] = pathStringTransformed;\r\n                } else {\r\n                    pathStringTransformed = itemData.caches[l];\r\n                }\r\n            }\r\n            itemData.elements[l].d += pathStringTransformed;\r\n            itemData.elements[l].mdf = redraw || itemData.elements[l].mdf;\r\n        } else {\r\n            itemData.elements[l].mdf = true;\r\n        }\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.renderFill = function(styleData,itemData){\r\n    var styleElem = itemData.style;\r\n\r\n    if(itemData.c.mdf || this.firstFrame){\r\n        styleElem.pElem.setAttribute('fill','rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')');\r\n        ////styleElem.pElem.style.fill = 'rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')';\r\n    }\r\n    if(itemData.o.mdf || this.firstFrame){\r\n        styleElem.pElem.setAttribute('fill-opacity',itemData.o.v);\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.renderGradient = function(styleData,itemData){\r\n    var gfill = itemData.gf;\r\n    var opFill = itemData.of;\r\n    var pt1 = itemData.s.v,pt2 = itemData.e.v;\r\n\r\n    if(itemData.o.mdf || this.firstFrame){\r\n        var attr = styleData.ty === 'gf' ? 'fill-opacity':'stroke-opacity';\r\n        itemData.elem.setAttribute(attr,itemData.o.v);\r\n    }\r\n    //clippedElement.setAttribute('transform','matrix(1,0,0,1,-100,0)');\r\n    if(itemData.s.mdf || this.firstFrame){\r\n        var attr1 = styleData.t === 1 ? 'x1':'cx';\r\n        var attr2 = attr1 === 'x1' ? 'y1':'cy';\r\n        gfill.setAttribute(attr1,pt1[0]);\r\n        gfill.setAttribute(attr2,pt1[1]);\r\n        if(opFill){\r\n            opFill.setAttribute(attr1,pt1[0]);\r\n            opFill.setAttribute(attr2,pt1[1]);\r\n        }\r\n    }\r\n    var stops, i, len, stop;\r\n    if(itemData.g.cmdf || this.firstFrame){\r\n        stops = itemData.cst;\r\n        var cValues = itemData.g.c;\r\n        len = stops.length;\r\n        for(i=0;i<len;i+=1){\r\n            stop = stops[i];\r\n            stop.setAttribute('offset',cValues[i*4]+'%');\r\n            stop.setAttribute('stop-color','rgb('+cValues[i*4+1]+','+cValues[i*4+2]+','+cValues[i*4+3]+')');\r\n        }\r\n    }\r\n    if(opFill && (itemData.g.omdf || this.firstFrame)){\r\n        stops = itemData.ost;\r\n        var oValues = itemData.g.o;\r\n        len = stops.length;\r\n        for(i=0;i<len;i+=1){\r\n            stop = stops[i];\r\n            stop.setAttribute('offset',oValues[i*2]+'%');\r\n            stop.setAttribute('stop-opacity',oValues[i*2+1]);\r\n        }\r\n    }\r\n    if(styleData.t === 1){\r\n        if(itemData.e.mdf  || this.firstFrame){\r\n            gfill.setAttribute('x2',pt2[0]);\r\n            gfill.setAttribute('y2',pt2[1]);\r\n            if(opFill){\r\n                opFill.setAttribute('x2',pt2[0]);\r\n                opFill.setAttribute('y2',pt2[1]);\r\n            }\r\n        }\r\n    } else {\r\n        var rad;\r\n        if(itemData.s.mdf || itemData.e.mdf || this.firstFrame){\r\n            rad = Math.sqrt(Math.pow(pt1[0]-pt2[0],2)+Math.pow(pt1[1]-pt2[1],2));\r\n            gfill.setAttribute('r',rad);\r\n            if(opFill){\r\n                opFill.setAttribute('r',rad);\r\n            }\r\n        }\r\n        if(itemData.e.mdf || itemData.h.mdf || itemData.a.mdf || this.firstFrame){\r\n            if(!rad){\r\n                rad = Math.sqrt(Math.pow(pt1[0]-pt2[0],2)+Math.pow(pt1[1]-pt2[1],2));\r\n            }\r\n            var ang = Math.atan2(pt2[1]-pt1[1], pt2[0]-pt1[0]);\r\n\r\n            var percent = itemData.h.v >= 1 ? 0.99 : itemData.h.v <= -1 ? -0.99:itemData.h.v;\r\n            var dist = rad*percent;\r\n            var x = Math.cos(ang + itemData.a.v)*dist + pt1[0];\r\n            var y = Math.sin(ang + itemData.a.v)*dist + pt1[1];\r\n            gfill.setAttribute('fx',x);\r\n            gfill.setAttribute('fy',y);\r\n            if(opFill){\r\n                opFill.setAttribute('fx',x);\r\n                opFill.setAttribute('fy',y);\r\n            }\r\n        }\r\n        //gfill.setAttribute('fy','200');\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.renderStroke = function(styleData,itemData){\r\n    var styleElem = itemData.style;\r\n    //TODO fix dashes\r\n    var d = itemData.d;\r\n    var dasharray,dashoffset;\r\n    if(d && d.k && (d.mdf || this.firstFrame)){\r\n        styleElem.pElem.setAttribute('stroke-dasharray', d.dasharray);\r\n        ////styleElem.pElem.style.strokeDasharray = d.dasharray;\r\n        styleElem.pElem.setAttribute('stroke-dashoffset', d.dashoffset);\r\n        ////styleElem.pElem.style.strokeDashoffset = d.dashoffset;\r\n    }\r\n    if(itemData.c && (itemData.c.mdf || this.firstFrame)){\r\n        styleElem.pElem.setAttribute('stroke','rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')');\r\n        ////styleElem.pElem.style.stroke = 'rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')';\r\n    }\r\n    if(itemData.o.mdf || this.firstFrame){\r\n        styleElem.pElem.setAttribute('stroke-opacity',itemData.o.v);\r\n    }\r\n    if(itemData.w.mdf || this.firstFrame){\r\n        styleElem.pElem.setAttribute('stroke-width',itemData.w.v);\r\n        if(styleElem.msElem){\r\n            styleElem.msElem.setAttribute('stroke-width',itemData.w.v);\r\n        }\r\n        ////styleElem.pElem.style.strokeWidth = itemData.w.v;\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.destroy = function(){\r\n    this._parent.destroy.call(this._parent);\r\n    this.shapeData = null;\r\n    this.itemsData = null;\r\n    this.parentContainer = null;\r\n    this.placeholder = null;\r\n};\r\n\nfunction ITextElement(data, animationItem,parentContainer,globalData){\r\n}\r\nITextElement.prototype.init = function(){\r\n    this.lettersChangedFlag = true;\r\n    this.dynamicProperties = this.dynamicProperties || [];\r\n    this.textAnimator = new TextAnimatorProperty(this.data.t, this.renderType, this);\r\n    this.textProperty = new TextProperty(this, this.data.t, this.dynamicProperties);\r\n    this._parent.init.call(this);\r\n    this.textAnimator.searchProperties(this.dynamicProperties);\r\n};\r\n\r\nITextElement.prototype.prepareFrame = function(num) {\r\n    this._parent.prepareFrame.call(this, num);\r\n    if(this.textProperty.mdf || this.textProperty.firstFrame) {\r\n        this.buildNewText();\r\n        this.textProperty.firstFrame = false;\r\n    }\r\n}\r\n\r\nITextElement.prototype.createPathShape = function(matrixHelper, shapes) {\r\n    var j,jLen = shapes.length;\r\n    var k, kLen, pathNodes;\r\n    var shapeStr = '';\r\n    for(j=0;j<jLen;j+=1){\r\n        pathNodes = shapes[j].ks.k;\r\n        shapeStr += this.buildShapeString(pathNodes, pathNodes.i.length, true, matrixHelper);\r\n    }\r\n    return shapeStr;\r\n};\r\n\r\nITextElement.prototype.updateDocumentData = function(newData, index) {\r\n    this.textProperty.updateDocumentData(newData, index);\r\n}\r\n\r\nITextElement.prototype.applyTextPropertiesToMatrix = function(documentData, matrixHelper, lineNumber, xPos, yPos) {\r\n    if(documentData.ps){\r\n        matrixHelper.translate(documentData.ps[0],documentData.ps[1] + documentData.ascent,0);\r\n    }\r\n    matrixHelper.translate(0,-documentData.ls,0);\r\n    switch(documentData.j){\r\n        case 1:\r\n            matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]),0,0);\r\n            break;\r\n        case 2:\r\n            matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber] )/2,0,0);\r\n            break;\r\n    }\r\n    matrixHelper.translate(xPos, yPos, 0);\r\n}\r\n\r\nITextElement.prototype.buildColor = function(colorData) {\r\n    return 'rgb(' + Math.round(colorData[0]*255) + ',' + Math.round(colorData[1]*255) + ',' + Math.round(colorData[2]*255) + ')';\r\n}\r\n\r\nITextElement.prototype.buildShapeString = IShapeElement.prototype.buildShapeString;\r\n\r\nITextElement.prototype.emptyProp = new LetterProps();\r\n\r\nITextElement.prototype.destroy = function(){\r\n    this._parent.destroy.call(this._parent);\r\n};\nfunction SVGTextElement(data,parentContainer,globalData,comp, placeholder){\r\n    this.textSpans = [];\r\n    this.renderType = 'svg';\r\n    this._parent.constructor.call(this,data,parentContainer,globalData,comp, placeholder);\r\n}\r\ncreateElement(SVGBaseElement, SVGTextElement);\r\n\r\nextendPrototype(ITextElement, SVGTextElement);\r\n\r\nSVGTextElement.prototype.createElements = function(){\r\n\r\n    this._parent.createElements.call(this);\r\n\r\n\r\n    if(this.data.ln){\r\n        this.layerElement.setAttribute('id',this.data.ln);\r\n    }\r\n    if(this.data.cl){\r\n        this.layerElement.setAttribute('class',this.data.cl);\r\n    }\r\n    if (this.data.singleShape && !this.globalData.fontManager.chars) {\r\n        this.textContainer = document.createElementNS(svgNS,'text');\r\n    }\r\n};\r\n\r\nSVGTextElement.prototype.buildNewText = function(){\r\n    var i, len;\r\n\r\n    var documentData = this.textProperty.currentData;\r\n    this.renderedLetters = Array.apply(null,{length:documentData ? documentData.l.length : 0});\r\n    if(documentData.fc) {\r\n        this.layerElement.setAttribute('fill', this.buildColor(documentData.fc));\r\n    }else{\r\n        this.layerElement.setAttribute('fill', 'rgba(0,0,0,0)');\r\n    }\r\n    if(documentData.sc){\r\n        this.layerElement.setAttribute('stroke', this.buildColor(documentData.sc));\r\n        this.layerElement.setAttribute('stroke-width', documentData.sw);\r\n    }\r\n    this.layerElement.setAttribute('font-size', documentData.s);\r\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\r\n    if(fontData.fClass){\r\n        this.layerElement.setAttribute('class',fontData.fClass);\r\n    } else {\r\n        this.layerElement.setAttribute('font-family', fontData.fFamily);\r\n        var fWeight = documentData.fWeight, fStyle = documentData.fStyle;\r\n        this.layerElement.setAttribute('font-style', fStyle);\r\n        this.layerElement.setAttribute('font-weight', fWeight);\r\n    }\r\n\r\n    var letters = documentData.l || [];\r\n    var usesGlyphs = this.globalData.fontManager.chars;\r\n    len = letters.length;\r\n    if(!len){\r\n        return;\r\n    }\r\n    var tSpan;\r\n    var matrixHelper = this.mHelper;\r\n    var shapes, shapeStr = '', singleShape = this.data.singleShape;\r\n    var xPos = 0, yPos = 0, firstLine = true;\r\n    var trackingOffset = documentData.tr/1000*documentData.s;\r\n    if(singleShape && !usesGlyphs) {\r\n        var tElement = this.textContainer;\r\n        var justify = '';\r\n        switch(documentData.j) {\r\n            case 1:\r\n                justify = 'end';\r\n                break;\r\n            case 2:\r\n                justify = 'middle';\r\n                break;\r\n            case 2:\r\n                justify = 'start';\r\n                break;\r\n        }\r\n        tElement.setAttribute('text-anchor',justify);\r\n        tElement.setAttribute('letter-spacing',trackingOffset);\r\n        var textContent = documentData.t.split(String.fromCharCode(13));\r\n        len = textContent.length;\r\n        var yPos = documentData.ps ? documentData.ps[1] + documentData.ascent : 0;\r\n        for ( i = 0; i < len; i += 1) {\r\n            tSpan = this.textSpans[i] || document.createElementNS(svgNS,'tspan');\r\n            tSpan.textContent = textContent[i];\r\n            tSpan.setAttribute('x', 0);\r\n            tSpan.setAttribute('y', yPos);\r\n            tSpan.style.display = 'inherit';\r\n            tElement.appendChild(tSpan);\r\n            this.textSpans[i] = tSpan;\r\n            yPos += documentData.lh;\r\n        }\r\n        \r\n        this.layerElement.appendChild(tElement);\r\n    } else {\r\n        var cachedSpansLength = this.textSpans.length;\r\n        var shapeData, charData;\r\n        for (i = 0; i < len; i += 1) {\r\n            if(!usesGlyphs || !singleShape || i === 0){\r\n                tSpan = cachedSpansLength > i ? this.textSpans[i] : document.createElementNS(svgNS,usesGlyphs?'path':'text');\r\n                if (cachedSpansLength <= i) {\r\n                    tSpan.setAttribute('stroke-linecap', 'butt');\r\n                    tSpan.setAttribute('stroke-linejoin','round');\r\n                    tSpan.setAttribute('stroke-miterlimit','4');\r\n                    this.textSpans[i] = tSpan;\r\n                    this.layerElement.appendChild(tSpan);\r\n                }\r\n                tSpan.style.display = 'inherit';\r\n            }\r\n            \r\n            matrixHelper.reset();\r\n            if(usesGlyphs) {\r\n                matrixHelper.scale(documentData.s / 100, documentData.s / 100);\r\n                if (singleShape) {\r\n                    if(letters[i].n) {\r\n                        xPos = -trackingOffset;\r\n                        yPos += documentData.yOffset;\r\n                        yPos += firstLine ? 1 : 0;\r\n                        firstLine = false;\r\n                    }\r\n                    this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\r\n                    xPos += letters[i].l || 0;\r\n                    //xPos += letters[i].val === ' ' ? 0 : trackingOffset;\r\n                    xPos += trackingOffset;\r\n                }\r\n                charData = this.globalData.fontManager.getCharData(documentData.t.charAt(i), fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\r\n                shapeData = charData && charData.data || {};\r\n                shapes = shapeData.shapes ? shapeData.shapes[0].it : [];\r\n                if(!singleShape){\r\n                    tSpan.setAttribute('d',this.createPathShape(matrixHelper,shapes));\r\n                } else {\r\n                    shapeStr += this.createPathShape(matrixHelper,shapes);\r\n                }\r\n            } else {\r\n                tSpan.textContent = letters[i].val;\r\n                tSpan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\",\"preserve\");\r\n            }\r\n            //\r\n        }\r\n        if (singleShape) {\r\n            tSpan.setAttribute('d',shapeStr);\r\n        }\r\n    }\r\n    while (i < this.textSpans.length){\r\n        this.textSpans[i].style.display = 'none';\r\n        i += 1;\r\n    }\r\n    \r\n    this._sizeChanged = true;\r\n}\r\n\r\nSVGTextElement.prototype.sourceRectAtTime = function(time){\r\n    this.prepareFrame(this.comp.renderedFrame - this.data.st);\r\n    this.renderLetters();\r\n    if(this._sizeChanged){\r\n        this._sizeChanged = false;\r\n        var textBox = this.layerElement.getBBox();\r\n        this.bbox = {\r\n            top: textBox.y,\r\n            left: textBox.x,\r\n            width: textBox.width,\r\n            height: textBox.height\r\n        }\r\n    }\r\n    return this.bbox;\r\n}\r\n\r\nSVGTextElement.prototype.renderLetters = function(){\r\n\r\n    if(!this.data.singleShape){\r\n        this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\r\n        if(this.lettersChangedFlag || this.textAnimator.lettersChangedFlag){\r\n            this._sizeChanged = true;\r\n            var  i,len;\r\n            var renderedLetters = this.textAnimator.renderedLetters;\r\n\r\n            var letters = this.textProperty.currentData.l;\r\n\r\n            len = letters.length;\r\n            var renderedLetter, textSpan;\r\n            for(i=0;i<len;i+=1){\r\n                if(letters[i].n){\r\n                    continue;\r\n                }\r\n                renderedLetter = renderedLetters[i];\r\n                textSpan = this.textSpans[i];\r\n                if(renderedLetter.mdf.m) {\r\n                    textSpan.setAttribute('transform',renderedLetter.m);\r\n                }\r\n                if(renderedLetter.mdf.o) {\r\n                    textSpan.setAttribute('opacity',renderedLetter.o);\r\n                }\r\n                if(renderedLetter.mdf.sw){\r\n                    textSpan.setAttribute('stroke-width',renderedLetter.sw);\r\n                }\r\n                if(renderedLetter.mdf.sc){\r\n                    textSpan.setAttribute('stroke',renderedLetter.sc);\r\n                }\r\n                if(renderedLetter.mdf.fc){\r\n                    textSpan.setAttribute('fill',renderedLetter.fc);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nSVGTextElement.prototype.renderFrame = function(parentMatrix){\r\n\r\n    var renderParent = this._parent.renderFrame.call(this,parentMatrix);\r\n    if(renderParent===false){\r\n        this.hide();\r\n        return;\r\n    }\r\n    if(this.hidden){\r\n        this.show();\r\n    }\r\n    if(this.firstFrame) {\r\n        this.firstFrame = false;\r\n    }\r\n    this.renderLetters();\r\n}\nfunction SVGTintFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = document.createElementNS(svgNS,'feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','linearRGB');\r\n    feColorMatrix.setAttribute('values','0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f1');\r\n    filter.appendChild(feColorMatrix);\r\n    feColorMatrix = document.createElementNS(svgNS,'feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n    feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f2');\r\n    filter.appendChild(feColorMatrix);\r\n    this.matrixFilter = feColorMatrix;\r\n    if(filterManager.effectElements[2].p.v !== 100 || filterManager.effectElements[2].p.k){\r\n        var feMerge = document.createElementNS(svgNS,'feMerge');\r\n        filter.appendChild(feMerge);\r\n        var feMergeNode;\r\n        feMergeNode = document.createElementNS(svgNS,'feMergeNode');\r\n        feMergeNode.setAttribute('in','SourceGraphic');\r\n        feMerge.appendChild(feMergeNode);\r\n        feMergeNode = document.createElementNS(svgNS,'feMergeNode');\r\n        feMergeNode.setAttribute('in','f2');\r\n        feMerge.appendChild(feMergeNode);\r\n    }\r\n}\r\n\r\nSVGTintFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager.mdf){\r\n        var colorBlack = this.filterManager.effectElements[0].p.v;\r\n        var colorWhite = this.filterManager.effectElements[1].p.v;\r\n        var opacity = this.filterManager.effectElements[2].p.v/100;\r\n        this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');\r\n    }\r\n};\nfunction SVGFillFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = document.createElementNS(svgNS,'feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n    feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\r\n    filter.appendChild(feColorMatrix);\r\n    this.matrixFilter = feColorMatrix;\r\n}\r\nSVGFillFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager.mdf){\r\n        var color = this.filterManager.effectElements[2].p.v;\r\n        var opacity = this.filterManager.effectElements[6].p.v;\r\n        this.matrixFilter.setAttribute('values','0 0 0 0 '+color[0]+' 0 0 0 0 '+color[1]+' 0 0 0 0 '+color[2]+' 0 0 0 '+opacity+' 0');\r\n    }\r\n};\nfunction SVGStrokeEffect(elem, filterManager){\r\n    this.initialized = false;\r\n    this.filterManager = filterManager;\r\n    this.elem = elem;\r\n    this.paths = [];\r\n}\r\n\r\nSVGStrokeEffect.prototype.initialize = function(){\r\n\r\n    var elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\r\n    var path,groupPath, i, len;\r\n    if(this.filterManager.effectElements[1].p.v === 1){\r\n        len = this.elem.maskManager.masksProperties.length;\r\n        i = 0;\r\n    } else {\r\n        i = this.filterManager.effectElements[0].p.v - 1;\r\n        len = i + 1;\r\n    }\r\n    groupPath = document.createElementNS(svgNS,'g'); \r\n    groupPath.setAttribute('fill','none');\r\n    groupPath.setAttribute('stroke-linecap','round');\r\n    groupPath.setAttribute('stroke-dashoffset',1);\r\n    for(i;i<len;i+=1){\r\n        path = document.createElementNS(svgNS,'path');\r\n        groupPath.appendChild(path);\r\n        this.paths.push({p:path,m:i});\r\n    }\r\n    if(this.filterManager.effectElements[10].p.v === 3){\r\n        var mask = document.createElementNS(svgNS,'mask');\r\n        var id = 'stms_' + randomString(10);\r\n        mask.setAttribute('id',id);\r\n        mask.setAttribute('mask-type','alpha');\r\n        mask.appendChild(groupPath);\r\n        this.elem.globalData.defs.appendChild(mask);\r\n        var g = document.createElementNS(svgNS,'g');\r\n        g.setAttribute('mask','url(' + locationHref + '#'+id+')');\r\n        if(elemChildren[0]){\r\n            g.appendChild(elemChildren[0]);\r\n        }\r\n        this.elem.layerElement.appendChild(g);\r\n        this.masker = mask;\r\n        groupPath.setAttribute('stroke','#fff');\r\n    } else if(this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2){\r\n        if(this.filterManager.effectElements[10].p.v === 2){\r\n            var elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\r\n            while(elemChildren.length){\r\n                this.elem.layerElement.removeChild(elemChildren[0]);\r\n            }\r\n        }\r\n        this.elem.layerElement.appendChild(groupPath);\r\n        this.elem.layerElement.removeAttribute('mask');\r\n        groupPath.setAttribute('stroke','#fff');\r\n    }\r\n    this.initialized = true;\r\n    this.pathMasker = groupPath;\r\n}\r\n\r\nSVGStrokeEffect.prototype.renderFrame = function(forceRender){\r\n    if(!this.initialized){\r\n        this.initialize();\r\n    }\r\n    var i, len = this.paths.length;\r\n    var mask, path;\r\n    for(i=0;i<len;i+=1){\r\n        mask = this.elem.maskManager.viewData[this.paths[i].m];\r\n        path = this.paths[i].p;\r\n        if(forceRender || this.filterManager.mdf || mask.prop.mdf){\r\n            path.setAttribute('d',mask.lastPath);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[9].p.mdf || this.filterManager.effectElements[4].p.mdf || this.filterManager.effectElements[7].p.mdf || this.filterManager.effectElements[8].p.mdf || mask.prop.mdf){\r\n            var dasharrayValue;\r\n            if(this.filterManager.effectElements[7].p.v !== 0 || this.filterManager.effectElements[8].p.v !== 100){\r\n                var s = Math.min(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)/100;\r\n                var e = Math.max(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)/100;\r\n                var l = path.getTotalLength();\r\n                dasharrayValue = '0 0 0 ' + l*s + ' ';\r\n                var lineLength = l*(e-s);\r\n                var segment = 1+this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100;\r\n                var units = Math.floor(lineLength/segment);\r\n                var j;\r\n                for(j=0;j<units;j+=1){\r\n                    dasharrayValue += '1 ' + this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100 + ' ';\r\n                }\r\n                dasharrayValue += '0 ' + l*10 + ' 0 0';\r\n            } else {\r\n                dasharrayValue = '1 ' + this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100;\r\n            }\r\n            path.setAttribute('stroke-dasharray',dasharrayValue);\r\n        }\r\n    }\r\n    if(forceRender || this.filterManager.effectElements[4].p.mdf){\r\n        this.pathMasker.setAttribute('stroke-width',this.filterManager.effectElements[4].p.v*2);\r\n    }\r\n    \r\n    if(forceRender || this.filterManager.effectElements[6].p.mdf){\r\n        this.pathMasker.setAttribute('opacity',this.filterManager.effectElements[6].p.v);\r\n    }\r\n    if(this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2){\r\n        if(forceRender || this.filterManager.effectElements[3].p.mdf){\r\n            var color = this.filterManager.effectElements[3].p.v;\r\n            this.pathMasker.setAttribute('stroke','rgb('+bm_floor(color[0]*255)+','+bm_floor(color[1]*255)+','+bm_floor(color[2]*255)+')');\r\n        }\r\n    }\r\n};\nfunction SVGTritoneFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = document.createElementNS(svgNS,'feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','linearRGB');\r\n    feColorMatrix.setAttribute('values','0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f1');\r\n    filter.appendChild(feColorMatrix);\r\n    var feComponentTransfer = document.createElementNS(svgNS,'feComponentTransfer');\r\n    feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n    filter.appendChild(feComponentTransfer);\r\n    this.matrixFilter = feComponentTransfer;\r\n    var feFuncR = document.createElementNS(svgNS,'feFuncR');\r\n    feFuncR.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncR);\r\n    this.feFuncR = feFuncR;\r\n    var feFuncG = document.createElementNS(svgNS,'feFuncG');\r\n    feFuncG.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncG);\r\n    this.feFuncG = feFuncG;\r\n    var feFuncB = document.createElementNS(svgNS,'feFuncB');\r\n    feFuncB.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncB);\r\n    this.feFuncB = feFuncB;\r\n}\r\n\r\nSVGTritoneFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager.mdf){\r\n        var color1 = this.filterManager.effectElements[0].p.v;\r\n        var color2 = this.filterManager.effectElements[1].p.v;\r\n        var color3 = this.filterManager.effectElements[2].p.v;\r\n        var tableR = color3[0] + ' ' + color2[0] + ' ' + color1[0]\r\n        var tableG = color3[1] + ' ' + color2[1] + ' ' + color1[1]\r\n        var tableB = color3[2] + ' ' + color2[2] + ' ' + color1[2]\r\n        this.feFuncR.setAttribute('tableValues', tableR);\r\n        this.feFuncG.setAttribute('tableValues', tableG);\r\n        this.feFuncB.setAttribute('tableValues', tableB);\r\n        //var opacity = this.filterManager.effectElements[2].p.v/100;\r\n        //this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');\r\n    }\r\n};\nfunction SVGProLevelsFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var effectElements = this.filterManager.effectElements;\r\n    var feComponentTransfer = document.createElementNS(svgNS,'feComponentTransfer');\r\n    var feFuncR, feFuncG, feFuncB;\r\n    \r\n    if(effectElements[9].p.k || effectElements[9].p.v !== 0 || effectElements[10].p.k || effectElements[10].p.v !== 1 || effectElements[11].p.k || effectElements[11].p.v !== 1 || effectElements[12].p.k || effectElements[12].p.v !== 0 || effectElements[13].p.k || effectElements[13].p.v !== 1){\r\n        this.feFuncR = this.createFeFunc('feFuncR', feComponentTransfer);\r\n    }\r\n    if(effectElements[16].p.k || effectElements[16].p.v !== 0 || effectElements[17].p.k || effectElements[17].p.v !== 1 || effectElements[18].p.k || effectElements[18].p.v !== 1 || effectElements[19].p.k || effectElements[19].p.v !== 0 || effectElements[20].p.k || effectElements[20].p.v !== 1){\r\n        this.feFuncG = this.createFeFunc('feFuncG', feComponentTransfer);\r\n    }\r\n    if(effectElements[23].p.k || effectElements[23].p.v !== 0 || effectElements[24].p.k || effectElements[24].p.v !== 1 || effectElements[25].p.k || effectElements[25].p.v !== 1 || effectElements[26].p.k || effectElements[26].p.v !== 0 || effectElements[27].p.k || effectElements[27].p.v !== 1){\r\n        this.feFuncB = this.createFeFunc('feFuncB', feComponentTransfer);\r\n    }\r\n    if(effectElements[30].p.k || effectElements[30].p.v !== 0 || effectElements[31].p.k || effectElements[31].p.v !== 1 || effectElements[32].p.k || effectElements[32].p.v !== 1 || effectElements[33].p.k || effectElements[33].p.v !== 0 || effectElements[34].p.k || effectElements[34].p.v !== 1){\r\n        this.feFuncA = this.createFeFunc('feFuncA', feComponentTransfer);\r\n    }\r\n    \r\n    if(this.feFuncR || this.feFuncG || this.feFuncB || this.feFuncA){\r\n        feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n        filter.appendChild(feComponentTransfer);\r\n        feComponentTransfer = document.createElementNS(svgNS,'feComponentTransfer');\r\n    }\r\n\r\n    if(effectElements[2].p.k || effectElements[2].p.v !== 0 || effectElements[3].p.k || effectElements[3].p.v !== 1 || effectElements[4].p.k || effectElements[4].p.v !== 1 || effectElements[5].p.k || effectElements[5].p.v !== 0 || effectElements[6].p.k || effectElements[6].p.v !== 1){\r\n\r\n        feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n        filter.appendChild(feComponentTransfer);\r\n        this.feFuncRComposed = this.createFeFunc('feFuncR', feComponentTransfer);\r\n        this.feFuncGComposed = this.createFeFunc('feFuncG', feComponentTransfer);\r\n        this.feFuncBComposed = this.createFeFunc('feFuncB', feComponentTransfer);\r\n    }\r\n}\r\n\r\nSVGProLevelsFilter.prototype.createFeFunc = function(type, feComponentTransfer) {\r\n    var feFunc = document.createElementNS(svgNS,type);\r\n    feFunc.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFunc);\r\n    return feFunc;\r\n};\r\n\r\nSVGProLevelsFilter.prototype.getTableValue = function(inputBlack, inputWhite, gamma, outputBlack, outputWhite) {\r\n    var cnt = 0;\r\n    var segments = 256;\r\n    var perc;\r\n    var min = Math.min(inputBlack, inputWhite);\r\n    var max = Math.max(inputBlack, inputWhite);\r\n    var table = Array.call(null,{length:segments});\r\n    var colorValue;\r\n    var pos = 0;\r\n    var outputDelta = outputWhite - outputBlack; \r\n    var inputDelta = inputWhite - inputBlack; \r\n    while(cnt <= 256) {\r\n        perc = cnt/256;\r\n        if(perc <= min){\r\n            colorValue = inputDelta < 0 ? outputWhite : outputBlack;\r\n        } else if(perc >= max){\r\n            colorValue = inputDelta < 0 ? outputBlack : outputWhite;\r\n        } else {\r\n            colorValue = (outputBlack + outputDelta * Math.pow((perc - inputBlack) / inputDelta, 1 / gamma));\r\n        }\r\n        table[pos++] = colorValue;\r\n        cnt += 256/(segments-1);\r\n    }\r\n    return table.join(' ');\r\n};\r\n\r\nSVGProLevelsFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager.mdf){\r\n        var val, cnt, perc, bezier;\r\n        var effectElements = this.filterManager.effectElements;\r\n        if(this.feFuncRComposed && (forceRender || effectElements[2].p.mdf || effectElements[3].p.mdf || effectElements[4].p.mdf || effectElements[5].p.mdf || effectElements[6].p.mdf)){\r\n            val = this.getTableValue(effectElements[2].p.v,effectElements[3].p.v,effectElements[4].p.v,effectElements[5].p.v,effectElements[6].p.v);\r\n            this.feFuncRComposed.setAttribute('tableValues',val);\r\n            this.feFuncGComposed.setAttribute('tableValues',val);\r\n            this.feFuncBComposed.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncR && (forceRender || effectElements[9].p.mdf || effectElements[10].p.mdf || effectElements[11].p.mdf || effectElements[12].p.mdf || effectElements[13].p.mdf)){\r\n            val = this.getTableValue(effectElements[9].p.v,effectElements[10].p.v,effectElements[11].p.v,effectElements[12].p.v,effectElements[13].p.v);\r\n            this.feFuncR.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncG && (forceRender || effectElements[16].p.mdf || effectElements[17].p.mdf || effectElements[18].p.mdf || effectElements[19].p.mdf || effectElements[20].p.mdf)){\r\n            val = this.getTableValue(effectElements[16].p.v,effectElements[17].p.v,effectElements[18].p.v,effectElements[19].p.v,effectElements[20].p.v);\r\n            this.feFuncG.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncB && (forceRender || effectElements[23].p.mdf || effectElements[24].p.mdf || effectElements[25].p.mdf || effectElements[26].p.mdf || effectElements[27].p.mdf)){\r\n            val = this.getTableValue(effectElements[23].p.v,effectElements[24].p.v,effectElements[25].p.v,effectElements[26].p.v,effectElements[27].p.v);\r\n            this.feFuncB.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncA && (forceRender || effectElements[30].p.mdf || effectElements[31].p.mdf || effectElements[32].p.mdf || effectElements[33].p.mdf || effectElements[34].p.mdf)){\r\n            val = this.getTableValue(effectElements[30].p.v,effectElements[31].p.v,effectElements[32].p.v,effectElements[33].p.v,effectElements[34].p.v);\r\n            this.feFuncA.setAttribute('tableValues',val);\r\n        }\r\n        \r\n    }\r\n};\nfunction SVGDropShadowEffect(filter, filterManager){\r\n    /*<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"3\"/> <!-- stdDeviation is how much to blur -->\r\n  <feOffset dx=\"2\" dy=\"2\" result=\"offsetblur\"/> <!-- how much to offset -->\r\n  <feMerge> \r\n    <feMergeNode/> <!-- this contains the offset blurred image -->\r\n    <feMergeNode in=\"SourceGraphic\"/> <!-- this contains the element that the filter is applied to -->\r\n  </feMerge>*/\r\n  /*<feFlood flood-color=\"#3D4574\" flood-opacity=\"0.5\" result=\"offsetColor\"/>*/\r\n    filter.setAttribute('x','-100%');\r\n    filter.setAttribute('y','-100%');\r\n    filter.setAttribute('width','400%');\r\n    filter.setAttribute('height','400%');\r\n    this.filterManager = filterManager;\r\n\r\n    var feGaussianBlur = document.createElementNS(svgNS,'feGaussianBlur');\r\n    feGaussianBlur.setAttribute('in','SourceAlpha');\r\n    feGaussianBlur.setAttribute('result','drop_shadow_1');\r\n    feGaussianBlur.setAttribute('stdDeviation','0');\r\n    this.feGaussianBlur = feGaussianBlur;\r\n    filter.appendChild(feGaussianBlur);\r\n\r\n    var feOffset = document.createElementNS(svgNS,'feOffset');\r\n    feOffset.setAttribute('dx','25');\r\n    feOffset.setAttribute('dy','0');\r\n    feOffset.setAttribute('in','drop_shadow_1');\r\n    feOffset.setAttribute('result','drop_shadow_2');\r\n    this.feOffset = feOffset;\r\n    filter.appendChild(feOffset);\r\n    var feFlood = document.createElementNS(svgNS,'feFlood');\r\n    feFlood.setAttribute('flood-color','#00ff00');\r\n    feFlood.setAttribute('flood-opacity','1');\r\n    feFlood.setAttribute('result','drop_shadow_3');\r\n    this.feFlood = feFlood;\r\n    filter.appendChild(feFlood);\r\n\r\n    var feComposite = document.createElementNS(svgNS,'feComposite');\r\n    feComposite.setAttribute('in','drop_shadow_3');\r\n    feComposite.setAttribute('in2','drop_shadow_2');\r\n    feComposite.setAttribute('operator','in');\r\n    feComposite.setAttribute('result','drop_shadow_4');\r\n    filter.appendChild(feComposite);\r\n\r\n\r\n    var feMerge = document.createElementNS(svgNS,'feMerge');\r\n    filter.appendChild(feMerge);\r\n    var feMergeNode;\r\n    feMergeNode = document.createElementNS(svgNS,'feMergeNode');\r\n    feMerge.appendChild(feMergeNode);\r\n    feMergeNode = document.createElementNS(svgNS,'feMergeNode');\r\n    feMergeNode.setAttribute('in','SourceGraphic');\r\n    this.feMergeNode = feMergeNode;\r\n    this.feMerge = feMerge;\r\n    this.originalNodeAdded = false;\r\n    feMerge.appendChild(feMergeNode);\r\n}\r\n\r\nSVGDropShadowEffect.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager.mdf){\r\n        if(forceRender || this.filterManager.effectElements[4].p.mdf){\r\n            this.feGaussianBlur.setAttribute('stdDeviation', this.filterManager.effectElements[4].p.v / 4);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[0].p.mdf){\r\n            var col = this.filterManager.effectElements[0].p.v;\r\n            this.feFlood.setAttribute('flood-color',rgbToHex(Math.round(col[0]*255),Math.round(col[1]*255),Math.round(col[2]*255)));\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[1].p.mdf){\r\n            this.feFlood.setAttribute('flood-opacity',this.filterManager.effectElements[1].p.v/255);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[2].p.mdf || this.filterManager.effectElements[3].p.mdf){\r\n            var distance = this.filterManager.effectElements[3].p.v\r\n            var angle = (this.filterManager.effectElements[2].p.v - 90) * degToRads\r\n            var x = distance * Math.cos(angle)\r\n            var y = distance * Math.sin(angle)\r\n            this.feOffset.setAttribute('dx', x);\r\n            this.feOffset.setAttribute('dy', y);\r\n        }\r\n        /*if(forceRender || this.filterManager.effectElements[5].p.mdf){\r\n            if(this.filterManager.effectElements[5].p.v === 1 && this.originalNodeAdded) {\r\n                this.feMerge.removeChild(this.feMergeNode);\r\n                this.originalNodeAdded = false;\r\n            } else if(this.filterManager.effectElements[5].p.v === 0 && !this.originalNodeAdded) {\r\n                this.feMerge.appendChild(this.feMergeNode);\r\n                this.originalNodeAdded = true;\r\n            }\r\n        }*/\r\n    }\r\n};\nfunction SVGMatte3Effect(filterElem, filterManager, elem){\r\n    this.initialized = false;\r\n    this.filterManager = filterManager;\r\n    this.filterElem = filterElem;\r\n    this.elem = elem;\r\n    elem.matteElement = document.createElementNS(svgNS,'g');\r\n    elem.matteElement.appendChild(elem.layerElement);\r\n    elem.matteElement.appendChild(elem.transformedElement);\r\n    elem.baseElement = elem.matteElement;\r\n}\r\n\r\nSVGMatte3Effect.prototype.setElementAsMask = function(elem, mask) {\r\n    var masker = document.createElementNS(svgNS,'mask');\r\n    masker.setAttribute('id',mask.layerId);\r\n    masker.setAttribute('mask-type','alpha');\r\n    masker.appendChild(mask.layerElement);\r\n    elem.setMatte(mask.layerId);\r\n    mask.data.hd = false;\r\n    var defs = elem.globalData.defs;\r\n    defs.appendChild(masker);\r\n}\r\n\r\nSVGMatte3Effect.prototype.initialize = function() {\r\n    var ind = this.filterManager.effectElements[0].p.v;\r\n    var i = 0, len = this.elem.comp.elements.length;\r\n    while(i < len) {\r\n    \tif(this.elem.comp.elements[i].data.ind === ind) {\r\n    \t\tthis.setElementAsMask(this.elem, this.elem.comp.elements[i]);\r\n    \t}\r\n    \ti += 1;\r\n    }\r\n    this.initialized = true;\r\n}\r\n\r\nSVGMatte3Effect.prototype.renderFrame = function() {\r\n\tif(!this.initialized) {\r\n\t\tthis.initialize();\r\n\t}\r\n}\nfunction SVGEffects(elem){\r\n    var i, len = elem.data.ef.length;\r\n    var filId = randomString(10);\r\n    var fil = filtersFactory.createFilter(filId);\r\n    var count = 0;\r\n    this.filters = [];\r\n    var filterManager;\r\n    for(i=0;i<len;i+=1){\r\n        if(elem.data.ef[i].ty === 20){\r\n            count += 1;\r\n            filterManager = new SVGTintFilter(fil, elem.effects.effectElements[i]);\r\n            this.filters.push(filterManager);\r\n        }else if(elem.data.ef[i].ty === 21){\r\n            count += 1;\r\n            filterManager = new SVGFillFilter(fil, elem.effects.effectElements[i]);\r\n            this.filters.push(filterManager);\r\n        }else if(elem.data.ef[i].ty === 22){\r\n            filterManager = new SVGStrokeEffect(elem, elem.effects.effectElements[i]);\r\n            this.filters.push(filterManager);\r\n        }else if(elem.data.ef[i].ty === 23){\r\n            count += 1;\r\n            filterManager = new SVGTritoneFilter(fil, elem.effects.effectElements[i]);\r\n            this.filters.push(filterManager);\r\n        }else if(elem.data.ef[i].ty === 24){\r\n            count += 1;\r\n            filterManager = new SVGProLevelsFilter(fil, elem.effects.effectElements[i]);\r\n            this.filters.push(filterManager);\r\n        }else if(elem.data.ef[i].ty === 25){\r\n            count += 1;\r\n            filterManager = new SVGDropShadowEffect(fil, elem.effects.effectElements[i]);\r\n            this.filters.push(filterManager);\r\n        }else if(elem.data.ef[i].ty === 28){\r\n            //count += 1;\r\n            filterManager = new SVGMatte3Effect(fil, elem.effects.effectElements[i], elem);\r\n            this.filters.push(filterManager);\r\n        }\r\n    }\r\n    if(count){\r\n        elem.globalData.defs.appendChild(fil);\r\n        elem.layerElement.setAttribute('filter','url(' + locationHref + '#'+filId+')');\r\n    }\r\n}\r\n\r\nSVGEffects.prototype.renderFrame = function(firstFrame){\r\n    var i, len = this.filters.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.filters[i].renderFrame(firstFrame);\r\n    }\r\n};\nfunction ICompElement(data,parentContainer,globalData,comp, placeholder){\r\n    this._parent.constructor.call(this,data,parentContainer,globalData,comp, placeholder);\r\n    this.layers = data.layers;\r\n    this.supports3d = true;\r\n    this.completeLayers = false;\r\n    this.pendingElements = [];\r\n    this.elements = this.layers ? Array.apply(null,{length:this.layers.length}) : [];\r\n    if(this.data.tm){\r\n        this.tm = PropertyFactory.getProp(this,this.data.tm,0,globalData.frameRate,this.dynamicProperties);\r\n    }\r\n    if(this.data.xt){\r\n        this.layerElement = document.createElementNS(svgNS,'g');\r\n        this.buildAllItems();\r\n    } else if(!globalData.progressiveLoad){\r\n        this.buildAllItems();\r\n    }\r\n}\r\ncreateElement(SVGBaseElement, ICompElement);\r\n\r\nICompElement.prototype.hide = function(){\r\n    if(!this.hidden){\r\n        this._parent.hide.call(this);\r\n        var i,len = this.elements.length;\r\n        for( i = 0; i < len; i+=1 ){\r\n            if(this.elements[i]){\r\n                this.elements[i].hide();\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.prepareFrame = function(num){\r\n    this._parent.prepareFrame.call(this,num);\r\n    if(this.isVisible===false && !this.data.xt){\r\n        return;\r\n    }\r\n\r\n    if(this.tm){\r\n        var timeRemapped = this.tm.v;\r\n        if(timeRemapped === this.data.op){\r\n            timeRemapped = this.data.op - 1;\r\n        }\r\n        this.renderedFrame = timeRemapped;\r\n    } else {\r\n        this.renderedFrame = num/this.data.sr;\r\n    }\r\n    var i,len = this.elements.length;\r\n    if(!this.completeLayers){\r\n        this.checkLayers(this.renderedFrame);\r\n    }\r\n    for( i = 0; i < len; i+=1 ){\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].prepareFrame(this.renderedFrame - this.layers[i].st);\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.renderFrame = function(parentMatrix){\r\n    var renderParent = this._parent.renderFrame.call(this,parentMatrix);\r\n    var i,len = this.layers.length;\r\n    if(renderParent===false){\r\n        this.hide();\r\n        return;\r\n    }\r\n\r\n    if(this.hidden) {\r\n        this.show();\r\n    }\r\n    for( i = 0; i < len; i+=1 ){\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].renderFrame();\r\n        }\r\n    }\r\n    if(this.firstFrame){\r\n        this.firstFrame = false;\r\n    }\r\n};\r\n\r\nICompElement.prototype.setElements = function(elems){\r\n    this.elements = elems;\r\n};\r\n\r\nICompElement.prototype.getElements = function(){\r\n    return this.elements;\r\n};\r\n\r\nICompElement.prototype.destroy = function(){\r\n    this._parent.destroy.call(this._parent);\r\n    var i,len = this.layers.length;\r\n    for( i = 0; i < len; i+=1 ){\r\n        if(this.elements[i]){\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.checkLayers = SVGRenderer.prototype.checkLayers;\r\nICompElement.prototype.buildItem = SVGRenderer.prototype.buildItem;\r\nICompElement.prototype.buildAllItems = SVGRenderer.prototype.buildAllItems;\r\nICompElement.prototype.buildElementParenting = SVGRenderer.prototype.buildElementParenting;\r\nICompElement.prototype.createItem = SVGRenderer.prototype.createItem;\r\nICompElement.prototype.createImage = SVGRenderer.prototype.createImage;\r\nICompElement.prototype.createComp = SVGRenderer.prototype.createComp;\r\nICompElement.prototype.createSolid = SVGRenderer.prototype.createSolid;\r\nICompElement.prototype.createShape = SVGRenderer.prototype.createShape;\r\nICompElement.prototype.createText = SVGRenderer.prototype.createText;\r\nICompElement.prototype.createBase = SVGRenderer.prototype.createBase;\r\nICompElement.prototype.appendElementInPos = SVGRenderer.prototype.appendElementInPos;\r\nICompElement.prototype.checkPendingElements = SVGRenderer.prototype.checkPendingElements;\r\nICompElement.prototype.addPendingElement = SVGRenderer.prototype.addPendingElement;\nfunction IImageElement(data,parentContainer,globalData,comp,placeholder){\r\n    this.assetData = globalData.getAssetData(data.refId);\r\n    this._parent.constructor.call(this,data,parentContainer,globalData,comp,placeholder);\r\n}\r\ncreateElement(SVGBaseElement, IImageElement);\r\n\r\nIImageElement.prototype.createElements = function(){\r\n\r\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\r\n\r\n    this._parent.createElements.call(this);\r\n\r\n    this.innerElem = document.createElementNS(svgNS,'image');\r\n    this.innerElem.setAttribute('width',this.assetData.w+\"px\");\r\n    this.innerElem.setAttribute('height',this.assetData.h+\"px\");\r\n    this.innerElem.setAttribute('preserveAspectRatio','xMidYMid slice');\r\n    this.innerElem.setAttributeNS('http://www.w3.org/1999/xlink','href',assetPath);\r\n    this.maskedElement = this.innerElem;\r\n    this.layerElement.appendChild(this.innerElem);\r\n    if(this.data.ln){\r\n        this.layerElement.setAttribute('id',this.data.ln);\r\n    }\r\n    if(this.data.cl){\r\n        this.layerElement.setAttribute('class',this.data.cl);\r\n    }\r\n\r\n};\r\n\r\nIImageElement.prototype.renderFrame = function(parentMatrix){\r\n    var renderParent = this._parent.renderFrame.call(this,parentMatrix);\r\n    if(renderParent===false){\r\n        this.hide();\r\n        return;\r\n    }\r\n    if(this.hidden){\r\n        this.show();\r\n    }\r\n    if(this.firstFrame){\r\n        this.firstFrame = false;\r\n    }\r\n};\r\n\r\nIImageElement.prototype.destroy = function(){\r\n    this._parent.destroy.call(this._parent);\r\n    this.innerElem =  null;\r\n};\nfunction ISolidElement(data,parentContainer,globalData,comp, placeholder){\r\n    this._parent.constructor.call(this,data,parentContainer,globalData,comp, placeholder);\r\n}\r\ncreateElement(SVGBaseElement, ISolidElement);\r\n\r\nISolidElement.prototype.createElements = function(){\r\n    this._parent.createElements.call(this);\r\n\r\n    var rect = document.createElementNS(svgNS,'rect');\r\n    ////rect.style.width = this.data.sw;\r\n    ////rect.style.height = this.data.sh;\r\n    ////rect.style.fill = this.data.sc;\r\n    rect.setAttribute('width',this.data.sw);\r\n    rect.setAttribute('height',this.data.sh);\r\n    rect.setAttribute('fill',this.data.sc);\r\n    this.layerElement.appendChild(rect);\r\n    this.innerElem = rect;\r\n    if(this.data.ln){\r\n        this.layerElement.setAttribute('id',this.data.ln);\r\n    }\r\n    if(this.data.cl){\r\n        this.layerElement.setAttribute('class',this.data.cl);\r\n    }\r\n};\r\n\r\nISolidElement.prototype.renderFrame = IImageElement.prototype.renderFrame;\r\nISolidElement.prototype.destroy = IImageElement.prototype.destroy;\r\n\nvar animationManager = (function(){\r\n    var moduleOb = {};\r\n    var registeredAnimations = [];\r\n    var initTime = 0;\r\n    var len = 0;\r\n    var idled = true;\r\n    var playingAnimationsNum = 0;\r\n\r\n    function removeElement(ev){\r\n        var i = 0;\r\n        var animItem = ev.target;\r\n        while(i<len) {\r\n            if (registeredAnimations[i].animation === animItem) {\r\n                registeredAnimations.splice(i, 1);\r\n                i -= 1;\r\n                len -= 1;\r\n                if(!animItem.isPaused){\r\n                    subtractPlayingCount();\r\n                }\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    function registerAnimation(element, animationData){\r\n        if(!element){\r\n            return null;\r\n        }\r\n        var i=0;\r\n        while(i<len){\r\n            if(registeredAnimations[i].elem == element && registeredAnimations[i].elem !== null ){\r\n                return registeredAnimations[i].animation;\r\n            }\r\n            i+=1;\r\n        }\r\n        var animItem = new AnimationItem();\r\n        setupAnimation(animItem, element);\r\n        animItem.setData(element, animationData);\r\n        return animItem;\r\n    }\r\n\r\n    function addPlayingCount(){\r\n        playingAnimationsNum += 1;\r\n        activate();\r\n    }\r\n\r\n    function subtractPlayingCount(){\r\n        playingAnimationsNum -= 1;\r\n        if(playingAnimationsNum === 0){\r\n            idled = true;\r\n        }\r\n    }\r\n\r\n    function setupAnimation(animItem, element){\r\n        animItem.addEventListener('destroy',removeElement);\r\n        animItem.addEventListener('_active',addPlayingCount);\r\n        animItem.addEventListener('_idle',subtractPlayingCount);\r\n        registeredAnimations.push({elem: element,animation:animItem});\r\n        len += 1;\r\n    }\r\n\r\n    function loadAnimation(params){\r\n        var animItem = new AnimationItem();\r\n        setupAnimation(animItem, null);\r\n        animItem.setParams(params);\r\n        return animItem;\r\n    }\r\n\r\n\r\n    function setSpeed(val,animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.setSpeed(val, animation);\r\n        }\r\n    }\r\n\r\n    function setDirection(val, animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.setDirection(val, animation);\r\n        }\r\n    }\r\n\r\n    function play(animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.play(animation);\r\n        }\r\n    }\r\n\r\n    function moveFrame (value, animation) {\r\n        initTime = Date.now();\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.moveFrame(value,animation);\r\n        }\r\n    }\r\n\r\n    function resume(nowTime) {\r\n\r\n        var elapsedTime = nowTime - initTime;\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.advanceTime(elapsedTime);\r\n        }\r\n        initTime = nowTime;\r\n        if(!idled) {\r\n            window.requestAnimationFrame(resume);\r\n        }\r\n    }\r\n\r\n    function first(nowTime){\r\n        initTime = nowTime;\r\n        window.requestAnimationFrame(resume);\r\n    }\r\n\r\n    function pause(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.pause(animation);\r\n        }\r\n    }\r\n\r\n    function goToAndStop(value,isFrame,animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.goToAndStop(value,isFrame,animation);\r\n        }\r\n    }\r\n\r\n    function stop(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.stop(animation);\r\n        }\r\n    }\r\n\r\n    function togglePause(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.togglePause(animation);\r\n        }\r\n    }\r\n\r\n    function destroy(animation) {\r\n        var i;\r\n        for(i=(len-1);i>=0;i-=1){\r\n            registeredAnimations[i].animation.destroy(animation);\r\n        }\r\n    }\r\n\r\n    function searchAnimations(animationData, standalone, renderer){\r\n        var animElements = document.getElementsByClassName('bodymovin');\r\n        var i, len = animElements.length;\r\n        for(i=0;i<len;i+=1){\r\n            if(renderer){\r\n                animElements[i].setAttribute('data-bm-type',renderer);\r\n            }\r\n            registerAnimation(animElements[i], animationData);\r\n        }\r\n        if(standalone && len === 0){\r\n            if(!renderer){\r\n                renderer = 'svg';\r\n            }\r\n            var body = document.getElementsByTagName('body')[0];\r\n            body.innerHTML = '';\r\n            var div = document.createElement('div');\r\n            div.style.width = '100%';\r\n            div.style.height = '100%';\r\n            div.setAttribute('data-bm-type',renderer);\r\n            body.appendChild(div);\r\n            registerAnimation(div, animationData);\r\n        }\r\n    }\r\n\r\n    function resize(){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.resize();\r\n        }\r\n    }\r\n\r\n    function start(){\r\n        window.requestAnimationFrame(first);\r\n    }\r\n\r\n    function activate(){\r\n        if(idled){\r\n            idled = false;\r\n            window.requestAnimationFrame(first);\r\n        }\r\n    }\r\n\r\n    //start();\r\n\r\n    setTimeout(start,0);\r\n\r\n    moduleOb.registerAnimation = registerAnimation;\r\n    moduleOb.loadAnimation = loadAnimation;\r\n    moduleOb.setSpeed = setSpeed;\r\n    moduleOb.setDirection = setDirection;\r\n    moduleOb.play = play;\r\n    moduleOb.moveFrame = moveFrame;\r\n    moduleOb.pause = pause;\r\n    moduleOb.stop = stop;\r\n    moduleOb.togglePause = togglePause;\r\n    moduleOb.searchAnimations = searchAnimations;\r\n    moduleOb.resize = resize;\r\n    moduleOb.start = start;\r\n    moduleOb.goToAndStop = goToAndStop;\r\n    moduleOb.destroy = destroy;\r\n    return moduleOb;\r\n}());\r\n\nvar AnimationItem = function () {\r\n    this._cbs = [];\r\n    this.name = '';\r\n    this.path = '';\r\n    this.isLoaded = false;\r\n    this.currentFrame = 0;\r\n    this.currentRawFrame = 0;\r\n    this.totalFrames = 0;\r\n    this.frameRate = 0;\r\n    this.frameMult = 0;\r\n    this.playSpeed = 1;\r\n    this.playDirection = 1;\r\n    this.pendingElements = 0;\r\n    this.playCount = 0;\r\n    this.prerenderFramesFlag = true;\r\n    this.animationData = {};\r\n    this.layers = [];\r\n    this.assets = [];\r\n    this.isPaused = true;\r\n    this.autoplay = false;\r\n    this.loop = true;\r\n    this.renderer = null;\r\n    this.animationID = randomString(10);\r\n    this.scaleMode = 'fit';\r\n    this.assetsPath = '';\r\n    this.timeCompleted = 0;\r\n    this.segmentPos = 0;\r\n    this.subframeEnabled = subframeEnabled;\r\n    this.segments = [];\r\n    this.pendingSegment = false;\r\n    this._idle = true;\r\n    this.projectInterface = ProjectInterface();\r\n};\r\n\r\nAnimationItem.prototype.setParams = function(params) {\r\n    var self = this;\r\n    if(params.context){\r\n        this.context = params.context;\r\n    }\r\n    if(params.wrapper || params.container){\r\n        this.wrapper = params.wrapper || params.container;\r\n    }\r\n    var animType = params.animType ? params.animType : params.renderer ? params.renderer : 'svg';\r\n    switch(animType){\r\n        case 'canvas':\r\n            this.renderer = new CanvasRenderer(this, params.rendererSettings);\r\n            break;\r\n        case 'svg':\r\n            this.renderer = new SVGRenderer(this, params.rendererSettings);\r\n            break;\r\n        case 'hybrid':\r\n        case 'html':\r\n        default:\r\n            this.renderer = new HybridRenderer(this, params.rendererSettings);\r\n            break;\r\n    }\r\n    this.renderer.setProjectInterface(this.projectInterface);\r\n    this.animType = animType;\r\n\r\n    if(params.loop === '' || params.loop === null){\r\n    }else if(params.loop === false){\r\n        this.loop = false;\r\n    }else if(params.loop === true){\r\n        this.loop = true;\r\n    }else{\r\n        this.loop = parseInt(params.loop);\r\n    }\r\n    this.autoplay = 'autoplay' in params ? params.autoplay : true;\r\n    this.name = params.name ? params.name :  '';\r\n    this.prerenderFramesFlag = 'prerender' in params ? params.prerender : true;\r\n    this.autoloadSegments = params.hasOwnProperty('autoloadSegments') ? params.autoloadSegments :  true;\r\n    if(params.animationData){\r\n        self.configAnimation(params.animationData);\r\n    }else if(params.path){\r\n        if(params.path.substr(-4) != 'json'){\r\n            if (params.path.substr(-1, 1) != '/') {\r\n                params.path += '/';\r\n            }\r\n            params.path += 'data.json';\r\n        }\r\n\r\n        var xhr = new XMLHttpRequest();\r\n        if(params.path.lastIndexOf('\\\\') != -1){\r\n            this.path = params.path.substr(0,params.path.lastIndexOf('\\\\')+1);\r\n        }else{\r\n            this.path = params.path.substr(0,params.path.lastIndexOf('/')+1);\r\n        }\r\n        this.assetsPath = params.assetsPath;\r\n        this.fileName = params.path.substr(params.path.lastIndexOf('/')+1);\r\n        this.fileName = this.fileName.substr(0,this.fileName.lastIndexOf('.json'));\r\n        xhr.open('GET', params.path, true);\r\n        xhr.send();\r\n        xhr.onreadystatechange = function () {\r\n            if (xhr.readyState == 4) {\r\n                if(xhr.status == 200){\r\n                    self.configAnimation(JSON.parse(xhr.responseText));\r\n                }else{\r\n                    try{\r\n                        var response = JSON.parse(xhr.responseText);\r\n                        self.configAnimation(response);\r\n                    }catch(err){\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.setData = function (wrapper, animationData) {\r\n    var params = {\r\n        wrapper: wrapper,\r\n        animationData: animationData ? (typeof animationData  === \"object\") ? animationData : JSON.parse(animationData) : null\r\n    };\r\n    var wrapperAttributes = wrapper.attributes;\r\n\r\n    params.path = wrapperAttributes.getNamedItem('data-animation-path') ? wrapperAttributes.getNamedItem('data-animation-path').value : wrapperAttributes.getNamedItem('data-bm-path') ? wrapperAttributes.getNamedItem('data-bm-path').value :  wrapperAttributes.getNamedItem('bm-path') ? wrapperAttributes.getNamedItem('bm-path').value : '';\r\n    params.animType = wrapperAttributes.getNamedItem('data-anim-type') ? wrapperAttributes.getNamedItem('data-anim-type').value : wrapperAttributes.getNamedItem('data-bm-type') ? wrapperAttributes.getNamedItem('data-bm-type').value : wrapperAttributes.getNamedItem('bm-type') ? wrapperAttributes.getNamedItem('bm-type').value :  wrapperAttributes.getNamedItem('data-bm-renderer') ? wrapperAttributes.getNamedItem('data-bm-renderer').value : wrapperAttributes.getNamedItem('bm-renderer') ? wrapperAttributes.getNamedItem('bm-renderer').value : 'canvas';\r\n\r\n    var loop = wrapperAttributes.getNamedItem('data-anim-loop') ? wrapperAttributes.getNamedItem('data-anim-loop').value :  wrapperAttributes.getNamedItem('data-bm-loop') ? wrapperAttributes.getNamedItem('data-bm-loop').value :  wrapperAttributes.getNamedItem('bm-loop') ? wrapperAttributes.getNamedItem('bm-loop').value : '';\r\n    if(loop === ''){\r\n    }else if(loop === 'false'){\r\n        params.loop = false;\r\n    }else if(loop === 'true'){\r\n        params.loop = true;\r\n    }else{\r\n        params.loop = parseInt(loop);\r\n    }\r\n    var autoplay = wrapperAttributes.getNamedItem('data-anim-autoplay') ? wrapperAttributes.getNamedItem('data-anim-autoplay').value :  wrapperAttributes.getNamedItem('data-bm-autoplay') ? wrapperAttributes.getNamedItem('data-bm-autoplay').value :  wrapperAttributes.getNamedItem('bm-autoplay') ? wrapperAttributes.getNamedItem('bm-autoplay').value : true;\r\n    params.autoplay = autoplay !== \"false\";\r\n\r\n    params.name = wrapperAttributes.getNamedItem('data-name') ? wrapperAttributes.getNamedItem('data-name').value :  wrapperAttributes.getNamedItem('data-bm-name') ? wrapperAttributes.getNamedItem('data-bm-name').value : wrapperAttributes.getNamedItem('bm-name') ? wrapperAttributes.getNamedItem('bm-name').value :  '';\r\n    var prerender = wrapperAttributes.getNamedItem('data-anim-prerender') ? wrapperAttributes.getNamedItem('data-anim-prerender').value :  wrapperAttributes.getNamedItem('data-bm-prerender') ? wrapperAttributes.getNamedItem('data-bm-prerender').value :  wrapperAttributes.getNamedItem('bm-prerender') ? wrapperAttributes.getNamedItem('bm-prerender').value : '';\r\n\r\n    if(prerender === 'false'){\r\n        params.prerender = false;\r\n    }\r\n    this.setParams(params);\r\n};\r\n\r\nAnimationItem.prototype.includeLayers = function(data) {\r\n    if(data.op > this.animationData.op){\r\n        this.animationData.op = data.op;\r\n        this.totalFrames = Math.floor(data.op - this.animationData.ip);\r\n        this.animationData.tf = this.totalFrames;\r\n    }\r\n    var layers = this.animationData.layers;\r\n    var i, len = layers.length;\r\n    var newLayers = data.layers;\r\n    var j, jLen = newLayers.length;\r\n    for(j=0;j<jLen;j+=1){\r\n        i = 0;\r\n        while(i<len){\r\n            if(layers[i].id == newLayers[j].id){\r\n                layers[i] = newLayers[j];\r\n                break;\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n    if(data.chars || data.fonts){\r\n        this.renderer.globalData.fontManager.addChars(data.chars);\r\n        this.renderer.globalData.fontManager.addFonts(data.fonts, this.renderer.globalData.defs);\r\n    }\r\n    if(data.assets){\r\n        len = data.assets.length;\r\n        for(i = 0; i < len; i += 1){\r\n            this.animationData.assets.push(data.assets[i]);\r\n        }\r\n    }\r\n    //this.totalFrames = 50;\r\n    //this.animationData.tf = 50;\r\n    this.animationData.__complete = false;\r\n    dataManager.completeData(this.animationData,this.renderer.globalData.fontManager);\r\n    this.renderer.includeLayers(data.layers);\r\n    if(expressionsPlugin){\r\n        expressionsPlugin.initExpressions(this);\r\n    }\r\n    this.renderer.renderFrame(null);\r\n    this.loadNextSegment();\r\n};\r\n\r\nAnimationItem.prototype.loadNextSegment = function() {\r\n    var segments = this.animationData.segments;\r\n    if(!segments || segments.length === 0 || !this.autoloadSegments){\r\n        this.trigger('data_ready');\r\n        this.timeCompleted = this.animationData.tf;\r\n        return;\r\n    }\r\n    var segment = segments.shift();\r\n    this.timeCompleted = segment.time * this.frameRate;\r\n    var xhr = new XMLHttpRequest();\r\n    var self = this;\r\n    var segmentPath = this.path+this.fileName+'_' + this.segmentPos + '.json';\r\n    this.segmentPos += 1;\r\n    xhr.open('GET', segmentPath, true);\r\n    xhr.send();\r\n    xhr.onreadystatechange = function () {\r\n        if (xhr.readyState == 4) {\r\n            if(xhr.status == 200){\r\n                self.includeLayers(JSON.parse(xhr.responseText));\r\n            }else{\r\n                try{\r\n                    var response = JSON.parse(xhr.responseText);\r\n                    self.includeLayers(response);\r\n                }catch(err){\r\n                }\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\nAnimationItem.prototype.loadSegments = function() {\r\n    var segments = this.animationData.segments;\r\n    if(!segments) {\r\n        this.timeCompleted = this.animationData.tf;\r\n    }\r\n    this.loadNextSegment();\r\n};\r\n\r\nAnimationItem.prototype.configAnimation = function (animData) {\r\n    var _this = this;\r\n    if(this.renderer && this.renderer.destroyed){\r\n        return;\r\n    }\r\n    //console.log(JSON.parse(JSON.stringify(animData)));\r\n    //animData.w = Math.round(animData.w/blitter);\r\n    //animData.h = Math.round(animData.h/blitter);\r\n    this.animationData = animData;\r\n    this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip);\r\n    this.animationData.tf = this.totalFrames;\r\n    this.renderer.configAnimation(animData);\r\n    if(!animData.assets){\r\n        animData.assets = [];\r\n    }\r\n    if(animData.comps) {\r\n        animData.assets = animData.assets.concat(animData.comps);\r\n        animData.comps = null;\r\n    }\r\n    this.renderer.searchExtraCompositions(animData.assets);\r\n\r\n    this.layers = this.animationData.layers;\r\n    this.assets = this.animationData.assets;\r\n    this.frameRate = this.animationData.fr;\r\n    this.firstFrame = Math.round(this.animationData.ip);\r\n    this.frameMult = this.animationData.fr / 1000;\r\n    this.trigger('config_ready');\r\n    this.imagePreloader = new ImagePreloader();\r\n    this.imagePreloader.setAssetsPath(this.assetsPath);\r\n    this.imagePreloader.setPath(this.path);\r\n    this.imagePreloader.loadAssets(animData.assets, function(err) {\r\n        if(!err) {\r\n            _this.trigger('loaded_images');\r\n        }\r\n    });\r\n    this.loadSegments();\r\n    this.updaFrameModifier();\r\n    if(this.renderer.globalData.fontManager){\r\n        this.waitForFontsLoaded();\r\n    }else{\r\n        dataManager.completeData(this.animationData,this.renderer.globalData.fontManager);\r\n        this.checkLoaded();\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.waitForFontsLoaded = (function(){\r\n    function checkFontsLoaded(){\r\n        if(this.renderer.globalData.fontManager.loaded){\r\n            dataManager.completeData(this.animationData,this.renderer.globalData.fontManager);\r\n            //this.renderer.buildItems(this.animationData.layers);\r\n            this.checkLoaded();\r\n        }else{\r\n            setTimeout(checkFontsLoaded.bind(this),20);\r\n        }\r\n    }\r\n\r\n    return function(){\r\n        checkFontsLoaded.bind(this)();\r\n    }\r\n}());\r\n\r\nAnimationItem.prototype.addPendingElement = function () {\r\n    this.pendingElements += 1;\r\n}\r\n\r\nAnimationItem.prototype.elementLoaded = function () {\r\n    this.pendingElements--;\r\n    this.checkLoaded();\r\n};\r\n\r\nAnimationItem.prototype.checkLoaded = function () {\r\n    if (this.pendingElements === 0) {\r\n        if(expressionsPlugin){\r\n            expressionsPlugin.initExpressions(this);\r\n        }\r\n        this.renderer.initItems();\r\n        setTimeout(function(){\r\n            this.trigger('DOMLoaded');\r\n        }.bind(this),0);\r\n        this.isLoaded = true;\r\n        this.gotoFrame();\r\n        if(this.autoplay){\r\n            this.play();\r\n        }\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.resize = function () {\r\n    this.renderer.updateContainerSize();\r\n};\r\n\r\nAnimationItem.prototype.setSubframe = function(flag){\r\n    this.subframeEnabled = flag ? true : false;\r\n}\r\n\r\nAnimationItem.prototype.gotoFrame = function () {\r\n    if(this.subframeEnabled){\r\n        this.currentFrame = this.currentRawFrame;\r\n    }else{\r\n        this.currentFrame = Math.floor(this.currentRawFrame);\r\n    }\r\n\r\n    if(this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted){\r\n        this.currentFrame = this.timeCompleted;\r\n    }\r\n    this.trigger('enterFrame');\r\n    this.renderFrame();\r\n};\r\n\r\nAnimationItem.prototype.renderFrame = function () {\r\n    if(this.isLoaded === false){\r\n        return;\r\n    }\r\n    //console.log('this.currentFrame:',this.currentFrame + this.firstFrame);\r\n    this.renderer.renderFrame(this.currentFrame + this.firstFrame);\r\n};\r\n\r\nAnimationItem.prototype.play = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === true){\r\n        this.isPaused = false;\r\n        if(this._idle){\r\n            this._idle = false;\r\n            this.trigger('_active');\r\n        }\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.pause = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === false){\r\n        this.isPaused = true;\r\n        if(!this.pendingSegment){\r\n            this._idle = true;\r\n            this.trigger('_idle');\r\n        }\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.togglePause = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === true){\r\n        this.play();\r\n    }else{\r\n        this.pause();\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.stop = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    this.pause();\r\n    this.currentFrame = this.currentRawFrame = 0;\r\n    this.playCount = 0;\r\n    this.gotoFrame();\r\n};\r\n\r\nAnimationItem.prototype.goToAndStop = function (value, isFrame, name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(isFrame){\r\n        this.setCurrentRawFrameValue(value);\r\n    }else{\r\n        this.setCurrentRawFrameValue(value * this.frameModifier);\r\n    }\r\n    this.pause();\r\n};\r\n\r\nAnimationItem.prototype.goToAndPlay = function (value, isFrame, name) {\r\n    this.goToAndStop(value, isFrame, name);\r\n    this.play();\r\n};\r\n\r\nAnimationItem.prototype.advanceTime = function (value) {\r\n    if(this.pendingSegment){\r\n        this.pendingSegment = false;\r\n        this.adjustSegment(this.segments.shift());\r\n        if(this.isPaused){\r\n            this.play();\r\n        }\r\n        return;\r\n    }\r\n    if (this.isPaused === true || this.isLoaded === false) {\r\n        return;\r\n    }\r\n    this.setCurrentRawFrameValue(this.currentRawFrame + value * this.frameModifier);\r\n};\r\n\r\nAnimationItem.prototype.updateAnimation = function (perc) {\r\n    this.setCurrentRawFrameValue(this.totalFrames * perc);\r\n};\r\n\r\nAnimationItem.prototype.moveFrame = function (value, name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    this.setCurrentRawFrameValue(this.currentRawFrame+value);\r\n};\r\n\r\nAnimationItem.prototype.adjustSegment = function(arr){\r\n    this.playCount = 0;\r\n    if(arr[1] < arr[0]){\r\n        if(this.frameModifier > 0){\r\n            if(this.playSpeed < 0){\r\n                this.setSpeed(-this.playSpeed);\r\n            } else {\r\n                this.setDirection(-1);\r\n            }\r\n        }\r\n        this.totalFrames = arr[0] - arr[1];\r\n        this.firstFrame = arr[1];\r\n        this.setCurrentRawFrameValue(this.totalFrames - 0.01);\r\n    } else if(arr[1] > arr[0]){\r\n        if(this.frameModifier < 0){\r\n            if(this.playSpeed < 0){\r\n                this.setSpeed(-this.playSpeed);\r\n            } else {\r\n                this.setDirection(1);\r\n            }\r\n        }\r\n        this.totalFrames = arr[1] - arr[0];\r\n        this.firstFrame = arr[0];\r\n        this.setCurrentRawFrameValue(0);\r\n    }\r\n    this.trigger('segmentStart');\r\n};\r\nAnimationItem.prototype.setSegment = function (init,end) {\r\n    var pendingFrame = -1;\r\n    if(this.isPaused) {\r\n        if (this.currentRawFrame + this.firstFrame < init) {\r\n            pendingFrame = init;\r\n        } else if (this.currentRawFrame + this.firstFrame > end) {\r\n            pendingFrame = end - init - 0.01;\r\n        }\r\n    }\r\n\r\n    this.firstFrame = init;\r\n    this.totalFrames = end - init;\r\n    if(pendingFrame !== -1) {\r\n        this.goToAndStop(pendingFrame,true);\r\n    }\r\n}\r\n\r\nAnimationItem.prototype.playSegments = function (arr,forceFlag) {\r\n    if(typeof arr[0] === 'object'){\r\n        var i, len = arr.length;\r\n        for(i=0;i<len;i+=1){\r\n            this.segments.push(arr[i]);\r\n        }\r\n    }else{\r\n        this.segments.push(arr);\r\n    }\r\n    if(forceFlag){\r\n        this.adjustSegment(this.segments.shift());\r\n    }\r\n    if(this.isPaused){\r\n        this.play();\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.resetSegments = function (forceFlag) {\r\n    this.segments.length = 0;\r\n    this.segments.push([this.animationData.ip*this.frameRate,Math.floor(this.animationData.op - this.animationData.ip+this.animationData.ip*this.frameRate)]);\r\n    if(forceFlag){\r\n        this.adjustSegment(this.segments.shift());\r\n    }\r\n};\r\nAnimationItem.prototype.checkSegments = function(){\r\n    if(this.segments.length){\r\n        this.pendingSegment = true;\r\n    }\r\n}\r\n\r\nAnimationItem.prototype.remove = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    this.renderer.destroy();\r\n};\r\n\r\nAnimationItem.prototype.destroy = function (name) {\r\n    if((name && this.name != name) || (this.renderer && this.renderer.destroyed)){\r\n        return;\r\n    }\r\n    this.renderer.destroy();\r\n    this.trigger('destroy');\r\n    this._cbs = null;\r\n    this.onEnterFrame = this.onLoopComplete = this.onComplete = this.onSegmentStart = this.onDestroy = null;\r\n};\r\n\r\nAnimationItem.prototype.setCurrentRawFrameValue = function(value){\r\n    this.currentRawFrame = value;\r\n    //console.log(this.totalFrames);\r\n    if (this.currentRawFrame >= this.totalFrames) {\r\n        this.checkSegments();\r\n        if(this.loop === false){\r\n            this.currentRawFrame = this.totalFrames - 0.01;\r\n            this.gotoFrame();\r\n            this.pause();\r\n            this.trigger('complete');\r\n            return;\r\n        }else{\r\n            this.trigger('loopComplete');\r\n            this.playCount += 1;\r\n            if((this.loop !== true && this.playCount == this.loop) || this.pendingSegment){\r\n                this.currentRawFrame = this.totalFrames - 0.01;\r\n                this.gotoFrame();\r\n                this.pause();\r\n                this.trigger('complete');\r\n                return;\r\n            } else {\r\n                this.currentRawFrame = this.currentRawFrame % this.totalFrames;\r\n            }\r\n        }\r\n    } else if (this.currentRawFrame < 0) {\r\n        this.checkSegments();\r\n        this.playCount -= 1;\r\n        if(this.playCount < 0){\r\n            this.playCount = 0;\r\n        }\r\n        if(this.loop === false  || this.pendingSegment){\r\n            this.currentRawFrame = 0;\r\n            this.gotoFrame();\r\n            this.pause();\r\n            this.trigger('complete');\r\n            return;\r\n        }else{\r\n            this.trigger('loopComplete');\r\n            this.currentRawFrame = (this.totalFrames + this.currentRawFrame) % this.totalFrames;\r\n            this.gotoFrame();\r\n            return;\r\n        }\r\n    }\r\n\r\n    this.gotoFrame();\r\n};\r\n\r\nAnimationItem.prototype.setSpeed = function (val) {\r\n    this.playSpeed = val;\r\n    this.updaFrameModifier();\r\n};\r\n\r\nAnimationItem.prototype.setDirection = function (val) {\r\n    this.playDirection = val < 0 ? -1 : 1;\r\n    this.updaFrameModifier();\r\n};\r\n\r\nAnimationItem.prototype.updaFrameModifier = function () {\r\n    this.frameModifier = this.frameMult * this.playSpeed * this.playDirection;\r\n};\r\n\r\nAnimationItem.prototype.getPath = function () {\r\n    return this.path;\r\n};\r\n\r\nAnimationItem.prototype.getAssetsPath = function (assetData) {\r\n    var path = '';\r\n    if(this.assetsPath){\r\n        var imagePath = assetData.p;\r\n        if(imagePath.indexOf('images/') !== -1){\r\n            imagePath = imagePath.split('/')[1];\r\n        }\r\n        path = this.assetsPath + imagePath;\r\n    } else {\r\n        path = this.path;\r\n        path += assetData.u ? assetData.u : '';\r\n        path += assetData.p;\r\n    }\r\n    return path;\r\n};\r\n\r\nAnimationItem.prototype.getAssetData = function (id) {\r\n    var i = 0, len = this.assets.length;\r\n    while (i < len) {\r\n        if(id == this.assets[i].id){\r\n            return this.assets[i];\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.hide = function () {\r\n    this.renderer.hide();\r\n};\r\n\r\nAnimationItem.prototype.show = function () {\r\n    this.renderer.show();\r\n};\r\n\r\nAnimationItem.prototype.getAssets = function () {\r\n    return this.assets;\r\n};\r\n\r\nAnimationItem.prototype.trigger = function(name){\r\n    if(this._cbs && this._cbs[name]){\r\n        switch(name){\r\n            case 'enterFrame':\r\n                this.triggerEvent(name,new BMEnterFrameEvent(name,this.currentFrame,this.totalFrames,this.frameMult));\r\n                break;\r\n            case 'loopComplete':\r\n                this.triggerEvent(name,new BMCompleteLoopEvent(name,this.loop,this.playCount,this.frameMult));\r\n                break;\r\n            case 'complete':\r\n                this.triggerEvent(name,new BMCompleteEvent(name,this.frameMult));\r\n                break;\r\n            case 'segmentStart':\r\n                this.triggerEvent(name,new BMSegmentStartEvent(name,this.firstFrame,this.totalFrames));\r\n                break;\r\n            case 'destroy':\r\n                this.triggerEvent(name,new BMDestroyEvent(name,this));\r\n                break;\r\n            default:\r\n                this.triggerEvent(name);\r\n        }\r\n    }\r\n    if(name === 'enterFrame' && this.onEnterFrame){\r\n        this.onEnterFrame.call(this,new BMEnterFrameEvent(name,this.currentFrame,this.totalFrames,this.frameMult));\r\n    }\r\n    if(name === 'loopComplete' && this.onLoopComplete){\r\n        this.onLoopComplete.call(this,new BMCompleteLoopEvent(name,this.loop,this.playCount,this.frameMult));\r\n    }\r\n    if(name === 'complete' && this.onComplete){\r\n        this.onComplete.call(this,new BMCompleteEvent(name,this.frameMult));\r\n    }\r\n    if(name === 'segmentStart' && this.onSegmentStart){\r\n        this.onSegmentStart.call(this,new BMSegmentStartEvent(name,this.firstFrame,this.totalFrames));\r\n    }\r\n    if(name === 'destroy' && this.onDestroy){\r\n        this.onDestroy.call(this,new BMDestroyEvent(name,this));\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.addEventListener = _addEventListener;\r\nAnimationItem.prototype.removeEventListener = _removeEventListener;\r\nAnimationItem.prototype.triggerEvent = _triggerEvent;\r\n\r\n    var bodymovinjs = {};\r\n\r\n    function setLocationHref (href) {\r\n        locationHref = href;\r\n    }\r\n    function play(animation){\r\n        animationManager.play(animation);\r\n    }\r\n\r\n    function pause(animation) {\r\n        animationManager.pause(animation);\r\n    }\r\n\r\n    function togglePause(animation) {\r\n        animationManager.togglePause(animation);\r\n    }\r\n\r\n    function setSpeed(value, animation) {\r\n        animationManager.setSpeed(value, animation);\r\n    }\r\n\r\n    function setDirection(value, animation) {\r\n        animationManager.setDirection(value, animation);\r\n    }\r\n\r\n    function stop(animation) {\r\n        animationManager.stop(animation);\r\n    }\r\n\r\n    function moveFrame(value) {\r\n        animationManager.moveFrame(value);\r\n    }\r\n\r\n    function searchAnimations() {\r\n        if (standalone === true) {\r\n            animationManager.searchAnimations(animationData, standalone, renderer);\r\n        } else {\r\n            animationManager.searchAnimations();\r\n        }\r\n    }\r\n\r\n    function registerAnimation(elem) {\r\n        return animationManager.registerAnimation(elem);\r\n    }\r\n\r\n    function resize() {\r\n        animationManager.resize();\r\n    }\r\n\r\n    function start() {\r\n        animationManager.start();\r\n    }\r\n\r\n    function goToAndStop(val, isFrame, animation) {\r\n        animationManager.goToAndStop(val, isFrame, animation);\r\n    }\r\n\r\n    function setSubframeRendering(flag) {\r\n        subframeEnabled = flag;\r\n    }\r\n\r\n    function loadAnimation(params) {\r\n        if (standalone === true) {\r\n            params.animationData = JSON.parse(animationData);\r\n        }\r\n        return animationManager.loadAnimation(params);\r\n    }\r\n\r\n    function destroy(animation) {\r\n        return animationManager.destroy(animation);\r\n    }\r\n\r\n    function setQuality(value) {\r\n        if (typeof value === 'string') {\r\n            switch (value) {\r\n                case 'high':\r\n                    defaultCurveSegments = 200;\r\n                    break;\r\n                case 'medium':\r\n                    defaultCurveSegments = 50;\r\n                    break;\r\n                case 'low':\r\n                    defaultCurveSegments = 10;\r\n                    break;\r\n            }\r\n        } else if (!isNaN(value) && value > 1) {\r\n            defaultCurveSegments = value;\r\n        }\r\n        if (defaultCurveSegments >= 50) {\r\n            roundValues(false);\r\n        } else {\r\n            roundValues(true);\r\n        }\r\n    }\r\n\r\n    function inBrowser() {\r\n        return typeof navigator !== 'undefined';\r\n    }\r\n\r\n    function installPlugin(type, plugin) {\r\n        if (type === 'expressions') {\r\n            expressionsPlugin = plugin;\r\n        }\r\n    }\r\n\r\n    function getFactory(name) {\r\n        switch (name) {\r\n            case \"propertyFactory\":\r\n                return PropertyFactory;\r\n            case \"shapePropertyFactory\":\r\n                return ShapePropertyFactory;\r\n            case \"matrix\":\r\n                return Matrix;\r\n        }\r\n    }\r\n    bodymovinjs.play = play;\r\n    bodymovinjs.pause = pause;\r\n    bodymovinjs.setLocationHref = setLocationHref;\r\n    bodymovinjs.togglePause = togglePause;\r\n    bodymovinjs.setSpeed = setSpeed;\r\n    bodymovinjs.setDirection = setDirection;\r\n    bodymovinjs.stop = stop;\r\n    bodymovinjs.moveFrame = moveFrame;\r\n    bodymovinjs.searchAnimations = searchAnimations;\r\n    bodymovinjs.registerAnimation = registerAnimation;\r\n    bodymovinjs.loadAnimation = loadAnimation;\r\n    bodymovinjs.setSubframeRendering = setSubframeRendering;\r\n    bodymovinjs.resize = resize;\r\n    bodymovinjs.start = start;\r\n    bodymovinjs.goToAndStop = goToAndStop;\r\n    bodymovinjs.destroy = destroy;\r\n    bodymovinjs.setQuality = setQuality;\r\n    bodymovinjs.inBrowser = inBrowser;\r\n    bodymovinjs.installPlugin = installPlugin;\r\n    bodymovinjs.__getFactory = getFactory;\r\n    bodymovinjs.version = '4.13.0';\r\n\r\n    function checkReady() {\r\n        if (document.readyState === \"complete\") {\r\n            clearInterval(readyStateCheckInterval);\r\n            searchAnimations();\r\n        }\r\n    }\r\n\r\n    function getQueryVariable(variable) {\r\n        var vars = queryString.split('&');\r\n        for (var i = 0; i < vars.length; i++) {\r\n            var pair = vars[i].split('=');\r\n            if (decodeURIComponent(pair[0]) == variable) {\r\n                return decodeURIComponent(pair[1]);\r\n            }\r\n        }\r\n    }\r\n    var standalone = '__[STANDALONE]__';\r\n    var animationData = '__[ANIMATIONDATA]__';\r\n    var renderer = '';\r\n    if (standalone) {\r\n        var scripts = document.getElementsByTagName('script');\r\n        var index = scripts.length - 1;\r\n        var myScript = scripts[index] || {\r\n            src: ''\r\n        };\r\n        var queryString = myScript.src.replace(/^[^\\?]+\\??/, '');\r\n        renderer = getQueryVariable('renderer');\r\n    }\r\n    var readyStateCheckInterval = setInterval(checkReady, 100);\r\n    return bodymovinjs;\r\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bodymovin/build/player/bodymovin_light.js\n// module id = 10\n// module chunks = 2","/* globals __VUE_SSR_CONTEXT__ */\n\n// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/component-normalizer.js\n// module id = 2\n// module chunks = 2"],"sourceRoot":""}