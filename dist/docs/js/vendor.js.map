{"version":3,"sources":["webpack:///docs/js/vendor.js","webpack:///./~/lottie-web/build/player/lottie_light.js","webpack:///./~/vue-loader/lib/component-normalizer.js"],"names":["webpackJsonp","11","module","exports","__webpack_require__","__WEBPACK_AMD_DEFINE_RESULT__","root","factory","undefined","call","window","ProjectInterface","roundValues","flag","bm_rnd","Math","round","val","BMEnterFrameEvent","n","c","t","d","this","type","currentTime","totalTime","direction","BMCompleteEvent","BMCompleteLoopEvent","currentLoop","totalLoops","BMSegmentStartEvent","f","firstFrame","totalFrames","BMDestroyEvent","target","randomString","length","chars","i","result","random","HSVtoRGB","h","s","v","r","g","b","p","q","floor","RGBtoHSV","max","min","addSaturationToRGB","color","offset","hsv","addBrightnessToRGB","addHueToRGB","BaseEvent","createSizedArray","len","Array","apply","createNS","document","createElementNS","svgNS","createTag","createElement","extendPrototype","sources","destination","sourcePrototype","prototype","attr","hasOwnProperty","createProxyFunction","ProxyFunction","ShapePath","_length","_maxLength","o","ShapeModifier","TrimModifier","RoundCornersModifier","RepeaterModifier","ShapeCollection","shapes","DashProperty","elem","data","renderer","dynamicProperties","frameId","dataProps","_mdf","k","dashStr","dashArray","createTypedArray","dashoffset","prop","PropertyFactory","getProp","push","getValue","GradientProperty","arr","cLength","_cmdf","_omdf","_collapsable","checkCollapsable","_hasOpacity","TextAnimatorProperty","textData","renderType","_isFirstFrame","_hasMaskedPath","_frameId","_dynamicProperties","_textData","_renderType","_elem","_animatorsData","a","_pathData","_moreOptions","alignment","renderedLetters","lettersChangedFlag","TextAnimatorDataProperty","animatorProps","defaultData","propType","textAnimator_animatables","degToRads","rx","ry","sk","sa","sw","sc","fc","fh","fs","fb","TextSelectorProp","getTextSelectorProp","LetterProps","m","TextProperty","initialDefaultFrame","pv","kf","keysIndex","canResize","minimumFontSize","currentData","ascent","boxWidth","fStyle","fWeight","j","justifyOffset","l","lh","lineWidths","ls","of","tr","sz","ps","fillColorAnim","strokeColorAnim","strokeWidthAnim","yOffset","__complete","finalSize","finalText","finalLineHeight","searchProperty","BaseRenderer","SVGRenderer","animationItem","config","layers","renderedFrame","svgElement","maskElement","appendChild","layerElement","defs","renderConfig","preserveAspectRatio","progressiveLoad","hideOnTransparent","viewBoxOnly","viewBoxSize","className","globalData","frameNum","compSize","w","fontManager","FontManager","elements","pendingElements","destroyed","MaskElement","element","storedData","masksProperties","viewData","solidPath","path","jLen","rect","expansor","feMorph","x","properties","count","currentMasks","layerId","maskType","maskRef","mode","inv","setAttribute","comp","filterID","expan","lastPath","lastOperator","filterId","lastRadius","mask","locationHref","createLayerSolidPath","op","ShapePropertyFactory","getShapeProp","invRect","drawPath","maskedElement","HierarchyElement","FrameElement","TransformElement","RenderableElement","RenderableDOMElement","ProcessedElement","position","pos","SVGStyleData","level","ty","lvl","closed","pElem","msElem","SVGShapeData","transformers","shape","caches","styles","lStr","sh","SVGTransformData","mProps","transform","SVGStrokeStyleData","styleOb","style","SVGFillStyleData","SVGGradientFillStyleData","initGradientData","SVGGradientStrokeStyleData","ShapeGroupData","it","prevViewData","gr","BaseElement","NullElement","initFrame","initBaseData","initTransform","initHierarchy","SVGBaseElement","IShapeElement","ITextElement","ICompElement","IImageElement","assetData","getAssetData","refId","initElement","ISolidElement","SVGCompElement","supports3d","completeLayers","tm","frameRate","_placeholder","SVGTextElement","textSpans","SVGShapeElement","shapesData","stylesList","shapeModifiers","itemsData","processedElements","SVGTintFilter","filter","filterManager","feColorMatrix","matrixFilter","effectElements","feMerge","feMergeNode","SVGFillFilter","SVGStrokeEffect","initialized","paths","SVGTritoneFilter","feComponentTransfer","feFuncR","feFuncG","feFuncB","SVGProLevelsFilter","createFeFunc","feFuncA","feFuncRComposed","feFuncGComposed","feFuncBComposed","SVGDropShadowEffect","feGaussianBlur","feOffset","feFlood","feComposite","originalNodeAdded","SVGMatte3Effect","filterElem","matteElement","transformedElement","baseElement","SVGEffects","ef","filId","fil","filtersFactory","createFilter","filters","effectsManager","EffectsManager","setLocationHref","href","play","animation","animationManager","pause","togglePause","setSpeed","value","setDirection","stop","searchAnimations","standalone","animationData","registerAnimation","resize","goToAndStop","isFrame","setSubframeRendering","subframeEnabled","loadAnimation","params","JSON","parse","destroy","setQuality","defaultCurveSegments","isNaN","inBrowser","navigator","installPlugin","plugin","expressionsPlugin","getFactory","name","Matrix","checkReady","readyState","clearInterval","readyStateCheckInterval","bm_pow","test","userAgent","pow","bm_sqrt","sqrt","bm_floor","abs","bm_min","BMMath","propertyNames","Object","getOwnPropertyNames","absArr","PI","roundCorner","rgbToHex","hex","colorMap","toString","triggerEvent","eventName","args","_cbs","addEventListener","callback","removeEventListener","bind","splice","createRegularArray","Float32Array","Int16Array","Uint8ClampedArray","reset","props","rotate","angle","mCos","_cos","mSin","_sin","_t","rotateX","rotateY","rotateZ","shear","sx","sy","skew","ax","ay","_tan","skewFromAxis","scale","setTransform","e","translate","tx","tz","a2","b2","c2","d2","e2","f2","g2","h2","i2","j2","k2","l2","m2","n2","o2","p2","_p","_identityCalculated","a1","b1","c1","d1","e1","f1","g1","h1","i1","j1","k1","l1","m1","n1","o1","p1","isIdentity","_identity","equals","matr","clone","cloneFromProps","applyToPoint","y","z","applyToX","applyToY","applyToZ","inversePoint","pt","determinant","inversePoints","pts","retPts","applyToTriplePoints","pt1","pt2","pt3","p0","p4","p5","p12","p13","applyToPointArray","applyToPointStringified","toCSS","cssValue","_rnd","to2dCSS","cos","sin","tan","pool","math","seedrandom","seed","options","key","entropy","shortseed","mixkey","flatten","tostring","autoseed","arc4","ARC4","prng","chunks","startdenom","significance","width","overflow","int32","quick","double","S","pass","is_math_call","state","copy","rngname","global","keylen","me","slice","obj","depth","typ","smear","stringseed","charCodeAt","nodecrypto","randomBytes","out","Uint8Array","crypto","msCrypto","getRandomValues","browser","plugins","Date","screen","String","fromCharCode","BezierFactory","getBezierEasing","nm","str","replace","beziers","bezEasing","BezierEasing","A","aA1","aA2","B","C","calcBezier","aT","getSlope","binarySubdivide","aX","aA","aB","mX1","mX2","currentX","currentT","SUBDIVISION_PRECISION","SUBDIVISION_MAX_ITERATIONS","newtonRaphsonIterate","aGuessT","NEWTON_ITERATIONS","currentSlope","points","_mSampleValues","float32ArraySupported","kSplineTableSize","_precomputed","get","ob","kSampleStepSize","mY1","mY2","_precompute","_getTForX","_calcSampleValues","mSampleValues","intervalStart","currentSample","lastSample","dist","guessForT","initialSlope","lastTime","vendors","requestAnimationFrame","cancelAnimationFrame","currTime","getTime","timeToCall","id","setTimeout","clearTimeout","bez","pointOnLine2D","x1","y1","x2","y2","x3","y3","det1","pointOnLine3D","z1","z2","z3","diffDist","dist1","dist2","dist3","getSegmentsLength","shapeData","segmentsLength","segments_length_pool","newElement","pathV","pathO","pathI","lengths","totalLength","getBezierLength","addedLength","BezierData","segmentLength","PointData","partial","point","partialLength","getDistancePerc","perc","bezierData","percents","initPos","lengthPos","lPerc","dir","getPointInSegment","pt4","percent","t1","u1","getNewSegment","startPerc","endPerc","t0","u0","u0u0u0","t0u0u0_3","t0t0u0_3","t0t0t0","u0u0u1","t0u0u1_3","t0t0u1_3","t0t0t1","u0u1u1","t0u1u1_3","t0t1u1_3","t0t1t1","u1u1u1","t1u1u1_3","t1t1u1_3","t1t1t1","bezier_segment_points","ptCoord","ptDistance","curveSegments","lastPoint","lengthData","bezier_length_pool","buildBezierData","keyData","to","ti","bezierName","dataManager","comps","layerData","kLen","completed","tt","td","hasMask","maskProps","convertPathsToAbsoluteValues","findCompLayers","completeShapes","completeText","__used","stringify","ks","checkVersion","minimum","animVersionString","animVersion","split","completeData","checkColors","checkText","checkChars","checkShapes","assets","singleShape","updateTextLayer","textLayer","documentData","iterateLayers","minimumVersion","pathData","__converted","iterateShapes","cl","moduleOb","setUpNode","font","family","parentNode","fontFamily","node","innerHTML","left","top","fontSize","fontVariant","fontStyle","fontWeight","letterSpacing","body","offsetWidth","parent","checkLoadedFonts","fonts","loadedCount","loaded","fOrigin","origin","Typekit","load","typekitLoaded","async","active","monoCase","sansCase","removeChild","now","initTime","maxWaitingTime","createHelper","def","fontData","tHelper","fFamily","textContent","fClass","tCanvasHelper","getContext","addFonts","list","fontArr","fPath","rel","helper","addChars","found","ch","getCharData","char","console","warn","emptyChar","measureText","fontName","size","getFontByName","fName","getCombinedCharacterCodes","combinedCharacters","concat","Font","interpolateValue","previousValue","caching","newValue","offsetTime","nextKeyData","iterationIndex","lastIndex","keyframes","fnc","ind","_lastBezierData","__fnct","segmentPerc","distanceInLine","lastFrame","_lastAddedLength","_lastPoint","outX","outY","inX","inY","keyValue","constructor","initP","endP","calculateMultidimensionalValueAtCurrentTime","renderResult","mult","lastPValue","calculateUnidimenstionalValueAtCurrentTime","getValueAtCurrentTime","endTime","_caching","calculateValueAtCurrentTime","getNoValue","ValueProperty","vel","MultiDimensionalProperty","lastValue","KeyframedValueProperty","st","KeyframedMultidimensionalProperty","arrLen","TransformPropertyFactory","applyToMatrix","mat","rz","or","px","py","pz","processKeys","forceRender","autoOriented","getValueAtTime","v1","v2","atan2","setInverted","inverted","iv","autoOrient","TransformProperty","getTransformProperty","setPathData","setLength","point_pool","doubleArrayLength","setXYAt","setTripleAt","vX","vY","oX","oY","iX","iY","reverse","newPath","vertices","outPoints","inPoints","init","cnt","interpolateShape","isCurrentRender","keyPropS","keyPropE","isHold","vertexValue","hasModified","interpolateShapeCurrentTime","localShapeCollection","getShapeValue","resetShape","ShapeProperty","shape_pool","shapeCollection_pool","newShapeCollection","addShape","KeyframedShapeProperty","dataProp","keys","RectShapeProperty","EllShapeProperty","StarShapeProperty","getConstructorFunction","getKeyframedConstructorFunction","convertEllToPath","s0","s1","_cw","_v","cPoint","convertPolygonToPath","numPts","rad","roundness","os","perimSegment","currentAng","ox","oy","convertStarToPath","longFlag","longRad","shortRad","ir","longRound","shortRound","is","longPerimSegment","shortPerimSegment","convertToPath","convertRectToPath","v0","ShapeModifiers","registerModifier","modifiers","getModifier","initModifierProperties","addShapeToModifier","sValue","eValue","pathsData","calculateShapeEdges","shapeLength","totalModifierLength","segments","segmentOb","shapeSegments","shapeS","shapeE","releasePathsData","release","processShapes","_s","shapePaths","totalShapeLength","releaseShapes","edges","newShapesData","addShapes","lastShape","pop","addPaths","newPaths","addSegment","shapePath","newShape","addSegmentFromArray","shapeSegment","currentLengthData","segmentCount","segment","rd","processPath","cloned_path","currentV","currentI","currentO","closerV","distance","newPosPerc","index","pMatrix","rMatrix","sMatrix","tMatrix","matrix","applyTransforms","scaleX","scaleY","elemsData","_currentCopies","_elements","_groups","cont","unshift","resetElements","_processed","cloneElements","newElements","changeGroupRender","renderFlag","_render","items","itemsTransform","copies","ceil","group","ix","reloadShapes","offsetModulo","roundOffset","pProps","rProps","sProps","iteration","comparePoints","values","ImagePreloader","imageLoaded","loadedAssets","totalImages","imagesLoadedCb","getAssetsPath","assetsPath","imagePath","indexOf","u","loadImage","img","src","loadAssets","cb","totalAssets","setPath","setAssetsPath","featureSupport","createAlphaToLuminanceFilter","searchProperties","maskManager","getMaskProperty","getMeasures","xPos","yPos","pathInfo","currentLength","currentPoint","pointInd","segmentInd","prevPoint","tanAngle","animators","matrixHelper","mHelper","renderedLettersCount","letters","tLength","pi","animatorSelector","letterValue","yOff","firstLine","offf","xPathPos","yPathPos","elemOpacity","letterSw","letterSc","letterFc","letterO","initPathPos","initSegmentInd","initPointInd","currentLine","lineLength","letterM","letterP","defaultPropsArray","line","extra","an","animatorOffset","getMult","anIndexes","totalChars","add","rot","atan","update","updated","setCurrentData","_forceRender","textDocumentData","textKeys","completeTextData","buildFinalText","text","charactersArray","charAt","newLineFlag","charData","anchorGrouping","currentSize","currentPos","lineWidth","maxLineWidth","toLowerCase","trackingOffset","currentHeight","boxHeight","lastSpaceIndex","currentChar","uncollapsedSpaces","animatorData","letterData","based","indexes","rn","newInd","currentInd","updateDocumentData","newData","dData","recalculate","canResizeFont","_canResize","setMinimumFontSize","_fontValue","updateRange","newCharsFlag","textProperty","divisor","finalS","finalE","easer","ne","xe","tot","pool_factory","initialLength","_create","_release","_clone","pooling","create","cloned","shapeCollection","checkLayers","num","ip","buildItem","checkPendingElements","createItem","layer","createImage","createComp","createSolid","createNull","createShape","createText","createCamera","Error","buildAllItems","includeLayers","newLayers","setProjectInterface","pInterface","projectInterface","initItems","buildElementParenting","parentName","hierarchy","setAsParent","setHierarchy","addPendingElement","searchExtraCompositions","xt","initExpressions","registerComposition","configAnimation","animData","height","wrapper","fr","maskId","updateContainerSize","appendElementInPos","setMatte","checkParenting","renderFrame","currentFrame","prepareFrame","getBaseElement","nextElement","insertBefore","hide","display","show","finalMat","finalTransform","mProp","getMaskelement","pathNodes","pathString","pathShapeValue","_isParent","prepareProperties","isVisible","_matMdf","_opMdf","ao","renderTransform","globalToLocal","transforms","ptNew","initRenderable","isInRange","hidden","isTransparent","prepareRenderableFrame","checkLayerLimits","checkTransparency","renderRenderable","renderableEffectsManager","sourceRectAtTime","getLayerSize","initRendererElement","createContainerElements","addMasks","createContent","hd","renderElement","renderInnerContent","innerElem","destroyBaseElement","stops","setGradientData","setGradientOpacity","pathElement","gradientId","gfill","gf","cst","opacityId","opFill","ms","ost","checkMasks","layerInterface","LayerExpressionInterface","registerMaskInterface","effectsInterface","EffectsExpressionInterface","createEffectsInterface","registerEffectsInterface","compInterface","CompExpressionInterface","shapeInterface","ShapeExpressionInterface","content","textInterface","TextExpressionInterface","blendModeEnums","1","2","3","4","5","6","7","8","9","10","12","13","14","15","getBlendMode","bm","setBlendMode","blendModeValue","sr","getType","_sizeChanged","gg","layerElementParent","masker","maskGroup","maskGrouper","alphaRect","ln","cp","clipId","cpGroup","addShapeToModifiers","renderModifiers","lcEnum","ljEnum","searchProcessedElement","addProcessedElement","buildShapeString","shapeString","textAnimator","buildNewText","createPathShape","shapeStr","_fontSize","applyTextPropertiesToMatrix","lineNumber","buildColor","colorData","emptyProp","timeRemapped","setElements","elems","getElements","destroyElements","assetPath","setAttributeNS","textContainer","buildTextContents","textArray","textContents","currentTextContent","usesGlyphs","tSpan","cachedSpansLength","tElement","justify","time","textBox","getBBox","bbox","renderedLetter","textSpan","initSecondaryElement","identityMatrix","buildExpressionInterface","searchShapes","createStyleElement","elementData","gradientConstructor","lc","lj","ml","createGroupElement","createTransformElement","createShapeElement","ownTransformers","shapeProperty","setElementStyles","container","render","currentTransform","modifier","processedPos","ownStyles","ownModifiers","renderShape","renderFill","renderGradient","renderStroke","renderPath","itemData","pathStringTransformed","redraw","iterations","lLen","styleData","styleElem","hasOpacity","attr1","attr2","cValues","oValues","ang","colorBlack","colorWhite","opacity","initialize","groupPath","elemChildren","children","childNodes","removeAttribute","pathMasker","dasharrayValue","getTotalLength","units","color1","color2","color3","tableR","tableG","tableB","feFunc","getTableValue","inputBlack","inputWhite","gamma","outputBlack","outputWhite","colorValue","table","outputDelta","inputDelta","join","col","_svgMatteSymbols","_svgMatteMaskCounter","findSymbol","replaceInParent","symbolId","nextChild","useElem","setElementAsMask","symbol","removeElement","ev","animItem","registeredAnimations","isPaused","subtractPlayingCount","AnimationItem","setupAnimation","setData","addPlayingCount","playingAnimationsNum","activate","idled","setParams","resume","nowTime","elapsedTime","advanceTime","_stopped","first","animElements","getElementsByClassName","getElementsByTagName","div","isLoaded","currentRawFrame","frameMult","playSpeed","playDirection","playCount","autoplay","loop","animationID","timeCompleted","segmentPos","_idle","self","context","animType","CanvasRenderer","rendererSettings","HybridRenderer","parseInt","autoloadSegments","substr","xhr","XMLHttpRequest","lastIndexOf","fileName","open","send","onreadystatechange","status","responseText","response","err","wrapperAttributes","attributes","getNamedItem","prerender","tf","loadNextSegment","trigger","shift","segmentPath","loadSegments","_this","imagePreloader","updaFrameModifier","waitForFontsLoaded","checkLoaded","checkFontsLoaded","elementLoaded","gotoFrame","setSubframe","setCurrentRawFrameValue","frameModifier","goToAndPlay","nextValue","_isComplete","checkSegments","adjustSegment","setSegment","end","pendingFrame","playSegments","forceFlag","resetSegments","remove","onEnterFrame","onLoopComplete","onComplete","onSegmentStart","onDestroy","getPath","getAssets","lottiejs","__getFactory","version","scripts","myScript","queryString","variable","vars","pair","decodeURIComponent","setInterval","rawScriptExports","compiledTemplate","injectStyles","scopeId","moduleIdentifier","esModule","scriptExports","default","staticRenderFns","_scopeId","hook","$vnode","ssrContext","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","functional","existing","beforeCreate"],"mappings":"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","file":"docs/js/vendor.js?v=89daf20a156b551e1030","sourcesContent":["webpackJsonp([2],{\n\n/***/ 11:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;(function(root, factory) {\r\n    if (true) {\r\n        !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\r\n            return factory(root);\r\n        }.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n    } else if (typeof module === \"object\" && module.exports) {\r\n        module.exports = factory(root);\r\n    } else {\r\n        root.lottie = factory(root);\r\n        root.bodymovin = root.lottie;\r\n    }\r\n}((window || {}), function(window) {\r\n    \"use strict\";\r\n    var svgNS = \"http://www.w3.org/2000/svg\";\r\n\r\nvar locationHref = '';\r\n\r\nvar initialDefaultFrame = -999999;\r\n\r\nvar subframeEnabled = true;\r\nvar expressionsPlugin;\r\nvar isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\r\nvar cachedColors = {};\r\nvar bm_rounder = Math.round;\r\nvar bm_rnd;\r\nvar bm_pow = Math.pow;\r\nvar bm_sqrt = Math.sqrt;\r\nvar bm_abs = Math.abs;\r\nvar bm_floor = Math.floor;\r\nvar bm_max = Math.max;\r\nvar bm_min = Math.min;\r\nvar blitter = 10;\r\n\r\nvar BMMath = {};\r\n(function(){\r\n    var propertyNames = Object.getOwnPropertyNames(Math);\r\n    var i, len = propertyNames.length;\r\n    for(i=0;i<len;i+=1){\r\n        BMMath[propertyNames[i]] = Math[propertyNames[i]];\r\n    }\r\n}());\r\n\r\nfunction ProjectInterface(){return {};}\r\n\r\nBMMath.random = Math.random;\r\nBMMath.abs = function(val){\r\n    var tOfVal = typeof val;\r\n    if(tOfVal === 'object' && val.length){\r\n        var absArr = createSizedArray(val.length);\r\n        var i, len = val.length;\r\n        for(i=0;i<len;i+=1){\r\n            absArr[i] = Math.abs(val[i]);\r\n        }\r\n        return absArr;\r\n    }\r\n    return Math.abs(val);\r\n\r\n};\r\nvar defaultCurveSegments = 150;\r\nvar degToRads = Math.PI/180;\r\nvar roundCorner = 0.5519;\r\n\r\nfunction roundValues(flag){\r\n    if(flag){\r\n        bm_rnd = Math.round;\r\n    }else{\r\n        bm_rnd = function(val){\r\n            return val;\r\n        };\r\n    }\r\n}\r\nroundValues(false);\r\n\r\nfunction styleDiv(element){\r\n    element.style.position = 'absolute';\r\n    element.style.top = 0;\r\n    element.style.left = 0;\r\n    element.style.display = 'block';\r\n    element.style.transformOrigin = element.style.webkitTransformOrigin = '0 0';\r\n    element.style.backfaceVisibility  = element.style.webkitBackfaceVisibility = 'visible';\r\n    element.style.transformStyle = element.style.webkitTransformStyle = element.style.mozTransformStyle = \"preserve-3d\";\r\n}\r\n\r\nfunction BMEnterFrameEvent(n,c,t,d){\r\n    this.type = n;\r\n    this.currentTime = c;\r\n    this.totalTime = t;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMCompleteEvent(n,d){\r\n    this.type = n;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMCompleteLoopEvent(n,c,t,d){\r\n    this.type = n;\r\n    this.currentLoop = t;\r\n    this.totalLoops = c;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMSegmentStartEvent(n,f,t){\r\n    this.type = n;\r\n    this.firstFrame = f;\r\n    this.totalFrames = t;\r\n}\r\n\r\nfunction BMDestroyEvent(n,t){\r\n    this.type = n;\r\n    this.target = t;\r\n}\r\n\r\nfunction randomString(length, chars){\r\n    if(chars === undefined){\r\n        chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890';\r\n    }\r\n    var i;\r\n    var result = '';\r\n    for (i = length; i > 0; --i) result += chars[Math.round(Math.random() * (chars.length - 1))];\r\n    return result;\r\n}\r\n\r\nfunction HSVtoRGB(h, s, v) {\r\n    var r, g, b, i, f, p, q, t;\r\n    i = Math.floor(h * 6);\r\n    f = h * 6 - i;\r\n    p = v * (1 - s);\r\n    q = v * (1 - f * s);\r\n    t = v * (1 - (1 - f) * s);\r\n    switch (i % 6) {\r\n        case 0: r = v; g = t; b = p; break;\r\n        case 1: r = q; g = v; b = p; break;\r\n        case 2: r = p; g = v; b = t; break;\r\n        case 3: r = p; g = q; b = v; break;\r\n        case 4: r = t; g = p; b = v; break;\r\n        case 5: r = v; g = p; b = q; break;\r\n    }\r\n    return [ r,\r\n        g,\r\n         b ];\r\n}\r\n\r\nfunction RGBtoHSV(r, g, b) {\r\n    var max = Math.max(r, g, b), min = Math.min(r, g, b),\r\n        d = max - min,\r\n        h,\r\n        s = (max === 0 ? 0 : d / max),\r\n        v = max / 255;\r\n\r\n    switch (max) {\r\n        case min: h = 0; break;\r\n        case r: h = (g - b) + d * (g < b ? 6: 0); h /= 6 * d; break;\r\n        case g: h = (b - r) + d * 2; h /= 6 * d; break;\r\n        case b: h = (r - g) + d * 4; h /= 6 * d; break;\r\n    }\r\n\r\n    return [\r\n         h,\r\n         s,\r\n         v\r\n    ];\r\n}\r\n\r\nfunction addSaturationToRGB(color,offset){\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[1] += offset;\r\n    if (hsv[1] > 1) {\r\n        hsv[1] = 1;\r\n    }\r\n    else if (hsv[1] <= 0) {\r\n        hsv[1] = 0;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nfunction addBrightnessToRGB(color,offset){\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[2] += offset;\r\n    if (hsv[2] > 1) {\r\n        hsv[2] = 1;\r\n    }\r\n    else if (hsv[2] < 0) {\r\n        hsv[2] = 0;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nfunction addHueToRGB(color,offset) {\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[0] += offset/360;\r\n    if (hsv[0] > 1) {\r\n        hsv[0] -= 1;\r\n    }\r\n    else if (hsv[0] < 0) {\r\n        hsv[0] += 1;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nvar rgbToHex = (function(){\r\n    var colorMap = [];\r\n    var i;\r\n    var hex;\r\n    for(i=0;i<256;i+=1){\r\n        hex = i.toString(16);\r\n        colorMap[i] = hex.length == 1 ? '0' + hex : hex;\r\n    }\r\n\r\n    return function(r, g, b) {\r\n        if(r<0){\r\n            r = 0;\r\n        }\r\n        if(g<0){\r\n            g = 0;\r\n        }\r\n        if(b<0){\r\n            b = 0;\r\n        }\r\n        return '#' + colorMap[r] + colorMap[g] + colorMap[b];\r\n    };\r\n}());\r\nfunction BaseEvent(){}\r\nBaseEvent.prototype = {\r\n\ttriggerEvent: function (eventName, args) {\r\n\t    if (this._cbs[eventName]) {\r\n\t        var len = this._cbs[eventName].length;\r\n\t        for (var i = 0; i < len; i++){\r\n\t            this._cbs[eventName][i](args);\r\n\t        }\r\n\t    }\r\n\t},\r\n\taddEventListener: function (eventName, callback) {\r\n\t    if (!this._cbs[eventName]){\r\n\t        this._cbs[eventName] = [];\r\n\t    }\r\n\t    this._cbs[eventName].push(callback);\r\n\r\n\t\treturn function() {\r\n\t\t\tthis.removeEventListener(eventName, callback);\r\n\t\t}.bind(this);\r\n\t},\r\n\tremoveEventListener: function (eventName,callback){\r\n\t    if (!callback){\r\n\t        this._cbs[eventName] = null;\r\n\t    }else if(this._cbs[eventName]){\r\n\t        var i = 0, len = this._cbs[eventName].length;\r\n\t        while(i<len){\r\n\t            if(this._cbs[eventName][i] === callback){\r\n\t                this._cbs[eventName].splice(i,1);\r\n\t                i -=1;\r\n\t                len -= 1;\r\n\t            }\r\n\t            i += 1;\r\n\t        }\r\n\t        if(!this._cbs[eventName].length){\r\n\t            this._cbs[eventName] = null;\r\n\t        }\r\n\t    }\r\n\t}\r\n};\r\nvar createTypedArray = (function(){\r\n\tfunction createRegularArray(type, len){\r\n\t\tvar i = 0, arr = [], value;\r\n\t\tswitch(type) {\r\n\t\t\tcase 'int16':\r\n\t\t\tcase 'uint8c':\r\n\t\t\t\tvalue = 1;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tvalue = 1.1;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tarr.push(value);\r\n\t\t}\r\n\t\treturn arr;\r\n\t}\r\n\tfunction createTypedArray(type, len){\r\n\t\tif(type === 'float32') {\r\n\t\t\treturn new Float32Array(len);\r\n\t\t} else if(type === 'int16') {\r\n\t\t\treturn new Int16Array(len);\r\n\t\t} else if(type === 'uint8c') {\r\n\t\t\treturn new Uint8ClampedArray(len);\r\n\t\t}\r\n\t}\r\n\tif(typeof Uint8ClampedArray === 'function' && typeof Float32Array === 'function') {\r\n\t\treturn createTypedArray;\r\n\t} else {\r\n\t\treturn createRegularArray;\r\n\t}\r\n}());\r\n\r\nfunction createSizedArray(len) {\r\n\treturn Array.apply(null,{length:len});\r\n}\r\nfunction createNS(type) {\r\n\t//return {appendChild:function(){},setAttribute:function(){},style:{}}\r\n\treturn document.createElementNS(svgNS, type);\r\n}\r\nfunction createTag(type) {\r\n\t//return {appendChild:function(){},setAttribute:function(){},style:{}}\r\n\treturn document.createElement(type);\r\n}\r\n/*!\r\n Transformation Matrix v2.0\r\n (c) Epistemex 2014-2015\r\n www.epistemex.com\r\n By Ken Fyrstenberg\r\n Contributions by leeoniya.\r\n License: MIT, header required.\r\n */\r\n\r\n/**\r\n * 2D transformation matrix object initialized with identity matrix.\r\n *\r\n * The matrix can synchronize a canvas context by supplying the context\r\n * as an argument, or later apply current absolute transform to an\r\n * existing context.\r\n *\r\n * All values are handled as floating point values.\r\n *\r\n * @param {CanvasRenderingContext2D} [context] - Optional context to sync with Matrix\r\n * @prop {number} a - scale x\r\n * @prop {number} b - shear y\r\n * @prop {number} c - shear x\r\n * @prop {number} d - scale y\r\n * @prop {number} e - translate x\r\n * @prop {number} f - translate y\r\n * @prop {CanvasRenderingContext2D|null} [context=null] - set or get current canvas context\r\n * @constructor\r\n */\r\n\r\nvar Matrix = (function(){\r\n\r\n    var _cos = Math.cos;\r\n    var _sin = Math.sin;\r\n    var _tan = Math.tan;\r\n    var _rnd = Math.round;\r\n\r\n    function reset(){\r\n        this.props[0] = 1;\r\n        this.props[1] = 0;\r\n        this.props[2] = 0;\r\n        this.props[3] = 0;\r\n        this.props[4] = 0;\r\n        this.props[5] = 1;\r\n        this.props[6] = 0;\r\n        this.props[7] = 0;\r\n        this.props[8] = 0;\r\n        this.props[9] = 0;\r\n        this.props[10] = 1;\r\n        this.props[11] = 0;\r\n        this.props[12] = 0;\r\n        this.props[13] = 0;\r\n        this.props[14] = 0;\r\n        this.props[15] = 1;\r\n        return this;\r\n    }\r\n\r\n    function rotate(angle) {\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateX(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(1, 0, 0, 0, 0, mCos, -mSin, 0, 0, mSin,  mCos, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateY(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos,  0,  mSin, 0, 0, 1, 0, 0, -mSin,  0,  mCos, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateZ(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function shear(sx,sy){\r\n        return this._t(1, sy, sx, 1, 0, 0);\r\n    }\r\n\r\n    function skew(ax, ay){\r\n        return this.shear(_tan(ax), _tan(ay));\r\n    }\r\n\r\n    function skewFromAxis(ax, angle){\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos, mSin,  0, 0, -mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1)\r\n            ._t(1, 0,  0, 0, _tan(ax),  1, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1)\r\n            ._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);\r\n        //return this._t(mCos, mSin, -mSin, mCos, 0, 0)._t(1, 0, _tan(ax), 1, 0, 0)._t(mCos, -mSin, mSin, mCos, 0, 0);\r\n    }\r\n\r\n    function scale(sx, sy, sz) {\r\n        sz = isNaN(sz) ? 1 : sz;\r\n        if(sx == 1 && sy == 1 && sz == 1){\r\n            return this;\r\n        }\r\n        return this._t(sx, 0, 0, 0, 0, sy, 0, 0, 0, 0, sz, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function setTransform(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {\r\n        this.props[0] = a;\r\n        this.props[1] = b;\r\n        this.props[2] = c;\r\n        this.props[3] = d;\r\n        this.props[4] = e;\r\n        this.props[5] = f;\r\n        this.props[6] = g;\r\n        this.props[7] = h;\r\n        this.props[8] = i;\r\n        this.props[9] = j;\r\n        this.props[10] = k;\r\n        this.props[11] = l;\r\n        this.props[12] = m;\r\n        this.props[13] = n;\r\n        this.props[14] = o;\r\n        this.props[15] = p;\r\n        return this;\r\n    }\r\n\r\n    function translate(tx, ty, tz) {\r\n        tz = tz || 0;\r\n        if(tx !== 0 || ty !== 0 || tz !== 0){\r\n            return this._t(1,0,0,0,0,1,0,0,0,0,1,0,tx,ty,tz,1);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function transform(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2, m2, n2, o2, p2) {\r\n\r\n        var _p = this.props;\r\n\r\n        if(a2 === 1 && b2 === 0 && c2 === 0 && d2 === 0 && e2 === 0 && f2 === 1 && g2 === 0 && h2 === 0 && i2 === 0 && j2 === 0 && k2 === 1 && l2 === 0){\r\n            //NOTE: commenting this condition because TurboFan deoptimizes code when present\r\n            //if(m2 !== 0 || n2 !== 0 || o2 !== 0){\r\n                _p[12] = _p[12] * a2 + _p[15] * m2;\r\n                _p[13] = _p[13] * f2 + _p[15] * n2;\r\n                _p[14] = _p[14] * k2 + _p[15] * o2;\r\n                _p[15] = _p[15] * p2;\r\n            //}\r\n            this._identityCalculated = false;\r\n            return this;\r\n        }\r\n\r\n        var a1 = _p[0];\r\n        var b1 = _p[1];\r\n        var c1 = _p[2];\r\n        var d1 = _p[3];\r\n        var e1 = _p[4];\r\n        var f1 = _p[5];\r\n        var g1 = _p[6];\r\n        var h1 = _p[7];\r\n        var i1 = _p[8];\r\n        var j1 = _p[9];\r\n        var k1 = _p[10];\r\n        var l1 = _p[11];\r\n        var m1 = _p[12];\r\n        var n1 = _p[13];\r\n        var o1 = _p[14];\r\n        var p1 = _p[15];\r\n\r\n        /* matrix order (canvas compatible):\r\n         * ace\r\n         * bdf\r\n         * 001\r\n         */\r\n        _p[0] = a1 * a2 + b1 * e2 + c1 * i2 + d1 * m2;\r\n        _p[1] = a1 * b2 + b1 * f2 + c1 * j2 + d1 * n2 ;\r\n        _p[2] = a1 * c2 + b1 * g2 + c1 * k2 + d1 * o2 ;\r\n        _p[3] = a1 * d2 + b1 * h2 + c1 * l2 + d1 * p2 ;\r\n\r\n        _p[4] = e1 * a2 + f1 * e2 + g1 * i2 + h1 * m2 ;\r\n        _p[5] = e1 * b2 + f1 * f2 + g1 * j2 + h1 * n2 ;\r\n        _p[6] = e1 * c2 + f1 * g2 + g1 * k2 + h1 * o2 ;\r\n        _p[7] = e1 * d2 + f1 * h2 + g1 * l2 + h1 * p2 ;\r\n\r\n        _p[8] = i1 * a2 + j1 * e2 + k1 * i2 + l1 * m2 ;\r\n        _p[9] = i1 * b2 + j1 * f2 + k1 * j2 + l1 * n2 ;\r\n        _p[10] = i1 * c2 + j1 * g2 + k1 * k2 + l1 * o2 ;\r\n        _p[11] = i1 * d2 + j1 * h2 + k1 * l2 + l1 * p2 ;\r\n\r\n        _p[12] = m1 * a2 + n1 * e2 + o1 * i2 + p1 * m2 ;\r\n        _p[13] = m1 * b2 + n1 * f2 + o1 * j2 + p1 * n2 ;\r\n        _p[14] = m1 * c2 + n1 * g2 + o1 * k2 + p1 * o2 ;\r\n        _p[15] = m1 * d2 + n1 * h2 + o1 * l2 + p1 * p2 ;\r\n\r\n        this._identityCalculated = false;\r\n        return this;\r\n    }\r\n\r\n    function isIdentity() {\r\n        if(!this._identityCalculated){\r\n            this._identity = !(this.props[0] !== 1 || this.props[1] !== 0 || this.props[2] !== 0 || this.props[3] !== 0 || this.props[4] !== 0 || this.props[5] !== 1 || this.props[6] !== 0 || this.props[7] !== 0 || this.props[8] !== 0 || this.props[9] !== 0 || this.props[10] !== 1 || this.props[11] !== 0 || this.props[12] !== 0 || this.props[13] !== 0 || this.props[14] !== 0 || this.props[15] !== 1);\r\n            this._identityCalculated = true;\r\n        }\r\n        return this._identity;\r\n    }\r\n\r\n    function equals(matr){\r\n        var i = 0;\r\n        while (i < 16) {\r\n            if(matr.props[i] !== this.props[i]) {\r\n                return false;\r\n            }\r\n            i+=1;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function clone(matr){\r\n        var i;\r\n        for(i=0;i<16;i+=1){\r\n            matr.props[i] = this.props[i];\r\n        }\r\n    }\r\n\r\n    function cloneFromProps(props){\r\n        var i;\r\n        for(i=0;i<16;i+=1){\r\n            this.props[i] = props[i];\r\n        }\r\n    }\r\n\r\n    function applyToPoint(x, y, z) {\r\n\r\n        return {\r\n            x: x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],\r\n            y: x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],\r\n            z: x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]\r\n        };\r\n        /*return {\r\n         x: x * me.a + y * me.c + me.e,\r\n         y: x * me.b + y * me.d + me.f\r\n         };*/\r\n    }\r\n    function applyToX(x, y, z) {\r\n        return x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12];\r\n    }\r\n    function applyToY(x, y, z) {\r\n        return x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13];\r\n    }\r\n    function applyToZ(x, y, z) {\r\n        return x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14];\r\n    }\r\n\r\n    function inversePoint(pt) {\r\n        var determinant = this.props[0] * this.props[5] - this.props[1] * this.props[4];\r\n        var a = this.props[5]/determinant;\r\n        var b = - this.props[1]/determinant;\r\n        var c = - this.props[4]/determinant;\r\n        var d = this.props[0]/determinant;\r\n        var e = (this.props[4] * this.props[13] - this.props[5] * this.props[12])/determinant;\r\n        var f = - (this.props[0] * this.props[13] - this.props[1] * this.props[12])/determinant;\r\n        return [pt[0] * a + pt[1] * c + e, pt[0] * b + pt[1] * d + f, 0];\r\n    }\r\n\r\n    function inversePoints(pts){\r\n        var i, len = pts.length, retPts = [];\r\n        for(i=0;i<len;i+=1){\r\n            retPts[i] = inversePoint(pts[i]);\r\n        }\r\n        return retPts;\r\n    }\r\n\r\n    function applyToTriplePoints(pt1, pt2, pt3) {\r\n        var arr = createTypedArray('float32', 6);\r\n        if(this.isIdentity()) {\r\n            arr[0] = pt1[0];\r\n            arr[1] = pt1[1];\r\n            arr[2] = pt2[0];\r\n            arr[3] = pt2[1];\r\n            arr[4] = pt3[0];\r\n            arr[5] = pt3[1];\r\n        } else {\r\n            var p0 = this.props[0], p1 = this.props[1], p4 = this.props[4], p5 = this.props[5], p12 = this.props[12], p13 = this.props[13];\r\n            arr[0] = pt1[0] * p0 + pt1[1] * p4 + p12;\r\n            arr[1] = pt1[0] * p1 + pt1[1] * p5 + p13;\r\n            arr[2] = pt2[0] * p0 + pt2[1] * p4 + p12;\r\n            arr[3] = pt2[0] * p1 + pt2[1] * p5 + p13;\r\n            arr[4] = pt3[0] * p0 + pt3[1] * p4 + p12;\r\n            arr[5] = pt3[0] * p1 + pt3[1] * p5 + p13;\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function applyToPointArray(x,y,z){\r\n        var arr;\r\n        if(this.isIdentity()) {\r\n            arr = [x,y,z];\r\n        } else {\r\n            arr = [x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]];\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function applyToPointStringified(x, y) {\r\n        if(this.isIdentity()) {\r\n            return x + ',' + y;\r\n        }\r\n        return (x * this.props[0] + y * this.props[4] + this.props[12])+','+(x * this.props[1] + y * this.props[5] + this.props[13]);\r\n    }\r\n\r\n    function toCSS() {\r\n        //Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.\r\n        /*if(this.isIdentity()) {\r\n            return '';\r\n        }*/\r\n        var i = 0;\r\n        var props = this.props;\r\n        var cssValue = 'matrix3d(';\r\n        var v = 10000;\r\n        while(i<16){\r\n            cssValue += _rnd(props[i]*v)/v;\r\n            cssValue += i === 15 ? ')':',';\r\n            i += 1;\r\n        }\r\n        return cssValue;\r\n    }\r\n\r\n    function to2dCSS() {\r\n        //Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.\r\n        /*if(this.isIdentity()) {\r\n            return '';\r\n        }*/\r\n        var v = 10000;\r\n        var props = this.props;\r\n        return \"matrix(\" + _rnd(props[0]*v)/v + ',' + _rnd(props[1]*v)/v + ',' + _rnd(props[4]*v)/v + ',' + _rnd(props[5]*v)/v + ',' + _rnd(props[12]*v)/v + ',' + _rnd(props[13]*v)/v + \")\";\r\n    }\r\n\r\n    return function(){\r\n        this.reset = reset;\r\n        this.rotate = rotate;\r\n        this.rotateX = rotateX;\r\n        this.rotateY = rotateY;\r\n        this.rotateZ = rotateZ;\r\n        this.skew = skew;\r\n        this.skewFromAxis = skewFromAxis;\r\n        this.shear = shear;\r\n        this.scale = scale;\r\n        this.setTransform = setTransform;\r\n        this.translate = translate;\r\n        this.transform = transform;\r\n        this.applyToPoint = applyToPoint;\r\n        this.applyToX = applyToX;\r\n        this.applyToY = applyToY;\r\n        this.applyToZ = applyToZ;\r\n        this.applyToPointArray = applyToPointArray;\r\n        this.applyToTriplePoints = applyToTriplePoints;\r\n        this.applyToPointStringified = applyToPointStringified;\r\n        this.toCSS = toCSS;\r\n        this.to2dCSS = to2dCSS;\r\n        this.clone = clone;\r\n        this.cloneFromProps = cloneFromProps;\r\n        this.equals = equals;\r\n        this.inversePoints = inversePoints;\r\n        this.inversePoint = inversePoint;\r\n        this._t = this.transform;\r\n        this.isIdentity = isIdentity;\r\n        this._identity = true;\r\n        this._identityCalculated = false;\r\n\r\n        this.props = createTypedArray('float32', 16);\r\n        this.reset();\r\n    };\r\n}());\r\n\r\n/*\r\n Copyright 2014 David Bau.\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining\r\n a copy of this software and associated documentation files (the\r\n \"Software\"), to deal in the Software without restriction, including\r\n without limitation the rights to use, copy, modify, merge, publish,\r\n distribute, sublicense, and/or sell copies of the Software, and to\r\n permit persons to whom the Software is furnished to do so, subject to\r\n the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be\r\n included in all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\n IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\n CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\n TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n */\r\n\r\n(function (pool, math) {\r\n//\r\n// The following constants are related to IEEE 754 limits.\r\n//\r\n    var global = this,\r\n        width = 256,        // each RC4 output is 0 <= x < 256\r\n        chunks = 6,         // at least six RC4 outputs for each double\r\n        digits = 52,        // there are 52 significant digits in a double\r\n        rngname = 'random', // rngname: name for Math.random and Math.seedrandom\r\n        startdenom = math.pow(width, chunks),\r\n        significance = math.pow(2, digits),\r\n        overflow = significance * 2,\r\n        mask = width - 1,\r\n        nodecrypto;         // node.js crypto module, initialized at the bottom.\r\n\r\n//\r\n// seedrandom()\r\n// This is the seedrandom function described above.\r\n//\r\n    function seedrandom(seed, options, callback) {\r\n        var key = [];\r\n        options = (options === true) ? { entropy: true } : (options || {});\r\n\r\n        // Flatten the seed string or build one from local entropy if needed.\r\n        var shortseed = mixkey(flatten(\r\n            options.entropy ? [seed, tostring(pool)] :\r\n                (seed === null) ? autoseed() : seed, 3), key);\r\n\r\n        // Use the seed to initialize an ARC4 generator.\r\n        var arc4 = new ARC4(key);\r\n\r\n        // This function returns a random double in [0, 1) that contains\r\n        // randomness in every bit of the mantissa of the IEEE 754 value.\r\n        var prng = function() {\r\n            var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\r\n                d = startdenom,                 //   and denominator d = 2 ^ 48.\r\n                x = 0;                          //   and no 'extra last byte'.\r\n            while (n < significance) {          // Fill up all significant digits by\r\n                n = (n + x) * width;              //   shifting numerator and\r\n                d *= width;                       //   denominator and generating a\r\n                x = arc4.g(1);                    //   new least-significant-byte.\r\n            }\r\n            while (n >= overflow) {             // To avoid rounding up, before adding\r\n                n /= 2;                           //   last byte, shift everything\r\n                d /= 2;                           //   right using integer math until\r\n                x >>>= 1;                         //   we have exactly the desired bits.\r\n            }\r\n            return (n + x) / d;                 // Form the number within [0, 1).\r\n        };\r\n\r\n        prng.int32 = function() { return arc4.g(4) | 0; };\r\n        prng.quick = function() { return arc4.g(4) / 0x100000000; };\r\n        prng.double = prng;\r\n\r\n        // Mix the randomness into accumulated entropy.\r\n        mixkey(tostring(arc4.S), pool);\r\n\r\n        // Calling convention: what to return as a function of prng, seed, is_math.\r\n        return (options.pass || callback ||\r\n        function(prng, seed, is_math_call, state) {\r\n            if (state) {\r\n                // Load the arc4 state from the given state if it has an S array.\r\n                if (state.S) { copy(state, arc4); }\r\n                // Only provide the .state method if requested via options.state.\r\n                prng.state = function() { return copy(arc4, {}); };\r\n            }\r\n\r\n            // If called as a method of Math (Math.seedrandom()), mutate\r\n            // Math.random because that is how seedrandom.js has worked since v1.0.\r\n            if (is_math_call) { math[rngname] = prng; return seed; }\r\n\r\n            // Otherwise, it is a newer calling convention, so return the\r\n            // prng directly.\r\n            else return prng;\r\n        })(\r\n            prng,\r\n            shortseed,\r\n            'global' in options ? options.global : (this == math),\r\n            options.state);\r\n    }\r\n    math['seed' + rngname] = seedrandom;\r\n\r\n//\r\n// ARC4\r\n//\r\n// An ARC4 implementation.  The constructor takes a key in the form of\r\n// an array of at most (width) integers that should be 0 <= x < (width).\r\n//\r\n// The g(count) method returns a pseudorandom integer that concatenates\r\n// the next (count) outputs from ARC4.  Its return value is a number x\r\n// that is in the range 0 <= x < (width ^ count).\r\n//\r\n    function ARC4(key) {\r\n        var t, keylen = key.length,\r\n            me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\r\n\r\n        // The empty key [] is treated as [0].\r\n        if (!keylen) { key = [keylen++]; }\r\n\r\n        // Set up S using the standard key scheduling algorithm.\r\n        while (i < width) {\r\n            s[i] = i++;\r\n        }\r\n        for (i = 0; i < width; i++) {\r\n            s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\r\n            s[j] = t;\r\n        }\r\n\r\n        // The \"g\" method returns the next (count) outputs as one number.\r\n        me.g = function(count) {\r\n            // Using instance members instead of closure state nearly doubles speed.\r\n            var t, r = 0,\r\n                i = me.i, j = me.j, s = me.S;\r\n            while (count--) {\r\n                t = s[i = mask & (i + 1)];\r\n                r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\r\n            }\r\n            me.i = i; me.j = j;\r\n            return r;\r\n            // For robust unpredictability, the function call below automatically\r\n            // discards an initial batch of values.  This is called RC4-drop[256].\r\n            // See http://google.com/search?q=rsa+fluhrer+response&btnI\r\n        };\r\n    }\r\n\r\n//\r\n// copy()\r\n// Copies internal state of ARC4 to or from a plain object.\r\n//\r\n    function copy(f, t) {\r\n        t.i = f.i;\r\n        t.j = f.j;\r\n        t.S = f.S.slice();\r\n        return t;\r\n    }\r\n\r\n//\r\n// flatten()\r\n// Converts an object tree to nested arrays of strings.\r\n//\r\n    function flatten(obj, depth) {\r\n        var result = [], typ = (typeof obj), prop;\r\n        if (depth && typ == 'object') {\r\n            for (prop in obj) {\r\n                try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\r\n            }\r\n        }\r\n        return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\r\n    }\r\n\r\n//\r\n// mixkey()\r\n// Mixes a string seed into a key that is an array of integers, and\r\n// returns a shortened string seed that is equivalent to the result key.\r\n//\r\n    function mixkey(seed, key) {\r\n        var stringseed = seed + '', smear, j = 0;\r\n        while (j < stringseed.length) {\r\n            key[mask & j] =\r\n                mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\r\n        }\r\n        return tostring(key);\r\n    }\r\n\r\n//\r\n// autoseed()\r\n// Returns an object for autoseeding, using window.crypto and Node crypto\r\n// module if available.\r\n//\r\n    function autoseed() {\r\n        try {\r\n            if (nodecrypto) { return tostring(nodecrypto.randomBytes(width)); }\r\n            var out = new Uint8Array(width);\r\n            (global.crypto || global.msCrypto).getRandomValues(out);\r\n            return tostring(out);\r\n        } catch (e) {\r\n            var browser = global.navigator,\r\n                plugins = browser && browser.plugins;\r\n            return [+new Date(), global, plugins, global.screen, tostring(pool)];\r\n        }\r\n    }\r\n\r\n//\r\n// tostring()\r\n// Converts an array of charcodes to a string\r\n//\r\n    function tostring(a) {\r\n        return String.fromCharCode.apply(0, a);\r\n    }\r\n\r\n//\r\n// When seedrandom.js is loaded, we immediately mix a few bits\r\n// from the built-in RNG into the entropy pool.  Because we do\r\n// not want to interfere with deterministic PRNG state later,\r\n// seedrandom will not call math.random on its own again after\r\n// initialization.\r\n//\r\n    mixkey(math.random(), pool);\r\n\r\n//\r\n// Nodejs and AMD support: export the implementation as a module using\r\n// either convention.\r\n//\r\n\r\n// End anonymous scope, and pass initial values.\r\n})(\r\n    [],     // pool: entropy pool starts empty\r\n    BMMath    // math: package containing random, pow, and seedrandom\r\n);\r\nvar BezierFactory = (function(){\r\n    /**\r\n     * BezierEasing - use bezier curve for transition easing function\r\n     * by Gaëtan Renaudeau 2014 - 2015 – MIT License\r\n     *\r\n     * Credits: is based on Firefox's nsSMILKeySpline.cpp\r\n     * Usage:\r\n     * var spline = BezierEasing([ 0.25, 0.1, 0.25, 1.0 ])\r\n     * spline.get(x) => returns the easing value | x must be in [0, 1] range\r\n     *\r\n     */\r\n\r\n        var ob = {};\r\n    ob.getBezierEasing = getBezierEasing;\r\n    var beziers = {};\r\n\r\n    function getBezierEasing(a,b,c,d,nm){\r\n        var str = nm || ('bez_' + a+'_'+b+'_'+c+'_'+d).replace(/\\./g, 'p');\r\n        if(beziers[str]){\r\n            return beziers[str];\r\n        }\r\n        var bezEasing = new BezierEasing([a,b,c,d]);\r\n        beziers[str] = bezEasing;\r\n        return bezEasing;\r\n    }\r\n\r\n// These values are established by empiricism with tests (tradeoff: performance VS precision)\r\n    var NEWTON_ITERATIONS = 4;\r\n    var NEWTON_MIN_SLOPE = 0.001;\r\n    var SUBDIVISION_PRECISION = 0.0000001;\r\n    var SUBDIVISION_MAX_ITERATIONS = 10;\r\n\r\n    var kSplineTableSize = 11;\r\n    var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\r\n\r\n    var float32ArraySupported = typeof Float32Array === \"function\";\r\n\r\n    function A (aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }\r\n    function B (aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }\r\n    function C (aA1)      { return 3.0 * aA1; }\r\n\r\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\r\n    function calcBezier (aT, aA1, aA2) {\r\n        return ((A(aA1, aA2)*aT + B(aA1, aA2))*aT + C(aA1))*aT;\r\n    }\r\n\r\n// Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\r\n    function getSlope (aT, aA1, aA2) {\r\n        return 3.0 * A(aA1, aA2)*aT*aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\r\n    }\r\n\r\n    function binarySubdivide (aX, aA, aB, mX1, mX2) {\r\n        var currentX, currentT, i = 0;\r\n        do {\r\n            currentT = aA + (aB - aA) / 2.0;\r\n            currentX = calcBezier(currentT, mX1, mX2) - aX;\r\n            if (currentX > 0.0) {\r\n                aB = currentT;\r\n            } else {\r\n                aA = currentT;\r\n            }\r\n        } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\r\n        return currentT;\r\n    }\r\n\r\n    function newtonRaphsonIterate (aX, aGuessT, mX1, mX2) {\r\n        for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\r\n            var currentSlope = getSlope(aGuessT, mX1, mX2);\r\n            if (currentSlope === 0.0) return aGuessT;\r\n            var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\r\n            aGuessT -= currentX / currentSlope;\r\n        }\r\n        return aGuessT;\r\n    }\r\n\r\n    /**\r\n     * points is an array of [ mX1, mY1, mX2, mY2 ]\r\n     */\r\n    function BezierEasing (points) {\r\n        this._p = points;\r\n        this._mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\r\n        this._precomputed = false;\r\n\r\n        this.get = this.get.bind(this);\r\n    }\r\n\r\n    BezierEasing.prototype = {\r\n\r\n        get: function (x) {\r\n            var mX1 = this._p[0],\r\n                mY1 = this._p[1],\r\n                mX2 = this._p[2],\r\n                mY2 = this._p[3];\r\n            if (!this._precomputed) this._precompute();\r\n            if (mX1 === mY1 && mX2 === mY2) return x; // linear\r\n            // Because JavaScript number are imprecise, we should guarantee the extremes are right.\r\n            if (x === 0) return 0;\r\n            if (x === 1) return 1;\r\n            return calcBezier(this._getTForX(x), mY1, mY2);\r\n        },\r\n\r\n        // Private part\r\n\r\n        _precompute: function () {\r\n            var mX1 = this._p[0],\r\n                mY1 = this._p[1],\r\n                mX2 = this._p[2],\r\n                mY2 = this._p[3];\r\n            this._precomputed = true;\r\n            if (mX1 !== mY1 || mX2 !== mY2)\r\n                this._calcSampleValues();\r\n        },\r\n\r\n        _calcSampleValues: function () {\r\n            var mX1 = this._p[0],\r\n                mX2 = this._p[2];\r\n            for (var i = 0; i < kSplineTableSize; ++i) {\r\n                this._mSampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * getTForX chose the fastest heuristic to determine the percentage value precisely from a given X projection.\r\n         */\r\n        _getTForX: function (aX) {\r\n            var mX1 = this._p[0],\r\n                mX2 = this._p[2],\r\n                mSampleValues = this._mSampleValues;\r\n\r\n            var intervalStart = 0.0;\r\n            var currentSample = 1;\r\n            var lastSample = kSplineTableSize - 1;\r\n\r\n            for (; currentSample !== lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {\r\n                intervalStart += kSampleStepSize;\r\n            }\r\n            --currentSample;\r\n\r\n            // Interpolate to provide an initial guess for t\r\n            var dist = (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample+1] - mSampleValues[currentSample]);\r\n            var guessForT = intervalStart + dist * kSampleStepSize;\r\n\r\n            var initialSlope = getSlope(guessForT, mX1, mX2);\r\n            if (initialSlope >= NEWTON_MIN_SLOPE) {\r\n                return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\r\n            } else if (initialSlope === 0.0) {\r\n                return guessForT;\r\n            } else {\r\n                return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\r\n            }\r\n        }\r\n    };\r\n\r\n    return ob;\r\n\r\n}());\r\n(function () {\r\n    var lastTime = 0;\r\n    var vendors = ['ms', 'moz', 'webkit', 'o'];\r\n    for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\r\n        window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\r\n        window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\r\n    }\r\n    if(!window.requestAnimationFrame)\r\n        window.requestAnimationFrame = function (callback, element) {\r\n            var currTime = new Date().getTime();\r\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n            var id = setTimeout(function () {\r\n                    callback(currTime + timeToCall);\r\n                },\r\n                timeToCall);\r\n            lastTime = currTime + timeToCall;\r\n            return id;\r\n        };\r\n    if(!window.cancelAnimationFrame)\r\n        window.cancelAnimationFrame = function (id) {\r\n            clearTimeout(id);\r\n        };\r\n}());\r\n\r\nfunction extendPrototype(sources,destination){\r\n    var i, len = sources.length, sourcePrototype;\r\n    for (i = 0;i < len;i += 1) {\r\n        sourcePrototype = sources[i].prototype;\r\n        for (var attr in sourcePrototype) {\r\n            if (sourcePrototype.hasOwnProperty(attr)) destination.prototype[attr] = sourcePrototype[attr];\r\n        }\r\n    }\r\n}\r\n\r\nfunction getDescriptor(object, prop) {\r\n    return Object.getOwnPropertyDescriptor(object, prop);\r\n}\r\n\r\nfunction createProxyFunction(prototype) {\r\n\tfunction ProxyFunction(){}\r\n\tProxyFunction.prototype = prototype;\r\n\treturn ProxyFunction;\r\n}\r\nfunction bezFunction(){\r\n\r\n    var easingFunctions = [];\r\n    var math = Math;\r\n\r\n    function pointOnLine2D(x1,y1, x2,y2, x3,y3){\r\n        var det1 = (x1*y2) + (y1*x3) + (x2*y3) - (x3*y2) - (y3*x1) - (x2*y1);\r\n        return det1 > -0.0001 && det1 < 0.0001;\r\n    }\r\n\r\n    function pointOnLine3D(x1,y1,z1, x2,y2,z2, x3,y3,z3){\r\n        if(z1 === 0 && z2 === 0 && z3 === 0) {\r\n            return pointOnLine2D(x1,y1, x2,y2, x3,y3);\r\n        }\r\n        var dist1 = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2) + Math.pow(z2 - z1, 2));\r\n        var dist2 = Math.sqrt(Math.pow(x3 - x1, 2) + Math.pow(y3 - y1, 2) + Math.pow(z3 - z1, 2));\r\n        var dist3 = Math.sqrt(Math.pow(x3 - x2, 2) + Math.pow(y3 - y2, 2) + Math.pow(z3 - z2, 2));\r\n        var diffDist;\r\n        if(dist1 > dist2){\r\n            if(dist1 > dist3){\r\n                diffDist = dist1 - dist2 - dist3;\r\n            } else {\r\n                diffDist = dist3 - dist2 - dist1;\r\n            }\r\n        } else if(dist3 > dist2){\r\n            diffDist = dist3 - dist2 - dist1;\r\n        } else {\r\n            diffDist = dist2 - dist1 - dist3;\r\n        }\r\n        return diffDist > -0.0001 && diffDist < 0.0001;\r\n    }\r\n\r\n    var getBezierLength = (function(){\r\n\r\n        return function(pt1,pt2,pt3,pt4){\r\n            var curveSegments = defaultCurveSegments;\r\n            var k;\r\n            var i, len;\r\n            var ptCoord,perc,addedLength = 0;\r\n            var ptDistance;\r\n            var point = [],lastPoint = [];\r\n            var lengthData = bezier_length_pool.newElement();\r\n            len = pt3.length;\r\n            for(k=0;k<curveSegments;k+=1){\r\n                perc = k/(curveSegments-1);\r\n                ptDistance = 0;\r\n                for(i=0;i<len;i+=1){\r\n                    ptCoord = bm_pow(1-perc,3)*pt1[i]+3*bm_pow(1-perc,2)*perc*pt3[i]+3*(1-perc)*bm_pow(perc,2)*pt4[i]+bm_pow(perc,3)*pt2[i];\r\n                    point[i] = ptCoord;\r\n                    if(lastPoint[i] !== null){\r\n                        ptDistance += bm_pow(point[i] - lastPoint[i],2);\r\n                    }\r\n                    lastPoint[i] = point[i];\r\n                }\r\n                if(ptDistance){\r\n                    ptDistance = bm_sqrt(ptDistance);\r\n                    addedLength += ptDistance;\r\n                }\r\n                lengthData.percents[k] = perc;\r\n                lengthData.lengths[k] = addedLength;\r\n            }\r\n            lengthData.addedLength = addedLength;\r\n            return lengthData;\r\n        };\r\n    }());\r\n\r\n    function getSegmentsLength(shapeData) {\r\n        var segmentsLength = segments_length_pool.newElement();\r\n        var closed = shapeData.c;\r\n        var pathV = shapeData.v;\r\n        var pathO = shapeData.o;\r\n        var pathI = shapeData.i;\r\n        var i, len = shapeData._length;\r\n        var lengths = segmentsLength.lengths;\r\n        var totalLength = 0;\r\n        for(i=0;i<len-1;i+=1){\r\n            lengths[i] = getBezierLength(pathV[i],pathV[i+1],pathO[i],pathI[i+1]);\r\n            totalLength += lengths[i].addedLength;\r\n        }\r\n        if(closed){\r\n            lengths[i] = getBezierLength(pathV[i],pathV[0],pathO[i],pathI[0]);\r\n            totalLength += lengths[i].addedLength;\r\n        }\r\n        segmentsLength.totalLength = totalLength;\r\n        return segmentsLength;\r\n    }\r\n\r\n    function BezierData(length){\r\n        this.segmentLength = 0;\r\n        this.points = new Array(length);\r\n    }\r\n\r\n    function PointData(partial,point){\r\n        this.partialLength = partial;\r\n        this.point = point;\r\n    }\r\n\r\n    var buildBezierData = (function(){\r\n\r\n        var storedData = {};\r\n\r\n        return function (keyData){\r\n            var pt1 = keyData.s;\r\n            var pt2 = keyData.e;\r\n            var pt3 = keyData.to;\r\n            var pt4 = keyData.ti;\r\n            var bezierName = (pt1[0]+'_'+pt1[1]+'_'+pt2[0]+'_'+pt2[1]+'_'+pt3[0]+'_'+pt3[1]+'_'+pt4[0]+'_'+pt4[1]).replace(/\\./g, 'p');\r\n            if(storedData[bezierName]){\r\n                keyData.bezierData = storedData[bezierName];\r\n                return;\r\n            }\r\n            var curveSegments = defaultCurveSegments;\r\n            var k, i, len;\r\n            var ptCoord,perc,addedLength = 0;\r\n            var ptDistance;\r\n            var point,lastPoint = null;\r\n            if (pt1.length === 2 && (pt1[0] != pt2[0] || pt1[1] != pt2[1]) && pointOnLine2D(pt1[0],pt1[1],pt2[0],pt2[1],pt1[0]+pt3[0],pt1[1]+pt3[1]) && pointOnLine2D(pt1[0],pt1[1],pt2[0],pt2[1],pt2[0]+pt4[0],pt2[1]+pt4[1])){\r\n                curveSegments = 2;\r\n            }\r\n            var bezierData = new BezierData(curveSegments);\r\n            len = pt3.length;\r\n            for (k = 0; k < curveSegments; k += 1) {\r\n                point = createSizedArray(len);\r\n                perc = k / (curveSegments - 1);\r\n                ptDistance = 0;\r\n                for (i = 0; i < len; i += 1){\r\n                    ptCoord = bm_pow(1-perc,3)*pt1[i]+3*bm_pow(1-perc,2)*perc*(pt1[i] + pt3[i])+3*(1-perc)*bm_pow(perc,2)*(pt2[i] + pt4[i])+bm_pow(perc,3)*pt2[i];\r\n                    point[i] = ptCoord;\r\n                    if(lastPoint !== null){\r\n                        ptDistance += bm_pow(point[i] - lastPoint[i],2);\r\n                    }\r\n                }\r\n                ptDistance = bm_sqrt(ptDistance);\r\n                addedLength += ptDistance;\r\n                bezierData.points[k] = new PointData(ptDistance, point);\r\n                lastPoint = point;\r\n            }\r\n            bezierData.segmentLength = addedLength;\r\n            keyData.bezierData = bezierData;\r\n            storedData[bezierName] = bezierData;\r\n        };\r\n    }());\r\n\r\n    function getDistancePerc(perc,bezierData){\r\n        var percents = bezierData.percents;\r\n        var lengths = bezierData.lengths;\r\n        var len = percents.length;\r\n        var initPos = bm_floor((len-1)*perc);\r\n        var lengthPos = perc*bezierData.addedLength;\r\n        var lPerc = 0;\r\n        if(initPos === len - 1 || initPos === 0 || lengthPos === lengths[initPos]){\r\n            return percents[initPos];\r\n        }else{\r\n            var dir = lengths[initPos] > lengthPos ? -1 : 1;\r\n            var flag = true;\r\n            while(flag){\r\n                if(lengths[initPos] <= lengthPos && lengths[initPos+1] > lengthPos){\r\n                    lPerc = (lengthPos - lengths[initPos]) / (lengths[initPos+1] - lengths[initPos]);\r\n                    flag = false;\r\n                }else{\r\n                    initPos += dir;\r\n                }\r\n                if(initPos < 0 || initPos >= len - 1){\r\n                    //FIX for TypedArrays that don't store floating point values with enough accuracy\r\n                    if(initPos === len - 1) {\r\n                        return percents[initPos];\r\n                    }\r\n                    flag = false;\r\n                }\r\n            }\r\n            return percents[initPos] + (percents[initPos+1] - percents[initPos])*lPerc;\r\n        }\r\n    }\r\n\r\n    function getPointInSegment(pt1, pt2, pt3, pt4, percent, bezierData) {\r\n        var t1 = getDistancePerc(percent,bezierData);\r\n        var u0 = 1;\r\n        var u1 = 1 - t1;\r\n        var ptX = Math.round((u1*u1*u1* pt1[0] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[0] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[0] + t1*t1*t1* pt2[0])* 1000) / 1000;\r\n        var ptY = Math.round((u1*u1*u1* pt1[1] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[1] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[1] + t1*t1*t1* pt2[1])* 1000) / 1000;\r\n        return [ptX, ptY];\r\n    }\r\n\r\n    function getSegmentArray() {\r\n\r\n    }\r\n\r\n    var bezier_segment_points = createTypedArray('float32', 8);\r\n\r\n    function getNewSegment(pt1,pt2,pt3,pt4,startPerc,endPerc, bezierData){\r\n\r\n        startPerc = startPerc < 0 ? 0 : startPerc > 1 ? 1 : startPerc;\r\n        var t0 = getDistancePerc(startPerc,bezierData);\r\n        endPerc = endPerc > 1 ? 1 : endPerc;\r\n        var t1 = getDistancePerc(endPerc,bezierData);\r\n        var i, len = pt1.length;\r\n        var u0 = 1 - t0;\r\n        var u1 = 1 - t1;\r\n        var u0u0u0 = u0*u0*u0;\r\n        var t0u0u0_3 = t0*u0*u0*3; // t0*u0*u0 + u0*t0*u0 + u0*u0*t0\r\n        var t0t0u0_3 = t0*t0*u0*3; // t0*t0*u0 + u0*t0*t0 + t0*u0*t0\r\n        var t0t0t0 = t0*t0*t0;\r\n        //\r\n        var u0u0u1 = u0*u0*u1;\r\n        var t0u0u1_3 = t0*u0*u1 + u0*t0*u1 + u0*u0*t1;\r\n        var t0t0u1_3 = t0*t0*u1 + u0*t0*t1 + t0*u0*t1;\r\n        var t0t0t1 = t0*t0*t1;\r\n        //\r\n        var u0u1u1 = u0*u1*u1;\r\n        var t0u1u1_3 = t0*u1*u1 + u0*t1*u1 + u0*u1*t1;\r\n        var t0t1u1_3 = t0*t1*u1 + u0*t1*t1 + t0*u1*t1;\r\n        var t0t1t1 = t0*t1*t1;\r\n        //\r\n        var u1u1u1 = u1*u1*u1;\r\n        var t1u1u1_3 = t1*u1*u1 + u1*t1*u1 + u1*u1*t1;\r\n        var t1t1u1_3 = t1*t1*u1 + u1*t1*t1 + t1*u1*t1;\r\n        var t1t1t1 = t1*t1*t1;\r\n        //Math.round(num * 100) / 100\r\n        for(i=0;i<len;i+=1){\r\n            bezier_segment_points[i * 4] = Math.round((u0u0u0 * pt1[i] + t0u0u0_3 * pt3[i] + t0t0u0_3 * pt4[i] + t0t0t0 * pt2[i]) * 1000) / 1000;\r\n            bezier_segment_points[i * 4 + 1] = Math.round((u0u0u1 * pt1[i] + t0u0u1_3 * pt3[i] + t0t0u1_3 * pt4[i] + t0t0t1 * pt2[i]) * 1000) / 1000;\r\n            bezier_segment_points[i * 4 + 2] = Math.round((u0u1u1 * pt1[i] + t0u1u1_3 * pt3[i] + t0t1u1_3 * pt4[i] + t0t1t1 * pt2[i]) * 1000) / 1000;\r\n            bezier_segment_points[i * 4 + 3] = Math.round((u1u1u1 * pt1[i] + t1u1u1_3 * pt3[i] + t1t1u1_3 * pt4[i] + t1t1t1 * pt2[i]) * 1000) / 1000;\r\n            // pts.pt1[i] = Math.round((u0u0u0 * pt1[i] + t0u0u0_3 * pt3[i] + t0t0u0_3 * pt4[i] + t0t0t0 * pt2[i]) * 1000) / 1000;\r\n            // pts.pt3[i] = Math.round((u0u0u1 * pt1[i] + t0u0u1_3 * pt3[i] + t0t0u1_3 * pt4[i] + t0t0t1 * pt2[i]) * 1000) / 1000;\r\n            // pts.pt4[i] = Math.round((u0u1u1 * pt1[i] + t0u1u1_3 * pt3[i] + t0t1u1_3 * pt4[i] + t0t1t1 * pt2[i]) * 1000) / 1000;\r\n            // pts.pt2[i] = Math.round((u1u1u1 * pt1[i] + t1u1u1_3 * pt3[i] + t1t1u1_3 * pt4[i] + t1t1t1 * pt2[i]) * 1000) / 1000;\r\n            // pts.pt1[i] =  Math.round((u0*u0*u0* pt1[i] + (t0*u0*u0 + u0*t0*u0 + u0*u0*t0) * pt3[i] + (t0*t0*u0 + u0*t0*t0 + t0*u0*t0)* pt4[i] + t0*t0*t0* pt2[i])* 1000) / 1000;\r\n            // pts.pt3[i] = Math.round((u0*u0*u1*pt1[i] + (t0*u0*u1 + u0*t0*u1 + u0*u0*t1)* pt3[i] + (t0*t0*u1 + u0*t0*t1 + t0*u0*t1)* pt4[i] + t0*t0*t1* pt2[i])* 1000) / 1000;\r\n            // pts.pt4[i] = Math.round((u0*u1*u1* pt1[i] + (t0*u1*u1 + u0*t1*u1 + u0*u1*t1)* pt3[i] + (t0*t1*u1 + u0*t1*t1 + t0*u1*t1)* pt4[i] + t0*t1*t1* pt2[i])* 1000) / 1000;\r\n            // pts.pt2[i] = Math.round((u1*u1*u1* pt1[i] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[i] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[i] + t1*t1*t1* pt2[i])* 1000) / 1000;\r\n        }\r\n\r\n        return bezier_segment_points;\r\n    }\r\n\r\n    return {\r\n        //getEasingCurve : getEasingCurve,\r\n        getSegmentsLength : getSegmentsLength,\r\n        getNewSegment : getNewSegment,\r\n        getPointInSegment : getPointInSegment,\r\n        buildBezierData : buildBezierData,\r\n        pointOnLine2D : pointOnLine2D,\r\n        pointOnLine3D : pointOnLine3D\r\n    };\r\n}\r\n\r\nvar bez = bezFunction();\r\nfunction dataFunctionManager(){\r\n\r\n    //var tCanvasHelper = createTag('canvas').getContext('2d');\r\n\r\n    function completeLayers(layers, comps, fontManager){\r\n        var layerData;\r\n        var animArray, lastFrame;\r\n        var i, len = layers.length;\r\n        var j, jLen, k, kLen;\r\n        for(i=0;i<len;i+=1){\r\n            layerData = layers[i];\r\n            if(!('ks' in layerData) || layerData.completed){\r\n                continue;\r\n            }\r\n            layerData.completed = true;\r\n            if(layerData.tt){\r\n                layers[i-1].td = layerData.tt;\r\n            }\r\n            animArray = [];\r\n            lastFrame = -1;\r\n            if(layerData.hasMask){\r\n                var maskProps = layerData.masksProperties;\r\n                jLen = maskProps.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    if(maskProps[j].pt.k.i){\r\n                        convertPathsToAbsoluteValues(maskProps[j].pt.k);\r\n                    }else{\r\n                        kLen = maskProps[j].pt.k.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            if(maskProps[j].pt.k[k].s){\r\n                                convertPathsToAbsoluteValues(maskProps[j].pt.k[k].s[0]);\r\n                            }\r\n                            if(maskProps[j].pt.k[k].e){\r\n                                convertPathsToAbsoluteValues(maskProps[j].pt.k[k].e[0]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(layerData.ty===0){\r\n                layerData.layers = findCompLayers(layerData.refId, comps);\r\n                completeLayers(layerData.layers,comps, fontManager);\r\n            }else if(layerData.ty === 4){\r\n                completeShapes(layerData.shapes);\r\n            }else if(layerData.ty == 5){\r\n                completeText(layerData, fontManager);\r\n            }\r\n        }\r\n    }\r\n\r\n    function findCompLayers(id,comps){\r\n        var i = 0, len = comps.length;\r\n        while(i<len){\r\n            if(comps[i].id === id){\r\n                if(!comps[i].layers.__used) {\r\n                    comps[i].layers.__used = true;\r\n                    return comps[i].layers;\r\n                }\r\n                return JSON.parse(JSON.stringify(comps[i].layers));\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    function completeShapes(arr){\r\n        var i, len = arr.length;\r\n        var j, jLen;\r\n        var hasPaths = false;\r\n        for(i=len-1;i>=0;i-=1){\r\n            if(arr[i].ty == 'sh'){\r\n                if(arr[i].ks.k.i){\r\n                    convertPathsToAbsoluteValues(arr[i].ks.k);\r\n                }else{\r\n                    jLen = arr[i].ks.k.length;\r\n                    for(j=0;j<jLen;j+=1){\r\n                        if(arr[i].ks.k[j].s){\r\n                            convertPathsToAbsoluteValues(arr[i].ks.k[j].s[0]);\r\n                        }\r\n                        if(arr[i].ks.k[j].e){\r\n                            convertPathsToAbsoluteValues(arr[i].ks.k[j].e[0]);\r\n                        }\r\n                    }\r\n                }\r\n                hasPaths = true;\r\n            }else if(arr[i].ty == 'gr'){\r\n                completeShapes(arr[i].it);\r\n            }\r\n        }\r\n        /*if(hasPaths){\r\n            //mx: distance\r\n            //ss: sensitivity\r\n            //dc: decay\r\n            arr.splice(arr.length-1,0,{\r\n                \"ty\": \"ms\",\r\n                \"mx\":20,\r\n                \"ss\":10,\r\n                 \"dc\":0.001,\r\n                \"maxDist\":200\r\n            });\r\n        }*/\r\n    }\r\n\r\n    function convertPathsToAbsoluteValues(path){\r\n        var i, len = path.i.length;\r\n        for(i=0;i<len;i+=1){\r\n            path.i[i][0] += path.v[i][0];\r\n            path.i[i][1] += path.v[i][1];\r\n            path.o[i][0] += path.v[i][0];\r\n            path.o[i][1] += path.v[i][1];\r\n        }\r\n    }\r\n\r\n    function checkVersion(minimum,animVersionString){\r\n        var animVersion = animVersionString ? animVersionString.split('.') : [100,100,100];\r\n        if(minimum[0]>animVersion[0]){\r\n            return true;\r\n        } else if(animVersion[0] > minimum[0]){\r\n            return false;\r\n        }\r\n        if(minimum[1]>animVersion[1]){\r\n            return true;\r\n        } else if(animVersion[1] > minimum[1]){\r\n            return false;\r\n        }\r\n        if(minimum[2]>animVersion[2]){\r\n            return true;\r\n        } else if(animVersion[2] > minimum[2]){\r\n            return false;\r\n        }\r\n    }\r\n\r\n    var checkText = (function(){\r\n        var minimumVersion = [4,4,14];\r\n\r\n        function updateTextLayer(textLayer){\r\n            var documentData = textLayer.t.d;\r\n            textLayer.t.d = {\r\n                k: [\r\n                    {\r\n                        s:documentData,\r\n                        t:0\r\n                    }\r\n                ]\r\n            };\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var i, len = layers.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(layers[i].ty === 5){\r\n                    updateTextLayer(layers[i]);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    var checkChars = (function() {\r\n        var minimumVersion = [4,7,99];\r\n        return function (animationData){\r\n            if(animationData.chars && !checkVersion(minimumVersion,animationData.v)){\r\n                var i, len = animationData.chars.length, j, jLen, k, kLen;\r\n                var pathData, paths;\r\n                for(i = 0; i < len; i += 1) {\r\n                    if(animationData.chars[i].data && animationData.chars[i].data.shapes) {\r\n                        paths = animationData.chars[i].data.shapes[0].it;\r\n                        jLen = paths.length;\r\n\r\n                        for(j = 0; j < jLen; j += 1) {\r\n                            pathData = paths[j].ks.k;\r\n                            if(!pathData.__converted) {\r\n                                convertPathsToAbsoluteValues(paths[j].ks.k);\r\n                                pathData.__converted = true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    var checkColors = (function(){\r\n        var minimumVersion = [4,1,9];\r\n\r\n        function iterateShapes(shapes){\r\n            var i, len = shapes.length;\r\n            var j, jLen;\r\n            for(i=0;i<len;i+=1){\r\n                if(shapes[i].ty === 'gr'){\r\n                    iterateShapes(shapes[i].it);\r\n                }else if(shapes[i].ty === 'fl' || shapes[i].ty === 'st'){\r\n                    if(shapes[i].c.k && shapes[i].c.k[0].i){\r\n                        jLen = shapes[i].c.k.length;\r\n                        for(j=0;j<jLen;j+=1){\r\n                            if(shapes[i].c.k[j].s){\r\n                                shapes[i].c.k[j].s[0] /= 255;\r\n                                shapes[i].c.k[j].s[1] /= 255;\r\n                                shapes[i].c.k[j].s[2] /= 255;\r\n                                shapes[i].c.k[j].s[3] /= 255;\r\n                            }\r\n                            if(shapes[i].c.k[j].e){\r\n                                shapes[i].c.k[j].e[0] /= 255;\r\n                                shapes[i].c.k[j].e[1] /= 255;\r\n                                shapes[i].c.k[j].e[2] /= 255;\r\n                                shapes[i].c.k[j].e[3] /= 255;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        shapes[i].c.k[0] /= 255;\r\n                        shapes[i].c.k[1] /= 255;\r\n                        shapes[i].c.k[2] /= 255;\r\n                        shapes[i].c.k[3] /= 255;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var i, len = layers.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(layers[i].ty === 4){\r\n                    iterateShapes(layers[i].shapes);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    var checkShapes = (function(){\r\n        var minimumVersion = [4,4,18];\r\n\r\n\r\n\r\n        function completeShapes(arr){\r\n            var i, len = arr.length;\r\n            var j, jLen;\r\n            var hasPaths = false;\r\n            for(i=len-1;i>=0;i-=1){\r\n                if(arr[i].ty == 'sh'){\r\n                    if(arr[i].ks.k.i){\r\n                        arr[i].ks.k.c = arr[i].closed;\r\n                    }else{\r\n                        jLen = arr[i].ks.k.length;\r\n                        for(j=0;j<jLen;j+=1){\r\n                            if(arr[i].ks.k[j].s){\r\n                                arr[i].ks.k[j].s[0].c = arr[i].closed;\r\n                            }\r\n                            if(arr[i].ks.k[j].e){\r\n                                arr[i].ks.k[j].e[0].c = arr[i].closed;\r\n                            }\r\n                        }\r\n                    }\r\n                    hasPaths = true;\r\n                }else if(arr[i].ty == 'gr'){\r\n                    completeShapes(arr[i].it);\r\n                }\r\n            }\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var layerData;\r\n            var i, len = layers.length;\r\n            var j, jLen, k, kLen;\r\n            for(i=0;i<len;i+=1){\r\n                layerData = layers[i];\r\n                if(layerData.hasMask){\r\n                    var maskProps = layerData.masksProperties;\r\n                    jLen = maskProps.length;\r\n                    for(j=0;j<jLen;j+=1){\r\n                        if(maskProps[j].pt.k.i){\r\n                            maskProps[j].pt.k.c = maskProps[j].cl;\r\n                        }else{\r\n                            kLen = maskProps[j].pt.k.length;\r\n                            for(k=0;k<kLen;k+=1){\r\n                                if(maskProps[j].pt.k[k].s){\r\n                                    maskProps[j].pt.k[k].s[0].c = maskProps[j].cl;\r\n                                }\r\n                                if(maskProps[j].pt.k[k].e){\r\n                                    maskProps[j].pt.k[k].e[0].c = maskProps[j].cl;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if(layerData.ty === 4){\r\n                    completeShapes(layerData.shapes);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    /*function blitPaths(path){\r\n        var i, len = path.i.length;\r\n        for(i=0;i<len;i+=1){\r\n            path.i[i][0] /= blitter;\r\n            path.i[i][1] /= blitter;\r\n            path.o[i][0] /= blitter;\r\n            path.o[i][1] /= blitter;\r\n            path.v[i][0] /= blitter;\r\n            path.v[i][1] /= blitter;\r\n        }\r\n    }\r\n\r\n    function blitShapes(arr){\r\n        var i, len = arr.length;\r\n        var j, jLen;\r\n        var hasPaths = false;\r\n        for(i=len-1;i>=0;i-=1){\r\n            if(arr[i].ty == 'sh'){\r\n                if(arr[i].ks.k.i){\r\n                    blitPaths(arr[i].ks.k);\r\n                }else{\r\n                    jLen = arr[i].ks.k.length;\r\n                    for(j=0;j<jLen;j+=1){\r\n                        if(arr[i].ks.k[j].s){\r\n                            blitPaths(arr[i].ks.k[j].s[0]);\r\n                        }\r\n                        if(arr[i].ks.k[j].e){\r\n                            blitPaths(arr[i].ks.k[j].e[0]);\r\n                        }\r\n                    }\r\n                }\r\n                hasPaths = true;\r\n            }else if(arr[i].ty == 'gr'){\r\n                blitShapes(arr[i].it);\r\n            }else if(arr[i].ty == 'rc'){\r\n                blitProperty(arr[i].p);\r\n                blitProperty(arr[i].s);\r\n            }else if(arr[i].ty == 'st'){\r\n                blitProperty(arr[i].w);\r\n            }else if(arr[i].ty == 'tr'){\r\n                blitProperty(arr[i].p);\r\n                blitProperty(arr[i].sk);\r\n                blitProperty(arr[i].a);\r\n            }else if(arr[i].ty == 'el'){\r\n                blitProperty(arr[i].p);\r\n                blitProperty(arr[i].s);\r\n            }else if(arr[i].ty == 'rd'){\r\n                blitProperty(arr[i].r);\r\n            }else{\r\n\r\n                //console.log(arr[i].ty );\r\n            }\r\n        }\r\n    }\r\n\r\n    function blitText(data, fontManager){\r\n\r\n    }\r\n\r\n    function blitValue(val){\r\n        if(typeof(val) === 'number'){\r\n            val /= blitter;\r\n        } else {\r\n            var i = val.length-1;\r\n            while(i>=0){\r\n                val[i] /= blitter;\r\n                i-=1;\r\n            }\r\n        }\r\n        return val;\r\n    }\r\n\r\n    function blitProperty(data){\r\n        if(!data.k.length){\r\n            data.k = blitValue(data.k);\r\n        }else if(typeof(data.k[0]) === 'number'){\r\n            data.k = blitValue(data.k);\r\n        } else {\r\n            var i, len = data.k.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(data.k[i].s){\r\n                    //console.log('pre S: ', data.k[i].s);\r\n                    data.k[i].s = blitValue(data.k[i].s);\r\n                    //console.log('post S: ', data.k[i].s);\r\n                }\r\n                if(data.k[i].e){\r\n                    //console.log('pre E: ', data.k[i].e);\r\n                    data.k[i].e = blitValue(data.k[i].e);\r\n                    //console.log('post E: ', data.k[i].e);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function blitLayers(layers,comps, fontManager){\r\n        var layerData;\r\n        var animArray, lastFrame;\r\n        var i, len = layers.length;\r\n        var j, jLen, k, kLen;\r\n        for(i=0;i<len;i+=1){\r\n            layerData = layers[i];\r\n            if(!('ks' in layerData)){\r\n                continue;\r\n            }\r\n            blitProperty(layerData.ks.a);\r\n            blitProperty(layerData.ks.p);\r\n            layerData.completed = true;\r\n            if(layerData.tt){\r\n                layers[i-1].td = layerData.tt;\r\n            }\r\n            animArray = [];\r\n            lastFrame = -1;\r\n            if(layerData.hasMask){\r\n                var maskProps = layerData.masksProperties;\r\n                jLen = maskProps.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    if(maskProps[j].pt.k.i){\r\n                        blitPaths(maskProps[j].pt.k);\r\n                    }else{\r\n                        kLen = maskProps[j].pt.k.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            if(maskProps[j].pt.k[k].s){\r\n                                blitPaths(maskProps[j].pt.k[k].s[0]);\r\n                            }\r\n                            if(maskProps[j].pt.k[k].e){\r\n                                blitPaths(maskProps[j].pt.k[k].e[0]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(layerData.ty===0){\r\n                layerData.w = Math.round(layerData.w/blitter);\r\n                layerData.h = Math.round(layerData.h/blitter);\r\n                blitLayers(layerData.layers,comps, fontManager);\r\n            }else if(layerData.ty === 4){\r\n                blitShapes(layerData.shapes);\r\n            }else if(layerData.ty == 5){\r\n                blitText(layerData, fontManager);\r\n            }else if(layerData.ty == 1){\r\n                layerData.sh /= blitter;\r\n                layerData.sw /= blitter;\r\n            } else {\r\n            }\r\n        }\r\n    }\r\n\r\n    function blitAnimation(animationData,comps, fontManager){\r\n        blitLayers(animationData.layers,comps, fontManager);\r\n    }*/\r\n\r\n    function completeData(animationData, fontManager){\r\n        if(animationData.__complete){\r\n            return;\r\n        }\r\n        checkColors(animationData);\r\n        checkText(animationData);\r\n        checkChars(animationData);\r\n        checkShapes(animationData);\r\n        completeLayers(animationData.layers, animationData.assets, fontManager);\r\n        animationData.__complete = true;\r\n        //blitAnimation(animationData, animationData.assets, fontManager);\r\n    }\r\n\r\n    function completeText(data, fontManager){\r\n        if(data.t.a.length === 0 && !('m' in data.t.p)){\r\n            data.singleShape = true;\r\n        }\r\n    }\r\n\r\n    var moduleOb = {};\r\n    moduleOb.completeData = completeData;\r\n\r\n    return moduleOb;\r\n}\r\n\r\nvar dataManager = dataFunctionManager();\r\nvar FontManager = (function(){\r\n\r\n    var maxWaitingTime = 5000;\r\n    var emptyChar = {\r\n        w: 0,\r\n        size:0,\r\n        shapes:[]\r\n    };\r\n    var combinedCharacters = [];\r\n    //Hindi characters\r\n    combinedCharacters = combinedCharacters.concat([2304, 2305, 2306, 2307, 2362, 2363, 2364, 2364, 2366\r\n    , 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379\r\n    , 2380, 2381, 2382, 2383, 2387, 2388, 2389, 2390, 2391, 2402, 2403]);\r\n\r\n    function setUpNode(font, family){\r\n        var parentNode = createTag('span');\r\n        parentNode.style.fontFamily    = family;\r\n        var node = createTag('span');\r\n        // Characters that vary significantly among different fonts\r\n        node.innerHTML = 'giItT1WQy@!-/#';\r\n        // Visible - so we can measure it - but not on the screen\r\n        parentNode.style.position      = 'absolute';\r\n        parentNode.style.left          = '-10000px';\r\n        parentNode.style.top           = '-10000px';\r\n        // Large font size makes even subtle changes obvious\r\n        parentNode.style.fontSize      = '300px';\r\n        // Reset any font properties\r\n        parentNode.style.fontVariant   = 'normal';\r\n        parentNode.style.fontStyle     = 'normal';\r\n        parentNode.style.fontWeight    = 'normal';\r\n        parentNode.style.letterSpacing = '0';\r\n        parentNode.appendChild(node);\r\n        document.body.appendChild(parentNode);\r\n\r\n        // Remember width with no applied web font\r\n        var width = node.offsetWidth;\r\n        node.style.fontFamily = font + ', '+family;\r\n        return {node:node, w:width, parent:parentNode};\r\n    }\r\n\r\n    function checkLoadedFonts() {\r\n        var i, len = this.fonts.length;\r\n        var node, w;\r\n        var loadedCount = len;\r\n        for(i=0;i<len; i+= 1){\r\n            if(this.fonts[i].loaded){\r\n                loadedCount -= 1;\r\n                continue;\r\n            }\r\n            if(this.fonts[i].fOrigin === 't' || this.fonts[i].origin === 2){\r\n                if(window.Typekit && window.Typekit.load && this.typekitLoaded === 0){\r\n                    this.typekitLoaded = 1;\r\n                    try{window.Typekit.load({\r\n                        async: true,\r\n                        active: function() {\r\n                            this.typekitLoaded = 2;\r\n                        }.bind(this)\r\n                    });}catch(e){}\r\n                }\r\n                if(this.typekitLoaded === 2) {\r\n                    this.fonts[i].loaded = true;\r\n                }\r\n            } else if(this.fonts[i].fOrigin === 'n' || this.fonts[i].origin === 0){\r\n                this.fonts[i].loaded = true;\r\n            } else{\r\n                node = this.fonts[i].monoCase.node;\r\n                w = this.fonts[i].monoCase.w;\r\n                if(node.offsetWidth !== w){\r\n                    loadedCount -= 1;\r\n                    this.fonts[i].loaded = true;\r\n                }else{\r\n                    node = this.fonts[i].sansCase.node;\r\n                    w = this.fonts[i].sansCase.w;\r\n                    if(node.offsetWidth !== w){\r\n                        loadedCount -= 1;\r\n                        this.fonts[i].loaded = true;\r\n                    }\r\n                }\r\n                if(this.fonts[i].loaded){\r\n                    this.fonts[i].sansCase.parent.parentNode.removeChild(this.fonts[i].sansCase.parent);\r\n                    this.fonts[i].monoCase.parent.parentNode.removeChild(this.fonts[i].monoCase.parent);\r\n                }\r\n            }\r\n        }\r\n\r\n        if(loadedCount !== 0 && Date.now() - this.initTime < maxWaitingTime){\r\n            setTimeout(checkLoadedFonts.bind(this),20);\r\n        }else{\r\n            setTimeout(function(){this.loaded = true;}.bind(this),0);\r\n\r\n        }\r\n    }\r\n\r\n    function createHelper(def, fontData){\r\n        var tHelper = createNS('text');\r\n        tHelper.style.fontSize = '100px';\r\n        tHelper.style.fontFamily = fontData.fFamily;\r\n        tHelper.textContent = '1';\r\n        if(fontData.fClass){\r\n            tHelper.style.fontFamily = 'inherit';\r\n            tHelper.className = fontData.fClass;\r\n        } else {\r\n            tHelper.style.fontFamily = fontData.fFamily;\r\n        }\r\n        def.appendChild(tHelper);\r\n        var tCanvasHelper = createTag('canvas').getContext('2d');\r\n        tCanvasHelper.font = '100px '+ fontData.fFamily;\r\n        return tCanvasHelper;\r\n    }\r\n\r\n    function addFonts(fontData, defs){\r\n        if(!fontData){\r\n            this.loaded = true;\r\n            return;\r\n        }\r\n        if(this.chars){\r\n            this.loaded = true;\r\n            this.fonts = fontData.list;\r\n            return;\r\n        }\r\n\r\n        var fontArr = fontData.list;\r\n        var i, len = fontArr.length;\r\n        for(i=0; i<len; i+= 1){\r\n            fontArr[i].loaded = false;\r\n            fontArr[i].monoCase = setUpNode(fontArr[i].fFamily,'monospace');\r\n            fontArr[i].sansCase = setUpNode(fontArr[i].fFamily,'sans-serif');\r\n            if(!fontArr[i].fPath) {\r\n                fontArr[i].loaded = true;\r\n            }else if(fontArr[i].fOrigin === 'p' || fontArr[i].origin === 3){\r\n                var s = createTag('style');\r\n                s.type = \"text/css\";\r\n                s.innerHTML = \"@font-face {\" + \"font-family: \"+fontArr[i].fFamily+\"; font-style: normal; src: url('\"+fontArr[i].fPath+\"');}\";\r\n                defs.appendChild(s);\r\n            } else if(fontArr[i].fOrigin === 'g' || fontArr[i].origin === 1){\r\n                //<link href='https://fonts.googleapis.com/css?family=Montserrat' rel='stylesheet' type='text/css'>\r\n                var l = createTag('link');\r\n                l.type = \"text/css\";\r\n                l.rel = \"stylesheet\";\r\n                l.href = fontArr[i].fPath;\r\n                defs.appendChild(l);\r\n            } else if(fontArr[i].fOrigin === 't' || fontArr[i].origin === 2){\r\n                //<link href='https://fonts.googleapis.com/css?family=Montserrat' rel='stylesheet' type='text/css'>\r\n                var sc = createTag('script');\r\n                sc.setAttribute('src',fontArr[i].fPath);\r\n                defs.appendChild(sc);\r\n            }\r\n            fontArr[i].helper = createHelper(defs,fontArr[i]);\r\n            this.fonts.push(fontArr[i]);\r\n        }\r\n        checkLoadedFonts.bind(this)();\r\n    }\r\n\r\n    function addChars(chars){\r\n        if(!chars){\r\n            return;\r\n        }\r\n        if(!this.chars){\r\n            this.chars = [];\r\n        }\r\n        var i, len = chars.length;\r\n        var j, jLen = this.chars.length, found;\r\n        for(i=0;i<len;i+=1){\r\n            j = 0;\r\n            found = false;\r\n            while(j<jLen){\r\n                if(this.chars[j].style === chars[i].style && this.chars[j].fFamily === chars[i].fFamily && this.chars[j].ch === chars[i].ch){\r\n                    found = true;\r\n                }\r\n                j += 1;\r\n            }\r\n            if(!found){\r\n                this.chars.push(chars[i]);\r\n                jLen += 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    function getCharData(char, style, font){\r\n        var i = 0, len = this.chars.length;\r\n        while( i < len) {\r\n            if(this.chars[i].ch === char && this.chars[i].style === style && this.chars[i].fFamily === font){\r\n                return this.chars[i];\r\n            }\r\n            i+= 1;\r\n        }\r\n        if(console && console.warn) {\r\n            console.warn('Missing character from exported characters list: ', char, style, font);\r\n        }\r\n        return emptyChar;\r\n    }\r\n\r\n    function measureText(char, fontName, size){\r\n        var fontData = this.getFontByName(fontName);\r\n        var tHelper = fontData.helper;\r\n        //tHelper.textContent = char;\r\n        return tHelper.measureText(char).width*size/100;\r\n        //return tHelper.getComputedTextLength()*size/100;\r\n    }\r\n\r\n    function getFontByName(name){\r\n        var i = 0, len = this.fonts.length;\r\n        while(i<len){\r\n            if(this.fonts[i].fName === name) {\r\n                return this.fonts[i];\r\n            }\r\n            i += 1;\r\n        }\r\n        return 'sans-serif';\r\n    }\r\n\r\n    function getCombinedCharacterCodes() {\r\n        return combinedCharacters;\r\n    }\r\n\r\n    var Font = function(){\r\n        this.fonts = [];\r\n        this.chars = null;\r\n        this.typekitLoaded = 0;\r\n        this.loaded = false;\r\n        this.initTime = Date.now();\r\n    };\r\n    //TODO: for now I'm adding these methods to the Class and not the prototype. Think of a better way to implement it. \r\n    Font.getCombinedCharacterCodes = getCombinedCharacterCodes;\r\n\r\n    Font.prototype.addChars = addChars;\r\n    Font.prototype.addFonts = addFonts;\r\n    Font.prototype.getCharData = getCharData;\r\n    Font.prototype.getFontByName = getFontByName;\r\n    Font.prototype.measureText = measureText;\r\n\r\n    return Font;\r\n\r\n}());\r\nvar PropertyFactory = (function(){\r\n\r\n    var initFrame = initialDefaultFrame;\r\n\r\n    function interpolateValue(frameNum, previousValue, caching){\r\n        var offsetTime = this.offsetTime;\r\n        var newValue;\r\n        if(this.propType === 'multidimensional') {\r\n            newValue = createTypedArray('float32', previousValue.length);\r\n        }\r\n        var iterationIndex = caching.lastIndex;\r\n        var i = iterationIndex;\r\n        var len = this.keyframes.length- 1,flag = true;\r\n        var keyData, nextKeyData;\r\n\r\n        while(flag){\r\n            keyData = this.keyframes[i];\r\n            nextKeyData = this.keyframes[i+1];\r\n            if(i == len-1 && frameNum >= nextKeyData.t - offsetTime){\r\n                if(keyData.h){\r\n                    keyData = nextKeyData;\r\n                }\r\n                iterationIndex = 0;\r\n                break;\r\n            }\r\n            if((nextKeyData.t - offsetTime) > frameNum){\r\n                iterationIndex = i;\r\n                break;\r\n            }\r\n            if(i < len - 1){\r\n                i += 1;\r\n            }else{\r\n                iterationIndex = 0;\r\n                flag = false;\r\n            }\r\n        }\r\n\r\n        var k, kLen,perc,jLen, j, fnc;\r\n        if(keyData.to){\r\n\r\n            if(!keyData.bezierData){\r\n                bez.buildBezierData(keyData);\r\n            }\r\n            var bezierData = keyData.bezierData;\r\n            if(frameNum >= nextKeyData.t-offsetTime || frameNum < keyData.t-offsetTime){\r\n                var ind = frameNum >= nextKeyData.t-offsetTime ? bezierData.points.length - 1 : 0;\r\n                kLen = bezierData.points[ind].point.length;\r\n                for(k = 0; k < kLen; k += 1){\r\n                    newValue[k] = bezierData.points[ind].point[k];\r\n                }\r\n                caching._lastBezierData = null;\r\n            }else{\r\n                if(keyData.__fnct){\r\n                    fnc = keyData.__fnct;\r\n                }else{\r\n                    fnc = BezierFactory.getBezierEasing(keyData.o.x,keyData.o.y,keyData.i.x,keyData.i.y,keyData.n).get;\r\n                    keyData.__fnct = fnc;\r\n                }\r\n                perc = fnc((frameNum-(keyData.t-offsetTime))/((nextKeyData.t-offsetTime)-(keyData.t-offsetTime)));\r\n                var distanceInLine = bezierData.segmentLength*perc;\r\n\r\n                var segmentPerc;\r\n                var addedLength =  (caching.lastFrame < frameNum && caching._lastBezierData === bezierData) ? caching._lastAddedLength : 0;\r\n                j =  (caching.lastFrame < frameNum && caching._lastBezierData === bezierData) ? caching._lastPoint : 0;\r\n                flag = true;\r\n                jLen = bezierData.points.length;\r\n                while(flag){\r\n                    addedLength +=bezierData.points[j].partialLength;\r\n                    if(distanceInLine === 0 || perc === 0 || j == bezierData.points.length - 1){\r\n                        kLen = bezierData.points[j].point.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            newValue[k] = bezierData.points[j].point[k];\r\n                        }\r\n                        break;\r\n                    }else if(distanceInLine >= addedLength && distanceInLine < addedLength + bezierData.points[j+1].partialLength){\r\n                        segmentPerc = (distanceInLine-addedLength)/(bezierData.points[j+1].partialLength);\r\n                        kLen = bezierData.points[j].point.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            newValue[k] = bezierData.points[j].point[k] + (bezierData.points[j+1].point[k] - bezierData.points[j].point[k])*segmentPerc;\r\n                        }\r\n                        break;\r\n                    }\r\n                    if(j < jLen - 1){\r\n                        j += 1;\r\n                    }else{\r\n                        flag = false;\r\n                    }\r\n                }\r\n                caching._lastPoint = j;\r\n                caching._lastAddedLength = addedLength - bezierData.points[j].partialLength;\r\n                caching._lastBezierData = bezierData;\r\n            }\r\n        }else{\r\n            var outX,outY,inX,inY, keyValue;\r\n            len = keyData.s.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(keyData.h !== 1){\r\n                    if(frameNum >= nextKeyData.t-offsetTime){\r\n                        perc = 1;\r\n                    }else if(frameNum < keyData.t-offsetTime){\r\n                        perc = 0;\r\n                    }else{\r\n                        if(keyData.o.x.constructor === Array){\r\n                            if(!keyData.__fnct){\r\n                                keyData.__fnct = [];\r\n                            }\r\n                            if (!keyData.__fnct[i]) {\r\n                                outX = keyData.o.x[i] || keyData.o.x[0];\r\n                                outY = keyData.o.y[i] || keyData.o.y[0];\r\n                                inX = keyData.i.x[i] || keyData.i.x[0];\r\n                                inY = keyData.i.y[i] || keyData.i.y[0];\r\n                                fnc = BezierFactory.getBezierEasing(outX,outY,inX,inY).get;\r\n                                keyData.__fnct[i] = fnc;\r\n                            } else {\r\n                                fnc = keyData.__fnct[i];\r\n                            }\r\n                        } else {\r\n                            if (!keyData.__fnct) {\r\n                                outX = keyData.o.x;\r\n                                outY = keyData.o.y;\r\n                                inX = keyData.i.x;\r\n                                inY = keyData.i.y;\r\n                                fnc = BezierFactory.getBezierEasing(outX,outY,inX,inY).get;\r\n                                keyData.__fnct = fnc;\r\n                            } else{\r\n                                fnc = keyData.__fnct;\r\n                            }\r\n                        }\r\n                        perc = fnc((frameNum-(keyData.t-offsetTime))/((nextKeyData.t-offsetTime)-(keyData.t-offsetTime)));\r\n                    }\r\n                }\r\n                if(this.sh && keyData.h !== 1){\r\n                    var initP = keyData.s[i];\r\n                    var endP = keyData.e[i];\r\n                    if(initP-endP < -180){\r\n                        initP += 360;\r\n                    } else if(initP-endP > 180){\r\n                        initP -= 360;\r\n                    }\r\n                    keyValue = initP+(endP-initP)*perc;\r\n                } else {\r\n                    keyValue = keyData.h === 1 ? keyData.s[i] : keyData.s[i]+(keyData.e[i]-keyData.s[i])*perc;\r\n                }\r\n                if(len === 1){\r\n                    newValue = keyValue;\r\n                }else{\r\n                    newValue[i] = keyValue;\r\n                }\r\n            }\r\n        }\r\n        caching.lastIndex = iterationIndex;\r\n        return newValue;\r\n    }\r\n\r\n    function calculateMultidimensionalValueAtCurrentTime(renderResult) {\r\n        var i = 0;\r\n        while(i<this.v.length){\r\n            this.pv[i] = renderResult[i];\r\n            this.v[i] = this.mult ? this.pv[i] * this.mult : this.pv[i];\r\n            if(this.lastPValue[i] !== this.pv[i]) {\r\n                this._mdf = true;\r\n                this.lastPValue[i] = this.pv[i];\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    function calculateUnidimenstionalValueAtCurrentTime(renderResult) {\r\n        this.pv = renderResult;\r\n        this.v = this.mult ? this.pv*this.mult : this.pv;\r\n        if(this.lastPValue != this.pv){\r\n            this._mdf = true;\r\n            this.lastPValue = this.pv;\r\n        }\r\n    }\r\n\r\n    function getValueAtCurrentTime(){\r\n        if(this.elem.globalData.frameId === this.frameId){\r\n            return;\r\n        }\r\n        this._mdf = false;\r\n        var frameNum = this.comp.renderedFrame - this.offsetTime;\r\n        var initTime = this.keyframes[0].t - this.offsetTime;\r\n        var endTime = this.keyframes[this.keyframes.length- 1].t-this.offsetTime;\r\n        if(!(frameNum === this._caching.lastFrame || (this._caching.lastFrame !== initFrame && ((this._caching.lastFrame >= endTime && frameNum >= endTime) || (this._caching.lastFrame < initTime && frameNum < initTime))))){\r\n            this._caching.lastIndex = this._caching.lastFrame < frameNum ? this._caching.lastIndex : 0;\r\n            var renderResult = this.interpolateValue(frameNum, this.pv, this._caching);\r\n            this.calculateValueAtCurrentTime(renderResult);\r\n        }\r\n        this._caching.lastFrame = frameNum;\r\n        this.frameId = this.elem.globalData.frameId;\r\n    }\r\n\r\n    function getNoValue(){\r\n        this._mdf = false;\r\n    }\r\n\r\n    function ValueProperty(elem,data, mult){\r\n        this.propType = 'unidimensional';\r\n        this.mult = mult;\r\n        this.v = mult ? data.k * mult : data.k;\r\n        this.pv = data.k;\r\n        this._mdf = false;\r\n        this.comp = elem.comp;\r\n        this.k = false;\r\n        this.kf = false;\r\n        this.vel = 0;\r\n        this.getValue = getNoValue;\r\n    }\r\n\r\n    function MultiDimensionalProperty(elem, data, mult) {\r\n        this.propType = 'multidimensional';\r\n        this.mult = mult;\r\n        this.data = data;\r\n        this._mdf = false;\r\n        this.comp = elem.comp;\r\n        this.k = false;\r\n        this.kf = false;\r\n        this.frameId = -1;\r\n        var i, len = data.k.length;\r\n        this.v = createTypedArray('float32', len);\r\n        this.pv = createTypedArray('float32', len);\r\n        this.lastValue = createTypedArray('float32', len);\r\n        var arr = createTypedArray('float32', len);\r\n        this.vel = createTypedArray('float32', len);\r\n        for (i = 0; i < len; i += 1) {\r\n            this.v[i] = mult ? data.k[i] * mult : data.k[i];\r\n            this.pv[i] = data.k[i];\r\n        }\r\n        this.getValue = getNoValue;\r\n    }\r\n\r\n    function KeyframedValueProperty(elem, data, mult) {\r\n        this.propType = 'unidimensional';\r\n        this.keyframes = data.k;\r\n        this.offsetTime = elem.data.st;\r\n        this.lastValue = initFrame;\r\n        this.lastPValue = initFrame;\r\n        this.frameId = -1;\r\n        this._caching = {lastFrame: initFrame, lastIndex: 0, value: 0};\r\n        this.k = true;\r\n        this.kf = true;\r\n        this.data = data;\r\n        this.mult = mult;\r\n        this.elem = elem;\r\n        this._isFirstFrame = false;\r\n        this.comp = elem.comp;\r\n        this.v = mult ? data.k[0].s[0] * mult : data.k[0].s[0];\r\n        this.pv = data.k[0].s[0];\r\n        this.getValue = getValueAtCurrentTime;\r\n        this.calculateValueAtCurrentTime = calculateUnidimenstionalValueAtCurrentTime;\r\n        this.interpolateValue = interpolateValue;\r\n    }\r\n\r\n    function KeyframedMultidimensionalProperty(elem, data, mult){\r\n        this.propType = 'multidimensional';\r\n        var i, len = data.k.length;\r\n        var s, e,to,ti;\r\n        for (i = 0; i < len - 1; i += 1) {\r\n            if (data.k[i].to && data.k[i].s && data.k[i].e) {\r\n                s = data.k[i].s;\r\n                e = data.k[i].e;\r\n                to = data.k[i].to;\r\n                ti = data.k[i].ti;\r\n                if((s.length === 2 && !(s[0] === e[0] && s[1] === e[1]) && bez.pointOnLine2D(s[0],s[1],e[0],e[1],s[0] + to[0],s[1] + to[1]) && bez.pointOnLine2D(s[0],s[1],e[0],e[1],e[0] + ti[0],e[1] + ti[1])) || (s.length === 3 && !(s[0] === e[0] && s[1] === e[1] && s[2] === e[2]) && bez.pointOnLine3D(s[0],s[1],s[2],e[0],e[1],e[2],s[0] + to[0],s[1] + to[1],s[2] + to[2]) && bez.pointOnLine3D(s[0],s[1],s[2],e[0],e[1],e[2],e[0] + ti[0],e[1] + ti[1],e[2] + ti[2]))){\r\n                    data.k[i].to = null;\r\n                    data.k[i].ti = null;\r\n                }\r\n                if(s[0] === e[0] && s[1] === e[1] && to[0] === 0 && to[1] === 0 && ti[0] === 0 && ti[1] === 0) {\r\n                    if(s.length === 2 || (s[2] === e[2] && to[2] === 0 && ti[2] === 0)) {\r\n                        data.k[i].to = null;\r\n                        data.k[i].ti = null;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.keyframes = data.k;\r\n        this.offsetTime = elem.data.st;\r\n        this.k = true;\r\n        this.kf = true;\r\n        this._isFirstFrame = true;\r\n        this.mult = mult;\r\n        this.elem = elem;\r\n        this.comp = elem.comp;\r\n        this.getValue = getValueAtCurrentTime;\r\n        this.calculateValueAtCurrentTime = calculateMultidimensionalValueAtCurrentTime;\r\n        this.interpolateValue = interpolateValue;\r\n        this.frameId = -1;\r\n        var arrLen = data.k[0].s.length;\r\n        this.v = createTypedArray('float32', arrLen);\r\n        this.pv = createTypedArray('float32', arrLen);\r\n        this.lastValue = createTypedArray('float32', arrLen);\r\n        this.lastPValue = createTypedArray('float32', arrLen);\r\n        this._caching={lastFrame:initFrame,lastIndex:0,value:createTypedArray('float32', arrLen)};\r\n    }\r\n\r\n    function getProp(elem,data,type, mult, arr) {\r\n        var p;\r\n        if(data.a === 0){\r\n            if(type === 0) {\r\n                p = new ValueProperty(elem,data,mult);\r\n            } else {\r\n                p = new MultiDimensionalProperty(elem,data, mult);\r\n            }\r\n        } else if(data.a === 1){\r\n            if(type === 0) {\r\n                p = new KeyframedValueProperty(elem,data,mult);\r\n            } else {\r\n                p = new KeyframedMultidimensionalProperty(elem,data, mult);\r\n            }\r\n        } else if(!data.k.length){\r\n            p = new ValueProperty(elem,data, mult);\r\n        }else if(typeof(data.k[0]) === 'number'){\r\n            p = new MultiDimensionalProperty(elem,data, mult);\r\n        }else{\r\n            switch(type){\r\n                case 0:\r\n                    p = new KeyframedValueProperty(elem,data,mult);\r\n                    break;\r\n                case 1:\r\n                    p = new KeyframedMultidimensionalProperty(elem,data,mult);\r\n                    break;\r\n            }\r\n        }\r\n        if(p.k){\r\n            arr.push(p);\r\n        }\r\n        return p;\r\n    }\r\n\r\n    var ob = {\r\n        getProp: getProp\r\n    };\r\n    return ob;\r\n}());\r\nvar TransformPropertyFactory = (function() {\r\n\r\n    function applyToMatrix(mat) {\r\n        var i, len = this.dynamicProperties.length;\r\n        for(i = 0; i < len; i += 1) {\r\n            this.dynamicProperties[i].getValue();\r\n            if (this.dynamicProperties[i]._mdf) {\r\n                this._mdf = true;\r\n            }\r\n        }\r\n        if (this.a) {\r\n            mat.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n        }\r\n        if (this.s) {\r\n            mat.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n        }\r\n        if (this.r) {\r\n            mat.rotate(-this.r.v);\r\n        } else {\r\n            mat.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n        }\r\n        if (this.data.p.s) {\r\n            if (this.data.p.z) {\r\n                mat.translate(this.px.v, this.py.v, -this.pz.v);\r\n            } else {\r\n                mat.translate(this.px.v, this.py.v, 0);\r\n            }\r\n        } else {\r\n            mat.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);\r\n        }\r\n    }\r\n    function processKeys(forceRender){\r\n        if (this.elem.globalData.frameId === this.frameId) {\r\n            return;\r\n        }\r\n\r\n        this._mdf = false;\r\n        var i, len = this.dynamicProperties.length;\r\n\r\n        for(i = 0; i < len; i += 1) {\r\n            this.dynamicProperties[i].getValue();\r\n            if (this.dynamicProperties[i]._mdf) {\r\n                this._mdf = true;\r\n            }\r\n        }\r\n\r\n        if (this._mdf || forceRender) {\r\n            this.v.reset();\r\n            if (this.a) {\r\n                this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n            }\r\n            if(this.s) {\r\n                this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n            }\r\n            if (this.sk) {\r\n                this.v.skewFromAxis(-this.sk.v, this.sa.v);\r\n            }\r\n            if (this.r) {\r\n                this.v.rotate(-this.r.v);\r\n            } else {\r\n                this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n            }\r\n            if (this.autoOriented && this.p.keyframes && this.p.getValueAtTime) {\r\n                var v1,v2;\r\n                if (this.p._caching.lastFrame+this.p.offsetTime <= this.p.keyframes[0].t) {\r\n                    v1 = this.p.getValueAtTime((this.p.keyframes[0].t + 0.01) / this.elem.globalData.frameRate,0);\r\n                    v2 = this.p.getValueAtTime(this.p.keyframes[0].t / this.elem.globalData.frameRate, 0);\r\n                } else if(this.p._caching.lastFrame+this.p.offsetTime >= this.p.keyframes[this.p.keyframes.length - 1].t) {\r\n                    v1 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t / this.elem.globalData.frameRate), 0);\r\n                    v2 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t - 0.01) / this.elem.globalData.frameRate, 0);\r\n                } else {\r\n                    v1 = this.p.pv;\r\n                    v2 = this.p.getValueAtTime((this.p._caching.lastFrame+this.p.offsetTime - 0.01) / this.elem.globalData.frameRate, this.p.offsetTime);\r\n                }\r\n                this.v.rotate(-Math.atan2(v1[1] - v2[1], v1[0] - v2[0]));\r\n            }\r\n            if(this.data.p.s){\r\n                if(this.data.p.z) {\r\n                    this.v.translate(this.px.v, this.py.v, -this.pz.v);\r\n                } else {\r\n                    this.v.translate(this.px.v, this.py.v, 0);\r\n                }\r\n            }else{\r\n                this.v.translate(this.p.v[0],this.p.v[1],-this.p.v[2]);\r\n            }\r\n        }\r\n        this.frameId = this.elem.globalData.frameId;\r\n    }\r\n\r\n    function setInverted(){\r\n        this.inverted = true;\r\n        this.iv = new Matrix();\r\n        if(!this.k){\r\n            if(this.data.p.s){\r\n                this.iv.translate(this.px.v,this.py.v,-this.pz.v);\r\n            }else{\r\n                this.iv.translate(this.p.v[0],this.p.v[1],-this.p.v[2]);\r\n            }\r\n            if(this.r){\r\n                this.iv.rotate(-this.r.v);\r\n            }else{\r\n                this.iv.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v);\r\n            }\r\n            if(this.s){\r\n                this.iv.scale(this.s.v[0],this.s.v[1],1);\r\n            }\r\n            if(this.a){\r\n                this.iv.translate(-this.a.v[0],-this.a.v[1],this.a.v[2]);\r\n            }\r\n        }\r\n    }\r\n\r\n    function autoOrient(){\r\n        //\r\n        //var prevP = this.getValueAtTime();\r\n    }\r\n\r\n    function TransformProperty(elem,data,arr){\r\n        this.elem = elem;\r\n        this.frameId = -1;\r\n        this.propType = 'transform';\r\n        this.dynamicProperties = [];\r\n        this._mdf = false;\r\n        this.data = data;\r\n        this.v = new Matrix();\r\n        if(data.p.s){\r\n            this.px = PropertyFactory.getProp(elem,data.p.x,0,0,this.dynamicProperties);\r\n            this.py = PropertyFactory.getProp(elem,data.p.y,0,0,this.dynamicProperties);\r\n            if(data.p.z){\r\n                this.pz = PropertyFactory.getProp(elem,data.p.z,0,0,this.dynamicProperties);\r\n            }\r\n        }else{\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this.dynamicProperties);\r\n        }\r\n        if(data.r) {\r\n            this.r = PropertyFactory.getProp(elem, data.r, 0, degToRads, this.dynamicProperties);\r\n        } else if(data.rx) {\r\n            this.rx = PropertyFactory.getProp(elem, data.rx, 0, degToRads, this.dynamicProperties);\r\n            this.ry = PropertyFactory.getProp(elem, data.ry, 0, degToRads, this.dynamicProperties);\r\n            this.rz = PropertyFactory.getProp(elem, data.rz, 0, degToRads, this.dynamicProperties);\r\n            if(data.or.k[0].ti) {\r\n                var i, len = data.or.k.length;\r\n                for(i=0;i<len;i+=1) {\r\n                    data.or.k[i].to = data.or.k[i].ti = null;\r\n                }\r\n            }\r\n            this.or = PropertyFactory.getProp(elem, data.or, 1, degToRads, this.dynamicProperties);\r\n            //sh Indicates it needs to be capped between -180 and 180\r\n            this.or.sh = true;\r\n        }\r\n        if(data.sk){\r\n            this.sk = PropertyFactory.getProp(elem, data.sk, 0, degToRads, this.dynamicProperties);\r\n            this.sa = PropertyFactory.getProp(elem, data.sa, 0, degToRads, this.dynamicProperties);\r\n        }\r\n        if(data.a) {\r\n            this.a = PropertyFactory.getProp(elem,data.a,1,0,this.dynamicProperties);\r\n        }\r\n        if(data.s) {\r\n            this.s = PropertyFactory.getProp(elem,data.s,1,0.01,this.dynamicProperties);\r\n        }\r\n        // Opacity is not part of the transform properties, that's why it won't use this.dynamicProperties. That way transforms won't get updated if opacity changes.\r\n        if(data.o){\r\n            this.o = PropertyFactory.getProp(elem,data.o,0,0.01,arr);\r\n        } else {\r\n            this.o = {_mdf:false,v:1};\r\n        }\r\n        if(this.dynamicProperties.length){\r\n            arr.push(this);\r\n        }else{\r\n            this.getValue(true);\r\n        }\r\n    }\r\n\r\n    TransformProperty.prototype.applyToMatrix = applyToMatrix;\r\n    TransformProperty.prototype.getValue = processKeys;\r\n    TransformProperty.prototype.setInverted = setInverted;\r\n    TransformProperty.prototype.autoOrient = autoOrient;\r\n\r\n    function getTransformProperty(elem,data,arr){\r\n        return new TransformProperty(elem,data,arr);\r\n    }\r\n\r\n    return {\r\n        getTransformProperty: getTransformProperty\r\n    };\r\n\r\n}());\r\nfunction ShapePath(){\r\n\tthis.c = false;\r\n\tthis._length = 0;\r\n\tthis._maxLength = 8;\r\n\tthis.v = createSizedArray(this._maxLength);\r\n\tthis.o = createSizedArray(this._maxLength);\r\n\tthis.i = createSizedArray(this._maxLength);\r\n}\r\n\r\nShapePath.prototype.setPathData = function(closed, len) {\r\n\tthis.c = closed;\r\n\tthis.setLength(len);\r\n\tvar i = 0;\r\n\twhile(i < len){\r\n\t\tthis.v[i] = point_pool.newElement();\r\n\t\tthis.o[i] = point_pool.newElement();\r\n\t\tthis.i[i] = point_pool.newElement();\r\n\t\ti += 1;\r\n\t}\r\n};\r\n\r\nShapePath.prototype.setLength = function(len) {\r\n\twhile(this._maxLength < len) {\r\n\t\tthis.doubleArrayLength();\r\n\t}\r\n\tthis._length = len;\r\n};\r\n\r\nShapePath.prototype.doubleArrayLength = function() {\r\n\tthis.v = this.v.concat(createSizedArray(this._maxLength));\r\n\tthis.i = this.i.concat(createSizedArray(this._maxLength));\r\n\tthis.o = this.o.concat(createSizedArray(this._maxLength));\r\n\tthis._maxLength *= 2;\r\n};\r\n\r\nShapePath.prototype.setXYAt = function(x, y, type, pos, replace) {\r\n\tvar arr;\r\n\tthis._length = Math.max(this._length, pos + 1);\r\n\tif(this._length >= this._maxLength) {\r\n\t\tthis.doubleArrayLength();\r\n\t}\r\n\tswitch(type){\r\n\t\tcase 'v':\r\n\t\t\tarr = this.v;\r\n\t\t\tbreak;\r\n\t\tcase 'i':\r\n\t\t\tarr = this.i;\r\n\t\t\tbreak;\r\n\t\tcase 'o':\r\n\t\t\tarr = this.o;\r\n\t\t\tbreak;\r\n\t}\r\n\tif(!arr[pos] || (arr[pos] && !replace)){\r\n\t\tarr[pos] = point_pool.newElement();\r\n\t}\r\n\tarr[pos][0] = x;\r\n\tarr[pos][1] = y;\r\n};\r\n\r\nShapePath.prototype.setTripleAt = function(vX,vY,oX,oY,iX,iY,pos, replace) {\r\n\tthis.setXYAt(vX,vY,'v',pos, replace);\r\n\tthis.setXYAt(oX,oY,'o',pos, replace);\r\n\tthis.setXYAt(iX,iY,'i',pos, replace);\r\n};\r\n\r\nShapePath.prototype.reverse = function() {\r\n\tvar newPath = new ShapePath();\r\n\tnewPath.setPathData(this.c, this._length);\r\n\tvar vertices = this.v, outPoints = this.o, inPoints = this.i;\r\n\tvar init = 0;\r\n\tif (this.c) {\r\n\t\tnewPath.setTripleAt(vertices[0][0], vertices[0][1], inPoints[0][0], inPoints[0][1], outPoints[0][0], outPoints[0][1], 0, false);\r\n        init = 1;\r\n    }\r\n    var cnt = this._length - 1;\r\n    var len = this._length;\r\n\r\n    for (i = init; i < len; i += 1) {\r\n    \tnewPath.setTripleAt(vertices[cnt][0], vertices[cnt][1], inPoints[cnt][0], inPoints[cnt][1], outPoints[cnt][0], outPoints[cnt][1], i, false);\r\n        cnt -= 1;\r\n    }\r\n    return newPath;\r\n};\r\nvar ShapePropertyFactory = (function(){\r\n\r\n    var initFrame = -999999;\r\n\r\n    function interpolateShape(frameNum, previousValue, isCurrentRender, caching) {\r\n        var iterationIndex = caching.lastIndex;\r\n        var keyPropS,keyPropE,isHold, j, k, jLen, kLen, perc, vertexValue, hasModified = false;\r\n        if(frameNum < this.keyframes[0].t-this.offsetTime){\r\n            keyPropS = this.keyframes[0].s[0];\r\n            isHold = true;\r\n            iterationIndex = 0;\r\n        }else if(frameNum >= this.keyframes[this.keyframes.length - 1].t-this.offsetTime){\r\n            if(this.keyframes[this.keyframes.length - 2].h === 1){\r\n                keyPropS = this.keyframes[this.keyframes.length - 1].s[0];\r\n            }else{\r\n                keyPropS = this.keyframes[this.keyframes.length - 2].e[0];\r\n            }\r\n            isHold = true;\r\n        }else{\r\n            var i = iterationIndex;\r\n            var len = this.keyframes.length- 1,flag = true,keyData,nextKeyData;\r\n            while(flag){\r\n                keyData = this.keyframes[i];\r\n                nextKeyData = this.keyframes[i+1];\r\n                if((nextKeyData.t - this.offsetTime) > frameNum){\r\n                    break;\r\n                }\r\n                if(i < len - 1){\r\n                    i += 1;\r\n                }else{\r\n                    flag = false;\r\n                }\r\n            }\r\n            isHold = keyData.h === 1;\r\n            iterationIndex = i;\r\n            if(!isHold){\r\n                if(frameNum >= nextKeyData.t-this.offsetTime){\r\n                    perc = 1;\r\n                }else if(frameNum < keyData.t-this.offsetTime){\r\n                    perc = 0;\r\n                }else{\r\n                    var fnc;\r\n                    if(keyData.__fnct){\r\n                        fnc = keyData.__fnct;\r\n                    }else{\r\n                        fnc = BezierFactory.getBezierEasing(keyData.o.x,keyData.o.y,keyData.i.x,keyData.i.y).get;\r\n                        keyData.__fnct = fnc;\r\n                    }\r\n                    perc = fnc((frameNum-(keyData.t-this.offsetTime))/((nextKeyData.t-this.offsetTime)-(keyData.t-this.offsetTime)));\r\n                }\r\n                keyPropE = keyData.e[0];\r\n            }\r\n            keyPropS = keyData.s[0];\r\n        }\r\n        jLen = previousValue._length;\r\n        kLen = keyPropS.i[0].length;\r\n        caching.lastIndex = iterationIndex;\r\n\r\n        for(j=0;j<jLen;j+=1){\r\n            for(k=0;k<kLen;k+=1){\r\n                vertexValue = isHold ? keyPropS.i[j][k] :  keyPropS.i[j][k]+(keyPropE.i[j][k]-keyPropS.i[j][k])*perc;\r\n                if(previousValue.i[j][k] !== vertexValue){\r\n                    previousValue.i[j][k] = vertexValue;\r\n                    if(isCurrentRender) {\r\n                        this.pv.i[j][k] = vertexValue;\r\n                    }\r\n                    hasModified = true;\r\n                }\r\n                vertexValue = isHold ? keyPropS.o[j][k] :  keyPropS.o[j][k]+(keyPropE.o[j][k]-keyPropS.o[j][k])*perc;\r\n                if(previousValue.o[j][k] !== vertexValue){\r\n                    previousValue.o[j][k] = vertexValue;\r\n                    if(isCurrentRender) {\r\n                        this.pv.o[j][k] = vertexValue;\r\n                    }\r\n                    hasModified = true;\r\n                }\r\n                vertexValue = isHold ? keyPropS.v[j][k] :  keyPropS.v[j][k]+(keyPropE.v[j][k]-keyPropS.v[j][k])*perc;\r\n                if(previousValue.v[j][k] !== vertexValue){\r\n                    previousValue.v[j][k] = vertexValue;\r\n                    if(isCurrentRender) {\r\n                        this.pv.v[j][k] = vertexValue;\r\n                    }\r\n                    hasModified = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return hasModified;\r\n    }\r\n\r\n    function interpolateShapeCurrentTime(){\r\n        if(this.elem.globalData.frameId === this.frameId){\r\n            return;\r\n        }\r\n        this._mdf = false;\r\n        var frameNum = this.comp.renderedFrame - this.offsetTime;\r\n        var initTime = this.keyframes[0].t - this.offsetTime;\r\n        var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;\r\n        var lastFrame = this._caching.lastFrame;\r\n        if(!(lastFrame !== initFrame && ((lastFrame < initTime && frameNum < initTime) || (lastFrame > endTime && frameNum > endTime)))){\r\n            ////\r\n            this._caching.lastIndex = lastFrame < frameNum ? this._caching.lastIndex : 0;\r\n            var hasModified = this.interpolateShape(frameNum, this.v, true, this._caching);\r\n            ////\r\n            this._mdf = hasModified;\r\n            if(hasModified) {\r\n                this.paths = this.localShapeCollection;\r\n            }\r\n        }\r\n        this._caching.lastFrame = frameNum;\r\n        this.frameId = this.elem.globalData.frameId;\r\n    }\r\n\r\n    function getShapeValue(){\r\n        return this.v;\r\n    }\r\n\r\n    function resetShape(){\r\n        this.paths = this.localShapeCollection;\r\n        if(!this.k){\r\n            this._mdf = false;\r\n        }\r\n    }\r\n\r\n    function ShapeProperty(elem, data, type){\r\n        this.propType = 'shape';\r\n        this.comp = elem.comp;\r\n        this.k = false;\r\n        this._mdf = false;\r\n        var pathData = type === 3 ? data.pt.k : data.ks.k;\r\n        this.v = shape_pool.clone(pathData);\r\n        this.pv = shape_pool.clone(this.v);\r\n        this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n        this.paths = this.localShapeCollection;\r\n        this.paths.addShape(this.v);\r\n        this.reset = resetShape;\r\n    }\r\n    ShapeProperty.prototype.interpolateShape = interpolateShape;\r\n    ShapeProperty.prototype.getValue = getShapeValue;\r\n\r\n    function KeyframedShapeProperty(elem,data,type){\r\n        this.propType = 'shape';\r\n        this.comp = elem.comp;\r\n        this.elem = elem;\r\n        this.offsetTime = elem.data.st;\r\n        this.keyframes = type === 3 ? data.pt.k : data.ks.k;\r\n        this.k = true;\r\n        this.kf = true;\r\n        var i, len = this.keyframes[0].s[0].i.length;\r\n        var jLen = this.keyframes[0].s[0].i[0].length;\r\n        this.v = shape_pool.newElement();\r\n        this.v.setPathData(this.keyframes[0].s[0].c, len);\r\n        this.pv = shape_pool.clone(this.v);\r\n        this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n        this.paths = this.localShapeCollection;\r\n        this.paths.addShape(this.v);\r\n        this.lastFrame = initFrame;\r\n        this.reset = resetShape;\r\n        this._caching = {lastFrame: initFrame, lastIndex: 0};\r\n    }\r\n    KeyframedShapeProperty.prototype.getValue = interpolateShapeCurrentTime;\r\n    KeyframedShapeProperty.prototype.interpolateShape = interpolateShape;\r\n\r\n    var EllShapeProperty = (function(){\r\n\r\n        var cPoint = roundCorner;\r\n\r\n        function convertEllToPath(){\r\n            var p0 = this.p.v[0], p1 = this.p.v[1], s0 = this.s.v[0]/2, s1 = this.s.v[1]/2;\r\n            var _cw = this.d !== 3;\r\n            var _v = this.v;\r\n            if(this.d !== 3){\r\n                _v.v[0][0] = p0;\r\n                _v.v[0][1] = p1 - s1;\r\n                _v.v[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n                _v.v[1][1] = p1;\r\n                _v.v[2][0] = p0;\r\n                _v.v[2][1] = p1 + s1;\r\n                _v.v[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n                _v.v[3][1] = p1;\r\n                _v.i[0][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;\r\n                _v.i[0][1] = p1 - s1;\r\n                _v.i[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n                _v.i[1][1] = p1 - s1 * cPoint;\r\n                _v.i[2][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;\r\n                _v.i[2][1] = p1 + s1;\r\n                _v.i[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n                _v.i[3][1] = p1 + s1 * cPoint;\r\n                _v.o[0][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;\r\n                _v.o[0][1] = p1 - s1;\r\n                _v.o[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n                _v.o[1][1] = p1 + s1 * cPoint;\r\n                _v.o[2][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;\r\n                _v.o[2][1] = p1 + s1;\r\n                _v.o[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n                _v.o[3][1] = p1 - s1 * cPoint;\r\n            }\r\n        }\r\n\r\n        function processKeys(frameNum){\r\n            var i, len = this.dynamicProperties.length;\r\n            if(this.elem.globalData.frameId === this.frameId){\r\n                return;\r\n            }\r\n            this._mdf = false;\r\n            this.frameId = this.elem.globalData.frameId;\r\n\r\n            for(i=0;i<len;i+=1){\r\n                this.dynamicProperties[i].getValue(frameNum);\r\n                if(this.dynamicProperties[i]._mdf){\r\n                    this._mdf = true;\r\n                }\r\n            }\r\n            if(this._mdf){\r\n                this.convertEllToPath();\r\n            }\r\n        }\r\n\r\n        return function EllShapeProperty(elem,data) {\r\n            /*this.v = {\r\n                v: createSizedArray(4),\r\n                i: createSizedArray(4),\r\n                o: createSizedArray(4),\r\n                c: true\r\n            };*/\r\n            this.v = shape_pool.newElement();\r\n            this.v.setPathData(true, 4);\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.paths = this.localShapeCollection;\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.d = data.d;\r\n            this.dynamicProperties = [];\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.frameId = -1;\r\n            this._mdf = false;\r\n            this.getValue = processKeys;\r\n            this.convertEllToPath = convertEllToPath;\r\n            this.reset = resetShape;\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this.dynamicProperties);\r\n            this.s = PropertyFactory.getProp(elem,data.s,1,0,this.dynamicProperties);\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.convertEllToPath();\r\n            }\r\n        };\r\n    }());\r\n\r\n    var StarShapeProperty = (function() {\r\n\r\n        function convertPolygonToPath(){\r\n            var numPts = Math.floor(this.pt.v);\r\n            var angle = Math.PI*2/numPts;\r\n            /*this.v.v.length = numPts;\r\n            this.v.i.length = numPts;\r\n            this.v.o.length = numPts;*/\r\n            var rad = this.or.v;\r\n            var roundness = this.os.v;\r\n            var perimSegment = 2*Math.PI*rad/(numPts*4);\r\n            var i, currentAng = -Math.PI/ 2;\r\n            var dir = this.data.d === 3 ? -1 : 1;\r\n            currentAng += this.r.v;\r\n            this.v._length = 0;\r\n            for(i=0;i<numPts;i+=1){\r\n                var x = rad * Math.cos(currentAng);\r\n                var y = rad * Math.sin(currentAng);\r\n                var ox = x === 0 && y === 0 ? 0 : y/Math.sqrt(x*x + y*y);\r\n                var oy = x === 0 && y === 0 ? 0 : -x/Math.sqrt(x*x + y*y);\r\n                x +=  + this.p.v[0];\r\n                y +=  + this.p.v[1];\r\n                this.v.setTripleAt(x,y,x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir,x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir, i, true);\r\n                /*this.v.v[i] = [x,y];\r\n                this.v.i[i] = [x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir];\r\n                this.v.o[i] = [x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir];*/\r\n                currentAng += angle*dir;\r\n            }\r\n            this.paths.length = 0;\r\n            this.paths[0] = this.v;\r\n        }\r\n\r\n        function convertStarToPath() {\r\n            var numPts = Math.floor(this.pt.v)*2;\r\n            var angle = Math.PI*2/numPts;\r\n            /*this.v.v.length = numPts;\r\n            this.v.i.length = numPts;\r\n            this.v.o.length = numPts;*/\r\n            var longFlag = true;\r\n            var longRad = this.or.v;\r\n            var shortRad = this.ir.v;\r\n            var longRound = this.os.v;\r\n            var shortRound = this.is.v;\r\n            var longPerimSegment = 2*Math.PI*longRad/(numPts*2);\r\n            var shortPerimSegment = 2*Math.PI*shortRad/(numPts*2);\r\n            var i, rad,roundness,perimSegment, currentAng = -Math.PI/ 2;\r\n            currentAng += this.r.v;\r\n            var dir = this.data.d === 3 ? -1 : 1;\r\n            this.v._length = 0;\r\n            for(i=0;i<numPts;i+=1){\r\n                rad = longFlag ? longRad : shortRad;\r\n                roundness = longFlag ? longRound : shortRound;\r\n                perimSegment = longFlag ? longPerimSegment : shortPerimSegment;\r\n                var x = rad * Math.cos(currentAng);\r\n                var y = rad * Math.sin(currentAng);\r\n                var ox = x === 0 && y === 0 ? 0 : y/Math.sqrt(x*x + y*y);\r\n                var oy = x === 0 && y === 0 ? 0 : -x/Math.sqrt(x*x + y*y);\r\n                x +=  + this.p.v[0];\r\n                y +=  + this.p.v[1];\r\n                this.v.setTripleAt(x,y,x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir,x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir, i, true);\r\n\r\n                /*this.v.v[i] = [x,y];\r\n                this.v.i[i] = [x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir];\r\n                this.v.o[i] = [x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir];\r\n                this.v._length = numPts;*/\r\n                longFlag = !longFlag;\r\n                currentAng += angle*dir;\r\n            }\r\n        }\r\n\r\n        function processKeys() {\r\n            if(this.elem.globalData.frameId === this.frameId){\r\n                return;\r\n            }\r\n            this._mdf = false;\r\n            this.frameId = this.elem.globalData.frameId;\r\n            var i, len = this.dynamicProperties.length;\r\n\r\n            for(i=0;i<len;i+=1){\r\n                this.dynamicProperties[i].getValue();\r\n                if(this.dynamicProperties[i]._mdf){\r\n                    this._mdf = true;\r\n                }\r\n            }\r\n            if(this._mdf){\r\n                this.convertToPath();\r\n            }\r\n        }\r\n\r\n        return function StarShapeProperty(elem,data) {\r\n            /*this.v = {\r\n                v: [],\r\n                i: [],\r\n                o: [],\r\n                c: true\r\n            };*/\r\n            this.v = shape_pool.newElement();\r\n            this.v.setPathData(true, 0);\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.data = data;\r\n            this.frameId = -1;\r\n            this.d = data.d;\r\n            this.dynamicProperties = [];\r\n            this._mdf = false;\r\n            this.getValue = processKeys;\r\n            this.reset = resetShape;\r\n            if(data.sy === 1){\r\n                this.ir = PropertyFactory.getProp(elem,data.ir,0,0,this.dynamicProperties);\r\n                this.is = PropertyFactory.getProp(elem,data.is,0,0.01,this.dynamicProperties);\r\n                this.convertToPath = convertStarToPath;\r\n            } else {\r\n                this.convertToPath = convertPolygonToPath;\r\n            }\r\n            this.pt = PropertyFactory.getProp(elem,data.pt,0,0,this.dynamicProperties);\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this.dynamicProperties);\r\n            this.r = PropertyFactory.getProp(elem,data.r,0,degToRads,this.dynamicProperties);\r\n            this.or = PropertyFactory.getProp(elem,data.or,0,0,this.dynamicProperties);\r\n            this.os = PropertyFactory.getProp(elem,data.os,0,0.01,this.dynamicProperties);\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.paths = this.localShapeCollection;\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.convertToPath();\r\n            }\r\n        };\r\n    }());\r\n\r\n    var RectShapeProperty = (function() {\r\n        function processKeys(frameNum){\r\n            if(this.elem.globalData.frameId === this.frameId){\r\n                return;\r\n            }\r\n            this._mdf = false;\r\n            this.frameId = this.elem.globalData.frameId;\r\n            var i, len = this.dynamicProperties.length;\r\n\r\n            for(i=0;i<len;i+=1){\r\n                this.dynamicProperties[i].getValue(frameNum);\r\n                if(this.dynamicProperties[i]._mdf){\r\n                    this._mdf = true;\r\n                }\r\n            }\r\n            if(this._mdf){\r\n                this.convertRectToPath();\r\n            }\r\n\r\n        }\r\n\r\n        function convertRectToPath(){\r\n            var p0 = this.p.v[0], p1 = this.p.v[1], v0 = this.s.v[0]/2, v1 = this.s.v[1]/2;\r\n            var round = bm_min(v0,v1,this.r.v);\r\n            var cPoint = round*(1-roundCorner);\r\n            this.v._length = 0;\r\n\r\n            if(this.d === 2 || this.d === 1) {\r\n                this.v.setTripleAt(p0+v0, p1-v1+round,p0+v0, p1-v1+round,p0+v0,p1-v1+cPoint,0, true);\r\n                this.v.setTripleAt(p0+v0, p1+v1-round,p0+v0, p1+v1-cPoint,p0+v0, p1+v1-round,1, true);\r\n                if(round!== 0){\r\n                    this.v.setTripleAt(p0+v0-round, p1+v1,p0+v0-round,p1+v1,p0+v0-cPoint,p1+v1,2, true);\r\n                    this.v.setTripleAt(p0-v0+round,p1+v1,p0-v0+cPoint,p1+v1,p0-v0+round,p1+v1,3, true);\r\n                    this.v.setTripleAt(p0-v0,p1+v1-round,p0-v0,p1+v1-round,p0-v0,p1+v1-cPoint,4, true);\r\n                    this.v.setTripleAt(p0-v0,p1-v1+round,p0-v0,p1-v1+cPoint,p0-v0,p1-v1+round,5, true);\r\n                    this.v.setTripleAt(p0-v0+round,p1-v1,p0-v0+round,p1-v1,p0-v0+cPoint,p1-v1,6, true);\r\n                    this.v.setTripleAt(p0+v0-round,p1-v1,p0+v0-cPoint,p1-v1,p0+v0-round,p1-v1,7, true);\r\n                } else {\r\n                    this.v.setTripleAt(p0-v0,p1+v1,p0-v0+cPoint,p1+v1,p0-v0,p1+v1,2);\r\n                    this.v.setTripleAt(p0-v0,p1-v1,p0-v0,p1-v1+cPoint,p0-v0,p1-v1,3);\r\n                }\r\n            }else{\r\n                this.v.setTripleAt(p0+v0,p1-v1+round,p0+v0,p1-v1+cPoint,p0+v0,p1-v1+round,0, true);\r\n                if(round!== 0){\r\n                    this.v.setTripleAt(p0+v0-round,p1-v1,p0+v0-round,p1-v1,p0+v0-cPoint,p1-v1,1, true);\r\n                    this.v.setTripleAt(p0-v0+round,p1-v1,p0-v0+cPoint,p1-v1,p0-v0+round,p1-v1,2, true);\r\n                    this.v.setTripleAt(p0-v0,p1-v1+round,p0-v0,p1-v1+round,p0-v0,p1-v1+cPoint,3, true);\r\n                    this.v.setTripleAt(p0-v0,p1+v1-round,p0-v0,p1+v1-cPoint,p0-v0,p1+v1-round,4, true);\r\n                    this.v.setTripleAt(p0-v0+round,p1+v1,p0-v0+round,p1+v1,p0-v0+cPoint,p1+v1,5, true);\r\n                    this.v.setTripleAt(p0+v0-round,p1+v1,p0+v0-cPoint,p1+v1,p0+v0-round,p1+v1,6, true);\r\n                    this.v.setTripleAt(p0+v0,p1+v1-round,p0+v0,p1+v1-round,p0+v0,p1+v1-cPoint,7, true);\r\n                } else {\r\n                    this.v.setTripleAt(p0-v0,p1-v1,p0-v0+cPoint,p1-v1,p0-v0,p1-v1,1, true);\r\n                    this.v.setTripleAt(p0-v0,p1+v1,p0-v0,p1+v1-cPoint,p0-v0,p1+v1,2, true);\r\n                    this.v.setTripleAt(p0+v0,p1+v1,p0+v0-cPoint,p1+v1,p0+v0,p1+v1,3, true);\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        return function RectShapeProperty(elem,data) {\r\n            this.v = shape_pool.newElement();\r\n            this.v.c = true;\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.paths = this.localShapeCollection;\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.frameId = -1;\r\n            this.d = data.d;\r\n            this.dynamicProperties = [];\r\n            this._mdf = false;\r\n            this.getValue = processKeys;\r\n            this.convertRectToPath = convertRectToPath;\r\n            this.reset = resetShape;\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this.dynamicProperties);\r\n            this.s = PropertyFactory.getProp(elem,data.s,1,0,this.dynamicProperties);\r\n            this.r = PropertyFactory.getProp(elem,data.r,0,0,this.dynamicProperties);\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.convertRectToPath();\r\n            }\r\n        };\r\n    }());\r\n\r\n    function getShapeProp(elem,data,type, arr){\r\n        var prop;\r\n        if(type === 3 || type === 4){\r\n            var dataProp = type === 3 ? data.pt : data.ks;\r\n            var keys = dataProp.k;\r\n            if(dataProp.a === 1 || keys.length){\r\n                prop = new KeyframedShapeProperty(elem, data, type);\r\n            }else{\r\n                prop = new ShapeProperty(elem, data, type);\r\n            }\r\n        }else if(type === 5){\r\n            prop = new RectShapeProperty(elem, data);\r\n        }else if(type === 6){\r\n            prop = new EllShapeProperty(elem, data);\r\n        }else if(type === 7){\r\n            prop = new StarShapeProperty(elem, data);\r\n        }\r\n        if(prop.k){\r\n            arr.push(prop);\r\n        }\r\n        return prop;\r\n    }\r\n\r\n    function getConstructorFunction() {\r\n        return ShapeProperty;\r\n    }\r\n\r\n    function getKeyframedConstructorFunction() {\r\n        return KeyframedShapeProperty;\r\n    }\r\n\r\n    var ob = {};\r\n    ob.getShapeProp = getShapeProp;\r\n    ob.getConstructorFunction = getConstructorFunction;\r\n    ob.getKeyframedConstructorFunction = getKeyframedConstructorFunction;\r\n    return ob;\r\n}());\r\nvar ShapeModifiers = (function(){\r\n    var ob = {};\r\n    var modifiers = {};\r\n    ob.registerModifier = registerModifier;\r\n    ob.getModifier = getModifier;\r\n\r\n    function registerModifier(nm,factory){\r\n        if(!modifiers[nm]){\r\n            modifiers[nm] = factory;\r\n        }\r\n    }\r\n\r\n    function getModifier(nm,elem, data, dynamicProperties){\r\n        return new modifiers[nm](elem, data, dynamicProperties);\r\n    }\r\n\r\n    return ob;\r\n}());\r\n\r\nfunction ShapeModifier(){}\r\nShapeModifier.prototype.initModifierProperties = function(){};\r\nShapeModifier.prototype.addShapeToModifier = function(){};\r\nShapeModifier.prototype.addShape = function(data){\r\n    if(!this.closed){\r\n        var shapeData = {shape:data.sh, data: data, localShapeCollection:shapeCollection_pool.newShapeCollection()};\r\n        this.shapes.push(shapeData);\r\n        this.addShapeToModifier(shapeData);\r\n    }\r\n};\r\nShapeModifier.prototype.init = function(elem,data,dynamicProperties){\r\n    this.dynamicProperties = [];\r\n    this.shapes = [];\r\n    this.elem = elem;\r\n    this.initModifierProperties(elem,data);\r\n    this.frameId = initialDefaultFrame;\r\n    this._mdf = false;\r\n    this.closed = false;\r\n    this.k = false;\r\n    if(this.dynamicProperties.length){\r\n        this.k = true;\r\n        dynamicProperties.push(this);\r\n    }else{\r\n        this.getValue(true);\r\n    }\r\n};\r\nShapeModifier.prototype.processKeys = function(){\r\n    if(this.elem.globalData.frameId === this.frameId){\r\n        return;\r\n    }\r\n    this._mdf = false;\r\n    var i, len = this.dynamicProperties.length;\r\n\r\n    for(i=0;i<len;i+=1){\r\n        this.dynamicProperties[i].getValue();\r\n        if(this.dynamicProperties[i]._mdf){\r\n            this._mdf = true;\r\n        }\r\n    }\r\n    this.frameId = this.elem.globalData.frameId;\r\n};\r\nfunction TrimModifier(){\r\n}\r\nextendPrototype([ShapeModifier], TrimModifier);\r\nTrimModifier.prototype.initModifierProperties = function(elem, data) {\r\n    this.s = PropertyFactory.getProp(elem, data.s, 0, 0.01, this.dynamicProperties);\r\n    this.e = PropertyFactory.getProp(elem, data.e, 0, 0.01, this.dynamicProperties);\r\n    this.o = PropertyFactory.getProp(elem, data.o, 0, 0, this.dynamicProperties);\r\n    this.sValue = 0;\r\n    this.eValue = 0;\r\n    this.getValue = this.processKeys;\r\n    this.m = data.m;\r\n};\r\n\r\nTrimModifier.prototype.addShapeToModifier = function(shapeData){\r\n    shapeData.pathsData = [];\r\n};\r\n\r\nTrimModifier.prototype.calculateShapeEdges = function(s, e, shapeLength, addedLength, totalModifierLength) {\r\n    var segments = [];\r\n    if (e <= 1) {\r\n        segments.push({\r\n            s: s,\r\n            e: e\r\n        });\r\n    } else if (s >= 1) {\r\n        segments.push({\r\n            s: s - 1,\r\n            e: e - 1\r\n        });\r\n    } else {\r\n        segments.push({\r\n            s: s,\r\n            e: 1\r\n        });\r\n        segments.push({\r\n            s: 0,\r\n            e: e - 1\r\n        });\r\n    }\r\n    var shapeSegments = [];\r\n    var i, len = segments.length, segmentOb;\r\n    for (i = 0; i < len; i += 1) {\r\n        segmentOb = segments[i];\r\n        if (segmentOb.e * totalModifierLength < addedLength || segmentOb.s * totalModifierLength > addedLength + shapeLength) {\r\n            \r\n        } else {\r\n            var shapeS, shapeE;\r\n            if (segmentOb.s * totalModifierLength <= addedLength) {\r\n                shapeS = 0;\r\n            } else {\r\n                shapeS = (segmentOb.s * totalModifierLength - addedLength) / shapeLength;\r\n            }\r\n            if(segmentOb.e * totalModifierLength >= addedLength + shapeLength) {\r\n                shapeE = 1;\r\n            } else {\r\n                shapeE = ((segmentOb.e * totalModifierLength - addedLength) / shapeLength);\r\n            }\r\n            shapeSegments.push([shapeS, shapeE]);\r\n        }\r\n    }\r\n    if (!shapeSegments.length) {\r\n        shapeSegments.push([0, 0]);\r\n    }\r\n    return shapeSegments;\r\n};\r\n\r\nTrimModifier.prototype.releasePathsData = function(pathsData) {\r\n    var i, len = pathsData.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        segments_length_pool.release(pathsData[i]);\r\n    }\r\n    pathsData.length = 0;\r\n    return pathsData;\r\n};\r\n\r\nTrimModifier.prototype.processShapes = function(_isFirstFrame) {\r\n    var s, e;\r\n    if (this._mdf || _isFirstFrame) {\r\n        var o = (this.o.v % 360) / 360;\r\n        if (o < 0) {\r\n            o += 1;\r\n        }\r\n        s = this.s.v + o;\r\n        e = this.e.v + o;\r\n        if (s === e) {\r\n\r\n        }\r\n        if (s > e) {\r\n            var _s = s;\r\n            s = e;\r\n            e = _s;\r\n        }\r\n        this.sValue = s;\r\n        this.eValue = e;\r\n    } else {\r\n        s = this.sValue;\r\n        e = this.eValue;\r\n    }\r\n    var shapePaths;\r\n    var i, len = this.shapes.length, j, jLen;\r\n    var pathsData, pathData, totalShapeLength, totalModifierLength = 0;\r\n\r\n    if (e === s) {\r\n        for (i = 0; i < len; i += 1) {\r\n            this.shapes[i].localShapeCollection.releaseShapes();\r\n            this.shapes[i].shape._mdf = true;\r\n            this.shapes[i].shape.paths = this.shapes[i].localShapeCollection;\r\n        }\r\n    } else if (!((e === 1 && s === 0) || (e===0 && s === 1))){\r\n        var segments = [], shapeData, localShapeCollection;\r\n        for (i = 0; i < len; i += 1) {\r\n            shapeData = this.shapes[i];\r\n            // if shape hasn't changed and trim properties haven't changed, cached previous path can be used\r\n            if (!shapeData.shape._mdf && !this._mdf && !_isFirstFrame && this.m !== 2) {\r\n                shapeData.shape.paths = shapeData.localShapeCollection;\r\n            } else {\r\n                shapePaths = shapeData.shape.paths;\r\n                jLen = shapePaths._length;\r\n                totalShapeLength = 0;\r\n                if (!shapeData.shape._mdf && shapeData.pathsData.length) {\r\n                    totalShapeLength = shapeData.totalShapeLength;\r\n                } else {\r\n                    pathsData = this.releasePathsData(shapeData.pathsData);\r\n                    for (j = 0; j < jLen; j += 1) {\r\n                        pathData = bez.getSegmentsLength(shapePaths.shapes[j]);\r\n                        pathsData.push(pathData);\r\n                        totalShapeLength += pathData.totalLength;\r\n                    }\r\n                    shapeData.totalShapeLength = totalShapeLength;\r\n                    shapeData.pathsData = pathsData;\r\n                }\r\n\r\n                totalModifierLength += totalShapeLength;\r\n                shapeData.shape._mdf = true;\r\n            }\r\n        }\r\n        var shapeS = s, shapeE = e, addedLength = 0, edges;\r\n        for (i = len - 1; i >= 0; i -= 1) {\r\n            shapeData = this.shapes[i];\r\n            if (shapeData.shape._mdf) {\r\n                localShapeCollection = shapeData.localShapeCollection;\r\n                localShapeCollection.releaseShapes();\r\n                //if m === 2 means paths are trimmed individually so edges need to be found for this specific shape relative to whoel group\r\n                if (this.m === 2 && len > 1) {\r\n                    edges = this.calculateShapeEdges(s, e, shapeData.totalShapeLength, addedLength, totalModifierLength);\r\n                    addedLength += shapeData.totalShapeLength;\r\n                } else {\r\n                    edges = [[shapeS, shapeE]];\r\n                }\r\n                jLen = edges.length;\r\n                for (j = 0; j < jLen; j += 1) {\r\n                    shapeS = edges[j][0];\r\n                    shapeE = edges[j][1];\r\n                    segments.length = 0;\r\n                    if (shapeE <= 1) {\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * shapeS,\r\n                            e:shapeData.totalShapeLength * shapeE\r\n                        });\r\n                    } else if (shapeS >= 1) {\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * (shapeS - 1),\r\n                            e:shapeData.totalShapeLength * (shapeE - 1)\r\n                        });\r\n                    } else {\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * shapeS,\r\n                            e:shapeData.totalShapeLength\r\n                        });\r\n                        segments.push({\r\n                            s:0,\r\n                            e:shapeData.totalShapeLength * (shapeE - 1)\r\n                        });\r\n                    }\r\n                    var newShapesData = this.addShapes(shapeData,segments[0]);\r\n                    if (segments[0].s !== segments[0].e) {\r\n                        if (segments.length > 1) {\r\n                            if (shapeData.shape.v.c) {\r\n                                var lastShape = newShapesData.pop();\r\n                                this.addPaths(newShapesData, localShapeCollection);\r\n                                newShapesData = this.addShapes(shapeData, segments[1], lastShape);\r\n                            } else {\r\n                                this.addPaths(newShapesData, localShapeCollection);\r\n                                newShapesData = this.addShapes(shapeData, segments[1]);\r\n                            }\r\n                        } \r\n                        this.addPaths(newShapesData, localShapeCollection);\r\n                    }\r\n                    \r\n                }\r\n                shapeData.shape.paths = localShapeCollection;\r\n            }\r\n        }\r\n    } else if (this._mdf) {\r\n        for (i = 0; i < len; i += 1) {\r\n            this.shapes[i].shape._mdf = true;\r\n        }\r\n    }\r\n};\r\n\r\nTrimModifier.prototype.addPaths = function(newPaths, localShapeCollection) {\r\n    var i, len = newPaths.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        localShapeCollection.addShape(newPaths[i]);\r\n    }\r\n};\r\n\r\nTrimModifier.prototype.addSegment = function(pt1, pt2, pt3, pt4, shapePath, pos, newShape) {\r\n    shapePath.setXYAt(pt2[0], pt2[1], 'o', pos);\r\n    shapePath.setXYAt(pt3[0], pt3[1], 'i', pos + 1);\r\n    if(newShape){\r\n        shapePath.setXYAt(pt1[0], pt1[1], 'v', pos);\r\n    }\r\n    shapePath.setXYAt(pt4[0], pt4[1], 'v', pos + 1);\r\n};\r\n\r\nTrimModifier.prototype.addSegmentFromArray = function(points, shapePath, pos, newShape) {\r\n    shapePath.setXYAt(points[1], points[5], 'o', pos);\r\n    shapePath.setXYAt(points[2], points[6], 'i', pos + 1);\r\n    if(newShape){\r\n        shapePath.setXYAt(points[0], points[4], 'v', pos);\r\n    }\r\n    shapePath.setXYAt(points[3], points[7], 'v', pos + 1);\r\n};\r\n\r\nTrimModifier.prototype.addShapes = function(shapeData, shapeSegment, shapePath) {\r\n    var pathsData = shapeData.pathsData;\r\n    var shapePaths = shapeData.shape.paths.shapes;\r\n    var i, len = shapeData.shape.paths._length, j, jLen;\r\n    var addedLength = 0;\r\n    var currentLengthData,segmentCount;\r\n    var lengths;\r\n    var segment;\r\n    var shapes = [];\r\n    var initPos;\r\n    var newShape = true;\r\n    if (!shapePath) {\r\n        shapePath = shape_pool.newElement();\r\n        segmentCount = 0;\r\n        initPos = 0;\r\n    } else {\r\n        segmentCount = shapePath._length;\r\n        initPos = shapePath._length;\r\n    }\r\n    shapes.push(shapePath);\r\n    for (i = 0; i < len; i += 1) {\r\n        lengths = pathsData[i].lengths;\r\n        shapePath.c = shapePaths[i].c;\r\n        jLen = shapePaths[i].c ? lengths.length : lengths.length + 1;\r\n        for (j = 1; j < jLen; j +=1) {\r\n            currentLengthData = lengths[j-1];\r\n            if (addedLength + currentLengthData.addedLength < shapeSegment.s) {\r\n                addedLength += currentLengthData.addedLength;\r\n                shapePath.c = false;\r\n            } else if(addedLength > shapeSegment.e) {\r\n                shapePath.c = false;\r\n                break;\r\n            } else {\r\n                if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + currentLengthData.addedLength) {\r\n                    this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[j], shapePaths[i].v[j], shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                } else {\r\n                    segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[j], shapePaths[i].o[j - 1], shapePaths[i].i[j], (shapeSegment.s - addedLength)/currentLengthData.addedLength,(shapeSegment.e - addedLength)/currentLengthData.addedLength, lengths[j-1]);\r\n                    this.addSegmentFromArray(segment, shapePath, segmentCount, newShape);\r\n                    // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                    shapePath.c = false;\r\n                }\r\n                addedLength += currentLengthData.addedLength;\r\n                segmentCount += 1;\r\n            }\r\n        }\r\n        if (shapePaths[i].c) {\r\n            currentLengthData = lengths[j - 1];\r\n            if (addedLength <= shapeSegment.e) {\r\n                var segmentLength = lengths[j - 1].addedLength;\r\n                if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + segmentLength) {\r\n                    this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[0], shapePaths[i].v[0], shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                } else {\r\n                    segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[0], shapePaths[i].o[j - 1], shapePaths[i].i[0], (shapeSegment.s - addedLength) / segmentLength, (shapeSegment.e - addedLength) / segmentLength, lengths[j - 1]);\r\n                    this.addSegmentFromArray(segment, shapePath, segmentCount, newShape);\r\n                    // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                    shapePath.c = false;\r\n                }\r\n            } else {\r\n                shapePath.c = false;\r\n            }\r\n            addedLength += currentLengthData.addedLength;\r\n            segmentCount += 1;\r\n        }\r\n        if (shapePath._length) {\r\n            shapePath.setXYAt(shapePath.v[initPos][0], shapePath.v[initPos][1], 'i', initPos);\r\n            shapePath.setXYAt(shapePath.v[shapePath._length - 1][0], shapePath.v[shapePath._length - 1][1],'o', shapePath._length - 1);\r\n        }\r\n        if (addedLength > shapeSegment.e) {\r\n            break;\r\n        }\r\n        if (i < len - 1) {\r\n            shapePath = shape_pool.newElement();\r\n            newShape = true;\r\n            shapes.push(shapePath);\r\n            segmentCount = 0;\r\n        }\r\n    }\r\n    return shapes;\r\n};\r\n\r\n\r\nShapeModifiers.registerModifier('tm', TrimModifier);\r\nfunction RoundCornersModifier(){}\r\nextendPrototype([ShapeModifier],RoundCornersModifier);\r\nRoundCornersModifier.prototype.initModifierProperties = function(elem,data){\r\n    this.getValue = this.processKeys;\r\n    this.rd = PropertyFactory.getProp(elem,data.r,0,null,this.dynamicProperties);\r\n};\r\n\r\nRoundCornersModifier.prototype.processPath = function(path, round){\r\n    var cloned_path = shape_pool.newElement();\r\n    cloned_path.c = path.c;\r\n    var i, len = path._length;\r\n    var currentV,currentI,currentO,closerV, newV,newO,newI,distance,newPosPerc,index = 0;\r\n    var vX,vY,oX,oY,iX,iY;\r\n    for(i=0;i<len;i+=1){\r\n        currentV = path.v[i];\r\n        currentO = path.o[i];\r\n        currentI = path.i[i];\r\n        if(currentV[0]===currentO[0] && currentV[1]===currentO[1] && currentV[0]===currentI[0] && currentV[1]===currentI[1]){\r\n            if((i===0 || i === len - 1) && !path.c){\r\n                cloned_path.setTripleAt(currentV[0],currentV[1],currentO[0],currentO[1],currentI[0],currentI[1],index);\r\n                /*cloned_path.v[index] = currentV;\r\n                cloned_path.o[index] = currentO;\r\n                cloned_path.i[index] = currentI;*/\r\n                index += 1;\r\n            } else {\r\n                if(i===0){\r\n                    closerV = path.v[len-1];\r\n                } else {\r\n                    closerV = path.v[i-1];\r\n                }\r\n                distance = Math.sqrt(Math.pow(currentV[0]-closerV[0],2)+Math.pow(currentV[1]-closerV[1],2));\r\n                newPosPerc = distance ? Math.min(distance/2,round)/distance : 0;\r\n                vX = iX = currentV[0]+(closerV[0]-currentV[0])*newPosPerc;\r\n                vY = iY = currentV[1]-(currentV[1]-closerV[1])*newPosPerc;\r\n                oX = vX-(vX-currentV[0])*roundCorner;\r\n                oY = vY-(vY-currentV[1])*roundCorner;\r\n                cloned_path.setTripleAt(vX,vY,oX,oY,iX,iY,index);\r\n                index += 1;\r\n\r\n                if(i === len - 1){\r\n                    closerV = path.v[0];\r\n                } else {\r\n                    closerV = path.v[i+1];\r\n                }\r\n                distance = Math.sqrt(Math.pow(currentV[0]-closerV[0],2)+Math.pow(currentV[1]-closerV[1],2));\r\n                newPosPerc = distance ? Math.min(distance/2,round)/distance : 0;\r\n                vX = oX = currentV[0]+(closerV[0]-currentV[0])*newPosPerc;\r\n                vY = oY = currentV[1]+(closerV[1]-currentV[1])*newPosPerc;\r\n                iX = vX-(vX-currentV[0])*roundCorner;\r\n                iY = vY-(vY-currentV[1])*roundCorner;\r\n                cloned_path.setTripleAt(vX,vY,oX,oY,iX,iY,index);\r\n                index += 1;\r\n            }\r\n        } else {\r\n            cloned_path.setTripleAt(path.v[i][0],path.v[i][1],path.o[i][0],path.o[i][1],path.i[i][0],path.i[i][1],index);\r\n            index += 1;\r\n        }\r\n    }\r\n    return cloned_path;\r\n};\r\n\r\nRoundCornersModifier.prototype.processShapes = function(_isFirstFrame){\r\n    var shapePaths;\r\n    var i, len = this.shapes.length;\r\n    var j, jLen;\r\n    var rd = this.rd.v;\r\n\r\n    if(rd !== 0){\r\n        var shapeData, newPaths, localShapeCollection;\r\n        for(i=0;i<len;i+=1){\r\n            shapeData = this.shapes[i];\r\n            newPaths = shapeData.shape.paths;\r\n            localShapeCollection = shapeData.localShapeCollection;\r\n            if(!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)){\r\n                localShapeCollection.releaseShapes();\r\n                shapeData.shape._mdf = true;\r\n                shapePaths = shapeData.shape.paths.shapes;\r\n                jLen = shapeData.shape.paths._length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    localShapeCollection.addShape(this.processPath(shapePaths[j],rd));\r\n                }\r\n            }\r\n            shapeData.shape.paths = shapeData.localShapeCollection;\r\n        }\r\n\r\n    }\r\n    if(!this.dynamicProperties.length){\r\n        this._mdf = false;\r\n    }\r\n};\r\n\r\nShapeModifiers.registerModifier('rd',RoundCornersModifier);\r\nfunction RepeaterModifier(){}\r\nextendPrototype([ShapeModifier], RepeaterModifier);\r\n\r\nRepeaterModifier.prototype.initModifierProperties = function(elem,data){\r\n    this.getValue = this.processKeys;\r\n    this.c = PropertyFactory.getProp(elem,data.c,0,null,this.dynamicProperties);\r\n    this.o = PropertyFactory.getProp(elem,data.o,0,null,this.dynamicProperties);\r\n    this.tr = TransformPropertyFactory.getTransformProperty(elem,data.tr,this.dynamicProperties);\r\n    this.data = data;\r\n    if(!this.dynamicProperties.length){\r\n        this.getValue(true);\r\n    }\r\n    this.pMatrix = new Matrix();\r\n    this.rMatrix = new Matrix();\r\n    this.sMatrix = new Matrix();\r\n    this.tMatrix = new Matrix();\r\n    this.matrix = new Matrix();\r\n};\r\n\r\nRepeaterModifier.prototype.applyTransforms = function(pMatrix, rMatrix, sMatrix, transform, perc, inv){\r\n    var dir = inv ? -1 : 1;\r\n    var scaleX = transform.s.v[0] + (1 - transform.s.v[0]) * (1 - perc);\r\n    var scaleY = transform.s.v[1] + (1 - transform.s.v[1]) * (1 - perc);\r\n    pMatrix.translate(transform.p.v[0] * dir * perc, transform.p.v[1] * dir * perc, transform.p.v[2]);\r\n    rMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\r\n    rMatrix.rotate(-transform.r.v * dir * perc);\r\n    rMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\r\n    sMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\r\n    sMatrix.scale(inv ? 1/scaleX : scaleX, inv ? 1/scaleY : scaleY);\r\n    sMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\r\n};\r\n\r\nRepeaterModifier.prototype.init = function(elem, arr, pos, elemsData, dynamicProperties) {\r\n    this.elem = elem;\r\n    this.arr = arr;\r\n    this.pos = pos;\r\n    this.elemsData = elemsData;\r\n    this._currentCopies = 0;\r\n    this._elements = [];\r\n    this._groups = [];\r\n    this.dynamicProperties = [];\r\n    this.frameId = -1;\r\n    this.initModifierProperties(elem,arr[pos]);\r\n    var cont = 0;\r\n    while(pos>0){\r\n        pos -= 1;\r\n        //this._elements.unshift(arr.splice(pos,1)[0]);\r\n        this._elements.unshift(arr[pos]);\r\n        cont += 1;\r\n    }\r\n    if(this.dynamicProperties.length){\r\n        this.k = true;\r\n        dynamicProperties.push(this);\r\n    }else{\r\n        this.getValue(true);\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.resetElements = function(elements){\r\n    var i, len = elements.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        elements[i]._processed = false;\r\n        if(elements[i].ty === 'gr'){\r\n            this.resetElements(elements[i].it);\r\n        }\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.cloneElements = function(elements){\r\n    var i, len = elements.length;\r\n    var newElements = JSON.parse(JSON.stringify(elements));\r\n    this.resetElements(newElements);\r\n    return newElements;\r\n};\r\n\r\nRepeaterModifier.prototype.changeGroupRender = function(elements, renderFlag) {\r\n    var i, len = elements.length;\r\n    for(i = 0; i < len ; i += 1) {\r\n        elements[i]._render = renderFlag;\r\n        if(elements[i].ty === 'gr') {\r\n            this.changeGroupRender(elements[i].it, renderFlag);\r\n        }\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.processShapes = function(_isFirstFrame) {\r\n    var items, itemsTransform, i, dir, cont;\r\n    if(this._mdf || _isFirstFrame){\r\n        var copies = Math.ceil(this.c.v);\r\n        if(this._groups.length < copies){\r\n            while(this._groups.length < copies){\r\n                var group = {\r\n                    it:this.cloneElements(this._elements),\r\n                    ty:'gr'\r\n                };\r\n                group.it.push({\"a\":{\"a\":0,\"ix\":1,\"k\":[0,0]},\"nm\":\"Transform\",\"o\":{\"a\":0,\"ix\":7,\"k\":100},\"p\":{\"a\":0,\"ix\":2,\"k\":[0,0]},\"r\":{\"a\":0,\"ix\":6,\"k\":0},\"s\":{\"a\":0,\"ix\":3,\"k\":[100,100]},\"sa\":{\"a\":0,\"ix\":5,\"k\":0},\"sk\":{\"a\":0,\"ix\":4,\"k\":0},\"ty\":\"tr\"});\r\n                \r\n                this.arr.splice(0,0,group);\r\n                this._groups.splice(0,0,group);\r\n                this._currentCopies += 1;\r\n            }\r\n            this.elem.reloadShapes();\r\n        }\r\n        cont = 0;\r\n        var renderFlag;\r\n        for(i = 0; i  <= this._groups.length - 1; i += 1){\r\n            renderFlag = cont < copies;\r\n            this._groups[i]._render = renderFlag;\r\n            this.changeGroupRender(this._groups[i].it, renderFlag);\r\n            cont += 1;\r\n        }\r\n        \r\n        this._currentCopies = copies;\r\n        ////\r\n\r\n        var offset = this.o.v;\r\n        var offsetModulo = offset%1;\r\n        var roundOffset = offset > 0 ? Math.floor(offset) : Math.ceil(offset);\r\n        var k;\r\n        var tMat = this.tr.v.props;\r\n        var pProps = this.pMatrix.props;\r\n        var rProps = this.rMatrix.props;\r\n        var sProps = this.sMatrix.props;\r\n        this.pMatrix.reset();\r\n        this.rMatrix.reset();\r\n        this.sMatrix.reset();\r\n        this.tMatrix.reset();\r\n        this.matrix.reset();\r\n        var iteration = 0;\r\n\r\n        if(offset > 0) {\r\n            while(iteration<roundOffset){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\r\n                iteration += 1;\r\n            }\r\n            if(offsetModulo){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, offsetModulo, false);\r\n                iteration += offsetModulo;\r\n            }\r\n        } else if(offset < 0) {\r\n            while(iteration>roundOffset){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, true);\r\n                iteration -= 1;\r\n            }\r\n            if(offsetModulo){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, - offsetModulo, true);\r\n                iteration -= offsetModulo;\r\n            }\r\n        }\r\n        i = this.data.m === 1 ? 0 : this._currentCopies - 1;\r\n        dir = this.data.m === 1 ? 1 : -1;\r\n        cont = this._currentCopies;\r\n        var j, jLen;\r\n        while(cont){\r\n            items = this.elemsData[i].it;\r\n            itemsTransform = items[items.length - 1].transform.mProps.v.props;\r\n            jLen = itemsTransform.length;\r\n            items[items.length - 1].transform.mProps._mdf = true;\r\n            items[items.length - 1].transform.op._mdf = true;\r\n            if(iteration !== 0){\r\n                if((i !== 0 && dir === 1) || (i !== this._currentCopies - 1 && dir === -1)){\r\n                    this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\r\n                }\r\n                this.matrix.transform(rProps[0],rProps[1],rProps[2],rProps[3],rProps[4],rProps[5],rProps[6],rProps[7],rProps[8],rProps[9],rProps[10],rProps[11],rProps[12],rProps[13],rProps[14],rProps[15]);\r\n                this.matrix.transform(sProps[0],sProps[1],sProps[2],sProps[3],sProps[4],sProps[5],sProps[6],sProps[7],sProps[8],sProps[9],sProps[10],sProps[11],sProps[12],sProps[13],sProps[14],sProps[15]);\r\n                this.matrix.transform(pProps[0],pProps[1],pProps[2],pProps[3],pProps[4],pProps[5],pProps[6],pProps[7],pProps[8],pProps[9],pProps[10],pProps[11],pProps[12],pProps[13],pProps[14],pProps[15]);\r\n                \r\n                for(j=0;j<jLen;j+=1) {\r\n                    itemsTransform[j] = this.matrix.props[j];\r\n                }\r\n                this.matrix.reset();\r\n            } else {\r\n                this.matrix.reset();\r\n                for(j=0;j<jLen;j+=1) {\r\n                    itemsTransform[j] = this.matrix.props[j];\r\n                }\r\n            }\r\n            iteration += 1;\r\n            cont -= 1;\r\n            i += dir;\r\n        }\r\n    } else {\r\n        cont = this._currentCopies;\r\n        i = 0;\r\n        dir = 1;\r\n        while(cont){\r\n            items = this.elemsData[i].it;\r\n            itemsTransform = items[items.length - 1].transform.mProps.v.props;\r\n            items[items.length - 1].transform.mProps._mdf = false;\r\n            items[items.length - 1].transform.op._mdf = false;\r\n            cont -= 1;\r\n            i += dir;\r\n        }\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.addShape = function(){};\r\n\r\nShapeModifiers.registerModifier('rp',RepeaterModifier);\r\nfunction ShapeCollection(){\r\n\tthis._length = 0;\r\n\tthis._maxLength = 4;\r\n\tthis.shapes = createSizedArray(this._maxLength);\r\n}\r\n\r\nShapeCollection.prototype.addShape = function(shapeData){\r\n\tif(this._length === this._maxLength){\r\n\t\tthis.shapes = this.shapes.concat(createSizedArray(this._maxLength));\r\n\t\tthis._maxLength *= 2;\r\n\t}\r\n\tthis.shapes[this._length] = shapeData;\r\n\tthis._length += 1;\r\n};\r\n\r\nShapeCollection.prototype.releaseShapes = function(){\r\n\tvar i;\r\n\tfor(i = 0; i < this._length; i += 1) {\r\n\t\tshape_pool.release(this.shapes[i]);\r\n\t}\r\n\tthis._length = 0;\r\n};\r\nfunction DashProperty(elem, data, renderer, dynamicProperties) {\r\n    this.elem = elem;\r\n    this.frameId = -1;\r\n    this.dataProps = createSizedArray(data.length);\r\n    this.renderer = renderer;\r\n    this._mdf = false;\r\n    this.k = false;\r\n    this.dashStr = '';\r\n    this.dashArray = createTypedArray('float32',  data.length - 1);\r\n    this.dashoffset = createTypedArray('float32',  1);\r\n    var i, len = data.length, prop;\r\n    for(i=0;i<len;i+=1){\r\n        prop = PropertyFactory.getProp(elem,data[i].v,0, 0, dynamicProperties);\r\n        this.k = prop.k ? true : this.k;\r\n        this.dataProps[i] = {n:data[i].n,p:prop};\r\n    }\r\n    if(this.k){\r\n        dynamicProperties.push(this);\r\n    }else{\r\n        this.getValue(true);\r\n    }\r\n}\r\n\r\nDashProperty.prototype.getValue = function(forceRender) {\r\n    if(this.elem.globalData.frameId === this.frameId && !forceRender){\r\n        return;\r\n    }\r\n    var i = 0, len = this.dataProps.length;\r\n    this._mdf = false;\r\n    this.frameId = this.elem.globalData.frameId;\r\n    while(i<len){\r\n        if(this.dataProps[i].p._mdf){\r\n            this._mdf = !forceRender;\r\n            break;\r\n        }\r\n        i+=1;\r\n    }\r\n    if(this._mdf || forceRender){\r\n        if(this.renderer === 'svg') {\r\n            this.dashStr = '';\r\n        }\r\n        for(i=0;i<len;i+=1){\r\n            if(this.dataProps[i].n != 'o'){\r\n                if(this.renderer === 'svg') {\r\n                    this.dashStr += ' ' + this.dataProps[i].p.v;\r\n                }else{\r\n                    this.dashArray[i] = this.dataProps[i].p.v;\r\n                }\r\n            }else{\r\n                this.dashoffset[0] = this.dataProps[i].p.v;\r\n            }\r\n        }\r\n    }\r\n};\r\nfunction GradientProperty(elem,data,arr){\r\n    this.prop = PropertyFactory.getProp(elem,data.k,1,null,[]);\r\n    this.data = data;\r\n    this.k = this.prop.k;\r\n    this.c = createTypedArray('uint8c', data.p*4);\r\n    var cLength = data.k.k[0].s ? (data.k.k[0].s.length - data.p*4) : data.k.k.length - data.p*4;\r\n    this.o = createTypedArray('float32', cLength);\r\n    this._cmdf = false;\r\n    this._omdf = false;\r\n    this._collapsable = this.checkCollapsable();\r\n    this._hasOpacity = cLength;\r\n    this._mdf = false;\r\n    if(this.prop.k){\r\n        arr.push(this);\r\n    }\r\n    this.getValue(true);\r\n}\r\n\r\nGradientProperty.prototype.comparePoints = function(values, points) {\r\n    var i = 0, len = this.o.length/2, diff;\r\n    while(i < len) {\r\n        diff = Math.abs(values[i*4] - values[points*4 + i*2]);\r\n        if(diff > 0.01){\r\n            return false;\r\n        }\r\n        i += 1;\r\n    }\r\n    return true;\r\n};\r\n\r\nGradientProperty.prototype.checkCollapsable = function() {\r\n    if (this.o.length/2 !== this.c.length/4) {\r\n        return false;\r\n    }\r\n    if (this.data.k.k[0].s) {\r\n        var i = 0, len = this.data.k.k.length;\r\n        while (i < len) {\r\n            if (!this.comparePoints(this.data.k.k[i].s, this.data.p)) {\r\n                return false;\r\n            }\r\n            i += 1;\r\n        }\r\n    } else if(!this.comparePoints(this.data.k.k, this.data.p)) {\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\n\r\nGradientProperty.prototype.getValue = function(forceRender){\r\n    this.prop.getValue();\r\n    this._mdf = false;\r\n    this._cmdf = false;\r\n    this._omdf = false;\r\n    if(this.prop._mdf || forceRender){\r\n        var i, len = this.data.p*4;\r\n        var mult, val;\r\n        for(i=0;i<len;i+=1){\r\n            mult = i%4 === 0 ? 100 : 255;\r\n            val = Math.round(this.prop.v[i]*mult);\r\n            if(this.c[i] !== val){\r\n                this.c[i] = val;\r\n                this._cmdf = !forceRender;\r\n            }\r\n        }\r\n        if(this.o.length){\r\n            len = this.prop.v.length;\r\n            for(i=this.data.p*4;i<len;i+=1){\r\n                mult = i%2 === 0 ? 100 : 1;\r\n                val = i%2 === 0 ?  Math.round(this.prop.v[i]*100):this.prop.v[i];\r\n                if(this.o[i-this.data.p*4] !== val){\r\n                    this.o[i-this.data.p*4] = val;\r\n                    this._omdf = !forceRender;\r\n                }\r\n            }\r\n        }\r\n        this._mdf = !forceRender;\r\n    }\r\n};\r\nvar ImagePreloader = (function(){\r\n\r\n    function imageLoaded(){\r\n        this.loadedAssets += 1;\r\n        if(this.loadedAssets === this.totalImages){\r\n            if(this.imagesLoadedCb) {\r\n                this.imagesLoadedCb(null);\r\n            }\r\n        }\r\n    }\r\n\r\n    function getAssetsPath(assetData){\r\n        var path = '';\r\n        if(this.assetsPath){\r\n            var imagePath = assetData.p;\r\n            if(imagePath.indexOf('images/') !== -1){\r\n                imagePath = imagePath.split('/')[1];\r\n            }\r\n            path = this.assetsPath + imagePath;\r\n        } else {\r\n            path = this.path;\r\n            path += assetData.u ? assetData.u : '';\r\n            path += assetData.p;\r\n        }\r\n        return path;\r\n    }\r\n\r\n    function loadImage(path){\r\n        var img = createTag('img');\r\n        img.addEventListener('load', imageLoaded.bind(this), false);\r\n        img.addEventListener('error', imageLoaded.bind(this), false);\r\n        img.src = path;\r\n    }\r\n    function loadAssets(assets, cb){\r\n        this.imagesLoadedCb = cb;\r\n        this.totalAssets = assets.length;\r\n        var i;\r\n        for(i=0;i<this.totalAssets;i+=1){\r\n            if(!assets[i].layers){\r\n                loadImage.bind(this)(getAssetsPath.bind(this)(assets[i]));\r\n                this.totalImages += 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    function setPath(path){\r\n        this.path = path || '';\r\n    }\r\n\r\n    function setAssetsPath(path){\r\n        this.assetsPath = path || '';\r\n    }\r\n\r\n    function destroy() {\r\n        this.imagesLoadedCb = null;\r\n    }\r\n\r\n    return function ImagePreloader(){\r\n        this.loadAssets = loadAssets;\r\n        this.setAssetsPath = setAssetsPath;\r\n        this.setPath = setPath;\r\n        this.destroy = destroy;\r\n        this.assetsPath = '';\r\n        this.path = '';\r\n        this.totalAssets = 0;\r\n        this.totalImages = 0;\r\n        this.loadedAssets = 0;\r\n        this.imagesLoadedCb = null;\r\n    };\r\n}());\r\nvar featureSupport = (function(){\r\n\tvar ob = {\r\n\t\tmaskType: true\r\n\t};\r\n\tif (/MSIE 10/i.test(navigator.userAgent) || /MSIE 9/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /Edge\\/\\d./i.test(navigator.userAgent)) {\r\n\t   ob.maskType = false;\r\n\t}\r\n\treturn ob;\r\n}());\r\nvar filtersFactory = (function(){\r\n\tvar ob = {};\r\n\tob.createFilter = createFilter;\r\n\tob.createAlphaToLuminanceFilter = createAlphaToLuminanceFilter;\r\n\r\n\tfunction createFilter(filId){\r\n        \tvar fil = createNS('filter');\r\n        \tfil.setAttribute('id',filId);\r\n                fil.setAttribute('filterUnits','objectBoundingBox');\r\n                fil.setAttribute('x','0%');\r\n                fil.setAttribute('y','0%');\r\n                fil.setAttribute('width','100%');\r\n                fil.setAttribute('height','100%');\r\n                return fil;\r\n\t}\r\n\r\n\tfunction createAlphaToLuminanceFilter(){\r\n                var feColorMatrix = createNS('feColorMatrix');\r\n                feColorMatrix.setAttribute('type','matrix');\r\n                feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n                feColorMatrix.setAttribute('values','0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1');\r\n                return feColorMatrix;\r\n\t}\r\n\r\n\treturn ob;\r\n}());\r\nfunction TextAnimatorProperty(textData, renderType, elem){\r\n    this._mdf = false;\r\n    this._isFirstFrame = true;\r\n\tthis._hasMaskedPath = false;\r\n\tthis._frameId = -1;\r\n\tthis._dynamicProperties = [];\r\n\tthis._textData = textData;\r\n\tthis._renderType = renderType;\r\n\tthis._elem = elem;\r\n\tthis._animatorsData = createSizedArray(this._textData.a.length);\r\n\tthis._pathData = {};\r\n\tthis._moreOptions = {\r\n\t\talignment: {}\r\n\t};\r\n\tthis.renderedLetters = [];\r\n    this.lettersChangedFlag = false;\r\n\r\n}\r\n\r\nTextAnimatorProperty.prototype.searchProperties = function(dynamicProperties){\r\n    var i, len = this._textData.a.length, animatorProps;\r\n    var getProp = PropertyFactory.getProp;\r\n    for(i=0;i<len;i+=1){\r\n        animatorProps = this._textData.a[i];\r\n        this._animatorsData[i] = new TextAnimatorDataProperty(this._elem, animatorProps, this._dynamicProperties);\r\n    }\r\n    if(this._textData.p && 'm' in this._textData.p){\r\n        this._pathData = {\r\n            f: getProp(this._elem,this._textData.p.f,0,0,this._dynamicProperties),\r\n            l: getProp(this._elem,this._textData.p.l,0,0,this._dynamicProperties),\r\n            r: this._textData.p.r,\r\n            m: this._elem.maskManager.getMaskProperty(this._textData.p.m)\r\n        };\r\n        this._hasMaskedPath = true;\r\n    } else {\r\n        this._hasMaskedPath = false;\r\n    }\r\n    this._moreOptions.alignment = getProp(this._elem,this._textData.m.a,1,0,this._dynamicProperties);\r\n    if(this._dynamicProperties.length) {\r\n    \tdynamicProperties.push(this);\r\n    }\r\n};\r\n\r\nTextAnimatorProperty.prototype.getMeasures = function(documentData, lettersChangedFlag){\r\n    this.lettersChangedFlag = lettersChangedFlag;\r\n    if(!this._mdf && !this._isFirstFrame && !lettersChangedFlag && (!this._hasMaskedPath || !this._pathData.m._mdf)) {\r\n        return;\r\n    }\r\n    this._isFirstFrame = false;\r\n    var alignment = this._moreOptions.alignment.v;\r\n    var animators = this._animatorsData;\r\n    var textData = this._textData;\r\n    var matrixHelper = this.mHelper;\r\n    var renderType = this._renderType;\r\n    var renderedLettersCount = this.renderedLetters.length;\r\n    var data = this.data;\r\n    var xPos,yPos;\r\n    var i, len;\r\n    var letters = documentData.l, pathInfo, currentLength, currentPoint, segmentLength, flag, pointInd, segmentInd, prevPoint, points, segments, partialLength, totalLength, perc, tanAngle, mask;\r\n    if(this._hasMaskedPath) {\r\n        mask = this._pathData.m;\r\n        if(!this._pathData.n || this._pathData._mdf){\r\n            var paths = mask.v;\r\n            if(this._pathData.r){\r\n                paths = paths.reverse();\r\n            }\r\n            // TODO: release bezier data cached from previous pathInfo: this._pathData.pi\r\n            pathInfo = {\r\n                tLength: 0,\r\n                segments: []\r\n            };\r\n            len = paths._length - 1;\r\n            var pathData;\r\n            totalLength = 0;\r\n            for (i = 0; i < len; i += 1) {\r\n                pathData = {\r\n                    s: paths.v[i],\r\n                    e: paths.v[i + 1],\r\n                    to: [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]],\r\n                    ti: [paths.i[i + 1][0] - paths.v[i + 1][0], paths.i[i + 1][1] - paths.v[i + 1][1]]\r\n                };\r\n                bez.buildBezierData(pathData);\r\n                pathInfo.tLength += pathData.bezierData.segmentLength;\r\n                pathInfo.segments.push(pathData);\r\n                totalLength += pathData.bezierData.segmentLength;\r\n            }\r\n            i = len;\r\n            if (mask.v.c) {\r\n                pathData = {\r\n                    s: paths.v[i],\r\n                    e: paths.v[0],\r\n                    to: [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]],\r\n                    ti: [paths.i[0][0] - paths.v[0][0], paths.i[0][1] - paths.v[0][1]]\r\n                };\r\n                bez.buildBezierData(pathData);\r\n                pathInfo.tLength += pathData.bezierData.segmentLength;\r\n                pathInfo.segments.push(pathData);\r\n                totalLength += pathData.bezierData.segmentLength;\r\n            }\r\n            this._pathData.pi = pathInfo;\r\n        }\r\n        pathInfo = this._pathData.pi;\r\n\r\n        currentLength = this._pathData.f.v;\r\n        segmentInd = 0;\r\n        pointInd = 1;\r\n        segmentLength = 0;\r\n        flag = true;\r\n        segments = pathInfo.segments;\r\n        if (currentLength < 0 && mask.v.c) {\r\n            if (pathInfo.tLength < Math.abs(currentLength)) {\r\n                currentLength = -Math.abs(currentLength) % pathInfo.tLength;\r\n            }\r\n            segmentInd = segments.length - 1;\r\n            points = segments[segmentInd].bezierData.points;\r\n            pointInd = points.length - 1;\r\n            while (currentLength < 0) {\r\n                currentLength += points[pointInd].partialLength;\r\n                pointInd -= 1;\r\n                if (pointInd < 0) {\r\n                    segmentInd -= 1;\r\n                    points = segments[segmentInd].bezierData.points;\r\n                    pointInd = points.length - 1;\r\n                }\r\n            }\r\n\r\n        }\r\n        points = segments[segmentInd].bezierData.points;\r\n        prevPoint = points[pointInd - 1];\r\n        currentPoint = points[pointInd];\r\n        partialLength = currentPoint.partialLength;\r\n    }\r\n\r\n\r\n    len = letters.length;\r\n    xPos = 0;\r\n    yPos = 0;\r\n    var yOff = documentData.finalSize * 1.2 * 0.714;\r\n    var firstLine = true;\r\n    var animatorProps, animatorSelector;\r\n    var j, jLen;\r\n    var letterValue;\r\n\r\n    jLen = animators.length;\r\n    var lastLetter;\r\n\r\n    var mult, ind = -1, offf, xPathPos, yPathPos;\r\n    var initPathPos = currentLength,initSegmentInd = segmentInd, initPointInd = pointInd, currentLine = -1;\r\n    var elemOpacity;\r\n    var sc,sw,fc,k;\r\n    var lineLength = 0;\r\n    var letterSw,letterSc,letterFc,letterM = '',letterP = this.defaultPropsArray,letterO;\r\n    for( i = 0; i < len; i += 1) {\r\n        matrixHelper.reset();\r\n        elemOpacity = 1;\r\n        if(letters[i].n) {\r\n            xPos = 0;\r\n            yPos += documentData.yOffset;\r\n            yPos += firstLine ? 1 : 0;\r\n            currentLength = initPathPos ;\r\n            firstLine = false;\r\n            lineLength = 0;\r\n            if(this._hasMaskedPath) {\r\n                segmentInd = initSegmentInd;\r\n                pointInd = initPointInd;\r\n                points = segments[segmentInd].bezierData.points;\r\n                prevPoint = points[pointInd - 1];\r\n                currentPoint = points[pointInd];\r\n                partialLength = currentPoint.partialLength;\r\n                segmentLength = 0;\r\n            }\r\n            letterO = letterSw = letterFc = letterM = '';\r\n            letterP = this.defaultPropsArray;\r\n        }else{\r\n            if(this._hasMaskedPath) {\r\n                if(currentLine !== letters[i].line){\r\n                    switch(documentData.j){\r\n                        case 1:\r\n                            currentLength += totalLength - documentData.lineWidths[letters[i].line];\r\n                            break;\r\n                        case 2:\r\n                            currentLength += (totalLength - documentData.lineWidths[letters[i].line])/2;\r\n                            break;\r\n                    }\r\n                    currentLine = letters[i].line;\r\n                }\r\n                if (ind !== letters[i].ind) {\r\n                    if (letters[ind]) {\r\n                        currentLength += letters[ind].extra;\r\n                    }\r\n                    currentLength += letters[i].an / 2;\r\n                    ind = letters[i].ind;\r\n                }\r\n                currentLength += alignment[0] * letters[i].an / 200;\r\n                var animatorOffset = 0;\r\n                for (j = 0; j < jLen; j += 1) {\r\n                    animatorProps = animators[j].a;\r\n                    if (animatorProps.p.propType) {\r\n                        animatorSelector = animators[j].s;\r\n                        mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                        if(mult.length){\r\n                            animatorOffset += animatorProps.p.v[0] * mult[0];\r\n                        } else{\r\n                            animatorOffset += animatorProps.p.v[0] * mult;\r\n                        }\r\n\r\n                    }\r\n                    if (animatorProps.a.propType) {\r\n                        animatorSelector = animators[j].s;\r\n                        mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                        if(mult.length){\r\n                            animatorOffset += animatorProps.a.v[0] * mult[0];\r\n                        } else{\r\n                            animatorOffset += animatorProps.a.v[0] * mult;\r\n                        }\r\n\r\n                    }\r\n                }\r\n                flag = true;\r\n                while (flag) {\r\n                    if (segmentLength + partialLength >= currentLength + animatorOffset || !points) {\r\n                        perc = (currentLength + animatorOffset - segmentLength) / currentPoint.partialLength;\r\n                        xPathPos = prevPoint.point[0] + (currentPoint.point[0] - prevPoint.point[0]) * perc;\r\n                        yPathPos = prevPoint.point[1] + (currentPoint.point[1] - prevPoint.point[1]) * perc;\r\n                        matrixHelper.translate(-alignment[0]*letters[i].an/200, -(alignment[1] * yOff / 100));\r\n                        flag = false;\r\n                    } else if (points) {\r\n                        segmentLength += currentPoint.partialLength;\r\n                        pointInd += 1;\r\n                        if (pointInd >= points.length) {\r\n                            pointInd = 0;\r\n                            segmentInd += 1;\r\n                            if (!segments[segmentInd]) {\r\n                                if (mask.v.c) {\r\n                                    pointInd = 0;\r\n                                    segmentInd = 0;\r\n                                    points = segments[segmentInd].bezierData.points;\r\n                                } else {\r\n                                    segmentLength -= currentPoint.partialLength;\r\n                                    points = null;\r\n                                }\r\n                            } else {\r\n                                points = segments[segmentInd].bezierData.points;\r\n                            }\r\n                        }\r\n                        if (points) {\r\n                            prevPoint = currentPoint;\r\n                            currentPoint = points[pointInd];\r\n                            partialLength = currentPoint.partialLength;\r\n                        }\r\n                    }\r\n                }\r\n                offf = letters[i].an / 2 - letters[i].add;\r\n                matrixHelper.translate(-offf, 0, 0);\r\n            } else {\r\n                offf = letters[i].an/2 - letters[i].add;\r\n                matrixHelper.translate(-offf,0,0);\r\n\r\n                // Grouping alignment\r\n                matrixHelper.translate(-alignment[0]*letters[i].an/200, -alignment[1]*yOff/100, 0);\r\n            }\r\n\r\n            lineLength += letters[i].l/2;\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if (animatorProps.t.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    if(this._hasMaskedPath) {\r\n                        if(mult.length) {\r\n                            currentLength += animatorProps.t*mult[0];\r\n                        } else {\r\n                            currentLength += animatorProps.t*mult;\r\n                        }\r\n                    }else{\r\n                        if(mult.length) {\r\n                            xPos += animatorProps.t.v*mult[0];\r\n                        } else {\r\n                            xPos += animatorProps.t.v*mult;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            lineLength += letters[i].l/2;\r\n            if(documentData.strokeWidthAnim) {\r\n                sw = documentData.sw || 0;\r\n            }\r\n            if(documentData.strokeColorAnim) {\r\n                if(documentData.sc){\r\n                    sc = [documentData.sc[0], documentData.sc[1], documentData.sc[2]];\r\n                }else{\r\n                    sc = [0,0,0];\r\n                }\r\n            }\r\n            if(documentData.fillColorAnim && documentData.fc) {\r\n                fc = [documentData.fc[0], documentData.fc[1], documentData.fc[2]];\r\n            }\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if (animatorProps.a.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n\r\n                    if(mult.length){\r\n                        matrixHelper.translate(-animatorProps.a.v[0]*mult[0], -animatorProps.a.v[1]*mult[1], animatorProps.a.v[2]*mult[2]);\r\n                    } else {\r\n                        matrixHelper.translate(-animatorProps.a.v[0]*mult, -animatorProps.a.v[1]*mult, animatorProps.a.v[2]*mult);\r\n                    }\r\n                }\r\n            }\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if (animatorProps.s.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    if(mult.length){\r\n                        matrixHelper.scale(1+((animatorProps.s.v[0]-1)*mult[0]),1+((animatorProps.s.v[1]-1)*mult[1]),1);\r\n                    } else {\r\n                        matrixHelper.scale(1+((animatorProps.s.v[0]-1)*mult),1+((animatorProps.s.v[1]-1)*mult),1);\r\n                    }\r\n                }\r\n            }\r\n            for(j=0;j<jLen;j+=1) {\r\n                animatorProps = animators[j].a;\r\n                animatorSelector = animators[j].s;\r\n                mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                if (animatorProps.sk.propType) {\r\n                    if(mult.length) {\r\n                        matrixHelper.skewFromAxis(-animatorProps.sk.v * mult[0], animatorProps.sa.v * mult[1]);\r\n                    } else {\r\n                        matrixHelper.skewFromAxis(-animatorProps.sk.v * mult, animatorProps.sa.v * mult);\r\n                    }\r\n                }\r\n                if (animatorProps.r.propType) {\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateZ(-animatorProps.r.v * mult[2]);\r\n                    } else {\r\n                        matrixHelper.rotateZ(-animatorProps.r.v * mult);\r\n                    }\r\n                }\r\n                if (animatorProps.ry.propType) {\r\n\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateY(animatorProps.ry.v*mult[1]);\r\n                    }else{\r\n                        matrixHelper.rotateY(animatorProps.ry.v*mult);\r\n                    }\r\n                }\r\n                if (animatorProps.rx.propType) {\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateX(animatorProps.rx.v*mult[0]);\r\n                    } else {\r\n                        matrixHelper.rotateX(animatorProps.rx.v*mult);\r\n                    }\r\n                }\r\n                if (animatorProps.o.propType) {\r\n                    if(mult.length) {\r\n                        elemOpacity += ((animatorProps.o.v)*mult[0] - elemOpacity)*mult[0];\r\n                    } else {\r\n                        elemOpacity += ((animatorProps.o.v)*mult - elemOpacity)*mult;\r\n                    }\r\n                }\r\n                if (documentData.strokeWidthAnim && animatorProps.sw.propType) {\r\n                    if(mult.length) {\r\n                        sw += animatorProps.sw.v*mult[0];\r\n                    } else {\r\n                        sw += animatorProps.sw.v*mult;\r\n                    }\r\n                }\r\n                if (documentData.strokeColorAnim && animatorProps.sc.propType) {\r\n                    for(k=0;k<3;k+=1){\r\n                        if(mult.length) {\r\n                            sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k])*mult[0];\r\n                        } else {\r\n                            sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k])*mult;\r\n                        }\r\n                    }\r\n                }\r\n                if (documentData.fillColorAnim && documentData.fc) {\r\n                    if(animatorProps.fc.propType){\r\n                        for(k=0;k<3;k+=1){\r\n                            if(mult.length) {\r\n                                fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k])*mult[0];\r\n                            } else {\r\n                                fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k])*mult;\r\n                            }\r\n                        }\r\n                    }\r\n                    if(animatorProps.fh.propType){\r\n                        if(mult.length) {\r\n                            fc = addHueToRGB(fc,animatorProps.fh.v*mult[0]);\r\n                        } else {\r\n                            fc = addHueToRGB(fc,animatorProps.fh.v*mult);\r\n                        }\r\n                    }\r\n                    if(animatorProps.fs.propType){\r\n                        if(mult.length) {\r\n                            fc = addSaturationToRGB(fc,animatorProps.fs.v*mult[0]);\r\n                        } else {\r\n                            fc = addSaturationToRGB(fc,animatorProps.fs.v*mult);\r\n                        }\r\n                    }\r\n                    if(animatorProps.fb.propType){\r\n                        if(mult.length) {\r\n                            fc = addBrightnessToRGB(fc,animatorProps.fb.v*mult[0]);\r\n                        } else {\r\n                            fc = addBrightnessToRGB(fc,animatorProps.fb.v*mult);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n\r\n                if (animatorProps.p.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    if(this._hasMaskedPath) {\r\n                        if(mult.length) {\r\n                            matrixHelper.translate(0, animatorProps.p.v[1] * mult[0], -animatorProps.p.v[2] * mult[1]);\r\n                        } else {\r\n                            matrixHelper.translate(0, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\r\n                        }\r\n                    }else{\r\n                        if(mult.length) {\r\n                            matrixHelper.translate(animatorProps.p.v[0] * mult[0], animatorProps.p.v[1] * mult[1], -animatorProps.p.v[2] * mult[2]);\r\n                        } else {\r\n                            matrixHelper.translate(animatorProps.p.v[0] * mult, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(documentData.strokeWidthAnim){\r\n                letterSw = sw < 0 ? 0 : sw;\r\n            }\r\n            if(documentData.strokeColorAnim){\r\n                letterSc = 'rgb('+Math.round(sc[0]*255)+','+Math.round(sc[1]*255)+','+Math.round(sc[2]*255)+')';\r\n            }\r\n            if(documentData.fillColorAnim && documentData.fc){\r\n                letterFc = 'rgb('+Math.round(fc[0]*255)+','+Math.round(fc[1]*255)+','+Math.round(fc[2]*255)+')';\r\n            }\r\n\r\n            if(this._hasMaskedPath) {\r\n                matrixHelper.translate(0,-documentData.ls);\r\n\r\n                matrixHelper.translate(0, alignment[1]*yOff/100 + yPos,0);\r\n                if (textData.p.p) {\r\n                    tanAngle = (currentPoint.point[1] - prevPoint.point[1]) / (currentPoint.point[0] - prevPoint.point[0]);\r\n                    var rot = Math.atan(tanAngle) * 180 / Math.PI;\r\n                    if (currentPoint.point[0] < prevPoint.point[0]) {\r\n                        rot += 180;\r\n                    }\r\n                    matrixHelper.rotate(-rot * Math.PI / 180);\r\n                }\r\n                matrixHelper.translate(xPathPos, yPathPos, 0);\r\n                currentLength -= alignment[0]*letters[i].an/200;\r\n                if(letters[i+1] && ind !== letters[i+1].ind){\r\n                    currentLength += letters[i].an / 2;\r\n                    currentLength += documentData.tr/1000*documentData.finalSize;\r\n                }\r\n            }else{\r\n\r\n                matrixHelper.translate(xPos,yPos,0);\r\n\r\n                if(documentData.ps){\r\n                    //matrixHelper.translate(documentData.ps[0],documentData.ps[1],0);\r\n                    matrixHelper.translate(documentData.ps[0],documentData.ps[1] + documentData.ascent,0);\r\n                }\r\n                switch(documentData.j){\r\n                    case 1:\r\n                        matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]),0,0);\r\n                        break;\r\n                    case 2:\r\n                        matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line])/2,0,0);\r\n                        break;\r\n                }\r\n                matrixHelper.translate(0,-documentData.ls);\r\n                matrixHelper.translate(offf,0,0);\r\n                matrixHelper.translate(alignment[0]*letters[i].an/200,alignment[1]*yOff/100,0);\r\n                xPos += letters[i].l + documentData.tr/1000*documentData.finalSize;\r\n            }\r\n            if(renderType === 'html'){\r\n                letterM = matrixHelper.toCSS();\r\n            }else if(renderType === 'svg'){\r\n                letterM = matrixHelper.to2dCSS();\r\n            }else{\r\n                letterP = [matrixHelper.props[0],matrixHelper.props[1],matrixHelper.props[2],matrixHelper.props[3],matrixHelper.props[4],matrixHelper.props[5],matrixHelper.props[6],matrixHelper.props[7],matrixHelper.props[8],matrixHelper.props[9],matrixHelper.props[10],matrixHelper.props[11],matrixHelper.props[12],matrixHelper.props[13],matrixHelper.props[14],matrixHelper.props[15]];\r\n            }\r\n            letterO = elemOpacity;\r\n        }\r\n\r\n        if(renderedLettersCount <= i) {\r\n            letterValue = new LetterProps(letterO,letterSw,letterSc,letterFc,letterM,letterP);\r\n            this.renderedLetters.push(letterValue);\r\n            renderedLettersCount += 1;\r\n            this.lettersChangedFlag = true;\r\n        } else {\r\n            letterValue = this.renderedLetters[i];\r\n            this.lettersChangedFlag = letterValue.update(letterO, letterSw, letterSc, letterFc, letterM, letterP) || this.lettersChangedFlag;\r\n        }\r\n    }\r\n};\r\n\r\nTextAnimatorProperty.prototype.getValue = function(){\r\n\tif(this._elem.globalData.frameId === this._frameId){\r\n        return;\r\n    }\r\n    this._frameId = this._elem.globalData.frameId;\r\n\tvar i, len = this._dynamicProperties.length;\r\n    this._mdf = false;\r\n\tfor(i = 0; i < len; i += 1) {\r\n\t\tthis._dynamicProperties[i].getValue();\r\n        this._mdf = this._dynamicProperties[i]._mdf || this._mdf;\r\n\t}\r\n};\r\n\r\nTextAnimatorProperty.prototype.mHelper = new Matrix();\r\nTextAnimatorProperty.prototype.defaultPropsArray = [];\r\nfunction TextAnimatorDataProperty(elem, animatorProps, dynamicProperties) {\r\n\tvar defaultData = {propType:false};\r\n\tvar getProp = PropertyFactory.getProp;\r\n\tvar textAnimator_animatables = animatorProps.a;\r\n\tthis.a = {\r\n\t\tr: textAnimator_animatables.r ? getProp(elem, textAnimator_animatables.r, 0, degToRads, dynamicProperties) : defaultData,\r\n\t\trx: textAnimator_animatables.rx ? getProp(elem, textAnimator_animatables.rx, 0, degToRads, dynamicProperties) : defaultData,\r\n\t\try: textAnimator_animatables.ry ? getProp(elem, textAnimator_animatables.ry, 0, degToRads, dynamicProperties) : defaultData,\r\n\t\tsk: textAnimator_animatables.sk ? getProp(elem, textAnimator_animatables.sk, 0, degToRads, dynamicProperties) : defaultData,\r\n\t\tsa: textAnimator_animatables.sa ? getProp(elem, textAnimator_animatables.sa, 0, degToRads, dynamicProperties) : defaultData,\r\n\t\ts: textAnimator_animatables.s ? getProp(elem, textAnimator_animatables.s, 1, 0.01, dynamicProperties) : defaultData,\r\n\t\ta: textAnimator_animatables.a ? getProp(elem, textAnimator_animatables.a, 1, 0, dynamicProperties) : defaultData,\r\n\t\to: textAnimator_animatables.o ? getProp(elem, textAnimator_animatables.o, 0, 0.01, dynamicProperties) : defaultData,\r\n\t\tp: textAnimator_animatables.p ? getProp(elem,textAnimator_animatables.p, 1, 0, dynamicProperties) : defaultData,\r\n\t\tsw: textAnimator_animatables.sw ? getProp(elem, textAnimator_animatables.sw, 0, 0, dynamicProperties) : defaultData,\r\n\t\tsc: textAnimator_animatables.sc ? getProp(elem, textAnimator_animatables.sc, 1, 0, dynamicProperties) : defaultData,\r\n\t\tfc: textAnimator_animatables.fc ? getProp(elem, textAnimator_animatables.fc, 1, 0, dynamicProperties) : defaultData,\r\n\t\tfh: textAnimator_animatables.fh ? getProp(elem, textAnimator_animatables.fh, 0, 0, dynamicProperties) : defaultData,\r\n\t\tfs: textAnimator_animatables.fs ? getProp(elem, textAnimator_animatables.fs, 0, 0.01, dynamicProperties) : defaultData,\r\n\t\tfb: textAnimator_animatables.fb ? getProp(elem, textAnimator_animatables.fb, 0, 0.01, dynamicProperties) : defaultData,\r\n\t\tt: textAnimator_animatables.t ? getProp(elem, textAnimator_animatables.t, 0, 0, dynamicProperties) : defaultData\r\n\t};\r\n\r\n\tthis.s = TextSelectorProp.getTextSelectorProp(elem,animatorProps.s, dynamicProperties);\r\n    this.s.t = animatorProps.s.t;\r\n}\r\nfunction LetterProps(o, sw, sc, fc, m, p){\r\n    this.o = o;\r\n    this.sw = sw;\r\n    this.sc = sc;\r\n    this.fc = fc;\r\n    this.m = m;\r\n    this.p = p;\r\n    this._mdf = {\r\n    \to: true,\r\n    \tsw: !!sw,\r\n    \tsc: !!sc,\r\n    \tfc: !!fc,\r\n    \tm: true,\r\n    \tp: true\r\n    };\r\n}\r\n\r\nLetterProps.prototype.update = function(o, sw, sc, fc, m, p) {\r\n\tthis._mdf.o = false;\r\n\tthis._mdf.sw = false;\r\n\tthis._mdf.sc = false;\r\n\tthis._mdf.fc = false;\r\n\tthis._mdf.m = false;\r\n\tthis._mdf.p = false;\r\n\tvar updated = false;\r\n\r\n\tif(this.o !== o) {\r\n\t\tthis.o = o;\r\n\t\tthis._mdf.o = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.sw !== sw) {\r\n\t\tthis.sw = sw;\r\n\t\tthis._mdf.sw = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.sc !== sc) {\r\n\t\tthis.sc = sc;\r\n\t\tthis._mdf.sc = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.fc !== fc) {\r\n\t\tthis.fc = fc;\r\n\t\tthis._mdf.fc = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.m !== m) {\r\n\t\tthis.m = m;\r\n\t\tthis._mdf.m = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(p.length && (this.p[0] !== p[0] || this.p[1] !== p[1] || this.p[4] !== p[4] || this.p[5] !== p[5] || this.p[12] !== p[12] || this.p[13] !== p[13])) {\r\n\t\tthis.p = p;\r\n\t\tthis._mdf.p = true;\r\n\t\tupdated = true;\r\n\t}\r\n\treturn updated;\r\n};\r\nfunction TextProperty(elem, data, dynamicProperties){\r\n\tthis._frameId = initialDefaultFrame;\r\n\tthis.pv = '';\r\n\tthis.v = '';\r\n\tthis.kf = false;\r\n\tthis._isFirstFrame = true;\r\n\tthis._mdf = true;\r\n\tthis.data = data;\r\n\tthis.elem = elem;\r\n\tthis.keysIndex = -1;\r\n    this.canResize = false;\r\n    this.minimumFontSize = 1;\r\n\tthis.currentData = {\r\n\t\tascent: 0,\r\n        boxWidth: [0,0],\r\n        f: '',\r\n        fStyle: '',\r\n        fWeight: '',\r\n        fc: '',\r\n        j: '',\r\n        justifyOffset: '',\r\n        l: [],\r\n        lh: 0,\r\n        lineWidths: [],\r\n        ls: '',\r\n        of: '',\r\n        s: '',\r\n        sc: '',\r\n        sw: 0,\r\n        t: 0,\r\n        tr: 0,\r\n        sz:0,\r\n        ps:[0,0],\r\n        fillColorAnim: false,\r\n        strokeColorAnim: false,\r\n        strokeWidthAnim: false,\r\n        yOffset: 0,\r\n        __complete: false,\r\n        finalSize:0,\r\n        finalText:[],\r\n        finalLineHeight: 0\r\n\r\n\t};\r\n\tif(this.searchProperty()) {\r\n\t\tdynamicProperties.push(this);\r\n\t} else {\r\n\t\tthis.getValue(true);\r\n\t}\r\n}\r\n\r\nTextProperty.prototype.setCurrentData = function(data){\r\n\t\tvar currentData = this.currentData;\r\n        currentData.ascent = data.ascent;\r\n        currentData.boxWidth = data.boxWidth ? data.boxWidth : currentData.boxWidth;\r\n        currentData.f = data.f;\r\n        currentData.fStyle = data.fStyle;\r\n        currentData.fWeight = data.fWeight;\r\n        currentData.fc = data.fc;\r\n        currentData.j = data.j;\r\n        currentData.justifyOffset = data.justifyOffset;\r\n        currentData.l = data.l;\r\n        currentData.lh = data.lh;\r\n        currentData.lineWidths = data.lineWidths;\r\n        currentData.ls = data.ls;\r\n        currentData.of = data.of;\r\n        currentData.s = data.s;\r\n        currentData.sc = data.sc;\r\n        currentData.sw = data.sw;\r\n        currentData.sz = data.sz;\r\n        currentData.ps = data.ps;\r\n        currentData.t = data.t;\r\n        currentData.tr = data.tr;\r\n        currentData.fillColorAnim = data.fillColorAnim || currentData.fillColorAnim;\r\n        currentData.strokeColorAnim = data.strokeColorAnim || currentData.strokeColorAnim;\r\n        currentData.strokeWidthAnim = data.strokeWidthAnim || currentData.strokeWidthAnim;\r\n        currentData.yOffset = data.yOffset;\r\n        currentData.finalSize = data.finalSize;\r\n        currentData.finalLineHeight = data.finalLineHeight;\r\n        currentData.finalText = data.finalText;\r\n        currentData.__complete = false;\r\n};\r\n\r\nTextProperty.prototype.searchProperty = function() {\r\n\tthis.kf = this.data.d.k.length > 1;\r\n\treturn this.kf;\r\n};\r\n\r\nTextProperty.prototype.getValue = function(_forceRender) {\r\n\tthis._mdf = false;\r\n\tvar frameId = this.elem.globalData.frameId;\r\n\tif((frameId === this._frameId || !this.kf) && !this._isFirstFrame && !_forceRender) {\r\n\t\treturn;\r\n\t}\r\n    var textKeys = this.data.d.k, textDocumentData;\r\n    var frameNum = this.elem.comp.renderedFrame;\r\n    var i = 0, len = textKeys.length;\r\n    while(i <= len - 1) {\r\n        textDocumentData = textKeys[i].s;\r\n        if(i === len - 1 || textKeys[i+1].t > frameNum){\r\n            break;\r\n        }\r\n        i += 1;\r\n    }\r\n    if(this.keysIndex !== i) {\r\n    \tif(!textDocumentData.__complete) {\r\n            this.completeTextData(textDocumentData);\r\n        }\r\n        this.setCurrentData(textDocumentData);\r\n        this._mdf = !this._isFirstFrame;\r\n        this.pv = this.v = this.currentData.t;\r\n        this.keysIndex = i;\r\n    }\r\n\tthis._frameId = frameId;\r\n};\r\n\r\nTextProperty.prototype.buildFinalText = function(text) {\r\n    var combinedCharacters = FontManager.getCombinedCharacterCodes();\r\n    var charactersArray = [];\r\n    var i = 0, len = text.length;\r\n    while (i < len) {\r\n        if (combinedCharacters.indexOf(text.charCodeAt(i)) !== -1) {\r\n            charactersArray[charactersArray.length - 1] += text.charAt(i);\r\n        } else {\r\n            charactersArray.push(text.charAt(i));\r\n        }\r\n        i += 1;\r\n    }\r\n    return charactersArray;\r\n}\r\n\r\nTextProperty.prototype.completeTextData = function(documentData) {\r\n    documentData.__complete = true;\r\n    var fontManager = this.elem.globalData.fontManager;\r\n    var data = this.data;\r\n    var letters = [];\r\n    var i, len;\r\n    var newLineFlag, index = 0, val;\r\n    var anchorGrouping = data.m.g;\r\n    var currentSize = 0, currentPos = 0, currentLine = 0, lineWidths = [];\r\n    var lineWidth = 0;\r\n    var maxLineWidth = 0;\r\n    var j, jLen;\r\n    var fontData = fontManager.getFontByName(documentData.f);\r\n    var charData, cLength = 0;\r\n    var styles = fontData.fStyle.split(' ');\r\n\r\n    var fWeight = 'normal', fStyle = 'normal';\r\n    len = styles.length;\r\n    var styleName;\r\n    for(i=0;i<len;i+=1){\r\n        styleName = styles[i].toLowerCase();\r\n        switch(styleName) {\r\n            case 'italic':\r\n            fStyle = 'italic';\r\n            break;\r\n            case 'bold':\r\n            fWeight = '700';\r\n            break;\r\n            case 'black':\r\n            fWeight = '900';\r\n            break;\r\n            case 'medium':\r\n            fWeight = '500';\r\n            break;\r\n            case 'regular':\r\n            case 'normal':\r\n            fWeight = '400';\r\n            break;\r\n            case 'light':\r\n            case 'thin':\r\n            fWeight = '200';\r\n            break;\r\n        }\r\n    }\r\n    documentData.fWeight = fontData.fWeight || fWeight;\r\n    documentData.fStyle = fStyle;\r\n    len = documentData.t.length;\r\n    documentData.finalSize = documentData.s;\r\n    documentData.finalText = this.buildFinalText(documentData.t);\r\n    documentData.finalLineHeight = documentData.lh;\r\n    var trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n    if(documentData.sz){\r\n        var flag = true;\r\n        var boxWidth = documentData.sz[0];\r\n        var boxHeight = documentData.sz[1];\r\n        var currentHeight, finalText;\r\n        while(flag) {\r\n            finalText = this.buildFinalText(documentData.t);\r\n            currentHeight = 0;\r\n            lineWidth = 0;\r\n            len = finalText.length;\r\n            trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n            var lastSpaceIndex = -1;\r\n            for(i=0;i<len;i+=1){\r\n                newLineFlag = false;\r\n                if(finalText[i] === ' '){\r\n                    lastSpaceIndex = i;\r\n                }else if(finalText[i].charCodeAt(0) === 13){\r\n                    lineWidth = 0;\r\n                    newLineFlag = true;\r\n                    currentHeight += documentData.finalLineHeight || documentData.finalSize*1.2;\r\n                }\r\n                if(fontManager.chars){\r\n                    charData = fontManager.getCharData(finalText[i], fontData.fStyle, fontData.fFamily);\r\n                    cLength = newLineFlag ? 0 : charData.w*documentData.finalSize/100;\r\n                }else{\r\n                    //tCanvasHelper.font = documentData.s + 'px '+ fontData.fFamily;\r\n                    cLength = fontManager.measureText(finalText[i], documentData.f, documentData.finalSize);\r\n                }\r\n                if(lineWidth + cLength > boxWidth && finalText[i] !== ' '){\r\n                    if(lastSpaceIndex === -1){\r\n                        len += 1;\r\n                    } else {\r\n                        i = lastSpaceIndex;\r\n                    }\r\n                    currentHeight += documentData.finalLineHeight || documentData.finalSize*1.2;\r\n                    finalText.splice(i, lastSpaceIndex === i ? 1 : 0,\"\\r\");\r\n                    //finalText = finalText.substr(0,i) + \"\\r\" + finalText.substr(i === lastSpaceIndex ? i + 1 : i);\r\n                    lastSpaceIndex = -1;\r\n                    lineWidth = 0;\r\n                }else {\r\n                    lineWidth += cLength;\r\n                    lineWidth += trackingOffset;\r\n                }\r\n            }\r\n            currentHeight += fontData.ascent*documentData.finalSize/100;\r\n            if(this.canResize && documentData.finalSize > this.minimumFontSize && boxHeight < currentHeight) {\r\n                documentData.finalSize -= 1;\r\n                documentData.finalLineHeight = documentData.finalSize * documentData.lh / documentData.s;\r\n            } else {\r\n                documentData.finalText = finalText;\r\n                len = documentData.finalText.length;\r\n                flag = false;\r\n            }\r\n        }\r\n\r\n    }\r\n    lineWidth = - trackingOffset;\r\n    cLength = 0;\r\n    var uncollapsedSpaces = 0;\r\n    var currentChar;\r\n    for (i = 0;i < len ;i += 1) {\r\n        newLineFlag = false;\r\n        currentChar = documentData.finalText[i];\r\n        if(currentChar === ' '){\r\n            val = '\\u00A0';\r\n        }else if(currentChar.charCodeAt(0) === 13){\r\n            uncollapsedSpaces = 0;\r\n            lineWidths.push(lineWidth);\r\n            maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\r\n            lineWidth = - 2 * trackingOffset;\r\n            val = '';\r\n            newLineFlag = true;\r\n            currentLine += 1;\r\n        }else{\r\n            val = documentData.finalText[i];\r\n        }\r\n        if(fontManager.chars){\r\n            charData = fontManager.getCharData(currentChar, fontData.fStyle, fontManager.getFontByName(documentData.f).fFamily);\r\n            cLength = newLineFlag ? 0 : charData.w*documentData.finalSize/100;\r\n        }else{\r\n            //var charWidth = fontManager.measureText(val, documentData.f, documentData.finalSize);\r\n            //tCanvasHelper.font = documentData.finalSize + 'px '+ fontManager.getFontByName(documentData.f).fFamily;\r\n            cLength = fontManager.measureText(val, documentData.f, documentData.finalSize);\r\n        }\r\n\r\n        //\r\n        if(currentChar === ' '){\r\n            uncollapsedSpaces += cLength + trackingOffset;\r\n        } else {\r\n            lineWidth += cLength + trackingOffset + uncollapsedSpaces;\r\n            uncollapsedSpaces = 0;\r\n        }\r\n        letters.push({l:cLength,an:cLength,add:currentSize,n:newLineFlag, anIndexes:[], val: val, line: currentLine});\r\n        if(anchorGrouping == 2){\r\n            currentSize += cLength;\r\n            if(val === '' || val === '\\u00A0' || i === len - 1){\r\n                if(val === '' || val === '\\u00A0'){\r\n                    currentSize -= cLength;\r\n                }\r\n                while(currentPos<=i){\r\n                    letters[currentPos].an = currentSize;\r\n                    letters[currentPos].ind = index;\r\n                    letters[currentPos].extra = cLength;\r\n                    currentPos += 1;\r\n                }\r\n                index += 1;\r\n                currentSize = 0;\r\n            }\r\n        }else if(anchorGrouping == 3){\r\n            currentSize += cLength;\r\n            if(val === '' || i === len - 1){\r\n                if(val === ''){\r\n                    currentSize -= cLength;\r\n                }\r\n                while(currentPos<=i){\r\n                    letters[currentPos].an = currentSize;\r\n                    letters[currentPos].ind = index;\r\n                    letters[currentPos].extra = cLength;\r\n                    currentPos += 1;\r\n                }\r\n                currentSize = 0;\r\n                index += 1;\r\n            }\r\n        }else{\r\n            letters[index].ind = index;\r\n            letters[index].extra = 0;\r\n            index += 1;\r\n        }\r\n    }\r\n    documentData.l = letters;\r\n    maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\r\n    lineWidths.push(lineWidth);\r\n    if(documentData.sz){\r\n        documentData.boxWidth = documentData.sz[0];\r\n        documentData.justifyOffset = 0;\r\n    }else{\r\n        documentData.boxWidth = maxLineWidth;\r\n        switch(documentData.j){\r\n            case 1:\r\n                documentData.justifyOffset = - documentData.boxWidth;\r\n                break;\r\n            case 2:\r\n                documentData.justifyOffset = - documentData.boxWidth/2;\r\n                break;\r\n            default:\r\n                documentData.justifyOffset = 0;\r\n        }\r\n    }\r\n    documentData.lineWidths = lineWidths;\r\n\r\n    var animators = data.a, animatorData, letterData;\r\n    jLen = animators.length;\r\n    var based, ind, indexes = [];\r\n    for(j=0;j<jLen;j+=1){\r\n        animatorData = animators[j];\r\n        if(animatorData.a.sc){\r\n            documentData.strokeColorAnim = true;\r\n        }\r\n        if(animatorData.a.sw){\r\n            documentData.strokeWidthAnim = true;\r\n        }\r\n        if(animatorData.a.fc || animatorData.a.fh || animatorData.a.fs || animatorData.a.fb){\r\n            documentData.fillColorAnim = true;\r\n        }\r\n        ind = 0;\r\n        based = animatorData.s.b;\r\n        for(i=0;i<len;i+=1){\r\n            letterData = letters[i];\r\n            letterData.anIndexes[j] = ind;\r\n            if((based == 1 && letterData.val !== '') || (based == 2 && letterData.val !== '' && letterData.val !== '\\u00A0') || (based == 3 && (letterData.n || letterData.val == '\\u00A0' || i == len - 1)) || (based == 4 && (letterData.n || i == len - 1))){\r\n                if(animatorData.s.rn === 1){\r\n                    indexes.push(ind);\r\n                }\r\n                ind += 1;\r\n            }\r\n        }\r\n        data.a[j].s.totalChars = ind;\r\n        var currentInd = -1, newInd;\r\n        if(animatorData.s.rn === 1){\r\n            for(i = 0; i < len; i += 1){\r\n                letterData = letters[i];\r\n                if(currentInd != letterData.anIndexes[j]){\r\n                    currentInd = letterData.anIndexes[j];\r\n                    newInd = indexes.splice(Math.floor(Math.random()*indexes.length),1)[0];\r\n                }\r\n                letterData.anIndexes[j] = newInd;\r\n            }\r\n        }\r\n    }\r\n    documentData.yOffset = documentData.finalLineHeight || documentData.finalSize*1.2;\r\n    documentData.ls = documentData.ls || 0;\r\n    documentData.ascent = fontData.ascent*documentData.finalSize/100;\r\n};\r\n\r\nTextProperty.prototype.updateDocumentData = function(newData, index) {\r\n\tindex = index === undefined ? this.keysIndex : index;\r\n    var dData = this.data.d.k[index].s;\r\n    for(var s in newData) {\r\n        dData[s] = newData[s];\r\n    }\r\n    this.recalculate(index);\r\n};\r\n\r\nTextProperty.prototype.recalculate = function(index) {\r\n    var dData = this.data.d.k[index].s;\r\n    dData.__complete = false;\r\n    this.keysIndex = -1;\r\n    this.getValue(true);\r\n}\r\n\r\nTextProperty.prototype.canResizeFont = function(_canResize) {\r\n    this.canResize = _canResize;\r\n    this.recalculate(this.keysIndex);\r\n};\r\n\r\nTextProperty.prototype.setMinimumFontSize = function(_fontValue) {\r\n    this.minimumFontSize = Math.floor(_fontValue) || 1;\r\n    this.recalculate(this.keysIndex);\r\n};\r\n\r\nvar TextSelectorProp = (function(){\r\n    var max = Math.max;\r\n    var min = Math.min;\r\n    var floor = Math.floor;\r\n    function updateRange(newCharsFlag){\r\n        this._mdf = newCharsFlag || false;\r\n        if(this.dynamicProperties.length){\r\n            var i, len = this.dynamicProperties.length;\r\n            for(i=0;i<len;i+=1){\r\n                this.dynamicProperties[i].getValue();\r\n                if(this.dynamicProperties[i]._mdf){\r\n                    this._mdf = true;\r\n                }\r\n            }\r\n        }\r\n        var totalChars = this.data.totalChars || this.elem.textProperty.currentData.l.length || 0;\r\n        if(newCharsFlag && this.data.r === 2) {\r\n            this.e.v = totalChars;\r\n        }\r\n        var divisor = this.data.r === 2 ? 1 : 100 / totalChars;\r\n        var o = this.o.v/divisor;\r\n        var s = this.s.v/divisor + o;\r\n        var e = (this.e.v/divisor) + o;\r\n        if(s>e){\r\n            var _s = s;\r\n            s = e;\r\n            e = _s;\r\n        }\r\n        this.finalS = s;\r\n        this.finalE = e;\r\n    }\r\n\r\n    function getMult(ind){\r\n        //var easer = bez.getEasingCurve(this.ne.v/100,0,1-this.xe.v/100,1);\r\n        var easer = BezierFactory.getBezierEasing(this.ne.v/100,0,1-this.xe.v/100,1).get;\r\n        var mult = 0;\r\n        var s = this.finalS;\r\n        var e = this.finalE;\r\n        var type = this.data.sh;\r\n        if(type == 2){\r\n            if(e === s){\r\n                mult = ind >= e ? 1 : 0;\r\n            }else{\r\n                mult = max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n            }\r\n            mult = easer(mult);\r\n        }else if(type == 3){\r\n            if(e === s){\r\n                mult = ind >= e ? 0 : 1;\r\n            }else{\r\n                mult = 1 - max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n            }\r\n\r\n            mult = easer(mult);\r\n        }else if(type == 4){\r\n            if(e === s){\r\n                mult = 0;\r\n            }else{\r\n                mult = max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n                if(mult<0.5){\r\n                    mult *= 2;\r\n                }else{\r\n                    mult = 1 - 2*(mult-0.5);\r\n                }\r\n            }\r\n            mult = easer(mult);\r\n        }else if(type == 5){\r\n            if(e === s){\r\n                mult = 0;\r\n            }else{\r\n                var tot = e - s;\r\n                /*ind += 0.5;\r\n                mult = -4/(tot*tot)*(ind*ind)+(4/tot)*ind;*/\r\n                ind = min(max(0,ind+0.5-s),e-s);\r\n                var x = -tot/2+ind;\r\n                var a = tot/2;\r\n                mult = Math.sqrt(1 - (x*x)/(a*a));\r\n            }\r\n            mult = easer(mult);\r\n        }else if(type == 6){\r\n            if(e === s){\r\n                mult = 0;\r\n            }else{\r\n                ind = min(max(0,ind+0.5-s),e-s);\r\n                mult = (1+(Math.cos((Math.PI+Math.PI*2*(ind)/(e-s)))))/2;\r\n                /*\r\n                 ind = Math.min(Math.max(s,ind),e-1);\r\n                 mult = (1+(Math.cos((Math.PI+Math.PI*2*(ind-s)/(e-1-s)))))/2;\r\n                 mult = Math.max(mult,(1/(e-1-s))/(e-1-s));*/\r\n            }\r\n            mult = easer(mult);\r\n        }else {\r\n            if(ind >= floor(s)){\r\n                if(ind-s < 0){\r\n                    mult = 1 - (s - ind);\r\n                }else{\r\n                    mult = max(0,min(e-ind,1));\r\n                }\r\n            }\r\n            mult = easer(mult);\r\n        }\r\n        return mult*this.a.v;\r\n    }\r\n\r\n    function TextSelectorProp(elem,data, arr){\r\n        this._mdf = false;\r\n        this.k = false;\r\n        this.data = data;\r\n        this.dynamicProperties = [];\r\n        this.getValue = updateRange;\r\n        this.getMult = getMult;\r\n        this.elem = elem;\r\n        this.comp = elem.comp;\r\n        this.finalS = 0;\r\n        this.finalE = 0;\r\n        this.s = PropertyFactory.getProp(elem,data.s || {k:0},0,0,this.dynamicProperties);\r\n        if('e' in data){\r\n            this.e = PropertyFactory.getProp(elem,data.e,0,0,this.dynamicProperties);\r\n        }else{\r\n            this.e = {v:100};\r\n        }\r\n        this.o = PropertyFactory.getProp(elem,data.o || {k:0},0,0,this.dynamicProperties);\r\n        this.xe = PropertyFactory.getProp(elem,data.xe || {k:0},0,0,this.dynamicProperties);\r\n        this.ne = PropertyFactory.getProp(elem,data.ne || {k:0},0,0,this.dynamicProperties);\r\n        this.a = PropertyFactory.getProp(elem,data.a,0,0.01,this.dynamicProperties);\r\n        if(this.dynamicProperties.length){\r\n            arr.push(this);\r\n        }else{\r\n            this.getValue();\r\n        }\r\n    }\r\n\r\n    function getTextSelectorProp(elem, data,arr) {\r\n        return new TextSelectorProp(elem, data, arr);\r\n    }\r\n\r\n    return {\r\n        getTextSelectorProp: getTextSelectorProp\r\n    };\r\n}());\r\n\r\n    \r\nvar pool_factory = (function() {\r\n\treturn function(initialLength, _create, _release, _clone) {\r\n\r\n\t\tvar _length = 0;\r\n\t\tvar _maxLength = initialLength;\r\n\t\tvar pool = createSizedArray(_maxLength);\r\n\r\n\t\tvar ob = {\r\n\t\t\tnewElement: newElement,\r\n\t\t\trelease: release\r\n\t\t};\r\n\r\n\t\tfunction newElement(){\r\n\t\t\tvar element;\r\n\t\t\tif(_length){\r\n\t\t\t\t_length -= 1;\r\n\t\t\t\telement = pool[_length];\r\n\t\t\t} else {\r\n\t\t\t\telement = _create();\r\n\t\t\t}\r\n\t\t\treturn element;\r\n\t\t}\r\n\r\n\t\tfunction release(element) {\r\n\t\t\tif(_length === _maxLength) {\r\n\t\t\t\tpool = pooling.double(pool);\r\n\t\t\t\t_maxLength = _maxLength*2;\r\n\t\t\t}\r\n\t\t\tif (_release) {\r\n\t\t\t\t_release(element);\r\n\t\t\t}\r\n\t\t\tpool[_length] = element;\r\n\t\t\t_length += 1;\r\n\t\t}\r\n\r\n\t\tfunction clone() {\r\n\t\t\tvar clonedElement = newElement();\r\n\t\t\treturn _clone(clonedElement);\r\n\t\t}\r\n\r\n\t\treturn ob;\r\n\t};\r\n}());\r\n\r\nvar pooling = (function(){\r\n\r\n\tfunction double(arr){\r\n\t\treturn arr.concat(createSizedArray(arr.length));\r\n\t}\r\n\r\n\treturn {\r\n\t\tdouble: double\r\n\t};\r\n}());\r\nvar point_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn createTypedArray('float32', 2);\r\n\t}\r\n\treturn pool_factory(8, create);\r\n}());\r\nvar shape_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn new ShapePath();\r\n\t}\r\n\r\n\tfunction release(shapePath) {\r\n\t\tvar len = shapePath._length, i;\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tpoint_pool.release(shapePath.v[i]);\r\n\t\t\tpoint_pool.release(shapePath.i[i]);\r\n\t\t\tpoint_pool.release(shapePath.o[i]);\r\n\t\t\tshapePath.v[i] = null;\r\n\t\t\tshapePath.i[i] = null;\r\n\t\t\tshapePath.o[i] = null;\r\n\t\t}\r\n\t\tshapePath._length = 0;\r\n\t\tshapePath.c = false;\r\n\t}\r\n\r\n\tfunction clone(shape) {\r\n\t\tvar cloned = factory.newElement();\r\n\t\tvar i, len = shape._length === undefined ? shape.v.length : shape._length;\r\n\t\tcloned.setLength(len);\r\n\t\tcloned.c = shape.c;\r\n\t\tvar pt;\r\n\t\t\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tcloned.setTripleAt(shape.v[i][0],shape.v[i][1],shape.o[i][0],shape.o[i][1],shape.i[i][0],shape.i[i][1], i);\r\n\t\t}\r\n\t\treturn cloned;\r\n\t}\r\n\r\n\tvar factory = pool_factory(4, create, release);\r\n\tfactory.clone = clone;\r\n\r\n\treturn factory;\r\n}());\r\nvar shapeCollection_pool = (function(){\r\n\tvar ob = {\r\n\t\tnewShapeCollection: newShapeCollection,\r\n\t\trelease: release\r\n\t};\r\n\r\n\tvar _length = 0;\r\n\tvar _maxLength = 4;\r\n\tvar pool = createSizedArray(_maxLength);\r\n\r\n\tfunction newShapeCollection(){\r\n\t\tvar shapeCollection;\r\n\t\tif(_length){\r\n\t\t\t_length -= 1;\r\n\t\t\tshapeCollection = pool[_length];\r\n\t\t} else {\r\n\t\t\tshapeCollection = new ShapeCollection();\r\n\t\t}\r\n\t\treturn shapeCollection;\r\n\t}\r\n\r\n\tfunction release(shapeCollection) {\r\n\t\tvar i, len = shapeCollection._length;\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tshape_pool.release(shapeCollection.shapes[i]);\r\n\t\t}\r\n\t\tshapeCollection._length = 0;\r\n\r\n\t\tif(_length === _maxLength) {\r\n\t\t\tpool = pooling.double(pool);\r\n\t\t\t_maxLength = _maxLength*2;\r\n\t\t}\r\n\t\tpool[_length] = shapeCollection;\r\n\t\t_length += 1;\r\n\t}\r\n\r\n\treturn ob;\r\n}());\r\nvar segments_length_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn {\r\n\t\t\tlengths: [],\r\n\t\t\ttotalLength: 0\r\n\t\t};\r\n\t}\r\n\r\n\tfunction release(element) {\r\n\t\tvar i, len = element.lengths.length;\r\n\t\tfor(i=0;i<len;i+=1) {\r\n\t\t\tbezier_length_pool.release(element.lengths[i]);\r\n\t\t}\r\n\t\telement.lengths.length = 0;\r\n\t}\r\n\r\n\treturn pool_factory(8, create, release);\r\n}());\r\nvar bezier_length_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn {\r\n            addedLength: 0,\r\n            percents: createTypedArray('float32', defaultCurveSegments),\r\n            lengths: createTypedArray('float32', defaultCurveSegments),\r\n        };\r\n\t}\r\n\treturn pool_factory(8, create);\r\n}());\r\nfunction BaseRenderer(){}\r\nBaseRenderer.prototype.checkLayers = function(num){\r\n    var i, len = this.layers.length, data;\r\n    this.completeLayers = true;\r\n    for (i = len - 1; i >= 0; i--) {\r\n        if (!this.elements[i]) {\r\n            data = this.layers[i];\r\n            if(data.ip - data.st <= (num - this.layers[i].st) && data.op - data.st > (num - this.layers[i].st))\r\n            {\r\n                this.buildItem(i);\r\n            }\r\n        }\r\n        this.completeLayers = this.elements[i] ? this.completeLayers:false;\r\n    }\r\n    this.checkPendingElements();\r\n};\r\n\r\nBaseRenderer.prototype.createItem = function(layer){\r\n    switch(layer.ty){\r\n        case 2:\r\n            return this.createImage(layer);\r\n        case 0:\r\n            return this.createComp(layer);\r\n        case 1:\r\n            return this.createSolid(layer);\r\n        case 3:\r\n            return this.createNull(layer);\r\n        case 4:\r\n            return this.createShape(layer);\r\n        case 5:\r\n            return this.createText(layer);\r\n        case 13:\r\n            return this.createCamera(layer);\r\n    }\r\n    return this.createNull(layer);\r\n};\r\n\r\nBaseRenderer.prototype.createCamera = function(){\r\n    throw new Error('You\\'re using a 3d camera. Try the html renderer.');\r\n};\r\n\r\nBaseRenderer.prototype.buildAllItems = function(){\r\n    var i, len = this.layers.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.buildItem(i);\r\n    }\r\n    this.checkPendingElements();\r\n};\r\n\r\nBaseRenderer.prototype.includeLayers = function(newLayers){\r\n    this.completeLayers = false;\r\n    var i, len = newLayers.length;\r\n    var j, jLen = this.layers.length;\r\n    for(i=0;i<len;i+=1){\r\n        j = 0;\r\n        while(j<jLen){\r\n            if(this.layers[j].id == newLayers[i].id){\r\n                this.layers[j] = newLayers[i];\r\n                break;\r\n            }\r\n            j += 1;\r\n        }\r\n    }\r\n};\r\n\r\nBaseRenderer.prototype.setProjectInterface = function(pInterface){\r\n    this.globalData.projectInterface = pInterface;\r\n};\r\n\r\nBaseRenderer.prototype.initItems = function(){\r\n    if(!this.globalData.progressiveLoad){\r\n        this.buildAllItems();\r\n    }\r\n};\r\nBaseRenderer.prototype.buildElementParenting = function(element, parentName, hierarchy) {\r\n    var elements = this.elements;\r\n    var layers = this.layers;\r\n    var i=0, len = layers.length;\r\n    while (i < len) {\r\n        if (layers[i].ind == parentName) {\r\n            if (!elements[i] || elements[i] === true) {\r\n                this.buildItem(i);\r\n                this.addPendingElement(element);\r\n            } else {\r\n                hierarchy.push(elements[i]);\r\n                elements[i].setAsParent();\r\n                if(layers[i].parent !== undefined) {\r\n                    this.buildElementParenting(element, layers[i].parent, hierarchy);\r\n                } else {\r\n                    element.setHierarchy(hierarchy);\r\n                }\r\n            }\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nBaseRenderer.prototype.addPendingElement = function(element){\r\n    this.pendingElements.push(element);\r\n};\r\n\r\nBaseRenderer.prototype.searchExtraCompositions = function(assets){\r\n    var i, len = assets.length;\r\n    for(i=0;i<len;i+=1){\r\n        if(assets[i].xt){\r\n            var comp = this.createComp(assets[i]);\r\n            comp.initExpressions();\r\n            this.globalData.projectInterface.registerComposition(comp);\r\n        }\r\n    }\r\n};\r\n\r\nfunction SVGRenderer(animationItem, config){\r\n    this.animationItem = animationItem;\r\n    this.layers = null;\r\n    this.renderedFrame = -1;\r\n    this.svgElement = createNS('svg');\r\n    var maskElement = createNS('g');\r\n    this.svgElement.appendChild(maskElement);\r\n    this.layerElement = maskElement;\r\n    var defs = createNS( 'defs');\r\n    this.svgElement.appendChild(defs);\r\n    this.renderConfig = {\r\n        preserveAspectRatio: (config && config.preserveAspectRatio) || 'xMidYMid meet',\r\n        progressiveLoad: (config && config.progressiveLoad) || false,\r\n        hideOnTransparent: (config && config.hideOnTransparent === false) ? false : true,\r\n        viewBoxOnly: (config && config.viewBoxOnly) || false,\r\n        viewBoxSize: (config && config.viewBoxSize) || false,\r\n        className: (config && config.className) || ''\r\n    };\r\n    this.globalData = {\r\n        _mdf: false,\r\n        frameNum: -1,\r\n        defs: defs,\r\n        frameId: 0,\r\n        compSize: {w:0,h:0},\r\n        renderConfig: this.renderConfig,\r\n        fontManager: new FontManager()\r\n    };\r\n    this.elements = [];\r\n    this.pendingElements = [];\r\n    this.destroyed = false;\r\n\r\n}\r\n\r\nextendPrototype([BaseRenderer],SVGRenderer);\r\n\r\nSVGRenderer.prototype.createNull = function (data) {\r\n    return new NullElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createShape = function (data) {\r\n    return new SVGShapeElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createText = function (data) {\r\n    return new SVGTextElement(data,this.globalData,this);\r\n\r\n};\r\n\r\nSVGRenderer.prototype.createImage = function (data) {\r\n    return new IImageElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createComp = function (data) {\r\n    return new SVGCompElement(data,this.globalData,this);\r\n\r\n};\r\n\r\nSVGRenderer.prototype.createSolid = function (data) {\r\n    return new ISolidElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.configAnimation = function(animData){\r\n    this.svgElement.setAttribute('xmlns','http://www.w3.org/2000/svg');\r\n    if(this.renderConfig.viewBoxSize) {\r\n        this.svgElement.setAttribute('viewBox',this.renderConfig.viewBoxSize);\r\n    } else {\r\n        this.svgElement.setAttribute('viewBox','0 0 '+animData.w+' '+animData.h);\r\n    }\r\n\r\n    if(!this.renderConfig.viewBoxOnly) {\r\n        this.svgElement.setAttribute('width',animData.w);\r\n        this.svgElement.setAttribute('height',animData.h);\r\n        this.svgElement.style.width = '100%';\r\n        this.svgElement.style.height = '100%';\r\n    }\r\n    if(this.renderConfig.className) {\r\n        this.svgElement.setAttribute('class', this.renderConfig.className);\r\n    }\r\n    this.svgElement.setAttribute('preserveAspectRatio',this.renderConfig.preserveAspectRatio);\r\n    //this.layerElement.style.transform = 'translate3d(0,0,0)';\r\n    //this.layerElement.style.transformOrigin = this.layerElement.style.mozTransformOrigin = this.layerElement.style.webkitTransformOrigin = this.layerElement.style['-webkit-transform'] = \"0px 0px 0px\";\r\n    this.animationItem.wrapper.appendChild(this.svgElement);\r\n    //Mask animation\r\n    var defs = this.globalData.defs;\r\n\r\n    this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem);\r\n    this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem);\r\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\r\n    this.globalData.nm = animData.nm;\r\n    this.globalData.compSize.w = animData.w;\r\n    this.globalData.compSize.h = animData.h;\r\n    this.globalData.frameRate = animData.fr;\r\n    this.data = animData;\r\n\r\n    var maskElement = createNS( 'clipPath');\r\n    var rect = createNS('rect');\r\n    rect.setAttribute('width',animData.w);\r\n    rect.setAttribute('height',animData.h);\r\n    rect.setAttribute('x',0);\r\n    rect.setAttribute('y',0);\r\n    var maskId = 'animationMask_'+randomString(10);\r\n    maskElement.setAttribute('id', maskId);\r\n    maskElement.appendChild(rect);\r\n    this.layerElement.setAttribute(\"clip-path\", \"url(\" + locationHref + \"#\"+maskId+\")\");\r\n\r\n    defs.appendChild(maskElement);\r\n    this.layers = animData.layers;\r\n    this.globalData.fontManager.addChars(animData.chars);\r\n    this.globalData.fontManager.addFonts(animData.fonts,defs);\r\n    this.elements = createSizedArray(animData.layers.length);\r\n};\r\n\r\n\r\nSVGRenderer.prototype.destroy = function () {\r\n    this.animationItem.wrapper.innerHTML = '';\r\n    this.layerElement = null;\r\n    this.globalData.defs = null;\r\n    var i, len = this.layers ? this.layers.length : 0;\r\n    for (i = 0; i < len; i++) {\r\n        if(this.elements[i]){\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n    this.elements.length = 0;\r\n    this.destroyed = true;\r\n    this.animationItem = null;\r\n};\r\n\r\nSVGRenderer.prototype.updateContainerSize = function () {\r\n};\r\n\r\nSVGRenderer.prototype.buildItem  = function(pos){\r\n    var elements = this.elements;\r\n    if(elements[pos] || this.layers[pos].ty == 99){\r\n        return;\r\n    }\r\n    elements[pos] = true;\r\n    var element = this.createItem(this.layers[pos]);\r\n\r\n    elements[pos] = element;\r\n    if(expressionsPlugin){\r\n        if(this.layers[pos].ty === 0){\r\n            this.globalData.projectInterface.registerComposition(element);\r\n        }\r\n        element.initExpressions();\r\n    }\r\n    this.appendElementInPos(element,pos);\r\n    if(this.layers[pos].tt){\r\n        if(!this.elements[pos - 1] || this.elements[pos - 1] === true){\r\n            this.buildItem(pos - 1);\r\n            this.addPendingElement(element);\r\n        } else {\r\n            element.setMatte(elements[pos - 1].layerId);\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.checkPendingElements  = function(){\r\n    while(this.pendingElements.length){\r\n        var element = this.pendingElements.pop();\r\n        element.checkParenting();\r\n        if(element.data.tt){\r\n            var i = 0, len = this.elements.length;\r\n            while(i<len){\r\n                if(this.elements[i] === element){\r\n                    element.setMatte(this.elements[i - 1].layerId);\r\n                    break;\r\n                }\r\n                i += 1;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.renderFrame = function(num){\r\n    if(this.renderedFrame === num || this.destroyed){\r\n        return;\r\n    }\r\n    if(num === null){\r\n        num = this.renderedFrame;\r\n    }else{\r\n        this.renderedFrame = num;\r\n    }\r\n    //clearPoints();\r\n    // console.log('-------');\r\n    // console.log('FRAME ',num);\r\n    this.globalData.frameNum = num;\r\n    this.globalData.frameId += 1;\r\n    this.globalData.projectInterface.currentFrame = num;\r\n    this.globalData._mdf = false;\r\n    var i, len = this.layers.length;\r\n    if(!this.completeLayers){\r\n        this.checkLayers(num);\r\n    }\r\n    for (i = len - 1; i >= 0; i--) {\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].prepareFrame(num - this.layers[i].st);\r\n        }\r\n    }\r\n    if(this.globalData._mdf) {\r\n        for (i = 0; i < len; i += 1) {\r\n            if(this.completeLayers || this.elements[i]){\r\n                this.elements[i].renderFrame();\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.appendElementInPos = function(element, pos){\r\n    var newElement = element.getBaseElement();\r\n    if(!newElement){\r\n        return;\r\n    }\r\n    var i = 0;\r\n    var nextElement;\r\n    while(i<pos){\r\n        if(this.elements[i] && this.elements[i]!== true && this.elements[i].getBaseElement()){\r\n            nextElement = this.elements[i].getBaseElement();\r\n        }\r\n        i += 1;\r\n    }\r\n    if(nextElement){\r\n        this.layerElement.insertBefore(newElement, nextElement);\r\n    } else {\r\n        this.layerElement.appendChild(newElement);\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.hide = function(){\r\n    this.layerElement.style.display = 'none';\r\n};\r\n\r\nSVGRenderer.prototype.show = function(){\r\n    this.layerElement.style.display = 'block';\r\n};\r\n\r\nfunction MaskElement(data,element,globalData, dynamicProperties) {\r\n    this.data = data;\r\n    this.element = element;\r\n    this.globalData = globalData;\r\n    this.storedData = [];\r\n    this.masksProperties = this.data.masksProperties || [];\r\n    this.maskElement = null;\r\n    this._isFirstFrame = true;\r\n    var defs = this.globalData.defs;\r\n    var i, len = this.masksProperties ? this.masksProperties.length : 0;\r\n    this.viewData = createSizedArray(len);\r\n    this.solidPath = '';\r\n\r\n\r\n    var path, properties = this.masksProperties;\r\n    var count = 0;\r\n    var currentMasks = [];\r\n    var j, jLen;\r\n    var layerId = randomString(10);\r\n    var rect, expansor, feMorph,x;\r\n    var maskType = 'clipPath', maskRef = 'clip-path';\r\n    for (i = 0; i < len; i++) {\r\n\r\n        if((properties[i].mode !== 'a' && properties[i].mode !== 'n')|| properties[i].inv || properties[i].o.k !== 100){\r\n            maskType = 'mask';\r\n            maskRef = 'mask';\r\n        }\r\n\r\n        if((properties[i].mode == 's' || properties[i].mode == 'i') && count === 0){\r\n            rect = createNS( 'rect');\r\n            rect.setAttribute('fill', '#ffffff');\r\n            rect.setAttribute('width', this.element.comp.data.w);\r\n            rect.setAttribute('height', this.element.comp.data.h);\r\n            currentMasks.push(rect);\r\n        } else {\r\n            rect = null;\r\n        }\r\n\r\n        path = createNS( 'path');\r\n        if(properties[i].mode == 'n') {\r\n            // TODO move this to a factory or to a constructor\r\n            this.viewData[i] = {\r\n                op: PropertyFactory.getProp(this.element,properties[i].o,0,0.01,dynamicProperties),\r\n                prop: ShapePropertyFactory.getShapeProp(this.element,properties[i],3,dynamicProperties,null),\r\n                elem: path\r\n            };\r\n            defs.appendChild(path);\r\n            continue;\r\n        }\r\n        count += 1;\r\n\r\n        path.setAttribute('fill', properties[i].mode === 's' ? '#000000':'#ffffff');\r\n        path.setAttribute('clip-rule','nonzero');\r\n        var filterID;\r\n\r\n        if (properties[i].x.k !== 0) {\r\n            maskType = 'mask';\r\n            maskRef = 'mask';\r\n            x = PropertyFactory.getProp(this.element,properties[i].x,0,null,dynamicProperties);\r\n            filterID = 'fi_'+randomString(10);\r\n            expansor = createNS('filter');\r\n            expansor.setAttribute('id',filterID);\r\n            feMorph = createNS('feMorphology');\r\n            feMorph.setAttribute('operator','dilate');\r\n            feMorph.setAttribute('in','SourceGraphic');\r\n            feMorph.setAttribute('radius','0');\r\n            expansor.appendChild(feMorph);\r\n            defs.appendChild(expansor);\r\n            path.setAttribute('stroke', properties[i].mode === 's' ? '#000000':'#ffffff');\r\n        } else {\r\n            feMorph = null;\r\n            x = null;\r\n        }\r\n\r\n        // TODO move this to a factory or to a constructor\r\n        this.storedData[i] = {\r\n             elem: path,\r\n             x: x,\r\n             expan: feMorph,\r\n            lastPath: '',\r\n            lastOperator:'',\r\n            filterId:filterID,\r\n            lastRadius:0\r\n        };\r\n        if(properties[i].mode == 'i'){\r\n            jLen = currentMasks.length;\r\n            var g = createNS('g');\r\n            for(j=0;j<jLen;j+=1){\r\n                g.appendChild(currentMasks[j]);\r\n            }\r\n            var mask = createNS('mask');\r\n            mask.setAttribute('mask-type','alpha');\r\n            mask.setAttribute('id',layerId+'_'+count);\r\n            mask.appendChild(path);\r\n            defs.appendChild(mask);\r\n            g.setAttribute('mask','url(' + locationHref + '#'+layerId+'_'+count+')');\r\n\r\n            currentMasks.length = 0;\r\n            currentMasks.push(g);\r\n        }else{\r\n            currentMasks.push(path);\r\n        }\r\n        if(properties[i].inv && !this.solidPath){\r\n            this.solidPath = this.createLayerSolidPath();\r\n        }\r\n        // TODO move this to a factory or to a constructor\r\n        this.viewData[i] = {\r\n            elem: path,\r\n            lastPath: '',\r\n            op: PropertyFactory.getProp(this.element,properties[i].o,0,0.01,dynamicProperties),\r\n            prop:ShapePropertyFactory.getShapeProp(this.element,properties[i],3,dynamicProperties,null),\r\n            invRect: rect\r\n        };\r\n        if(!this.viewData[i].prop.k){\r\n            this.drawPath(properties[i],this.viewData[i].prop.v,this.viewData[i]);\r\n        }\r\n    }\r\n\r\n    this.maskElement = createNS( maskType);\r\n\r\n    len = currentMasks.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.maskElement.appendChild(currentMasks[i]);\r\n    }\r\n\r\n    if(count > 0){\r\n        this.maskElement.setAttribute('id', layerId);\r\n        this.element.maskedElement.setAttribute(maskRef, \"url(\" + locationHref + \"#\" + layerId + \")\");\r\n        defs.appendChild(this.maskElement);\r\n    }\r\n\r\n}\r\n\r\nMaskElement.prototype.getMaskProperty = function(pos){\r\n    return this.viewData[pos].prop;\r\n};\r\n\r\nMaskElement.prototype.renderFrame = function (finalMat) {\r\n    var i, len = this.masksProperties.length;\r\n    for (i = 0; i < len; i++) {\r\n        if(this.viewData[i].prop._mdf || this._isFirstFrame){\r\n            this.drawPath(this.masksProperties[i],this.viewData[i].prop.v,this.viewData[i]);\r\n        }\r\n        if(this.viewData[i].op._mdf || this._isFirstFrame){\r\n            this.viewData[i].elem.setAttribute('fill-opacity',this.viewData[i].op.v);\r\n        }\r\n        if(this.masksProperties[i].mode !== 'n'){\r\n            if(this.viewData[i].invRect && (this.element.finalTransform.mProp._mdf || this._isFirstFrame)){\r\n                this.viewData[i].invRect.setAttribute('x', -finalMat.props[12]);\r\n                this.viewData[i].invRect.setAttribute('y', -finalMat.props[13]);\r\n            }\r\n            if(this.storedData[i].x && (this.storedData[i].x._mdf || this._isFirstFrame)){\r\n                var feMorph = this.storedData[i].expan;\r\n                if(this.storedData[i].x.v < 0){\r\n                    if(this.storedData[i].lastOperator !== 'erode'){\r\n                        this.storedData[i].lastOperator = 'erode';\r\n                        this.storedData[i].elem.setAttribute('filter','url(' + locationHref + '#'+this.storedData[i].filterId+')');\r\n                    }\r\n                    feMorph.setAttribute('radius',-this.storedData[i].x.v);\r\n                }else{\r\n                    if(this.storedData[i].lastOperator !== 'dilate'){\r\n                        this.storedData[i].lastOperator = 'dilate';\r\n                        this.storedData[i].elem.setAttribute('filter',null);\r\n                    }\r\n                    this.storedData[i].elem.setAttribute('stroke-width', this.storedData[i].x.v*2);\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n    this._isFirstFrame = false;\r\n};\r\n\r\nMaskElement.prototype.getMaskelement = function () {\r\n    return this.maskElement;\r\n};\r\n\r\nMaskElement.prototype.createLayerSolidPath = function(){\r\n    var path = 'M0,0 ';\r\n    path += ' h' + this.globalData.compSize.w ;\r\n    path += ' v' + this.globalData.compSize.h ;\r\n    path += ' h-' + this.globalData.compSize.w ;\r\n    path += ' v-' + this.globalData.compSize.h + ' ';\r\n    return path;\r\n};\r\n\r\nMaskElement.prototype.drawPath = function(pathData,pathNodes,viewData){\r\n    var pathString = \" M\"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    var i, len;\r\n    len = pathNodes._length;\r\n    for(i=1;i<len;i+=1){\r\n        //pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[i][0]+','+pathNodes.i[i][1] + \" \"+pathNodes.v[i][0]+','+pathNodes.v[i][1];\r\n        pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[i][0]+','+pathNodes.i[i][1] + \" \"+pathNodes.v[i][0]+','+pathNodes.v[i][1];\r\n    }\r\n        //pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[0][0]+','+pathNodes.i[0][1] + \" \"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    if(pathNodes.c && len > 1){\r\n        pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[0][0]+','+pathNodes.i[0][1] + \" \"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    }\r\n    //pathNodes.__renderedString = pathString;\r\n\r\n\r\n    if(viewData.lastPath !== pathString){\r\n        var pathShapeValue = '';\r\n        if(viewData.elem){\r\n            if(pathNodes.c){\r\n                pathShapeValue = pathData.inv ? this.solidPath + pathString : pathString;\r\n            }\r\n            viewData.elem.setAttribute('d',pathShapeValue);\r\n        }\r\n        viewData.lastPath = pathString;\r\n    }\r\n};\r\n\r\nMaskElement.prototype.destroy = function(){\r\n    this.element = null;\r\n    this.globalData = null;\r\n    this.maskElement = null;\r\n    this.data = null;\r\n    this.masksProperties = null;\r\n};\r\n/**\r\n * @file \r\n * Handles AE's layer parenting property.\r\n *\r\n */\r\n\r\nfunction HierarchyElement(){}\r\n\r\nHierarchyElement.prototype = {\r\n\t/**\r\n     * @function \r\n     * Initializes hierarchy properties\r\n     *\r\n     */\r\n\tinitHierarchy: function() {\r\n\t\t//element's parent list\r\n\t    this.hierarchy = [];\r\n\t    //if element is parent of another layer _isParent will be true\r\n\t    this._isParent = false;\r\n\t    this.checkParenting();\r\n\t},\r\n\t/**\r\n     * @function \r\n     * Sets layer's hierarchy.\r\n     * @param {array} hierarch\r\n     * layer's parent list\r\n     *\r\n     */ \r\n\tsetHierarchy: function(hierarchy){\r\n\t    this.hierarchy = hierarchy;\r\n\t},\r\n\t/**\r\n     * @function \r\n     * Sets layer as parent.\r\n     *\r\n     */ \r\n\tsetAsParent: function() {\r\n\t    this._isParent = true;\r\n\t},\r\n\t/**\r\n     * @function \r\n     * Searches layer's parenting chain\r\n     *\r\n     */ \r\n\tcheckParenting: function(){\r\n\t    if (this.data.parent !== undefined){\r\n\t        this.comp.buildElementParenting(this, this.data.parent, []);\r\n\t    }\r\n\t}\r\n};\r\n/**\r\n * @file \r\n * Handles element's layer frame update.\r\n * Checks layer in point and out point\r\n *\r\n */\r\n\r\nfunction FrameElement(){}\r\n\r\nFrameElement.prototype = {\r\n    /**\r\n     * @function \r\n     * Initializes frame related properties.\r\n     *\r\n     */\r\n    initFrame: function(){\r\n        //set to true when inpoint is rendered\r\n        this._isFirstFrame = false;\r\n        //list of animated properties\r\n        this.dynamicProperties = [];\r\n        // If layer has been modified in current tick this will be true\r\n        this._mdf = false;\r\n    },\r\n    /**\r\n     * @function \r\n     * Calculates all dynamic values\r\n     *\r\n     * @param {number} num\r\n     * current frame number in Layer's time\r\n     * @param {boolean} isVisible\r\n     * if layers is currently in range\r\n     * \r\n     */\r\n    prepareProperties: function(num, isVisible) {\r\n        var i, len = this.dynamicProperties.length;\r\n        for (i = 0;i < len; i += 1) {\r\n            if (isVisible || (this._isParent && this.dynamicProperties[i].propType === 'transform')) {\r\n                this.dynamicProperties[i].getValue();\r\n                if (this.dynamicProperties[i]._mdf) {\r\n                    this.globalData._mdf = true;\r\n                    this._mdf = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nfunction TransformElement(){}\r\n\r\nTransformElement.prototype = {\r\n    initTransform: function() {\r\n        this.finalTransform = {\r\n            mProp: this.data.ks ? TransformPropertyFactory.getTransformProperty(this, this.data.ks, this.dynamicProperties) : {o:0},\r\n            _matMdf: false,\r\n            _opMdf: false,\r\n            mat: new Matrix()\r\n        };\r\n        if (this.data.ao) {\r\n            this.finalTransform.mProp.autoOriented = true;\r\n        }\r\n\r\n        //TODO: check TYPE 11: Guided elements\r\n        if (this.data.ty !== 11) {\r\n            //this.createElements();\r\n        }\r\n    },\r\n    renderTransform: function() {\r\n\r\n        this.finalTransform._opMdf = this.finalTransform.mProp.o._mdf || this._isFirstFrame;\r\n        this.finalTransform._matMdf = this.finalTransform.mProp._mdf || this._isFirstFrame;\r\n\r\n        if (this.hierarchy) {\r\n            var mat;\r\n            var finalMat = this.finalTransform.mat;\r\n            var i = 0, len = this.hierarchy.length;\r\n            //Checking if any of the transformation matrices in the hierarchy chain has changed.\r\n            if (!this.finalTransform._matMdf) {\r\n                while (i < len) {\r\n                    if (this.hierarchy[i].finalTransform.mProp._mdf) {\r\n                        this.finalTransform._matMdf = true;\r\n                        break;\r\n                    }\r\n                    i += 1;\r\n                }\r\n            }\r\n            \r\n            if (this.finalTransform._matMdf) {\r\n                mat = this.finalTransform.mProp.v.props;\r\n                finalMat.cloneFromProps(mat);\r\n                for (i = 0; i < len; i += 1) {\r\n                    mat = this.hierarchy[i].finalTransform.mProp.v.props;\r\n                    finalMat.transform(mat[0], mat[1], mat[2], mat[3], mat[4], mat[5], mat[6], mat[7], mat[8], mat[9], mat[10], mat[11], mat[12], mat[13], mat[14], mat[15]);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    globalToLocal: function(pt) {\r\n        var transforms = [];\r\n        transforms.push(this.finalTransform);\r\n        var flag = true;\r\n        var comp = this.comp;\r\n        while (flag) {\r\n            if (comp.finalTransform) {\r\n                if (comp.data.hasMask) {\r\n                    transforms.splice(0, 0, comp.finalTransform);\r\n                }\r\n                comp = comp.comp;\r\n            } else {\r\n                flag = false;\r\n            }\r\n        }\r\n        var i, len = transforms.length,ptNew;\r\n        for (i = 0; i < len; i += 1) {\r\n            ptNew = transforms[i].mat.applyToPointArray(0, 0, 0);\r\n            //ptNew = transforms[i].mat.applyToPointArray(pt[0],pt[1],pt[2]);\r\n            pt = [pt[0] - ptNew[0], pt[1] - ptNew[1], 0];\r\n        }\r\n        return pt;\r\n    },\r\n    mHelper: new Matrix()\r\n};\r\nfunction RenderableElement(){\r\n\r\n}\r\n\r\nRenderableElement.prototype = {\r\n    initRenderable: function() {\r\n        //layer's visibility related to inpoint and outpoint. Rename isVisible to isInRange\r\n        this.isInRange = false;\r\n        //layer's display state\r\n        this.hidden = false;\r\n        // If layer's transparency equals 0, it can be hidden\r\n        this.isTransparent = false;\r\n    },\r\n    prepareRenderableFrame: function(num) {\r\n        this.checkLayerLimits(num);\r\n    },\r\n    checkTransparency: function(){\r\n        if(this.finalTransform.mProp.o.v <= 0) {\r\n            if(!this.isTransparent && this.globalData.renderConfig.hideOnTransparent){\r\n                this.isTransparent = true;\r\n                this.hide();\r\n            }\r\n        } else if(this.isTransparent) {\r\n            this.isTransparent = false;\r\n            this.show();\r\n        }\r\n    },\r\n    /**\r\n     * @function \r\n     * Initializes frame related properties.\r\n     *\r\n     * @param {number} num\r\n     * current frame number in Layer's time\r\n     * \r\n     */\r\n    checkLayerLimits: function(num) {\r\n        if(this.data.ip - this.data.st <= num && this.data.op - this.data.st > num)\r\n        {\r\n            if(this.isInRange !== true){\r\n                this.globalData._mdf = true;\r\n                this._mdf = true;\r\n                this.isInRange = true;\r\n                this.show();\r\n            }\r\n        } else {\r\n            if(this.isInRange !== false){\r\n                this.globalData._mdf = true;\r\n                this.isInRange = false;\r\n                this.hide();\r\n            }\r\n        }\r\n    },\r\n    renderRenderable: function() {\r\n        this.maskManager.renderFrame(this.finalTransform.mat);\r\n        this.renderableEffectsManager.renderFrame(this._isFirstFrame);\r\n    },\r\n    sourceRectAtTime: function(){\r\n        return {\r\n            top:0,\r\n            left:0,\r\n            width:100,\r\n            height:100\r\n        };\r\n    },\r\n    getLayerSize: function(){\r\n        if(this.data.ty === 5){\r\n            return {w:this.data.textData.width,h:this.data.textData.height};\r\n        }else{\r\n            return {w:this.data.width,h:this.data.height};\r\n        }\r\n    }\r\n};\r\nfunction RenderableDOMElement() {}\r\n\r\n(function(){\r\n    var _prototype = {\r\n        initElement: function(data,globalData,comp) {\r\n            this.initFrame();\r\n            this.initBaseData(data, globalData, comp);\r\n            this.initTransform(data, globalData, comp);\r\n            this.initHierarchy();\r\n            this.initRenderable();\r\n            this.initRendererElement();\r\n            this.createContainerElements();\r\n            this.addMasks();\r\n            this.createContent();\r\n            this.hide();\r\n        },\r\n        hide: function(){\r\n            if (!this.hidden && (!this.isInRange || this.isTransparent)) {\r\n                this.layerElement.style.display = 'none';\r\n                this.hidden = true;\r\n            }\r\n        },\r\n        show: function(){\r\n            if (this.isInRange && !this.isTransparent){\r\n                if (!this.data.hd) {\r\n                    this.layerElement.style.display = 'block';\r\n                }\r\n                this.hidden = false;\r\n                this._isFirstFrame = true;\r\n                this.maskManager._isFirstFrame = true;\r\n            }\r\n        },\r\n        renderFrame: function() {\r\n            //If it is exported as hidden (data.hd === true) no need to render\r\n            //If it is not visible no need to render\r\n            if (this.data.hd || this.hidden) {\r\n                return;\r\n            }\r\n            this.renderTransform();\r\n            this.renderRenderable();\r\n            this.renderElement();\r\n            this.renderInnerContent();\r\n            if (this._isFirstFrame) {\r\n                this._isFirstFrame = false;\r\n            }\r\n        },\r\n        renderInnerContent: function() {},\r\n        prepareFrame: function(num) {\r\n            this._mdf = false;\r\n            this.prepareRenderableFrame(num);\r\n            this.prepareProperties(num, this.isInRange);\r\n            this.checkTransparency();\r\n        },\r\n        destroy: function(){\r\n            this.innerElem =  null;\r\n            this.destroyBaseElement();\r\n        }\r\n    };\r\n    extendPrototype([RenderableElement, createProxyFunction(_prototype)], RenderableDOMElement);\r\n}());\r\nfunction ProcessedElement(element, position) {\r\n\tthis.elem = element;\r\n\tthis.pos = position;\r\n}\r\nfunction SVGStyleData(data, level) {\r\n\tthis.data = data;\r\n\tthis.type = data.ty;\r\n\tthis.d = '';\r\n\tthis.lvl = level;\r\n\tthis._mdf = false;\r\n\tthis.closed = false;\r\n\tthis.pElem = createNS('path');\r\n\tthis.msElem = null;\r\n}\r\n\r\nSVGStyleData.prototype.reset = function() {\r\n\tthis.d = '';\r\n\tthis._mdf = false;\r\n};\r\nfunction SVGShapeData(transformers, level, shape) {\r\n    this.caches = [];\r\n    this.styles = [];\r\n    this.transformers = transformers;\r\n    this.lStr = '';\r\n    this.sh = shape;\r\n    this.lvl = level;\r\n}\r\nfunction SVGTransformData(mProps, op) {\r\n\tthis.transform = {\r\n\t\tmProps: mProps,\r\n\t\top: op\r\n\t};\r\n\tthis.elements = [];\r\n}\r\nfunction SVGStrokeStyleData(elem, data, dynamicProperties, styleOb){\r\n\tthis.o = PropertyFactory.getProp(elem,data.o,0,0.01,dynamicProperties);\r\n\tthis.w = PropertyFactory.getProp(elem,data.w,0,null,dynamicProperties);\r\n\tthis.d = new DashProperty(elem,data.d||{},'svg',dynamicProperties);\r\n\tthis.c = PropertyFactory.getProp(elem,data.c,1,255,dynamicProperties);\r\n\tthis.style = styleOb;\r\n}\r\nfunction SVGFillStyleData(elem, data, dynamicProperties, styleOb){\r\n\tthis.o = PropertyFactory.getProp(elem,data.o,0,0.01,dynamicProperties);\r\n\tthis.c = PropertyFactory.getProp(elem,data.c,1,255,dynamicProperties);\r\n\tthis.style = styleOb;\r\n}\r\nfunction SVGGradientFillStyleData(elem, data, dynamicProperties, styleOb){\r\n    this.initGradientData(elem, data, dynamicProperties, styleOb);\r\n}\r\n\r\nSVGGradientFillStyleData.prototype.initGradientData = function(elem, data, dynamicProperties, styleOb){\r\n    this.o = PropertyFactory.getProp(elem,data.o,0,0.01,dynamicProperties);\r\n    this.s = PropertyFactory.getProp(elem,data.s,1,null,dynamicProperties);\r\n    this.e = PropertyFactory.getProp(elem,data.e,1,null,dynamicProperties);\r\n    this.h = PropertyFactory.getProp(elem,data.h||{k:0},0,0.01,dynamicProperties);\r\n    this.a = PropertyFactory.getProp(elem,data.a||{k:0},0,degToRads,dynamicProperties);\r\n    this.g = new GradientProperty(elem,data.g,dynamicProperties);\r\n    this.style = styleOb;\r\n    this.stops = [];\r\n    this.setGradientData(styleOb.pElem, data);\r\n    this.setGradientOpacity(data, styleOb);\r\n\r\n};\r\n\r\nSVGGradientFillStyleData.prototype.setGradientData = function(pathElement,data){\r\n\r\n    var gradientId = 'gr_'+randomString(10);\r\n    var gfill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');\r\n    gfill.setAttribute('id',gradientId);\r\n    gfill.setAttribute('spreadMethod','pad');\r\n    gfill.setAttribute('gradientUnits','userSpaceOnUse');\r\n    var stops = [];\r\n    var stop, j, jLen;\r\n    jLen = data.g.p*4;\r\n    for(j=0;j<jLen;j+=4){\r\n        stop = createNS('stop');\r\n        gfill.appendChild(stop);\r\n        stops.push(stop);\r\n    }\r\n    pathElement.setAttribute( data.ty === 'gf' ? 'fill':'stroke','url(#'+gradientId+')');\r\n    \r\n    this.gf = gfill;\r\n    this.cst = stops;\r\n};\r\n\r\nSVGGradientFillStyleData.prototype.setGradientOpacity = function(data, styleOb){\r\n    if(this.g._hasOpacity && !this.g._collapsable){\r\n        var stop, j, jLen;\r\n        var mask = createNS(\"mask\");\r\n        var maskElement = createNS( 'path');\r\n        mask.appendChild(maskElement);\r\n        var opacityId = 'op_'+randomString(10);\r\n        var maskId = 'mk_'+randomString(10);\r\n        mask.setAttribute('id',maskId);\r\n        var opFill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');\r\n        opFill.setAttribute('id',opacityId);\r\n        opFill.setAttribute('spreadMethod','pad');\r\n        opFill.setAttribute('gradientUnits','userSpaceOnUse');\r\n        jLen = data.g.k.k[0].s ? data.g.k.k[0].s.length : data.g.k.k.length;\r\n        var stops = this.stops;\r\n        for(j=data.g.p*4;j<jLen;j+=2){\r\n            stop = createNS('stop');\r\n            stop.setAttribute('stop-color','rgb(255,255,255)');\r\n            opFill.appendChild(stop);\r\n            stops.push(stop);\r\n        }\r\n        maskElement.setAttribute( data.ty === 'gf' ? 'fill':'stroke','url(#'+opacityId+')');\r\n        this.of = opFill;\r\n        this.ms = mask;\r\n        this.ost = stops;\r\n        this.maskId = maskId;\r\n        styleOb.msElem = maskElement;\r\n    }\r\n};\r\nfunction SVGGradientStrokeStyleData(elem, data, dynamicProperties, styleOb){\r\n\tthis.w = PropertyFactory.getProp(elem,data.w,0,null,dynamicProperties);\r\n\tthis.d = new DashProperty(elem,data.d||{},'svg',dynamicProperties);\r\n    this.initGradientData(elem, data, dynamicProperties, styleOb);\r\n}\r\n\r\nSVGGradientStrokeStyleData.prototype.initGradientData = SVGGradientFillStyleData.prototype.initGradientData;\r\nSVGGradientStrokeStyleData.prototype.setGradientData = SVGGradientFillStyleData.prototype.setGradientData;\r\nSVGGradientStrokeStyleData.prototype.setGradientOpacity = SVGGradientFillStyleData.prototype.setGradientOpacity;\r\nfunction ShapeGroupData() {\r\n\tthis.it = [];\r\n    this.prevViewData = [];\r\n    this.gr = createNS('g');\r\n}\r\nfunction BaseElement(){\r\n}\r\nBaseElement.prototype.checkMasks = function(){\r\n    if(!this.data.hasMask){\r\n        return false;\r\n    }\r\n    var i = 0, len = this.data.masksProperties.length;\r\n    while(i<len) {\r\n        if((this.data.masksProperties[i].mode !== 'n' && this.data.masksProperties[i].cl !== false)) {\r\n            return true;\r\n        }\r\n        i += 1;\r\n    }\r\n    return false;\r\n};\r\n\r\nBaseElement.prototype.initExpressions = function(){\r\n    this.layerInterface = LayerExpressionInterface(this);\r\n    if(this.data.hasMask && this.maskManager) {\r\n        this.layerInterface.registerMaskInterface(this.maskManager);\r\n    }\r\n    var effectsInterface = EffectsExpressionInterface.createEffectsInterface(this,this.layerInterface);\r\n    this.layerInterface.registerEffectsInterface(effectsInterface);\r\n\r\n    if(this.data.ty === 0 || this.data.xt){\r\n        this.compInterface = CompExpressionInterface(this);\r\n    } else if(this.data.ty === 4){\r\n        this.layerInterface.shapeInterface = ShapeExpressionInterface(this.shapesData,this.itemsData,this.layerInterface);\r\n        this.layerInterface.content = this.layerInterface.shapeInterface;\r\n    } else if(this.data.ty === 5){\r\n        this.layerInterface.textInterface = TextExpressionInterface(this);\r\n        this.layerInterface.text = this.layerInterface.textInterface;\r\n    }\r\n};\r\n\r\nBaseElement.prototype.blendModeEnums = {\r\n    1:'multiply',\r\n    2:'screen',\r\n    3:'overlay',\r\n    4:'darken',\r\n    5:'lighten',\r\n    6:'color-dodge',\r\n    7:'color-burn',\r\n    8:'hard-light',\r\n    9:'soft-light',\r\n    10:'difference',\r\n    11:'exclusion',\r\n    12:'hue',\r\n    13:'saturation',\r\n    14:'color',\r\n    15:'luminosity'\r\n};\r\n\r\nBaseElement.prototype.getBlendMode = function(){\r\n    return this.blendModeEnums[this.data.bm] || '';\r\n};\r\n\r\nBaseElement.prototype.setBlendMode = function(){\r\n    var blendModeValue = this.getBlendMode();\r\n    var elem = this.baseElement || this.layerElement;\r\n\r\n    elem.style['mix-blend-mode'] = blendModeValue;\r\n};\r\n\r\nBaseElement.prototype.initBaseData = function(data, globalData, comp){\r\n    this.globalData = globalData;\r\n    this.comp = comp;\r\n    this.data = data;\r\n    this.layerId = 'ly_'+randomString(10);\r\n    \r\n    //Stretch factor for old animations missing this property.\r\n    if(!this.data.sr){\r\n        this.data.sr = 1;\r\n    }\r\n    // effects manager\r\n    this.effectsManager = new EffectsManager(this.data,this,this.dynamicProperties);\r\n    \r\n};\r\n\r\nBaseElement.prototype.getType = function(){\r\n    return this.type;\r\n};\r\n\r\nfunction NullElement(data,globalData,comp){\r\n    this.initFrame();\r\n\tthis.initBaseData(data, globalData, comp);\r\n    this.initFrame();\r\n    this.initTransform(data, globalData, comp);\r\n    this.initHierarchy();\r\n}\r\n\r\nNullElement.prototype.prepareFrame = function(num) {\r\n    this.prepareProperties(num, true);\r\n};\r\n\r\nNullElement.prototype.renderFrame = function() {\r\n};\r\n\r\nNullElement.prototype.getBaseElement = function() {\r\n\treturn null;\r\n};\r\n\r\nNullElement.prototype.destroy = function() {\r\n};\r\n\r\nNullElement.prototype.sourceRectAtTime = function() {\r\n};\r\n\r\nNullElement.prototype.hide = function() {\r\n};\r\n\r\nextendPrototype([BaseElement,TransformElement,HierarchyElement,FrameElement], NullElement);\r\n\r\nfunction SVGBaseElement(){\r\n}\r\n\r\nSVGBaseElement.prototype = {\r\n    initRendererElement: function() {\r\n        this.layerElement = createNS('g');\r\n    },\r\n    createContainerElements: function(){\r\n        this.matteElement = createNS('g');\r\n        this.transformedElement = this.layerElement;\r\n        this.maskedElement = this.layerElement;\r\n        this._sizeChanged = false;\r\n        var layerElementParent = null;\r\n        //If this layer acts as a mask for the following layer\r\n        var filId, fil, gg;\r\n        if (this.data.td) {\r\n            if (this.data.td == 3 || this.data.td == 1) {\r\n                var masker = createNS('mask');\r\n                masker.setAttribute('id', this.layerId);\r\n                masker.setAttribute('mask-type', this.data.td == 3 ? 'luminance' : 'alpha');\r\n                masker.appendChild(this.layerElement);\r\n                layerElementParent = masker;\r\n                this.globalData.defs.appendChild(masker);\r\n                // This is only for IE and Edge when mask if of type alpha\r\n                if (!featureSupport.maskType && this.data.td == 1) {\r\n                    masker.setAttribute('mask-type', 'luminance');\r\n                    filId = randomString(10);\r\n                    fil = filtersFactory.createFilter(filId);\r\n                    this.globalData.defs.appendChild(fil);\r\n                    fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\r\n                    gg = createNS('g');\r\n                    gg.appendChild(this.layerElement);\r\n                    layerElementParent = gg;\r\n                    masker.appendChild(gg);\r\n                    gg.setAttribute('filter','url(' + locationHref + '#' + filId + ')');\r\n                }\r\n            } else if(this.data.td == 2) {\r\n                var maskGroup = createNS('mask');\r\n                maskGroup.setAttribute('id', this.layerId);\r\n                maskGroup.setAttribute('mask-type','alpha');\r\n                var maskGrouper = createNS('g');\r\n                maskGroup.appendChild(maskGrouper);\r\n                filId = randomString(10);\r\n                fil = filtersFactory.createFilter(filId);\r\n                ////\r\n\r\n                var feColorMatrix = createNS('feColorMatrix');\r\n                feColorMatrix.setAttribute('type', 'matrix');\r\n                feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');\r\n                feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 -1 1');\r\n                fil.appendChild(feColorMatrix);\r\n\r\n                ////\r\n                /*var feCTr = createNS('feComponentTransfer');\r\n                feCTr.setAttribute('in','SourceGraphic');\r\n                fil.appendChild(feCTr);\r\n                var feFunc = createNS('feFuncA');\r\n                feFunc.setAttribute('type','table');\r\n                feFunc.setAttribute('tableValues','1.0 0.0');\r\n                feCTr.appendChild(feFunc);*/\r\n                this.globalData.defs.appendChild(fil);\r\n                var alphaRect = createNS('rect');\r\n                alphaRect.setAttribute('width',  this.comp.data.w);\r\n                alphaRect.setAttribute('height', this.comp.data.h);\r\n                alphaRect.setAttribute('x','0');\r\n                alphaRect.setAttribute('y','0');\r\n                alphaRect.setAttribute('fill','#ffffff');\r\n                alphaRect.setAttribute('opacity','0');\r\n                maskGrouper.setAttribute('filter', 'url(' + locationHref + '#'+filId+')');\r\n                maskGrouper.appendChild(alphaRect);\r\n                maskGrouper.appendChild(this.layerElement);\r\n                layerElementParent = maskGrouper;\r\n                if (!featureSupport.maskType) {\r\n                    maskGroup.setAttribute('mask-type', 'luminance');\r\n                    fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\r\n                    gg = createNS('g');\r\n                    maskGrouper.appendChild(alphaRect);\r\n                    gg.appendChild(this.layerElement);\r\n                    layerElementParent = gg;\r\n                    maskGrouper.appendChild(gg);\r\n                }\r\n                this.globalData.defs.appendChild(maskGroup);\r\n            }\r\n        } else if (this.data.tt) {\r\n            this.matteElement.appendChild(this.layerElement);\r\n            layerElementParent = this.matteElement;\r\n            this.baseElement = this.matteElement;\r\n        } else {\r\n            this.baseElement = this.layerElement;\r\n        }\r\n        if (this.data.ln) {\r\n            this.layerElement.setAttribute('id', this.data.ln);\r\n        }\r\n        if (this.data.cl) {\r\n            this.layerElement.setAttribute('class', this.data.cl);\r\n        }\r\n        //Clipping compositions to hide content that exceeds boundaries. If collapsed transformations is on, component should not be clipped\r\n        if (this.data.ty === 0 && !this.data.hd) {\r\n            var cp = createNS( 'clipPath');\r\n            var pt = createNS('path');\r\n            pt.setAttribute('d','M0,0 L' + this.data.w + ',0' + ' L' + this.data.w + ',' + this.data.h + ' L0,' + this.data.h + 'z');\r\n            var clipId = 'cp_'+randomString(8);\r\n            cp.setAttribute('id',clipId);\r\n            cp.appendChild(pt);\r\n            this.globalData.defs.appendChild(cp);\r\n\r\n            if (this.checkMasks()) {\r\n                var cpGroup = createNS('g');\r\n                cpGroup.setAttribute('clip-path','url(' + locationHref + '#'+clipId + ')');\r\n                cpGroup.appendChild(this.layerElement);\r\n                this.transformedElement = cpGroup;\r\n                if (layerElementParent) {\r\n                    layerElementParent.appendChild(this.transformedElement);\r\n                } else {\r\n                    this.baseElement = this.transformedElement;\r\n                }\r\n            } else {\r\n                this.layerElement.setAttribute('clip-path','url(' + locationHref + '#'+clipId+')');\r\n            }\r\n            \r\n        }\r\n        if (this.data.bm !== 0) {\r\n            this.setBlendMode();\r\n        }\r\n        this.renderableEffectsManager = new SVGEffects(this);\r\n\r\n    },\r\n    renderElement: function() {\r\n        if (this.finalTransform._matMdf) {\r\n            this.transformedElement.setAttribute('transform', this.finalTransform.mat.to2dCSS());\r\n        }\r\n        if (this.finalTransform._opMdf) {\r\n            this.transformedElement.setAttribute('opacity', this.finalTransform.mProp.o.v);\r\n        }\r\n    },\r\n    destroyBaseElement: function() {\r\n        this.layerElement = null;\r\n        this.matteElement = null;\r\n        this.maskManager.destroy();\r\n    },\r\n    getBaseElement: function() {\r\n        if (this.data.hd) {\r\n            return null;\r\n        }\r\n        return this.baseElement;\r\n    },\r\n    addMasks: function() {\r\n        this.maskManager = new MaskElement(this.data, this, this.globalData, this.dynamicProperties);\r\n    },\r\n    setMatte: function(id) {\r\n        if (!this.matteElement) {\r\n            return;\r\n        }\r\n        this.matteElement.setAttribute(\"mask\", \"url(\" + locationHref + \"#\" + id + \")\");\r\n    }\r\n};\r\nfunction IShapeElement(){\r\n}\r\n\r\nIShapeElement.prototype = {\r\n    addShapeToModifiers: function(data) {\r\n        var i, len = this.shapeModifiers.length;\r\n        for(i=0;i<len;i+=1){\r\n            this.shapeModifiers[i].addShape(data);\r\n        }\r\n    },\r\n    renderModifiers: function() {\r\n        if(!this.shapeModifiers.length){\r\n            return;\r\n        }\r\n        var i, len = this.shapes.length;\r\n        for(i=0;i<len;i+=1){\r\n            this.shapes[i].reset();\r\n        }\r\n\r\n        len = this.shapeModifiers.length;\r\n        for(i=len-1;i>=0;i-=1){\r\n            this.shapeModifiers[i].processShapes(this._isFirstFrame);\r\n        }\r\n    },\r\n    lcEnum: {\r\n        '1': 'butt',\r\n        '2': 'round',\r\n        '3': 'square'\r\n    },\r\n    ljEnum: {\r\n        '1': 'miter',\r\n        '2': 'round',\r\n        '3': 'butt'\r\n    },\r\n    searchProcessedElement: function(elem){\r\n        var i = 0, len = this.processedElements.length;\r\n        while(i < len){\r\n            if(this.processedElements[i].elem === elem){\r\n                return this.processedElements[i].pos;\r\n            }\r\n            i += 1;\r\n        }\r\n        return 0;\r\n    },\r\n    addProcessedElement: function(elem, pos){\r\n        var i = this.processedElements.length;\r\n        while(i){\r\n            i -= 1;\r\n            if(this.processedElements[i].elem === elem){\r\n                this.processedElements[i].pos = pos;\r\n                break;\r\n            }\r\n        }\r\n        if(i === 0){\r\n            this.processedElements.push(new ProcessedElement(elem, pos));\r\n        }\r\n    },\r\n    prepareFrame: function(num) {\r\n        this.prepareRenderableFrame(num);\r\n        this.prepareProperties(num, this.isInRange);\r\n    },\r\n    buildShapeString: function(pathNodes, length, closed, mat) {\r\n        var i, shapeString = '';\r\n        for(i = 1; i < length; i += 1) {\r\n            if (i === 1) {\r\n                shapeString += \" M\" + mat.applyToPointStringified(pathNodes.v[0][0], pathNodes.v[0][1]);\r\n            }\r\n            shapeString += \" C\" + mat.applyToPointStringified(pathNodes.o[i - 1][0], pathNodes.o[i - 1][1]) + \" \" + mat.applyToPointStringified(pathNodes.i[i][0], pathNodes.i[i][1]) + \" \" + mat.applyToPointStringified(pathNodes.v[i][0], pathNodes.v[i][1]);\r\n        }\r\n        if (length === 1) {\r\n            shapeString += \" M\" + mat.applyToPointStringified(pathNodes.v[0][0], pathNodes.v[0][1]);\r\n        }\r\n        if (closed && length) {\r\n            shapeString += \" C\" + mat.applyToPointStringified(pathNodes.o[i - 1][0], pathNodes.o[i - 1][1]) + \" \" + mat.applyToPointStringified(pathNodes.i[0][0], pathNodes.i[0][1]) + \" \" + mat.applyToPointStringified(pathNodes.v[0][0], pathNodes.v[0][1]);\r\n            shapeString += 'z';\r\n        }\r\n        return shapeString;\r\n    }\r\n};\r\nfunction ITextElement(){\r\n}\r\n\r\nITextElement.prototype.initElement = function(data,globalData,comp){\r\n    this.lettersChangedFlag = true;\r\n    this.initFrame();\r\n    this.initBaseData(data, globalData, comp);\r\n    this.textAnimator = new TextAnimatorProperty(data.t, this.renderType, this);\r\n    this.textProperty = new TextProperty(this, data.t, this.dynamicProperties);\r\n    this.initTransform(data, globalData, comp);\r\n    this.initHierarchy();\r\n    this.initRenderable();\r\n    this.initRendererElement();\r\n    this.createContainerElements();\r\n    this.addMasks();\r\n    this.createContent();\r\n    this.hide();\r\n    this.textAnimator.searchProperties(this.dynamicProperties);\r\n};\r\n\r\nITextElement.prototype.prepareFrame = function(num) {\r\n    this._mdf = false;\r\n    this.prepareRenderableFrame(num);\r\n    this.prepareProperties(num, this.isInRange);\r\n    if(this.textProperty._mdf || this.textProperty._isFirstFrame) {\r\n        this.buildNewText();\r\n        this.textProperty._isFirstFrame = false;\r\n    }\r\n};\r\n\r\nITextElement.prototype.createPathShape = function(matrixHelper, shapes) {\r\n    var j,jLen = shapes.length;\r\n    var k, kLen, pathNodes;\r\n    var shapeStr = '';\r\n    for(j=0;j<jLen;j+=1){\r\n        pathNodes = shapes[j].ks.k;\r\n        shapeStr += this.buildShapeString(pathNodes, pathNodes.i.length, true, matrixHelper);\r\n    }\r\n    return shapeStr;\r\n};\r\n\r\nITextElement.prototype.updateDocumentData = function(newData, index) {\r\n    this.textProperty.updateDocumentData(newData, index);\r\n    this.buildNewText();\r\n    this.renderInnerContent();\r\n};\r\n\r\nITextElement.prototype.canResizeFont = function(_canResize) {\r\n    this.textProperty.canResizeFont(_canResize);\r\n    this.buildNewText();\r\n    this.renderInnerContent();\r\n};\r\n\r\nITextElement.prototype.setMinimumFontSize = function(_fontSize) {\r\n    this.textProperty.setMinimumFontSize(_fontSize);\r\n    this.buildNewText();\r\n    this.renderInnerContent();\r\n};\r\n\r\nITextElement.prototype.applyTextPropertiesToMatrix = function(documentData, matrixHelper, lineNumber, xPos, yPos) {\r\n    if(documentData.ps){\r\n        matrixHelper.translate(documentData.ps[0],documentData.ps[1] + documentData.ascent,0);\r\n    }\r\n    matrixHelper.translate(0,-documentData.ls,0);\r\n    switch(documentData.j){\r\n        case 1:\r\n            matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]),0,0);\r\n            break;\r\n        case 2:\r\n            matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber] )/2,0,0);\r\n            break;\r\n    }\r\n    matrixHelper.translate(xPos, yPos, 0);\r\n};\r\n\r\nITextElement.prototype.buildColor = function(colorData) {\r\n    return 'rgb(' + Math.round(colorData[0]*255) + ',' + Math.round(colorData[1]*255) + ',' + Math.round(colorData[2]*255) + ')';\r\n};\r\n\r\nITextElement.prototype.buildShapeString = IShapeElement.prototype.buildShapeString;\r\n\r\nITextElement.prototype.emptyProp = new LetterProps();\r\n\r\nITextElement.prototype.destroy = function(){\r\n    \r\n};\r\nfunction ICompElement(){}\r\n\r\nextendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement, RenderableDOMElement], ICompElement);\r\n\r\nICompElement.prototype.initElement = function(data,globalData,comp) {\r\n    this.initFrame();\r\n    this.initBaseData(data, globalData, comp);\r\n    this.initTransform(data, globalData, comp);\r\n    this.initRenderable();\r\n    this.initHierarchy();\r\n    this.initRendererElement();\r\n    this.createContainerElements();\r\n    this.addMasks();\r\n    if(this.data.xt || !globalData.progressiveLoad){\r\n        this.buildAllItems();\r\n    }\r\n    this.hide();\r\n};\r\n\r\n/*ICompElement.prototype.hide = function(){\r\n    if(!this.hidden){\r\n        this.hideElement();\r\n        var i,len = this.elements.length;\r\n        for( i = 0; i < len; i+=1 ){\r\n            if(this.elements[i]){\r\n                this.elements[i].hide();\r\n            }\r\n        }\r\n    }\r\n};*/\r\n\r\nICompElement.prototype.prepareFrame = function(num){\r\n    this._mdf = false;\r\n    this.prepareRenderableFrame(num);\r\n    this.prepareProperties(num, this.isInRange);\r\n    if(!this.isInRange && !this.data.xt){\r\n        return;\r\n    }\r\n\r\n    if (!this.tm._placeholder) {\r\n        var timeRemapped = this.tm.v;\r\n        if(timeRemapped === this.data.op){\r\n            timeRemapped = this.data.op - 1;\r\n        }\r\n        this.renderedFrame = timeRemapped;\r\n    } else {\r\n        this.renderedFrame = num/this.data.sr;\r\n    }\r\n    var i,len = this.elements.length;\r\n    if(!this.completeLayers){\r\n        this.checkLayers(this.renderedFrame);\r\n    }\r\n    for( i = 0; i < len; i+=1 ){\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].prepareFrame(this.renderedFrame - this.layers[i].st);\r\n            if(this.elements[i]._mdf) {\r\n                this._mdf = true;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.renderInnerContent = function() {\r\n    var i,len = this.layers.length;\r\n    for( i = 0; i < len; i += 1 ){\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].renderFrame();\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.setElements = function(elems){\r\n    this.elements = elems;\r\n};\r\n\r\nICompElement.prototype.getElements = function(){\r\n    return this.elements;\r\n};\r\n\r\nICompElement.prototype.destroyElements = function(){\r\n    var i,len = this.layers.length;\r\n    for( i = 0; i < len; i+=1 ){\r\n        if(this.elements[i]){\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.destroy = function(){\r\n    this.destroyElements();\r\n    this.destroyBaseElement();\r\n};\r\n\r\nfunction IImageElement(data,globalData,comp){\r\n    this.assetData = globalData.getAssetData(data.refId);\r\n    this.initElement(data,globalData,comp);\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,SVGBaseElement,HierarchyElement,FrameElement,RenderableDOMElement], IImageElement);\r\n\r\nIImageElement.prototype.createContent = function(){\r\n\r\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\r\n\r\n    this.innerElem = createNS('image');\r\n    this.innerElem.setAttribute('width',this.assetData.w+\"px\");\r\n    this.innerElem.setAttribute('height',this.assetData.h+\"px\");\r\n    this.innerElem.setAttribute('preserveAspectRatio','xMidYMid slice');\r\n    this.innerElem.setAttributeNS('http://www.w3.org/1999/xlink','href',assetPath);\r\n    \r\n    this.layerElement.appendChild(this.innerElem);\r\n};\r\n\r\nfunction ISolidElement(data,globalData,comp){\r\n    this.initElement(data,globalData,comp);\r\n}\r\nextendPrototype([IImageElement], ISolidElement);\r\n\r\nISolidElement.prototype.createContent = function(){\r\n\r\n    var rect = createNS('rect');\r\n    ////rect.style.width = this.data.sw;\r\n    ////rect.style.height = this.data.sh;\r\n    ////rect.style.fill = this.data.sc;\r\n    rect.setAttribute('width',this.data.sw);\r\n    rect.setAttribute('height',this.data.sh);\r\n    rect.setAttribute('fill',this.data.sc);\r\n    this.layerElement.appendChild(rect);\r\n};\r\nfunction SVGCompElement(data,globalData,comp){\r\n    this.layers = data.layers;\r\n    this.supports3d = true;\r\n    this.completeLayers = false;\r\n    this.pendingElements = [];\r\n    this.elements = this.layers ? createSizedArray(this.layers.length) : [];\r\n    //this.layerElement = createNS('g');\r\n    this.initElement(data,globalData,comp);\r\n    this.tm = data.tm ? PropertyFactory.getProp(this,data.tm,0,globalData.frameRate,this.dynamicProperties) : {_placeholder:true};\r\n}\r\n\r\nextendPrototype([SVGRenderer, ICompElement, SVGBaseElement], SVGCompElement);\r\nfunction SVGTextElement(data,globalData,comp){\r\n    this.textSpans = [];\r\n    this.renderType = 'svg';\r\n    this.initElement(data,globalData,comp);\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,SVGBaseElement,HierarchyElement,FrameElement,RenderableDOMElement,ITextElement], SVGTextElement);\r\n\r\nSVGTextElement.prototype.createContent = function(){\r\n\r\n    if (this.data.singleShape && !this.globalData.fontManager.chars) {\r\n        this.textContainer = createNS('text');\r\n    }\r\n};\r\n\r\nSVGTextElement.prototype.buildTextContents = function(textArray) {\r\n    var i = 0, len = textArray.length;\r\n    var textContents = [], currentTextContent = '';\r\n    while (i < len) {\r\n        if(textArray[i] === String.fromCharCode(13)) {\r\n            textContents.push(currentTextContent);\r\n            currentTextContent = '';\r\n        } else {\r\n            currentTextContent += textArray[i];\r\n        }\r\n        i += 1;\r\n    }\r\n    textContents.push(currentTextContent);\r\n    return textContents;\r\n}\r\n\r\nSVGTextElement.prototype.buildNewText = function(){\r\n    var i, len;\r\n\r\n    var documentData = this.textProperty.currentData;\r\n    this.renderedLetters = createSizedArray(documentData ? documentData.l.length : 0);\r\n    if(documentData.fc) {\r\n        this.layerElement.setAttribute('fill', this.buildColor(documentData.fc));\r\n    }else{\r\n        this.layerElement.setAttribute('fill', 'rgba(0,0,0,0)');\r\n    }\r\n    if(documentData.sc){\r\n        this.layerElement.setAttribute('stroke', this.buildColor(documentData.sc));\r\n        this.layerElement.setAttribute('stroke-width', documentData.sw);\r\n    }\r\n    this.layerElement.setAttribute('font-size', documentData.finalSize);\r\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\r\n    if(fontData.fClass){\r\n        this.layerElement.setAttribute('class',fontData.fClass);\r\n    } else {\r\n        this.layerElement.setAttribute('font-family', fontData.fFamily);\r\n        var fWeight = documentData.fWeight, fStyle = documentData.fStyle;\r\n        this.layerElement.setAttribute('font-style', fStyle);\r\n        this.layerElement.setAttribute('font-weight', fWeight);\r\n    }\r\n\r\n    var letters = documentData.l || [];\r\n    var usesGlyphs = this.globalData.fontManager.chars;\r\n    len = letters.length;\r\n    if(!len){\r\n        return;\r\n    }\r\n    var tSpan;\r\n    var matrixHelper = this.mHelper;\r\n    var shapes, shapeStr = '', singleShape = this.data.singleShape;\r\n    var xPos = 0, yPos = 0, firstLine = true;\r\n    var trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n    if(singleShape && !usesGlyphs && !documentData.sz) {\r\n        var tElement = this.textContainer;\r\n        var justify = 'start';\r\n        switch(documentData.j) {\r\n            case 1:\r\n                justify = 'end';\r\n                break;\r\n            case 2:\r\n                justify = 'middle';\r\n                break;\r\n        }\r\n        tElement.setAttribute('text-anchor',justify);\r\n        tElement.setAttribute('letter-spacing',trackingOffset);\r\n        var textContent = this.buildTextContents(documentData.finalText);\r\n        len = textContent.length;\r\n        yPos = documentData.ps ? documentData.ps[1] + documentData.ascent : 0;\r\n        for ( i = 0; i < len; i += 1) {\r\n            tSpan = this.textSpans[i] || createNS('tspan');\r\n            tSpan.textContent = textContent[i];\r\n            tSpan.setAttribute('x', 0);\r\n            tSpan.setAttribute('y', yPos);\r\n            tSpan.style.display = 'inherit';\r\n            tElement.appendChild(tSpan);\r\n            this.textSpans[i] = tSpan;\r\n            yPos += documentData.finalLineHeight;\r\n        }\r\n        \r\n        this.layerElement.appendChild(tElement);\r\n    } else {\r\n        var cachedSpansLength = this.textSpans.length;\r\n        var shapeData, charData;\r\n        for (i = 0; i < len; i += 1) {\r\n            if(!usesGlyphs || !singleShape || i === 0){\r\n                tSpan = cachedSpansLength > i ? this.textSpans[i] : createNS(usesGlyphs?'path':'text');\r\n                if (cachedSpansLength <= i) {\r\n                    tSpan.setAttribute('stroke-linecap', 'butt');\r\n                    tSpan.setAttribute('stroke-linejoin','round');\r\n                    tSpan.setAttribute('stroke-miterlimit','4');\r\n                    this.textSpans[i] = tSpan;\r\n                    this.layerElement.appendChild(tSpan);\r\n                }\r\n                tSpan.style.display = 'inherit';\r\n            }\r\n            \r\n            matrixHelper.reset();\r\n            matrixHelper.scale(documentData.finalSize / 100, documentData.finalSize / 100);\r\n            if (singleShape) {\r\n                if(letters[i].n) {\r\n                    xPos = -trackingOffset;\r\n                    yPos += documentData.yOffset;\r\n                    yPos += firstLine ? 1 : 0;\r\n                    firstLine = false;\r\n                }\r\n                this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\r\n                xPos += letters[i].l || 0;\r\n                //xPos += letters[i].val === ' ' ? 0 : trackingOffset;\r\n                xPos += trackingOffset;\r\n            }\r\n            if(usesGlyphs) {\r\n                charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\r\n                shapeData = charData && charData.data || {};\r\n                shapes = shapeData.shapes ? shapeData.shapes[0].it : [];\r\n                if(!singleShape){\r\n                    tSpan.setAttribute('d',this.createPathShape(matrixHelper,shapes));\r\n                } else {\r\n                    shapeStr += this.createPathShape(matrixHelper,shapes);\r\n                }\r\n            } else {\r\n                if(singleShape) {\r\n                    tSpan.setAttribute(\"transform\", \"translate(\" + matrixHelper.props[12] + \",\" + matrixHelper.props[13] + \")\");\r\n                }\r\n                tSpan.textContent = letters[i].val;\r\n                tSpan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\",\"preserve\");\r\n            }\r\n            //\r\n        }\r\n        if (singleShape) {\r\n            tSpan.setAttribute('d',shapeStr);\r\n        }\r\n    }\r\n    while (i < this.textSpans.length){\r\n        this.textSpans[i].style.display = 'none';\r\n        i += 1;\r\n    }\r\n    \r\n    this._sizeChanged = true;\r\n};\r\n\r\nSVGTextElement.prototype.sourceRectAtTime = function(time){\r\n    this.prepareFrame(this.comp.renderedFrame - this.data.st);\r\n    this.renderInnerContent();\r\n    if(this._sizeChanged){\r\n        this._sizeChanged = false;\r\n        var textBox = this.layerElement.getBBox();\r\n        this.bbox = {\r\n            top: textBox.y,\r\n            left: textBox.x,\r\n            width: textBox.width,\r\n            height: textBox.height\r\n        };\r\n    }\r\n    return this.bbox;\r\n};\r\n\r\nSVGTextElement.prototype.renderInnerContent = function(){\r\n\r\n    if(!this.data.singleShape){\r\n        this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\r\n        if(this.lettersChangedFlag || this.textAnimator.lettersChangedFlag){\r\n            this._sizeChanged = true;\r\n            var  i,len;\r\n            var renderedLetters = this.textAnimator.renderedLetters;\r\n\r\n            var letters = this.textProperty.currentData.l;\r\n\r\n            len = letters.length;\r\n            var renderedLetter, textSpan;\r\n            for(i=0;i<len;i+=1){\r\n                if(letters[i].n){\r\n                    continue;\r\n                }\r\n                renderedLetter = renderedLetters[i];\r\n                textSpan = this.textSpans[i];\r\n                if(renderedLetter._mdf.m) {\r\n                    textSpan.setAttribute('transform',renderedLetter.m);\r\n                }\r\n                if(renderedLetter._mdf.o) {\r\n                    textSpan.setAttribute('opacity',renderedLetter.o);\r\n                }\r\n                if(renderedLetter._mdf.sw){\r\n                    textSpan.setAttribute('stroke-width',renderedLetter.sw);\r\n                }\r\n                if(renderedLetter._mdf.sc){\r\n                    textSpan.setAttribute('stroke',renderedLetter.sc);\r\n                }\r\n                if(renderedLetter._mdf.fc){\r\n                    textSpan.setAttribute('fill',renderedLetter.fc);\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nfunction SVGShapeElement(data,globalData,comp){\r\n    //List of drawable elements\r\n    this.shapes = [];\r\n    // Full shape data\r\n    this.shapesData = data.shapes;\r\n    //List of styles that will be applied to shapes\r\n    this.stylesList = [];\r\n    //List of modifiers that will be applied to shapes\r\n    this.shapeModifiers = [];\r\n    //List of items in shape tree\r\n    this.itemsData = [];\r\n    //List of items in previous shape tree\r\n    this.processedElements = [];\r\n    this.initElement(data,globalData,comp);\r\n    //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\r\n    // List of elements that have been created\r\n    this.prevViewData = [];\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,SVGBaseElement,IShapeElement,HierarchyElement,FrameElement,RenderableDOMElement], SVGShapeElement);\r\n\r\nSVGShapeElement.prototype.initSecondaryElement = function() {\r\n};\r\n\r\nSVGShapeElement.prototype.identityMatrix = new Matrix();\r\n\r\nSVGShapeElement.prototype.buildExpressionInterface = function(){};\r\n\r\nSVGShapeElement.prototype.createContent = function(){\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement,this.dynamicProperties, 0, [], true);\r\n};\r\n\r\nSVGShapeElement.prototype.createStyleElement = function(data, level, dynamicProperties){\r\n    //TODO: prevent drawing of hidden styles\r\n    var elementData;\r\n    var styleOb = new SVGStyleData(data, level);\r\n\r\n    var pathElement = styleOb.pElem;\r\n    if(data.ty === 'st') {\r\n        elementData = new SVGStrokeStyleData(this, data, dynamicProperties, styleOb);\r\n    } else if(data.ty === 'fl') {\r\n        elementData = new SVGFillStyleData(this, data, dynamicProperties, styleOb);\r\n    } else if(data.ty === 'gf' || data.ty === 'gs') {\r\n        var gradientConstructor = data.ty === 'gf' ? SVGGradientFillStyleData : SVGGradientStrokeStyleData;\r\n        elementData = new gradientConstructor(this, data, dynamicProperties, styleOb);\r\n        this.globalData.defs.appendChild(elementData.gf);\r\n        if (elementData.maskId) {\r\n            this.globalData.defs.appendChild(elementData.ms);\r\n            this.globalData.defs.appendChild(elementData.of);\r\n            pathElement.setAttribute('mask','url(#' + elementData.maskId + ')');\r\n        }\r\n    }\r\n    \r\n    if(data.ty === 'st' || data.ty === 'gs') {\r\n        pathElement.setAttribute('stroke-linecap', this.lcEnum[data.lc] || 'round');\r\n        pathElement.setAttribute('stroke-linejoin',this.ljEnum[data.lj] || 'round');\r\n        pathElement.setAttribute('fill-opacity','0');\r\n        if(data.lj === 1) {\r\n            pathElement.setAttribute('stroke-miterlimit',data.ml);\r\n        }\r\n    }\r\n\r\n    if(data.r === 2) {\r\n        pathElement.setAttribute('fill-rule', 'evenodd');\r\n    }\r\n\r\n    if(data.ln){\r\n        pathElement.setAttribute('id',data.ln);\r\n    }\r\n    if(data.cl){\r\n        pathElement.setAttribute('class',data.cl);\r\n    }\r\n    this.stylesList.push(styleOb);\r\n    return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.createGroupElement = function(data) {\r\n    var elementData = new ShapeGroupData();\r\n    if(data.ln){\r\n        elementData.gr.setAttribute('id',data.ln);\r\n    }\r\n    return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.createTransformElement = function(data, dynamicProperties) {\r\n    return new SVGTransformData(TransformPropertyFactory.getTransformProperty(this,data,dynamicProperties), PropertyFactory.getProp(this,data.o,0,0.01,dynamicProperties));\r\n};\r\n\r\nSVGShapeElement.prototype.createShapeElement = function(data, ownTransformers, level, dynamicProperties) {\r\n    var ty = 4;\r\n    if(data.ty === 'rc'){\r\n        ty = 5;\r\n    }else if(data.ty === 'el'){\r\n        ty = 6;\r\n    }else if(data.ty === 'sr'){\r\n        ty = 7;\r\n    }\r\n    var shapeProperty = ShapePropertyFactory.getShapeProp(this,data,ty,dynamicProperties);\r\n    var elementData = new SVGShapeData(ownTransformers, level, shapeProperty);\r\n    this.shapes.push(elementData.sh);\r\n    this.addShapeToModifiers(elementData);\r\n    return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.setElementStyles = function(elementData){\r\n    var arr = elementData.styles;\r\n    var j, jLen = this.stylesList.length;\r\n    for (j = 0; j < jLen; j += 1) {\r\n        if (!this.stylesList[j].closed) {\r\n            arr.push(this.stylesList[j]);\r\n        }\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.reloadShapes = function(){\r\n    this._isFirstFrame = true;\r\n    var i, len = this.itemsData.length;\r\n    for( i = 0; i < len; i += 1) {\r\n        this.prevViewData[i] = this.itemsData[i];\r\n    }\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement,this.dynamicProperties, 0, [], true);\r\n    len = this.dynamicProperties.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        this.dynamicProperties[i].getValue();\r\n    }\r\n    this.renderModifiers();\r\n};\r\n\r\nSVGShapeElement.prototype.searchShapes = function(arr,itemsData,prevViewData,container,dynamicProperties, level, transformers, render){\r\n    var ownTransformers = [].concat(transformers);\r\n    var i, len = arr.length - 1;\r\n    var j, jLen;\r\n    var ownStyles = [], ownModifiers = [], styleOb, currentTransform, modifier, processedPos;\r\n    for(i=len;i>=0;i-=1){\r\n        processedPos = this.searchProcessedElement(arr[i]);\r\n        if(!processedPos){\r\n            arr[i]._render = render;\r\n        } else {\r\n            itemsData[i] = prevViewData[processedPos - 1];\r\n        }\r\n        if(arr[i].ty == 'fl' || arr[i].ty == 'st' || arr[i].ty == 'gf' || arr[i].ty == 'gs'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createStyleElement(arr[i], level, dynamicProperties);\r\n            } else {\r\n                itemsData[i].style.closed = false;\r\n            }\r\n            if(arr[i]._render){\r\n                container.appendChild(itemsData[i].style.pElem);\r\n            }\r\n            ownStyles.push(itemsData[i].style);\r\n        }else if(arr[i].ty == 'gr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createGroupElement(arr[i]);\r\n            } else {\r\n                jLen = itemsData[i].it.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    itemsData[i].prevViewData[j] = itemsData[i].it[j];\r\n                }\r\n            }\r\n            this.searchShapes(arr[i].it,itemsData[i].it,itemsData[i].prevViewData,itemsData[i].gr,dynamicProperties, level + 1, ownTransformers, render);\r\n            if(arr[i]._render){\r\n                container.appendChild(itemsData[i].gr);\r\n            }\r\n        }else if(arr[i].ty == 'tr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createTransformElement(arr[i], dynamicProperties);\r\n            }\r\n            currentTransform = itemsData[i].transform;\r\n            ownTransformers.push(currentTransform);\r\n        }else if(arr[i].ty == 'sh' || arr[i].ty == 'rc' || arr[i].ty == 'el' || arr[i].ty == 'sr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createShapeElement(arr[i], ownTransformers, level, dynamicProperties);\r\n            }\r\n            this.setElementStyles(itemsData[i]);\r\n\r\n        }else if(arr[i].ty == 'tm' || arr[i].ty == 'rd' || arr[i].ty == 'ms'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                modifier.init(this,arr[i],dynamicProperties);\r\n                itemsData[i] = modifier;\r\n                this.shapeModifiers.push(modifier);\r\n            } else {\r\n                modifier = itemsData[i];\r\n                modifier.closed = false;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        }else if(arr[i].ty == 'rp'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                itemsData[i] = modifier;\r\n                modifier.init(this,arr,i,itemsData,dynamicProperties);\r\n                this.shapeModifiers.push(modifier);\r\n                render = false;\r\n            }else{\r\n                modifier = itemsData[i];\r\n                modifier.closed = true;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        }\r\n        this.addProcessedElement(arr[i], i + 1);\r\n    }\r\n    len = ownStyles.length;\r\n    for(i=0;i<len;i+=1){\r\n        ownStyles[i].closed = true;\r\n    }\r\n    len = ownModifiers.length;\r\n    for(i=0;i<len;i+=1){\r\n        ownModifiers[i].closed = true;\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.renderInnerContent = function() {\r\n    this.renderModifiers();\r\n    var i, len = this.stylesList.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.stylesList[i].reset();\r\n    }\r\n    this.renderShape(this.shapesData, this.itemsData, this.layerElement);\r\n\r\n    for (i = 0; i < len; i += 1) {\r\n        if (this.stylesList[i]._mdf || this._isFirstFrame) {\r\n            if(this.stylesList[i].msElem){\r\n                this.stylesList[i].msElem.setAttribute('d', this.stylesList[i].d);\r\n                //Adding M0 0 fixes same mask bug on all browsers\r\n                this.stylesList[i].d = 'M0 0' + this.stylesList[i].d;\r\n            }\r\n            this.stylesList[i].pElem.setAttribute('d', this.stylesList[i].d || 'M0 0');\r\n        }\r\n    }\r\n};\r\n\r\n\r\nSVGShapeElement.prototype.renderShape = function(items, data, container) {\r\n    var i, len = items.length - 1;\r\n    var ty;\r\n    for(i=0;i<=len;i+=1){\r\n        ty = items[i].ty;\r\n        if(ty == 'tr'){\r\n            if(this._isFirstFrame || data[i].transform.op._mdf){\r\n                container.setAttribute('opacity',data[i].transform.op.v);\r\n            }\r\n            if(this._isFirstFrame || data[i].transform.mProps._mdf){\r\n                container.setAttribute('transform',data[i].transform.mProps.v.to2dCSS());\r\n            }\r\n        }else if(items[i]._render && (ty == 'sh' || ty == 'el' || ty == 'rc' || ty == 'sr')){\r\n            this.renderPath(data[i]);\r\n        }else if(ty == 'fl'){\r\n            this.renderFill(items[i],data[i]);\r\n        }else if(ty == 'gf'){\r\n            this.renderGradient(items[i],data[i]);\r\n        }else if(ty == 'gs'){\r\n            this.renderGradient(items[i],data[i]);\r\n            this.renderStroke(items[i],data[i]);\r\n        }else if(ty == 'st'){\r\n            this.renderStroke(items[i],data[i]);\r\n        }else if(ty == 'gr'){\r\n            this.renderShape(items[i].it,data[i].it, data[i].gr);\r\n        }else if(ty == 'tm'){\r\n            //\r\n        }\r\n    }\r\n\r\n};\r\n\r\nSVGShapeElement.prototype.renderPath = function(itemData){\r\n    var j, jLen,pathStringTransformed,redraw,pathNodes,l, lLen = itemData.styles.length;\r\n    var lvl = itemData.lvl;\r\n    var paths, mat, props, iterations, k;\r\n    for(l=0;l<lLen;l+=1){\r\n        redraw = itemData.sh._mdf || this._isFirstFrame;\r\n        if(itemData.styles[l].lvl < lvl){\r\n            mat = this.mHelper.reset();\r\n            iterations = lvl - itemData.styles[l].lvl;\r\n            k = itemData.transformers.length-1;\r\n            while(iterations > 0) {\r\n                redraw = itemData.transformers[k].mProps._mdf || redraw;\r\n                props = itemData.transformers[k].mProps.v.props;\r\n                mat.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\r\n                iterations --;\r\n                k --;\r\n            }\r\n        } else {\r\n            mat = this.identityMatrix;\r\n        }\r\n        paths = itemData.sh.paths;\r\n        jLen = paths._length;\r\n        if(redraw){\r\n            pathStringTransformed = '';\r\n            for(j=0;j<jLen;j+=1){\r\n                pathNodes = paths.shapes[j];\r\n                if(pathNodes && pathNodes._length){\r\n                    pathStringTransformed += this.buildShapeString(pathNodes, pathNodes._length, pathNodes.c, mat);\r\n                }\r\n            }\r\n            itemData.caches[l] = pathStringTransformed;\r\n        } else {\r\n            pathStringTransformed = itemData.caches[l];\r\n        }\r\n        itemData.styles[l].d += pathStringTransformed;\r\n        itemData.styles[l]._mdf = redraw || itemData.styles[l]._mdf;\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.renderFill = function(styleData,itemData){\r\n    var styleElem = itemData.style;\r\n\r\n    if(itemData.c._mdf || this._isFirstFrame){\r\n        styleElem.pElem.setAttribute('fill','rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')');\r\n    }\r\n    if(itemData.o._mdf || this._isFirstFrame){\r\n        styleElem.pElem.setAttribute('fill-opacity',itemData.o.v);\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.renderGradient = function(styleData, itemData) {\r\n    var gfill = itemData.gf;\r\n    var hasOpacity = itemData.g._hasOpacity;\r\n    var pt1 = itemData.s.v, pt2 = itemData.e.v;\r\n\r\n    if (itemData.o._mdf || this._isFirstFrame) {\r\n        var attr = styleData.ty === 'gf' ? 'fill-opacity' : 'stroke-opacity';\r\n        itemData.style.pElem.setAttribute(attr, itemData.o.v);\r\n    }\r\n    if (itemData.s._mdf || this._isFirstFrame) {\r\n        var attr1 = styleData.t === 1 ? 'x1' : 'cx';\r\n        var attr2 = attr1 === 'x1' ? 'y1' : 'cy';\r\n        gfill.setAttribute(attr1, pt1[0]);\r\n        gfill.setAttribute(attr2, pt1[1]);\r\n        if (hasOpacity && !itemData.g._collapsable) {\r\n            itemData.of.setAttribute(attr1, pt1[0]);\r\n            itemData.of.setAttribute(attr2, pt1[1]);\r\n        }\r\n    }\r\n    var stops, i, len, stop;\r\n    if (itemData.g._cmdf || this._isFirstFrame) {\r\n        stops = itemData.cst;\r\n        var cValues = itemData.g.c;\r\n        len = stops.length;\r\n        for (i = 0; i < len; i += 1){\r\n            stop = stops[i];\r\n            stop.setAttribute('offset', cValues[i * 4] + '%');\r\n            stop.setAttribute('stop-color','rgb('+ cValues[i * 4 + 1] + ',' + cValues[i * 4 + 2] + ','+cValues[i * 4 + 3] + ')');\r\n        }\r\n    }\r\n    if (hasOpacity && (itemData.g._omdf || this._isFirstFrame)) {\r\n        var oValues = itemData.g.o;\r\n        if(itemData.g._collapsable) {\r\n            stops = itemData.cst;\r\n        } else {\r\n            stops = itemData.ost;\r\n        }\r\n        len = stops.length;\r\n        for (i = 0; i < len; i += 1) {\r\n            stop = stops[i];\r\n            if(!itemData.g._collapsable) {\r\n                stop.setAttribute('offset', oValues[i * 2] + '%');\r\n            }\r\n            stop.setAttribute('stop-opacity', oValues[i * 2 + 1]);\r\n        }\r\n    }\r\n    if (styleData.t === 1) {\r\n        if (itemData.e._mdf  || this._isFirstFrame) {\r\n            gfill.setAttribute('x2', pt2[0]);\r\n            gfill.setAttribute('y2', pt2[1]);\r\n            if (hasOpacity && !itemData.g._collapsable) {\r\n                itemData.of.setAttribute('x2', pt2[0]);\r\n                itemData.of.setAttribute('y2', pt2[1]);\r\n            }\r\n        }\r\n    } else {\r\n        var rad;\r\n        if (itemData.s._mdf || itemData.e._mdf || this._isFirstFrame) {\r\n            rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\r\n            gfill.setAttribute('r', rad);\r\n            if(hasOpacity && !itemData.g._collapsable){\r\n                itemData.of.setAttribute('r', rad);\r\n            }\r\n        }\r\n        if (itemData.e._mdf || itemData.h._mdf || itemData.a._mdf || this._isFirstFrame) {\r\n            if (!rad) {\r\n                rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\r\n            }\r\n            var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);\r\n\r\n            var percent = itemData.h.v >= 1 ? 0.99 : itemData.h.v <= -1 ? -0.99: itemData.h.v;\r\n            var dist = rad * percent;\r\n            var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];\r\n            var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];\r\n            gfill.setAttribute('fx', x);\r\n            gfill.setAttribute('fy', y);\r\n            if (hasOpacity && !itemData.g._collapsable) {\r\n                itemData.of.setAttribute('fx', x);\r\n                itemData.of.setAttribute('fy', y);\r\n            }\r\n        }\r\n        //gfill.setAttribute('fy','200');\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.renderStroke = function(styleData, itemData) {\r\n    var styleElem = itemData.style;\r\n    var d = itemData.d;\r\n    if (d && (d._mdf || this._isFirstFrame)) {\r\n        styleElem.pElem.setAttribute('stroke-dasharray', d.dashStr);\r\n        styleElem.pElem.setAttribute('stroke-dashoffset', d.dashoffset[0]);\r\n    }\r\n    if(itemData.c && (itemData.c._mdf || this._isFirstFrame)){\r\n        styleElem.pElem.setAttribute('stroke','rgb(' + bm_floor(itemData.c.v[0]) + ',' + bm_floor(itemData.c.v[1]) + ',' + bm_floor(itemData.c.v[2]) + ')');\r\n    }\r\n    if(itemData.o._mdf || this._isFirstFrame){\r\n        styleElem.pElem.setAttribute('stroke-opacity', itemData.o.v);\r\n    }\r\n    if(itemData.w._mdf || this._isFirstFrame){\r\n        styleElem.pElem.setAttribute('stroke-width', itemData.w.v);\r\n        if(styleElem.msElem){\r\n            styleElem.msElem.setAttribute('stroke-width', itemData.w.v);\r\n        }\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.destroy = function(){\r\n    this.destroyBaseElement();\r\n    this.shapeData = null;\r\n    this.itemsData = null;\r\n};\r\n\r\nfunction SVGTintFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','linearRGB');\r\n    feColorMatrix.setAttribute('values','0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f1');\r\n    filter.appendChild(feColorMatrix);\r\n    feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n    feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f2');\r\n    filter.appendChild(feColorMatrix);\r\n    this.matrixFilter = feColorMatrix;\r\n    if(filterManager.effectElements[2].p.v !== 100 || filterManager.effectElements[2].p.k){\r\n        var feMerge = createNS('feMerge');\r\n        filter.appendChild(feMerge);\r\n        var feMergeNode;\r\n        feMergeNode = createNS('feMergeNode');\r\n        feMergeNode.setAttribute('in','SourceGraphic');\r\n        feMerge.appendChild(feMergeNode);\r\n        feMergeNode = createNS('feMergeNode');\r\n        feMergeNode.setAttribute('in','f2');\r\n        feMerge.appendChild(feMergeNode);\r\n    }\r\n}\r\n\r\nSVGTintFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var colorBlack = this.filterManager.effectElements[0].p.v;\r\n        var colorWhite = this.filterManager.effectElements[1].p.v;\r\n        var opacity = this.filterManager.effectElements[2].p.v/100;\r\n        this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');\r\n    }\r\n};\r\nfunction SVGFillFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n    feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\r\n    filter.appendChild(feColorMatrix);\r\n    this.matrixFilter = feColorMatrix;\r\n}\r\nSVGFillFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var color = this.filterManager.effectElements[2].p.v;\r\n        var opacity = this.filterManager.effectElements[6].p.v;\r\n        this.matrixFilter.setAttribute('values','0 0 0 0 '+color[0]+' 0 0 0 0 '+color[1]+' 0 0 0 0 '+color[2]+' 0 0 0 '+opacity+' 0');\r\n    }\r\n};\r\nfunction SVGStrokeEffect(elem, filterManager){\r\n    this.initialized = false;\r\n    this.filterManager = filterManager;\r\n    this.elem = elem;\r\n    this.paths = [];\r\n}\r\n\r\nSVGStrokeEffect.prototype.initialize = function(){\r\n\r\n    var elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\r\n    var path,groupPath, i, len;\r\n    if(this.filterManager.effectElements[1].p.v === 1){\r\n        len = this.elem.maskManager.masksProperties.length;\r\n        i = 0;\r\n    } else {\r\n        i = this.filterManager.effectElements[0].p.v - 1;\r\n        len = i + 1;\r\n    }\r\n    groupPath = createNS('g'); \r\n    groupPath.setAttribute('fill','none');\r\n    groupPath.setAttribute('stroke-linecap','round');\r\n    groupPath.setAttribute('stroke-dashoffset',1);\r\n    for(i;i<len;i+=1){\r\n        path = createNS('path');\r\n        groupPath.appendChild(path);\r\n        this.paths.push({p:path,m:i});\r\n    }\r\n    if(this.filterManager.effectElements[10].p.v === 3){\r\n        var mask = createNS('mask');\r\n        var id = 'stms_' + randomString(10);\r\n        mask.setAttribute('id',id);\r\n        mask.setAttribute('mask-type','alpha');\r\n        mask.appendChild(groupPath);\r\n        this.elem.globalData.defs.appendChild(mask);\r\n        var g = createNS('g');\r\n        g.setAttribute('mask','url(' + locationHref + '#'+id+')');\r\n        if(elemChildren[0]){\r\n            g.appendChild(elemChildren[0]);\r\n        }\r\n        this.elem.layerElement.appendChild(g);\r\n        this.masker = mask;\r\n        groupPath.setAttribute('stroke','#fff');\r\n    } else if(this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2){\r\n        if(this.filterManager.effectElements[10].p.v === 2){\r\n            elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\r\n            while(elemChildren.length){\r\n                this.elem.layerElement.removeChild(elemChildren[0]);\r\n            }\r\n        }\r\n        this.elem.layerElement.appendChild(groupPath);\r\n        this.elem.layerElement.removeAttribute('mask');\r\n        groupPath.setAttribute('stroke','#fff');\r\n    }\r\n    this.initialized = true;\r\n    this.pathMasker = groupPath;\r\n};\r\n\r\nSVGStrokeEffect.prototype.renderFrame = function(forceRender){\r\n    if(!this.initialized){\r\n        this.initialize();\r\n    }\r\n    var i, len = this.paths.length;\r\n    var mask, path;\r\n    for(i=0;i<len;i+=1){\r\n        mask = this.elem.maskManager.viewData[this.paths[i].m];\r\n        path = this.paths[i].p;\r\n        if(forceRender || this.filterManager._mdf || mask.prop._mdf){\r\n            path.setAttribute('d',mask.lastPath);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[9].p._mdf || this.filterManager.effectElements[4].p._mdf || this.filterManager.effectElements[7].p._mdf || this.filterManager.effectElements[8].p._mdf || mask.prop._mdf){\r\n            var dasharrayValue;\r\n            if(this.filterManager.effectElements[7].p.v !== 0 || this.filterManager.effectElements[8].p.v !== 100){\r\n                var s = Math.min(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)/100;\r\n                var e = Math.max(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)/100;\r\n                var l = path.getTotalLength();\r\n                dasharrayValue = '0 0 0 ' + l*s + ' ';\r\n                var lineLength = l*(e-s);\r\n                var segment = 1+this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100;\r\n                var units = Math.floor(lineLength/segment);\r\n                var j;\r\n                for(j=0;j<units;j+=1){\r\n                    dasharrayValue += '1 ' + this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100 + ' ';\r\n                }\r\n                dasharrayValue += '0 ' + l*10 + ' 0 0';\r\n            } else {\r\n                dasharrayValue = '1 ' + this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100;\r\n            }\r\n            path.setAttribute('stroke-dasharray',dasharrayValue);\r\n        }\r\n    }\r\n    if(forceRender || this.filterManager.effectElements[4].p._mdf){\r\n        this.pathMasker.setAttribute('stroke-width',this.filterManager.effectElements[4].p.v*2);\r\n    }\r\n    \r\n    if(forceRender || this.filterManager.effectElements[6].p._mdf){\r\n        this.pathMasker.setAttribute('opacity',this.filterManager.effectElements[6].p.v);\r\n    }\r\n    if(this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2){\r\n        if(forceRender || this.filterManager.effectElements[3].p._mdf){\r\n            var color = this.filterManager.effectElements[3].p.v;\r\n            this.pathMasker.setAttribute('stroke','rgb('+bm_floor(color[0]*255)+','+bm_floor(color[1]*255)+','+bm_floor(color[2]*255)+')');\r\n        }\r\n    }\r\n};\r\nfunction SVGTritoneFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','linearRGB');\r\n    feColorMatrix.setAttribute('values','0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f1');\r\n    filter.appendChild(feColorMatrix);\r\n    var feComponentTransfer = createNS('feComponentTransfer');\r\n    feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n    filter.appendChild(feComponentTransfer);\r\n    this.matrixFilter = feComponentTransfer;\r\n    var feFuncR = createNS('feFuncR');\r\n    feFuncR.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncR);\r\n    this.feFuncR = feFuncR;\r\n    var feFuncG = createNS('feFuncG');\r\n    feFuncG.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncG);\r\n    this.feFuncG = feFuncG;\r\n    var feFuncB = createNS('feFuncB');\r\n    feFuncB.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncB);\r\n    this.feFuncB = feFuncB;\r\n}\r\n\r\nSVGTritoneFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var color1 = this.filterManager.effectElements[0].p.v;\r\n        var color2 = this.filterManager.effectElements[1].p.v;\r\n        var color3 = this.filterManager.effectElements[2].p.v;\r\n        var tableR = color3[0] + ' ' + color2[0] + ' ' + color1[0];\r\n        var tableG = color3[1] + ' ' + color2[1] + ' ' + color1[1];\r\n        var tableB = color3[2] + ' ' + color2[2] + ' ' + color1[2];\r\n        this.feFuncR.setAttribute('tableValues', tableR);\r\n        this.feFuncG.setAttribute('tableValues', tableG);\r\n        this.feFuncB.setAttribute('tableValues', tableB);\r\n        //var opacity = this.filterManager.effectElements[2].p.v/100;\r\n        //this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');\r\n    }\r\n};\r\nfunction SVGProLevelsFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var effectElements = this.filterManager.effectElements;\r\n    var feComponentTransfer = createNS('feComponentTransfer');\r\n    var feFuncR, feFuncG, feFuncB;\r\n    \r\n    if(effectElements[10].p.k || effectElements[10].p.v !== 0 || effectElements[11].p.k || effectElements[11].p.v !== 1 || effectElements[12].p.k || effectElements[12].p.v !== 1 || effectElements[13].p.k || effectElements[13].p.v !== 0 || effectElements[14].p.k || effectElements[14].p.v !== 1){\r\n        this.feFuncR = this.createFeFunc('feFuncR', feComponentTransfer);\r\n    }\r\n    if(effectElements[17].p.k || effectElements[17].p.v !== 0 || effectElements[18].p.k || effectElements[18].p.v !== 1 || effectElements[19].p.k || effectElements[19].p.v !== 1 || effectElements[20].p.k || effectElements[20].p.v !== 0 || effectElements[21].p.k || effectElements[21].p.v !== 1){\r\n        this.feFuncG = this.createFeFunc('feFuncG', feComponentTransfer);\r\n    }\r\n    if(effectElements[24].p.k || effectElements[24].p.v !== 0 || effectElements[25].p.k || effectElements[25].p.v !== 1 || effectElements[26].p.k || effectElements[26].p.v !== 1 || effectElements[27].p.k || effectElements[27].p.v !== 0 || effectElements[28].p.k || effectElements[28].p.v !== 1){\r\n        this.feFuncB = this.createFeFunc('feFuncB', feComponentTransfer);\r\n    }\r\n    if(effectElements[31].p.k || effectElements[31].p.v !== 0 || effectElements[32].p.k || effectElements[32].p.v !== 1 || effectElements[33].p.k || effectElements[33].p.v !== 1 || effectElements[34].p.k || effectElements[34].p.v !== 0 || effectElements[35].p.k || effectElements[35].p.v !== 1){\r\n        this.feFuncA = this.createFeFunc('feFuncA', feComponentTransfer);\r\n    }\r\n    \r\n    if(this.feFuncR || this.feFuncG || this.feFuncB || this.feFuncA){\r\n        feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n        filter.appendChild(feComponentTransfer);\r\n        feComponentTransfer = createNS('feComponentTransfer');\r\n    }\r\n\r\n    if(effectElements[3].p.k || effectElements[3].p.v !== 0 || effectElements[4].p.k || effectElements[4].p.v !== 1 || effectElements[5].p.k || effectElements[5].p.v !== 1 || effectElements[6].p.k || effectElements[6].p.v !== 0 || effectElements[7].p.k || effectElements[7].p.v !== 1){\r\n\r\n        feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n        filter.appendChild(feComponentTransfer);\r\n        this.feFuncRComposed = this.createFeFunc('feFuncR', feComponentTransfer);\r\n        this.feFuncGComposed = this.createFeFunc('feFuncG', feComponentTransfer);\r\n        this.feFuncBComposed = this.createFeFunc('feFuncB', feComponentTransfer);\r\n    }\r\n}\r\n\r\nSVGProLevelsFilter.prototype.createFeFunc = function(type, feComponentTransfer) {\r\n    var feFunc = createNS(type);\r\n    feFunc.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFunc);\r\n    return feFunc;\r\n};\r\n\r\nSVGProLevelsFilter.prototype.getTableValue = function(inputBlack, inputWhite, gamma, outputBlack, outputWhite) {\r\n    var cnt = 0;\r\n    var segments = 256;\r\n    var perc;\r\n    var min = Math.min(inputBlack, inputWhite);\r\n    var max = Math.max(inputBlack, inputWhite);\r\n    var table = Array.call(null,{length:segments});\r\n    var colorValue;\r\n    var pos = 0;\r\n    var outputDelta = outputWhite - outputBlack; \r\n    var inputDelta = inputWhite - inputBlack; \r\n    while(cnt <= 256) {\r\n        perc = cnt/256;\r\n        if(perc <= min){\r\n            colorValue = inputDelta < 0 ? outputWhite : outputBlack;\r\n        } else if(perc >= max){\r\n            colorValue = inputDelta < 0 ? outputBlack : outputWhite;\r\n        } else {\r\n            colorValue = (outputBlack + outputDelta * Math.pow((perc - inputBlack) / inputDelta, 1 / gamma));\r\n        }\r\n        table[pos++] = colorValue;\r\n        cnt += 256/(segments-1);\r\n    }\r\n    return table.join(' ');\r\n};\r\n\r\nSVGProLevelsFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var val, cnt, perc, bezier;\r\n        var effectElements = this.filterManager.effectElements;\r\n        if(this.feFuncRComposed && (forceRender || effectElements[3].p._mdf || effectElements[4].p._mdf || effectElements[5].p._mdf || effectElements[6].p._mdf || effectElements[7].p._mdf)){\r\n            val = this.getTableValue(effectElements[3].p.v,effectElements[4].p.v,effectElements[5].p.v,effectElements[6].p.v,effectElements[7].p.v);\r\n            this.feFuncRComposed.setAttribute('tableValues',val);\r\n            this.feFuncGComposed.setAttribute('tableValues',val);\r\n            this.feFuncBComposed.setAttribute('tableValues',val);\r\n        }\r\n\r\n\r\n        if(this.feFuncR && (forceRender || effectElements[10].p._mdf || effectElements[11].p._mdf || effectElements[12].p._mdf || effectElements[13].p._mdf || effectElements[14].p._mdf)){\r\n            val = this.getTableValue(effectElements[10].p.v,effectElements[11].p.v,effectElements[12].p.v,effectElements[13].p.v,effectElements[14].p.v);\r\n            this.feFuncR.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncG && (forceRender || effectElements[17].p._mdf || effectElements[18].p._mdf || effectElements[19].p._mdf || effectElements[20].p._mdf || effectElements[21].p._mdf)){\r\n            val = this.getTableValue(effectElements[17].p.v,effectElements[18].p.v,effectElements[19].p.v,effectElements[20].p.v,effectElements[21].p.v);\r\n            this.feFuncG.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncB && (forceRender || effectElements[24].p._mdf || effectElements[25].p._mdf || effectElements[26].p._mdf || effectElements[27].p._mdf || effectElements[28].p._mdf)){\r\n            val = this.getTableValue(effectElements[24].p.v,effectElements[25].p.v,effectElements[26].p.v,effectElements[27].p.v,effectElements[28].p.v);\r\n            this.feFuncB.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncA && (forceRender || effectElements[31].p._mdf || effectElements[32].p._mdf || effectElements[33].p._mdf || effectElements[34].p._mdf || effectElements[35].p._mdf)){\r\n            val = this.getTableValue(effectElements[31].p.v,effectElements[32].p.v,effectElements[33].p.v,effectElements[34].p.v,effectElements[35].p.v);\r\n            this.feFuncA.setAttribute('tableValues',val);\r\n        }\r\n        \r\n    }\r\n};\r\nfunction SVGDropShadowEffect(filter, filterManager){\r\n    filter.setAttribute('x','-100%');\r\n    filter.setAttribute('y','-100%');\r\n    filter.setAttribute('width','400%');\r\n    filter.setAttribute('height','400%');\r\n    this.filterManager = filterManager;\r\n\r\n    var feGaussianBlur = createNS('feGaussianBlur');\r\n    feGaussianBlur.setAttribute('in','SourceAlpha');\r\n    feGaussianBlur.setAttribute('result','drop_shadow_1');\r\n    feGaussianBlur.setAttribute('stdDeviation','0');\r\n    this.feGaussianBlur = feGaussianBlur;\r\n    filter.appendChild(feGaussianBlur);\r\n\r\n    var feOffset = createNS('feOffset');\r\n    feOffset.setAttribute('dx','25');\r\n    feOffset.setAttribute('dy','0');\r\n    feOffset.setAttribute('in','drop_shadow_1');\r\n    feOffset.setAttribute('result','drop_shadow_2');\r\n    this.feOffset = feOffset;\r\n    filter.appendChild(feOffset);\r\n    var feFlood = createNS('feFlood');\r\n    feFlood.setAttribute('flood-color','#00ff00');\r\n    feFlood.setAttribute('flood-opacity','1');\r\n    feFlood.setAttribute('result','drop_shadow_3');\r\n    this.feFlood = feFlood;\r\n    filter.appendChild(feFlood);\r\n\r\n    var feComposite = createNS('feComposite');\r\n    feComposite.setAttribute('in','drop_shadow_3');\r\n    feComposite.setAttribute('in2','drop_shadow_2');\r\n    feComposite.setAttribute('operator','in');\r\n    feComposite.setAttribute('result','drop_shadow_4');\r\n    filter.appendChild(feComposite);\r\n\r\n\r\n    var feMerge = createNS('feMerge');\r\n    filter.appendChild(feMerge);\r\n    var feMergeNode;\r\n    feMergeNode = createNS('feMergeNode');\r\n    feMerge.appendChild(feMergeNode);\r\n    feMergeNode = createNS('feMergeNode');\r\n    feMergeNode.setAttribute('in','SourceGraphic');\r\n    this.feMergeNode = feMergeNode;\r\n    this.feMerge = feMerge;\r\n    this.originalNodeAdded = false;\r\n    feMerge.appendChild(feMergeNode);\r\n}\r\n\r\nSVGDropShadowEffect.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        if(forceRender || this.filterManager.effectElements[4].p._mdf){\r\n            this.feGaussianBlur.setAttribute('stdDeviation', this.filterManager.effectElements[4].p.v / 4);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[0].p._mdf){\r\n            var col = this.filterManager.effectElements[0].p.v;\r\n            this.feFlood.setAttribute('flood-color',rgbToHex(Math.round(col[0]*255),Math.round(col[1]*255),Math.round(col[2]*255)));\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[1].p._mdf){\r\n            this.feFlood.setAttribute('flood-opacity',this.filterManager.effectElements[1].p.v/255);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[2].p._mdf || this.filterManager.effectElements[3].p._mdf){\r\n            var distance = this.filterManager.effectElements[3].p.v;\r\n            var angle = (this.filterManager.effectElements[2].p.v - 90) * degToRads;\r\n            var x = distance * Math.cos(angle);\r\n            var y = distance * Math.sin(angle);\r\n            this.feOffset.setAttribute('dx', x);\r\n            this.feOffset.setAttribute('dy', y);\r\n        }\r\n        /*if(forceRender || this.filterManager.effectElements[5].p._mdf){\r\n            if(this.filterManager.effectElements[5].p.v === 1 && this.originalNodeAdded) {\r\n                this.feMerge.removeChild(this.feMergeNode);\r\n                this.originalNodeAdded = false;\r\n            } else if(this.filterManager.effectElements[5].p.v === 0 && !this.originalNodeAdded) {\r\n                this.feMerge.appendChild(this.feMergeNode);\r\n                this.originalNodeAdded = true;\r\n            }\r\n        }*/\r\n    }\r\n};\r\nvar _svgMatteSymbols = [];\r\nvar _svgMatteMaskCounter = 0;\r\n\r\nfunction SVGMatte3Effect(filterElem, filterManager, elem){\r\n    this.initialized = false;\r\n    this.filterManager = filterManager;\r\n    this.filterElem = filterElem;\r\n    this.elem = elem;\r\n    elem.matteElement = createNS('g');\r\n    elem.matteElement.appendChild(elem.layerElement);\r\n    elem.matteElement.appendChild(elem.transformedElement);\r\n    elem.baseElement = elem.matteElement;\r\n}\r\n\r\nSVGMatte3Effect.prototype.findSymbol = function(mask) {\r\n    var i = 0, len = _svgMatteSymbols.length;\r\n    while(i < len) {\r\n        if(_svgMatteSymbols[i] === mask) {\r\n            return _svgMatteSymbols[i];\r\n        }\r\n        i += 1;\r\n    }\r\n    return null;\r\n};\r\n\r\nSVGMatte3Effect.prototype.replaceInParent = function(mask, symbolId) {\r\n    var parentNode = mask.layerElement.parentNode;\r\n    if(!parentNode) {\r\n        return;\r\n    }\r\n    var children = parentNode.children;\r\n    var i = 0, len = children.length;\r\n    while (i < len) {\r\n        if (children[i] === mask.layerElement) {\r\n            break;\r\n        }\r\n        i += 1;\r\n    }\r\n    var nextChild;\r\n    if (i <= len - 2) {\r\n        nextChild = children[i + 1];\r\n    }\r\n    var useElem = createNS('use');\r\n    useElem.setAttribute('href', '#' + symbolId);\r\n    if(nextChild) {\r\n        parentNode.insertBefore(useElem, nextChild);\r\n    } else {\r\n        parentNode.appendChild(useElem);\r\n    }\r\n};\r\n\r\nSVGMatte3Effect.prototype.setElementAsMask = function(elem, mask) {\r\n    if(!this.findSymbol(mask)) {\r\n        var symbolId = 'matte_' + randomString(5) + '_' + _svgMatteMaskCounter++;\r\n        var masker = createNS('mask');\r\n        masker.setAttribute('id', mask.layerId);\r\n        masker.setAttribute('mask-type', 'alpha');\r\n        _svgMatteSymbols.push(mask);\r\n        var defs = elem.globalData.defs;\r\n        defs.appendChild(masker);\r\n        var symbol = createNS('symbol');\r\n        symbol.setAttribute('id', symbolId);\r\n        this.replaceInParent(mask, symbolId);\r\n        symbol.appendChild(mask.layerElement);\r\n        defs.appendChild(symbol);\r\n        useElem = createNS('use');\r\n        useElem.setAttribute('href', '#' + symbolId);\r\n        masker.appendChild(useElem);\r\n        mask.data.hd = false;\r\n        mask.show();\r\n    }\r\n    elem.setMatte(mask.layerId);\r\n};\r\n\r\nSVGMatte3Effect.prototype.initialize = function() {\r\n    var ind = this.filterManager.effectElements[0].p.v;\r\n    var i = 0, len = this.elem.comp.elements.length;\r\n    while (i < len) {\r\n    \tif (this.elem.comp.elements[i].data.ind === ind) {\r\n    \t\tthis.setElementAsMask(this.elem, this.elem.comp.elements[i]);\r\n    \t}\r\n    \ti += 1;\r\n    }\r\n    this.initialized = true;\r\n};\r\n\r\nSVGMatte3Effect.prototype.renderFrame = function() {\r\n\tif(!this.initialized) {\r\n\t\tthis.initialize();\r\n\t}\r\n};\r\nfunction SVGEffects(elem){\r\n    var i, len = elem.data.ef ? elem.data.ef.length : 0;\r\n    var filId = randomString(10);\r\n    var fil = filtersFactory.createFilter(filId);\r\n    var count = 0;\r\n    this.filters = [];\r\n    var filterManager;\r\n    for(i=0;i<len;i+=1){\r\n        filterManager = null;\r\n        if(elem.data.ef[i].ty === 20){\r\n            count += 1;\r\n            filterManager = new SVGTintFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 21){\r\n            count += 1;\r\n            filterManager = new SVGFillFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 22){\r\n            filterManager = new SVGStrokeEffect(elem, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 23){\r\n            count += 1;\r\n            filterManager = new SVGTritoneFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 24){\r\n            count += 1;\r\n            filterManager = new SVGProLevelsFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 25){\r\n            count += 1;\r\n            filterManager = new SVGDropShadowEffect(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 28){\r\n            //count += 1;\r\n            filterManager = new SVGMatte3Effect(fil, elem.effectsManager.effectElements[i], elem);\r\n        }\r\n        if(filterManager) {\r\n            this.filters.push(filterManager);\r\n        }\r\n    }\r\n    if(count){\r\n        elem.globalData.defs.appendChild(fil);\r\n        elem.layerElement.setAttribute('filter','url(' + locationHref + '#'+filId+')');\r\n    }\r\n}\r\n\r\nSVGEffects.prototype.renderFrame = function(_isFirstFrame){\r\n    var i, len = this.filters.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.filters[i].renderFrame(_isFirstFrame);\r\n    }\r\n};\r\nvar animationManager = (function(){\r\n    var moduleOb = {};\r\n    var registeredAnimations = [];\r\n    var initTime = 0;\r\n    var len = 0;\r\n    var idled = true;\r\n    var playingAnimationsNum = 0;\r\n    var _stopped = true;\r\n\r\n    function removeElement(ev){\r\n        var i = 0;\r\n        var animItem = ev.target;\r\n        while(i<len) {\r\n            if (registeredAnimations[i].animation === animItem) {\r\n                registeredAnimations.splice(i, 1);\r\n                i -= 1;\r\n                len -= 1;\r\n                if(!animItem.isPaused){\r\n                    subtractPlayingCount();\r\n                }\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    function registerAnimation(element, animationData){\r\n        if(!element){\r\n            return null;\r\n        }\r\n        var i=0;\r\n        while(i<len){\r\n            if(registeredAnimations[i].elem == element && registeredAnimations[i].elem !== null ){\r\n                return registeredAnimations[i].animation;\r\n            }\r\n            i+=1;\r\n        }\r\n        var animItem = new AnimationItem();\r\n        setupAnimation(animItem, element);\r\n        animItem.setData(element, animationData);\r\n        return animItem;\r\n    }\r\n\r\n    function addPlayingCount(){\r\n        playingAnimationsNum += 1;\r\n        activate();\r\n    }\r\n\r\n    function subtractPlayingCount(){\r\n        playingAnimationsNum -= 1;\r\n        if(playingAnimationsNum === 0){\r\n            idled = true;\r\n        }\r\n    }\r\n\r\n    function setupAnimation(animItem, element){\r\n        animItem.addEventListener('destroy',removeElement);\r\n        animItem.addEventListener('_active',addPlayingCount);\r\n        animItem.addEventListener('_idle',subtractPlayingCount);\r\n        registeredAnimations.push({elem: element,animation:animItem});\r\n        len += 1;\r\n    }\r\n\r\n    function loadAnimation(params){\r\n        var animItem = new AnimationItem();\r\n        setupAnimation(animItem, null);\r\n        animItem.setParams(params);\r\n        return animItem;\r\n    }\r\n\r\n\r\n    function setSpeed(val,animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.setSpeed(val, animation);\r\n        }\r\n    }\r\n\r\n    function setDirection(val, animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.setDirection(val, animation);\r\n        }\r\n    }\r\n\r\n    function play(animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.play(animation);\r\n        }\r\n    }\r\n    function resume(nowTime) {\r\n        var elapsedTime = nowTime - initTime;\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.advanceTime(elapsedTime);\r\n        }\r\n        initTime = nowTime;\r\n        if(!idled) {\r\n            window.requestAnimationFrame(resume);\r\n        } else {\r\n            _stopped = true;\r\n        }\r\n    }\r\n\r\n    function first(nowTime){\r\n        initTime = nowTime;\r\n        window.requestAnimationFrame(resume);\r\n    }\r\n\r\n    function pause(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.pause(animation);\r\n        }\r\n    }\r\n\r\n    function goToAndStop(value,isFrame,animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.goToAndStop(value,isFrame,animation);\r\n        }\r\n    }\r\n\r\n    function stop(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.stop(animation);\r\n        }\r\n    }\r\n\r\n    function togglePause(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.togglePause(animation);\r\n        }\r\n    }\r\n\r\n    function destroy(animation) {\r\n        var i;\r\n        for(i=(len-1);i>=0;i-=1){\r\n            registeredAnimations[i].animation.destroy(animation);\r\n        }\r\n    }\r\n\r\n    function searchAnimations(animationData, standalone, renderer){\r\n        var animElements = [].concat([].slice.call(document.getElementsByClassName('lottie')),\r\n                  [].slice.call(document.getElementsByClassName('bodymovin')));\r\n        var i, len = animElements.length;\r\n        for(i=0;i<len;i+=1){\r\n            if(renderer){\r\n                animElements[i].setAttribute('data-bm-type',renderer);\r\n            }\r\n            registerAnimation(animElements[i], animationData);\r\n        }\r\n        if(standalone && len === 0){\r\n            if(!renderer){\r\n                renderer = 'svg';\r\n            }\r\n            var body = document.getElementsByTagName('body')[0];\r\n            body.innerHTML = '';\r\n            var div = createTag('div');\r\n            div.style.width = '100%';\r\n            div.style.height = '100%';\r\n            div.setAttribute('data-bm-type',renderer);\r\n            body.appendChild(div);\r\n            registerAnimation(div, animationData);\r\n        }\r\n    }\r\n\r\n    function resize(){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.resize();\r\n        }\r\n    }\r\n\r\n    /*function start(){\r\n        window.requestAnimationFrame(first);\r\n    }*/\r\n\r\n    function activate(){\r\n        if(idled){\r\n            idled = false;\r\n            if(_stopped) {\r\n                window.requestAnimationFrame(first);\r\n                _stopped = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    //start();\r\n\r\n    //setTimeout(start,0);\r\n\r\n    moduleOb.registerAnimation = registerAnimation;\r\n    moduleOb.loadAnimation = loadAnimation;\r\n    moduleOb.setSpeed = setSpeed;\r\n    moduleOb.setDirection = setDirection;\r\n    moduleOb.play = play;\r\n    moduleOb.pause = pause;\r\n    moduleOb.stop = stop;\r\n    moduleOb.togglePause = togglePause;\r\n    moduleOb.searchAnimations = searchAnimations;\r\n    moduleOb.resize = resize;\r\n    //moduleOb.start = start;\r\n    moduleOb.goToAndStop = goToAndStop;\r\n    moduleOb.destroy = destroy;\r\n    return moduleOb;\r\n}());\r\n\r\nvar AnimationItem = function () {\r\n    this._cbs = [];\r\n    this.name = '';\r\n    this.path = '';\r\n    this.isLoaded = false;\r\n    this.currentFrame = 0;\r\n    this.currentRawFrame = 0;\r\n    this.totalFrames = 0;\r\n    this.frameRate = 0;\r\n    this.frameMult = 0;\r\n    this.playSpeed = 1;\r\n    this.playDirection = 1;\r\n    this.pendingElements = 0;\r\n    this.playCount = 0;\r\n    this.animationData = {};\r\n    this.layers = [];\r\n    this.assets = [];\r\n    this.isPaused = true;\r\n    this.autoplay = false;\r\n    this.loop = true;\r\n    this.renderer = null;\r\n    this.animationID = randomString(10);\r\n    this.assetsPath = '';\r\n    this.timeCompleted = 0;\r\n    this.segmentPos = 0;\r\n    this.subframeEnabled = subframeEnabled;\r\n    this.segments = [];\r\n    this._idle = true;\r\n    this.projectInterface = ProjectInterface();\r\n};\r\n\r\nextendPrototype([BaseEvent], AnimationItem);\r\n\r\nAnimationItem.prototype.setParams = function(params) {\r\n    var self = this;\r\n    if(params.context){\r\n        this.context = params.context;\r\n    }\r\n    if(params.wrapper || params.container){\r\n        this.wrapper = params.wrapper || params.container;\r\n    }\r\n    var animType = params.animType ? params.animType : params.renderer ? params.renderer : 'svg';\r\n    switch(animType){\r\n        case 'canvas':\r\n            this.renderer = new CanvasRenderer(this, params.rendererSettings);\r\n            break;\r\n        case 'svg':\r\n            this.renderer = new SVGRenderer(this, params.rendererSettings);\r\n            break;\r\n        default:\r\n            this.renderer = new HybridRenderer(this, params.rendererSettings);\r\n            break;\r\n    }\r\n    this.renderer.setProjectInterface(this.projectInterface);\r\n    this.animType = animType;\r\n\r\n    if(params.loop === '' || params.loop === null){\r\n    }else if(params.loop === false){\r\n        this.loop = false;\r\n    }else if(params.loop === true){\r\n        this.loop = true;\r\n    }else{\r\n        this.loop = parseInt(params.loop);\r\n    }\r\n    this.autoplay = 'autoplay' in params ? params.autoplay : true;\r\n    this.name = params.name ? params.name :  '';\r\n    this.autoloadSegments = params.hasOwnProperty('autoloadSegments') ? params.autoloadSegments :  true;\r\n    if(params.animationData){\r\n        self.configAnimation(params.animationData);\r\n    }else if(params.path){\r\n        if(params.path.substr(-4) != 'json'){\r\n            if (params.path.substr(-1, 1) != '/') {\r\n                params.path += '/';\r\n            }\r\n            params.path += 'data.json';\r\n        }\r\n\r\n        var xhr = new XMLHttpRequest();\r\n        if(params.path.lastIndexOf('\\\\') != -1){\r\n            this.path = params.path.substr(0,params.path.lastIndexOf('\\\\')+1);\r\n        }else{\r\n            this.path = params.path.substr(0,params.path.lastIndexOf('/')+1);\r\n        }\r\n        this.assetsPath = params.assetsPath;\r\n        this.fileName = params.path.substr(params.path.lastIndexOf('/')+1);\r\n        this.fileName = this.fileName.substr(0,this.fileName.lastIndexOf('.json'));\r\n        xhr.open('GET', params.path, true);\r\n        xhr.send();\r\n        xhr.onreadystatechange = function () {\r\n            if (xhr.readyState == 4) {\r\n                if(xhr.status == 200){\r\n                    self.configAnimation(JSON.parse(xhr.responseText));\r\n                }else{\r\n                    try{\r\n                        var response = JSON.parse(xhr.responseText);\r\n                        self.configAnimation(response);\r\n                    }catch(err){\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.setData = function (wrapper, animationData) {\r\n    var params = {\r\n        wrapper: wrapper,\r\n        animationData: animationData ? (typeof animationData  === \"object\") ? animationData : JSON.parse(animationData) : null\r\n    };\r\n    var wrapperAttributes = wrapper.attributes;\r\n\r\n    params.path = wrapperAttributes.getNamedItem('data-animation-path') ? wrapperAttributes.getNamedItem('data-animation-path').value : wrapperAttributes.getNamedItem('data-bm-path') ? wrapperAttributes.getNamedItem('data-bm-path').value :  wrapperAttributes.getNamedItem('bm-path') ? wrapperAttributes.getNamedItem('bm-path').value : '';\r\n    params.animType = wrapperAttributes.getNamedItem('data-anim-type') ? wrapperAttributes.getNamedItem('data-anim-type').value : wrapperAttributes.getNamedItem('data-bm-type') ? wrapperAttributes.getNamedItem('data-bm-type').value : wrapperAttributes.getNamedItem('bm-type') ? wrapperAttributes.getNamedItem('bm-type').value :  wrapperAttributes.getNamedItem('data-bm-renderer') ? wrapperAttributes.getNamedItem('data-bm-renderer').value : wrapperAttributes.getNamedItem('bm-renderer') ? wrapperAttributes.getNamedItem('bm-renderer').value : 'canvas';\r\n\r\n    var loop = wrapperAttributes.getNamedItem('data-anim-loop') ? wrapperAttributes.getNamedItem('data-anim-loop').value :  wrapperAttributes.getNamedItem('data-bm-loop') ? wrapperAttributes.getNamedItem('data-bm-loop').value :  wrapperAttributes.getNamedItem('bm-loop') ? wrapperAttributes.getNamedItem('bm-loop').value : '';\r\n    if(loop === ''){\r\n    }else if(loop === 'false'){\r\n        params.loop = false;\r\n    }else if(loop === 'true'){\r\n        params.loop = true;\r\n    }else{\r\n        params.loop = parseInt(loop);\r\n    }\r\n    var autoplay = wrapperAttributes.getNamedItem('data-anim-autoplay') ? wrapperAttributes.getNamedItem('data-anim-autoplay').value :  wrapperAttributes.getNamedItem('data-bm-autoplay') ? wrapperAttributes.getNamedItem('data-bm-autoplay').value :  wrapperAttributes.getNamedItem('bm-autoplay') ? wrapperAttributes.getNamedItem('bm-autoplay').value : true;\r\n    params.autoplay = autoplay !== \"false\";\r\n\r\n    params.name = wrapperAttributes.getNamedItem('data-name') ? wrapperAttributes.getNamedItem('data-name').value :  wrapperAttributes.getNamedItem('data-bm-name') ? wrapperAttributes.getNamedItem('data-bm-name').value : wrapperAttributes.getNamedItem('bm-name') ? wrapperAttributes.getNamedItem('bm-name').value :  '';\r\n    var prerender = wrapperAttributes.getNamedItem('data-anim-prerender') ? wrapperAttributes.getNamedItem('data-anim-prerender').value :  wrapperAttributes.getNamedItem('data-bm-prerender') ? wrapperAttributes.getNamedItem('data-bm-prerender').value :  wrapperAttributes.getNamedItem('bm-prerender') ? wrapperAttributes.getNamedItem('bm-prerender').value : '';\r\n\r\n    if(prerender === 'false'){\r\n        params.prerender = false;\r\n    }\r\n    this.setParams(params);\r\n};\r\n\r\nAnimationItem.prototype.includeLayers = function(data) {\r\n    if(data.op > this.animationData.op){\r\n        this.animationData.op = data.op;\r\n        this.totalFrames = Math.floor(data.op - this.animationData.ip);\r\n        this.animationData.tf = this.totalFrames;\r\n    }\r\n    var layers = this.animationData.layers;\r\n    var i, len = layers.length;\r\n    var newLayers = data.layers;\r\n    var j, jLen = newLayers.length;\r\n    for(j=0;j<jLen;j+=1){\r\n        i = 0;\r\n        while(i<len){\r\n            if(layers[i].id == newLayers[j].id){\r\n                layers[i] = newLayers[j];\r\n                break;\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n    if(data.chars || data.fonts){\r\n        this.renderer.globalData.fontManager.addChars(data.chars);\r\n        this.renderer.globalData.fontManager.addFonts(data.fonts, this.renderer.globalData.defs);\r\n    }\r\n    if(data.assets){\r\n        len = data.assets.length;\r\n        for(i = 0; i < len; i += 1){\r\n            this.animationData.assets.push(data.assets[i]);\r\n        }\r\n    }\r\n    //this.totalFrames = 50;\r\n    //this.animationData.tf = 50;\r\n    this.animationData.__complete = false;\r\n    dataManager.completeData(this.animationData,this.renderer.globalData.fontManager);\r\n    this.renderer.includeLayers(data.layers);\r\n    if(expressionsPlugin){\r\n        expressionsPlugin.initExpressions(this);\r\n    }\r\n    this.renderer.renderFrame(-1);\r\n    this.loadNextSegment();\r\n};\r\n\r\nAnimationItem.prototype.loadNextSegment = function() {\r\n    var segments = this.animationData.segments;\r\n    if(!segments || segments.length === 0 || !this.autoloadSegments){\r\n        this.trigger('data_ready');\r\n        this.timeCompleted = this.animationData.tf;\r\n        return;\r\n    }\r\n    var segment = segments.shift();\r\n    this.timeCompleted = segment.time * this.frameRate;\r\n    var xhr = new XMLHttpRequest();\r\n    var self = this;\r\n    var segmentPath = this.path+this.fileName+'_' + this.segmentPos + '.json';\r\n    this.segmentPos += 1;\r\n    xhr.open('GET', segmentPath, true);\r\n    xhr.send();\r\n    xhr.onreadystatechange = function () {\r\n        if (xhr.readyState == 4) {\r\n            if(xhr.status == 200){\r\n                self.includeLayers(JSON.parse(xhr.responseText));\r\n            }else{\r\n                try{\r\n                    var response = JSON.parse(xhr.responseText);\r\n                    self.includeLayers(response);\r\n                }catch(err){\r\n                }\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\nAnimationItem.prototype.loadSegments = function() {\r\n    var segments = this.animationData.segments;\r\n    if(!segments) {\r\n        this.timeCompleted = this.animationData.tf;\r\n    }\r\n    this.loadNextSegment();\r\n};\r\n\r\nAnimationItem.prototype.configAnimation = function (animData) {\r\n    var _this = this;\r\n    if(this.renderer && this.renderer.destroyed){\r\n        return;\r\n    }\r\n    //console.log(JSON.parse(JSON.stringify(animData)));\r\n    //animData.w = Math.round(animData.w/blitter);\r\n    //animData.h = Math.round(animData.h/blitter);\r\n    this.animationData = animData;\r\n    this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip);\r\n    this.animationData.tf = this.totalFrames;\r\n    this.renderer.configAnimation(animData);\r\n    if(!animData.assets){\r\n        animData.assets = [];\r\n    }\r\n    if(animData.comps) {\r\n        animData.assets = animData.assets.concat(animData.comps);\r\n        animData.comps = null;\r\n    }\r\n    this.renderer.searchExtraCompositions(animData.assets);\r\n\r\n    this.layers = this.animationData.layers;\r\n    this.assets = this.animationData.assets;\r\n    this.frameRate = this.animationData.fr;\r\n    this.firstFrame = Math.round(this.animationData.ip);\r\n    this.frameMult = this.animationData.fr / 1000;\r\n    this.trigger('config_ready');\r\n    this.imagePreloader = new ImagePreloader();\r\n    this.imagePreloader.setAssetsPath(this.assetsPath);\r\n    this.imagePreloader.setPath(this.path);\r\n    this.imagePreloader.loadAssets(animData.assets, function(err) {\r\n        if(!err) {\r\n            _this.trigger('loaded_images');\r\n        }\r\n    });\r\n    this.loadSegments();\r\n    this.updaFrameModifier();\r\n    if(this.renderer.globalData.fontManager){\r\n        this.waitForFontsLoaded();\r\n    }else{\r\n        dataManager.completeData(this.animationData,this.renderer.globalData.fontManager);\r\n        this.checkLoaded();\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.waitForFontsLoaded = (function(){\r\n    function checkFontsLoaded(){\r\n        if(this.renderer.globalData.fontManager.loaded){\r\n            dataManager.completeData(this.animationData,this.renderer.globalData.fontManager);\r\n            //this.renderer.buildItems(this.animationData.layers);\r\n            this.checkLoaded();\r\n        }else{\r\n            setTimeout(checkFontsLoaded.bind(this),20);\r\n        }\r\n    }\r\n\r\n    return function(){\r\n        checkFontsLoaded.bind(this)();\r\n    };\r\n}());\r\n\r\nAnimationItem.prototype.addPendingElement = function () {\r\n    this.pendingElements += 1;\r\n};\r\n\r\nAnimationItem.prototype.elementLoaded = function () {\r\n    this.pendingElements--;\r\n    this.checkLoaded();\r\n};\r\n\r\nAnimationItem.prototype.checkLoaded = function () {\r\n    if (this.pendingElements === 0) {\r\n        if(expressionsPlugin){\r\n            expressionsPlugin.initExpressions(this);\r\n        }\r\n        this.renderer.initItems();\r\n        setTimeout(function(){\r\n            this.trigger('DOMLoaded');\r\n        }.bind(this),0);\r\n        this.isLoaded = true;\r\n        this.gotoFrame();\r\n        if(this.autoplay){\r\n            this.play();\r\n        }\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.resize = function () {\r\n    this.renderer.updateContainerSize();\r\n};\r\n\r\nAnimationItem.prototype.setSubframe = function(flag){\r\n    this.subframeEnabled = flag ? true : false;\r\n};\r\n\r\nAnimationItem.prototype.gotoFrame = function () {\r\n    this.currentFrame = this.subframeEnabled ? this.currentRawFrame : ~~this.currentRawFrame;\r\n\r\n    if(this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted){\r\n        this.currentFrame = this.timeCompleted;\r\n    }\r\n    //console.log(this.currentFrame)\r\n    this.trigger('enterFrame');\r\n    // console.log('gotoFrame: ', this.currentFrame )\r\n    this.renderFrame();\r\n};\r\n\r\nAnimationItem.prototype.renderFrame = function () {\r\n    if(this.isLoaded === false){\r\n        return;\r\n    }\r\n    //console.log('this.currentFrame:',this.currentFrame + this.firstFrame);\r\n    this.renderer.renderFrame(this.currentFrame + this.firstFrame);\r\n};\r\n\r\nAnimationItem.prototype.play = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === true){\r\n        this.isPaused = false;\r\n        if(this._idle){\r\n            this._idle = false;\r\n            this.trigger('_active');\r\n        }\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.pause = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === false){\r\n        this.isPaused = true;\r\n        this._idle = true;\r\n        this.trigger('_idle');\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.togglePause = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === true){\r\n        this.play();\r\n    }else{\r\n        this.pause();\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.stop = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    this.pause();\r\n    this.playCount = 0;\r\n    this.setCurrentRawFrameValue(0);\r\n};\r\n\r\nAnimationItem.prototype.goToAndStop = function (value, isFrame, name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(isFrame){\r\n        this.setCurrentRawFrameValue(value);\r\n    }else{\r\n        this.setCurrentRawFrameValue(value * this.frameModifier);\r\n    }\r\n    this.pause();\r\n};\r\n\r\nAnimationItem.prototype.goToAndPlay = function (value, isFrame, name) {\r\n    this.goToAndStop(value, isFrame, name);\r\n    this.play();\r\n};\r\n\r\nAnimationItem.prototype.advanceTime = function (value) {\r\n    if (this.isPaused === true || this.isLoaded === false) {\r\n        return;\r\n    }\r\n    var nextValue = this.currentRawFrame + value * this.frameModifier;\r\n    var _isComplete = false;\r\n    // Checking if nextValue > totalFrames - 1 for addressing non looping and looping animations.\r\n    // If animation won't loop, it should stop at totalFrames - 1. If it will loop it should complete the last frame and then loop.\r\n    if (nextValue >= this.totalFrames - 1 && this.frameModifier > 0) {\r\n        if (!this.loop || this.playCount === this.loop) {\r\n            if (!this.checkSegments(nextValue % this.totalFrames)) {\r\n                _isComplete = true;\r\n                nextValue = this.totalFrames - 1;\r\n            }\r\n        } else if (nextValue >= this.totalFrames) {\r\n            this.playCount += 1;\r\n            if (!this.checkSegments(nextValue % this.totalFrames)) {\r\n                this.setCurrentRawFrameValue(nextValue % this.totalFrames);\r\n                this.trigger('loopComplete');\r\n            }\r\n        } else {\r\n            this.setCurrentRawFrameValue(nextValue);\r\n        }\r\n    } else if(nextValue < 0) {\r\n        if (!this.checkSegments(nextValue % this.totalFrames)) {\r\n            if (this.loop && !(this.playCount-- <= 0 && this.loop !== true)) {\r\n                this.setCurrentRawFrameValue(this.totalFrames + (nextValue % this.totalFrames));\r\n                this.trigger('loopComplete');\r\n            } else {\r\n                _isComplete = true;\r\n                nextValue = 0;\r\n            }\r\n        }\r\n    } else {\r\n        this.setCurrentRawFrameValue(nextValue);\r\n    }\r\n    if (_isComplete) {\r\n        this.setCurrentRawFrameValue(nextValue);\r\n        this.pause();\r\n        this.trigger('complete');\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.adjustSegment = function(arr, offset){\r\n    this.playCount = 0;\r\n    if(arr[1] < arr[0]){\r\n        if(this.frameModifier > 0){\r\n            if(this.playSpeed < 0){\r\n                this.setSpeed(-this.playSpeed);\r\n            } else {\r\n                this.setDirection(-1);\r\n            }\r\n        }\r\n        this.timeCompleted = this.totalFrames = arr[0] - arr[1];\r\n        this.firstFrame = arr[1];\r\n        this.setCurrentRawFrameValue(this.totalFrames - 0.001 - offset);\r\n    } else if(arr[1] > arr[0]){\r\n        if(this.frameModifier < 0){\r\n            if(this.playSpeed < 0){\r\n                this.setSpeed(-this.playSpeed);\r\n            } else {\r\n                this.setDirection(1);\r\n            }\r\n        }\r\n        this.timeCompleted = this.totalFrames = arr[1] - arr[0];\r\n        this.firstFrame = arr[0];\r\n        this.setCurrentRawFrameValue(0.001 + offset);\r\n    }\r\n    this.trigger('segmentStart');\r\n};\r\nAnimationItem.prototype.setSegment = function (init,end) {\r\n    var pendingFrame = -1;\r\n    if(this.isPaused) {\r\n        if (this.currentRawFrame + this.firstFrame < init) {\r\n            pendingFrame = init;\r\n        } else if (this.currentRawFrame + this.firstFrame > end) {\r\n            pendingFrame = end - init;\r\n        }\r\n    }\r\n\r\n    this.firstFrame = init;\r\n    this.timeCompleted = this.totalFrames = end - init;\r\n    if(pendingFrame !== -1) {\r\n        this.goToAndStop(pendingFrame,true);\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.playSegments = function (arr,forceFlag) {\r\n    if(typeof arr[0] === 'object'){\r\n        var i, len = arr.length;\r\n        for(i=0;i<len;i+=1){\r\n            this.segments.push(arr[i]);\r\n        }\r\n    }else{\r\n        this.segments.push(arr);\r\n    }\r\n    if(forceFlag){\r\n        this.checkSegments(0);\r\n    }\r\n    if(this.isPaused){\r\n        this.play();\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.resetSegments = function (forceFlag) {\r\n    this.segments.length = 0;\r\n    this.segments.push([this.animationData.ip,this.animationData.op]);\r\n    //this.segments.push([this.animationData.ip*this.frameRate,Math.floor(this.animationData.op - this.animationData.ip+this.animationData.ip*this.frameRate)]);\r\n    if(forceFlag){\r\n        this.checkSegments(0);\r\n    }\r\n};\r\nAnimationItem.prototype.checkSegments = function(offset){\r\n    if(this.segments.length) {\r\n        //console.log(this.currentRawFrame % lastFrame)\r\n        this.adjustSegment(this.segments.shift(), offset);\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\nAnimationItem.prototype.remove = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    this.renderer.destroy();\r\n};\r\n\r\nAnimationItem.prototype.destroy = function (name) {\r\n    if((name && this.name != name) || (this.renderer && this.renderer.destroyed)){\r\n        return;\r\n    }\r\n    this.renderer.destroy();\r\n    this.trigger('destroy');\r\n    this._cbs = null;\r\n    this.onEnterFrame = this.onLoopComplete = this.onComplete = this.onSegmentStart = this.onDestroy = null;\r\n    this.renderer = null;\r\n};\r\n\r\nAnimationItem.prototype.setCurrentRawFrameValue = function(value){\r\n    this.currentRawFrame = value;\r\n    this.gotoFrame();\r\n};\r\n\r\nAnimationItem.prototype.setSpeed = function (val) {\r\n    this.playSpeed = val;\r\n    this.updaFrameModifier();\r\n};\r\n\r\nAnimationItem.prototype.setDirection = function (val) {\r\n    this.playDirection = val < 0 ? -1 : 1;\r\n    this.updaFrameModifier();\r\n};\r\n\r\nAnimationItem.prototype.updaFrameModifier = function () {\r\n    this.frameModifier = this.frameMult * this.playSpeed * this.playDirection;\r\n};\r\n\r\nAnimationItem.prototype.getPath = function () {\r\n    return this.path;\r\n};\r\n\r\nAnimationItem.prototype.getAssetsPath = function (assetData) {\r\n    var path = '';\r\n    if(this.assetsPath){\r\n        var imagePath = assetData.p;\r\n        if(imagePath.indexOf('images/') !== -1){\r\n            imagePath = imagePath.split('/')[1];\r\n        }\r\n        path = this.assetsPath + imagePath;\r\n    } else {\r\n        path = this.path;\r\n        path += assetData.u ? assetData.u : '';\r\n        path += assetData.p;\r\n    }\r\n    return path;\r\n};\r\n\r\nAnimationItem.prototype.getAssetData = function (id) {\r\n    var i = 0, len = this.assets.length;\r\n    while (i < len) {\r\n        if(id == this.assets[i].id){\r\n            return this.assets[i];\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.hide = function () {\r\n    this.renderer.hide();\r\n};\r\n\r\nAnimationItem.prototype.show = function () {\r\n    this.renderer.show();\r\n};\r\n\r\nAnimationItem.prototype.getAssets = function () {\r\n    return this.assets;\r\n};\r\n\r\nAnimationItem.prototype.trigger = function(name){\r\n    if(this._cbs && this._cbs[name]){\r\n        switch(name){\r\n            case 'enterFrame':\r\n                this.triggerEvent(name,new BMEnterFrameEvent(name,this.currentFrame,this.totalFrames,this.frameMult));\r\n                break;\r\n            case 'loopComplete':\r\n                this.triggerEvent(name,new BMCompleteLoopEvent(name,this.loop,this.playCount,this.frameMult));\r\n                break;\r\n            case 'complete':\r\n                this.triggerEvent(name,new BMCompleteEvent(name,this.frameMult));\r\n                break;\r\n            case 'segmentStart':\r\n                this.triggerEvent(name,new BMSegmentStartEvent(name,this.firstFrame,this.totalFrames));\r\n                break;\r\n            case 'destroy':\r\n                this.triggerEvent(name,new BMDestroyEvent(name,this));\r\n                break;\r\n            default:\r\n                this.triggerEvent(name);\r\n        }\r\n    }\r\n    if(name === 'enterFrame' && this.onEnterFrame){\r\n        this.onEnterFrame.call(this,new BMEnterFrameEvent(name,this.currentFrame,this.totalFrames,this.frameMult));\r\n    }\r\n    if(name === 'loopComplete' && this.onLoopComplete){\r\n        this.onLoopComplete.call(this,new BMCompleteLoopEvent(name,this.loop,this.playCount,this.frameMult));\r\n    }\r\n    if(name === 'complete' && this.onComplete){\r\n        this.onComplete.call(this,new BMCompleteEvent(name,this.frameMult));\r\n    }\r\n    if(name === 'segmentStart' && this.onSegmentStart){\r\n        this.onSegmentStart.call(this,new BMSegmentStartEvent(name,this.firstFrame,this.totalFrames));\r\n    }\r\n    if(name === 'destroy' && this.onDestroy){\r\n        this.onDestroy.call(this,new BMDestroyEvent(name,this));\r\n    }\r\n};\r\nfunction EffectsManager(){}\r\n    var lottiejs = {};\r\n\r\n    function setLocationHref (href) {\r\n        locationHref = href;\r\n    }\r\n    function play(animation){\r\n        animationManager.play(animation);\r\n    }\r\n\r\n    function pause(animation) {\r\n        animationManager.pause(animation);\r\n    }\r\n\r\n    function togglePause(animation) {\r\n        animationManager.togglePause(animation);\r\n    }\r\n\r\n    function setSpeed(value, animation) {\r\n        animationManager.setSpeed(value, animation);\r\n    }\r\n\r\n    function setDirection(value, animation) {\r\n        animationManager.setDirection(value, animation);\r\n    }\r\n\r\n    function stop(animation) {\r\n        animationManager.stop(animation);\r\n    }\r\n\r\n    function searchAnimations() {\r\n        if (standalone === true) {\r\n            animationManager.searchAnimations(animationData, standalone, renderer);\r\n        } else {\r\n            animationManager.searchAnimations();\r\n        }\r\n    }\r\n\r\n    function registerAnimation(elem) {\r\n        return animationManager.registerAnimation(elem);\r\n    }\r\n\r\n    function resize() {\r\n        animationManager.resize();\r\n    }\r\n\r\n    /*function start() {\r\n        animationManager.start();\r\n    }*/\r\n\r\n    function goToAndStop(val, isFrame, animation) {\r\n        animationManager.goToAndStop(val, isFrame, animation);\r\n    }\r\n\r\n    function setSubframeRendering(flag) {\r\n        subframeEnabled = flag;\r\n    }\r\n\r\n    function loadAnimation(params) {\r\n        if (standalone === true) {\r\n            params.animationData = JSON.parse(animationData);\r\n        }\r\n        return animationManager.loadAnimation(params);\r\n    }\r\n\r\n    function destroy(animation) {\r\n        return animationManager.destroy(animation);\r\n    }\r\n\r\n    function setQuality(value) {\r\n        if (typeof value === 'string') {\r\n            switch (value) {\r\n                case 'high':\r\n                    defaultCurveSegments = 200;\r\n                    break;\r\n                case 'medium':\r\n                    defaultCurveSegments = 50;\r\n                    break;\r\n                case 'low':\r\n                    defaultCurveSegments = 10;\r\n                    break;\r\n            }\r\n        } else if (!isNaN(value) && value > 1) {\r\n            defaultCurveSegments = value;\r\n        }\r\n        if (defaultCurveSegments >= 50) {\r\n            roundValues(false);\r\n        } else {\r\n            roundValues(true);\r\n        }\r\n    }\r\n\r\n    function inBrowser() {\r\n        return typeof navigator !== 'undefined';\r\n    }\r\n\r\n    function installPlugin(type, plugin) {\r\n        if (type === 'expressions') {\r\n            expressionsPlugin = plugin;\r\n        }\r\n    }\r\n\r\n    function getFactory(name) {\r\n        switch (name) {\r\n            case \"propertyFactory\":\r\n                return PropertyFactory;\r\n            case \"shapePropertyFactory\":\r\n                return ShapePropertyFactory;\r\n            case \"matrix\":\r\n                return Matrix;\r\n        }\r\n    }\r\n    lottiejs.play = play;\r\n    lottiejs.pause = pause;\r\n    lottiejs.setLocationHref = setLocationHref;\r\n    lottiejs.togglePause = togglePause;\r\n    lottiejs.setSpeed = setSpeed;\r\n    lottiejs.setDirection = setDirection;\r\n    lottiejs.stop = stop;\r\n    lottiejs.searchAnimations = searchAnimations;\r\n    lottiejs.registerAnimation = registerAnimation;\r\n    lottiejs.loadAnimation = loadAnimation;\r\n    lottiejs.setSubframeRendering = setSubframeRendering;\r\n    lottiejs.resize = resize;\r\n    //lottiejs.start = start;\r\n    lottiejs.goToAndStop = goToAndStop;\r\n    lottiejs.destroy = destroy;\r\n    lottiejs.setQuality = setQuality;\r\n    lottiejs.inBrowser = inBrowser;\r\n    lottiejs.installPlugin = installPlugin;\r\n    lottiejs.__getFactory = getFactory;\r\n    lottiejs.version = '5.1.7';\r\n\r\n    function checkReady() {\r\n        if (document.readyState === \"complete\") {\r\n            clearInterval(readyStateCheckInterval);\r\n            searchAnimations();\r\n        }\r\n    }\r\n\r\n    function getQueryVariable(variable) {\r\n        var vars = queryString.split('&');\r\n        for (var i = 0; i < vars.length; i++) {\r\n            var pair = vars[i].split('=');\r\n            if (decodeURIComponent(pair[0]) == variable) {\r\n                return decodeURIComponent(pair[1]);\r\n            }\r\n        }\r\n    }\r\n    var standalone = '__[STANDALONE]__';\r\n    var animationData = '__[ANIMATIONDATA]__';\r\n    var renderer = '';\r\n    if (standalone) {\r\n        var scripts = document.getElementsByTagName('script');\r\n        var index = scripts.length - 1;\r\n        var myScript = scripts[index] || {\r\n            src: ''\r\n        };\r\n        var queryString = myScript.src.replace(/^[^\\?]+\\??/, '');\r\n        renderer = getQueryVariable('renderer');\r\n    }\r\n    var readyStateCheckInterval = setInterval(checkReady, 100);\r\n    return lottiejs;\r\n}));\n\n/***/ }),\n\n/***/ 2:\n/***/ (function(module, exports) {\n\n/* globals __VUE_SSR_CONTEXT__ */\n\n// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// docs/js/vendor.js?v=89daf20a156b551e1030","(function(root, factory) {\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(function() {\r\n            return factory(root);\r\n        });\r\n    } else if (typeof module === \"object\" && module.exports) {\r\n        module.exports = factory(root);\r\n    } else {\r\n        root.lottie = factory(root);\r\n        root.bodymovin = root.lottie;\r\n    }\r\n}((window || {}), function(window) {\r\n    \"use strict\";\r\n    var svgNS = \"http://www.w3.org/2000/svg\";\r\n\r\nvar locationHref = '';\r\n\r\nvar initialDefaultFrame = -999999;\r\n\r\nvar subframeEnabled = true;\r\nvar expressionsPlugin;\r\nvar isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\r\nvar cachedColors = {};\r\nvar bm_rounder = Math.round;\r\nvar bm_rnd;\r\nvar bm_pow = Math.pow;\r\nvar bm_sqrt = Math.sqrt;\r\nvar bm_abs = Math.abs;\r\nvar bm_floor = Math.floor;\r\nvar bm_max = Math.max;\r\nvar bm_min = Math.min;\r\nvar blitter = 10;\r\n\r\nvar BMMath = {};\r\n(function(){\r\n    var propertyNames = Object.getOwnPropertyNames(Math);\r\n    var i, len = propertyNames.length;\r\n    for(i=0;i<len;i+=1){\r\n        BMMath[propertyNames[i]] = Math[propertyNames[i]];\r\n    }\r\n}());\r\n\r\nfunction ProjectInterface(){return {};}\r\n\r\nBMMath.random = Math.random;\r\nBMMath.abs = function(val){\r\n    var tOfVal = typeof val;\r\n    if(tOfVal === 'object' && val.length){\r\n        var absArr = createSizedArray(val.length);\r\n        var i, len = val.length;\r\n        for(i=0;i<len;i+=1){\r\n            absArr[i] = Math.abs(val[i]);\r\n        }\r\n        return absArr;\r\n    }\r\n    return Math.abs(val);\r\n\r\n};\r\nvar defaultCurveSegments = 150;\r\nvar degToRads = Math.PI/180;\r\nvar roundCorner = 0.5519;\r\n\r\nfunction roundValues(flag){\r\n    if(flag){\r\n        bm_rnd = Math.round;\r\n    }else{\r\n        bm_rnd = function(val){\r\n            return val;\r\n        };\r\n    }\r\n}\r\nroundValues(false);\r\n\r\nfunction styleDiv(element){\r\n    element.style.position = 'absolute';\r\n    element.style.top = 0;\r\n    element.style.left = 0;\r\n    element.style.display = 'block';\r\n    element.style.transformOrigin = element.style.webkitTransformOrigin = '0 0';\r\n    element.style.backfaceVisibility  = element.style.webkitBackfaceVisibility = 'visible';\r\n    element.style.transformStyle = element.style.webkitTransformStyle = element.style.mozTransformStyle = \"preserve-3d\";\r\n}\r\n\r\nfunction BMEnterFrameEvent(n,c,t,d){\r\n    this.type = n;\r\n    this.currentTime = c;\r\n    this.totalTime = t;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMCompleteEvent(n,d){\r\n    this.type = n;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMCompleteLoopEvent(n,c,t,d){\r\n    this.type = n;\r\n    this.currentLoop = t;\r\n    this.totalLoops = c;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMSegmentStartEvent(n,f,t){\r\n    this.type = n;\r\n    this.firstFrame = f;\r\n    this.totalFrames = t;\r\n}\r\n\r\nfunction BMDestroyEvent(n,t){\r\n    this.type = n;\r\n    this.target = t;\r\n}\r\n\r\nfunction randomString(length, chars){\r\n    if(chars === undefined){\r\n        chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890';\r\n    }\r\n    var i;\r\n    var result = '';\r\n    for (i = length; i > 0; --i) result += chars[Math.round(Math.random() * (chars.length - 1))];\r\n    return result;\r\n}\r\n\r\nfunction HSVtoRGB(h, s, v) {\r\n    var r, g, b, i, f, p, q, t;\r\n    i = Math.floor(h * 6);\r\n    f = h * 6 - i;\r\n    p = v * (1 - s);\r\n    q = v * (1 - f * s);\r\n    t = v * (1 - (1 - f) * s);\r\n    switch (i % 6) {\r\n        case 0: r = v; g = t; b = p; break;\r\n        case 1: r = q; g = v; b = p; break;\r\n        case 2: r = p; g = v; b = t; break;\r\n        case 3: r = p; g = q; b = v; break;\r\n        case 4: r = t; g = p; b = v; break;\r\n        case 5: r = v; g = p; b = q; break;\r\n    }\r\n    return [ r,\r\n        g,\r\n         b ];\r\n}\r\n\r\nfunction RGBtoHSV(r, g, b) {\r\n    var max = Math.max(r, g, b), min = Math.min(r, g, b),\r\n        d = max - min,\r\n        h,\r\n        s = (max === 0 ? 0 : d / max),\r\n        v = max / 255;\r\n\r\n    switch (max) {\r\n        case min: h = 0; break;\r\n        case r: h = (g - b) + d * (g < b ? 6: 0); h /= 6 * d; break;\r\n        case g: h = (b - r) + d * 2; h /= 6 * d; break;\r\n        case b: h = (r - g) + d * 4; h /= 6 * d; break;\r\n    }\r\n\r\n    return [\r\n         h,\r\n         s,\r\n         v\r\n    ];\r\n}\r\n\r\nfunction addSaturationToRGB(color,offset){\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[1] += offset;\r\n    if (hsv[1] > 1) {\r\n        hsv[1] = 1;\r\n    }\r\n    else if (hsv[1] <= 0) {\r\n        hsv[1] = 0;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nfunction addBrightnessToRGB(color,offset){\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[2] += offset;\r\n    if (hsv[2] > 1) {\r\n        hsv[2] = 1;\r\n    }\r\n    else if (hsv[2] < 0) {\r\n        hsv[2] = 0;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nfunction addHueToRGB(color,offset) {\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[0] += offset/360;\r\n    if (hsv[0] > 1) {\r\n        hsv[0] -= 1;\r\n    }\r\n    else if (hsv[0] < 0) {\r\n        hsv[0] += 1;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nvar rgbToHex = (function(){\r\n    var colorMap = [];\r\n    var i;\r\n    var hex;\r\n    for(i=0;i<256;i+=1){\r\n        hex = i.toString(16);\r\n        colorMap[i] = hex.length == 1 ? '0' + hex : hex;\r\n    }\r\n\r\n    return function(r, g, b) {\r\n        if(r<0){\r\n            r = 0;\r\n        }\r\n        if(g<0){\r\n            g = 0;\r\n        }\r\n        if(b<0){\r\n            b = 0;\r\n        }\r\n        return '#' + colorMap[r] + colorMap[g] + colorMap[b];\r\n    };\r\n}());\r\nfunction BaseEvent(){}\r\nBaseEvent.prototype = {\r\n\ttriggerEvent: function (eventName, args) {\r\n\t    if (this._cbs[eventName]) {\r\n\t        var len = this._cbs[eventName].length;\r\n\t        for (var i = 0; i < len; i++){\r\n\t            this._cbs[eventName][i](args);\r\n\t        }\r\n\t    }\r\n\t},\r\n\taddEventListener: function (eventName, callback) {\r\n\t    if (!this._cbs[eventName]){\r\n\t        this._cbs[eventName] = [];\r\n\t    }\r\n\t    this._cbs[eventName].push(callback);\r\n\r\n\t\treturn function() {\r\n\t\t\tthis.removeEventListener(eventName, callback);\r\n\t\t}.bind(this);\r\n\t},\r\n\tremoveEventListener: function (eventName,callback){\r\n\t    if (!callback){\r\n\t        this._cbs[eventName] = null;\r\n\t    }else if(this._cbs[eventName]){\r\n\t        var i = 0, len = this._cbs[eventName].length;\r\n\t        while(i<len){\r\n\t            if(this._cbs[eventName][i] === callback){\r\n\t                this._cbs[eventName].splice(i,1);\r\n\t                i -=1;\r\n\t                len -= 1;\r\n\t            }\r\n\t            i += 1;\r\n\t        }\r\n\t        if(!this._cbs[eventName].length){\r\n\t            this._cbs[eventName] = null;\r\n\t        }\r\n\t    }\r\n\t}\r\n};\r\nvar createTypedArray = (function(){\r\n\tfunction createRegularArray(type, len){\r\n\t\tvar i = 0, arr = [], value;\r\n\t\tswitch(type) {\r\n\t\t\tcase 'int16':\r\n\t\t\tcase 'uint8c':\r\n\t\t\t\tvalue = 1;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tvalue = 1.1;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tarr.push(value);\r\n\t\t}\r\n\t\treturn arr;\r\n\t}\r\n\tfunction createTypedArray(type, len){\r\n\t\tif(type === 'float32') {\r\n\t\t\treturn new Float32Array(len);\r\n\t\t} else if(type === 'int16') {\r\n\t\t\treturn new Int16Array(len);\r\n\t\t} else if(type === 'uint8c') {\r\n\t\t\treturn new Uint8ClampedArray(len);\r\n\t\t}\r\n\t}\r\n\tif(typeof Uint8ClampedArray === 'function' && typeof Float32Array === 'function') {\r\n\t\treturn createTypedArray;\r\n\t} else {\r\n\t\treturn createRegularArray;\r\n\t}\r\n}());\r\n\r\nfunction createSizedArray(len) {\r\n\treturn Array.apply(null,{length:len});\r\n}\r\nfunction createNS(type) {\r\n\t//return {appendChild:function(){},setAttribute:function(){},style:{}}\r\n\treturn document.createElementNS(svgNS, type);\r\n}\r\nfunction createTag(type) {\r\n\t//return {appendChild:function(){},setAttribute:function(){},style:{}}\r\n\treturn document.createElement(type);\r\n}\r\n/*!\r\n Transformation Matrix v2.0\r\n (c) Epistemex 2014-2015\r\n www.epistemex.com\r\n By Ken Fyrstenberg\r\n Contributions by leeoniya.\r\n License: MIT, header required.\r\n */\r\n\r\n/**\r\n * 2D transformation matrix object initialized with identity matrix.\r\n *\r\n * The matrix can synchronize a canvas context by supplying the context\r\n * as an argument, or later apply current absolute transform to an\r\n * existing context.\r\n *\r\n * All values are handled as floating point values.\r\n *\r\n * @param {CanvasRenderingContext2D} [context] - Optional context to sync with Matrix\r\n * @prop {number} a - scale x\r\n * @prop {number} b - shear y\r\n * @prop {number} c - shear x\r\n * @prop {number} d - scale y\r\n * @prop {number} e - translate x\r\n * @prop {number} f - translate y\r\n * @prop {CanvasRenderingContext2D|null} [context=null] - set or get current canvas context\r\n * @constructor\r\n */\r\n\r\nvar Matrix = (function(){\r\n\r\n    var _cos = Math.cos;\r\n    var _sin = Math.sin;\r\n    var _tan = Math.tan;\r\n    var _rnd = Math.round;\r\n\r\n    function reset(){\r\n        this.props[0] = 1;\r\n        this.props[1] = 0;\r\n        this.props[2] = 0;\r\n        this.props[3] = 0;\r\n        this.props[4] = 0;\r\n        this.props[5] = 1;\r\n        this.props[6] = 0;\r\n        this.props[7] = 0;\r\n        this.props[8] = 0;\r\n        this.props[9] = 0;\r\n        this.props[10] = 1;\r\n        this.props[11] = 0;\r\n        this.props[12] = 0;\r\n        this.props[13] = 0;\r\n        this.props[14] = 0;\r\n        this.props[15] = 1;\r\n        return this;\r\n    }\r\n\r\n    function rotate(angle) {\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateX(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(1, 0, 0, 0, 0, mCos, -mSin, 0, 0, mSin,  mCos, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateY(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos,  0,  mSin, 0, 0, 1, 0, 0, -mSin,  0,  mCos, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateZ(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function shear(sx,sy){\r\n        return this._t(1, sy, sx, 1, 0, 0);\r\n    }\r\n\r\n    function skew(ax, ay){\r\n        return this.shear(_tan(ax), _tan(ay));\r\n    }\r\n\r\n    function skewFromAxis(ax, angle){\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos, mSin,  0, 0, -mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1)\r\n            ._t(1, 0,  0, 0, _tan(ax),  1, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1)\r\n            ._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);\r\n        //return this._t(mCos, mSin, -mSin, mCos, 0, 0)._t(1, 0, _tan(ax), 1, 0, 0)._t(mCos, -mSin, mSin, mCos, 0, 0);\r\n    }\r\n\r\n    function scale(sx, sy, sz) {\r\n        sz = isNaN(sz) ? 1 : sz;\r\n        if(sx == 1 && sy == 1 && sz == 1){\r\n            return this;\r\n        }\r\n        return this._t(sx, 0, 0, 0, 0, sy, 0, 0, 0, 0, sz, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function setTransform(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {\r\n        this.props[0] = a;\r\n        this.props[1] = b;\r\n        this.props[2] = c;\r\n        this.props[3] = d;\r\n        this.props[4] = e;\r\n        this.props[5] = f;\r\n        this.props[6] = g;\r\n        this.props[7] = h;\r\n        this.props[8] = i;\r\n        this.props[9] = j;\r\n        this.props[10] = k;\r\n        this.props[11] = l;\r\n        this.props[12] = m;\r\n        this.props[13] = n;\r\n        this.props[14] = o;\r\n        this.props[15] = p;\r\n        return this;\r\n    }\r\n\r\n    function translate(tx, ty, tz) {\r\n        tz = tz || 0;\r\n        if(tx !== 0 || ty !== 0 || tz !== 0){\r\n            return this._t(1,0,0,0,0,1,0,0,0,0,1,0,tx,ty,tz,1);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function transform(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2, m2, n2, o2, p2) {\r\n\r\n        var _p = this.props;\r\n\r\n        if(a2 === 1 && b2 === 0 && c2 === 0 && d2 === 0 && e2 === 0 && f2 === 1 && g2 === 0 && h2 === 0 && i2 === 0 && j2 === 0 && k2 === 1 && l2 === 0){\r\n            //NOTE: commenting this condition because TurboFan deoptimizes code when present\r\n            //if(m2 !== 0 || n2 !== 0 || o2 !== 0){\r\n                _p[12] = _p[12] * a2 + _p[15] * m2;\r\n                _p[13] = _p[13] * f2 + _p[15] * n2;\r\n                _p[14] = _p[14] * k2 + _p[15] * o2;\r\n                _p[15] = _p[15] * p2;\r\n            //}\r\n            this._identityCalculated = false;\r\n            return this;\r\n        }\r\n\r\n        var a1 = _p[0];\r\n        var b1 = _p[1];\r\n        var c1 = _p[2];\r\n        var d1 = _p[3];\r\n        var e1 = _p[4];\r\n        var f1 = _p[5];\r\n        var g1 = _p[6];\r\n        var h1 = _p[7];\r\n        var i1 = _p[8];\r\n        var j1 = _p[9];\r\n        var k1 = _p[10];\r\n        var l1 = _p[11];\r\n        var m1 = _p[12];\r\n        var n1 = _p[13];\r\n        var o1 = _p[14];\r\n        var p1 = _p[15];\r\n\r\n        /* matrix order (canvas compatible):\r\n         * ace\r\n         * bdf\r\n         * 001\r\n         */\r\n        _p[0] = a1 * a2 + b1 * e2 + c1 * i2 + d1 * m2;\r\n        _p[1] = a1 * b2 + b1 * f2 + c1 * j2 + d1 * n2 ;\r\n        _p[2] = a1 * c2 + b1 * g2 + c1 * k2 + d1 * o2 ;\r\n        _p[3] = a1 * d2 + b1 * h2 + c1 * l2 + d1 * p2 ;\r\n\r\n        _p[4] = e1 * a2 + f1 * e2 + g1 * i2 + h1 * m2 ;\r\n        _p[5] = e1 * b2 + f1 * f2 + g1 * j2 + h1 * n2 ;\r\n        _p[6] = e1 * c2 + f1 * g2 + g1 * k2 + h1 * o2 ;\r\n        _p[7] = e1 * d2 + f1 * h2 + g1 * l2 + h1 * p2 ;\r\n\r\n        _p[8] = i1 * a2 + j1 * e2 + k1 * i2 + l1 * m2 ;\r\n        _p[9] = i1 * b2 + j1 * f2 + k1 * j2 + l1 * n2 ;\r\n        _p[10] = i1 * c2 + j1 * g2 + k1 * k2 + l1 * o2 ;\r\n        _p[11] = i1 * d2 + j1 * h2 + k1 * l2 + l1 * p2 ;\r\n\r\n        _p[12] = m1 * a2 + n1 * e2 + o1 * i2 + p1 * m2 ;\r\n        _p[13] = m1 * b2 + n1 * f2 + o1 * j2 + p1 * n2 ;\r\n        _p[14] = m1 * c2 + n1 * g2 + o1 * k2 + p1 * o2 ;\r\n        _p[15] = m1 * d2 + n1 * h2 + o1 * l2 + p1 * p2 ;\r\n\r\n        this._identityCalculated = false;\r\n        return this;\r\n    }\r\n\r\n    function isIdentity() {\r\n        if(!this._identityCalculated){\r\n            this._identity = !(this.props[0] !== 1 || this.props[1] !== 0 || this.props[2] !== 0 || this.props[3] !== 0 || this.props[4] !== 0 || this.props[5] !== 1 || this.props[6] !== 0 || this.props[7] !== 0 || this.props[8] !== 0 || this.props[9] !== 0 || this.props[10] !== 1 || this.props[11] !== 0 || this.props[12] !== 0 || this.props[13] !== 0 || this.props[14] !== 0 || this.props[15] !== 1);\r\n            this._identityCalculated = true;\r\n        }\r\n        return this._identity;\r\n    }\r\n\r\n    function equals(matr){\r\n        var i = 0;\r\n        while (i < 16) {\r\n            if(matr.props[i] !== this.props[i]) {\r\n                return false;\r\n            }\r\n            i+=1;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function clone(matr){\r\n        var i;\r\n        for(i=0;i<16;i+=1){\r\n            matr.props[i] = this.props[i];\r\n        }\r\n    }\r\n\r\n    function cloneFromProps(props){\r\n        var i;\r\n        for(i=0;i<16;i+=1){\r\n            this.props[i] = props[i];\r\n        }\r\n    }\r\n\r\n    function applyToPoint(x, y, z) {\r\n\r\n        return {\r\n            x: x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],\r\n            y: x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],\r\n            z: x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]\r\n        };\r\n        /*return {\r\n         x: x * me.a + y * me.c + me.e,\r\n         y: x * me.b + y * me.d + me.f\r\n         };*/\r\n    }\r\n    function applyToX(x, y, z) {\r\n        return x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12];\r\n    }\r\n    function applyToY(x, y, z) {\r\n        return x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13];\r\n    }\r\n    function applyToZ(x, y, z) {\r\n        return x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14];\r\n    }\r\n\r\n    function inversePoint(pt) {\r\n        var determinant = this.props[0] * this.props[5] - this.props[1] * this.props[4];\r\n        var a = this.props[5]/determinant;\r\n        var b = - this.props[1]/determinant;\r\n        var c = - this.props[4]/determinant;\r\n        var d = this.props[0]/determinant;\r\n        var e = (this.props[4] * this.props[13] - this.props[5] * this.props[12])/determinant;\r\n        var f = - (this.props[0] * this.props[13] - this.props[1] * this.props[12])/determinant;\r\n        return [pt[0] * a + pt[1] * c + e, pt[0] * b + pt[1] * d + f, 0];\r\n    }\r\n\r\n    function inversePoints(pts){\r\n        var i, len = pts.length, retPts = [];\r\n        for(i=0;i<len;i+=1){\r\n            retPts[i] = inversePoint(pts[i]);\r\n        }\r\n        return retPts;\r\n    }\r\n\r\n    function applyToTriplePoints(pt1, pt2, pt3) {\r\n        var arr = createTypedArray('float32', 6);\r\n        if(this.isIdentity()) {\r\n            arr[0] = pt1[0];\r\n            arr[1] = pt1[1];\r\n            arr[2] = pt2[0];\r\n            arr[3] = pt2[1];\r\n            arr[4] = pt3[0];\r\n            arr[5] = pt3[1];\r\n        } else {\r\n            var p0 = this.props[0], p1 = this.props[1], p4 = this.props[4], p5 = this.props[5], p12 = this.props[12], p13 = this.props[13];\r\n            arr[0] = pt1[0] * p0 + pt1[1] * p4 + p12;\r\n            arr[1] = pt1[0] * p1 + pt1[1] * p5 + p13;\r\n            arr[2] = pt2[0] * p0 + pt2[1] * p4 + p12;\r\n            arr[3] = pt2[0] * p1 + pt2[1] * p5 + p13;\r\n            arr[4] = pt3[0] * p0 + pt3[1] * p4 + p12;\r\n            arr[5] = pt3[0] * p1 + pt3[1] * p5 + p13;\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function applyToPointArray(x,y,z){\r\n        var arr;\r\n        if(this.isIdentity()) {\r\n            arr = [x,y,z];\r\n        } else {\r\n            arr = [x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]];\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function applyToPointStringified(x, y) {\r\n        if(this.isIdentity()) {\r\n            return x + ',' + y;\r\n        }\r\n        return (x * this.props[0] + y * this.props[4] + this.props[12])+','+(x * this.props[1] + y * this.props[5] + this.props[13]);\r\n    }\r\n\r\n    function toCSS() {\r\n        //Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.\r\n        /*if(this.isIdentity()) {\r\n            return '';\r\n        }*/\r\n        var i = 0;\r\n        var props = this.props;\r\n        var cssValue = 'matrix3d(';\r\n        var v = 10000;\r\n        while(i<16){\r\n            cssValue += _rnd(props[i]*v)/v;\r\n            cssValue += i === 15 ? ')':',';\r\n            i += 1;\r\n        }\r\n        return cssValue;\r\n    }\r\n\r\n    function to2dCSS() {\r\n        //Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.\r\n        /*if(this.isIdentity()) {\r\n            return '';\r\n        }*/\r\n        var v = 10000;\r\n        var props = this.props;\r\n        return \"matrix(\" + _rnd(props[0]*v)/v + ',' + _rnd(props[1]*v)/v + ',' + _rnd(props[4]*v)/v + ',' + _rnd(props[5]*v)/v + ',' + _rnd(props[12]*v)/v + ',' + _rnd(props[13]*v)/v + \")\";\r\n    }\r\n\r\n    return function(){\r\n        this.reset = reset;\r\n        this.rotate = rotate;\r\n        this.rotateX = rotateX;\r\n        this.rotateY = rotateY;\r\n        this.rotateZ = rotateZ;\r\n        this.skew = skew;\r\n        this.skewFromAxis = skewFromAxis;\r\n        this.shear = shear;\r\n        this.scale = scale;\r\n        this.setTransform = setTransform;\r\n        this.translate = translate;\r\n        this.transform = transform;\r\n        this.applyToPoint = applyToPoint;\r\n        this.applyToX = applyToX;\r\n        this.applyToY = applyToY;\r\n        this.applyToZ = applyToZ;\r\n        this.applyToPointArray = applyToPointArray;\r\n        this.applyToTriplePoints = applyToTriplePoints;\r\n        this.applyToPointStringified = applyToPointStringified;\r\n        this.toCSS = toCSS;\r\n        this.to2dCSS = to2dCSS;\r\n        this.clone = clone;\r\n        this.cloneFromProps = cloneFromProps;\r\n        this.equals = equals;\r\n        this.inversePoints = inversePoints;\r\n        this.inversePoint = inversePoint;\r\n        this._t = this.transform;\r\n        this.isIdentity = isIdentity;\r\n        this._identity = true;\r\n        this._identityCalculated = false;\r\n\r\n        this.props = createTypedArray('float32', 16);\r\n        this.reset();\r\n    };\r\n}());\r\n\r\n/*\r\n Copyright 2014 David Bau.\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining\r\n a copy of this software and associated documentation files (the\r\n \"Software\"), to deal in the Software without restriction, including\r\n without limitation the rights to use, copy, modify, merge, publish,\r\n distribute, sublicense, and/or sell copies of the Software, and to\r\n permit persons to whom the Software is furnished to do so, subject to\r\n the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be\r\n included in all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\n IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\n CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\n TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n */\r\n\r\n(function (pool, math) {\r\n//\r\n// The following constants are related to IEEE 754 limits.\r\n//\r\n    var global = this,\r\n        width = 256,        // each RC4 output is 0 <= x < 256\r\n        chunks = 6,         // at least six RC4 outputs for each double\r\n        digits = 52,        // there are 52 significant digits in a double\r\n        rngname = 'random', // rngname: name for Math.random and Math.seedrandom\r\n        startdenom = math.pow(width, chunks),\r\n        significance = math.pow(2, digits),\r\n        overflow = significance * 2,\r\n        mask = width - 1,\r\n        nodecrypto;         // node.js crypto module, initialized at the bottom.\r\n\r\n//\r\n// seedrandom()\r\n// This is the seedrandom function described above.\r\n//\r\n    function seedrandom(seed, options, callback) {\r\n        var key = [];\r\n        options = (options === true) ? { entropy: true } : (options || {});\r\n\r\n        // Flatten the seed string or build one from local entropy if needed.\r\n        var shortseed = mixkey(flatten(\r\n            options.entropy ? [seed, tostring(pool)] :\r\n                (seed === null) ? autoseed() : seed, 3), key);\r\n\r\n        // Use the seed to initialize an ARC4 generator.\r\n        var arc4 = new ARC4(key);\r\n\r\n        // This function returns a random double in [0, 1) that contains\r\n        // randomness in every bit of the mantissa of the IEEE 754 value.\r\n        var prng = function() {\r\n            var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\r\n                d = startdenom,                 //   and denominator d = 2 ^ 48.\r\n                x = 0;                          //   and no 'extra last byte'.\r\n            while (n < significance) {          // Fill up all significant digits by\r\n                n = (n + x) * width;              //   shifting numerator and\r\n                d *= width;                       //   denominator and generating a\r\n                x = arc4.g(1);                    //   new least-significant-byte.\r\n            }\r\n            while (n >= overflow) {             // To avoid rounding up, before adding\r\n                n /= 2;                           //   last byte, shift everything\r\n                d /= 2;                           //   right using integer math until\r\n                x >>>= 1;                         //   we have exactly the desired bits.\r\n            }\r\n            return (n + x) / d;                 // Form the number within [0, 1).\r\n        };\r\n\r\n        prng.int32 = function() { return arc4.g(4) | 0; };\r\n        prng.quick = function() { return arc4.g(4) / 0x100000000; };\r\n        prng.double = prng;\r\n\r\n        // Mix the randomness into accumulated entropy.\r\n        mixkey(tostring(arc4.S), pool);\r\n\r\n        // Calling convention: what to return as a function of prng, seed, is_math.\r\n        return (options.pass || callback ||\r\n        function(prng, seed, is_math_call, state) {\r\n            if (state) {\r\n                // Load the arc4 state from the given state if it has an S array.\r\n                if (state.S) { copy(state, arc4); }\r\n                // Only provide the .state method if requested via options.state.\r\n                prng.state = function() { return copy(arc4, {}); };\r\n            }\r\n\r\n            // If called as a method of Math (Math.seedrandom()), mutate\r\n            // Math.random because that is how seedrandom.js has worked since v1.0.\r\n            if (is_math_call) { math[rngname] = prng; return seed; }\r\n\r\n            // Otherwise, it is a newer calling convention, so return the\r\n            // prng directly.\r\n            else return prng;\r\n        })(\r\n            prng,\r\n            shortseed,\r\n            'global' in options ? options.global : (this == math),\r\n            options.state);\r\n    }\r\n    math['seed' + rngname] = seedrandom;\r\n\r\n//\r\n// ARC4\r\n//\r\n// An ARC4 implementation.  The constructor takes a key in the form of\r\n// an array of at most (width) integers that should be 0 <= x < (width).\r\n//\r\n// The g(count) method returns a pseudorandom integer that concatenates\r\n// the next (count) outputs from ARC4.  Its return value is a number x\r\n// that is in the range 0 <= x < (width ^ count).\r\n//\r\n    function ARC4(key) {\r\n        var t, keylen = key.length,\r\n            me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\r\n\r\n        // The empty key [] is treated as [0].\r\n        if (!keylen) { key = [keylen++]; }\r\n\r\n        // Set up S using the standard key scheduling algorithm.\r\n        while (i < width) {\r\n            s[i] = i++;\r\n        }\r\n        for (i = 0; i < width; i++) {\r\n            s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\r\n            s[j] = t;\r\n        }\r\n\r\n        // The \"g\" method returns the next (count) outputs as one number.\r\n        me.g = function(count) {\r\n            // Using instance members instead of closure state nearly doubles speed.\r\n            var t, r = 0,\r\n                i = me.i, j = me.j, s = me.S;\r\n            while (count--) {\r\n                t = s[i = mask & (i + 1)];\r\n                r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\r\n            }\r\n            me.i = i; me.j = j;\r\n            return r;\r\n            // For robust unpredictability, the function call below automatically\r\n            // discards an initial batch of values.  This is called RC4-drop[256].\r\n            // See http://google.com/search?q=rsa+fluhrer+response&btnI\r\n        };\r\n    }\r\n\r\n//\r\n// copy()\r\n// Copies internal state of ARC4 to or from a plain object.\r\n//\r\n    function copy(f, t) {\r\n        t.i = f.i;\r\n        t.j = f.j;\r\n        t.S = f.S.slice();\r\n        return t;\r\n    }\r\n\r\n//\r\n// flatten()\r\n// Converts an object tree to nested arrays of strings.\r\n//\r\n    function flatten(obj, depth) {\r\n        var result = [], typ = (typeof obj), prop;\r\n        if (depth && typ == 'object') {\r\n            for (prop in obj) {\r\n                try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\r\n            }\r\n        }\r\n        return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\r\n    }\r\n\r\n//\r\n// mixkey()\r\n// Mixes a string seed into a key that is an array of integers, and\r\n// returns a shortened string seed that is equivalent to the result key.\r\n//\r\n    function mixkey(seed, key) {\r\n        var stringseed = seed + '', smear, j = 0;\r\n        while (j < stringseed.length) {\r\n            key[mask & j] =\r\n                mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\r\n        }\r\n        return tostring(key);\r\n    }\r\n\r\n//\r\n// autoseed()\r\n// Returns an object for autoseeding, using window.crypto and Node crypto\r\n// module if available.\r\n//\r\n    function autoseed() {\r\n        try {\r\n            if (nodecrypto) { return tostring(nodecrypto.randomBytes(width)); }\r\n            var out = new Uint8Array(width);\r\n            (global.crypto || global.msCrypto).getRandomValues(out);\r\n            return tostring(out);\r\n        } catch (e) {\r\n            var browser = global.navigator,\r\n                plugins = browser && browser.plugins;\r\n            return [+new Date(), global, plugins, global.screen, tostring(pool)];\r\n        }\r\n    }\r\n\r\n//\r\n// tostring()\r\n// Converts an array of charcodes to a string\r\n//\r\n    function tostring(a) {\r\n        return String.fromCharCode.apply(0, a);\r\n    }\r\n\r\n//\r\n// When seedrandom.js is loaded, we immediately mix a few bits\r\n// from the built-in RNG into the entropy pool.  Because we do\r\n// not want to interfere with deterministic PRNG state later,\r\n// seedrandom will not call math.random on its own again after\r\n// initialization.\r\n//\r\n    mixkey(math.random(), pool);\r\n\r\n//\r\n// Nodejs and AMD support: export the implementation as a module using\r\n// either convention.\r\n//\r\n\r\n// End anonymous scope, and pass initial values.\r\n})(\r\n    [],     // pool: entropy pool starts empty\r\n    BMMath    // math: package containing random, pow, and seedrandom\r\n);\r\nvar BezierFactory = (function(){\r\n    /**\r\n     * BezierEasing - use bezier curve for transition easing function\r\n     * by Gaëtan Renaudeau 2014 - 2015 – MIT License\r\n     *\r\n     * Credits: is based on Firefox's nsSMILKeySpline.cpp\r\n     * Usage:\r\n     * var spline = BezierEasing([ 0.25, 0.1, 0.25, 1.0 ])\r\n     * spline.get(x) => returns the easing value | x must be in [0, 1] range\r\n     *\r\n     */\r\n\r\n        var ob = {};\r\n    ob.getBezierEasing = getBezierEasing;\r\n    var beziers = {};\r\n\r\n    function getBezierEasing(a,b,c,d,nm){\r\n        var str = nm || ('bez_' + a+'_'+b+'_'+c+'_'+d).replace(/\\./g, 'p');\r\n        if(beziers[str]){\r\n            return beziers[str];\r\n        }\r\n        var bezEasing = new BezierEasing([a,b,c,d]);\r\n        beziers[str] = bezEasing;\r\n        return bezEasing;\r\n    }\r\n\r\n// These values are established by empiricism with tests (tradeoff: performance VS precision)\r\n    var NEWTON_ITERATIONS = 4;\r\n    var NEWTON_MIN_SLOPE = 0.001;\r\n    var SUBDIVISION_PRECISION = 0.0000001;\r\n    var SUBDIVISION_MAX_ITERATIONS = 10;\r\n\r\n    var kSplineTableSize = 11;\r\n    var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\r\n\r\n    var float32ArraySupported = typeof Float32Array === \"function\";\r\n\r\n    function A (aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }\r\n    function B (aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }\r\n    function C (aA1)      { return 3.0 * aA1; }\r\n\r\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\r\n    function calcBezier (aT, aA1, aA2) {\r\n        return ((A(aA1, aA2)*aT + B(aA1, aA2))*aT + C(aA1))*aT;\r\n    }\r\n\r\n// Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\r\n    function getSlope (aT, aA1, aA2) {\r\n        return 3.0 * A(aA1, aA2)*aT*aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\r\n    }\r\n\r\n    function binarySubdivide (aX, aA, aB, mX1, mX2) {\r\n        var currentX, currentT, i = 0;\r\n        do {\r\n            currentT = aA + (aB - aA) / 2.0;\r\n            currentX = calcBezier(currentT, mX1, mX2) - aX;\r\n            if (currentX > 0.0) {\r\n                aB = currentT;\r\n            } else {\r\n                aA = currentT;\r\n            }\r\n        } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\r\n        return currentT;\r\n    }\r\n\r\n    function newtonRaphsonIterate (aX, aGuessT, mX1, mX2) {\r\n        for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\r\n            var currentSlope = getSlope(aGuessT, mX1, mX2);\r\n            if (currentSlope === 0.0) return aGuessT;\r\n            var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\r\n            aGuessT -= currentX / currentSlope;\r\n        }\r\n        return aGuessT;\r\n    }\r\n\r\n    /**\r\n     * points is an array of [ mX1, mY1, mX2, mY2 ]\r\n     */\r\n    function BezierEasing (points) {\r\n        this._p = points;\r\n        this._mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\r\n        this._precomputed = false;\r\n\r\n        this.get = this.get.bind(this);\r\n    }\r\n\r\n    BezierEasing.prototype = {\r\n\r\n        get: function (x) {\r\n            var mX1 = this._p[0],\r\n                mY1 = this._p[1],\r\n                mX2 = this._p[2],\r\n                mY2 = this._p[3];\r\n            if (!this._precomputed) this._precompute();\r\n            if (mX1 === mY1 && mX2 === mY2) return x; // linear\r\n            // Because JavaScript number are imprecise, we should guarantee the extremes are right.\r\n            if (x === 0) return 0;\r\n            if (x === 1) return 1;\r\n            return calcBezier(this._getTForX(x), mY1, mY2);\r\n        },\r\n\r\n        // Private part\r\n\r\n        _precompute: function () {\r\n            var mX1 = this._p[0],\r\n                mY1 = this._p[1],\r\n                mX2 = this._p[2],\r\n                mY2 = this._p[3];\r\n            this._precomputed = true;\r\n            if (mX1 !== mY1 || mX2 !== mY2)\r\n                this._calcSampleValues();\r\n        },\r\n\r\n        _calcSampleValues: function () {\r\n            var mX1 = this._p[0],\r\n                mX2 = this._p[2];\r\n            for (var i = 0; i < kSplineTableSize; ++i) {\r\n                this._mSampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * getTForX chose the fastest heuristic to determine the percentage value precisely from a given X projection.\r\n         */\r\n        _getTForX: function (aX) {\r\n            var mX1 = this._p[0],\r\n                mX2 = this._p[2],\r\n                mSampleValues = this._mSampleValues;\r\n\r\n            var intervalStart = 0.0;\r\n            var currentSample = 1;\r\n            var lastSample = kSplineTableSize - 1;\r\n\r\n            for (; currentSample !== lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {\r\n                intervalStart += kSampleStepSize;\r\n            }\r\n            --currentSample;\r\n\r\n            // Interpolate to provide an initial guess for t\r\n            var dist = (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample+1] - mSampleValues[currentSample]);\r\n            var guessForT = intervalStart + dist * kSampleStepSize;\r\n\r\n            var initialSlope = getSlope(guessForT, mX1, mX2);\r\n            if (initialSlope >= NEWTON_MIN_SLOPE) {\r\n                return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\r\n            } else if (initialSlope === 0.0) {\r\n                return guessForT;\r\n            } else {\r\n                return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\r\n            }\r\n        }\r\n    };\r\n\r\n    return ob;\r\n\r\n}());\r\n(function () {\r\n    var lastTime = 0;\r\n    var vendors = ['ms', 'moz', 'webkit', 'o'];\r\n    for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\r\n        window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\r\n        window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\r\n    }\r\n    if(!window.requestAnimationFrame)\r\n        window.requestAnimationFrame = function (callback, element) {\r\n            var currTime = new Date().getTime();\r\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n            var id = setTimeout(function () {\r\n                    callback(currTime + timeToCall);\r\n                },\r\n                timeToCall);\r\n            lastTime = currTime + timeToCall;\r\n            return id;\r\n        };\r\n    if(!window.cancelAnimationFrame)\r\n        window.cancelAnimationFrame = function (id) {\r\n            clearTimeout(id);\r\n        };\r\n}());\r\n\r\nfunction extendPrototype(sources,destination){\r\n    var i, len = sources.length, sourcePrototype;\r\n    for (i = 0;i < len;i += 1) {\r\n        sourcePrototype = sources[i].prototype;\r\n        for (var attr in sourcePrototype) {\r\n            if (sourcePrototype.hasOwnProperty(attr)) destination.prototype[attr] = sourcePrototype[attr];\r\n        }\r\n    }\r\n}\r\n\r\nfunction getDescriptor(object, prop) {\r\n    return Object.getOwnPropertyDescriptor(object, prop);\r\n}\r\n\r\nfunction createProxyFunction(prototype) {\r\n\tfunction ProxyFunction(){}\r\n\tProxyFunction.prototype = prototype;\r\n\treturn ProxyFunction;\r\n}\r\nfunction bezFunction(){\r\n\r\n    var easingFunctions = [];\r\n    var math = Math;\r\n\r\n    function pointOnLine2D(x1,y1, x2,y2, x3,y3){\r\n        var det1 = (x1*y2) + (y1*x3) + (x2*y3) - (x3*y2) - (y3*x1) - (x2*y1);\r\n        return det1 > -0.0001 && det1 < 0.0001;\r\n    }\r\n\r\n    function pointOnLine3D(x1,y1,z1, x2,y2,z2, x3,y3,z3){\r\n        if(z1 === 0 && z2 === 0 && z3 === 0) {\r\n            return pointOnLine2D(x1,y1, x2,y2, x3,y3);\r\n        }\r\n        var dist1 = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2) + Math.pow(z2 - z1, 2));\r\n        var dist2 = Math.sqrt(Math.pow(x3 - x1, 2) + Math.pow(y3 - y1, 2) + Math.pow(z3 - z1, 2));\r\n        var dist3 = Math.sqrt(Math.pow(x3 - x2, 2) + Math.pow(y3 - y2, 2) + Math.pow(z3 - z2, 2));\r\n        var diffDist;\r\n        if(dist1 > dist2){\r\n            if(dist1 > dist3){\r\n                diffDist = dist1 - dist2 - dist3;\r\n            } else {\r\n                diffDist = dist3 - dist2 - dist1;\r\n            }\r\n        } else if(dist3 > dist2){\r\n            diffDist = dist3 - dist2 - dist1;\r\n        } else {\r\n            diffDist = dist2 - dist1 - dist3;\r\n        }\r\n        return diffDist > -0.0001 && diffDist < 0.0001;\r\n    }\r\n\r\n    var getBezierLength = (function(){\r\n\r\n        return function(pt1,pt2,pt3,pt4){\r\n            var curveSegments = defaultCurveSegments;\r\n            var k;\r\n            var i, len;\r\n            var ptCoord,perc,addedLength = 0;\r\n            var ptDistance;\r\n            var point = [],lastPoint = [];\r\n            var lengthData = bezier_length_pool.newElement();\r\n            len = pt3.length;\r\n            for(k=0;k<curveSegments;k+=1){\r\n                perc = k/(curveSegments-1);\r\n                ptDistance = 0;\r\n                for(i=0;i<len;i+=1){\r\n                    ptCoord = bm_pow(1-perc,3)*pt1[i]+3*bm_pow(1-perc,2)*perc*pt3[i]+3*(1-perc)*bm_pow(perc,2)*pt4[i]+bm_pow(perc,3)*pt2[i];\r\n                    point[i] = ptCoord;\r\n                    if(lastPoint[i] !== null){\r\n                        ptDistance += bm_pow(point[i] - lastPoint[i],2);\r\n                    }\r\n                    lastPoint[i] = point[i];\r\n                }\r\n                if(ptDistance){\r\n                    ptDistance = bm_sqrt(ptDistance);\r\n                    addedLength += ptDistance;\r\n                }\r\n                lengthData.percents[k] = perc;\r\n                lengthData.lengths[k] = addedLength;\r\n            }\r\n            lengthData.addedLength = addedLength;\r\n            return lengthData;\r\n        };\r\n    }());\r\n\r\n    function getSegmentsLength(shapeData) {\r\n        var segmentsLength = segments_length_pool.newElement();\r\n        var closed = shapeData.c;\r\n        var pathV = shapeData.v;\r\n        var pathO = shapeData.o;\r\n        var pathI = shapeData.i;\r\n        var i, len = shapeData._length;\r\n        var lengths = segmentsLength.lengths;\r\n        var totalLength = 0;\r\n        for(i=0;i<len-1;i+=1){\r\n            lengths[i] = getBezierLength(pathV[i],pathV[i+1],pathO[i],pathI[i+1]);\r\n            totalLength += lengths[i].addedLength;\r\n        }\r\n        if(closed){\r\n            lengths[i] = getBezierLength(pathV[i],pathV[0],pathO[i],pathI[0]);\r\n            totalLength += lengths[i].addedLength;\r\n        }\r\n        segmentsLength.totalLength = totalLength;\r\n        return segmentsLength;\r\n    }\r\n\r\n    function BezierData(length){\r\n        this.segmentLength = 0;\r\n        this.points = new Array(length);\r\n    }\r\n\r\n    function PointData(partial,point){\r\n        this.partialLength = partial;\r\n        this.point = point;\r\n    }\r\n\r\n    var buildBezierData = (function(){\r\n\r\n        var storedData = {};\r\n\r\n        return function (keyData){\r\n            var pt1 = keyData.s;\r\n            var pt2 = keyData.e;\r\n            var pt3 = keyData.to;\r\n            var pt4 = keyData.ti;\r\n            var bezierName = (pt1[0]+'_'+pt1[1]+'_'+pt2[0]+'_'+pt2[1]+'_'+pt3[0]+'_'+pt3[1]+'_'+pt4[0]+'_'+pt4[1]).replace(/\\./g, 'p');\r\n            if(storedData[bezierName]){\r\n                keyData.bezierData = storedData[bezierName];\r\n                return;\r\n            }\r\n            var curveSegments = defaultCurveSegments;\r\n            var k, i, len;\r\n            var ptCoord,perc,addedLength = 0;\r\n            var ptDistance;\r\n            var point,lastPoint = null;\r\n            if (pt1.length === 2 && (pt1[0] != pt2[0] || pt1[1] != pt2[1]) && pointOnLine2D(pt1[0],pt1[1],pt2[0],pt2[1],pt1[0]+pt3[0],pt1[1]+pt3[1]) && pointOnLine2D(pt1[0],pt1[1],pt2[0],pt2[1],pt2[0]+pt4[0],pt2[1]+pt4[1])){\r\n                curveSegments = 2;\r\n            }\r\n            var bezierData = new BezierData(curveSegments);\r\n            len = pt3.length;\r\n            for (k = 0; k < curveSegments; k += 1) {\r\n                point = createSizedArray(len);\r\n                perc = k / (curveSegments - 1);\r\n                ptDistance = 0;\r\n                for (i = 0; i < len; i += 1){\r\n                    ptCoord = bm_pow(1-perc,3)*pt1[i]+3*bm_pow(1-perc,2)*perc*(pt1[i] + pt3[i])+3*(1-perc)*bm_pow(perc,2)*(pt2[i] + pt4[i])+bm_pow(perc,3)*pt2[i];\r\n                    point[i] = ptCoord;\r\n                    if(lastPoint !== null){\r\n                        ptDistance += bm_pow(point[i] - lastPoint[i],2);\r\n                    }\r\n                }\r\n                ptDistance = bm_sqrt(ptDistance);\r\n                addedLength += ptDistance;\r\n                bezierData.points[k] = new PointData(ptDistance, point);\r\n                lastPoint = point;\r\n            }\r\n            bezierData.segmentLength = addedLength;\r\n            keyData.bezierData = bezierData;\r\n            storedData[bezierName] = bezierData;\r\n        };\r\n    }());\r\n\r\n    function getDistancePerc(perc,bezierData){\r\n        var percents = bezierData.percents;\r\n        var lengths = bezierData.lengths;\r\n        var len = percents.length;\r\n        var initPos = bm_floor((len-1)*perc);\r\n        var lengthPos = perc*bezierData.addedLength;\r\n        var lPerc = 0;\r\n        if(initPos === len - 1 || initPos === 0 || lengthPos === lengths[initPos]){\r\n            return percents[initPos];\r\n        }else{\r\n            var dir = lengths[initPos] > lengthPos ? -1 : 1;\r\n            var flag = true;\r\n            while(flag){\r\n                if(lengths[initPos] <= lengthPos && lengths[initPos+1] > lengthPos){\r\n                    lPerc = (lengthPos - lengths[initPos]) / (lengths[initPos+1] - lengths[initPos]);\r\n                    flag = false;\r\n                }else{\r\n                    initPos += dir;\r\n                }\r\n                if(initPos < 0 || initPos >= len - 1){\r\n                    //FIX for TypedArrays that don't store floating point values with enough accuracy\r\n                    if(initPos === len - 1) {\r\n                        return percents[initPos];\r\n                    }\r\n                    flag = false;\r\n                }\r\n            }\r\n            return percents[initPos] + (percents[initPos+1] - percents[initPos])*lPerc;\r\n        }\r\n    }\r\n\r\n    function getPointInSegment(pt1, pt2, pt3, pt4, percent, bezierData) {\r\n        var t1 = getDistancePerc(percent,bezierData);\r\n        var u0 = 1;\r\n        var u1 = 1 - t1;\r\n        var ptX = Math.round((u1*u1*u1* pt1[0] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[0] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[0] + t1*t1*t1* pt2[0])* 1000) / 1000;\r\n        var ptY = Math.round((u1*u1*u1* pt1[1] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[1] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[1] + t1*t1*t1* pt2[1])* 1000) / 1000;\r\n        return [ptX, ptY];\r\n    }\r\n\r\n    function getSegmentArray() {\r\n\r\n    }\r\n\r\n    var bezier_segment_points = createTypedArray('float32', 8);\r\n\r\n    function getNewSegment(pt1,pt2,pt3,pt4,startPerc,endPerc, bezierData){\r\n\r\n        startPerc = startPerc < 0 ? 0 : startPerc > 1 ? 1 : startPerc;\r\n        var t0 = getDistancePerc(startPerc,bezierData);\r\n        endPerc = endPerc > 1 ? 1 : endPerc;\r\n        var t1 = getDistancePerc(endPerc,bezierData);\r\n        var i, len = pt1.length;\r\n        var u0 = 1 - t0;\r\n        var u1 = 1 - t1;\r\n        var u0u0u0 = u0*u0*u0;\r\n        var t0u0u0_3 = t0*u0*u0*3; // t0*u0*u0 + u0*t0*u0 + u0*u0*t0\r\n        var t0t0u0_3 = t0*t0*u0*3; // t0*t0*u0 + u0*t0*t0 + t0*u0*t0\r\n        var t0t0t0 = t0*t0*t0;\r\n        //\r\n        var u0u0u1 = u0*u0*u1;\r\n        var t0u0u1_3 = t0*u0*u1 + u0*t0*u1 + u0*u0*t1;\r\n        var t0t0u1_3 = t0*t0*u1 + u0*t0*t1 + t0*u0*t1;\r\n        var t0t0t1 = t0*t0*t1;\r\n        //\r\n        var u0u1u1 = u0*u1*u1;\r\n        var t0u1u1_3 = t0*u1*u1 + u0*t1*u1 + u0*u1*t1;\r\n        var t0t1u1_3 = t0*t1*u1 + u0*t1*t1 + t0*u1*t1;\r\n        var t0t1t1 = t0*t1*t1;\r\n        //\r\n        var u1u1u1 = u1*u1*u1;\r\n        var t1u1u1_3 = t1*u1*u1 + u1*t1*u1 + u1*u1*t1;\r\n        var t1t1u1_3 = t1*t1*u1 + u1*t1*t1 + t1*u1*t1;\r\n        var t1t1t1 = t1*t1*t1;\r\n        //Math.round(num * 100) / 100\r\n        for(i=0;i<len;i+=1){\r\n            bezier_segment_points[i * 4] = Math.round((u0u0u0 * pt1[i] + t0u0u0_3 * pt3[i] + t0t0u0_3 * pt4[i] + t0t0t0 * pt2[i]) * 1000) / 1000;\r\n            bezier_segment_points[i * 4 + 1] = Math.round((u0u0u1 * pt1[i] + t0u0u1_3 * pt3[i] + t0t0u1_3 * pt4[i] + t0t0t1 * pt2[i]) * 1000) / 1000;\r\n            bezier_segment_points[i * 4 + 2] = Math.round((u0u1u1 * pt1[i] + t0u1u1_3 * pt3[i] + t0t1u1_3 * pt4[i] + t0t1t1 * pt2[i]) * 1000) / 1000;\r\n            bezier_segment_points[i * 4 + 3] = Math.round((u1u1u1 * pt1[i] + t1u1u1_3 * pt3[i] + t1t1u1_3 * pt4[i] + t1t1t1 * pt2[i]) * 1000) / 1000;\r\n            // pts.pt1[i] = Math.round((u0u0u0 * pt1[i] + t0u0u0_3 * pt3[i] + t0t0u0_3 * pt4[i] + t0t0t0 * pt2[i]) * 1000) / 1000;\r\n            // pts.pt3[i] = Math.round((u0u0u1 * pt1[i] + t0u0u1_3 * pt3[i] + t0t0u1_3 * pt4[i] + t0t0t1 * pt2[i]) * 1000) / 1000;\r\n            // pts.pt4[i] = Math.round((u0u1u1 * pt1[i] + t0u1u1_3 * pt3[i] + t0t1u1_3 * pt4[i] + t0t1t1 * pt2[i]) * 1000) / 1000;\r\n            // pts.pt2[i] = Math.round((u1u1u1 * pt1[i] + t1u1u1_3 * pt3[i] + t1t1u1_3 * pt4[i] + t1t1t1 * pt2[i]) * 1000) / 1000;\r\n            // pts.pt1[i] =  Math.round((u0*u0*u0* pt1[i] + (t0*u0*u0 + u0*t0*u0 + u0*u0*t0) * pt3[i] + (t0*t0*u0 + u0*t0*t0 + t0*u0*t0)* pt4[i] + t0*t0*t0* pt2[i])* 1000) / 1000;\r\n            // pts.pt3[i] = Math.round((u0*u0*u1*pt1[i] + (t0*u0*u1 + u0*t0*u1 + u0*u0*t1)* pt3[i] + (t0*t0*u1 + u0*t0*t1 + t0*u0*t1)* pt4[i] + t0*t0*t1* pt2[i])* 1000) / 1000;\r\n            // pts.pt4[i] = Math.round((u0*u1*u1* pt1[i] + (t0*u1*u1 + u0*t1*u1 + u0*u1*t1)* pt3[i] + (t0*t1*u1 + u0*t1*t1 + t0*u1*t1)* pt4[i] + t0*t1*t1* pt2[i])* 1000) / 1000;\r\n            // pts.pt2[i] = Math.round((u1*u1*u1* pt1[i] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[i] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[i] + t1*t1*t1* pt2[i])* 1000) / 1000;\r\n        }\r\n\r\n        return bezier_segment_points;\r\n    }\r\n\r\n    return {\r\n        //getEasingCurve : getEasingCurve,\r\n        getSegmentsLength : getSegmentsLength,\r\n        getNewSegment : getNewSegment,\r\n        getPointInSegment : getPointInSegment,\r\n        buildBezierData : buildBezierData,\r\n        pointOnLine2D : pointOnLine2D,\r\n        pointOnLine3D : pointOnLine3D\r\n    };\r\n}\r\n\r\nvar bez = bezFunction();\r\nfunction dataFunctionManager(){\r\n\r\n    //var tCanvasHelper = createTag('canvas').getContext('2d');\r\n\r\n    function completeLayers(layers, comps, fontManager){\r\n        var layerData;\r\n        var animArray, lastFrame;\r\n        var i, len = layers.length;\r\n        var j, jLen, k, kLen;\r\n        for(i=0;i<len;i+=1){\r\n            layerData = layers[i];\r\n            if(!('ks' in layerData) || layerData.completed){\r\n                continue;\r\n            }\r\n            layerData.completed = true;\r\n            if(layerData.tt){\r\n                layers[i-1].td = layerData.tt;\r\n            }\r\n            animArray = [];\r\n            lastFrame = -1;\r\n            if(layerData.hasMask){\r\n                var maskProps = layerData.masksProperties;\r\n                jLen = maskProps.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    if(maskProps[j].pt.k.i){\r\n                        convertPathsToAbsoluteValues(maskProps[j].pt.k);\r\n                    }else{\r\n                        kLen = maskProps[j].pt.k.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            if(maskProps[j].pt.k[k].s){\r\n                                convertPathsToAbsoluteValues(maskProps[j].pt.k[k].s[0]);\r\n                            }\r\n                            if(maskProps[j].pt.k[k].e){\r\n                                convertPathsToAbsoluteValues(maskProps[j].pt.k[k].e[0]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(layerData.ty===0){\r\n                layerData.layers = findCompLayers(layerData.refId, comps);\r\n                completeLayers(layerData.layers,comps, fontManager);\r\n            }else if(layerData.ty === 4){\r\n                completeShapes(layerData.shapes);\r\n            }else if(layerData.ty == 5){\r\n                completeText(layerData, fontManager);\r\n            }\r\n        }\r\n    }\r\n\r\n    function findCompLayers(id,comps){\r\n        var i = 0, len = comps.length;\r\n        while(i<len){\r\n            if(comps[i].id === id){\r\n                if(!comps[i].layers.__used) {\r\n                    comps[i].layers.__used = true;\r\n                    return comps[i].layers;\r\n                }\r\n                return JSON.parse(JSON.stringify(comps[i].layers));\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    function completeShapes(arr){\r\n        var i, len = arr.length;\r\n        var j, jLen;\r\n        var hasPaths = false;\r\n        for(i=len-1;i>=0;i-=1){\r\n            if(arr[i].ty == 'sh'){\r\n                if(arr[i].ks.k.i){\r\n                    convertPathsToAbsoluteValues(arr[i].ks.k);\r\n                }else{\r\n                    jLen = arr[i].ks.k.length;\r\n                    for(j=0;j<jLen;j+=1){\r\n                        if(arr[i].ks.k[j].s){\r\n                            convertPathsToAbsoluteValues(arr[i].ks.k[j].s[0]);\r\n                        }\r\n                        if(arr[i].ks.k[j].e){\r\n                            convertPathsToAbsoluteValues(arr[i].ks.k[j].e[0]);\r\n                        }\r\n                    }\r\n                }\r\n                hasPaths = true;\r\n            }else if(arr[i].ty == 'gr'){\r\n                completeShapes(arr[i].it);\r\n            }\r\n        }\r\n        /*if(hasPaths){\r\n            //mx: distance\r\n            //ss: sensitivity\r\n            //dc: decay\r\n            arr.splice(arr.length-1,0,{\r\n                \"ty\": \"ms\",\r\n                \"mx\":20,\r\n                \"ss\":10,\r\n                 \"dc\":0.001,\r\n                \"maxDist\":200\r\n            });\r\n        }*/\r\n    }\r\n\r\n    function convertPathsToAbsoluteValues(path){\r\n        var i, len = path.i.length;\r\n        for(i=0;i<len;i+=1){\r\n            path.i[i][0] += path.v[i][0];\r\n            path.i[i][1] += path.v[i][1];\r\n            path.o[i][0] += path.v[i][0];\r\n            path.o[i][1] += path.v[i][1];\r\n        }\r\n    }\r\n\r\n    function checkVersion(minimum,animVersionString){\r\n        var animVersion = animVersionString ? animVersionString.split('.') : [100,100,100];\r\n        if(minimum[0]>animVersion[0]){\r\n            return true;\r\n        } else if(animVersion[0] > minimum[0]){\r\n            return false;\r\n        }\r\n        if(minimum[1]>animVersion[1]){\r\n            return true;\r\n        } else if(animVersion[1] > minimum[1]){\r\n            return false;\r\n        }\r\n        if(minimum[2]>animVersion[2]){\r\n            return true;\r\n        } else if(animVersion[2] > minimum[2]){\r\n            return false;\r\n        }\r\n    }\r\n\r\n    var checkText = (function(){\r\n        var minimumVersion = [4,4,14];\r\n\r\n        function updateTextLayer(textLayer){\r\n            var documentData = textLayer.t.d;\r\n            textLayer.t.d = {\r\n                k: [\r\n                    {\r\n                        s:documentData,\r\n                        t:0\r\n                    }\r\n                ]\r\n            };\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var i, len = layers.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(layers[i].ty === 5){\r\n                    updateTextLayer(layers[i]);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    var checkChars = (function() {\r\n        var minimumVersion = [4,7,99];\r\n        return function (animationData){\r\n            if(animationData.chars && !checkVersion(minimumVersion,animationData.v)){\r\n                var i, len = animationData.chars.length, j, jLen, k, kLen;\r\n                var pathData, paths;\r\n                for(i = 0; i < len; i += 1) {\r\n                    if(animationData.chars[i].data && animationData.chars[i].data.shapes) {\r\n                        paths = animationData.chars[i].data.shapes[0].it;\r\n                        jLen = paths.length;\r\n\r\n                        for(j = 0; j < jLen; j += 1) {\r\n                            pathData = paths[j].ks.k;\r\n                            if(!pathData.__converted) {\r\n                                convertPathsToAbsoluteValues(paths[j].ks.k);\r\n                                pathData.__converted = true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    var checkColors = (function(){\r\n        var minimumVersion = [4,1,9];\r\n\r\n        function iterateShapes(shapes){\r\n            var i, len = shapes.length;\r\n            var j, jLen;\r\n            for(i=0;i<len;i+=1){\r\n                if(shapes[i].ty === 'gr'){\r\n                    iterateShapes(shapes[i].it);\r\n                }else if(shapes[i].ty === 'fl' || shapes[i].ty === 'st'){\r\n                    if(shapes[i].c.k && shapes[i].c.k[0].i){\r\n                        jLen = shapes[i].c.k.length;\r\n                        for(j=0;j<jLen;j+=1){\r\n                            if(shapes[i].c.k[j].s){\r\n                                shapes[i].c.k[j].s[0] /= 255;\r\n                                shapes[i].c.k[j].s[1] /= 255;\r\n                                shapes[i].c.k[j].s[2] /= 255;\r\n                                shapes[i].c.k[j].s[3] /= 255;\r\n                            }\r\n                            if(shapes[i].c.k[j].e){\r\n                                shapes[i].c.k[j].e[0] /= 255;\r\n                                shapes[i].c.k[j].e[1] /= 255;\r\n                                shapes[i].c.k[j].e[2] /= 255;\r\n                                shapes[i].c.k[j].e[3] /= 255;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        shapes[i].c.k[0] /= 255;\r\n                        shapes[i].c.k[1] /= 255;\r\n                        shapes[i].c.k[2] /= 255;\r\n                        shapes[i].c.k[3] /= 255;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var i, len = layers.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(layers[i].ty === 4){\r\n                    iterateShapes(layers[i].shapes);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    var checkShapes = (function(){\r\n        var minimumVersion = [4,4,18];\r\n\r\n\r\n\r\n        function completeShapes(arr){\r\n            var i, len = arr.length;\r\n            var j, jLen;\r\n            var hasPaths = false;\r\n            for(i=len-1;i>=0;i-=1){\r\n                if(arr[i].ty == 'sh'){\r\n                    if(arr[i].ks.k.i){\r\n                        arr[i].ks.k.c = arr[i].closed;\r\n                    }else{\r\n                        jLen = arr[i].ks.k.length;\r\n                        for(j=0;j<jLen;j+=1){\r\n                            if(arr[i].ks.k[j].s){\r\n                                arr[i].ks.k[j].s[0].c = arr[i].closed;\r\n                            }\r\n                            if(arr[i].ks.k[j].e){\r\n                                arr[i].ks.k[j].e[0].c = arr[i].closed;\r\n                            }\r\n                        }\r\n                    }\r\n                    hasPaths = true;\r\n                }else if(arr[i].ty == 'gr'){\r\n                    completeShapes(arr[i].it);\r\n                }\r\n            }\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var layerData;\r\n            var i, len = layers.length;\r\n            var j, jLen, k, kLen;\r\n            for(i=0;i<len;i+=1){\r\n                layerData = layers[i];\r\n                if(layerData.hasMask){\r\n                    var maskProps = layerData.masksProperties;\r\n                    jLen = maskProps.length;\r\n                    for(j=0;j<jLen;j+=1){\r\n                        if(maskProps[j].pt.k.i){\r\n                            maskProps[j].pt.k.c = maskProps[j].cl;\r\n                        }else{\r\n                            kLen = maskProps[j].pt.k.length;\r\n                            for(k=0;k<kLen;k+=1){\r\n                                if(maskProps[j].pt.k[k].s){\r\n                                    maskProps[j].pt.k[k].s[0].c = maskProps[j].cl;\r\n                                }\r\n                                if(maskProps[j].pt.k[k].e){\r\n                                    maskProps[j].pt.k[k].e[0].c = maskProps[j].cl;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if(layerData.ty === 4){\r\n                    completeShapes(layerData.shapes);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    /*function blitPaths(path){\r\n        var i, len = path.i.length;\r\n        for(i=0;i<len;i+=1){\r\n            path.i[i][0] /= blitter;\r\n            path.i[i][1] /= blitter;\r\n            path.o[i][0] /= blitter;\r\n            path.o[i][1] /= blitter;\r\n            path.v[i][0] /= blitter;\r\n            path.v[i][1] /= blitter;\r\n        }\r\n    }\r\n\r\n    function blitShapes(arr){\r\n        var i, len = arr.length;\r\n        var j, jLen;\r\n        var hasPaths = false;\r\n        for(i=len-1;i>=0;i-=1){\r\n            if(arr[i].ty == 'sh'){\r\n                if(arr[i].ks.k.i){\r\n                    blitPaths(arr[i].ks.k);\r\n                }else{\r\n                    jLen = arr[i].ks.k.length;\r\n                    for(j=0;j<jLen;j+=1){\r\n                        if(arr[i].ks.k[j].s){\r\n                            blitPaths(arr[i].ks.k[j].s[0]);\r\n                        }\r\n                        if(arr[i].ks.k[j].e){\r\n                            blitPaths(arr[i].ks.k[j].e[0]);\r\n                        }\r\n                    }\r\n                }\r\n                hasPaths = true;\r\n            }else if(arr[i].ty == 'gr'){\r\n                blitShapes(arr[i].it);\r\n            }else if(arr[i].ty == 'rc'){\r\n                blitProperty(arr[i].p);\r\n                blitProperty(arr[i].s);\r\n            }else if(arr[i].ty == 'st'){\r\n                blitProperty(arr[i].w);\r\n            }else if(arr[i].ty == 'tr'){\r\n                blitProperty(arr[i].p);\r\n                blitProperty(arr[i].sk);\r\n                blitProperty(arr[i].a);\r\n            }else if(arr[i].ty == 'el'){\r\n                blitProperty(arr[i].p);\r\n                blitProperty(arr[i].s);\r\n            }else if(arr[i].ty == 'rd'){\r\n                blitProperty(arr[i].r);\r\n            }else{\r\n\r\n                //console.log(arr[i].ty );\r\n            }\r\n        }\r\n    }\r\n\r\n    function blitText(data, fontManager){\r\n\r\n    }\r\n\r\n    function blitValue(val){\r\n        if(typeof(val) === 'number'){\r\n            val /= blitter;\r\n        } else {\r\n            var i = val.length-1;\r\n            while(i>=0){\r\n                val[i] /= blitter;\r\n                i-=1;\r\n            }\r\n        }\r\n        return val;\r\n    }\r\n\r\n    function blitProperty(data){\r\n        if(!data.k.length){\r\n            data.k = blitValue(data.k);\r\n        }else if(typeof(data.k[0]) === 'number'){\r\n            data.k = blitValue(data.k);\r\n        } else {\r\n            var i, len = data.k.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(data.k[i].s){\r\n                    //console.log('pre S: ', data.k[i].s);\r\n                    data.k[i].s = blitValue(data.k[i].s);\r\n                    //console.log('post S: ', data.k[i].s);\r\n                }\r\n                if(data.k[i].e){\r\n                    //console.log('pre E: ', data.k[i].e);\r\n                    data.k[i].e = blitValue(data.k[i].e);\r\n                    //console.log('post E: ', data.k[i].e);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function blitLayers(layers,comps, fontManager){\r\n        var layerData;\r\n        var animArray, lastFrame;\r\n        var i, len = layers.length;\r\n        var j, jLen, k, kLen;\r\n        for(i=0;i<len;i+=1){\r\n            layerData = layers[i];\r\n            if(!('ks' in layerData)){\r\n                continue;\r\n            }\r\n            blitProperty(layerData.ks.a);\r\n            blitProperty(layerData.ks.p);\r\n            layerData.completed = true;\r\n            if(layerData.tt){\r\n                layers[i-1].td = layerData.tt;\r\n            }\r\n            animArray = [];\r\n            lastFrame = -1;\r\n            if(layerData.hasMask){\r\n                var maskProps = layerData.masksProperties;\r\n                jLen = maskProps.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    if(maskProps[j].pt.k.i){\r\n                        blitPaths(maskProps[j].pt.k);\r\n                    }else{\r\n                        kLen = maskProps[j].pt.k.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            if(maskProps[j].pt.k[k].s){\r\n                                blitPaths(maskProps[j].pt.k[k].s[0]);\r\n                            }\r\n                            if(maskProps[j].pt.k[k].e){\r\n                                blitPaths(maskProps[j].pt.k[k].e[0]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(layerData.ty===0){\r\n                layerData.w = Math.round(layerData.w/blitter);\r\n                layerData.h = Math.round(layerData.h/blitter);\r\n                blitLayers(layerData.layers,comps, fontManager);\r\n            }else if(layerData.ty === 4){\r\n                blitShapes(layerData.shapes);\r\n            }else if(layerData.ty == 5){\r\n                blitText(layerData, fontManager);\r\n            }else if(layerData.ty == 1){\r\n                layerData.sh /= blitter;\r\n                layerData.sw /= blitter;\r\n            } else {\r\n            }\r\n        }\r\n    }\r\n\r\n    function blitAnimation(animationData,comps, fontManager){\r\n        blitLayers(animationData.layers,comps, fontManager);\r\n    }*/\r\n\r\n    function completeData(animationData, fontManager){\r\n        if(animationData.__complete){\r\n            return;\r\n        }\r\n        checkColors(animationData);\r\n        checkText(animationData);\r\n        checkChars(animationData);\r\n        checkShapes(animationData);\r\n        completeLayers(animationData.layers, animationData.assets, fontManager);\r\n        animationData.__complete = true;\r\n        //blitAnimation(animationData, animationData.assets, fontManager);\r\n    }\r\n\r\n    function completeText(data, fontManager){\r\n        if(data.t.a.length === 0 && !('m' in data.t.p)){\r\n            data.singleShape = true;\r\n        }\r\n    }\r\n\r\n    var moduleOb = {};\r\n    moduleOb.completeData = completeData;\r\n\r\n    return moduleOb;\r\n}\r\n\r\nvar dataManager = dataFunctionManager();\r\nvar FontManager = (function(){\r\n\r\n    var maxWaitingTime = 5000;\r\n    var emptyChar = {\r\n        w: 0,\r\n        size:0,\r\n        shapes:[]\r\n    };\r\n    var combinedCharacters = [];\r\n    //Hindi characters\r\n    combinedCharacters = combinedCharacters.concat([2304, 2305, 2306, 2307, 2362, 2363, 2364, 2364, 2366\r\n    , 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379\r\n    , 2380, 2381, 2382, 2383, 2387, 2388, 2389, 2390, 2391, 2402, 2403]);\r\n\r\n    function setUpNode(font, family){\r\n        var parentNode = createTag('span');\r\n        parentNode.style.fontFamily    = family;\r\n        var node = createTag('span');\r\n        // Characters that vary significantly among different fonts\r\n        node.innerHTML = 'giItT1WQy@!-/#';\r\n        // Visible - so we can measure it - but not on the screen\r\n        parentNode.style.position      = 'absolute';\r\n        parentNode.style.left          = '-10000px';\r\n        parentNode.style.top           = '-10000px';\r\n        // Large font size makes even subtle changes obvious\r\n        parentNode.style.fontSize      = '300px';\r\n        // Reset any font properties\r\n        parentNode.style.fontVariant   = 'normal';\r\n        parentNode.style.fontStyle     = 'normal';\r\n        parentNode.style.fontWeight    = 'normal';\r\n        parentNode.style.letterSpacing = '0';\r\n        parentNode.appendChild(node);\r\n        document.body.appendChild(parentNode);\r\n\r\n        // Remember width with no applied web font\r\n        var width = node.offsetWidth;\r\n        node.style.fontFamily = font + ', '+family;\r\n        return {node:node, w:width, parent:parentNode};\r\n    }\r\n\r\n    function checkLoadedFonts() {\r\n        var i, len = this.fonts.length;\r\n        var node, w;\r\n        var loadedCount = len;\r\n        for(i=0;i<len; i+= 1){\r\n            if(this.fonts[i].loaded){\r\n                loadedCount -= 1;\r\n                continue;\r\n            }\r\n            if(this.fonts[i].fOrigin === 't' || this.fonts[i].origin === 2){\r\n                if(window.Typekit && window.Typekit.load && this.typekitLoaded === 0){\r\n                    this.typekitLoaded = 1;\r\n                    try{window.Typekit.load({\r\n                        async: true,\r\n                        active: function() {\r\n                            this.typekitLoaded = 2;\r\n                        }.bind(this)\r\n                    });}catch(e){}\r\n                }\r\n                if(this.typekitLoaded === 2) {\r\n                    this.fonts[i].loaded = true;\r\n                }\r\n            } else if(this.fonts[i].fOrigin === 'n' || this.fonts[i].origin === 0){\r\n                this.fonts[i].loaded = true;\r\n            } else{\r\n                node = this.fonts[i].monoCase.node;\r\n                w = this.fonts[i].monoCase.w;\r\n                if(node.offsetWidth !== w){\r\n                    loadedCount -= 1;\r\n                    this.fonts[i].loaded = true;\r\n                }else{\r\n                    node = this.fonts[i].sansCase.node;\r\n                    w = this.fonts[i].sansCase.w;\r\n                    if(node.offsetWidth !== w){\r\n                        loadedCount -= 1;\r\n                        this.fonts[i].loaded = true;\r\n                    }\r\n                }\r\n                if(this.fonts[i].loaded){\r\n                    this.fonts[i].sansCase.parent.parentNode.removeChild(this.fonts[i].sansCase.parent);\r\n                    this.fonts[i].monoCase.parent.parentNode.removeChild(this.fonts[i].monoCase.parent);\r\n                }\r\n            }\r\n        }\r\n\r\n        if(loadedCount !== 0 && Date.now() - this.initTime < maxWaitingTime){\r\n            setTimeout(checkLoadedFonts.bind(this),20);\r\n        }else{\r\n            setTimeout(function(){this.loaded = true;}.bind(this),0);\r\n\r\n        }\r\n    }\r\n\r\n    function createHelper(def, fontData){\r\n        var tHelper = createNS('text');\r\n        tHelper.style.fontSize = '100px';\r\n        tHelper.style.fontFamily = fontData.fFamily;\r\n        tHelper.textContent = '1';\r\n        if(fontData.fClass){\r\n            tHelper.style.fontFamily = 'inherit';\r\n            tHelper.className = fontData.fClass;\r\n        } else {\r\n            tHelper.style.fontFamily = fontData.fFamily;\r\n        }\r\n        def.appendChild(tHelper);\r\n        var tCanvasHelper = createTag('canvas').getContext('2d');\r\n        tCanvasHelper.font = '100px '+ fontData.fFamily;\r\n        return tCanvasHelper;\r\n    }\r\n\r\n    function addFonts(fontData, defs){\r\n        if(!fontData){\r\n            this.loaded = true;\r\n            return;\r\n        }\r\n        if(this.chars){\r\n            this.loaded = true;\r\n            this.fonts = fontData.list;\r\n            return;\r\n        }\r\n\r\n        var fontArr = fontData.list;\r\n        var i, len = fontArr.length;\r\n        for(i=0; i<len; i+= 1){\r\n            fontArr[i].loaded = false;\r\n            fontArr[i].monoCase = setUpNode(fontArr[i].fFamily,'monospace');\r\n            fontArr[i].sansCase = setUpNode(fontArr[i].fFamily,'sans-serif');\r\n            if(!fontArr[i].fPath) {\r\n                fontArr[i].loaded = true;\r\n            }else if(fontArr[i].fOrigin === 'p' || fontArr[i].origin === 3){\r\n                var s = createTag('style');\r\n                s.type = \"text/css\";\r\n                s.innerHTML = \"@font-face {\" + \"font-family: \"+fontArr[i].fFamily+\"; font-style: normal; src: url('\"+fontArr[i].fPath+\"');}\";\r\n                defs.appendChild(s);\r\n            } else if(fontArr[i].fOrigin === 'g' || fontArr[i].origin === 1){\r\n                //<link href='https://fonts.googleapis.com/css?family=Montserrat' rel='stylesheet' type='text/css'>\r\n                var l = createTag('link');\r\n                l.type = \"text/css\";\r\n                l.rel = \"stylesheet\";\r\n                l.href = fontArr[i].fPath;\r\n                defs.appendChild(l);\r\n            } else if(fontArr[i].fOrigin === 't' || fontArr[i].origin === 2){\r\n                //<link href='https://fonts.googleapis.com/css?family=Montserrat' rel='stylesheet' type='text/css'>\r\n                var sc = createTag('script');\r\n                sc.setAttribute('src',fontArr[i].fPath);\r\n                defs.appendChild(sc);\r\n            }\r\n            fontArr[i].helper = createHelper(defs,fontArr[i]);\r\n            this.fonts.push(fontArr[i]);\r\n        }\r\n        checkLoadedFonts.bind(this)();\r\n    }\r\n\r\n    function addChars(chars){\r\n        if(!chars){\r\n            return;\r\n        }\r\n        if(!this.chars){\r\n            this.chars = [];\r\n        }\r\n        var i, len = chars.length;\r\n        var j, jLen = this.chars.length, found;\r\n        for(i=0;i<len;i+=1){\r\n            j = 0;\r\n            found = false;\r\n            while(j<jLen){\r\n                if(this.chars[j].style === chars[i].style && this.chars[j].fFamily === chars[i].fFamily && this.chars[j].ch === chars[i].ch){\r\n                    found = true;\r\n                }\r\n                j += 1;\r\n            }\r\n            if(!found){\r\n                this.chars.push(chars[i]);\r\n                jLen += 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    function getCharData(char, style, font){\r\n        var i = 0, len = this.chars.length;\r\n        while( i < len) {\r\n            if(this.chars[i].ch === char && this.chars[i].style === style && this.chars[i].fFamily === font){\r\n                return this.chars[i];\r\n            }\r\n            i+= 1;\r\n        }\r\n        if(console && console.warn) {\r\n            console.warn('Missing character from exported characters list: ', char, style, font);\r\n        }\r\n        return emptyChar;\r\n    }\r\n\r\n    function measureText(char, fontName, size){\r\n        var fontData = this.getFontByName(fontName);\r\n        var tHelper = fontData.helper;\r\n        //tHelper.textContent = char;\r\n        return tHelper.measureText(char).width*size/100;\r\n        //return tHelper.getComputedTextLength()*size/100;\r\n    }\r\n\r\n    function getFontByName(name){\r\n        var i = 0, len = this.fonts.length;\r\n        while(i<len){\r\n            if(this.fonts[i].fName === name) {\r\n                return this.fonts[i];\r\n            }\r\n            i += 1;\r\n        }\r\n        return 'sans-serif';\r\n    }\r\n\r\n    function getCombinedCharacterCodes() {\r\n        return combinedCharacters;\r\n    }\r\n\r\n    var Font = function(){\r\n        this.fonts = [];\r\n        this.chars = null;\r\n        this.typekitLoaded = 0;\r\n        this.loaded = false;\r\n        this.initTime = Date.now();\r\n    };\r\n    //TODO: for now I'm adding these methods to the Class and not the prototype. Think of a better way to implement it. \r\n    Font.getCombinedCharacterCodes = getCombinedCharacterCodes;\r\n\r\n    Font.prototype.addChars = addChars;\r\n    Font.prototype.addFonts = addFonts;\r\n    Font.prototype.getCharData = getCharData;\r\n    Font.prototype.getFontByName = getFontByName;\r\n    Font.prototype.measureText = measureText;\r\n\r\n    return Font;\r\n\r\n}());\r\nvar PropertyFactory = (function(){\r\n\r\n    var initFrame = initialDefaultFrame;\r\n\r\n    function interpolateValue(frameNum, previousValue, caching){\r\n        var offsetTime = this.offsetTime;\r\n        var newValue;\r\n        if(this.propType === 'multidimensional') {\r\n            newValue = createTypedArray('float32', previousValue.length);\r\n        }\r\n        var iterationIndex = caching.lastIndex;\r\n        var i = iterationIndex;\r\n        var len = this.keyframes.length- 1,flag = true;\r\n        var keyData, nextKeyData;\r\n\r\n        while(flag){\r\n            keyData = this.keyframes[i];\r\n            nextKeyData = this.keyframes[i+1];\r\n            if(i == len-1 && frameNum >= nextKeyData.t - offsetTime){\r\n                if(keyData.h){\r\n                    keyData = nextKeyData;\r\n                }\r\n                iterationIndex = 0;\r\n                break;\r\n            }\r\n            if((nextKeyData.t - offsetTime) > frameNum){\r\n                iterationIndex = i;\r\n                break;\r\n            }\r\n            if(i < len - 1){\r\n                i += 1;\r\n            }else{\r\n                iterationIndex = 0;\r\n                flag = false;\r\n            }\r\n        }\r\n\r\n        var k, kLen,perc,jLen, j, fnc;\r\n        if(keyData.to){\r\n\r\n            if(!keyData.bezierData){\r\n                bez.buildBezierData(keyData);\r\n            }\r\n            var bezierData = keyData.bezierData;\r\n            if(frameNum >= nextKeyData.t-offsetTime || frameNum < keyData.t-offsetTime){\r\n                var ind = frameNum >= nextKeyData.t-offsetTime ? bezierData.points.length - 1 : 0;\r\n                kLen = bezierData.points[ind].point.length;\r\n                for(k = 0; k < kLen; k += 1){\r\n                    newValue[k] = bezierData.points[ind].point[k];\r\n                }\r\n                caching._lastBezierData = null;\r\n            }else{\r\n                if(keyData.__fnct){\r\n                    fnc = keyData.__fnct;\r\n                }else{\r\n                    fnc = BezierFactory.getBezierEasing(keyData.o.x,keyData.o.y,keyData.i.x,keyData.i.y,keyData.n).get;\r\n                    keyData.__fnct = fnc;\r\n                }\r\n                perc = fnc((frameNum-(keyData.t-offsetTime))/((nextKeyData.t-offsetTime)-(keyData.t-offsetTime)));\r\n                var distanceInLine = bezierData.segmentLength*perc;\r\n\r\n                var segmentPerc;\r\n                var addedLength =  (caching.lastFrame < frameNum && caching._lastBezierData === bezierData) ? caching._lastAddedLength : 0;\r\n                j =  (caching.lastFrame < frameNum && caching._lastBezierData === bezierData) ? caching._lastPoint : 0;\r\n                flag = true;\r\n                jLen = bezierData.points.length;\r\n                while(flag){\r\n                    addedLength +=bezierData.points[j].partialLength;\r\n                    if(distanceInLine === 0 || perc === 0 || j == bezierData.points.length - 1){\r\n                        kLen = bezierData.points[j].point.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            newValue[k] = bezierData.points[j].point[k];\r\n                        }\r\n                        break;\r\n                    }else if(distanceInLine >= addedLength && distanceInLine < addedLength + bezierData.points[j+1].partialLength){\r\n                        segmentPerc = (distanceInLine-addedLength)/(bezierData.points[j+1].partialLength);\r\n                        kLen = bezierData.points[j].point.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            newValue[k] = bezierData.points[j].point[k] + (bezierData.points[j+1].point[k] - bezierData.points[j].point[k])*segmentPerc;\r\n                        }\r\n                        break;\r\n                    }\r\n                    if(j < jLen - 1){\r\n                        j += 1;\r\n                    }else{\r\n                        flag = false;\r\n                    }\r\n                }\r\n                caching._lastPoint = j;\r\n                caching._lastAddedLength = addedLength - bezierData.points[j].partialLength;\r\n                caching._lastBezierData = bezierData;\r\n            }\r\n        }else{\r\n            var outX,outY,inX,inY, keyValue;\r\n            len = keyData.s.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(keyData.h !== 1){\r\n                    if(frameNum >= nextKeyData.t-offsetTime){\r\n                        perc = 1;\r\n                    }else if(frameNum < keyData.t-offsetTime){\r\n                        perc = 0;\r\n                    }else{\r\n                        if(keyData.o.x.constructor === Array){\r\n                            if(!keyData.__fnct){\r\n                                keyData.__fnct = [];\r\n                            }\r\n                            if (!keyData.__fnct[i]) {\r\n                                outX = keyData.o.x[i] || keyData.o.x[0];\r\n                                outY = keyData.o.y[i] || keyData.o.y[0];\r\n                                inX = keyData.i.x[i] || keyData.i.x[0];\r\n                                inY = keyData.i.y[i] || keyData.i.y[0];\r\n                                fnc = BezierFactory.getBezierEasing(outX,outY,inX,inY).get;\r\n                                keyData.__fnct[i] = fnc;\r\n                            } else {\r\n                                fnc = keyData.__fnct[i];\r\n                            }\r\n                        } else {\r\n                            if (!keyData.__fnct) {\r\n                                outX = keyData.o.x;\r\n                                outY = keyData.o.y;\r\n                                inX = keyData.i.x;\r\n                                inY = keyData.i.y;\r\n                                fnc = BezierFactory.getBezierEasing(outX,outY,inX,inY).get;\r\n                                keyData.__fnct = fnc;\r\n                            } else{\r\n                                fnc = keyData.__fnct;\r\n                            }\r\n                        }\r\n                        perc = fnc((frameNum-(keyData.t-offsetTime))/((nextKeyData.t-offsetTime)-(keyData.t-offsetTime)));\r\n                    }\r\n                }\r\n                if(this.sh && keyData.h !== 1){\r\n                    var initP = keyData.s[i];\r\n                    var endP = keyData.e[i];\r\n                    if(initP-endP < -180){\r\n                        initP += 360;\r\n                    } else if(initP-endP > 180){\r\n                        initP -= 360;\r\n                    }\r\n                    keyValue = initP+(endP-initP)*perc;\r\n                } else {\r\n                    keyValue = keyData.h === 1 ? keyData.s[i] : keyData.s[i]+(keyData.e[i]-keyData.s[i])*perc;\r\n                }\r\n                if(len === 1){\r\n                    newValue = keyValue;\r\n                }else{\r\n                    newValue[i] = keyValue;\r\n                }\r\n            }\r\n        }\r\n        caching.lastIndex = iterationIndex;\r\n        return newValue;\r\n    }\r\n\r\n    function calculateMultidimensionalValueAtCurrentTime(renderResult) {\r\n        var i = 0;\r\n        while(i<this.v.length){\r\n            this.pv[i] = renderResult[i];\r\n            this.v[i] = this.mult ? this.pv[i] * this.mult : this.pv[i];\r\n            if(this.lastPValue[i] !== this.pv[i]) {\r\n                this._mdf = true;\r\n                this.lastPValue[i] = this.pv[i];\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    function calculateUnidimenstionalValueAtCurrentTime(renderResult) {\r\n        this.pv = renderResult;\r\n        this.v = this.mult ? this.pv*this.mult : this.pv;\r\n        if(this.lastPValue != this.pv){\r\n            this._mdf = true;\r\n            this.lastPValue = this.pv;\r\n        }\r\n    }\r\n\r\n    function getValueAtCurrentTime(){\r\n        if(this.elem.globalData.frameId === this.frameId){\r\n            return;\r\n        }\r\n        this._mdf = false;\r\n        var frameNum = this.comp.renderedFrame - this.offsetTime;\r\n        var initTime = this.keyframes[0].t - this.offsetTime;\r\n        var endTime = this.keyframes[this.keyframes.length- 1].t-this.offsetTime;\r\n        if(!(frameNum === this._caching.lastFrame || (this._caching.lastFrame !== initFrame && ((this._caching.lastFrame >= endTime && frameNum >= endTime) || (this._caching.lastFrame < initTime && frameNum < initTime))))){\r\n            this._caching.lastIndex = this._caching.lastFrame < frameNum ? this._caching.lastIndex : 0;\r\n            var renderResult = this.interpolateValue(frameNum, this.pv, this._caching);\r\n            this.calculateValueAtCurrentTime(renderResult);\r\n        }\r\n        this._caching.lastFrame = frameNum;\r\n        this.frameId = this.elem.globalData.frameId;\r\n    }\r\n\r\n    function getNoValue(){\r\n        this._mdf = false;\r\n    }\r\n\r\n    function ValueProperty(elem,data, mult){\r\n        this.propType = 'unidimensional';\r\n        this.mult = mult;\r\n        this.v = mult ? data.k * mult : data.k;\r\n        this.pv = data.k;\r\n        this._mdf = false;\r\n        this.comp = elem.comp;\r\n        this.k = false;\r\n        this.kf = false;\r\n        this.vel = 0;\r\n        this.getValue = getNoValue;\r\n    }\r\n\r\n    function MultiDimensionalProperty(elem, data, mult) {\r\n        this.propType = 'multidimensional';\r\n        this.mult = mult;\r\n        this.data = data;\r\n        this._mdf = false;\r\n        this.comp = elem.comp;\r\n        this.k = false;\r\n        this.kf = false;\r\n        this.frameId = -1;\r\n        var i, len = data.k.length;\r\n        this.v = createTypedArray('float32', len);\r\n        this.pv = createTypedArray('float32', len);\r\n        this.lastValue = createTypedArray('float32', len);\r\n        var arr = createTypedArray('float32', len);\r\n        this.vel = createTypedArray('float32', len);\r\n        for (i = 0; i < len; i += 1) {\r\n            this.v[i] = mult ? data.k[i] * mult : data.k[i];\r\n            this.pv[i] = data.k[i];\r\n        }\r\n        this.getValue = getNoValue;\r\n    }\r\n\r\n    function KeyframedValueProperty(elem, data, mult) {\r\n        this.propType = 'unidimensional';\r\n        this.keyframes = data.k;\r\n        this.offsetTime = elem.data.st;\r\n        this.lastValue = initFrame;\r\n        this.lastPValue = initFrame;\r\n        this.frameId = -1;\r\n        this._caching = {lastFrame: initFrame, lastIndex: 0, value: 0};\r\n        this.k = true;\r\n        this.kf = true;\r\n        this.data = data;\r\n        this.mult = mult;\r\n        this.elem = elem;\r\n        this._isFirstFrame = false;\r\n        this.comp = elem.comp;\r\n        this.v = mult ? data.k[0].s[0] * mult : data.k[0].s[0];\r\n        this.pv = data.k[0].s[0];\r\n        this.getValue = getValueAtCurrentTime;\r\n        this.calculateValueAtCurrentTime = calculateUnidimenstionalValueAtCurrentTime;\r\n        this.interpolateValue = interpolateValue;\r\n    }\r\n\r\n    function KeyframedMultidimensionalProperty(elem, data, mult){\r\n        this.propType = 'multidimensional';\r\n        var i, len = data.k.length;\r\n        var s, e,to,ti;\r\n        for (i = 0; i < len - 1; i += 1) {\r\n            if (data.k[i].to && data.k[i].s && data.k[i].e) {\r\n                s = data.k[i].s;\r\n                e = data.k[i].e;\r\n                to = data.k[i].to;\r\n                ti = data.k[i].ti;\r\n                if((s.length === 2 && !(s[0] === e[0] && s[1] === e[1]) && bez.pointOnLine2D(s[0],s[1],e[0],e[1],s[0] + to[0],s[1] + to[1]) && bez.pointOnLine2D(s[0],s[1],e[0],e[1],e[0] + ti[0],e[1] + ti[1])) || (s.length === 3 && !(s[0] === e[0] && s[1] === e[1] && s[2] === e[2]) && bez.pointOnLine3D(s[0],s[1],s[2],e[0],e[1],e[2],s[0] + to[0],s[1] + to[1],s[2] + to[2]) && bez.pointOnLine3D(s[0],s[1],s[2],e[0],e[1],e[2],e[0] + ti[0],e[1] + ti[1],e[2] + ti[2]))){\r\n                    data.k[i].to = null;\r\n                    data.k[i].ti = null;\r\n                }\r\n                if(s[0] === e[0] && s[1] === e[1] && to[0] === 0 && to[1] === 0 && ti[0] === 0 && ti[1] === 0) {\r\n                    if(s.length === 2 || (s[2] === e[2] && to[2] === 0 && ti[2] === 0)) {\r\n                        data.k[i].to = null;\r\n                        data.k[i].ti = null;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.keyframes = data.k;\r\n        this.offsetTime = elem.data.st;\r\n        this.k = true;\r\n        this.kf = true;\r\n        this._isFirstFrame = true;\r\n        this.mult = mult;\r\n        this.elem = elem;\r\n        this.comp = elem.comp;\r\n        this.getValue = getValueAtCurrentTime;\r\n        this.calculateValueAtCurrentTime = calculateMultidimensionalValueAtCurrentTime;\r\n        this.interpolateValue = interpolateValue;\r\n        this.frameId = -1;\r\n        var arrLen = data.k[0].s.length;\r\n        this.v = createTypedArray('float32', arrLen);\r\n        this.pv = createTypedArray('float32', arrLen);\r\n        this.lastValue = createTypedArray('float32', arrLen);\r\n        this.lastPValue = createTypedArray('float32', arrLen);\r\n        this._caching={lastFrame:initFrame,lastIndex:0,value:createTypedArray('float32', arrLen)};\r\n    }\r\n\r\n    function getProp(elem,data,type, mult, arr) {\r\n        var p;\r\n        if(data.a === 0){\r\n            if(type === 0) {\r\n                p = new ValueProperty(elem,data,mult);\r\n            } else {\r\n                p = new MultiDimensionalProperty(elem,data, mult);\r\n            }\r\n        } else if(data.a === 1){\r\n            if(type === 0) {\r\n                p = new KeyframedValueProperty(elem,data,mult);\r\n            } else {\r\n                p = new KeyframedMultidimensionalProperty(elem,data, mult);\r\n            }\r\n        } else if(!data.k.length){\r\n            p = new ValueProperty(elem,data, mult);\r\n        }else if(typeof(data.k[0]) === 'number'){\r\n            p = new MultiDimensionalProperty(elem,data, mult);\r\n        }else{\r\n            switch(type){\r\n                case 0:\r\n                    p = new KeyframedValueProperty(elem,data,mult);\r\n                    break;\r\n                case 1:\r\n                    p = new KeyframedMultidimensionalProperty(elem,data,mult);\r\n                    break;\r\n            }\r\n        }\r\n        if(p.k){\r\n            arr.push(p);\r\n        }\r\n        return p;\r\n    }\r\n\r\n    var ob = {\r\n        getProp: getProp\r\n    };\r\n    return ob;\r\n}());\r\nvar TransformPropertyFactory = (function() {\r\n\r\n    function applyToMatrix(mat) {\r\n        var i, len = this.dynamicProperties.length;\r\n        for(i = 0; i < len; i += 1) {\r\n            this.dynamicProperties[i].getValue();\r\n            if (this.dynamicProperties[i]._mdf) {\r\n                this._mdf = true;\r\n            }\r\n        }\r\n        if (this.a) {\r\n            mat.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n        }\r\n        if (this.s) {\r\n            mat.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n        }\r\n        if (this.r) {\r\n            mat.rotate(-this.r.v);\r\n        } else {\r\n            mat.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n        }\r\n        if (this.data.p.s) {\r\n            if (this.data.p.z) {\r\n                mat.translate(this.px.v, this.py.v, -this.pz.v);\r\n            } else {\r\n                mat.translate(this.px.v, this.py.v, 0);\r\n            }\r\n        } else {\r\n            mat.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);\r\n        }\r\n    }\r\n    function processKeys(forceRender){\r\n        if (this.elem.globalData.frameId === this.frameId) {\r\n            return;\r\n        }\r\n\r\n        this._mdf = false;\r\n        var i, len = this.dynamicProperties.length;\r\n\r\n        for(i = 0; i < len; i += 1) {\r\n            this.dynamicProperties[i].getValue();\r\n            if (this.dynamicProperties[i]._mdf) {\r\n                this._mdf = true;\r\n            }\r\n        }\r\n\r\n        if (this._mdf || forceRender) {\r\n            this.v.reset();\r\n            if (this.a) {\r\n                this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n            }\r\n            if(this.s) {\r\n                this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n            }\r\n            if (this.sk) {\r\n                this.v.skewFromAxis(-this.sk.v, this.sa.v);\r\n            }\r\n            if (this.r) {\r\n                this.v.rotate(-this.r.v);\r\n            } else {\r\n                this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n            }\r\n            if (this.autoOriented && this.p.keyframes && this.p.getValueAtTime) {\r\n                var v1,v2;\r\n                if (this.p._caching.lastFrame+this.p.offsetTime <= this.p.keyframes[0].t) {\r\n                    v1 = this.p.getValueAtTime((this.p.keyframes[0].t + 0.01) / this.elem.globalData.frameRate,0);\r\n                    v2 = this.p.getValueAtTime(this.p.keyframes[0].t / this.elem.globalData.frameRate, 0);\r\n                } else if(this.p._caching.lastFrame+this.p.offsetTime >= this.p.keyframes[this.p.keyframes.length - 1].t) {\r\n                    v1 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t / this.elem.globalData.frameRate), 0);\r\n                    v2 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t - 0.01) / this.elem.globalData.frameRate, 0);\r\n                } else {\r\n                    v1 = this.p.pv;\r\n                    v2 = this.p.getValueAtTime((this.p._caching.lastFrame+this.p.offsetTime - 0.01) / this.elem.globalData.frameRate, this.p.offsetTime);\r\n                }\r\n                this.v.rotate(-Math.atan2(v1[1] - v2[1], v1[0] - v2[0]));\r\n            }\r\n            if(this.data.p.s){\r\n                if(this.data.p.z) {\r\n                    this.v.translate(this.px.v, this.py.v, -this.pz.v);\r\n                } else {\r\n                    this.v.translate(this.px.v, this.py.v, 0);\r\n                }\r\n            }else{\r\n                this.v.translate(this.p.v[0],this.p.v[1],-this.p.v[2]);\r\n            }\r\n        }\r\n        this.frameId = this.elem.globalData.frameId;\r\n    }\r\n\r\n    function setInverted(){\r\n        this.inverted = true;\r\n        this.iv = new Matrix();\r\n        if(!this.k){\r\n            if(this.data.p.s){\r\n                this.iv.translate(this.px.v,this.py.v,-this.pz.v);\r\n            }else{\r\n                this.iv.translate(this.p.v[0],this.p.v[1],-this.p.v[2]);\r\n            }\r\n            if(this.r){\r\n                this.iv.rotate(-this.r.v);\r\n            }else{\r\n                this.iv.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v);\r\n            }\r\n            if(this.s){\r\n                this.iv.scale(this.s.v[0],this.s.v[1],1);\r\n            }\r\n            if(this.a){\r\n                this.iv.translate(-this.a.v[0],-this.a.v[1],this.a.v[2]);\r\n            }\r\n        }\r\n    }\r\n\r\n    function autoOrient(){\r\n        //\r\n        //var prevP = this.getValueAtTime();\r\n    }\r\n\r\n    function TransformProperty(elem,data,arr){\r\n        this.elem = elem;\r\n        this.frameId = -1;\r\n        this.propType = 'transform';\r\n        this.dynamicProperties = [];\r\n        this._mdf = false;\r\n        this.data = data;\r\n        this.v = new Matrix();\r\n        if(data.p.s){\r\n            this.px = PropertyFactory.getProp(elem,data.p.x,0,0,this.dynamicProperties);\r\n            this.py = PropertyFactory.getProp(elem,data.p.y,0,0,this.dynamicProperties);\r\n            if(data.p.z){\r\n                this.pz = PropertyFactory.getProp(elem,data.p.z,0,0,this.dynamicProperties);\r\n            }\r\n        }else{\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this.dynamicProperties);\r\n        }\r\n        if(data.r) {\r\n            this.r = PropertyFactory.getProp(elem, data.r, 0, degToRads, this.dynamicProperties);\r\n        } else if(data.rx) {\r\n            this.rx = PropertyFactory.getProp(elem, data.rx, 0, degToRads, this.dynamicProperties);\r\n            this.ry = PropertyFactory.getProp(elem, data.ry, 0, degToRads, this.dynamicProperties);\r\n            this.rz = PropertyFactory.getProp(elem, data.rz, 0, degToRads, this.dynamicProperties);\r\n            if(data.or.k[0].ti) {\r\n                var i, len = data.or.k.length;\r\n                for(i=0;i<len;i+=1) {\r\n                    data.or.k[i].to = data.or.k[i].ti = null;\r\n                }\r\n            }\r\n            this.or = PropertyFactory.getProp(elem, data.or, 1, degToRads, this.dynamicProperties);\r\n            //sh Indicates it needs to be capped between -180 and 180\r\n            this.or.sh = true;\r\n        }\r\n        if(data.sk){\r\n            this.sk = PropertyFactory.getProp(elem, data.sk, 0, degToRads, this.dynamicProperties);\r\n            this.sa = PropertyFactory.getProp(elem, data.sa, 0, degToRads, this.dynamicProperties);\r\n        }\r\n        if(data.a) {\r\n            this.a = PropertyFactory.getProp(elem,data.a,1,0,this.dynamicProperties);\r\n        }\r\n        if(data.s) {\r\n            this.s = PropertyFactory.getProp(elem,data.s,1,0.01,this.dynamicProperties);\r\n        }\r\n        // Opacity is not part of the transform properties, that's why it won't use this.dynamicProperties. That way transforms won't get updated if opacity changes.\r\n        if(data.o){\r\n            this.o = PropertyFactory.getProp(elem,data.o,0,0.01,arr);\r\n        } else {\r\n            this.o = {_mdf:false,v:1};\r\n        }\r\n        if(this.dynamicProperties.length){\r\n            arr.push(this);\r\n        }else{\r\n            this.getValue(true);\r\n        }\r\n    }\r\n\r\n    TransformProperty.prototype.applyToMatrix = applyToMatrix;\r\n    TransformProperty.prototype.getValue = processKeys;\r\n    TransformProperty.prototype.setInverted = setInverted;\r\n    TransformProperty.prototype.autoOrient = autoOrient;\r\n\r\n    function getTransformProperty(elem,data,arr){\r\n        return new TransformProperty(elem,data,arr);\r\n    }\r\n\r\n    return {\r\n        getTransformProperty: getTransformProperty\r\n    };\r\n\r\n}());\r\nfunction ShapePath(){\r\n\tthis.c = false;\r\n\tthis._length = 0;\r\n\tthis._maxLength = 8;\r\n\tthis.v = createSizedArray(this._maxLength);\r\n\tthis.o = createSizedArray(this._maxLength);\r\n\tthis.i = createSizedArray(this._maxLength);\r\n}\r\n\r\nShapePath.prototype.setPathData = function(closed, len) {\r\n\tthis.c = closed;\r\n\tthis.setLength(len);\r\n\tvar i = 0;\r\n\twhile(i < len){\r\n\t\tthis.v[i] = point_pool.newElement();\r\n\t\tthis.o[i] = point_pool.newElement();\r\n\t\tthis.i[i] = point_pool.newElement();\r\n\t\ti += 1;\r\n\t}\r\n};\r\n\r\nShapePath.prototype.setLength = function(len) {\r\n\twhile(this._maxLength < len) {\r\n\t\tthis.doubleArrayLength();\r\n\t}\r\n\tthis._length = len;\r\n};\r\n\r\nShapePath.prototype.doubleArrayLength = function() {\r\n\tthis.v = this.v.concat(createSizedArray(this._maxLength));\r\n\tthis.i = this.i.concat(createSizedArray(this._maxLength));\r\n\tthis.o = this.o.concat(createSizedArray(this._maxLength));\r\n\tthis._maxLength *= 2;\r\n};\r\n\r\nShapePath.prototype.setXYAt = function(x, y, type, pos, replace) {\r\n\tvar arr;\r\n\tthis._length = Math.max(this._length, pos + 1);\r\n\tif(this._length >= this._maxLength) {\r\n\t\tthis.doubleArrayLength();\r\n\t}\r\n\tswitch(type){\r\n\t\tcase 'v':\r\n\t\t\tarr = this.v;\r\n\t\t\tbreak;\r\n\t\tcase 'i':\r\n\t\t\tarr = this.i;\r\n\t\t\tbreak;\r\n\t\tcase 'o':\r\n\t\t\tarr = this.o;\r\n\t\t\tbreak;\r\n\t}\r\n\tif(!arr[pos] || (arr[pos] && !replace)){\r\n\t\tarr[pos] = point_pool.newElement();\r\n\t}\r\n\tarr[pos][0] = x;\r\n\tarr[pos][1] = y;\r\n};\r\n\r\nShapePath.prototype.setTripleAt = function(vX,vY,oX,oY,iX,iY,pos, replace) {\r\n\tthis.setXYAt(vX,vY,'v',pos, replace);\r\n\tthis.setXYAt(oX,oY,'o',pos, replace);\r\n\tthis.setXYAt(iX,iY,'i',pos, replace);\r\n};\r\n\r\nShapePath.prototype.reverse = function() {\r\n\tvar newPath = new ShapePath();\r\n\tnewPath.setPathData(this.c, this._length);\r\n\tvar vertices = this.v, outPoints = this.o, inPoints = this.i;\r\n\tvar init = 0;\r\n\tif (this.c) {\r\n\t\tnewPath.setTripleAt(vertices[0][0], vertices[0][1], inPoints[0][0], inPoints[0][1], outPoints[0][0], outPoints[0][1], 0, false);\r\n        init = 1;\r\n    }\r\n    var cnt = this._length - 1;\r\n    var len = this._length;\r\n\r\n    for (i = init; i < len; i += 1) {\r\n    \tnewPath.setTripleAt(vertices[cnt][0], vertices[cnt][1], inPoints[cnt][0], inPoints[cnt][1], outPoints[cnt][0], outPoints[cnt][1], i, false);\r\n        cnt -= 1;\r\n    }\r\n    return newPath;\r\n};\r\nvar ShapePropertyFactory = (function(){\r\n\r\n    var initFrame = -999999;\r\n\r\n    function interpolateShape(frameNum, previousValue, isCurrentRender, caching) {\r\n        var iterationIndex = caching.lastIndex;\r\n        var keyPropS,keyPropE,isHold, j, k, jLen, kLen, perc, vertexValue, hasModified = false;\r\n        if(frameNum < this.keyframes[0].t-this.offsetTime){\r\n            keyPropS = this.keyframes[0].s[0];\r\n            isHold = true;\r\n            iterationIndex = 0;\r\n        }else if(frameNum >= this.keyframes[this.keyframes.length - 1].t-this.offsetTime){\r\n            if(this.keyframes[this.keyframes.length - 2].h === 1){\r\n                keyPropS = this.keyframes[this.keyframes.length - 1].s[0];\r\n            }else{\r\n                keyPropS = this.keyframes[this.keyframes.length - 2].e[0];\r\n            }\r\n            isHold = true;\r\n        }else{\r\n            var i = iterationIndex;\r\n            var len = this.keyframes.length- 1,flag = true,keyData,nextKeyData;\r\n            while(flag){\r\n                keyData = this.keyframes[i];\r\n                nextKeyData = this.keyframes[i+1];\r\n                if((nextKeyData.t - this.offsetTime) > frameNum){\r\n                    break;\r\n                }\r\n                if(i < len - 1){\r\n                    i += 1;\r\n                }else{\r\n                    flag = false;\r\n                }\r\n            }\r\n            isHold = keyData.h === 1;\r\n            iterationIndex = i;\r\n            if(!isHold){\r\n                if(frameNum >= nextKeyData.t-this.offsetTime){\r\n                    perc = 1;\r\n                }else if(frameNum < keyData.t-this.offsetTime){\r\n                    perc = 0;\r\n                }else{\r\n                    var fnc;\r\n                    if(keyData.__fnct){\r\n                        fnc = keyData.__fnct;\r\n                    }else{\r\n                        fnc = BezierFactory.getBezierEasing(keyData.o.x,keyData.o.y,keyData.i.x,keyData.i.y).get;\r\n                        keyData.__fnct = fnc;\r\n                    }\r\n                    perc = fnc((frameNum-(keyData.t-this.offsetTime))/((nextKeyData.t-this.offsetTime)-(keyData.t-this.offsetTime)));\r\n                }\r\n                keyPropE = keyData.e[0];\r\n            }\r\n            keyPropS = keyData.s[0];\r\n        }\r\n        jLen = previousValue._length;\r\n        kLen = keyPropS.i[0].length;\r\n        caching.lastIndex = iterationIndex;\r\n\r\n        for(j=0;j<jLen;j+=1){\r\n            for(k=0;k<kLen;k+=1){\r\n                vertexValue = isHold ? keyPropS.i[j][k] :  keyPropS.i[j][k]+(keyPropE.i[j][k]-keyPropS.i[j][k])*perc;\r\n                if(previousValue.i[j][k] !== vertexValue){\r\n                    previousValue.i[j][k] = vertexValue;\r\n                    if(isCurrentRender) {\r\n                        this.pv.i[j][k] = vertexValue;\r\n                    }\r\n                    hasModified = true;\r\n                }\r\n                vertexValue = isHold ? keyPropS.o[j][k] :  keyPropS.o[j][k]+(keyPropE.o[j][k]-keyPropS.o[j][k])*perc;\r\n                if(previousValue.o[j][k] !== vertexValue){\r\n                    previousValue.o[j][k] = vertexValue;\r\n                    if(isCurrentRender) {\r\n                        this.pv.o[j][k] = vertexValue;\r\n                    }\r\n                    hasModified = true;\r\n                }\r\n                vertexValue = isHold ? keyPropS.v[j][k] :  keyPropS.v[j][k]+(keyPropE.v[j][k]-keyPropS.v[j][k])*perc;\r\n                if(previousValue.v[j][k] !== vertexValue){\r\n                    previousValue.v[j][k] = vertexValue;\r\n                    if(isCurrentRender) {\r\n                        this.pv.v[j][k] = vertexValue;\r\n                    }\r\n                    hasModified = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return hasModified;\r\n    }\r\n\r\n    function interpolateShapeCurrentTime(){\r\n        if(this.elem.globalData.frameId === this.frameId){\r\n            return;\r\n        }\r\n        this._mdf = false;\r\n        var frameNum = this.comp.renderedFrame - this.offsetTime;\r\n        var initTime = this.keyframes[0].t - this.offsetTime;\r\n        var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;\r\n        var lastFrame = this._caching.lastFrame;\r\n        if(!(lastFrame !== initFrame && ((lastFrame < initTime && frameNum < initTime) || (lastFrame > endTime && frameNum > endTime)))){\r\n            ////\r\n            this._caching.lastIndex = lastFrame < frameNum ? this._caching.lastIndex : 0;\r\n            var hasModified = this.interpolateShape(frameNum, this.v, true, this._caching);\r\n            ////\r\n            this._mdf = hasModified;\r\n            if(hasModified) {\r\n                this.paths = this.localShapeCollection;\r\n            }\r\n        }\r\n        this._caching.lastFrame = frameNum;\r\n        this.frameId = this.elem.globalData.frameId;\r\n    }\r\n\r\n    function getShapeValue(){\r\n        return this.v;\r\n    }\r\n\r\n    function resetShape(){\r\n        this.paths = this.localShapeCollection;\r\n        if(!this.k){\r\n            this._mdf = false;\r\n        }\r\n    }\r\n\r\n    function ShapeProperty(elem, data, type){\r\n        this.propType = 'shape';\r\n        this.comp = elem.comp;\r\n        this.k = false;\r\n        this._mdf = false;\r\n        var pathData = type === 3 ? data.pt.k : data.ks.k;\r\n        this.v = shape_pool.clone(pathData);\r\n        this.pv = shape_pool.clone(this.v);\r\n        this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n        this.paths = this.localShapeCollection;\r\n        this.paths.addShape(this.v);\r\n        this.reset = resetShape;\r\n    }\r\n    ShapeProperty.prototype.interpolateShape = interpolateShape;\r\n    ShapeProperty.prototype.getValue = getShapeValue;\r\n\r\n    function KeyframedShapeProperty(elem,data,type){\r\n        this.propType = 'shape';\r\n        this.comp = elem.comp;\r\n        this.elem = elem;\r\n        this.offsetTime = elem.data.st;\r\n        this.keyframes = type === 3 ? data.pt.k : data.ks.k;\r\n        this.k = true;\r\n        this.kf = true;\r\n        var i, len = this.keyframes[0].s[0].i.length;\r\n        var jLen = this.keyframes[0].s[0].i[0].length;\r\n        this.v = shape_pool.newElement();\r\n        this.v.setPathData(this.keyframes[0].s[0].c, len);\r\n        this.pv = shape_pool.clone(this.v);\r\n        this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n        this.paths = this.localShapeCollection;\r\n        this.paths.addShape(this.v);\r\n        this.lastFrame = initFrame;\r\n        this.reset = resetShape;\r\n        this._caching = {lastFrame: initFrame, lastIndex: 0};\r\n    }\r\n    KeyframedShapeProperty.prototype.getValue = interpolateShapeCurrentTime;\r\n    KeyframedShapeProperty.prototype.interpolateShape = interpolateShape;\r\n\r\n    var EllShapeProperty = (function(){\r\n\r\n        var cPoint = roundCorner;\r\n\r\n        function convertEllToPath(){\r\n            var p0 = this.p.v[0], p1 = this.p.v[1], s0 = this.s.v[0]/2, s1 = this.s.v[1]/2;\r\n            var _cw = this.d !== 3;\r\n            var _v = this.v;\r\n            if(this.d !== 3){\r\n                _v.v[0][0] = p0;\r\n                _v.v[0][1] = p1 - s1;\r\n                _v.v[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n                _v.v[1][1] = p1;\r\n                _v.v[2][0] = p0;\r\n                _v.v[2][1] = p1 + s1;\r\n                _v.v[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n                _v.v[3][1] = p1;\r\n                _v.i[0][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;\r\n                _v.i[0][1] = p1 - s1;\r\n                _v.i[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n                _v.i[1][1] = p1 - s1 * cPoint;\r\n                _v.i[2][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;\r\n                _v.i[2][1] = p1 + s1;\r\n                _v.i[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n                _v.i[3][1] = p1 + s1 * cPoint;\r\n                _v.o[0][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;\r\n                _v.o[0][1] = p1 - s1;\r\n                _v.o[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n                _v.o[1][1] = p1 + s1 * cPoint;\r\n                _v.o[2][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;\r\n                _v.o[2][1] = p1 + s1;\r\n                _v.o[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n                _v.o[3][1] = p1 - s1 * cPoint;\r\n            }\r\n        }\r\n\r\n        function processKeys(frameNum){\r\n            var i, len = this.dynamicProperties.length;\r\n            if(this.elem.globalData.frameId === this.frameId){\r\n                return;\r\n            }\r\n            this._mdf = false;\r\n            this.frameId = this.elem.globalData.frameId;\r\n\r\n            for(i=0;i<len;i+=1){\r\n                this.dynamicProperties[i].getValue(frameNum);\r\n                if(this.dynamicProperties[i]._mdf){\r\n                    this._mdf = true;\r\n                }\r\n            }\r\n            if(this._mdf){\r\n                this.convertEllToPath();\r\n            }\r\n        }\r\n\r\n        return function EllShapeProperty(elem,data) {\r\n            /*this.v = {\r\n                v: createSizedArray(4),\r\n                i: createSizedArray(4),\r\n                o: createSizedArray(4),\r\n                c: true\r\n            };*/\r\n            this.v = shape_pool.newElement();\r\n            this.v.setPathData(true, 4);\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.paths = this.localShapeCollection;\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.d = data.d;\r\n            this.dynamicProperties = [];\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.frameId = -1;\r\n            this._mdf = false;\r\n            this.getValue = processKeys;\r\n            this.convertEllToPath = convertEllToPath;\r\n            this.reset = resetShape;\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this.dynamicProperties);\r\n            this.s = PropertyFactory.getProp(elem,data.s,1,0,this.dynamicProperties);\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.convertEllToPath();\r\n            }\r\n        };\r\n    }());\r\n\r\n    var StarShapeProperty = (function() {\r\n\r\n        function convertPolygonToPath(){\r\n            var numPts = Math.floor(this.pt.v);\r\n            var angle = Math.PI*2/numPts;\r\n            /*this.v.v.length = numPts;\r\n            this.v.i.length = numPts;\r\n            this.v.o.length = numPts;*/\r\n            var rad = this.or.v;\r\n            var roundness = this.os.v;\r\n            var perimSegment = 2*Math.PI*rad/(numPts*4);\r\n            var i, currentAng = -Math.PI/ 2;\r\n            var dir = this.data.d === 3 ? -1 : 1;\r\n            currentAng += this.r.v;\r\n            this.v._length = 0;\r\n            for(i=0;i<numPts;i+=1){\r\n                var x = rad * Math.cos(currentAng);\r\n                var y = rad * Math.sin(currentAng);\r\n                var ox = x === 0 && y === 0 ? 0 : y/Math.sqrt(x*x + y*y);\r\n                var oy = x === 0 && y === 0 ? 0 : -x/Math.sqrt(x*x + y*y);\r\n                x +=  + this.p.v[0];\r\n                y +=  + this.p.v[1];\r\n                this.v.setTripleAt(x,y,x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir,x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir, i, true);\r\n                /*this.v.v[i] = [x,y];\r\n                this.v.i[i] = [x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir];\r\n                this.v.o[i] = [x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir];*/\r\n                currentAng += angle*dir;\r\n            }\r\n            this.paths.length = 0;\r\n            this.paths[0] = this.v;\r\n        }\r\n\r\n        function convertStarToPath() {\r\n            var numPts = Math.floor(this.pt.v)*2;\r\n            var angle = Math.PI*2/numPts;\r\n            /*this.v.v.length = numPts;\r\n            this.v.i.length = numPts;\r\n            this.v.o.length = numPts;*/\r\n            var longFlag = true;\r\n            var longRad = this.or.v;\r\n            var shortRad = this.ir.v;\r\n            var longRound = this.os.v;\r\n            var shortRound = this.is.v;\r\n            var longPerimSegment = 2*Math.PI*longRad/(numPts*2);\r\n            var shortPerimSegment = 2*Math.PI*shortRad/(numPts*2);\r\n            var i, rad,roundness,perimSegment, currentAng = -Math.PI/ 2;\r\n            currentAng += this.r.v;\r\n            var dir = this.data.d === 3 ? -1 : 1;\r\n            this.v._length = 0;\r\n            for(i=0;i<numPts;i+=1){\r\n                rad = longFlag ? longRad : shortRad;\r\n                roundness = longFlag ? longRound : shortRound;\r\n                perimSegment = longFlag ? longPerimSegment : shortPerimSegment;\r\n                var x = rad * Math.cos(currentAng);\r\n                var y = rad * Math.sin(currentAng);\r\n                var ox = x === 0 && y === 0 ? 0 : y/Math.sqrt(x*x + y*y);\r\n                var oy = x === 0 && y === 0 ? 0 : -x/Math.sqrt(x*x + y*y);\r\n                x +=  + this.p.v[0];\r\n                y +=  + this.p.v[1];\r\n                this.v.setTripleAt(x,y,x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir,x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir, i, true);\r\n\r\n                /*this.v.v[i] = [x,y];\r\n                this.v.i[i] = [x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir];\r\n                this.v.o[i] = [x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir];\r\n                this.v._length = numPts;*/\r\n                longFlag = !longFlag;\r\n                currentAng += angle*dir;\r\n            }\r\n        }\r\n\r\n        function processKeys() {\r\n            if(this.elem.globalData.frameId === this.frameId){\r\n                return;\r\n            }\r\n            this._mdf = false;\r\n            this.frameId = this.elem.globalData.frameId;\r\n            var i, len = this.dynamicProperties.length;\r\n\r\n            for(i=0;i<len;i+=1){\r\n                this.dynamicProperties[i].getValue();\r\n                if(this.dynamicProperties[i]._mdf){\r\n                    this._mdf = true;\r\n                }\r\n            }\r\n            if(this._mdf){\r\n                this.convertToPath();\r\n            }\r\n        }\r\n\r\n        return function StarShapeProperty(elem,data) {\r\n            /*this.v = {\r\n                v: [],\r\n                i: [],\r\n                o: [],\r\n                c: true\r\n            };*/\r\n            this.v = shape_pool.newElement();\r\n            this.v.setPathData(true, 0);\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.data = data;\r\n            this.frameId = -1;\r\n            this.d = data.d;\r\n            this.dynamicProperties = [];\r\n            this._mdf = false;\r\n            this.getValue = processKeys;\r\n            this.reset = resetShape;\r\n            if(data.sy === 1){\r\n                this.ir = PropertyFactory.getProp(elem,data.ir,0,0,this.dynamicProperties);\r\n                this.is = PropertyFactory.getProp(elem,data.is,0,0.01,this.dynamicProperties);\r\n                this.convertToPath = convertStarToPath;\r\n            } else {\r\n                this.convertToPath = convertPolygonToPath;\r\n            }\r\n            this.pt = PropertyFactory.getProp(elem,data.pt,0,0,this.dynamicProperties);\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this.dynamicProperties);\r\n            this.r = PropertyFactory.getProp(elem,data.r,0,degToRads,this.dynamicProperties);\r\n            this.or = PropertyFactory.getProp(elem,data.or,0,0,this.dynamicProperties);\r\n            this.os = PropertyFactory.getProp(elem,data.os,0,0.01,this.dynamicProperties);\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.paths = this.localShapeCollection;\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.convertToPath();\r\n            }\r\n        };\r\n    }());\r\n\r\n    var RectShapeProperty = (function() {\r\n        function processKeys(frameNum){\r\n            if(this.elem.globalData.frameId === this.frameId){\r\n                return;\r\n            }\r\n            this._mdf = false;\r\n            this.frameId = this.elem.globalData.frameId;\r\n            var i, len = this.dynamicProperties.length;\r\n\r\n            for(i=0;i<len;i+=1){\r\n                this.dynamicProperties[i].getValue(frameNum);\r\n                if(this.dynamicProperties[i]._mdf){\r\n                    this._mdf = true;\r\n                }\r\n            }\r\n            if(this._mdf){\r\n                this.convertRectToPath();\r\n            }\r\n\r\n        }\r\n\r\n        function convertRectToPath(){\r\n            var p0 = this.p.v[0], p1 = this.p.v[1], v0 = this.s.v[0]/2, v1 = this.s.v[1]/2;\r\n            var round = bm_min(v0,v1,this.r.v);\r\n            var cPoint = round*(1-roundCorner);\r\n            this.v._length = 0;\r\n\r\n            if(this.d === 2 || this.d === 1) {\r\n                this.v.setTripleAt(p0+v0, p1-v1+round,p0+v0, p1-v1+round,p0+v0,p1-v1+cPoint,0, true);\r\n                this.v.setTripleAt(p0+v0, p1+v1-round,p0+v0, p1+v1-cPoint,p0+v0, p1+v1-round,1, true);\r\n                if(round!== 0){\r\n                    this.v.setTripleAt(p0+v0-round, p1+v1,p0+v0-round,p1+v1,p0+v0-cPoint,p1+v1,2, true);\r\n                    this.v.setTripleAt(p0-v0+round,p1+v1,p0-v0+cPoint,p1+v1,p0-v0+round,p1+v1,3, true);\r\n                    this.v.setTripleAt(p0-v0,p1+v1-round,p0-v0,p1+v1-round,p0-v0,p1+v1-cPoint,4, true);\r\n                    this.v.setTripleAt(p0-v0,p1-v1+round,p0-v0,p1-v1+cPoint,p0-v0,p1-v1+round,5, true);\r\n                    this.v.setTripleAt(p0-v0+round,p1-v1,p0-v0+round,p1-v1,p0-v0+cPoint,p1-v1,6, true);\r\n                    this.v.setTripleAt(p0+v0-round,p1-v1,p0+v0-cPoint,p1-v1,p0+v0-round,p1-v1,7, true);\r\n                } else {\r\n                    this.v.setTripleAt(p0-v0,p1+v1,p0-v0+cPoint,p1+v1,p0-v0,p1+v1,2);\r\n                    this.v.setTripleAt(p0-v0,p1-v1,p0-v0,p1-v1+cPoint,p0-v0,p1-v1,3);\r\n                }\r\n            }else{\r\n                this.v.setTripleAt(p0+v0,p1-v1+round,p0+v0,p1-v1+cPoint,p0+v0,p1-v1+round,0, true);\r\n                if(round!== 0){\r\n                    this.v.setTripleAt(p0+v0-round,p1-v1,p0+v0-round,p1-v1,p0+v0-cPoint,p1-v1,1, true);\r\n                    this.v.setTripleAt(p0-v0+round,p1-v1,p0-v0+cPoint,p1-v1,p0-v0+round,p1-v1,2, true);\r\n                    this.v.setTripleAt(p0-v0,p1-v1+round,p0-v0,p1-v1+round,p0-v0,p1-v1+cPoint,3, true);\r\n                    this.v.setTripleAt(p0-v0,p1+v1-round,p0-v0,p1+v1-cPoint,p0-v0,p1+v1-round,4, true);\r\n                    this.v.setTripleAt(p0-v0+round,p1+v1,p0-v0+round,p1+v1,p0-v0+cPoint,p1+v1,5, true);\r\n                    this.v.setTripleAt(p0+v0-round,p1+v1,p0+v0-cPoint,p1+v1,p0+v0-round,p1+v1,6, true);\r\n                    this.v.setTripleAt(p0+v0,p1+v1-round,p0+v0,p1+v1-round,p0+v0,p1+v1-cPoint,7, true);\r\n                } else {\r\n                    this.v.setTripleAt(p0-v0,p1-v1,p0-v0+cPoint,p1-v1,p0-v0,p1-v1,1, true);\r\n                    this.v.setTripleAt(p0-v0,p1+v1,p0-v0,p1+v1-cPoint,p0-v0,p1+v1,2, true);\r\n                    this.v.setTripleAt(p0+v0,p1+v1,p0+v0-cPoint,p1+v1,p0+v0,p1+v1,3, true);\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        return function RectShapeProperty(elem,data) {\r\n            this.v = shape_pool.newElement();\r\n            this.v.c = true;\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.paths = this.localShapeCollection;\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.frameId = -1;\r\n            this.d = data.d;\r\n            this.dynamicProperties = [];\r\n            this._mdf = false;\r\n            this.getValue = processKeys;\r\n            this.convertRectToPath = convertRectToPath;\r\n            this.reset = resetShape;\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this.dynamicProperties);\r\n            this.s = PropertyFactory.getProp(elem,data.s,1,0,this.dynamicProperties);\r\n            this.r = PropertyFactory.getProp(elem,data.r,0,0,this.dynamicProperties);\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.convertRectToPath();\r\n            }\r\n        };\r\n    }());\r\n\r\n    function getShapeProp(elem,data,type, arr){\r\n        var prop;\r\n        if(type === 3 || type === 4){\r\n            var dataProp = type === 3 ? data.pt : data.ks;\r\n            var keys = dataProp.k;\r\n            if(dataProp.a === 1 || keys.length){\r\n                prop = new KeyframedShapeProperty(elem, data, type);\r\n            }else{\r\n                prop = new ShapeProperty(elem, data, type);\r\n            }\r\n        }else if(type === 5){\r\n            prop = new RectShapeProperty(elem, data);\r\n        }else if(type === 6){\r\n            prop = new EllShapeProperty(elem, data);\r\n        }else if(type === 7){\r\n            prop = new StarShapeProperty(elem, data);\r\n        }\r\n        if(prop.k){\r\n            arr.push(prop);\r\n        }\r\n        return prop;\r\n    }\r\n\r\n    function getConstructorFunction() {\r\n        return ShapeProperty;\r\n    }\r\n\r\n    function getKeyframedConstructorFunction() {\r\n        return KeyframedShapeProperty;\r\n    }\r\n\r\n    var ob = {};\r\n    ob.getShapeProp = getShapeProp;\r\n    ob.getConstructorFunction = getConstructorFunction;\r\n    ob.getKeyframedConstructorFunction = getKeyframedConstructorFunction;\r\n    return ob;\r\n}());\r\nvar ShapeModifiers = (function(){\r\n    var ob = {};\r\n    var modifiers = {};\r\n    ob.registerModifier = registerModifier;\r\n    ob.getModifier = getModifier;\r\n\r\n    function registerModifier(nm,factory){\r\n        if(!modifiers[nm]){\r\n            modifiers[nm] = factory;\r\n        }\r\n    }\r\n\r\n    function getModifier(nm,elem, data, dynamicProperties){\r\n        return new modifiers[nm](elem, data, dynamicProperties);\r\n    }\r\n\r\n    return ob;\r\n}());\r\n\r\nfunction ShapeModifier(){}\r\nShapeModifier.prototype.initModifierProperties = function(){};\r\nShapeModifier.prototype.addShapeToModifier = function(){};\r\nShapeModifier.prototype.addShape = function(data){\r\n    if(!this.closed){\r\n        var shapeData = {shape:data.sh, data: data, localShapeCollection:shapeCollection_pool.newShapeCollection()};\r\n        this.shapes.push(shapeData);\r\n        this.addShapeToModifier(shapeData);\r\n    }\r\n};\r\nShapeModifier.prototype.init = function(elem,data,dynamicProperties){\r\n    this.dynamicProperties = [];\r\n    this.shapes = [];\r\n    this.elem = elem;\r\n    this.initModifierProperties(elem,data);\r\n    this.frameId = initialDefaultFrame;\r\n    this._mdf = false;\r\n    this.closed = false;\r\n    this.k = false;\r\n    if(this.dynamicProperties.length){\r\n        this.k = true;\r\n        dynamicProperties.push(this);\r\n    }else{\r\n        this.getValue(true);\r\n    }\r\n};\r\nShapeModifier.prototype.processKeys = function(){\r\n    if(this.elem.globalData.frameId === this.frameId){\r\n        return;\r\n    }\r\n    this._mdf = false;\r\n    var i, len = this.dynamicProperties.length;\r\n\r\n    for(i=0;i<len;i+=1){\r\n        this.dynamicProperties[i].getValue();\r\n        if(this.dynamicProperties[i]._mdf){\r\n            this._mdf = true;\r\n        }\r\n    }\r\n    this.frameId = this.elem.globalData.frameId;\r\n};\r\nfunction TrimModifier(){\r\n}\r\nextendPrototype([ShapeModifier], TrimModifier);\r\nTrimModifier.prototype.initModifierProperties = function(elem, data) {\r\n    this.s = PropertyFactory.getProp(elem, data.s, 0, 0.01, this.dynamicProperties);\r\n    this.e = PropertyFactory.getProp(elem, data.e, 0, 0.01, this.dynamicProperties);\r\n    this.o = PropertyFactory.getProp(elem, data.o, 0, 0, this.dynamicProperties);\r\n    this.sValue = 0;\r\n    this.eValue = 0;\r\n    this.getValue = this.processKeys;\r\n    this.m = data.m;\r\n};\r\n\r\nTrimModifier.prototype.addShapeToModifier = function(shapeData){\r\n    shapeData.pathsData = [];\r\n};\r\n\r\nTrimModifier.prototype.calculateShapeEdges = function(s, e, shapeLength, addedLength, totalModifierLength) {\r\n    var segments = [];\r\n    if (e <= 1) {\r\n        segments.push({\r\n            s: s,\r\n            e: e\r\n        });\r\n    } else if (s >= 1) {\r\n        segments.push({\r\n            s: s - 1,\r\n            e: e - 1\r\n        });\r\n    } else {\r\n        segments.push({\r\n            s: s,\r\n            e: 1\r\n        });\r\n        segments.push({\r\n            s: 0,\r\n            e: e - 1\r\n        });\r\n    }\r\n    var shapeSegments = [];\r\n    var i, len = segments.length, segmentOb;\r\n    for (i = 0; i < len; i += 1) {\r\n        segmentOb = segments[i];\r\n        if (segmentOb.e * totalModifierLength < addedLength || segmentOb.s * totalModifierLength > addedLength + shapeLength) {\r\n            \r\n        } else {\r\n            var shapeS, shapeE;\r\n            if (segmentOb.s * totalModifierLength <= addedLength) {\r\n                shapeS = 0;\r\n            } else {\r\n                shapeS = (segmentOb.s * totalModifierLength - addedLength) / shapeLength;\r\n            }\r\n            if(segmentOb.e * totalModifierLength >= addedLength + shapeLength) {\r\n                shapeE = 1;\r\n            } else {\r\n                shapeE = ((segmentOb.e * totalModifierLength - addedLength) / shapeLength);\r\n            }\r\n            shapeSegments.push([shapeS, shapeE]);\r\n        }\r\n    }\r\n    if (!shapeSegments.length) {\r\n        shapeSegments.push([0, 0]);\r\n    }\r\n    return shapeSegments;\r\n};\r\n\r\nTrimModifier.prototype.releasePathsData = function(pathsData) {\r\n    var i, len = pathsData.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        segments_length_pool.release(pathsData[i]);\r\n    }\r\n    pathsData.length = 0;\r\n    return pathsData;\r\n};\r\n\r\nTrimModifier.prototype.processShapes = function(_isFirstFrame) {\r\n    var s, e;\r\n    if (this._mdf || _isFirstFrame) {\r\n        var o = (this.o.v % 360) / 360;\r\n        if (o < 0) {\r\n            o += 1;\r\n        }\r\n        s = this.s.v + o;\r\n        e = this.e.v + o;\r\n        if (s === e) {\r\n\r\n        }\r\n        if (s > e) {\r\n            var _s = s;\r\n            s = e;\r\n            e = _s;\r\n        }\r\n        this.sValue = s;\r\n        this.eValue = e;\r\n    } else {\r\n        s = this.sValue;\r\n        e = this.eValue;\r\n    }\r\n    var shapePaths;\r\n    var i, len = this.shapes.length, j, jLen;\r\n    var pathsData, pathData, totalShapeLength, totalModifierLength = 0;\r\n\r\n    if (e === s) {\r\n        for (i = 0; i < len; i += 1) {\r\n            this.shapes[i].localShapeCollection.releaseShapes();\r\n            this.shapes[i].shape._mdf = true;\r\n            this.shapes[i].shape.paths = this.shapes[i].localShapeCollection;\r\n        }\r\n    } else if (!((e === 1 && s === 0) || (e===0 && s === 1))){\r\n        var segments = [], shapeData, localShapeCollection;\r\n        for (i = 0; i < len; i += 1) {\r\n            shapeData = this.shapes[i];\r\n            // if shape hasn't changed and trim properties haven't changed, cached previous path can be used\r\n            if (!shapeData.shape._mdf && !this._mdf && !_isFirstFrame && this.m !== 2) {\r\n                shapeData.shape.paths = shapeData.localShapeCollection;\r\n            } else {\r\n                shapePaths = shapeData.shape.paths;\r\n                jLen = shapePaths._length;\r\n                totalShapeLength = 0;\r\n                if (!shapeData.shape._mdf && shapeData.pathsData.length) {\r\n                    totalShapeLength = shapeData.totalShapeLength;\r\n                } else {\r\n                    pathsData = this.releasePathsData(shapeData.pathsData);\r\n                    for (j = 0; j < jLen; j += 1) {\r\n                        pathData = bez.getSegmentsLength(shapePaths.shapes[j]);\r\n                        pathsData.push(pathData);\r\n                        totalShapeLength += pathData.totalLength;\r\n                    }\r\n                    shapeData.totalShapeLength = totalShapeLength;\r\n                    shapeData.pathsData = pathsData;\r\n                }\r\n\r\n                totalModifierLength += totalShapeLength;\r\n                shapeData.shape._mdf = true;\r\n            }\r\n        }\r\n        var shapeS = s, shapeE = e, addedLength = 0, edges;\r\n        for (i = len - 1; i >= 0; i -= 1) {\r\n            shapeData = this.shapes[i];\r\n            if (shapeData.shape._mdf) {\r\n                localShapeCollection = shapeData.localShapeCollection;\r\n                localShapeCollection.releaseShapes();\r\n                //if m === 2 means paths are trimmed individually so edges need to be found for this specific shape relative to whoel group\r\n                if (this.m === 2 && len > 1) {\r\n                    edges = this.calculateShapeEdges(s, e, shapeData.totalShapeLength, addedLength, totalModifierLength);\r\n                    addedLength += shapeData.totalShapeLength;\r\n                } else {\r\n                    edges = [[shapeS, shapeE]];\r\n                }\r\n                jLen = edges.length;\r\n                for (j = 0; j < jLen; j += 1) {\r\n                    shapeS = edges[j][0];\r\n                    shapeE = edges[j][1];\r\n                    segments.length = 0;\r\n                    if (shapeE <= 1) {\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * shapeS,\r\n                            e:shapeData.totalShapeLength * shapeE\r\n                        });\r\n                    } else if (shapeS >= 1) {\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * (shapeS - 1),\r\n                            e:shapeData.totalShapeLength * (shapeE - 1)\r\n                        });\r\n                    } else {\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * shapeS,\r\n                            e:shapeData.totalShapeLength\r\n                        });\r\n                        segments.push({\r\n                            s:0,\r\n                            e:shapeData.totalShapeLength * (shapeE - 1)\r\n                        });\r\n                    }\r\n                    var newShapesData = this.addShapes(shapeData,segments[0]);\r\n                    if (segments[0].s !== segments[0].e) {\r\n                        if (segments.length > 1) {\r\n                            if (shapeData.shape.v.c) {\r\n                                var lastShape = newShapesData.pop();\r\n                                this.addPaths(newShapesData, localShapeCollection);\r\n                                newShapesData = this.addShapes(shapeData, segments[1], lastShape);\r\n                            } else {\r\n                                this.addPaths(newShapesData, localShapeCollection);\r\n                                newShapesData = this.addShapes(shapeData, segments[1]);\r\n                            }\r\n                        } \r\n                        this.addPaths(newShapesData, localShapeCollection);\r\n                    }\r\n                    \r\n                }\r\n                shapeData.shape.paths = localShapeCollection;\r\n            }\r\n        }\r\n    } else if (this._mdf) {\r\n        for (i = 0; i < len; i += 1) {\r\n            this.shapes[i].shape._mdf = true;\r\n        }\r\n    }\r\n};\r\n\r\nTrimModifier.prototype.addPaths = function(newPaths, localShapeCollection) {\r\n    var i, len = newPaths.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        localShapeCollection.addShape(newPaths[i]);\r\n    }\r\n};\r\n\r\nTrimModifier.prototype.addSegment = function(pt1, pt2, pt3, pt4, shapePath, pos, newShape) {\r\n    shapePath.setXYAt(pt2[0], pt2[1], 'o', pos);\r\n    shapePath.setXYAt(pt3[0], pt3[1], 'i', pos + 1);\r\n    if(newShape){\r\n        shapePath.setXYAt(pt1[0], pt1[1], 'v', pos);\r\n    }\r\n    shapePath.setXYAt(pt4[0], pt4[1], 'v', pos + 1);\r\n};\r\n\r\nTrimModifier.prototype.addSegmentFromArray = function(points, shapePath, pos, newShape) {\r\n    shapePath.setXYAt(points[1], points[5], 'o', pos);\r\n    shapePath.setXYAt(points[2], points[6], 'i', pos + 1);\r\n    if(newShape){\r\n        shapePath.setXYAt(points[0], points[4], 'v', pos);\r\n    }\r\n    shapePath.setXYAt(points[3], points[7], 'v', pos + 1);\r\n};\r\n\r\nTrimModifier.prototype.addShapes = function(shapeData, shapeSegment, shapePath) {\r\n    var pathsData = shapeData.pathsData;\r\n    var shapePaths = shapeData.shape.paths.shapes;\r\n    var i, len = shapeData.shape.paths._length, j, jLen;\r\n    var addedLength = 0;\r\n    var currentLengthData,segmentCount;\r\n    var lengths;\r\n    var segment;\r\n    var shapes = [];\r\n    var initPos;\r\n    var newShape = true;\r\n    if (!shapePath) {\r\n        shapePath = shape_pool.newElement();\r\n        segmentCount = 0;\r\n        initPos = 0;\r\n    } else {\r\n        segmentCount = shapePath._length;\r\n        initPos = shapePath._length;\r\n    }\r\n    shapes.push(shapePath);\r\n    for (i = 0; i < len; i += 1) {\r\n        lengths = pathsData[i].lengths;\r\n        shapePath.c = shapePaths[i].c;\r\n        jLen = shapePaths[i].c ? lengths.length : lengths.length + 1;\r\n        for (j = 1; j < jLen; j +=1) {\r\n            currentLengthData = lengths[j-1];\r\n            if (addedLength + currentLengthData.addedLength < shapeSegment.s) {\r\n                addedLength += currentLengthData.addedLength;\r\n                shapePath.c = false;\r\n            } else if(addedLength > shapeSegment.e) {\r\n                shapePath.c = false;\r\n                break;\r\n            } else {\r\n                if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + currentLengthData.addedLength) {\r\n                    this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[j], shapePaths[i].v[j], shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                } else {\r\n                    segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[j], shapePaths[i].o[j - 1], shapePaths[i].i[j], (shapeSegment.s - addedLength)/currentLengthData.addedLength,(shapeSegment.e - addedLength)/currentLengthData.addedLength, lengths[j-1]);\r\n                    this.addSegmentFromArray(segment, shapePath, segmentCount, newShape);\r\n                    // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                    shapePath.c = false;\r\n                }\r\n                addedLength += currentLengthData.addedLength;\r\n                segmentCount += 1;\r\n            }\r\n        }\r\n        if (shapePaths[i].c) {\r\n            currentLengthData = lengths[j - 1];\r\n            if (addedLength <= shapeSegment.e) {\r\n                var segmentLength = lengths[j - 1].addedLength;\r\n                if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + segmentLength) {\r\n                    this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[0], shapePaths[i].v[0], shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                } else {\r\n                    segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[0], shapePaths[i].o[j - 1], shapePaths[i].i[0], (shapeSegment.s - addedLength) / segmentLength, (shapeSegment.e - addedLength) / segmentLength, lengths[j - 1]);\r\n                    this.addSegmentFromArray(segment, shapePath, segmentCount, newShape);\r\n                    // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                    shapePath.c = false;\r\n                }\r\n            } else {\r\n                shapePath.c = false;\r\n            }\r\n            addedLength += currentLengthData.addedLength;\r\n            segmentCount += 1;\r\n        }\r\n        if (shapePath._length) {\r\n            shapePath.setXYAt(shapePath.v[initPos][0], shapePath.v[initPos][1], 'i', initPos);\r\n            shapePath.setXYAt(shapePath.v[shapePath._length - 1][0], shapePath.v[shapePath._length - 1][1],'o', shapePath._length - 1);\r\n        }\r\n        if (addedLength > shapeSegment.e) {\r\n            break;\r\n        }\r\n        if (i < len - 1) {\r\n            shapePath = shape_pool.newElement();\r\n            newShape = true;\r\n            shapes.push(shapePath);\r\n            segmentCount = 0;\r\n        }\r\n    }\r\n    return shapes;\r\n};\r\n\r\n\r\nShapeModifiers.registerModifier('tm', TrimModifier);\r\nfunction RoundCornersModifier(){}\r\nextendPrototype([ShapeModifier],RoundCornersModifier);\r\nRoundCornersModifier.prototype.initModifierProperties = function(elem,data){\r\n    this.getValue = this.processKeys;\r\n    this.rd = PropertyFactory.getProp(elem,data.r,0,null,this.dynamicProperties);\r\n};\r\n\r\nRoundCornersModifier.prototype.processPath = function(path, round){\r\n    var cloned_path = shape_pool.newElement();\r\n    cloned_path.c = path.c;\r\n    var i, len = path._length;\r\n    var currentV,currentI,currentO,closerV, newV,newO,newI,distance,newPosPerc,index = 0;\r\n    var vX,vY,oX,oY,iX,iY;\r\n    for(i=0;i<len;i+=1){\r\n        currentV = path.v[i];\r\n        currentO = path.o[i];\r\n        currentI = path.i[i];\r\n        if(currentV[0]===currentO[0] && currentV[1]===currentO[1] && currentV[0]===currentI[0] && currentV[1]===currentI[1]){\r\n            if((i===0 || i === len - 1) && !path.c){\r\n                cloned_path.setTripleAt(currentV[0],currentV[1],currentO[0],currentO[1],currentI[0],currentI[1],index);\r\n                /*cloned_path.v[index] = currentV;\r\n                cloned_path.o[index] = currentO;\r\n                cloned_path.i[index] = currentI;*/\r\n                index += 1;\r\n            } else {\r\n                if(i===0){\r\n                    closerV = path.v[len-1];\r\n                } else {\r\n                    closerV = path.v[i-1];\r\n                }\r\n                distance = Math.sqrt(Math.pow(currentV[0]-closerV[0],2)+Math.pow(currentV[1]-closerV[1],2));\r\n                newPosPerc = distance ? Math.min(distance/2,round)/distance : 0;\r\n                vX = iX = currentV[0]+(closerV[0]-currentV[0])*newPosPerc;\r\n                vY = iY = currentV[1]-(currentV[1]-closerV[1])*newPosPerc;\r\n                oX = vX-(vX-currentV[0])*roundCorner;\r\n                oY = vY-(vY-currentV[1])*roundCorner;\r\n                cloned_path.setTripleAt(vX,vY,oX,oY,iX,iY,index);\r\n                index += 1;\r\n\r\n                if(i === len - 1){\r\n                    closerV = path.v[0];\r\n                } else {\r\n                    closerV = path.v[i+1];\r\n                }\r\n                distance = Math.sqrt(Math.pow(currentV[0]-closerV[0],2)+Math.pow(currentV[1]-closerV[1],2));\r\n                newPosPerc = distance ? Math.min(distance/2,round)/distance : 0;\r\n                vX = oX = currentV[0]+(closerV[0]-currentV[0])*newPosPerc;\r\n                vY = oY = currentV[1]+(closerV[1]-currentV[1])*newPosPerc;\r\n                iX = vX-(vX-currentV[0])*roundCorner;\r\n                iY = vY-(vY-currentV[1])*roundCorner;\r\n                cloned_path.setTripleAt(vX,vY,oX,oY,iX,iY,index);\r\n                index += 1;\r\n            }\r\n        } else {\r\n            cloned_path.setTripleAt(path.v[i][0],path.v[i][1],path.o[i][0],path.o[i][1],path.i[i][0],path.i[i][1],index);\r\n            index += 1;\r\n        }\r\n    }\r\n    return cloned_path;\r\n};\r\n\r\nRoundCornersModifier.prototype.processShapes = function(_isFirstFrame){\r\n    var shapePaths;\r\n    var i, len = this.shapes.length;\r\n    var j, jLen;\r\n    var rd = this.rd.v;\r\n\r\n    if(rd !== 0){\r\n        var shapeData, newPaths, localShapeCollection;\r\n        for(i=0;i<len;i+=1){\r\n            shapeData = this.shapes[i];\r\n            newPaths = shapeData.shape.paths;\r\n            localShapeCollection = shapeData.localShapeCollection;\r\n            if(!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)){\r\n                localShapeCollection.releaseShapes();\r\n                shapeData.shape._mdf = true;\r\n                shapePaths = shapeData.shape.paths.shapes;\r\n                jLen = shapeData.shape.paths._length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    localShapeCollection.addShape(this.processPath(shapePaths[j],rd));\r\n                }\r\n            }\r\n            shapeData.shape.paths = shapeData.localShapeCollection;\r\n        }\r\n\r\n    }\r\n    if(!this.dynamicProperties.length){\r\n        this._mdf = false;\r\n    }\r\n};\r\n\r\nShapeModifiers.registerModifier('rd',RoundCornersModifier);\r\nfunction RepeaterModifier(){}\r\nextendPrototype([ShapeModifier], RepeaterModifier);\r\n\r\nRepeaterModifier.prototype.initModifierProperties = function(elem,data){\r\n    this.getValue = this.processKeys;\r\n    this.c = PropertyFactory.getProp(elem,data.c,0,null,this.dynamicProperties);\r\n    this.o = PropertyFactory.getProp(elem,data.o,0,null,this.dynamicProperties);\r\n    this.tr = TransformPropertyFactory.getTransformProperty(elem,data.tr,this.dynamicProperties);\r\n    this.data = data;\r\n    if(!this.dynamicProperties.length){\r\n        this.getValue(true);\r\n    }\r\n    this.pMatrix = new Matrix();\r\n    this.rMatrix = new Matrix();\r\n    this.sMatrix = new Matrix();\r\n    this.tMatrix = new Matrix();\r\n    this.matrix = new Matrix();\r\n};\r\n\r\nRepeaterModifier.prototype.applyTransforms = function(pMatrix, rMatrix, sMatrix, transform, perc, inv){\r\n    var dir = inv ? -1 : 1;\r\n    var scaleX = transform.s.v[0] + (1 - transform.s.v[0]) * (1 - perc);\r\n    var scaleY = transform.s.v[1] + (1 - transform.s.v[1]) * (1 - perc);\r\n    pMatrix.translate(transform.p.v[0] * dir * perc, transform.p.v[1] * dir * perc, transform.p.v[2]);\r\n    rMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\r\n    rMatrix.rotate(-transform.r.v * dir * perc);\r\n    rMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\r\n    sMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\r\n    sMatrix.scale(inv ? 1/scaleX : scaleX, inv ? 1/scaleY : scaleY);\r\n    sMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\r\n};\r\n\r\nRepeaterModifier.prototype.init = function(elem, arr, pos, elemsData, dynamicProperties) {\r\n    this.elem = elem;\r\n    this.arr = arr;\r\n    this.pos = pos;\r\n    this.elemsData = elemsData;\r\n    this._currentCopies = 0;\r\n    this._elements = [];\r\n    this._groups = [];\r\n    this.dynamicProperties = [];\r\n    this.frameId = -1;\r\n    this.initModifierProperties(elem,arr[pos]);\r\n    var cont = 0;\r\n    while(pos>0){\r\n        pos -= 1;\r\n        //this._elements.unshift(arr.splice(pos,1)[0]);\r\n        this._elements.unshift(arr[pos]);\r\n        cont += 1;\r\n    }\r\n    if(this.dynamicProperties.length){\r\n        this.k = true;\r\n        dynamicProperties.push(this);\r\n    }else{\r\n        this.getValue(true);\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.resetElements = function(elements){\r\n    var i, len = elements.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        elements[i]._processed = false;\r\n        if(elements[i].ty === 'gr'){\r\n            this.resetElements(elements[i].it);\r\n        }\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.cloneElements = function(elements){\r\n    var i, len = elements.length;\r\n    var newElements = JSON.parse(JSON.stringify(elements));\r\n    this.resetElements(newElements);\r\n    return newElements;\r\n};\r\n\r\nRepeaterModifier.prototype.changeGroupRender = function(elements, renderFlag) {\r\n    var i, len = elements.length;\r\n    for(i = 0; i < len ; i += 1) {\r\n        elements[i]._render = renderFlag;\r\n        if(elements[i].ty === 'gr') {\r\n            this.changeGroupRender(elements[i].it, renderFlag);\r\n        }\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.processShapes = function(_isFirstFrame) {\r\n    var items, itemsTransform, i, dir, cont;\r\n    if(this._mdf || _isFirstFrame){\r\n        var copies = Math.ceil(this.c.v);\r\n        if(this._groups.length < copies){\r\n            while(this._groups.length < copies){\r\n                var group = {\r\n                    it:this.cloneElements(this._elements),\r\n                    ty:'gr'\r\n                };\r\n                group.it.push({\"a\":{\"a\":0,\"ix\":1,\"k\":[0,0]},\"nm\":\"Transform\",\"o\":{\"a\":0,\"ix\":7,\"k\":100},\"p\":{\"a\":0,\"ix\":2,\"k\":[0,0]},\"r\":{\"a\":0,\"ix\":6,\"k\":0},\"s\":{\"a\":0,\"ix\":3,\"k\":[100,100]},\"sa\":{\"a\":0,\"ix\":5,\"k\":0},\"sk\":{\"a\":0,\"ix\":4,\"k\":0},\"ty\":\"tr\"});\r\n                \r\n                this.arr.splice(0,0,group);\r\n                this._groups.splice(0,0,group);\r\n                this._currentCopies += 1;\r\n            }\r\n            this.elem.reloadShapes();\r\n        }\r\n        cont = 0;\r\n        var renderFlag;\r\n        for(i = 0; i  <= this._groups.length - 1; i += 1){\r\n            renderFlag = cont < copies;\r\n            this._groups[i]._render = renderFlag;\r\n            this.changeGroupRender(this._groups[i].it, renderFlag);\r\n            cont += 1;\r\n        }\r\n        \r\n        this._currentCopies = copies;\r\n        ////\r\n\r\n        var offset = this.o.v;\r\n        var offsetModulo = offset%1;\r\n        var roundOffset = offset > 0 ? Math.floor(offset) : Math.ceil(offset);\r\n        var k;\r\n        var tMat = this.tr.v.props;\r\n        var pProps = this.pMatrix.props;\r\n        var rProps = this.rMatrix.props;\r\n        var sProps = this.sMatrix.props;\r\n        this.pMatrix.reset();\r\n        this.rMatrix.reset();\r\n        this.sMatrix.reset();\r\n        this.tMatrix.reset();\r\n        this.matrix.reset();\r\n        var iteration = 0;\r\n\r\n        if(offset > 0) {\r\n            while(iteration<roundOffset){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\r\n                iteration += 1;\r\n            }\r\n            if(offsetModulo){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, offsetModulo, false);\r\n                iteration += offsetModulo;\r\n            }\r\n        } else if(offset < 0) {\r\n            while(iteration>roundOffset){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, true);\r\n                iteration -= 1;\r\n            }\r\n            if(offsetModulo){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, - offsetModulo, true);\r\n                iteration -= offsetModulo;\r\n            }\r\n        }\r\n        i = this.data.m === 1 ? 0 : this._currentCopies - 1;\r\n        dir = this.data.m === 1 ? 1 : -1;\r\n        cont = this._currentCopies;\r\n        var j, jLen;\r\n        while(cont){\r\n            items = this.elemsData[i].it;\r\n            itemsTransform = items[items.length - 1].transform.mProps.v.props;\r\n            jLen = itemsTransform.length;\r\n            items[items.length - 1].transform.mProps._mdf = true;\r\n            items[items.length - 1].transform.op._mdf = true;\r\n            if(iteration !== 0){\r\n                if((i !== 0 && dir === 1) || (i !== this._currentCopies - 1 && dir === -1)){\r\n                    this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\r\n                }\r\n                this.matrix.transform(rProps[0],rProps[1],rProps[2],rProps[3],rProps[4],rProps[5],rProps[6],rProps[7],rProps[8],rProps[9],rProps[10],rProps[11],rProps[12],rProps[13],rProps[14],rProps[15]);\r\n                this.matrix.transform(sProps[0],sProps[1],sProps[2],sProps[3],sProps[4],sProps[5],sProps[6],sProps[7],sProps[8],sProps[9],sProps[10],sProps[11],sProps[12],sProps[13],sProps[14],sProps[15]);\r\n                this.matrix.transform(pProps[0],pProps[1],pProps[2],pProps[3],pProps[4],pProps[5],pProps[6],pProps[7],pProps[8],pProps[9],pProps[10],pProps[11],pProps[12],pProps[13],pProps[14],pProps[15]);\r\n                \r\n                for(j=0;j<jLen;j+=1) {\r\n                    itemsTransform[j] = this.matrix.props[j];\r\n                }\r\n                this.matrix.reset();\r\n            } else {\r\n                this.matrix.reset();\r\n                for(j=0;j<jLen;j+=1) {\r\n                    itemsTransform[j] = this.matrix.props[j];\r\n                }\r\n            }\r\n            iteration += 1;\r\n            cont -= 1;\r\n            i += dir;\r\n        }\r\n    } else {\r\n        cont = this._currentCopies;\r\n        i = 0;\r\n        dir = 1;\r\n        while(cont){\r\n            items = this.elemsData[i].it;\r\n            itemsTransform = items[items.length - 1].transform.mProps.v.props;\r\n            items[items.length - 1].transform.mProps._mdf = false;\r\n            items[items.length - 1].transform.op._mdf = false;\r\n            cont -= 1;\r\n            i += dir;\r\n        }\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.addShape = function(){};\r\n\r\nShapeModifiers.registerModifier('rp',RepeaterModifier);\r\nfunction ShapeCollection(){\r\n\tthis._length = 0;\r\n\tthis._maxLength = 4;\r\n\tthis.shapes = createSizedArray(this._maxLength);\r\n}\r\n\r\nShapeCollection.prototype.addShape = function(shapeData){\r\n\tif(this._length === this._maxLength){\r\n\t\tthis.shapes = this.shapes.concat(createSizedArray(this._maxLength));\r\n\t\tthis._maxLength *= 2;\r\n\t}\r\n\tthis.shapes[this._length] = shapeData;\r\n\tthis._length += 1;\r\n};\r\n\r\nShapeCollection.prototype.releaseShapes = function(){\r\n\tvar i;\r\n\tfor(i = 0; i < this._length; i += 1) {\r\n\t\tshape_pool.release(this.shapes[i]);\r\n\t}\r\n\tthis._length = 0;\r\n};\r\nfunction DashProperty(elem, data, renderer, dynamicProperties) {\r\n    this.elem = elem;\r\n    this.frameId = -1;\r\n    this.dataProps = createSizedArray(data.length);\r\n    this.renderer = renderer;\r\n    this._mdf = false;\r\n    this.k = false;\r\n    this.dashStr = '';\r\n    this.dashArray = createTypedArray('float32',  data.length - 1);\r\n    this.dashoffset = createTypedArray('float32',  1);\r\n    var i, len = data.length, prop;\r\n    for(i=0;i<len;i+=1){\r\n        prop = PropertyFactory.getProp(elem,data[i].v,0, 0, dynamicProperties);\r\n        this.k = prop.k ? true : this.k;\r\n        this.dataProps[i] = {n:data[i].n,p:prop};\r\n    }\r\n    if(this.k){\r\n        dynamicProperties.push(this);\r\n    }else{\r\n        this.getValue(true);\r\n    }\r\n}\r\n\r\nDashProperty.prototype.getValue = function(forceRender) {\r\n    if(this.elem.globalData.frameId === this.frameId && !forceRender){\r\n        return;\r\n    }\r\n    var i = 0, len = this.dataProps.length;\r\n    this._mdf = false;\r\n    this.frameId = this.elem.globalData.frameId;\r\n    while(i<len){\r\n        if(this.dataProps[i].p._mdf){\r\n            this._mdf = !forceRender;\r\n            break;\r\n        }\r\n        i+=1;\r\n    }\r\n    if(this._mdf || forceRender){\r\n        if(this.renderer === 'svg') {\r\n            this.dashStr = '';\r\n        }\r\n        for(i=0;i<len;i+=1){\r\n            if(this.dataProps[i].n != 'o'){\r\n                if(this.renderer === 'svg') {\r\n                    this.dashStr += ' ' + this.dataProps[i].p.v;\r\n                }else{\r\n                    this.dashArray[i] = this.dataProps[i].p.v;\r\n                }\r\n            }else{\r\n                this.dashoffset[0] = this.dataProps[i].p.v;\r\n            }\r\n        }\r\n    }\r\n};\r\nfunction GradientProperty(elem,data,arr){\r\n    this.prop = PropertyFactory.getProp(elem,data.k,1,null,[]);\r\n    this.data = data;\r\n    this.k = this.prop.k;\r\n    this.c = createTypedArray('uint8c', data.p*4);\r\n    var cLength = data.k.k[0].s ? (data.k.k[0].s.length - data.p*4) : data.k.k.length - data.p*4;\r\n    this.o = createTypedArray('float32', cLength);\r\n    this._cmdf = false;\r\n    this._omdf = false;\r\n    this._collapsable = this.checkCollapsable();\r\n    this._hasOpacity = cLength;\r\n    this._mdf = false;\r\n    if(this.prop.k){\r\n        arr.push(this);\r\n    }\r\n    this.getValue(true);\r\n}\r\n\r\nGradientProperty.prototype.comparePoints = function(values, points) {\r\n    var i = 0, len = this.o.length/2, diff;\r\n    while(i < len) {\r\n        diff = Math.abs(values[i*4] - values[points*4 + i*2]);\r\n        if(diff > 0.01){\r\n            return false;\r\n        }\r\n        i += 1;\r\n    }\r\n    return true;\r\n};\r\n\r\nGradientProperty.prototype.checkCollapsable = function() {\r\n    if (this.o.length/2 !== this.c.length/4) {\r\n        return false;\r\n    }\r\n    if (this.data.k.k[0].s) {\r\n        var i = 0, len = this.data.k.k.length;\r\n        while (i < len) {\r\n            if (!this.comparePoints(this.data.k.k[i].s, this.data.p)) {\r\n                return false;\r\n            }\r\n            i += 1;\r\n        }\r\n    } else if(!this.comparePoints(this.data.k.k, this.data.p)) {\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\n\r\nGradientProperty.prototype.getValue = function(forceRender){\r\n    this.prop.getValue();\r\n    this._mdf = false;\r\n    this._cmdf = false;\r\n    this._omdf = false;\r\n    if(this.prop._mdf || forceRender){\r\n        var i, len = this.data.p*4;\r\n        var mult, val;\r\n        for(i=0;i<len;i+=1){\r\n            mult = i%4 === 0 ? 100 : 255;\r\n            val = Math.round(this.prop.v[i]*mult);\r\n            if(this.c[i] !== val){\r\n                this.c[i] = val;\r\n                this._cmdf = !forceRender;\r\n            }\r\n        }\r\n        if(this.o.length){\r\n            len = this.prop.v.length;\r\n            for(i=this.data.p*4;i<len;i+=1){\r\n                mult = i%2 === 0 ? 100 : 1;\r\n                val = i%2 === 0 ?  Math.round(this.prop.v[i]*100):this.prop.v[i];\r\n                if(this.o[i-this.data.p*4] !== val){\r\n                    this.o[i-this.data.p*4] = val;\r\n                    this._omdf = !forceRender;\r\n                }\r\n            }\r\n        }\r\n        this._mdf = !forceRender;\r\n    }\r\n};\r\nvar ImagePreloader = (function(){\r\n\r\n    function imageLoaded(){\r\n        this.loadedAssets += 1;\r\n        if(this.loadedAssets === this.totalImages){\r\n            if(this.imagesLoadedCb) {\r\n                this.imagesLoadedCb(null);\r\n            }\r\n        }\r\n    }\r\n\r\n    function getAssetsPath(assetData){\r\n        var path = '';\r\n        if(this.assetsPath){\r\n            var imagePath = assetData.p;\r\n            if(imagePath.indexOf('images/') !== -1){\r\n                imagePath = imagePath.split('/')[1];\r\n            }\r\n            path = this.assetsPath + imagePath;\r\n        } else {\r\n            path = this.path;\r\n            path += assetData.u ? assetData.u : '';\r\n            path += assetData.p;\r\n        }\r\n        return path;\r\n    }\r\n\r\n    function loadImage(path){\r\n        var img = createTag('img');\r\n        img.addEventListener('load', imageLoaded.bind(this), false);\r\n        img.addEventListener('error', imageLoaded.bind(this), false);\r\n        img.src = path;\r\n    }\r\n    function loadAssets(assets, cb){\r\n        this.imagesLoadedCb = cb;\r\n        this.totalAssets = assets.length;\r\n        var i;\r\n        for(i=0;i<this.totalAssets;i+=1){\r\n            if(!assets[i].layers){\r\n                loadImage.bind(this)(getAssetsPath.bind(this)(assets[i]));\r\n                this.totalImages += 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    function setPath(path){\r\n        this.path = path || '';\r\n    }\r\n\r\n    function setAssetsPath(path){\r\n        this.assetsPath = path || '';\r\n    }\r\n\r\n    function destroy() {\r\n        this.imagesLoadedCb = null;\r\n    }\r\n\r\n    return function ImagePreloader(){\r\n        this.loadAssets = loadAssets;\r\n        this.setAssetsPath = setAssetsPath;\r\n        this.setPath = setPath;\r\n        this.destroy = destroy;\r\n        this.assetsPath = '';\r\n        this.path = '';\r\n        this.totalAssets = 0;\r\n        this.totalImages = 0;\r\n        this.loadedAssets = 0;\r\n        this.imagesLoadedCb = null;\r\n    };\r\n}());\r\nvar featureSupport = (function(){\r\n\tvar ob = {\r\n\t\tmaskType: true\r\n\t};\r\n\tif (/MSIE 10/i.test(navigator.userAgent) || /MSIE 9/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /Edge\\/\\d./i.test(navigator.userAgent)) {\r\n\t   ob.maskType = false;\r\n\t}\r\n\treturn ob;\r\n}());\r\nvar filtersFactory = (function(){\r\n\tvar ob = {};\r\n\tob.createFilter = createFilter;\r\n\tob.createAlphaToLuminanceFilter = createAlphaToLuminanceFilter;\r\n\r\n\tfunction createFilter(filId){\r\n        \tvar fil = createNS('filter');\r\n        \tfil.setAttribute('id',filId);\r\n                fil.setAttribute('filterUnits','objectBoundingBox');\r\n                fil.setAttribute('x','0%');\r\n                fil.setAttribute('y','0%');\r\n                fil.setAttribute('width','100%');\r\n                fil.setAttribute('height','100%');\r\n                return fil;\r\n\t}\r\n\r\n\tfunction createAlphaToLuminanceFilter(){\r\n                var feColorMatrix = createNS('feColorMatrix');\r\n                feColorMatrix.setAttribute('type','matrix');\r\n                feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n                feColorMatrix.setAttribute('values','0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1');\r\n                return feColorMatrix;\r\n\t}\r\n\r\n\treturn ob;\r\n}());\r\nfunction TextAnimatorProperty(textData, renderType, elem){\r\n    this._mdf = false;\r\n    this._isFirstFrame = true;\r\n\tthis._hasMaskedPath = false;\r\n\tthis._frameId = -1;\r\n\tthis._dynamicProperties = [];\r\n\tthis._textData = textData;\r\n\tthis._renderType = renderType;\r\n\tthis._elem = elem;\r\n\tthis._animatorsData = createSizedArray(this._textData.a.length);\r\n\tthis._pathData = {};\r\n\tthis._moreOptions = {\r\n\t\talignment: {}\r\n\t};\r\n\tthis.renderedLetters = [];\r\n    this.lettersChangedFlag = false;\r\n\r\n}\r\n\r\nTextAnimatorProperty.prototype.searchProperties = function(dynamicProperties){\r\n    var i, len = this._textData.a.length, animatorProps;\r\n    var getProp = PropertyFactory.getProp;\r\n    for(i=0;i<len;i+=1){\r\n        animatorProps = this._textData.a[i];\r\n        this._animatorsData[i] = new TextAnimatorDataProperty(this._elem, animatorProps, this._dynamicProperties);\r\n    }\r\n    if(this._textData.p && 'm' in this._textData.p){\r\n        this._pathData = {\r\n            f: getProp(this._elem,this._textData.p.f,0,0,this._dynamicProperties),\r\n            l: getProp(this._elem,this._textData.p.l,0,0,this._dynamicProperties),\r\n            r: this._textData.p.r,\r\n            m: this._elem.maskManager.getMaskProperty(this._textData.p.m)\r\n        };\r\n        this._hasMaskedPath = true;\r\n    } else {\r\n        this._hasMaskedPath = false;\r\n    }\r\n    this._moreOptions.alignment = getProp(this._elem,this._textData.m.a,1,0,this._dynamicProperties);\r\n    if(this._dynamicProperties.length) {\r\n    \tdynamicProperties.push(this);\r\n    }\r\n};\r\n\r\nTextAnimatorProperty.prototype.getMeasures = function(documentData, lettersChangedFlag){\r\n    this.lettersChangedFlag = lettersChangedFlag;\r\n    if(!this._mdf && !this._isFirstFrame && !lettersChangedFlag && (!this._hasMaskedPath || !this._pathData.m._mdf)) {\r\n        return;\r\n    }\r\n    this._isFirstFrame = false;\r\n    var alignment = this._moreOptions.alignment.v;\r\n    var animators = this._animatorsData;\r\n    var textData = this._textData;\r\n    var matrixHelper = this.mHelper;\r\n    var renderType = this._renderType;\r\n    var renderedLettersCount = this.renderedLetters.length;\r\n    var data = this.data;\r\n    var xPos,yPos;\r\n    var i, len;\r\n    var letters = documentData.l, pathInfo, currentLength, currentPoint, segmentLength, flag, pointInd, segmentInd, prevPoint, points, segments, partialLength, totalLength, perc, tanAngle, mask;\r\n    if(this._hasMaskedPath) {\r\n        mask = this._pathData.m;\r\n        if(!this._pathData.n || this._pathData._mdf){\r\n            var paths = mask.v;\r\n            if(this._pathData.r){\r\n                paths = paths.reverse();\r\n            }\r\n            // TODO: release bezier data cached from previous pathInfo: this._pathData.pi\r\n            pathInfo = {\r\n                tLength: 0,\r\n                segments: []\r\n            };\r\n            len = paths._length - 1;\r\n            var pathData;\r\n            totalLength = 0;\r\n            for (i = 0; i < len; i += 1) {\r\n                pathData = {\r\n                    s: paths.v[i],\r\n                    e: paths.v[i + 1],\r\n                    to: [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]],\r\n                    ti: [paths.i[i + 1][0] - paths.v[i + 1][0], paths.i[i + 1][1] - paths.v[i + 1][1]]\r\n                };\r\n                bez.buildBezierData(pathData);\r\n                pathInfo.tLength += pathData.bezierData.segmentLength;\r\n                pathInfo.segments.push(pathData);\r\n                totalLength += pathData.bezierData.segmentLength;\r\n            }\r\n            i = len;\r\n            if (mask.v.c) {\r\n                pathData = {\r\n                    s: paths.v[i],\r\n                    e: paths.v[0],\r\n                    to: [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]],\r\n                    ti: [paths.i[0][0] - paths.v[0][0], paths.i[0][1] - paths.v[0][1]]\r\n                };\r\n                bez.buildBezierData(pathData);\r\n                pathInfo.tLength += pathData.bezierData.segmentLength;\r\n                pathInfo.segments.push(pathData);\r\n                totalLength += pathData.bezierData.segmentLength;\r\n            }\r\n            this._pathData.pi = pathInfo;\r\n        }\r\n        pathInfo = this._pathData.pi;\r\n\r\n        currentLength = this._pathData.f.v;\r\n        segmentInd = 0;\r\n        pointInd = 1;\r\n        segmentLength = 0;\r\n        flag = true;\r\n        segments = pathInfo.segments;\r\n        if (currentLength < 0 && mask.v.c) {\r\n            if (pathInfo.tLength < Math.abs(currentLength)) {\r\n                currentLength = -Math.abs(currentLength) % pathInfo.tLength;\r\n            }\r\n            segmentInd = segments.length - 1;\r\n            points = segments[segmentInd].bezierData.points;\r\n            pointInd = points.length - 1;\r\n            while (currentLength < 0) {\r\n                currentLength += points[pointInd].partialLength;\r\n                pointInd -= 1;\r\n                if (pointInd < 0) {\r\n                    segmentInd -= 1;\r\n                    points = segments[segmentInd].bezierData.points;\r\n                    pointInd = points.length - 1;\r\n                }\r\n            }\r\n\r\n        }\r\n        points = segments[segmentInd].bezierData.points;\r\n        prevPoint = points[pointInd - 1];\r\n        currentPoint = points[pointInd];\r\n        partialLength = currentPoint.partialLength;\r\n    }\r\n\r\n\r\n    len = letters.length;\r\n    xPos = 0;\r\n    yPos = 0;\r\n    var yOff = documentData.finalSize * 1.2 * 0.714;\r\n    var firstLine = true;\r\n    var animatorProps, animatorSelector;\r\n    var j, jLen;\r\n    var letterValue;\r\n\r\n    jLen = animators.length;\r\n    var lastLetter;\r\n\r\n    var mult, ind = -1, offf, xPathPos, yPathPos;\r\n    var initPathPos = currentLength,initSegmentInd = segmentInd, initPointInd = pointInd, currentLine = -1;\r\n    var elemOpacity;\r\n    var sc,sw,fc,k;\r\n    var lineLength = 0;\r\n    var letterSw,letterSc,letterFc,letterM = '',letterP = this.defaultPropsArray,letterO;\r\n    for( i = 0; i < len; i += 1) {\r\n        matrixHelper.reset();\r\n        elemOpacity = 1;\r\n        if(letters[i].n) {\r\n            xPos = 0;\r\n            yPos += documentData.yOffset;\r\n            yPos += firstLine ? 1 : 0;\r\n            currentLength = initPathPos ;\r\n            firstLine = false;\r\n            lineLength = 0;\r\n            if(this._hasMaskedPath) {\r\n                segmentInd = initSegmentInd;\r\n                pointInd = initPointInd;\r\n                points = segments[segmentInd].bezierData.points;\r\n                prevPoint = points[pointInd - 1];\r\n                currentPoint = points[pointInd];\r\n                partialLength = currentPoint.partialLength;\r\n                segmentLength = 0;\r\n            }\r\n            letterO = letterSw = letterFc = letterM = '';\r\n            letterP = this.defaultPropsArray;\r\n        }else{\r\n            if(this._hasMaskedPath) {\r\n                if(currentLine !== letters[i].line){\r\n                    switch(documentData.j){\r\n                        case 1:\r\n                            currentLength += totalLength - documentData.lineWidths[letters[i].line];\r\n                            break;\r\n                        case 2:\r\n                            currentLength += (totalLength - documentData.lineWidths[letters[i].line])/2;\r\n                            break;\r\n                    }\r\n                    currentLine = letters[i].line;\r\n                }\r\n                if (ind !== letters[i].ind) {\r\n                    if (letters[ind]) {\r\n                        currentLength += letters[ind].extra;\r\n                    }\r\n                    currentLength += letters[i].an / 2;\r\n                    ind = letters[i].ind;\r\n                }\r\n                currentLength += alignment[0] * letters[i].an / 200;\r\n                var animatorOffset = 0;\r\n                for (j = 0; j < jLen; j += 1) {\r\n                    animatorProps = animators[j].a;\r\n                    if (animatorProps.p.propType) {\r\n                        animatorSelector = animators[j].s;\r\n                        mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                        if(mult.length){\r\n                            animatorOffset += animatorProps.p.v[0] * mult[0];\r\n                        } else{\r\n                            animatorOffset += animatorProps.p.v[0] * mult;\r\n                        }\r\n\r\n                    }\r\n                    if (animatorProps.a.propType) {\r\n                        animatorSelector = animators[j].s;\r\n                        mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                        if(mult.length){\r\n                            animatorOffset += animatorProps.a.v[0] * mult[0];\r\n                        } else{\r\n                            animatorOffset += animatorProps.a.v[0] * mult;\r\n                        }\r\n\r\n                    }\r\n                }\r\n                flag = true;\r\n                while (flag) {\r\n                    if (segmentLength + partialLength >= currentLength + animatorOffset || !points) {\r\n                        perc = (currentLength + animatorOffset - segmentLength) / currentPoint.partialLength;\r\n                        xPathPos = prevPoint.point[0] + (currentPoint.point[0] - prevPoint.point[0]) * perc;\r\n                        yPathPos = prevPoint.point[1] + (currentPoint.point[1] - prevPoint.point[1]) * perc;\r\n                        matrixHelper.translate(-alignment[0]*letters[i].an/200, -(alignment[1] * yOff / 100));\r\n                        flag = false;\r\n                    } else if (points) {\r\n                        segmentLength += currentPoint.partialLength;\r\n                        pointInd += 1;\r\n                        if (pointInd >= points.length) {\r\n                            pointInd = 0;\r\n                            segmentInd += 1;\r\n                            if (!segments[segmentInd]) {\r\n                                if (mask.v.c) {\r\n                                    pointInd = 0;\r\n                                    segmentInd = 0;\r\n                                    points = segments[segmentInd].bezierData.points;\r\n                                } else {\r\n                                    segmentLength -= currentPoint.partialLength;\r\n                                    points = null;\r\n                                }\r\n                            } else {\r\n                                points = segments[segmentInd].bezierData.points;\r\n                            }\r\n                        }\r\n                        if (points) {\r\n                            prevPoint = currentPoint;\r\n                            currentPoint = points[pointInd];\r\n                            partialLength = currentPoint.partialLength;\r\n                        }\r\n                    }\r\n                }\r\n                offf = letters[i].an / 2 - letters[i].add;\r\n                matrixHelper.translate(-offf, 0, 0);\r\n            } else {\r\n                offf = letters[i].an/2 - letters[i].add;\r\n                matrixHelper.translate(-offf,0,0);\r\n\r\n                // Grouping alignment\r\n                matrixHelper.translate(-alignment[0]*letters[i].an/200, -alignment[1]*yOff/100, 0);\r\n            }\r\n\r\n            lineLength += letters[i].l/2;\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if (animatorProps.t.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    if(this._hasMaskedPath) {\r\n                        if(mult.length) {\r\n                            currentLength += animatorProps.t*mult[0];\r\n                        } else {\r\n                            currentLength += animatorProps.t*mult;\r\n                        }\r\n                    }else{\r\n                        if(mult.length) {\r\n                            xPos += animatorProps.t.v*mult[0];\r\n                        } else {\r\n                            xPos += animatorProps.t.v*mult;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            lineLength += letters[i].l/2;\r\n            if(documentData.strokeWidthAnim) {\r\n                sw = documentData.sw || 0;\r\n            }\r\n            if(documentData.strokeColorAnim) {\r\n                if(documentData.sc){\r\n                    sc = [documentData.sc[0], documentData.sc[1], documentData.sc[2]];\r\n                }else{\r\n                    sc = [0,0,0];\r\n                }\r\n            }\r\n            if(documentData.fillColorAnim && documentData.fc) {\r\n                fc = [documentData.fc[0], documentData.fc[1], documentData.fc[2]];\r\n            }\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if (animatorProps.a.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n\r\n                    if(mult.length){\r\n                        matrixHelper.translate(-animatorProps.a.v[0]*mult[0], -animatorProps.a.v[1]*mult[1], animatorProps.a.v[2]*mult[2]);\r\n                    } else {\r\n                        matrixHelper.translate(-animatorProps.a.v[0]*mult, -animatorProps.a.v[1]*mult, animatorProps.a.v[2]*mult);\r\n                    }\r\n                }\r\n            }\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if (animatorProps.s.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    if(mult.length){\r\n                        matrixHelper.scale(1+((animatorProps.s.v[0]-1)*mult[0]),1+((animatorProps.s.v[1]-1)*mult[1]),1);\r\n                    } else {\r\n                        matrixHelper.scale(1+((animatorProps.s.v[0]-1)*mult),1+((animatorProps.s.v[1]-1)*mult),1);\r\n                    }\r\n                }\r\n            }\r\n            for(j=0;j<jLen;j+=1) {\r\n                animatorProps = animators[j].a;\r\n                animatorSelector = animators[j].s;\r\n                mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                if (animatorProps.sk.propType) {\r\n                    if(mult.length) {\r\n                        matrixHelper.skewFromAxis(-animatorProps.sk.v * mult[0], animatorProps.sa.v * mult[1]);\r\n                    } else {\r\n                        matrixHelper.skewFromAxis(-animatorProps.sk.v * mult, animatorProps.sa.v * mult);\r\n                    }\r\n                }\r\n                if (animatorProps.r.propType) {\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateZ(-animatorProps.r.v * mult[2]);\r\n                    } else {\r\n                        matrixHelper.rotateZ(-animatorProps.r.v * mult);\r\n                    }\r\n                }\r\n                if (animatorProps.ry.propType) {\r\n\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateY(animatorProps.ry.v*mult[1]);\r\n                    }else{\r\n                        matrixHelper.rotateY(animatorProps.ry.v*mult);\r\n                    }\r\n                }\r\n                if (animatorProps.rx.propType) {\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateX(animatorProps.rx.v*mult[0]);\r\n                    } else {\r\n                        matrixHelper.rotateX(animatorProps.rx.v*mult);\r\n                    }\r\n                }\r\n                if (animatorProps.o.propType) {\r\n                    if(mult.length) {\r\n                        elemOpacity += ((animatorProps.o.v)*mult[0] - elemOpacity)*mult[0];\r\n                    } else {\r\n                        elemOpacity += ((animatorProps.o.v)*mult - elemOpacity)*mult;\r\n                    }\r\n                }\r\n                if (documentData.strokeWidthAnim && animatorProps.sw.propType) {\r\n                    if(mult.length) {\r\n                        sw += animatorProps.sw.v*mult[0];\r\n                    } else {\r\n                        sw += animatorProps.sw.v*mult;\r\n                    }\r\n                }\r\n                if (documentData.strokeColorAnim && animatorProps.sc.propType) {\r\n                    for(k=0;k<3;k+=1){\r\n                        if(mult.length) {\r\n                            sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k])*mult[0];\r\n                        } else {\r\n                            sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k])*mult;\r\n                        }\r\n                    }\r\n                }\r\n                if (documentData.fillColorAnim && documentData.fc) {\r\n                    if(animatorProps.fc.propType){\r\n                        for(k=0;k<3;k+=1){\r\n                            if(mult.length) {\r\n                                fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k])*mult[0];\r\n                            } else {\r\n                                fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k])*mult;\r\n                            }\r\n                        }\r\n                    }\r\n                    if(animatorProps.fh.propType){\r\n                        if(mult.length) {\r\n                            fc = addHueToRGB(fc,animatorProps.fh.v*mult[0]);\r\n                        } else {\r\n                            fc = addHueToRGB(fc,animatorProps.fh.v*mult);\r\n                        }\r\n                    }\r\n                    if(animatorProps.fs.propType){\r\n                        if(mult.length) {\r\n                            fc = addSaturationToRGB(fc,animatorProps.fs.v*mult[0]);\r\n                        } else {\r\n                            fc = addSaturationToRGB(fc,animatorProps.fs.v*mult);\r\n                        }\r\n                    }\r\n                    if(animatorProps.fb.propType){\r\n                        if(mult.length) {\r\n                            fc = addBrightnessToRGB(fc,animatorProps.fb.v*mult[0]);\r\n                        } else {\r\n                            fc = addBrightnessToRGB(fc,animatorProps.fb.v*mult);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n\r\n                if (animatorProps.p.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    if(this._hasMaskedPath) {\r\n                        if(mult.length) {\r\n                            matrixHelper.translate(0, animatorProps.p.v[1] * mult[0], -animatorProps.p.v[2] * mult[1]);\r\n                        } else {\r\n                            matrixHelper.translate(0, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\r\n                        }\r\n                    }else{\r\n                        if(mult.length) {\r\n                            matrixHelper.translate(animatorProps.p.v[0] * mult[0], animatorProps.p.v[1] * mult[1], -animatorProps.p.v[2] * mult[2]);\r\n                        } else {\r\n                            matrixHelper.translate(animatorProps.p.v[0] * mult, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(documentData.strokeWidthAnim){\r\n                letterSw = sw < 0 ? 0 : sw;\r\n            }\r\n            if(documentData.strokeColorAnim){\r\n                letterSc = 'rgb('+Math.round(sc[0]*255)+','+Math.round(sc[1]*255)+','+Math.round(sc[2]*255)+')';\r\n            }\r\n            if(documentData.fillColorAnim && documentData.fc){\r\n                letterFc = 'rgb('+Math.round(fc[0]*255)+','+Math.round(fc[1]*255)+','+Math.round(fc[2]*255)+')';\r\n            }\r\n\r\n            if(this._hasMaskedPath) {\r\n                matrixHelper.translate(0,-documentData.ls);\r\n\r\n                matrixHelper.translate(0, alignment[1]*yOff/100 + yPos,0);\r\n                if (textData.p.p) {\r\n                    tanAngle = (currentPoint.point[1] - prevPoint.point[1]) / (currentPoint.point[0] - prevPoint.point[0]);\r\n                    var rot = Math.atan(tanAngle) * 180 / Math.PI;\r\n                    if (currentPoint.point[0] < prevPoint.point[0]) {\r\n                        rot += 180;\r\n                    }\r\n                    matrixHelper.rotate(-rot * Math.PI / 180);\r\n                }\r\n                matrixHelper.translate(xPathPos, yPathPos, 0);\r\n                currentLength -= alignment[0]*letters[i].an/200;\r\n                if(letters[i+1] && ind !== letters[i+1].ind){\r\n                    currentLength += letters[i].an / 2;\r\n                    currentLength += documentData.tr/1000*documentData.finalSize;\r\n                }\r\n            }else{\r\n\r\n                matrixHelper.translate(xPos,yPos,0);\r\n\r\n                if(documentData.ps){\r\n                    //matrixHelper.translate(documentData.ps[0],documentData.ps[1],0);\r\n                    matrixHelper.translate(documentData.ps[0],documentData.ps[1] + documentData.ascent,0);\r\n                }\r\n                switch(documentData.j){\r\n                    case 1:\r\n                        matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]),0,0);\r\n                        break;\r\n                    case 2:\r\n                        matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line])/2,0,0);\r\n                        break;\r\n                }\r\n                matrixHelper.translate(0,-documentData.ls);\r\n                matrixHelper.translate(offf,0,0);\r\n                matrixHelper.translate(alignment[0]*letters[i].an/200,alignment[1]*yOff/100,0);\r\n                xPos += letters[i].l + documentData.tr/1000*documentData.finalSize;\r\n            }\r\n            if(renderType === 'html'){\r\n                letterM = matrixHelper.toCSS();\r\n            }else if(renderType === 'svg'){\r\n                letterM = matrixHelper.to2dCSS();\r\n            }else{\r\n                letterP = [matrixHelper.props[0],matrixHelper.props[1],matrixHelper.props[2],matrixHelper.props[3],matrixHelper.props[4],matrixHelper.props[5],matrixHelper.props[6],matrixHelper.props[7],matrixHelper.props[8],matrixHelper.props[9],matrixHelper.props[10],matrixHelper.props[11],matrixHelper.props[12],matrixHelper.props[13],matrixHelper.props[14],matrixHelper.props[15]];\r\n            }\r\n            letterO = elemOpacity;\r\n        }\r\n\r\n        if(renderedLettersCount <= i) {\r\n            letterValue = new LetterProps(letterO,letterSw,letterSc,letterFc,letterM,letterP);\r\n            this.renderedLetters.push(letterValue);\r\n            renderedLettersCount += 1;\r\n            this.lettersChangedFlag = true;\r\n        } else {\r\n            letterValue = this.renderedLetters[i];\r\n            this.lettersChangedFlag = letterValue.update(letterO, letterSw, letterSc, letterFc, letterM, letterP) || this.lettersChangedFlag;\r\n        }\r\n    }\r\n};\r\n\r\nTextAnimatorProperty.prototype.getValue = function(){\r\n\tif(this._elem.globalData.frameId === this._frameId){\r\n        return;\r\n    }\r\n    this._frameId = this._elem.globalData.frameId;\r\n\tvar i, len = this._dynamicProperties.length;\r\n    this._mdf = false;\r\n\tfor(i = 0; i < len; i += 1) {\r\n\t\tthis._dynamicProperties[i].getValue();\r\n        this._mdf = this._dynamicProperties[i]._mdf || this._mdf;\r\n\t}\r\n};\r\n\r\nTextAnimatorProperty.prototype.mHelper = new Matrix();\r\nTextAnimatorProperty.prototype.defaultPropsArray = [];\r\nfunction TextAnimatorDataProperty(elem, animatorProps, dynamicProperties) {\r\n\tvar defaultData = {propType:false};\r\n\tvar getProp = PropertyFactory.getProp;\r\n\tvar textAnimator_animatables = animatorProps.a;\r\n\tthis.a = {\r\n\t\tr: textAnimator_animatables.r ? getProp(elem, textAnimator_animatables.r, 0, degToRads, dynamicProperties) : defaultData,\r\n\t\trx: textAnimator_animatables.rx ? getProp(elem, textAnimator_animatables.rx, 0, degToRads, dynamicProperties) : defaultData,\r\n\t\try: textAnimator_animatables.ry ? getProp(elem, textAnimator_animatables.ry, 0, degToRads, dynamicProperties) : defaultData,\r\n\t\tsk: textAnimator_animatables.sk ? getProp(elem, textAnimator_animatables.sk, 0, degToRads, dynamicProperties) : defaultData,\r\n\t\tsa: textAnimator_animatables.sa ? getProp(elem, textAnimator_animatables.sa, 0, degToRads, dynamicProperties) : defaultData,\r\n\t\ts: textAnimator_animatables.s ? getProp(elem, textAnimator_animatables.s, 1, 0.01, dynamicProperties) : defaultData,\r\n\t\ta: textAnimator_animatables.a ? getProp(elem, textAnimator_animatables.a, 1, 0, dynamicProperties) : defaultData,\r\n\t\to: textAnimator_animatables.o ? getProp(elem, textAnimator_animatables.o, 0, 0.01, dynamicProperties) : defaultData,\r\n\t\tp: textAnimator_animatables.p ? getProp(elem,textAnimator_animatables.p, 1, 0, dynamicProperties) : defaultData,\r\n\t\tsw: textAnimator_animatables.sw ? getProp(elem, textAnimator_animatables.sw, 0, 0, dynamicProperties) : defaultData,\r\n\t\tsc: textAnimator_animatables.sc ? getProp(elem, textAnimator_animatables.sc, 1, 0, dynamicProperties) : defaultData,\r\n\t\tfc: textAnimator_animatables.fc ? getProp(elem, textAnimator_animatables.fc, 1, 0, dynamicProperties) : defaultData,\r\n\t\tfh: textAnimator_animatables.fh ? getProp(elem, textAnimator_animatables.fh, 0, 0, dynamicProperties) : defaultData,\r\n\t\tfs: textAnimator_animatables.fs ? getProp(elem, textAnimator_animatables.fs, 0, 0.01, dynamicProperties) : defaultData,\r\n\t\tfb: textAnimator_animatables.fb ? getProp(elem, textAnimator_animatables.fb, 0, 0.01, dynamicProperties) : defaultData,\r\n\t\tt: textAnimator_animatables.t ? getProp(elem, textAnimator_animatables.t, 0, 0, dynamicProperties) : defaultData\r\n\t};\r\n\r\n\tthis.s = TextSelectorProp.getTextSelectorProp(elem,animatorProps.s, dynamicProperties);\r\n    this.s.t = animatorProps.s.t;\r\n}\r\nfunction LetterProps(o, sw, sc, fc, m, p){\r\n    this.o = o;\r\n    this.sw = sw;\r\n    this.sc = sc;\r\n    this.fc = fc;\r\n    this.m = m;\r\n    this.p = p;\r\n    this._mdf = {\r\n    \to: true,\r\n    \tsw: !!sw,\r\n    \tsc: !!sc,\r\n    \tfc: !!fc,\r\n    \tm: true,\r\n    \tp: true\r\n    };\r\n}\r\n\r\nLetterProps.prototype.update = function(o, sw, sc, fc, m, p) {\r\n\tthis._mdf.o = false;\r\n\tthis._mdf.sw = false;\r\n\tthis._mdf.sc = false;\r\n\tthis._mdf.fc = false;\r\n\tthis._mdf.m = false;\r\n\tthis._mdf.p = false;\r\n\tvar updated = false;\r\n\r\n\tif(this.o !== o) {\r\n\t\tthis.o = o;\r\n\t\tthis._mdf.o = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.sw !== sw) {\r\n\t\tthis.sw = sw;\r\n\t\tthis._mdf.sw = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.sc !== sc) {\r\n\t\tthis.sc = sc;\r\n\t\tthis._mdf.sc = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.fc !== fc) {\r\n\t\tthis.fc = fc;\r\n\t\tthis._mdf.fc = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.m !== m) {\r\n\t\tthis.m = m;\r\n\t\tthis._mdf.m = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(p.length && (this.p[0] !== p[0] || this.p[1] !== p[1] || this.p[4] !== p[4] || this.p[5] !== p[5] || this.p[12] !== p[12] || this.p[13] !== p[13])) {\r\n\t\tthis.p = p;\r\n\t\tthis._mdf.p = true;\r\n\t\tupdated = true;\r\n\t}\r\n\treturn updated;\r\n};\r\nfunction TextProperty(elem, data, dynamicProperties){\r\n\tthis._frameId = initialDefaultFrame;\r\n\tthis.pv = '';\r\n\tthis.v = '';\r\n\tthis.kf = false;\r\n\tthis._isFirstFrame = true;\r\n\tthis._mdf = true;\r\n\tthis.data = data;\r\n\tthis.elem = elem;\r\n\tthis.keysIndex = -1;\r\n    this.canResize = false;\r\n    this.minimumFontSize = 1;\r\n\tthis.currentData = {\r\n\t\tascent: 0,\r\n        boxWidth: [0,0],\r\n        f: '',\r\n        fStyle: '',\r\n        fWeight: '',\r\n        fc: '',\r\n        j: '',\r\n        justifyOffset: '',\r\n        l: [],\r\n        lh: 0,\r\n        lineWidths: [],\r\n        ls: '',\r\n        of: '',\r\n        s: '',\r\n        sc: '',\r\n        sw: 0,\r\n        t: 0,\r\n        tr: 0,\r\n        sz:0,\r\n        ps:[0,0],\r\n        fillColorAnim: false,\r\n        strokeColorAnim: false,\r\n        strokeWidthAnim: false,\r\n        yOffset: 0,\r\n        __complete: false,\r\n        finalSize:0,\r\n        finalText:[],\r\n        finalLineHeight: 0\r\n\r\n\t};\r\n\tif(this.searchProperty()) {\r\n\t\tdynamicProperties.push(this);\r\n\t} else {\r\n\t\tthis.getValue(true);\r\n\t}\r\n}\r\n\r\nTextProperty.prototype.setCurrentData = function(data){\r\n\t\tvar currentData = this.currentData;\r\n        currentData.ascent = data.ascent;\r\n        currentData.boxWidth = data.boxWidth ? data.boxWidth : currentData.boxWidth;\r\n        currentData.f = data.f;\r\n        currentData.fStyle = data.fStyle;\r\n        currentData.fWeight = data.fWeight;\r\n        currentData.fc = data.fc;\r\n        currentData.j = data.j;\r\n        currentData.justifyOffset = data.justifyOffset;\r\n        currentData.l = data.l;\r\n        currentData.lh = data.lh;\r\n        currentData.lineWidths = data.lineWidths;\r\n        currentData.ls = data.ls;\r\n        currentData.of = data.of;\r\n        currentData.s = data.s;\r\n        currentData.sc = data.sc;\r\n        currentData.sw = data.sw;\r\n        currentData.sz = data.sz;\r\n        currentData.ps = data.ps;\r\n        currentData.t = data.t;\r\n        currentData.tr = data.tr;\r\n        currentData.fillColorAnim = data.fillColorAnim || currentData.fillColorAnim;\r\n        currentData.strokeColorAnim = data.strokeColorAnim || currentData.strokeColorAnim;\r\n        currentData.strokeWidthAnim = data.strokeWidthAnim || currentData.strokeWidthAnim;\r\n        currentData.yOffset = data.yOffset;\r\n        currentData.finalSize = data.finalSize;\r\n        currentData.finalLineHeight = data.finalLineHeight;\r\n        currentData.finalText = data.finalText;\r\n        currentData.__complete = false;\r\n};\r\n\r\nTextProperty.prototype.searchProperty = function() {\r\n\tthis.kf = this.data.d.k.length > 1;\r\n\treturn this.kf;\r\n};\r\n\r\nTextProperty.prototype.getValue = function(_forceRender) {\r\n\tthis._mdf = false;\r\n\tvar frameId = this.elem.globalData.frameId;\r\n\tif((frameId === this._frameId || !this.kf) && !this._isFirstFrame && !_forceRender) {\r\n\t\treturn;\r\n\t}\r\n    var textKeys = this.data.d.k, textDocumentData;\r\n    var frameNum = this.elem.comp.renderedFrame;\r\n    var i = 0, len = textKeys.length;\r\n    while(i <= len - 1) {\r\n        textDocumentData = textKeys[i].s;\r\n        if(i === len - 1 || textKeys[i+1].t > frameNum){\r\n            break;\r\n        }\r\n        i += 1;\r\n    }\r\n    if(this.keysIndex !== i) {\r\n    \tif(!textDocumentData.__complete) {\r\n            this.completeTextData(textDocumentData);\r\n        }\r\n        this.setCurrentData(textDocumentData);\r\n        this._mdf = !this._isFirstFrame;\r\n        this.pv = this.v = this.currentData.t;\r\n        this.keysIndex = i;\r\n    }\r\n\tthis._frameId = frameId;\r\n};\r\n\r\nTextProperty.prototype.buildFinalText = function(text) {\r\n    var combinedCharacters = FontManager.getCombinedCharacterCodes();\r\n    var charactersArray = [];\r\n    var i = 0, len = text.length;\r\n    while (i < len) {\r\n        if (combinedCharacters.indexOf(text.charCodeAt(i)) !== -1) {\r\n            charactersArray[charactersArray.length - 1] += text.charAt(i);\r\n        } else {\r\n            charactersArray.push(text.charAt(i));\r\n        }\r\n        i += 1;\r\n    }\r\n    return charactersArray;\r\n}\r\n\r\nTextProperty.prototype.completeTextData = function(documentData) {\r\n    documentData.__complete = true;\r\n    var fontManager = this.elem.globalData.fontManager;\r\n    var data = this.data;\r\n    var letters = [];\r\n    var i, len;\r\n    var newLineFlag, index = 0, val;\r\n    var anchorGrouping = data.m.g;\r\n    var currentSize = 0, currentPos = 0, currentLine = 0, lineWidths = [];\r\n    var lineWidth = 0;\r\n    var maxLineWidth = 0;\r\n    var j, jLen;\r\n    var fontData = fontManager.getFontByName(documentData.f);\r\n    var charData, cLength = 0;\r\n    var styles = fontData.fStyle.split(' ');\r\n\r\n    var fWeight = 'normal', fStyle = 'normal';\r\n    len = styles.length;\r\n    var styleName;\r\n    for(i=0;i<len;i+=1){\r\n        styleName = styles[i].toLowerCase();\r\n        switch(styleName) {\r\n            case 'italic':\r\n            fStyle = 'italic';\r\n            break;\r\n            case 'bold':\r\n            fWeight = '700';\r\n            break;\r\n            case 'black':\r\n            fWeight = '900';\r\n            break;\r\n            case 'medium':\r\n            fWeight = '500';\r\n            break;\r\n            case 'regular':\r\n            case 'normal':\r\n            fWeight = '400';\r\n            break;\r\n            case 'light':\r\n            case 'thin':\r\n            fWeight = '200';\r\n            break;\r\n        }\r\n    }\r\n    documentData.fWeight = fontData.fWeight || fWeight;\r\n    documentData.fStyle = fStyle;\r\n    len = documentData.t.length;\r\n    documentData.finalSize = documentData.s;\r\n    documentData.finalText = this.buildFinalText(documentData.t);\r\n    documentData.finalLineHeight = documentData.lh;\r\n    var trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n    if(documentData.sz){\r\n        var flag = true;\r\n        var boxWidth = documentData.sz[0];\r\n        var boxHeight = documentData.sz[1];\r\n        var currentHeight, finalText;\r\n        while(flag) {\r\n            finalText = this.buildFinalText(documentData.t);\r\n            currentHeight = 0;\r\n            lineWidth = 0;\r\n            len = finalText.length;\r\n            trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n            var lastSpaceIndex = -1;\r\n            for(i=0;i<len;i+=1){\r\n                newLineFlag = false;\r\n                if(finalText[i] === ' '){\r\n                    lastSpaceIndex = i;\r\n                }else if(finalText[i].charCodeAt(0) === 13){\r\n                    lineWidth = 0;\r\n                    newLineFlag = true;\r\n                    currentHeight += documentData.finalLineHeight || documentData.finalSize*1.2;\r\n                }\r\n                if(fontManager.chars){\r\n                    charData = fontManager.getCharData(finalText[i], fontData.fStyle, fontData.fFamily);\r\n                    cLength = newLineFlag ? 0 : charData.w*documentData.finalSize/100;\r\n                }else{\r\n                    //tCanvasHelper.font = documentData.s + 'px '+ fontData.fFamily;\r\n                    cLength = fontManager.measureText(finalText[i], documentData.f, documentData.finalSize);\r\n                }\r\n                if(lineWidth + cLength > boxWidth && finalText[i] !== ' '){\r\n                    if(lastSpaceIndex === -1){\r\n                        len += 1;\r\n                    } else {\r\n                        i = lastSpaceIndex;\r\n                    }\r\n                    currentHeight += documentData.finalLineHeight || documentData.finalSize*1.2;\r\n                    finalText.splice(i, lastSpaceIndex === i ? 1 : 0,\"\\r\");\r\n                    //finalText = finalText.substr(0,i) + \"\\r\" + finalText.substr(i === lastSpaceIndex ? i + 1 : i);\r\n                    lastSpaceIndex = -1;\r\n                    lineWidth = 0;\r\n                }else {\r\n                    lineWidth += cLength;\r\n                    lineWidth += trackingOffset;\r\n                }\r\n            }\r\n            currentHeight += fontData.ascent*documentData.finalSize/100;\r\n            if(this.canResize && documentData.finalSize > this.minimumFontSize && boxHeight < currentHeight) {\r\n                documentData.finalSize -= 1;\r\n                documentData.finalLineHeight = documentData.finalSize * documentData.lh / documentData.s;\r\n            } else {\r\n                documentData.finalText = finalText;\r\n                len = documentData.finalText.length;\r\n                flag = false;\r\n            }\r\n        }\r\n\r\n    }\r\n    lineWidth = - trackingOffset;\r\n    cLength = 0;\r\n    var uncollapsedSpaces = 0;\r\n    var currentChar;\r\n    for (i = 0;i < len ;i += 1) {\r\n        newLineFlag = false;\r\n        currentChar = documentData.finalText[i];\r\n        if(currentChar === ' '){\r\n            val = '\\u00A0';\r\n        }else if(currentChar.charCodeAt(0) === 13){\r\n            uncollapsedSpaces = 0;\r\n            lineWidths.push(lineWidth);\r\n            maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\r\n            lineWidth = - 2 * trackingOffset;\r\n            val = '';\r\n            newLineFlag = true;\r\n            currentLine += 1;\r\n        }else{\r\n            val = documentData.finalText[i];\r\n        }\r\n        if(fontManager.chars){\r\n            charData = fontManager.getCharData(currentChar, fontData.fStyle, fontManager.getFontByName(documentData.f).fFamily);\r\n            cLength = newLineFlag ? 0 : charData.w*documentData.finalSize/100;\r\n        }else{\r\n            //var charWidth = fontManager.measureText(val, documentData.f, documentData.finalSize);\r\n            //tCanvasHelper.font = documentData.finalSize + 'px '+ fontManager.getFontByName(documentData.f).fFamily;\r\n            cLength = fontManager.measureText(val, documentData.f, documentData.finalSize);\r\n        }\r\n\r\n        //\r\n        if(currentChar === ' '){\r\n            uncollapsedSpaces += cLength + trackingOffset;\r\n        } else {\r\n            lineWidth += cLength + trackingOffset + uncollapsedSpaces;\r\n            uncollapsedSpaces = 0;\r\n        }\r\n        letters.push({l:cLength,an:cLength,add:currentSize,n:newLineFlag, anIndexes:[], val: val, line: currentLine});\r\n        if(anchorGrouping == 2){\r\n            currentSize += cLength;\r\n            if(val === '' || val === '\\u00A0' || i === len - 1){\r\n                if(val === '' || val === '\\u00A0'){\r\n                    currentSize -= cLength;\r\n                }\r\n                while(currentPos<=i){\r\n                    letters[currentPos].an = currentSize;\r\n                    letters[currentPos].ind = index;\r\n                    letters[currentPos].extra = cLength;\r\n                    currentPos += 1;\r\n                }\r\n                index += 1;\r\n                currentSize = 0;\r\n            }\r\n        }else if(anchorGrouping == 3){\r\n            currentSize += cLength;\r\n            if(val === '' || i === len - 1){\r\n                if(val === ''){\r\n                    currentSize -= cLength;\r\n                }\r\n                while(currentPos<=i){\r\n                    letters[currentPos].an = currentSize;\r\n                    letters[currentPos].ind = index;\r\n                    letters[currentPos].extra = cLength;\r\n                    currentPos += 1;\r\n                }\r\n                currentSize = 0;\r\n                index += 1;\r\n            }\r\n        }else{\r\n            letters[index].ind = index;\r\n            letters[index].extra = 0;\r\n            index += 1;\r\n        }\r\n    }\r\n    documentData.l = letters;\r\n    maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\r\n    lineWidths.push(lineWidth);\r\n    if(documentData.sz){\r\n        documentData.boxWidth = documentData.sz[0];\r\n        documentData.justifyOffset = 0;\r\n    }else{\r\n        documentData.boxWidth = maxLineWidth;\r\n        switch(documentData.j){\r\n            case 1:\r\n                documentData.justifyOffset = - documentData.boxWidth;\r\n                break;\r\n            case 2:\r\n                documentData.justifyOffset = - documentData.boxWidth/2;\r\n                break;\r\n            default:\r\n                documentData.justifyOffset = 0;\r\n        }\r\n    }\r\n    documentData.lineWidths = lineWidths;\r\n\r\n    var animators = data.a, animatorData, letterData;\r\n    jLen = animators.length;\r\n    var based, ind, indexes = [];\r\n    for(j=0;j<jLen;j+=1){\r\n        animatorData = animators[j];\r\n        if(animatorData.a.sc){\r\n            documentData.strokeColorAnim = true;\r\n        }\r\n        if(animatorData.a.sw){\r\n            documentData.strokeWidthAnim = true;\r\n        }\r\n        if(animatorData.a.fc || animatorData.a.fh || animatorData.a.fs || animatorData.a.fb){\r\n            documentData.fillColorAnim = true;\r\n        }\r\n        ind = 0;\r\n        based = animatorData.s.b;\r\n        for(i=0;i<len;i+=1){\r\n            letterData = letters[i];\r\n            letterData.anIndexes[j] = ind;\r\n            if((based == 1 && letterData.val !== '') || (based == 2 && letterData.val !== '' && letterData.val !== '\\u00A0') || (based == 3 && (letterData.n || letterData.val == '\\u00A0' || i == len - 1)) || (based == 4 && (letterData.n || i == len - 1))){\r\n                if(animatorData.s.rn === 1){\r\n                    indexes.push(ind);\r\n                }\r\n                ind += 1;\r\n            }\r\n        }\r\n        data.a[j].s.totalChars = ind;\r\n        var currentInd = -1, newInd;\r\n        if(animatorData.s.rn === 1){\r\n            for(i = 0; i < len; i += 1){\r\n                letterData = letters[i];\r\n                if(currentInd != letterData.anIndexes[j]){\r\n                    currentInd = letterData.anIndexes[j];\r\n                    newInd = indexes.splice(Math.floor(Math.random()*indexes.length),1)[0];\r\n                }\r\n                letterData.anIndexes[j] = newInd;\r\n            }\r\n        }\r\n    }\r\n    documentData.yOffset = documentData.finalLineHeight || documentData.finalSize*1.2;\r\n    documentData.ls = documentData.ls || 0;\r\n    documentData.ascent = fontData.ascent*documentData.finalSize/100;\r\n};\r\n\r\nTextProperty.prototype.updateDocumentData = function(newData, index) {\r\n\tindex = index === undefined ? this.keysIndex : index;\r\n    var dData = this.data.d.k[index].s;\r\n    for(var s in newData) {\r\n        dData[s] = newData[s];\r\n    }\r\n    this.recalculate(index);\r\n};\r\n\r\nTextProperty.prototype.recalculate = function(index) {\r\n    var dData = this.data.d.k[index].s;\r\n    dData.__complete = false;\r\n    this.keysIndex = -1;\r\n    this.getValue(true);\r\n}\r\n\r\nTextProperty.prototype.canResizeFont = function(_canResize) {\r\n    this.canResize = _canResize;\r\n    this.recalculate(this.keysIndex);\r\n};\r\n\r\nTextProperty.prototype.setMinimumFontSize = function(_fontValue) {\r\n    this.minimumFontSize = Math.floor(_fontValue) || 1;\r\n    this.recalculate(this.keysIndex);\r\n};\r\n\r\nvar TextSelectorProp = (function(){\r\n    var max = Math.max;\r\n    var min = Math.min;\r\n    var floor = Math.floor;\r\n    function updateRange(newCharsFlag){\r\n        this._mdf = newCharsFlag || false;\r\n        if(this.dynamicProperties.length){\r\n            var i, len = this.dynamicProperties.length;\r\n            for(i=0;i<len;i+=1){\r\n                this.dynamicProperties[i].getValue();\r\n                if(this.dynamicProperties[i]._mdf){\r\n                    this._mdf = true;\r\n                }\r\n            }\r\n        }\r\n        var totalChars = this.data.totalChars || this.elem.textProperty.currentData.l.length || 0;\r\n        if(newCharsFlag && this.data.r === 2) {\r\n            this.e.v = totalChars;\r\n        }\r\n        var divisor = this.data.r === 2 ? 1 : 100 / totalChars;\r\n        var o = this.o.v/divisor;\r\n        var s = this.s.v/divisor + o;\r\n        var e = (this.e.v/divisor) + o;\r\n        if(s>e){\r\n            var _s = s;\r\n            s = e;\r\n            e = _s;\r\n        }\r\n        this.finalS = s;\r\n        this.finalE = e;\r\n    }\r\n\r\n    function getMult(ind){\r\n        //var easer = bez.getEasingCurve(this.ne.v/100,0,1-this.xe.v/100,1);\r\n        var easer = BezierFactory.getBezierEasing(this.ne.v/100,0,1-this.xe.v/100,1).get;\r\n        var mult = 0;\r\n        var s = this.finalS;\r\n        var e = this.finalE;\r\n        var type = this.data.sh;\r\n        if(type == 2){\r\n            if(e === s){\r\n                mult = ind >= e ? 1 : 0;\r\n            }else{\r\n                mult = max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n            }\r\n            mult = easer(mult);\r\n        }else if(type == 3){\r\n            if(e === s){\r\n                mult = ind >= e ? 0 : 1;\r\n            }else{\r\n                mult = 1 - max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n            }\r\n\r\n            mult = easer(mult);\r\n        }else if(type == 4){\r\n            if(e === s){\r\n                mult = 0;\r\n            }else{\r\n                mult = max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n                if(mult<0.5){\r\n                    mult *= 2;\r\n                }else{\r\n                    mult = 1 - 2*(mult-0.5);\r\n                }\r\n            }\r\n            mult = easer(mult);\r\n        }else if(type == 5){\r\n            if(e === s){\r\n                mult = 0;\r\n            }else{\r\n                var tot = e - s;\r\n                /*ind += 0.5;\r\n                mult = -4/(tot*tot)*(ind*ind)+(4/tot)*ind;*/\r\n                ind = min(max(0,ind+0.5-s),e-s);\r\n                var x = -tot/2+ind;\r\n                var a = tot/2;\r\n                mult = Math.sqrt(1 - (x*x)/(a*a));\r\n            }\r\n            mult = easer(mult);\r\n        }else if(type == 6){\r\n            if(e === s){\r\n                mult = 0;\r\n            }else{\r\n                ind = min(max(0,ind+0.5-s),e-s);\r\n                mult = (1+(Math.cos((Math.PI+Math.PI*2*(ind)/(e-s)))))/2;\r\n                /*\r\n                 ind = Math.min(Math.max(s,ind),e-1);\r\n                 mult = (1+(Math.cos((Math.PI+Math.PI*2*(ind-s)/(e-1-s)))))/2;\r\n                 mult = Math.max(mult,(1/(e-1-s))/(e-1-s));*/\r\n            }\r\n            mult = easer(mult);\r\n        }else {\r\n            if(ind >= floor(s)){\r\n                if(ind-s < 0){\r\n                    mult = 1 - (s - ind);\r\n                }else{\r\n                    mult = max(0,min(e-ind,1));\r\n                }\r\n            }\r\n            mult = easer(mult);\r\n        }\r\n        return mult*this.a.v;\r\n    }\r\n\r\n    function TextSelectorProp(elem,data, arr){\r\n        this._mdf = false;\r\n        this.k = false;\r\n        this.data = data;\r\n        this.dynamicProperties = [];\r\n        this.getValue = updateRange;\r\n        this.getMult = getMult;\r\n        this.elem = elem;\r\n        this.comp = elem.comp;\r\n        this.finalS = 0;\r\n        this.finalE = 0;\r\n        this.s = PropertyFactory.getProp(elem,data.s || {k:0},0,0,this.dynamicProperties);\r\n        if('e' in data){\r\n            this.e = PropertyFactory.getProp(elem,data.e,0,0,this.dynamicProperties);\r\n        }else{\r\n            this.e = {v:100};\r\n        }\r\n        this.o = PropertyFactory.getProp(elem,data.o || {k:0},0,0,this.dynamicProperties);\r\n        this.xe = PropertyFactory.getProp(elem,data.xe || {k:0},0,0,this.dynamicProperties);\r\n        this.ne = PropertyFactory.getProp(elem,data.ne || {k:0},0,0,this.dynamicProperties);\r\n        this.a = PropertyFactory.getProp(elem,data.a,0,0.01,this.dynamicProperties);\r\n        if(this.dynamicProperties.length){\r\n            arr.push(this);\r\n        }else{\r\n            this.getValue();\r\n        }\r\n    }\r\n\r\n    function getTextSelectorProp(elem, data,arr) {\r\n        return new TextSelectorProp(elem, data, arr);\r\n    }\r\n\r\n    return {\r\n        getTextSelectorProp: getTextSelectorProp\r\n    };\r\n}());\r\n\r\n    \r\nvar pool_factory = (function() {\r\n\treturn function(initialLength, _create, _release, _clone) {\r\n\r\n\t\tvar _length = 0;\r\n\t\tvar _maxLength = initialLength;\r\n\t\tvar pool = createSizedArray(_maxLength);\r\n\r\n\t\tvar ob = {\r\n\t\t\tnewElement: newElement,\r\n\t\t\trelease: release\r\n\t\t};\r\n\r\n\t\tfunction newElement(){\r\n\t\t\tvar element;\r\n\t\t\tif(_length){\r\n\t\t\t\t_length -= 1;\r\n\t\t\t\telement = pool[_length];\r\n\t\t\t} else {\r\n\t\t\t\telement = _create();\r\n\t\t\t}\r\n\t\t\treturn element;\r\n\t\t}\r\n\r\n\t\tfunction release(element) {\r\n\t\t\tif(_length === _maxLength) {\r\n\t\t\t\tpool = pooling.double(pool);\r\n\t\t\t\t_maxLength = _maxLength*2;\r\n\t\t\t}\r\n\t\t\tif (_release) {\r\n\t\t\t\t_release(element);\r\n\t\t\t}\r\n\t\t\tpool[_length] = element;\r\n\t\t\t_length += 1;\r\n\t\t}\r\n\r\n\t\tfunction clone() {\r\n\t\t\tvar clonedElement = newElement();\r\n\t\t\treturn _clone(clonedElement);\r\n\t\t}\r\n\r\n\t\treturn ob;\r\n\t};\r\n}());\r\n\r\nvar pooling = (function(){\r\n\r\n\tfunction double(arr){\r\n\t\treturn arr.concat(createSizedArray(arr.length));\r\n\t}\r\n\r\n\treturn {\r\n\t\tdouble: double\r\n\t};\r\n}());\r\nvar point_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn createTypedArray('float32', 2);\r\n\t}\r\n\treturn pool_factory(8, create);\r\n}());\r\nvar shape_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn new ShapePath();\r\n\t}\r\n\r\n\tfunction release(shapePath) {\r\n\t\tvar len = shapePath._length, i;\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tpoint_pool.release(shapePath.v[i]);\r\n\t\t\tpoint_pool.release(shapePath.i[i]);\r\n\t\t\tpoint_pool.release(shapePath.o[i]);\r\n\t\t\tshapePath.v[i] = null;\r\n\t\t\tshapePath.i[i] = null;\r\n\t\t\tshapePath.o[i] = null;\r\n\t\t}\r\n\t\tshapePath._length = 0;\r\n\t\tshapePath.c = false;\r\n\t}\r\n\r\n\tfunction clone(shape) {\r\n\t\tvar cloned = factory.newElement();\r\n\t\tvar i, len = shape._length === undefined ? shape.v.length : shape._length;\r\n\t\tcloned.setLength(len);\r\n\t\tcloned.c = shape.c;\r\n\t\tvar pt;\r\n\t\t\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tcloned.setTripleAt(shape.v[i][0],shape.v[i][1],shape.o[i][0],shape.o[i][1],shape.i[i][0],shape.i[i][1], i);\r\n\t\t}\r\n\t\treturn cloned;\r\n\t}\r\n\r\n\tvar factory = pool_factory(4, create, release);\r\n\tfactory.clone = clone;\r\n\r\n\treturn factory;\r\n}());\r\nvar shapeCollection_pool = (function(){\r\n\tvar ob = {\r\n\t\tnewShapeCollection: newShapeCollection,\r\n\t\trelease: release\r\n\t};\r\n\r\n\tvar _length = 0;\r\n\tvar _maxLength = 4;\r\n\tvar pool = createSizedArray(_maxLength);\r\n\r\n\tfunction newShapeCollection(){\r\n\t\tvar shapeCollection;\r\n\t\tif(_length){\r\n\t\t\t_length -= 1;\r\n\t\t\tshapeCollection = pool[_length];\r\n\t\t} else {\r\n\t\t\tshapeCollection = new ShapeCollection();\r\n\t\t}\r\n\t\treturn shapeCollection;\r\n\t}\r\n\r\n\tfunction release(shapeCollection) {\r\n\t\tvar i, len = shapeCollection._length;\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tshape_pool.release(shapeCollection.shapes[i]);\r\n\t\t}\r\n\t\tshapeCollection._length = 0;\r\n\r\n\t\tif(_length === _maxLength) {\r\n\t\t\tpool = pooling.double(pool);\r\n\t\t\t_maxLength = _maxLength*2;\r\n\t\t}\r\n\t\tpool[_length] = shapeCollection;\r\n\t\t_length += 1;\r\n\t}\r\n\r\n\treturn ob;\r\n}());\r\nvar segments_length_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn {\r\n\t\t\tlengths: [],\r\n\t\t\ttotalLength: 0\r\n\t\t};\r\n\t}\r\n\r\n\tfunction release(element) {\r\n\t\tvar i, len = element.lengths.length;\r\n\t\tfor(i=0;i<len;i+=1) {\r\n\t\t\tbezier_length_pool.release(element.lengths[i]);\r\n\t\t}\r\n\t\telement.lengths.length = 0;\r\n\t}\r\n\r\n\treturn pool_factory(8, create, release);\r\n}());\r\nvar bezier_length_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn {\r\n            addedLength: 0,\r\n            percents: createTypedArray('float32', defaultCurveSegments),\r\n            lengths: createTypedArray('float32', defaultCurveSegments),\r\n        };\r\n\t}\r\n\treturn pool_factory(8, create);\r\n}());\r\nfunction BaseRenderer(){}\r\nBaseRenderer.prototype.checkLayers = function(num){\r\n    var i, len = this.layers.length, data;\r\n    this.completeLayers = true;\r\n    for (i = len - 1; i >= 0; i--) {\r\n        if (!this.elements[i]) {\r\n            data = this.layers[i];\r\n            if(data.ip - data.st <= (num - this.layers[i].st) && data.op - data.st > (num - this.layers[i].st))\r\n            {\r\n                this.buildItem(i);\r\n            }\r\n        }\r\n        this.completeLayers = this.elements[i] ? this.completeLayers:false;\r\n    }\r\n    this.checkPendingElements();\r\n};\r\n\r\nBaseRenderer.prototype.createItem = function(layer){\r\n    switch(layer.ty){\r\n        case 2:\r\n            return this.createImage(layer);\r\n        case 0:\r\n            return this.createComp(layer);\r\n        case 1:\r\n            return this.createSolid(layer);\r\n        case 3:\r\n            return this.createNull(layer);\r\n        case 4:\r\n            return this.createShape(layer);\r\n        case 5:\r\n            return this.createText(layer);\r\n        case 13:\r\n            return this.createCamera(layer);\r\n    }\r\n    return this.createNull(layer);\r\n};\r\n\r\nBaseRenderer.prototype.createCamera = function(){\r\n    throw new Error('You\\'re using a 3d camera. Try the html renderer.');\r\n};\r\n\r\nBaseRenderer.prototype.buildAllItems = function(){\r\n    var i, len = this.layers.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.buildItem(i);\r\n    }\r\n    this.checkPendingElements();\r\n};\r\n\r\nBaseRenderer.prototype.includeLayers = function(newLayers){\r\n    this.completeLayers = false;\r\n    var i, len = newLayers.length;\r\n    var j, jLen = this.layers.length;\r\n    for(i=0;i<len;i+=1){\r\n        j = 0;\r\n        while(j<jLen){\r\n            if(this.layers[j].id == newLayers[i].id){\r\n                this.layers[j] = newLayers[i];\r\n                break;\r\n            }\r\n            j += 1;\r\n        }\r\n    }\r\n};\r\n\r\nBaseRenderer.prototype.setProjectInterface = function(pInterface){\r\n    this.globalData.projectInterface = pInterface;\r\n};\r\n\r\nBaseRenderer.prototype.initItems = function(){\r\n    if(!this.globalData.progressiveLoad){\r\n        this.buildAllItems();\r\n    }\r\n};\r\nBaseRenderer.prototype.buildElementParenting = function(element, parentName, hierarchy) {\r\n    var elements = this.elements;\r\n    var layers = this.layers;\r\n    var i=0, len = layers.length;\r\n    while (i < len) {\r\n        if (layers[i].ind == parentName) {\r\n            if (!elements[i] || elements[i] === true) {\r\n                this.buildItem(i);\r\n                this.addPendingElement(element);\r\n            } else {\r\n                hierarchy.push(elements[i]);\r\n                elements[i].setAsParent();\r\n                if(layers[i].parent !== undefined) {\r\n                    this.buildElementParenting(element, layers[i].parent, hierarchy);\r\n                } else {\r\n                    element.setHierarchy(hierarchy);\r\n                }\r\n            }\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nBaseRenderer.prototype.addPendingElement = function(element){\r\n    this.pendingElements.push(element);\r\n};\r\n\r\nBaseRenderer.prototype.searchExtraCompositions = function(assets){\r\n    var i, len = assets.length;\r\n    for(i=0;i<len;i+=1){\r\n        if(assets[i].xt){\r\n            var comp = this.createComp(assets[i]);\r\n            comp.initExpressions();\r\n            this.globalData.projectInterface.registerComposition(comp);\r\n        }\r\n    }\r\n};\r\n\r\nfunction SVGRenderer(animationItem, config){\r\n    this.animationItem = animationItem;\r\n    this.layers = null;\r\n    this.renderedFrame = -1;\r\n    this.svgElement = createNS('svg');\r\n    var maskElement = createNS('g');\r\n    this.svgElement.appendChild(maskElement);\r\n    this.layerElement = maskElement;\r\n    var defs = createNS( 'defs');\r\n    this.svgElement.appendChild(defs);\r\n    this.renderConfig = {\r\n        preserveAspectRatio: (config && config.preserveAspectRatio) || 'xMidYMid meet',\r\n        progressiveLoad: (config && config.progressiveLoad) || false,\r\n        hideOnTransparent: (config && config.hideOnTransparent === false) ? false : true,\r\n        viewBoxOnly: (config && config.viewBoxOnly) || false,\r\n        viewBoxSize: (config && config.viewBoxSize) || false,\r\n        className: (config && config.className) || ''\r\n    };\r\n    this.globalData = {\r\n        _mdf: false,\r\n        frameNum: -1,\r\n        defs: defs,\r\n        frameId: 0,\r\n        compSize: {w:0,h:0},\r\n        renderConfig: this.renderConfig,\r\n        fontManager: new FontManager()\r\n    };\r\n    this.elements = [];\r\n    this.pendingElements = [];\r\n    this.destroyed = false;\r\n\r\n}\r\n\r\nextendPrototype([BaseRenderer],SVGRenderer);\r\n\r\nSVGRenderer.prototype.createNull = function (data) {\r\n    return new NullElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createShape = function (data) {\r\n    return new SVGShapeElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createText = function (data) {\r\n    return new SVGTextElement(data,this.globalData,this);\r\n\r\n};\r\n\r\nSVGRenderer.prototype.createImage = function (data) {\r\n    return new IImageElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createComp = function (data) {\r\n    return new SVGCompElement(data,this.globalData,this);\r\n\r\n};\r\n\r\nSVGRenderer.prototype.createSolid = function (data) {\r\n    return new ISolidElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.configAnimation = function(animData){\r\n    this.svgElement.setAttribute('xmlns','http://www.w3.org/2000/svg');\r\n    if(this.renderConfig.viewBoxSize) {\r\n        this.svgElement.setAttribute('viewBox',this.renderConfig.viewBoxSize);\r\n    } else {\r\n        this.svgElement.setAttribute('viewBox','0 0 '+animData.w+' '+animData.h);\r\n    }\r\n\r\n    if(!this.renderConfig.viewBoxOnly) {\r\n        this.svgElement.setAttribute('width',animData.w);\r\n        this.svgElement.setAttribute('height',animData.h);\r\n        this.svgElement.style.width = '100%';\r\n        this.svgElement.style.height = '100%';\r\n    }\r\n    if(this.renderConfig.className) {\r\n        this.svgElement.setAttribute('class', this.renderConfig.className);\r\n    }\r\n    this.svgElement.setAttribute('preserveAspectRatio',this.renderConfig.preserveAspectRatio);\r\n    //this.layerElement.style.transform = 'translate3d(0,0,0)';\r\n    //this.layerElement.style.transformOrigin = this.layerElement.style.mozTransformOrigin = this.layerElement.style.webkitTransformOrigin = this.layerElement.style['-webkit-transform'] = \"0px 0px 0px\";\r\n    this.animationItem.wrapper.appendChild(this.svgElement);\r\n    //Mask animation\r\n    var defs = this.globalData.defs;\r\n\r\n    this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem);\r\n    this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem);\r\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\r\n    this.globalData.nm = animData.nm;\r\n    this.globalData.compSize.w = animData.w;\r\n    this.globalData.compSize.h = animData.h;\r\n    this.globalData.frameRate = animData.fr;\r\n    this.data = animData;\r\n\r\n    var maskElement = createNS( 'clipPath');\r\n    var rect = createNS('rect');\r\n    rect.setAttribute('width',animData.w);\r\n    rect.setAttribute('height',animData.h);\r\n    rect.setAttribute('x',0);\r\n    rect.setAttribute('y',0);\r\n    var maskId = 'animationMask_'+randomString(10);\r\n    maskElement.setAttribute('id', maskId);\r\n    maskElement.appendChild(rect);\r\n    this.layerElement.setAttribute(\"clip-path\", \"url(\" + locationHref + \"#\"+maskId+\")\");\r\n\r\n    defs.appendChild(maskElement);\r\n    this.layers = animData.layers;\r\n    this.globalData.fontManager.addChars(animData.chars);\r\n    this.globalData.fontManager.addFonts(animData.fonts,defs);\r\n    this.elements = createSizedArray(animData.layers.length);\r\n};\r\n\r\n\r\nSVGRenderer.prototype.destroy = function () {\r\n    this.animationItem.wrapper.innerHTML = '';\r\n    this.layerElement = null;\r\n    this.globalData.defs = null;\r\n    var i, len = this.layers ? this.layers.length : 0;\r\n    for (i = 0; i < len; i++) {\r\n        if(this.elements[i]){\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n    this.elements.length = 0;\r\n    this.destroyed = true;\r\n    this.animationItem = null;\r\n};\r\n\r\nSVGRenderer.prototype.updateContainerSize = function () {\r\n};\r\n\r\nSVGRenderer.prototype.buildItem  = function(pos){\r\n    var elements = this.elements;\r\n    if(elements[pos] || this.layers[pos].ty == 99){\r\n        return;\r\n    }\r\n    elements[pos] = true;\r\n    var element = this.createItem(this.layers[pos]);\r\n\r\n    elements[pos] = element;\r\n    if(expressionsPlugin){\r\n        if(this.layers[pos].ty === 0){\r\n            this.globalData.projectInterface.registerComposition(element);\r\n        }\r\n        element.initExpressions();\r\n    }\r\n    this.appendElementInPos(element,pos);\r\n    if(this.layers[pos].tt){\r\n        if(!this.elements[pos - 1] || this.elements[pos - 1] === true){\r\n            this.buildItem(pos - 1);\r\n            this.addPendingElement(element);\r\n        } else {\r\n            element.setMatte(elements[pos - 1].layerId);\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.checkPendingElements  = function(){\r\n    while(this.pendingElements.length){\r\n        var element = this.pendingElements.pop();\r\n        element.checkParenting();\r\n        if(element.data.tt){\r\n            var i = 0, len = this.elements.length;\r\n            while(i<len){\r\n                if(this.elements[i] === element){\r\n                    element.setMatte(this.elements[i - 1].layerId);\r\n                    break;\r\n                }\r\n                i += 1;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.renderFrame = function(num){\r\n    if(this.renderedFrame === num || this.destroyed){\r\n        return;\r\n    }\r\n    if(num === null){\r\n        num = this.renderedFrame;\r\n    }else{\r\n        this.renderedFrame = num;\r\n    }\r\n    //clearPoints();\r\n    // console.log('-------');\r\n    // console.log('FRAME ',num);\r\n    this.globalData.frameNum = num;\r\n    this.globalData.frameId += 1;\r\n    this.globalData.projectInterface.currentFrame = num;\r\n    this.globalData._mdf = false;\r\n    var i, len = this.layers.length;\r\n    if(!this.completeLayers){\r\n        this.checkLayers(num);\r\n    }\r\n    for (i = len - 1; i >= 0; i--) {\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].prepareFrame(num - this.layers[i].st);\r\n        }\r\n    }\r\n    if(this.globalData._mdf) {\r\n        for (i = 0; i < len; i += 1) {\r\n            if(this.completeLayers || this.elements[i]){\r\n                this.elements[i].renderFrame();\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.appendElementInPos = function(element, pos){\r\n    var newElement = element.getBaseElement();\r\n    if(!newElement){\r\n        return;\r\n    }\r\n    var i = 0;\r\n    var nextElement;\r\n    while(i<pos){\r\n        if(this.elements[i] && this.elements[i]!== true && this.elements[i].getBaseElement()){\r\n            nextElement = this.elements[i].getBaseElement();\r\n        }\r\n        i += 1;\r\n    }\r\n    if(nextElement){\r\n        this.layerElement.insertBefore(newElement, nextElement);\r\n    } else {\r\n        this.layerElement.appendChild(newElement);\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.hide = function(){\r\n    this.layerElement.style.display = 'none';\r\n};\r\n\r\nSVGRenderer.prototype.show = function(){\r\n    this.layerElement.style.display = 'block';\r\n};\r\n\r\nfunction MaskElement(data,element,globalData, dynamicProperties) {\r\n    this.data = data;\r\n    this.element = element;\r\n    this.globalData = globalData;\r\n    this.storedData = [];\r\n    this.masksProperties = this.data.masksProperties || [];\r\n    this.maskElement = null;\r\n    this._isFirstFrame = true;\r\n    var defs = this.globalData.defs;\r\n    var i, len = this.masksProperties ? this.masksProperties.length : 0;\r\n    this.viewData = createSizedArray(len);\r\n    this.solidPath = '';\r\n\r\n\r\n    var path, properties = this.masksProperties;\r\n    var count = 0;\r\n    var currentMasks = [];\r\n    var j, jLen;\r\n    var layerId = randomString(10);\r\n    var rect, expansor, feMorph,x;\r\n    var maskType = 'clipPath', maskRef = 'clip-path';\r\n    for (i = 0; i < len; i++) {\r\n\r\n        if((properties[i].mode !== 'a' && properties[i].mode !== 'n')|| properties[i].inv || properties[i].o.k !== 100){\r\n            maskType = 'mask';\r\n            maskRef = 'mask';\r\n        }\r\n\r\n        if((properties[i].mode == 's' || properties[i].mode == 'i') && count === 0){\r\n            rect = createNS( 'rect');\r\n            rect.setAttribute('fill', '#ffffff');\r\n            rect.setAttribute('width', this.element.comp.data.w);\r\n            rect.setAttribute('height', this.element.comp.data.h);\r\n            currentMasks.push(rect);\r\n        } else {\r\n            rect = null;\r\n        }\r\n\r\n        path = createNS( 'path');\r\n        if(properties[i].mode == 'n') {\r\n            // TODO move this to a factory or to a constructor\r\n            this.viewData[i] = {\r\n                op: PropertyFactory.getProp(this.element,properties[i].o,0,0.01,dynamicProperties),\r\n                prop: ShapePropertyFactory.getShapeProp(this.element,properties[i],3,dynamicProperties,null),\r\n                elem: path\r\n            };\r\n            defs.appendChild(path);\r\n            continue;\r\n        }\r\n        count += 1;\r\n\r\n        path.setAttribute('fill', properties[i].mode === 's' ? '#000000':'#ffffff');\r\n        path.setAttribute('clip-rule','nonzero');\r\n        var filterID;\r\n\r\n        if (properties[i].x.k !== 0) {\r\n            maskType = 'mask';\r\n            maskRef = 'mask';\r\n            x = PropertyFactory.getProp(this.element,properties[i].x,0,null,dynamicProperties);\r\n            filterID = 'fi_'+randomString(10);\r\n            expansor = createNS('filter');\r\n            expansor.setAttribute('id',filterID);\r\n            feMorph = createNS('feMorphology');\r\n            feMorph.setAttribute('operator','dilate');\r\n            feMorph.setAttribute('in','SourceGraphic');\r\n            feMorph.setAttribute('radius','0');\r\n            expansor.appendChild(feMorph);\r\n            defs.appendChild(expansor);\r\n            path.setAttribute('stroke', properties[i].mode === 's' ? '#000000':'#ffffff');\r\n        } else {\r\n            feMorph = null;\r\n            x = null;\r\n        }\r\n\r\n        // TODO move this to a factory or to a constructor\r\n        this.storedData[i] = {\r\n             elem: path,\r\n             x: x,\r\n             expan: feMorph,\r\n            lastPath: '',\r\n            lastOperator:'',\r\n            filterId:filterID,\r\n            lastRadius:0\r\n        };\r\n        if(properties[i].mode == 'i'){\r\n            jLen = currentMasks.length;\r\n            var g = createNS('g');\r\n            for(j=0;j<jLen;j+=1){\r\n                g.appendChild(currentMasks[j]);\r\n            }\r\n            var mask = createNS('mask');\r\n            mask.setAttribute('mask-type','alpha');\r\n            mask.setAttribute('id',layerId+'_'+count);\r\n            mask.appendChild(path);\r\n            defs.appendChild(mask);\r\n            g.setAttribute('mask','url(' + locationHref + '#'+layerId+'_'+count+')');\r\n\r\n            currentMasks.length = 0;\r\n            currentMasks.push(g);\r\n        }else{\r\n            currentMasks.push(path);\r\n        }\r\n        if(properties[i].inv && !this.solidPath){\r\n            this.solidPath = this.createLayerSolidPath();\r\n        }\r\n        // TODO move this to a factory or to a constructor\r\n        this.viewData[i] = {\r\n            elem: path,\r\n            lastPath: '',\r\n            op: PropertyFactory.getProp(this.element,properties[i].o,0,0.01,dynamicProperties),\r\n            prop:ShapePropertyFactory.getShapeProp(this.element,properties[i],3,dynamicProperties,null),\r\n            invRect: rect\r\n        };\r\n        if(!this.viewData[i].prop.k){\r\n            this.drawPath(properties[i],this.viewData[i].prop.v,this.viewData[i]);\r\n        }\r\n    }\r\n\r\n    this.maskElement = createNS( maskType);\r\n\r\n    len = currentMasks.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.maskElement.appendChild(currentMasks[i]);\r\n    }\r\n\r\n    if(count > 0){\r\n        this.maskElement.setAttribute('id', layerId);\r\n        this.element.maskedElement.setAttribute(maskRef, \"url(\" + locationHref + \"#\" + layerId + \")\");\r\n        defs.appendChild(this.maskElement);\r\n    }\r\n\r\n}\r\n\r\nMaskElement.prototype.getMaskProperty = function(pos){\r\n    return this.viewData[pos].prop;\r\n};\r\n\r\nMaskElement.prototype.renderFrame = function (finalMat) {\r\n    var i, len = this.masksProperties.length;\r\n    for (i = 0; i < len; i++) {\r\n        if(this.viewData[i].prop._mdf || this._isFirstFrame){\r\n            this.drawPath(this.masksProperties[i],this.viewData[i].prop.v,this.viewData[i]);\r\n        }\r\n        if(this.viewData[i].op._mdf || this._isFirstFrame){\r\n            this.viewData[i].elem.setAttribute('fill-opacity',this.viewData[i].op.v);\r\n        }\r\n        if(this.masksProperties[i].mode !== 'n'){\r\n            if(this.viewData[i].invRect && (this.element.finalTransform.mProp._mdf || this._isFirstFrame)){\r\n                this.viewData[i].invRect.setAttribute('x', -finalMat.props[12]);\r\n                this.viewData[i].invRect.setAttribute('y', -finalMat.props[13]);\r\n            }\r\n            if(this.storedData[i].x && (this.storedData[i].x._mdf || this._isFirstFrame)){\r\n                var feMorph = this.storedData[i].expan;\r\n                if(this.storedData[i].x.v < 0){\r\n                    if(this.storedData[i].lastOperator !== 'erode'){\r\n                        this.storedData[i].lastOperator = 'erode';\r\n                        this.storedData[i].elem.setAttribute('filter','url(' + locationHref + '#'+this.storedData[i].filterId+')');\r\n                    }\r\n                    feMorph.setAttribute('radius',-this.storedData[i].x.v);\r\n                }else{\r\n                    if(this.storedData[i].lastOperator !== 'dilate'){\r\n                        this.storedData[i].lastOperator = 'dilate';\r\n                        this.storedData[i].elem.setAttribute('filter',null);\r\n                    }\r\n                    this.storedData[i].elem.setAttribute('stroke-width', this.storedData[i].x.v*2);\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n    this._isFirstFrame = false;\r\n};\r\n\r\nMaskElement.prototype.getMaskelement = function () {\r\n    return this.maskElement;\r\n};\r\n\r\nMaskElement.prototype.createLayerSolidPath = function(){\r\n    var path = 'M0,0 ';\r\n    path += ' h' + this.globalData.compSize.w ;\r\n    path += ' v' + this.globalData.compSize.h ;\r\n    path += ' h-' + this.globalData.compSize.w ;\r\n    path += ' v-' + this.globalData.compSize.h + ' ';\r\n    return path;\r\n};\r\n\r\nMaskElement.prototype.drawPath = function(pathData,pathNodes,viewData){\r\n    var pathString = \" M\"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    var i, len;\r\n    len = pathNodes._length;\r\n    for(i=1;i<len;i+=1){\r\n        //pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[i][0]+','+pathNodes.i[i][1] + \" \"+pathNodes.v[i][0]+','+pathNodes.v[i][1];\r\n        pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[i][0]+','+pathNodes.i[i][1] + \" \"+pathNodes.v[i][0]+','+pathNodes.v[i][1];\r\n    }\r\n        //pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[0][0]+','+pathNodes.i[0][1] + \" \"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    if(pathNodes.c && len > 1){\r\n        pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[0][0]+','+pathNodes.i[0][1] + \" \"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    }\r\n    //pathNodes.__renderedString = pathString;\r\n\r\n\r\n    if(viewData.lastPath !== pathString){\r\n        var pathShapeValue = '';\r\n        if(viewData.elem){\r\n            if(pathNodes.c){\r\n                pathShapeValue = pathData.inv ? this.solidPath + pathString : pathString;\r\n            }\r\n            viewData.elem.setAttribute('d',pathShapeValue);\r\n        }\r\n        viewData.lastPath = pathString;\r\n    }\r\n};\r\n\r\nMaskElement.prototype.destroy = function(){\r\n    this.element = null;\r\n    this.globalData = null;\r\n    this.maskElement = null;\r\n    this.data = null;\r\n    this.masksProperties = null;\r\n};\r\n/**\r\n * @file \r\n * Handles AE's layer parenting property.\r\n *\r\n */\r\n\r\nfunction HierarchyElement(){}\r\n\r\nHierarchyElement.prototype = {\r\n\t/**\r\n     * @function \r\n     * Initializes hierarchy properties\r\n     *\r\n     */\r\n\tinitHierarchy: function() {\r\n\t\t//element's parent list\r\n\t    this.hierarchy = [];\r\n\t    //if element is parent of another layer _isParent will be true\r\n\t    this._isParent = false;\r\n\t    this.checkParenting();\r\n\t},\r\n\t/**\r\n     * @function \r\n     * Sets layer's hierarchy.\r\n     * @param {array} hierarch\r\n     * layer's parent list\r\n     *\r\n     */ \r\n\tsetHierarchy: function(hierarchy){\r\n\t    this.hierarchy = hierarchy;\r\n\t},\r\n\t/**\r\n     * @function \r\n     * Sets layer as parent.\r\n     *\r\n     */ \r\n\tsetAsParent: function() {\r\n\t    this._isParent = true;\r\n\t},\r\n\t/**\r\n     * @function \r\n     * Searches layer's parenting chain\r\n     *\r\n     */ \r\n\tcheckParenting: function(){\r\n\t    if (this.data.parent !== undefined){\r\n\t        this.comp.buildElementParenting(this, this.data.parent, []);\r\n\t    }\r\n\t}\r\n};\r\n/**\r\n * @file \r\n * Handles element's layer frame update.\r\n * Checks layer in point and out point\r\n *\r\n */\r\n\r\nfunction FrameElement(){}\r\n\r\nFrameElement.prototype = {\r\n    /**\r\n     * @function \r\n     * Initializes frame related properties.\r\n     *\r\n     */\r\n    initFrame: function(){\r\n        //set to true when inpoint is rendered\r\n        this._isFirstFrame = false;\r\n        //list of animated properties\r\n        this.dynamicProperties = [];\r\n        // If layer has been modified in current tick this will be true\r\n        this._mdf = false;\r\n    },\r\n    /**\r\n     * @function \r\n     * Calculates all dynamic values\r\n     *\r\n     * @param {number} num\r\n     * current frame number in Layer's time\r\n     * @param {boolean} isVisible\r\n     * if layers is currently in range\r\n     * \r\n     */\r\n    prepareProperties: function(num, isVisible) {\r\n        var i, len = this.dynamicProperties.length;\r\n        for (i = 0;i < len; i += 1) {\r\n            if (isVisible || (this._isParent && this.dynamicProperties[i].propType === 'transform')) {\r\n                this.dynamicProperties[i].getValue();\r\n                if (this.dynamicProperties[i]._mdf) {\r\n                    this.globalData._mdf = true;\r\n                    this._mdf = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nfunction TransformElement(){}\r\n\r\nTransformElement.prototype = {\r\n    initTransform: function() {\r\n        this.finalTransform = {\r\n            mProp: this.data.ks ? TransformPropertyFactory.getTransformProperty(this, this.data.ks, this.dynamicProperties) : {o:0},\r\n            _matMdf: false,\r\n            _opMdf: false,\r\n            mat: new Matrix()\r\n        };\r\n        if (this.data.ao) {\r\n            this.finalTransform.mProp.autoOriented = true;\r\n        }\r\n\r\n        //TODO: check TYPE 11: Guided elements\r\n        if (this.data.ty !== 11) {\r\n            //this.createElements();\r\n        }\r\n    },\r\n    renderTransform: function() {\r\n\r\n        this.finalTransform._opMdf = this.finalTransform.mProp.o._mdf || this._isFirstFrame;\r\n        this.finalTransform._matMdf = this.finalTransform.mProp._mdf || this._isFirstFrame;\r\n\r\n        if (this.hierarchy) {\r\n            var mat;\r\n            var finalMat = this.finalTransform.mat;\r\n            var i = 0, len = this.hierarchy.length;\r\n            //Checking if any of the transformation matrices in the hierarchy chain has changed.\r\n            if (!this.finalTransform._matMdf) {\r\n                while (i < len) {\r\n                    if (this.hierarchy[i].finalTransform.mProp._mdf) {\r\n                        this.finalTransform._matMdf = true;\r\n                        break;\r\n                    }\r\n                    i += 1;\r\n                }\r\n            }\r\n            \r\n            if (this.finalTransform._matMdf) {\r\n                mat = this.finalTransform.mProp.v.props;\r\n                finalMat.cloneFromProps(mat);\r\n                for (i = 0; i < len; i += 1) {\r\n                    mat = this.hierarchy[i].finalTransform.mProp.v.props;\r\n                    finalMat.transform(mat[0], mat[1], mat[2], mat[3], mat[4], mat[5], mat[6], mat[7], mat[8], mat[9], mat[10], mat[11], mat[12], mat[13], mat[14], mat[15]);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    globalToLocal: function(pt) {\r\n        var transforms = [];\r\n        transforms.push(this.finalTransform);\r\n        var flag = true;\r\n        var comp = this.comp;\r\n        while (flag) {\r\n            if (comp.finalTransform) {\r\n                if (comp.data.hasMask) {\r\n                    transforms.splice(0, 0, comp.finalTransform);\r\n                }\r\n                comp = comp.comp;\r\n            } else {\r\n                flag = false;\r\n            }\r\n        }\r\n        var i, len = transforms.length,ptNew;\r\n        for (i = 0; i < len; i += 1) {\r\n            ptNew = transforms[i].mat.applyToPointArray(0, 0, 0);\r\n            //ptNew = transforms[i].mat.applyToPointArray(pt[0],pt[1],pt[2]);\r\n            pt = [pt[0] - ptNew[0], pt[1] - ptNew[1], 0];\r\n        }\r\n        return pt;\r\n    },\r\n    mHelper: new Matrix()\r\n};\r\nfunction RenderableElement(){\r\n\r\n}\r\n\r\nRenderableElement.prototype = {\r\n    initRenderable: function() {\r\n        //layer's visibility related to inpoint and outpoint. Rename isVisible to isInRange\r\n        this.isInRange = false;\r\n        //layer's display state\r\n        this.hidden = false;\r\n        // If layer's transparency equals 0, it can be hidden\r\n        this.isTransparent = false;\r\n    },\r\n    prepareRenderableFrame: function(num) {\r\n        this.checkLayerLimits(num);\r\n    },\r\n    checkTransparency: function(){\r\n        if(this.finalTransform.mProp.o.v <= 0) {\r\n            if(!this.isTransparent && this.globalData.renderConfig.hideOnTransparent){\r\n                this.isTransparent = true;\r\n                this.hide();\r\n            }\r\n        } else if(this.isTransparent) {\r\n            this.isTransparent = false;\r\n            this.show();\r\n        }\r\n    },\r\n    /**\r\n     * @function \r\n     * Initializes frame related properties.\r\n     *\r\n     * @param {number} num\r\n     * current frame number in Layer's time\r\n     * \r\n     */\r\n    checkLayerLimits: function(num) {\r\n        if(this.data.ip - this.data.st <= num && this.data.op - this.data.st > num)\r\n        {\r\n            if(this.isInRange !== true){\r\n                this.globalData._mdf = true;\r\n                this._mdf = true;\r\n                this.isInRange = true;\r\n                this.show();\r\n            }\r\n        } else {\r\n            if(this.isInRange !== false){\r\n                this.globalData._mdf = true;\r\n                this.isInRange = false;\r\n                this.hide();\r\n            }\r\n        }\r\n    },\r\n    renderRenderable: function() {\r\n        this.maskManager.renderFrame(this.finalTransform.mat);\r\n        this.renderableEffectsManager.renderFrame(this._isFirstFrame);\r\n    },\r\n    sourceRectAtTime: function(){\r\n        return {\r\n            top:0,\r\n            left:0,\r\n            width:100,\r\n            height:100\r\n        };\r\n    },\r\n    getLayerSize: function(){\r\n        if(this.data.ty === 5){\r\n            return {w:this.data.textData.width,h:this.data.textData.height};\r\n        }else{\r\n            return {w:this.data.width,h:this.data.height};\r\n        }\r\n    }\r\n};\r\nfunction RenderableDOMElement() {}\r\n\r\n(function(){\r\n    var _prototype = {\r\n        initElement: function(data,globalData,comp) {\r\n            this.initFrame();\r\n            this.initBaseData(data, globalData, comp);\r\n            this.initTransform(data, globalData, comp);\r\n            this.initHierarchy();\r\n            this.initRenderable();\r\n            this.initRendererElement();\r\n            this.createContainerElements();\r\n            this.addMasks();\r\n            this.createContent();\r\n            this.hide();\r\n        },\r\n        hide: function(){\r\n            if (!this.hidden && (!this.isInRange || this.isTransparent)) {\r\n                this.layerElement.style.display = 'none';\r\n                this.hidden = true;\r\n            }\r\n        },\r\n        show: function(){\r\n            if (this.isInRange && !this.isTransparent){\r\n                if (!this.data.hd) {\r\n                    this.layerElement.style.display = 'block';\r\n                }\r\n                this.hidden = false;\r\n                this._isFirstFrame = true;\r\n                this.maskManager._isFirstFrame = true;\r\n            }\r\n        },\r\n        renderFrame: function() {\r\n            //If it is exported as hidden (data.hd === true) no need to render\r\n            //If it is not visible no need to render\r\n            if (this.data.hd || this.hidden) {\r\n                return;\r\n            }\r\n            this.renderTransform();\r\n            this.renderRenderable();\r\n            this.renderElement();\r\n            this.renderInnerContent();\r\n            if (this._isFirstFrame) {\r\n                this._isFirstFrame = false;\r\n            }\r\n        },\r\n        renderInnerContent: function() {},\r\n        prepareFrame: function(num) {\r\n            this._mdf = false;\r\n            this.prepareRenderableFrame(num);\r\n            this.prepareProperties(num, this.isInRange);\r\n            this.checkTransparency();\r\n        },\r\n        destroy: function(){\r\n            this.innerElem =  null;\r\n            this.destroyBaseElement();\r\n        }\r\n    };\r\n    extendPrototype([RenderableElement, createProxyFunction(_prototype)], RenderableDOMElement);\r\n}());\r\nfunction ProcessedElement(element, position) {\r\n\tthis.elem = element;\r\n\tthis.pos = position;\r\n}\r\nfunction SVGStyleData(data, level) {\r\n\tthis.data = data;\r\n\tthis.type = data.ty;\r\n\tthis.d = '';\r\n\tthis.lvl = level;\r\n\tthis._mdf = false;\r\n\tthis.closed = false;\r\n\tthis.pElem = createNS('path');\r\n\tthis.msElem = null;\r\n}\r\n\r\nSVGStyleData.prototype.reset = function() {\r\n\tthis.d = '';\r\n\tthis._mdf = false;\r\n};\r\nfunction SVGShapeData(transformers, level, shape) {\r\n    this.caches = [];\r\n    this.styles = [];\r\n    this.transformers = transformers;\r\n    this.lStr = '';\r\n    this.sh = shape;\r\n    this.lvl = level;\r\n}\r\nfunction SVGTransformData(mProps, op) {\r\n\tthis.transform = {\r\n\t\tmProps: mProps,\r\n\t\top: op\r\n\t};\r\n\tthis.elements = [];\r\n}\r\nfunction SVGStrokeStyleData(elem, data, dynamicProperties, styleOb){\r\n\tthis.o = PropertyFactory.getProp(elem,data.o,0,0.01,dynamicProperties);\r\n\tthis.w = PropertyFactory.getProp(elem,data.w,0,null,dynamicProperties);\r\n\tthis.d = new DashProperty(elem,data.d||{},'svg',dynamicProperties);\r\n\tthis.c = PropertyFactory.getProp(elem,data.c,1,255,dynamicProperties);\r\n\tthis.style = styleOb;\r\n}\r\nfunction SVGFillStyleData(elem, data, dynamicProperties, styleOb){\r\n\tthis.o = PropertyFactory.getProp(elem,data.o,0,0.01,dynamicProperties);\r\n\tthis.c = PropertyFactory.getProp(elem,data.c,1,255,dynamicProperties);\r\n\tthis.style = styleOb;\r\n}\r\nfunction SVGGradientFillStyleData(elem, data, dynamicProperties, styleOb){\r\n    this.initGradientData(elem, data, dynamicProperties, styleOb);\r\n}\r\n\r\nSVGGradientFillStyleData.prototype.initGradientData = function(elem, data, dynamicProperties, styleOb){\r\n    this.o = PropertyFactory.getProp(elem,data.o,0,0.01,dynamicProperties);\r\n    this.s = PropertyFactory.getProp(elem,data.s,1,null,dynamicProperties);\r\n    this.e = PropertyFactory.getProp(elem,data.e,1,null,dynamicProperties);\r\n    this.h = PropertyFactory.getProp(elem,data.h||{k:0},0,0.01,dynamicProperties);\r\n    this.a = PropertyFactory.getProp(elem,data.a||{k:0},0,degToRads,dynamicProperties);\r\n    this.g = new GradientProperty(elem,data.g,dynamicProperties);\r\n    this.style = styleOb;\r\n    this.stops = [];\r\n    this.setGradientData(styleOb.pElem, data);\r\n    this.setGradientOpacity(data, styleOb);\r\n\r\n};\r\n\r\nSVGGradientFillStyleData.prototype.setGradientData = function(pathElement,data){\r\n\r\n    var gradientId = 'gr_'+randomString(10);\r\n    var gfill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');\r\n    gfill.setAttribute('id',gradientId);\r\n    gfill.setAttribute('spreadMethod','pad');\r\n    gfill.setAttribute('gradientUnits','userSpaceOnUse');\r\n    var stops = [];\r\n    var stop, j, jLen;\r\n    jLen = data.g.p*4;\r\n    for(j=0;j<jLen;j+=4){\r\n        stop = createNS('stop');\r\n        gfill.appendChild(stop);\r\n        stops.push(stop);\r\n    }\r\n    pathElement.setAttribute( data.ty === 'gf' ? 'fill':'stroke','url(#'+gradientId+')');\r\n    \r\n    this.gf = gfill;\r\n    this.cst = stops;\r\n};\r\n\r\nSVGGradientFillStyleData.prototype.setGradientOpacity = function(data, styleOb){\r\n    if(this.g._hasOpacity && !this.g._collapsable){\r\n        var stop, j, jLen;\r\n        var mask = createNS(\"mask\");\r\n        var maskElement = createNS( 'path');\r\n        mask.appendChild(maskElement);\r\n        var opacityId = 'op_'+randomString(10);\r\n        var maskId = 'mk_'+randomString(10);\r\n        mask.setAttribute('id',maskId);\r\n        var opFill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');\r\n        opFill.setAttribute('id',opacityId);\r\n        opFill.setAttribute('spreadMethod','pad');\r\n        opFill.setAttribute('gradientUnits','userSpaceOnUse');\r\n        jLen = data.g.k.k[0].s ? data.g.k.k[0].s.length : data.g.k.k.length;\r\n        var stops = this.stops;\r\n        for(j=data.g.p*4;j<jLen;j+=2){\r\n            stop = createNS('stop');\r\n            stop.setAttribute('stop-color','rgb(255,255,255)');\r\n            opFill.appendChild(stop);\r\n            stops.push(stop);\r\n        }\r\n        maskElement.setAttribute( data.ty === 'gf' ? 'fill':'stroke','url(#'+opacityId+')');\r\n        this.of = opFill;\r\n        this.ms = mask;\r\n        this.ost = stops;\r\n        this.maskId = maskId;\r\n        styleOb.msElem = maskElement;\r\n    }\r\n};\r\nfunction SVGGradientStrokeStyleData(elem, data, dynamicProperties, styleOb){\r\n\tthis.w = PropertyFactory.getProp(elem,data.w,0,null,dynamicProperties);\r\n\tthis.d = new DashProperty(elem,data.d||{},'svg',dynamicProperties);\r\n    this.initGradientData(elem, data, dynamicProperties, styleOb);\r\n}\r\n\r\nSVGGradientStrokeStyleData.prototype.initGradientData = SVGGradientFillStyleData.prototype.initGradientData;\r\nSVGGradientStrokeStyleData.prototype.setGradientData = SVGGradientFillStyleData.prototype.setGradientData;\r\nSVGGradientStrokeStyleData.prototype.setGradientOpacity = SVGGradientFillStyleData.prototype.setGradientOpacity;\r\nfunction ShapeGroupData() {\r\n\tthis.it = [];\r\n    this.prevViewData = [];\r\n    this.gr = createNS('g');\r\n}\r\nfunction BaseElement(){\r\n}\r\nBaseElement.prototype.checkMasks = function(){\r\n    if(!this.data.hasMask){\r\n        return false;\r\n    }\r\n    var i = 0, len = this.data.masksProperties.length;\r\n    while(i<len) {\r\n        if((this.data.masksProperties[i].mode !== 'n' && this.data.masksProperties[i].cl !== false)) {\r\n            return true;\r\n        }\r\n        i += 1;\r\n    }\r\n    return false;\r\n};\r\n\r\nBaseElement.prototype.initExpressions = function(){\r\n    this.layerInterface = LayerExpressionInterface(this);\r\n    if(this.data.hasMask && this.maskManager) {\r\n        this.layerInterface.registerMaskInterface(this.maskManager);\r\n    }\r\n    var effectsInterface = EffectsExpressionInterface.createEffectsInterface(this,this.layerInterface);\r\n    this.layerInterface.registerEffectsInterface(effectsInterface);\r\n\r\n    if(this.data.ty === 0 || this.data.xt){\r\n        this.compInterface = CompExpressionInterface(this);\r\n    } else if(this.data.ty === 4){\r\n        this.layerInterface.shapeInterface = ShapeExpressionInterface(this.shapesData,this.itemsData,this.layerInterface);\r\n        this.layerInterface.content = this.layerInterface.shapeInterface;\r\n    } else if(this.data.ty === 5){\r\n        this.layerInterface.textInterface = TextExpressionInterface(this);\r\n        this.layerInterface.text = this.layerInterface.textInterface;\r\n    }\r\n};\r\n\r\nBaseElement.prototype.blendModeEnums = {\r\n    1:'multiply',\r\n    2:'screen',\r\n    3:'overlay',\r\n    4:'darken',\r\n    5:'lighten',\r\n    6:'color-dodge',\r\n    7:'color-burn',\r\n    8:'hard-light',\r\n    9:'soft-light',\r\n    10:'difference',\r\n    11:'exclusion',\r\n    12:'hue',\r\n    13:'saturation',\r\n    14:'color',\r\n    15:'luminosity'\r\n};\r\n\r\nBaseElement.prototype.getBlendMode = function(){\r\n    return this.blendModeEnums[this.data.bm] || '';\r\n};\r\n\r\nBaseElement.prototype.setBlendMode = function(){\r\n    var blendModeValue = this.getBlendMode();\r\n    var elem = this.baseElement || this.layerElement;\r\n\r\n    elem.style['mix-blend-mode'] = blendModeValue;\r\n};\r\n\r\nBaseElement.prototype.initBaseData = function(data, globalData, comp){\r\n    this.globalData = globalData;\r\n    this.comp = comp;\r\n    this.data = data;\r\n    this.layerId = 'ly_'+randomString(10);\r\n    \r\n    //Stretch factor for old animations missing this property.\r\n    if(!this.data.sr){\r\n        this.data.sr = 1;\r\n    }\r\n    // effects manager\r\n    this.effectsManager = new EffectsManager(this.data,this,this.dynamicProperties);\r\n    \r\n};\r\n\r\nBaseElement.prototype.getType = function(){\r\n    return this.type;\r\n};\r\n\r\nfunction NullElement(data,globalData,comp){\r\n    this.initFrame();\r\n\tthis.initBaseData(data, globalData, comp);\r\n    this.initFrame();\r\n    this.initTransform(data, globalData, comp);\r\n    this.initHierarchy();\r\n}\r\n\r\nNullElement.prototype.prepareFrame = function(num) {\r\n    this.prepareProperties(num, true);\r\n};\r\n\r\nNullElement.prototype.renderFrame = function() {\r\n};\r\n\r\nNullElement.prototype.getBaseElement = function() {\r\n\treturn null;\r\n};\r\n\r\nNullElement.prototype.destroy = function() {\r\n};\r\n\r\nNullElement.prototype.sourceRectAtTime = function() {\r\n};\r\n\r\nNullElement.prototype.hide = function() {\r\n};\r\n\r\nextendPrototype([BaseElement,TransformElement,HierarchyElement,FrameElement], NullElement);\r\n\r\nfunction SVGBaseElement(){\r\n}\r\n\r\nSVGBaseElement.prototype = {\r\n    initRendererElement: function() {\r\n        this.layerElement = createNS('g');\r\n    },\r\n    createContainerElements: function(){\r\n        this.matteElement = createNS('g');\r\n        this.transformedElement = this.layerElement;\r\n        this.maskedElement = this.layerElement;\r\n        this._sizeChanged = false;\r\n        var layerElementParent = null;\r\n        //If this layer acts as a mask for the following layer\r\n        var filId, fil, gg;\r\n        if (this.data.td) {\r\n            if (this.data.td == 3 || this.data.td == 1) {\r\n                var masker = createNS('mask');\r\n                masker.setAttribute('id', this.layerId);\r\n                masker.setAttribute('mask-type', this.data.td == 3 ? 'luminance' : 'alpha');\r\n                masker.appendChild(this.layerElement);\r\n                layerElementParent = masker;\r\n                this.globalData.defs.appendChild(masker);\r\n                // This is only for IE and Edge when mask if of type alpha\r\n                if (!featureSupport.maskType && this.data.td == 1) {\r\n                    masker.setAttribute('mask-type', 'luminance');\r\n                    filId = randomString(10);\r\n                    fil = filtersFactory.createFilter(filId);\r\n                    this.globalData.defs.appendChild(fil);\r\n                    fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\r\n                    gg = createNS('g');\r\n                    gg.appendChild(this.layerElement);\r\n                    layerElementParent = gg;\r\n                    masker.appendChild(gg);\r\n                    gg.setAttribute('filter','url(' + locationHref + '#' + filId + ')');\r\n                }\r\n            } else if(this.data.td == 2) {\r\n                var maskGroup = createNS('mask');\r\n                maskGroup.setAttribute('id', this.layerId);\r\n                maskGroup.setAttribute('mask-type','alpha');\r\n                var maskGrouper = createNS('g');\r\n                maskGroup.appendChild(maskGrouper);\r\n                filId = randomString(10);\r\n                fil = filtersFactory.createFilter(filId);\r\n                ////\r\n\r\n                var feColorMatrix = createNS('feColorMatrix');\r\n                feColorMatrix.setAttribute('type', 'matrix');\r\n                feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');\r\n                feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 -1 1');\r\n                fil.appendChild(feColorMatrix);\r\n\r\n                ////\r\n                /*var feCTr = createNS('feComponentTransfer');\r\n                feCTr.setAttribute('in','SourceGraphic');\r\n                fil.appendChild(feCTr);\r\n                var feFunc = createNS('feFuncA');\r\n                feFunc.setAttribute('type','table');\r\n                feFunc.setAttribute('tableValues','1.0 0.0');\r\n                feCTr.appendChild(feFunc);*/\r\n                this.globalData.defs.appendChild(fil);\r\n                var alphaRect = createNS('rect');\r\n                alphaRect.setAttribute('width',  this.comp.data.w);\r\n                alphaRect.setAttribute('height', this.comp.data.h);\r\n                alphaRect.setAttribute('x','0');\r\n                alphaRect.setAttribute('y','0');\r\n                alphaRect.setAttribute('fill','#ffffff');\r\n                alphaRect.setAttribute('opacity','0');\r\n                maskGrouper.setAttribute('filter', 'url(' + locationHref + '#'+filId+')');\r\n                maskGrouper.appendChild(alphaRect);\r\n                maskGrouper.appendChild(this.layerElement);\r\n                layerElementParent = maskGrouper;\r\n                if (!featureSupport.maskType) {\r\n                    maskGroup.setAttribute('mask-type', 'luminance');\r\n                    fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\r\n                    gg = createNS('g');\r\n                    maskGrouper.appendChild(alphaRect);\r\n                    gg.appendChild(this.layerElement);\r\n                    layerElementParent = gg;\r\n                    maskGrouper.appendChild(gg);\r\n                }\r\n                this.globalData.defs.appendChild(maskGroup);\r\n            }\r\n        } else if (this.data.tt) {\r\n            this.matteElement.appendChild(this.layerElement);\r\n            layerElementParent = this.matteElement;\r\n            this.baseElement = this.matteElement;\r\n        } else {\r\n            this.baseElement = this.layerElement;\r\n        }\r\n        if (this.data.ln) {\r\n            this.layerElement.setAttribute('id', this.data.ln);\r\n        }\r\n        if (this.data.cl) {\r\n            this.layerElement.setAttribute('class', this.data.cl);\r\n        }\r\n        //Clipping compositions to hide content that exceeds boundaries. If collapsed transformations is on, component should not be clipped\r\n        if (this.data.ty === 0 && !this.data.hd) {\r\n            var cp = createNS( 'clipPath');\r\n            var pt = createNS('path');\r\n            pt.setAttribute('d','M0,0 L' + this.data.w + ',0' + ' L' + this.data.w + ',' + this.data.h + ' L0,' + this.data.h + 'z');\r\n            var clipId = 'cp_'+randomString(8);\r\n            cp.setAttribute('id',clipId);\r\n            cp.appendChild(pt);\r\n            this.globalData.defs.appendChild(cp);\r\n\r\n            if (this.checkMasks()) {\r\n                var cpGroup = createNS('g');\r\n                cpGroup.setAttribute('clip-path','url(' + locationHref + '#'+clipId + ')');\r\n                cpGroup.appendChild(this.layerElement);\r\n                this.transformedElement = cpGroup;\r\n                if (layerElementParent) {\r\n                    layerElementParent.appendChild(this.transformedElement);\r\n                } else {\r\n                    this.baseElement = this.transformedElement;\r\n                }\r\n            } else {\r\n                this.layerElement.setAttribute('clip-path','url(' + locationHref + '#'+clipId+')');\r\n            }\r\n            \r\n        }\r\n        if (this.data.bm !== 0) {\r\n            this.setBlendMode();\r\n        }\r\n        this.renderableEffectsManager = new SVGEffects(this);\r\n\r\n    },\r\n    renderElement: function() {\r\n        if (this.finalTransform._matMdf) {\r\n            this.transformedElement.setAttribute('transform', this.finalTransform.mat.to2dCSS());\r\n        }\r\n        if (this.finalTransform._opMdf) {\r\n            this.transformedElement.setAttribute('opacity', this.finalTransform.mProp.o.v);\r\n        }\r\n    },\r\n    destroyBaseElement: function() {\r\n        this.layerElement = null;\r\n        this.matteElement = null;\r\n        this.maskManager.destroy();\r\n    },\r\n    getBaseElement: function() {\r\n        if (this.data.hd) {\r\n            return null;\r\n        }\r\n        return this.baseElement;\r\n    },\r\n    addMasks: function() {\r\n        this.maskManager = new MaskElement(this.data, this, this.globalData, this.dynamicProperties);\r\n    },\r\n    setMatte: function(id) {\r\n        if (!this.matteElement) {\r\n            return;\r\n        }\r\n        this.matteElement.setAttribute(\"mask\", \"url(\" + locationHref + \"#\" + id + \")\");\r\n    }\r\n};\r\nfunction IShapeElement(){\r\n}\r\n\r\nIShapeElement.prototype = {\r\n    addShapeToModifiers: function(data) {\r\n        var i, len = this.shapeModifiers.length;\r\n        for(i=0;i<len;i+=1){\r\n            this.shapeModifiers[i].addShape(data);\r\n        }\r\n    },\r\n    renderModifiers: function() {\r\n        if(!this.shapeModifiers.length){\r\n            return;\r\n        }\r\n        var i, len = this.shapes.length;\r\n        for(i=0;i<len;i+=1){\r\n            this.shapes[i].reset();\r\n        }\r\n\r\n        len = this.shapeModifiers.length;\r\n        for(i=len-1;i>=0;i-=1){\r\n            this.shapeModifiers[i].processShapes(this._isFirstFrame);\r\n        }\r\n    },\r\n    lcEnum: {\r\n        '1': 'butt',\r\n        '2': 'round',\r\n        '3': 'square'\r\n    },\r\n    ljEnum: {\r\n        '1': 'miter',\r\n        '2': 'round',\r\n        '3': 'butt'\r\n    },\r\n    searchProcessedElement: function(elem){\r\n        var i = 0, len = this.processedElements.length;\r\n        while(i < len){\r\n            if(this.processedElements[i].elem === elem){\r\n                return this.processedElements[i].pos;\r\n            }\r\n            i += 1;\r\n        }\r\n        return 0;\r\n    },\r\n    addProcessedElement: function(elem, pos){\r\n        var i = this.processedElements.length;\r\n        while(i){\r\n            i -= 1;\r\n            if(this.processedElements[i].elem === elem){\r\n                this.processedElements[i].pos = pos;\r\n                break;\r\n            }\r\n        }\r\n        if(i === 0){\r\n            this.processedElements.push(new ProcessedElement(elem, pos));\r\n        }\r\n    },\r\n    prepareFrame: function(num) {\r\n        this.prepareRenderableFrame(num);\r\n        this.prepareProperties(num, this.isInRange);\r\n    },\r\n    buildShapeString: function(pathNodes, length, closed, mat) {\r\n        var i, shapeString = '';\r\n        for(i = 1; i < length; i += 1) {\r\n            if (i === 1) {\r\n                shapeString += \" M\" + mat.applyToPointStringified(pathNodes.v[0][0], pathNodes.v[0][1]);\r\n            }\r\n            shapeString += \" C\" + mat.applyToPointStringified(pathNodes.o[i - 1][0], pathNodes.o[i - 1][1]) + \" \" + mat.applyToPointStringified(pathNodes.i[i][0], pathNodes.i[i][1]) + \" \" + mat.applyToPointStringified(pathNodes.v[i][0], pathNodes.v[i][1]);\r\n        }\r\n        if (length === 1) {\r\n            shapeString += \" M\" + mat.applyToPointStringified(pathNodes.v[0][0], pathNodes.v[0][1]);\r\n        }\r\n        if (closed && length) {\r\n            shapeString += \" C\" + mat.applyToPointStringified(pathNodes.o[i - 1][0], pathNodes.o[i - 1][1]) + \" \" + mat.applyToPointStringified(pathNodes.i[0][0], pathNodes.i[0][1]) + \" \" + mat.applyToPointStringified(pathNodes.v[0][0], pathNodes.v[0][1]);\r\n            shapeString += 'z';\r\n        }\r\n        return shapeString;\r\n    }\r\n};\r\nfunction ITextElement(){\r\n}\r\n\r\nITextElement.prototype.initElement = function(data,globalData,comp){\r\n    this.lettersChangedFlag = true;\r\n    this.initFrame();\r\n    this.initBaseData(data, globalData, comp);\r\n    this.textAnimator = new TextAnimatorProperty(data.t, this.renderType, this);\r\n    this.textProperty = new TextProperty(this, data.t, this.dynamicProperties);\r\n    this.initTransform(data, globalData, comp);\r\n    this.initHierarchy();\r\n    this.initRenderable();\r\n    this.initRendererElement();\r\n    this.createContainerElements();\r\n    this.addMasks();\r\n    this.createContent();\r\n    this.hide();\r\n    this.textAnimator.searchProperties(this.dynamicProperties);\r\n};\r\n\r\nITextElement.prototype.prepareFrame = function(num) {\r\n    this._mdf = false;\r\n    this.prepareRenderableFrame(num);\r\n    this.prepareProperties(num, this.isInRange);\r\n    if(this.textProperty._mdf || this.textProperty._isFirstFrame) {\r\n        this.buildNewText();\r\n        this.textProperty._isFirstFrame = false;\r\n    }\r\n};\r\n\r\nITextElement.prototype.createPathShape = function(matrixHelper, shapes) {\r\n    var j,jLen = shapes.length;\r\n    var k, kLen, pathNodes;\r\n    var shapeStr = '';\r\n    for(j=0;j<jLen;j+=1){\r\n        pathNodes = shapes[j].ks.k;\r\n        shapeStr += this.buildShapeString(pathNodes, pathNodes.i.length, true, matrixHelper);\r\n    }\r\n    return shapeStr;\r\n};\r\n\r\nITextElement.prototype.updateDocumentData = function(newData, index) {\r\n    this.textProperty.updateDocumentData(newData, index);\r\n    this.buildNewText();\r\n    this.renderInnerContent();\r\n};\r\n\r\nITextElement.prototype.canResizeFont = function(_canResize) {\r\n    this.textProperty.canResizeFont(_canResize);\r\n    this.buildNewText();\r\n    this.renderInnerContent();\r\n};\r\n\r\nITextElement.prototype.setMinimumFontSize = function(_fontSize) {\r\n    this.textProperty.setMinimumFontSize(_fontSize);\r\n    this.buildNewText();\r\n    this.renderInnerContent();\r\n};\r\n\r\nITextElement.prototype.applyTextPropertiesToMatrix = function(documentData, matrixHelper, lineNumber, xPos, yPos) {\r\n    if(documentData.ps){\r\n        matrixHelper.translate(documentData.ps[0],documentData.ps[1] + documentData.ascent,0);\r\n    }\r\n    matrixHelper.translate(0,-documentData.ls,0);\r\n    switch(documentData.j){\r\n        case 1:\r\n            matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]),0,0);\r\n            break;\r\n        case 2:\r\n            matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber] )/2,0,0);\r\n            break;\r\n    }\r\n    matrixHelper.translate(xPos, yPos, 0);\r\n};\r\n\r\nITextElement.prototype.buildColor = function(colorData) {\r\n    return 'rgb(' + Math.round(colorData[0]*255) + ',' + Math.round(colorData[1]*255) + ',' + Math.round(colorData[2]*255) + ')';\r\n};\r\n\r\nITextElement.prototype.buildShapeString = IShapeElement.prototype.buildShapeString;\r\n\r\nITextElement.prototype.emptyProp = new LetterProps();\r\n\r\nITextElement.prototype.destroy = function(){\r\n    \r\n};\r\nfunction ICompElement(){}\r\n\r\nextendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement, RenderableDOMElement], ICompElement);\r\n\r\nICompElement.prototype.initElement = function(data,globalData,comp) {\r\n    this.initFrame();\r\n    this.initBaseData(data, globalData, comp);\r\n    this.initTransform(data, globalData, comp);\r\n    this.initRenderable();\r\n    this.initHierarchy();\r\n    this.initRendererElement();\r\n    this.createContainerElements();\r\n    this.addMasks();\r\n    if(this.data.xt || !globalData.progressiveLoad){\r\n        this.buildAllItems();\r\n    }\r\n    this.hide();\r\n};\r\n\r\n/*ICompElement.prototype.hide = function(){\r\n    if(!this.hidden){\r\n        this.hideElement();\r\n        var i,len = this.elements.length;\r\n        for( i = 0; i < len; i+=1 ){\r\n            if(this.elements[i]){\r\n                this.elements[i].hide();\r\n            }\r\n        }\r\n    }\r\n};*/\r\n\r\nICompElement.prototype.prepareFrame = function(num){\r\n    this._mdf = false;\r\n    this.prepareRenderableFrame(num);\r\n    this.prepareProperties(num, this.isInRange);\r\n    if(!this.isInRange && !this.data.xt){\r\n        return;\r\n    }\r\n\r\n    if (!this.tm._placeholder) {\r\n        var timeRemapped = this.tm.v;\r\n        if(timeRemapped === this.data.op){\r\n            timeRemapped = this.data.op - 1;\r\n        }\r\n        this.renderedFrame = timeRemapped;\r\n    } else {\r\n        this.renderedFrame = num/this.data.sr;\r\n    }\r\n    var i,len = this.elements.length;\r\n    if(!this.completeLayers){\r\n        this.checkLayers(this.renderedFrame);\r\n    }\r\n    for( i = 0; i < len; i+=1 ){\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].prepareFrame(this.renderedFrame - this.layers[i].st);\r\n            if(this.elements[i]._mdf) {\r\n                this._mdf = true;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.renderInnerContent = function() {\r\n    var i,len = this.layers.length;\r\n    for( i = 0; i < len; i += 1 ){\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].renderFrame();\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.setElements = function(elems){\r\n    this.elements = elems;\r\n};\r\n\r\nICompElement.prototype.getElements = function(){\r\n    return this.elements;\r\n};\r\n\r\nICompElement.prototype.destroyElements = function(){\r\n    var i,len = this.layers.length;\r\n    for( i = 0; i < len; i+=1 ){\r\n        if(this.elements[i]){\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.destroy = function(){\r\n    this.destroyElements();\r\n    this.destroyBaseElement();\r\n};\r\n\r\nfunction IImageElement(data,globalData,comp){\r\n    this.assetData = globalData.getAssetData(data.refId);\r\n    this.initElement(data,globalData,comp);\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,SVGBaseElement,HierarchyElement,FrameElement,RenderableDOMElement], IImageElement);\r\n\r\nIImageElement.prototype.createContent = function(){\r\n\r\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\r\n\r\n    this.innerElem = createNS('image');\r\n    this.innerElem.setAttribute('width',this.assetData.w+\"px\");\r\n    this.innerElem.setAttribute('height',this.assetData.h+\"px\");\r\n    this.innerElem.setAttribute('preserveAspectRatio','xMidYMid slice');\r\n    this.innerElem.setAttributeNS('http://www.w3.org/1999/xlink','href',assetPath);\r\n    \r\n    this.layerElement.appendChild(this.innerElem);\r\n};\r\n\r\nfunction ISolidElement(data,globalData,comp){\r\n    this.initElement(data,globalData,comp);\r\n}\r\nextendPrototype([IImageElement], ISolidElement);\r\n\r\nISolidElement.prototype.createContent = function(){\r\n\r\n    var rect = createNS('rect');\r\n    ////rect.style.width = this.data.sw;\r\n    ////rect.style.height = this.data.sh;\r\n    ////rect.style.fill = this.data.sc;\r\n    rect.setAttribute('width',this.data.sw);\r\n    rect.setAttribute('height',this.data.sh);\r\n    rect.setAttribute('fill',this.data.sc);\r\n    this.layerElement.appendChild(rect);\r\n};\r\nfunction SVGCompElement(data,globalData,comp){\r\n    this.layers = data.layers;\r\n    this.supports3d = true;\r\n    this.completeLayers = false;\r\n    this.pendingElements = [];\r\n    this.elements = this.layers ? createSizedArray(this.layers.length) : [];\r\n    //this.layerElement = createNS('g');\r\n    this.initElement(data,globalData,comp);\r\n    this.tm = data.tm ? PropertyFactory.getProp(this,data.tm,0,globalData.frameRate,this.dynamicProperties) : {_placeholder:true};\r\n}\r\n\r\nextendPrototype([SVGRenderer, ICompElement, SVGBaseElement], SVGCompElement);\r\nfunction SVGTextElement(data,globalData,comp){\r\n    this.textSpans = [];\r\n    this.renderType = 'svg';\r\n    this.initElement(data,globalData,comp);\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,SVGBaseElement,HierarchyElement,FrameElement,RenderableDOMElement,ITextElement], SVGTextElement);\r\n\r\nSVGTextElement.prototype.createContent = function(){\r\n\r\n    if (this.data.singleShape && !this.globalData.fontManager.chars) {\r\n        this.textContainer = createNS('text');\r\n    }\r\n};\r\n\r\nSVGTextElement.prototype.buildTextContents = function(textArray) {\r\n    var i = 0, len = textArray.length;\r\n    var textContents = [], currentTextContent = '';\r\n    while (i < len) {\r\n        if(textArray[i] === String.fromCharCode(13)) {\r\n            textContents.push(currentTextContent);\r\n            currentTextContent = '';\r\n        } else {\r\n            currentTextContent += textArray[i];\r\n        }\r\n        i += 1;\r\n    }\r\n    textContents.push(currentTextContent);\r\n    return textContents;\r\n}\r\n\r\nSVGTextElement.prototype.buildNewText = function(){\r\n    var i, len;\r\n\r\n    var documentData = this.textProperty.currentData;\r\n    this.renderedLetters = createSizedArray(documentData ? documentData.l.length : 0);\r\n    if(documentData.fc) {\r\n        this.layerElement.setAttribute('fill', this.buildColor(documentData.fc));\r\n    }else{\r\n        this.layerElement.setAttribute('fill', 'rgba(0,0,0,0)');\r\n    }\r\n    if(documentData.sc){\r\n        this.layerElement.setAttribute('stroke', this.buildColor(documentData.sc));\r\n        this.layerElement.setAttribute('stroke-width', documentData.sw);\r\n    }\r\n    this.layerElement.setAttribute('font-size', documentData.finalSize);\r\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\r\n    if(fontData.fClass){\r\n        this.layerElement.setAttribute('class',fontData.fClass);\r\n    } else {\r\n        this.layerElement.setAttribute('font-family', fontData.fFamily);\r\n        var fWeight = documentData.fWeight, fStyle = documentData.fStyle;\r\n        this.layerElement.setAttribute('font-style', fStyle);\r\n        this.layerElement.setAttribute('font-weight', fWeight);\r\n    }\r\n\r\n    var letters = documentData.l || [];\r\n    var usesGlyphs = this.globalData.fontManager.chars;\r\n    len = letters.length;\r\n    if(!len){\r\n        return;\r\n    }\r\n    var tSpan;\r\n    var matrixHelper = this.mHelper;\r\n    var shapes, shapeStr = '', singleShape = this.data.singleShape;\r\n    var xPos = 0, yPos = 0, firstLine = true;\r\n    var trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n    if(singleShape && !usesGlyphs && !documentData.sz) {\r\n        var tElement = this.textContainer;\r\n        var justify = 'start';\r\n        switch(documentData.j) {\r\n            case 1:\r\n                justify = 'end';\r\n                break;\r\n            case 2:\r\n                justify = 'middle';\r\n                break;\r\n        }\r\n        tElement.setAttribute('text-anchor',justify);\r\n        tElement.setAttribute('letter-spacing',trackingOffset);\r\n        var textContent = this.buildTextContents(documentData.finalText);\r\n        len = textContent.length;\r\n        yPos = documentData.ps ? documentData.ps[1] + documentData.ascent : 0;\r\n        for ( i = 0; i < len; i += 1) {\r\n            tSpan = this.textSpans[i] || createNS('tspan');\r\n            tSpan.textContent = textContent[i];\r\n            tSpan.setAttribute('x', 0);\r\n            tSpan.setAttribute('y', yPos);\r\n            tSpan.style.display = 'inherit';\r\n            tElement.appendChild(tSpan);\r\n            this.textSpans[i] = tSpan;\r\n            yPos += documentData.finalLineHeight;\r\n        }\r\n        \r\n        this.layerElement.appendChild(tElement);\r\n    } else {\r\n        var cachedSpansLength = this.textSpans.length;\r\n        var shapeData, charData;\r\n        for (i = 0; i < len; i += 1) {\r\n            if(!usesGlyphs || !singleShape || i === 0){\r\n                tSpan = cachedSpansLength > i ? this.textSpans[i] : createNS(usesGlyphs?'path':'text');\r\n                if (cachedSpansLength <= i) {\r\n                    tSpan.setAttribute('stroke-linecap', 'butt');\r\n                    tSpan.setAttribute('stroke-linejoin','round');\r\n                    tSpan.setAttribute('stroke-miterlimit','4');\r\n                    this.textSpans[i] = tSpan;\r\n                    this.layerElement.appendChild(tSpan);\r\n                }\r\n                tSpan.style.display = 'inherit';\r\n            }\r\n            \r\n            matrixHelper.reset();\r\n            matrixHelper.scale(documentData.finalSize / 100, documentData.finalSize / 100);\r\n            if (singleShape) {\r\n                if(letters[i].n) {\r\n                    xPos = -trackingOffset;\r\n                    yPos += documentData.yOffset;\r\n                    yPos += firstLine ? 1 : 0;\r\n                    firstLine = false;\r\n                }\r\n                this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\r\n                xPos += letters[i].l || 0;\r\n                //xPos += letters[i].val === ' ' ? 0 : trackingOffset;\r\n                xPos += trackingOffset;\r\n            }\r\n            if(usesGlyphs) {\r\n                charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\r\n                shapeData = charData && charData.data || {};\r\n                shapes = shapeData.shapes ? shapeData.shapes[0].it : [];\r\n                if(!singleShape){\r\n                    tSpan.setAttribute('d',this.createPathShape(matrixHelper,shapes));\r\n                } else {\r\n                    shapeStr += this.createPathShape(matrixHelper,shapes);\r\n                }\r\n            } else {\r\n                if(singleShape) {\r\n                    tSpan.setAttribute(\"transform\", \"translate(\" + matrixHelper.props[12] + \",\" + matrixHelper.props[13] + \")\");\r\n                }\r\n                tSpan.textContent = letters[i].val;\r\n                tSpan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\",\"preserve\");\r\n            }\r\n            //\r\n        }\r\n        if (singleShape) {\r\n            tSpan.setAttribute('d',shapeStr);\r\n        }\r\n    }\r\n    while (i < this.textSpans.length){\r\n        this.textSpans[i].style.display = 'none';\r\n        i += 1;\r\n    }\r\n    \r\n    this._sizeChanged = true;\r\n};\r\n\r\nSVGTextElement.prototype.sourceRectAtTime = function(time){\r\n    this.prepareFrame(this.comp.renderedFrame - this.data.st);\r\n    this.renderInnerContent();\r\n    if(this._sizeChanged){\r\n        this._sizeChanged = false;\r\n        var textBox = this.layerElement.getBBox();\r\n        this.bbox = {\r\n            top: textBox.y,\r\n            left: textBox.x,\r\n            width: textBox.width,\r\n            height: textBox.height\r\n        };\r\n    }\r\n    return this.bbox;\r\n};\r\n\r\nSVGTextElement.prototype.renderInnerContent = function(){\r\n\r\n    if(!this.data.singleShape){\r\n        this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\r\n        if(this.lettersChangedFlag || this.textAnimator.lettersChangedFlag){\r\n            this._sizeChanged = true;\r\n            var  i,len;\r\n            var renderedLetters = this.textAnimator.renderedLetters;\r\n\r\n            var letters = this.textProperty.currentData.l;\r\n\r\n            len = letters.length;\r\n            var renderedLetter, textSpan;\r\n            for(i=0;i<len;i+=1){\r\n                if(letters[i].n){\r\n                    continue;\r\n                }\r\n                renderedLetter = renderedLetters[i];\r\n                textSpan = this.textSpans[i];\r\n                if(renderedLetter._mdf.m) {\r\n                    textSpan.setAttribute('transform',renderedLetter.m);\r\n                }\r\n                if(renderedLetter._mdf.o) {\r\n                    textSpan.setAttribute('opacity',renderedLetter.o);\r\n                }\r\n                if(renderedLetter._mdf.sw){\r\n                    textSpan.setAttribute('stroke-width',renderedLetter.sw);\r\n                }\r\n                if(renderedLetter._mdf.sc){\r\n                    textSpan.setAttribute('stroke',renderedLetter.sc);\r\n                }\r\n                if(renderedLetter._mdf.fc){\r\n                    textSpan.setAttribute('fill',renderedLetter.fc);\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nfunction SVGShapeElement(data,globalData,comp){\r\n    //List of drawable elements\r\n    this.shapes = [];\r\n    // Full shape data\r\n    this.shapesData = data.shapes;\r\n    //List of styles that will be applied to shapes\r\n    this.stylesList = [];\r\n    //List of modifiers that will be applied to shapes\r\n    this.shapeModifiers = [];\r\n    //List of items in shape tree\r\n    this.itemsData = [];\r\n    //List of items in previous shape tree\r\n    this.processedElements = [];\r\n    this.initElement(data,globalData,comp);\r\n    //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\r\n    // List of elements that have been created\r\n    this.prevViewData = [];\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,SVGBaseElement,IShapeElement,HierarchyElement,FrameElement,RenderableDOMElement], SVGShapeElement);\r\n\r\nSVGShapeElement.prototype.initSecondaryElement = function() {\r\n};\r\n\r\nSVGShapeElement.prototype.identityMatrix = new Matrix();\r\n\r\nSVGShapeElement.prototype.buildExpressionInterface = function(){};\r\n\r\nSVGShapeElement.prototype.createContent = function(){\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement,this.dynamicProperties, 0, [], true);\r\n};\r\n\r\nSVGShapeElement.prototype.createStyleElement = function(data, level, dynamicProperties){\r\n    //TODO: prevent drawing of hidden styles\r\n    var elementData;\r\n    var styleOb = new SVGStyleData(data, level);\r\n\r\n    var pathElement = styleOb.pElem;\r\n    if(data.ty === 'st') {\r\n        elementData = new SVGStrokeStyleData(this, data, dynamicProperties, styleOb);\r\n    } else if(data.ty === 'fl') {\r\n        elementData = new SVGFillStyleData(this, data, dynamicProperties, styleOb);\r\n    } else if(data.ty === 'gf' || data.ty === 'gs') {\r\n        var gradientConstructor = data.ty === 'gf' ? SVGGradientFillStyleData : SVGGradientStrokeStyleData;\r\n        elementData = new gradientConstructor(this, data, dynamicProperties, styleOb);\r\n        this.globalData.defs.appendChild(elementData.gf);\r\n        if (elementData.maskId) {\r\n            this.globalData.defs.appendChild(elementData.ms);\r\n            this.globalData.defs.appendChild(elementData.of);\r\n            pathElement.setAttribute('mask','url(#' + elementData.maskId + ')');\r\n        }\r\n    }\r\n    \r\n    if(data.ty === 'st' || data.ty === 'gs') {\r\n        pathElement.setAttribute('stroke-linecap', this.lcEnum[data.lc] || 'round');\r\n        pathElement.setAttribute('stroke-linejoin',this.ljEnum[data.lj] || 'round');\r\n        pathElement.setAttribute('fill-opacity','0');\r\n        if(data.lj === 1) {\r\n            pathElement.setAttribute('stroke-miterlimit',data.ml);\r\n        }\r\n    }\r\n\r\n    if(data.r === 2) {\r\n        pathElement.setAttribute('fill-rule', 'evenodd');\r\n    }\r\n\r\n    if(data.ln){\r\n        pathElement.setAttribute('id',data.ln);\r\n    }\r\n    if(data.cl){\r\n        pathElement.setAttribute('class',data.cl);\r\n    }\r\n    this.stylesList.push(styleOb);\r\n    return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.createGroupElement = function(data) {\r\n    var elementData = new ShapeGroupData();\r\n    if(data.ln){\r\n        elementData.gr.setAttribute('id',data.ln);\r\n    }\r\n    return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.createTransformElement = function(data, dynamicProperties) {\r\n    return new SVGTransformData(TransformPropertyFactory.getTransformProperty(this,data,dynamicProperties), PropertyFactory.getProp(this,data.o,0,0.01,dynamicProperties));\r\n};\r\n\r\nSVGShapeElement.prototype.createShapeElement = function(data, ownTransformers, level, dynamicProperties) {\r\n    var ty = 4;\r\n    if(data.ty === 'rc'){\r\n        ty = 5;\r\n    }else if(data.ty === 'el'){\r\n        ty = 6;\r\n    }else if(data.ty === 'sr'){\r\n        ty = 7;\r\n    }\r\n    var shapeProperty = ShapePropertyFactory.getShapeProp(this,data,ty,dynamicProperties);\r\n    var elementData = new SVGShapeData(ownTransformers, level, shapeProperty);\r\n    this.shapes.push(elementData.sh);\r\n    this.addShapeToModifiers(elementData);\r\n    return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.setElementStyles = function(elementData){\r\n    var arr = elementData.styles;\r\n    var j, jLen = this.stylesList.length;\r\n    for (j = 0; j < jLen; j += 1) {\r\n        if (!this.stylesList[j].closed) {\r\n            arr.push(this.stylesList[j]);\r\n        }\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.reloadShapes = function(){\r\n    this._isFirstFrame = true;\r\n    var i, len = this.itemsData.length;\r\n    for( i = 0; i < len; i += 1) {\r\n        this.prevViewData[i] = this.itemsData[i];\r\n    }\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement,this.dynamicProperties, 0, [], true);\r\n    len = this.dynamicProperties.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        this.dynamicProperties[i].getValue();\r\n    }\r\n    this.renderModifiers();\r\n};\r\n\r\nSVGShapeElement.prototype.searchShapes = function(arr,itemsData,prevViewData,container,dynamicProperties, level, transformers, render){\r\n    var ownTransformers = [].concat(transformers);\r\n    var i, len = arr.length - 1;\r\n    var j, jLen;\r\n    var ownStyles = [], ownModifiers = [], styleOb, currentTransform, modifier, processedPos;\r\n    for(i=len;i>=0;i-=1){\r\n        processedPos = this.searchProcessedElement(arr[i]);\r\n        if(!processedPos){\r\n            arr[i]._render = render;\r\n        } else {\r\n            itemsData[i] = prevViewData[processedPos - 1];\r\n        }\r\n        if(arr[i].ty == 'fl' || arr[i].ty == 'st' || arr[i].ty == 'gf' || arr[i].ty == 'gs'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createStyleElement(arr[i], level, dynamicProperties);\r\n            } else {\r\n                itemsData[i].style.closed = false;\r\n            }\r\n            if(arr[i]._render){\r\n                container.appendChild(itemsData[i].style.pElem);\r\n            }\r\n            ownStyles.push(itemsData[i].style);\r\n        }else if(arr[i].ty == 'gr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createGroupElement(arr[i]);\r\n            } else {\r\n                jLen = itemsData[i].it.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    itemsData[i].prevViewData[j] = itemsData[i].it[j];\r\n                }\r\n            }\r\n            this.searchShapes(arr[i].it,itemsData[i].it,itemsData[i].prevViewData,itemsData[i].gr,dynamicProperties, level + 1, ownTransformers, render);\r\n            if(arr[i]._render){\r\n                container.appendChild(itemsData[i].gr);\r\n            }\r\n        }else if(arr[i].ty == 'tr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createTransformElement(arr[i], dynamicProperties);\r\n            }\r\n            currentTransform = itemsData[i].transform;\r\n            ownTransformers.push(currentTransform);\r\n        }else if(arr[i].ty == 'sh' || arr[i].ty == 'rc' || arr[i].ty == 'el' || arr[i].ty == 'sr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createShapeElement(arr[i], ownTransformers, level, dynamicProperties);\r\n            }\r\n            this.setElementStyles(itemsData[i]);\r\n\r\n        }else if(arr[i].ty == 'tm' || arr[i].ty == 'rd' || arr[i].ty == 'ms'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                modifier.init(this,arr[i],dynamicProperties);\r\n                itemsData[i] = modifier;\r\n                this.shapeModifiers.push(modifier);\r\n            } else {\r\n                modifier = itemsData[i];\r\n                modifier.closed = false;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        }else if(arr[i].ty == 'rp'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                itemsData[i] = modifier;\r\n                modifier.init(this,arr,i,itemsData,dynamicProperties);\r\n                this.shapeModifiers.push(modifier);\r\n                render = false;\r\n            }else{\r\n                modifier = itemsData[i];\r\n                modifier.closed = true;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        }\r\n        this.addProcessedElement(arr[i], i + 1);\r\n    }\r\n    len = ownStyles.length;\r\n    for(i=0;i<len;i+=1){\r\n        ownStyles[i].closed = true;\r\n    }\r\n    len = ownModifiers.length;\r\n    for(i=0;i<len;i+=1){\r\n        ownModifiers[i].closed = true;\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.renderInnerContent = function() {\r\n    this.renderModifiers();\r\n    var i, len = this.stylesList.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.stylesList[i].reset();\r\n    }\r\n    this.renderShape(this.shapesData, this.itemsData, this.layerElement);\r\n\r\n    for (i = 0; i < len; i += 1) {\r\n        if (this.stylesList[i]._mdf || this._isFirstFrame) {\r\n            if(this.stylesList[i].msElem){\r\n                this.stylesList[i].msElem.setAttribute('d', this.stylesList[i].d);\r\n                //Adding M0 0 fixes same mask bug on all browsers\r\n                this.stylesList[i].d = 'M0 0' + this.stylesList[i].d;\r\n            }\r\n            this.stylesList[i].pElem.setAttribute('d', this.stylesList[i].d || 'M0 0');\r\n        }\r\n    }\r\n};\r\n\r\n\r\nSVGShapeElement.prototype.renderShape = function(items, data, container) {\r\n    var i, len = items.length - 1;\r\n    var ty;\r\n    for(i=0;i<=len;i+=1){\r\n        ty = items[i].ty;\r\n        if(ty == 'tr'){\r\n            if(this._isFirstFrame || data[i].transform.op._mdf){\r\n                container.setAttribute('opacity',data[i].transform.op.v);\r\n            }\r\n            if(this._isFirstFrame || data[i].transform.mProps._mdf){\r\n                container.setAttribute('transform',data[i].transform.mProps.v.to2dCSS());\r\n            }\r\n        }else if(items[i]._render && (ty == 'sh' || ty == 'el' || ty == 'rc' || ty == 'sr')){\r\n            this.renderPath(data[i]);\r\n        }else if(ty == 'fl'){\r\n            this.renderFill(items[i],data[i]);\r\n        }else if(ty == 'gf'){\r\n            this.renderGradient(items[i],data[i]);\r\n        }else if(ty == 'gs'){\r\n            this.renderGradient(items[i],data[i]);\r\n            this.renderStroke(items[i],data[i]);\r\n        }else if(ty == 'st'){\r\n            this.renderStroke(items[i],data[i]);\r\n        }else if(ty == 'gr'){\r\n            this.renderShape(items[i].it,data[i].it, data[i].gr);\r\n        }else if(ty == 'tm'){\r\n            //\r\n        }\r\n    }\r\n\r\n};\r\n\r\nSVGShapeElement.prototype.renderPath = function(itemData){\r\n    var j, jLen,pathStringTransformed,redraw,pathNodes,l, lLen = itemData.styles.length;\r\n    var lvl = itemData.lvl;\r\n    var paths, mat, props, iterations, k;\r\n    for(l=0;l<lLen;l+=1){\r\n        redraw = itemData.sh._mdf || this._isFirstFrame;\r\n        if(itemData.styles[l].lvl < lvl){\r\n            mat = this.mHelper.reset();\r\n            iterations = lvl - itemData.styles[l].lvl;\r\n            k = itemData.transformers.length-1;\r\n            while(iterations > 0) {\r\n                redraw = itemData.transformers[k].mProps._mdf || redraw;\r\n                props = itemData.transformers[k].mProps.v.props;\r\n                mat.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\r\n                iterations --;\r\n                k --;\r\n            }\r\n        } else {\r\n            mat = this.identityMatrix;\r\n        }\r\n        paths = itemData.sh.paths;\r\n        jLen = paths._length;\r\n        if(redraw){\r\n            pathStringTransformed = '';\r\n            for(j=0;j<jLen;j+=1){\r\n                pathNodes = paths.shapes[j];\r\n                if(pathNodes && pathNodes._length){\r\n                    pathStringTransformed += this.buildShapeString(pathNodes, pathNodes._length, pathNodes.c, mat);\r\n                }\r\n            }\r\n            itemData.caches[l] = pathStringTransformed;\r\n        } else {\r\n            pathStringTransformed = itemData.caches[l];\r\n        }\r\n        itemData.styles[l].d += pathStringTransformed;\r\n        itemData.styles[l]._mdf = redraw || itemData.styles[l]._mdf;\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.renderFill = function(styleData,itemData){\r\n    var styleElem = itemData.style;\r\n\r\n    if(itemData.c._mdf || this._isFirstFrame){\r\n        styleElem.pElem.setAttribute('fill','rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')');\r\n    }\r\n    if(itemData.o._mdf || this._isFirstFrame){\r\n        styleElem.pElem.setAttribute('fill-opacity',itemData.o.v);\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.renderGradient = function(styleData, itemData) {\r\n    var gfill = itemData.gf;\r\n    var hasOpacity = itemData.g._hasOpacity;\r\n    var pt1 = itemData.s.v, pt2 = itemData.e.v;\r\n\r\n    if (itemData.o._mdf || this._isFirstFrame) {\r\n        var attr = styleData.ty === 'gf' ? 'fill-opacity' : 'stroke-opacity';\r\n        itemData.style.pElem.setAttribute(attr, itemData.o.v);\r\n    }\r\n    if (itemData.s._mdf || this._isFirstFrame) {\r\n        var attr1 = styleData.t === 1 ? 'x1' : 'cx';\r\n        var attr2 = attr1 === 'x1' ? 'y1' : 'cy';\r\n        gfill.setAttribute(attr1, pt1[0]);\r\n        gfill.setAttribute(attr2, pt1[1]);\r\n        if (hasOpacity && !itemData.g._collapsable) {\r\n            itemData.of.setAttribute(attr1, pt1[0]);\r\n            itemData.of.setAttribute(attr2, pt1[1]);\r\n        }\r\n    }\r\n    var stops, i, len, stop;\r\n    if (itemData.g._cmdf || this._isFirstFrame) {\r\n        stops = itemData.cst;\r\n        var cValues = itemData.g.c;\r\n        len = stops.length;\r\n        for (i = 0; i < len; i += 1){\r\n            stop = stops[i];\r\n            stop.setAttribute('offset', cValues[i * 4] + '%');\r\n            stop.setAttribute('stop-color','rgb('+ cValues[i * 4 + 1] + ',' + cValues[i * 4 + 2] + ','+cValues[i * 4 + 3] + ')');\r\n        }\r\n    }\r\n    if (hasOpacity && (itemData.g._omdf || this._isFirstFrame)) {\r\n        var oValues = itemData.g.o;\r\n        if(itemData.g._collapsable) {\r\n            stops = itemData.cst;\r\n        } else {\r\n            stops = itemData.ost;\r\n        }\r\n        len = stops.length;\r\n        for (i = 0; i < len; i += 1) {\r\n            stop = stops[i];\r\n            if(!itemData.g._collapsable) {\r\n                stop.setAttribute('offset', oValues[i * 2] + '%');\r\n            }\r\n            stop.setAttribute('stop-opacity', oValues[i * 2 + 1]);\r\n        }\r\n    }\r\n    if (styleData.t === 1) {\r\n        if (itemData.e._mdf  || this._isFirstFrame) {\r\n            gfill.setAttribute('x2', pt2[0]);\r\n            gfill.setAttribute('y2', pt2[1]);\r\n            if (hasOpacity && !itemData.g._collapsable) {\r\n                itemData.of.setAttribute('x2', pt2[0]);\r\n                itemData.of.setAttribute('y2', pt2[1]);\r\n            }\r\n        }\r\n    } else {\r\n        var rad;\r\n        if (itemData.s._mdf || itemData.e._mdf || this._isFirstFrame) {\r\n            rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\r\n            gfill.setAttribute('r', rad);\r\n            if(hasOpacity && !itemData.g._collapsable){\r\n                itemData.of.setAttribute('r', rad);\r\n            }\r\n        }\r\n        if (itemData.e._mdf || itemData.h._mdf || itemData.a._mdf || this._isFirstFrame) {\r\n            if (!rad) {\r\n                rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\r\n            }\r\n            var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);\r\n\r\n            var percent = itemData.h.v >= 1 ? 0.99 : itemData.h.v <= -1 ? -0.99: itemData.h.v;\r\n            var dist = rad * percent;\r\n            var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];\r\n            var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];\r\n            gfill.setAttribute('fx', x);\r\n            gfill.setAttribute('fy', y);\r\n            if (hasOpacity && !itemData.g._collapsable) {\r\n                itemData.of.setAttribute('fx', x);\r\n                itemData.of.setAttribute('fy', y);\r\n            }\r\n        }\r\n        //gfill.setAttribute('fy','200');\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.renderStroke = function(styleData, itemData) {\r\n    var styleElem = itemData.style;\r\n    var d = itemData.d;\r\n    if (d && (d._mdf || this._isFirstFrame)) {\r\n        styleElem.pElem.setAttribute('stroke-dasharray', d.dashStr);\r\n        styleElem.pElem.setAttribute('stroke-dashoffset', d.dashoffset[0]);\r\n    }\r\n    if(itemData.c && (itemData.c._mdf || this._isFirstFrame)){\r\n        styleElem.pElem.setAttribute('stroke','rgb(' + bm_floor(itemData.c.v[0]) + ',' + bm_floor(itemData.c.v[1]) + ',' + bm_floor(itemData.c.v[2]) + ')');\r\n    }\r\n    if(itemData.o._mdf || this._isFirstFrame){\r\n        styleElem.pElem.setAttribute('stroke-opacity', itemData.o.v);\r\n    }\r\n    if(itemData.w._mdf || this._isFirstFrame){\r\n        styleElem.pElem.setAttribute('stroke-width', itemData.w.v);\r\n        if(styleElem.msElem){\r\n            styleElem.msElem.setAttribute('stroke-width', itemData.w.v);\r\n        }\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.destroy = function(){\r\n    this.destroyBaseElement();\r\n    this.shapeData = null;\r\n    this.itemsData = null;\r\n};\r\n\r\nfunction SVGTintFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','linearRGB');\r\n    feColorMatrix.setAttribute('values','0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f1');\r\n    filter.appendChild(feColorMatrix);\r\n    feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n    feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f2');\r\n    filter.appendChild(feColorMatrix);\r\n    this.matrixFilter = feColorMatrix;\r\n    if(filterManager.effectElements[2].p.v !== 100 || filterManager.effectElements[2].p.k){\r\n        var feMerge = createNS('feMerge');\r\n        filter.appendChild(feMerge);\r\n        var feMergeNode;\r\n        feMergeNode = createNS('feMergeNode');\r\n        feMergeNode.setAttribute('in','SourceGraphic');\r\n        feMerge.appendChild(feMergeNode);\r\n        feMergeNode = createNS('feMergeNode');\r\n        feMergeNode.setAttribute('in','f2');\r\n        feMerge.appendChild(feMergeNode);\r\n    }\r\n}\r\n\r\nSVGTintFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var colorBlack = this.filterManager.effectElements[0].p.v;\r\n        var colorWhite = this.filterManager.effectElements[1].p.v;\r\n        var opacity = this.filterManager.effectElements[2].p.v/100;\r\n        this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');\r\n    }\r\n};\r\nfunction SVGFillFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n    feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\r\n    filter.appendChild(feColorMatrix);\r\n    this.matrixFilter = feColorMatrix;\r\n}\r\nSVGFillFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var color = this.filterManager.effectElements[2].p.v;\r\n        var opacity = this.filterManager.effectElements[6].p.v;\r\n        this.matrixFilter.setAttribute('values','0 0 0 0 '+color[0]+' 0 0 0 0 '+color[1]+' 0 0 0 0 '+color[2]+' 0 0 0 '+opacity+' 0');\r\n    }\r\n};\r\nfunction SVGStrokeEffect(elem, filterManager){\r\n    this.initialized = false;\r\n    this.filterManager = filterManager;\r\n    this.elem = elem;\r\n    this.paths = [];\r\n}\r\n\r\nSVGStrokeEffect.prototype.initialize = function(){\r\n\r\n    var elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\r\n    var path,groupPath, i, len;\r\n    if(this.filterManager.effectElements[1].p.v === 1){\r\n        len = this.elem.maskManager.masksProperties.length;\r\n        i = 0;\r\n    } else {\r\n        i = this.filterManager.effectElements[0].p.v - 1;\r\n        len = i + 1;\r\n    }\r\n    groupPath = createNS('g'); \r\n    groupPath.setAttribute('fill','none');\r\n    groupPath.setAttribute('stroke-linecap','round');\r\n    groupPath.setAttribute('stroke-dashoffset',1);\r\n    for(i;i<len;i+=1){\r\n        path = createNS('path');\r\n        groupPath.appendChild(path);\r\n        this.paths.push({p:path,m:i});\r\n    }\r\n    if(this.filterManager.effectElements[10].p.v === 3){\r\n        var mask = createNS('mask');\r\n        var id = 'stms_' + randomString(10);\r\n        mask.setAttribute('id',id);\r\n        mask.setAttribute('mask-type','alpha');\r\n        mask.appendChild(groupPath);\r\n        this.elem.globalData.defs.appendChild(mask);\r\n        var g = createNS('g');\r\n        g.setAttribute('mask','url(' + locationHref + '#'+id+')');\r\n        if(elemChildren[0]){\r\n            g.appendChild(elemChildren[0]);\r\n        }\r\n        this.elem.layerElement.appendChild(g);\r\n        this.masker = mask;\r\n        groupPath.setAttribute('stroke','#fff');\r\n    } else if(this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2){\r\n        if(this.filterManager.effectElements[10].p.v === 2){\r\n            elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\r\n            while(elemChildren.length){\r\n                this.elem.layerElement.removeChild(elemChildren[0]);\r\n            }\r\n        }\r\n        this.elem.layerElement.appendChild(groupPath);\r\n        this.elem.layerElement.removeAttribute('mask');\r\n        groupPath.setAttribute('stroke','#fff');\r\n    }\r\n    this.initialized = true;\r\n    this.pathMasker = groupPath;\r\n};\r\n\r\nSVGStrokeEffect.prototype.renderFrame = function(forceRender){\r\n    if(!this.initialized){\r\n        this.initialize();\r\n    }\r\n    var i, len = this.paths.length;\r\n    var mask, path;\r\n    for(i=0;i<len;i+=1){\r\n        mask = this.elem.maskManager.viewData[this.paths[i].m];\r\n        path = this.paths[i].p;\r\n        if(forceRender || this.filterManager._mdf || mask.prop._mdf){\r\n            path.setAttribute('d',mask.lastPath);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[9].p._mdf || this.filterManager.effectElements[4].p._mdf || this.filterManager.effectElements[7].p._mdf || this.filterManager.effectElements[8].p._mdf || mask.prop._mdf){\r\n            var dasharrayValue;\r\n            if(this.filterManager.effectElements[7].p.v !== 0 || this.filterManager.effectElements[8].p.v !== 100){\r\n                var s = Math.min(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)/100;\r\n                var e = Math.max(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)/100;\r\n                var l = path.getTotalLength();\r\n                dasharrayValue = '0 0 0 ' + l*s + ' ';\r\n                var lineLength = l*(e-s);\r\n                var segment = 1+this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100;\r\n                var units = Math.floor(lineLength/segment);\r\n                var j;\r\n                for(j=0;j<units;j+=1){\r\n                    dasharrayValue += '1 ' + this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100 + ' ';\r\n                }\r\n                dasharrayValue += '0 ' + l*10 + ' 0 0';\r\n            } else {\r\n                dasharrayValue = '1 ' + this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100;\r\n            }\r\n            path.setAttribute('stroke-dasharray',dasharrayValue);\r\n        }\r\n    }\r\n    if(forceRender || this.filterManager.effectElements[4].p._mdf){\r\n        this.pathMasker.setAttribute('stroke-width',this.filterManager.effectElements[4].p.v*2);\r\n    }\r\n    \r\n    if(forceRender || this.filterManager.effectElements[6].p._mdf){\r\n        this.pathMasker.setAttribute('opacity',this.filterManager.effectElements[6].p.v);\r\n    }\r\n    if(this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2){\r\n        if(forceRender || this.filterManager.effectElements[3].p._mdf){\r\n            var color = this.filterManager.effectElements[3].p.v;\r\n            this.pathMasker.setAttribute('stroke','rgb('+bm_floor(color[0]*255)+','+bm_floor(color[1]*255)+','+bm_floor(color[2]*255)+')');\r\n        }\r\n    }\r\n};\r\nfunction SVGTritoneFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','linearRGB');\r\n    feColorMatrix.setAttribute('values','0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f1');\r\n    filter.appendChild(feColorMatrix);\r\n    var feComponentTransfer = createNS('feComponentTransfer');\r\n    feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n    filter.appendChild(feComponentTransfer);\r\n    this.matrixFilter = feComponentTransfer;\r\n    var feFuncR = createNS('feFuncR');\r\n    feFuncR.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncR);\r\n    this.feFuncR = feFuncR;\r\n    var feFuncG = createNS('feFuncG');\r\n    feFuncG.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncG);\r\n    this.feFuncG = feFuncG;\r\n    var feFuncB = createNS('feFuncB');\r\n    feFuncB.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncB);\r\n    this.feFuncB = feFuncB;\r\n}\r\n\r\nSVGTritoneFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var color1 = this.filterManager.effectElements[0].p.v;\r\n        var color2 = this.filterManager.effectElements[1].p.v;\r\n        var color3 = this.filterManager.effectElements[2].p.v;\r\n        var tableR = color3[0] + ' ' + color2[0] + ' ' + color1[0];\r\n        var tableG = color3[1] + ' ' + color2[1] + ' ' + color1[1];\r\n        var tableB = color3[2] + ' ' + color2[2] + ' ' + color1[2];\r\n        this.feFuncR.setAttribute('tableValues', tableR);\r\n        this.feFuncG.setAttribute('tableValues', tableG);\r\n        this.feFuncB.setAttribute('tableValues', tableB);\r\n        //var opacity = this.filterManager.effectElements[2].p.v/100;\r\n        //this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');\r\n    }\r\n};\r\nfunction SVGProLevelsFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var effectElements = this.filterManager.effectElements;\r\n    var feComponentTransfer = createNS('feComponentTransfer');\r\n    var feFuncR, feFuncG, feFuncB;\r\n    \r\n    if(effectElements[10].p.k || effectElements[10].p.v !== 0 || effectElements[11].p.k || effectElements[11].p.v !== 1 || effectElements[12].p.k || effectElements[12].p.v !== 1 || effectElements[13].p.k || effectElements[13].p.v !== 0 || effectElements[14].p.k || effectElements[14].p.v !== 1){\r\n        this.feFuncR = this.createFeFunc('feFuncR', feComponentTransfer);\r\n    }\r\n    if(effectElements[17].p.k || effectElements[17].p.v !== 0 || effectElements[18].p.k || effectElements[18].p.v !== 1 || effectElements[19].p.k || effectElements[19].p.v !== 1 || effectElements[20].p.k || effectElements[20].p.v !== 0 || effectElements[21].p.k || effectElements[21].p.v !== 1){\r\n        this.feFuncG = this.createFeFunc('feFuncG', feComponentTransfer);\r\n    }\r\n    if(effectElements[24].p.k || effectElements[24].p.v !== 0 || effectElements[25].p.k || effectElements[25].p.v !== 1 || effectElements[26].p.k || effectElements[26].p.v !== 1 || effectElements[27].p.k || effectElements[27].p.v !== 0 || effectElements[28].p.k || effectElements[28].p.v !== 1){\r\n        this.feFuncB = this.createFeFunc('feFuncB', feComponentTransfer);\r\n    }\r\n    if(effectElements[31].p.k || effectElements[31].p.v !== 0 || effectElements[32].p.k || effectElements[32].p.v !== 1 || effectElements[33].p.k || effectElements[33].p.v !== 1 || effectElements[34].p.k || effectElements[34].p.v !== 0 || effectElements[35].p.k || effectElements[35].p.v !== 1){\r\n        this.feFuncA = this.createFeFunc('feFuncA', feComponentTransfer);\r\n    }\r\n    \r\n    if(this.feFuncR || this.feFuncG || this.feFuncB || this.feFuncA){\r\n        feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n        filter.appendChild(feComponentTransfer);\r\n        feComponentTransfer = createNS('feComponentTransfer');\r\n    }\r\n\r\n    if(effectElements[3].p.k || effectElements[3].p.v !== 0 || effectElements[4].p.k || effectElements[4].p.v !== 1 || effectElements[5].p.k || effectElements[5].p.v !== 1 || effectElements[6].p.k || effectElements[6].p.v !== 0 || effectElements[7].p.k || effectElements[7].p.v !== 1){\r\n\r\n        feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n        filter.appendChild(feComponentTransfer);\r\n        this.feFuncRComposed = this.createFeFunc('feFuncR', feComponentTransfer);\r\n        this.feFuncGComposed = this.createFeFunc('feFuncG', feComponentTransfer);\r\n        this.feFuncBComposed = this.createFeFunc('feFuncB', feComponentTransfer);\r\n    }\r\n}\r\n\r\nSVGProLevelsFilter.prototype.createFeFunc = function(type, feComponentTransfer) {\r\n    var feFunc = createNS(type);\r\n    feFunc.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFunc);\r\n    return feFunc;\r\n};\r\n\r\nSVGProLevelsFilter.prototype.getTableValue = function(inputBlack, inputWhite, gamma, outputBlack, outputWhite) {\r\n    var cnt = 0;\r\n    var segments = 256;\r\n    var perc;\r\n    var min = Math.min(inputBlack, inputWhite);\r\n    var max = Math.max(inputBlack, inputWhite);\r\n    var table = Array.call(null,{length:segments});\r\n    var colorValue;\r\n    var pos = 0;\r\n    var outputDelta = outputWhite - outputBlack; \r\n    var inputDelta = inputWhite - inputBlack; \r\n    while(cnt <= 256) {\r\n        perc = cnt/256;\r\n        if(perc <= min){\r\n            colorValue = inputDelta < 0 ? outputWhite : outputBlack;\r\n        } else if(perc >= max){\r\n            colorValue = inputDelta < 0 ? outputBlack : outputWhite;\r\n        } else {\r\n            colorValue = (outputBlack + outputDelta * Math.pow((perc - inputBlack) / inputDelta, 1 / gamma));\r\n        }\r\n        table[pos++] = colorValue;\r\n        cnt += 256/(segments-1);\r\n    }\r\n    return table.join(' ');\r\n};\r\n\r\nSVGProLevelsFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var val, cnt, perc, bezier;\r\n        var effectElements = this.filterManager.effectElements;\r\n        if(this.feFuncRComposed && (forceRender || effectElements[3].p._mdf || effectElements[4].p._mdf || effectElements[5].p._mdf || effectElements[6].p._mdf || effectElements[7].p._mdf)){\r\n            val = this.getTableValue(effectElements[3].p.v,effectElements[4].p.v,effectElements[5].p.v,effectElements[6].p.v,effectElements[7].p.v);\r\n            this.feFuncRComposed.setAttribute('tableValues',val);\r\n            this.feFuncGComposed.setAttribute('tableValues',val);\r\n            this.feFuncBComposed.setAttribute('tableValues',val);\r\n        }\r\n\r\n\r\n        if(this.feFuncR && (forceRender || effectElements[10].p._mdf || effectElements[11].p._mdf || effectElements[12].p._mdf || effectElements[13].p._mdf || effectElements[14].p._mdf)){\r\n            val = this.getTableValue(effectElements[10].p.v,effectElements[11].p.v,effectElements[12].p.v,effectElements[13].p.v,effectElements[14].p.v);\r\n            this.feFuncR.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncG && (forceRender || effectElements[17].p._mdf || effectElements[18].p._mdf || effectElements[19].p._mdf || effectElements[20].p._mdf || effectElements[21].p._mdf)){\r\n            val = this.getTableValue(effectElements[17].p.v,effectElements[18].p.v,effectElements[19].p.v,effectElements[20].p.v,effectElements[21].p.v);\r\n            this.feFuncG.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncB && (forceRender || effectElements[24].p._mdf || effectElements[25].p._mdf || effectElements[26].p._mdf || effectElements[27].p._mdf || effectElements[28].p._mdf)){\r\n            val = this.getTableValue(effectElements[24].p.v,effectElements[25].p.v,effectElements[26].p.v,effectElements[27].p.v,effectElements[28].p.v);\r\n            this.feFuncB.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncA && (forceRender || effectElements[31].p._mdf || effectElements[32].p._mdf || effectElements[33].p._mdf || effectElements[34].p._mdf || effectElements[35].p._mdf)){\r\n            val = this.getTableValue(effectElements[31].p.v,effectElements[32].p.v,effectElements[33].p.v,effectElements[34].p.v,effectElements[35].p.v);\r\n            this.feFuncA.setAttribute('tableValues',val);\r\n        }\r\n        \r\n    }\r\n};\r\nfunction SVGDropShadowEffect(filter, filterManager){\r\n    filter.setAttribute('x','-100%');\r\n    filter.setAttribute('y','-100%');\r\n    filter.setAttribute('width','400%');\r\n    filter.setAttribute('height','400%');\r\n    this.filterManager = filterManager;\r\n\r\n    var feGaussianBlur = createNS('feGaussianBlur');\r\n    feGaussianBlur.setAttribute('in','SourceAlpha');\r\n    feGaussianBlur.setAttribute('result','drop_shadow_1');\r\n    feGaussianBlur.setAttribute('stdDeviation','0');\r\n    this.feGaussianBlur = feGaussianBlur;\r\n    filter.appendChild(feGaussianBlur);\r\n\r\n    var feOffset = createNS('feOffset');\r\n    feOffset.setAttribute('dx','25');\r\n    feOffset.setAttribute('dy','0');\r\n    feOffset.setAttribute('in','drop_shadow_1');\r\n    feOffset.setAttribute('result','drop_shadow_2');\r\n    this.feOffset = feOffset;\r\n    filter.appendChild(feOffset);\r\n    var feFlood = createNS('feFlood');\r\n    feFlood.setAttribute('flood-color','#00ff00');\r\n    feFlood.setAttribute('flood-opacity','1');\r\n    feFlood.setAttribute('result','drop_shadow_3');\r\n    this.feFlood = feFlood;\r\n    filter.appendChild(feFlood);\r\n\r\n    var feComposite = createNS('feComposite');\r\n    feComposite.setAttribute('in','drop_shadow_3');\r\n    feComposite.setAttribute('in2','drop_shadow_2');\r\n    feComposite.setAttribute('operator','in');\r\n    feComposite.setAttribute('result','drop_shadow_4');\r\n    filter.appendChild(feComposite);\r\n\r\n\r\n    var feMerge = createNS('feMerge');\r\n    filter.appendChild(feMerge);\r\n    var feMergeNode;\r\n    feMergeNode = createNS('feMergeNode');\r\n    feMerge.appendChild(feMergeNode);\r\n    feMergeNode = createNS('feMergeNode');\r\n    feMergeNode.setAttribute('in','SourceGraphic');\r\n    this.feMergeNode = feMergeNode;\r\n    this.feMerge = feMerge;\r\n    this.originalNodeAdded = false;\r\n    feMerge.appendChild(feMergeNode);\r\n}\r\n\r\nSVGDropShadowEffect.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        if(forceRender || this.filterManager.effectElements[4].p._mdf){\r\n            this.feGaussianBlur.setAttribute('stdDeviation', this.filterManager.effectElements[4].p.v / 4);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[0].p._mdf){\r\n            var col = this.filterManager.effectElements[0].p.v;\r\n            this.feFlood.setAttribute('flood-color',rgbToHex(Math.round(col[0]*255),Math.round(col[1]*255),Math.round(col[2]*255)));\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[1].p._mdf){\r\n            this.feFlood.setAttribute('flood-opacity',this.filterManager.effectElements[1].p.v/255);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[2].p._mdf || this.filterManager.effectElements[3].p._mdf){\r\n            var distance = this.filterManager.effectElements[3].p.v;\r\n            var angle = (this.filterManager.effectElements[2].p.v - 90) * degToRads;\r\n            var x = distance * Math.cos(angle);\r\n            var y = distance * Math.sin(angle);\r\n            this.feOffset.setAttribute('dx', x);\r\n            this.feOffset.setAttribute('dy', y);\r\n        }\r\n        /*if(forceRender || this.filterManager.effectElements[5].p._mdf){\r\n            if(this.filterManager.effectElements[5].p.v === 1 && this.originalNodeAdded) {\r\n                this.feMerge.removeChild(this.feMergeNode);\r\n                this.originalNodeAdded = false;\r\n            } else if(this.filterManager.effectElements[5].p.v === 0 && !this.originalNodeAdded) {\r\n                this.feMerge.appendChild(this.feMergeNode);\r\n                this.originalNodeAdded = true;\r\n            }\r\n        }*/\r\n    }\r\n};\r\nvar _svgMatteSymbols = [];\r\nvar _svgMatteMaskCounter = 0;\r\n\r\nfunction SVGMatte3Effect(filterElem, filterManager, elem){\r\n    this.initialized = false;\r\n    this.filterManager = filterManager;\r\n    this.filterElem = filterElem;\r\n    this.elem = elem;\r\n    elem.matteElement = createNS('g');\r\n    elem.matteElement.appendChild(elem.layerElement);\r\n    elem.matteElement.appendChild(elem.transformedElement);\r\n    elem.baseElement = elem.matteElement;\r\n}\r\n\r\nSVGMatte3Effect.prototype.findSymbol = function(mask) {\r\n    var i = 0, len = _svgMatteSymbols.length;\r\n    while(i < len) {\r\n        if(_svgMatteSymbols[i] === mask) {\r\n            return _svgMatteSymbols[i];\r\n        }\r\n        i += 1;\r\n    }\r\n    return null;\r\n};\r\n\r\nSVGMatte3Effect.prototype.replaceInParent = function(mask, symbolId) {\r\n    var parentNode = mask.layerElement.parentNode;\r\n    if(!parentNode) {\r\n        return;\r\n    }\r\n    var children = parentNode.children;\r\n    var i = 0, len = children.length;\r\n    while (i < len) {\r\n        if (children[i] === mask.layerElement) {\r\n            break;\r\n        }\r\n        i += 1;\r\n    }\r\n    var nextChild;\r\n    if (i <= len - 2) {\r\n        nextChild = children[i + 1];\r\n    }\r\n    var useElem = createNS('use');\r\n    useElem.setAttribute('href', '#' + symbolId);\r\n    if(nextChild) {\r\n        parentNode.insertBefore(useElem, nextChild);\r\n    } else {\r\n        parentNode.appendChild(useElem);\r\n    }\r\n};\r\n\r\nSVGMatte3Effect.prototype.setElementAsMask = function(elem, mask) {\r\n    if(!this.findSymbol(mask)) {\r\n        var symbolId = 'matte_' + randomString(5) + '_' + _svgMatteMaskCounter++;\r\n        var masker = createNS('mask');\r\n        masker.setAttribute('id', mask.layerId);\r\n        masker.setAttribute('mask-type', 'alpha');\r\n        _svgMatteSymbols.push(mask);\r\n        var defs = elem.globalData.defs;\r\n        defs.appendChild(masker);\r\n        var symbol = createNS('symbol');\r\n        symbol.setAttribute('id', symbolId);\r\n        this.replaceInParent(mask, symbolId);\r\n        symbol.appendChild(mask.layerElement);\r\n        defs.appendChild(symbol);\r\n        useElem = createNS('use');\r\n        useElem.setAttribute('href', '#' + symbolId);\r\n        masker.appendChild(useElem);\r\n        mask.data.hd = false;\r\n        mask.show();\r\n    }\r\n    elem.setMatte(mask.layerId);\r\n};\r\n\r\nSVGMatte3Effect.prototype.initialize = function() {\r\n    var ind = this.filterManager.effectElements[0].p.v;\r\n    var i = 0, len = this.elem.comp.elements.length;\r\n    while (i < len) {\r\n    \tif (this.elem.comp.elements[i].data.ind === ind) {\r\n    \t\tthis.setElementAsMask(this.elem, this.elem.comp.elements[i]);\r\n    \t}\r\n    \ti += 1;\r\n    }\r\n    this.initialized = true;\r\n};\r\n\r\nSVGMatte3Effect.prototype.renderFrame = function() {\r\n\tif(!this.initialized) {\r\n\t\tthis.initialize();\r\n\t}\r\n};\r\nfunction SVGEffects(elem){\r\n    var i, len = elem.data.ef ? elem.data.ef.length : 0;\r\n    var filId = randomString(10);\r\n    var fil = filtersFactory.createFilter(filId);\r\n    var count = 0;\r\n    this.filters = [];\r\n    var filterManager;\r\n    for(i=0;i<len;i+=1){\r\n        filterManager = null;\r\n        if(elem.data.ef[i].ty === 20){\r\n            count += 1;\r\n            filterManager = new SVGTintFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 21){\r\n            count += 1;\r\n            filterManager = new SVGFillFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 22){\r\n            filterManager = new SVGStrokeEffect(elem, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 23){\r\n            count += 1;\r\n            filterManager = new SVGTritoneFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 24){\r\n            count += 1;\r\n            filterManager = new SVGProLevelsFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 25){\r\n            count += 1;\r\n            filterManager = new SVGDropShadowEffect(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 28){\r\n            //count += 1;\r\n            filterManager = new SVGMatte3Effect(fil, elem.effectsManager.effectElements[i], elem);\r\n        }\r\n        if(filterManager) {\r\n            this.filters.push(filterManager);\r\n        }\r\n    }\r\n    if(count){\r\n        elem.globalData.defs.appendChild(fil);\r\n        elem.layerElement.setAttribute('filter','url(' + locationHref + '#'+filId+')');\r\n    }\r\n}\r\n\r\nSVGEffects.prototype.renderFrame = function(_isFirstFrame){\r\n    var i, len = this.filters.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.filters[i].renderFrame(_isFirstFrame);\r\n    }\r\n};\r\nvar animationManager = (function(){\r\n    var moduleOb = {};\r\n    var registeredAnimations = [];\r\n    var initTime = 0;\r\n    var len = 0;\r\n    var idled = true;\r\n    var playingAnimationsNum = 0;\r\n    var _stopped = true;\r\n\r\n    function removeElement(ev){\r\n        var i = 0;\r\n        var animItem = ev.target;\r\n        while(i<len) {\r\n            if (registeredAnimations[i].animation === animItem) {\r\n                registeredAnimations.splice(i, 1);\r\n                i -= 1;\r\n                len -= 1;\r\n                if(!animItem.isPaused){\r\n                    subtractPlayingCount();\r\n                }\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    function registerAnimation(element, animationData){\r\n        if(!element){\r\n            return null;\r\n        }\r\n        var i=0;\r\n        while(i<len){\r\n            if(registeredAnimations[i].elem == element && registeredAnimations[i].elem !== null ){\r\n                return registeredAnimations[i].animation;\r\n            }\r\n            i+=1;\r\n        }\r\n        var animItem = new AnimationItem();\r\n        setupAnimation(animItem, element);\r\n        animItem.setData(element, animationData);\r\n        return animItem;\r\n    }\r\n\r\n    function addPlayingCount(){\r\n        playingAnimationsNum += 1;\r\n        activate();\r\n    }\r\n\r\n    function subtractPlayingCount(){\r\n        playingAnimationsNum -= 1;\r\n        if(playingAnimationsNum === 0){\r\n            idled = true;\r\n        }\r\n    }\r\n\r\n    function setupAnimation(animItem, element){\r\n        animItem.addEventListener('destroy',removeElement);\r\n        animItem.addEventListener('_active',addPlayingCount);\r\n        animItem.addEventListener('_idle',subtractPlayingCount);\r\n        registeredAnimations.push({elem: element,animation:animItem});\r\n        len += 1;\r\n    }\r\n\r\n    function loadAnimation(params){\r\n        var animItem = new AnimationItem();\r\n        setupAnimation(animItem, null);\r\n        animItem.setParams(params);\r\n        return animItem;\r\n    }\r\n\r\n\r\n    function setSpeed(val,animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.setSpeed(val, animation);\r\n        }\r\n    }\r\n\r\n    function setDirection(val, animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.setDirection(val, animation);\r\n        }\r\n    }\r\n\r\n    function play(animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.play(animation);\r\n        }\r\n    }\r\n    function resume(nowTime) {\r\n        var elapsedTime = nowTime - initTime;\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.advanceTime(elapsedTime);\r\n        }\r\n        initTime = nowTime;\r\n        if(!idled) {\r\n            window.requestAnimationFrame(resume);\r\n        } else {\r\n            _stopped = true;\r\n        }\r\n    }\r\n\r\n    function first(nowTime){\r\n        initTime = nowTime;\r\n        window.requestAnimationFrame(resume);\r\n    }\r\n\r\n    function pause(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.pause(animation);\r\n        }\r\n    }\r\n\r\n    function goToAndStop(value,isFrame,animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.goToAndStop(value,isFrame,animation);\r\n        }\r\n    }\r\n\r\n    function stop(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.stop(animation);\r\n        }\r\n    }\r\n\r\n    function togglePause(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.togglePause(animation);\r\n        }\r\n    }\r\n\r\n    function destroy(animation) {\r\n        var i;\r\n        for(i=(len-1);i>=0;i-=1){\r\n            registeredAnimations[i].animation.destroy(animation);\r\n        }\r\n    }\r\n\r\n    function searchAnimations(animationData, standalone, renderer){\r\n        var animElements = [].concat([].slice.call(document.getElementsByClassName('lottie')),\r\n                  [].slice.call(document.getElementsByClassName('bodymovin')));\r\n        var i, len = animElements.length;\r\n        for(i=0;i<len;i+=1){\r\n            if(renderer){\r\n                animElements[i].setAttribute('data-bm-type',renderer);\r\n            }\r\n            registerAnimation(animElements[i], animationData);\r\n        }\r\n        if(standalone && len === 0){\r\n            if(!renderer){\r\n                renderer = 'svg';\r\n            }\r\n            var body = document.getElementsByTagName('body')[0];\r\n            body.innerHTML = '';\r\n            var div = createTag('div');\r\n            div.style.width = '100%';\r\n            div.style.height = '100%';\r\n            div.setAttribute('data-bm-type',renderer);\r\n            body.appendChild(div);\r\n            registerAnimation(div, animationData);\r\n        }\r\n    }\r\n\r\n    function resize(){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.resize();\r\n        }\r\n    }\r\n\r\n    /*function start(){\r\n        window.requestAnimationFrame(first);\r\n    }*/\r\n\r\n    function activate(){\r\n        if(idled){\r\n            idled = false;\r\n            if(_stopped) {\r\n                window.requestAnimationFrame(first);\r\n                _stopped = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    //start();\r\n\r\n    //setTimeout(start,0);\r\n\r\n    moduleOb.registerAnimation = registerAnimation;\r\n    moduleOb.loadAnimation = loadAnimation;\r\n    moduleOb.setSpeed = setSpeed;\r\n    moduleOb.setDirection = setDirection;\r\n    moduleOb.play = play;\r\n    moduleOb.pause = pause;\r\n    moduleOb.stop = stop;\r\n    moduleOb.togglePause = togglePause;\r\n    moduleOb.searchAnimations = searchAnimations;\r\n    moduleOb.resize = resize;\r\n    //moduleOb.start = start;\r\n    moduleOb.goToAndStop = goToAndStop;\r\n    moduleOb.destroy = destroy;\r\n    return moduleOb;\r\n}());\r\n\r\nvar AnimationItem = function () {\r\n    this._cbs = [];\r\n    this.name = '';\r\n    this.path = '';\r\n    this.isLoaded = false;\r\n    this.currentFrame = 0;\r\n    this.currentRawFrame = 0;\r\n    this.totalFrames = 0;\r\n    this.frameRate = 0;\r\n    this.frameMult = 0;\r\n    this.playSpeed = 1;\r\n    this.playDirection = 1;\r\n    this.pendingElements = 0;\r\n    this.playCount = 0;\r\n    this.animationData = {};\r\n    this.layers = [];\r\n    this.assets = [];\r\n    this.isPaused = true;\r\n    this.autoplay = false;\r\n    this.loop = true;\r\n    this.renderer = null;\r\n    this.animationID = randomString(10);\r\n    this.assetsPath = '';\r\n    this.timeCompleted = 0;\r\n    this.segmentPos = 0;\r\n    this.subframeEnabled = subframeEnabled;\r\n    this.segments = [];\r\n    this._idle = true;\r\n    this.projectInterface = ProjectInterface();\r\n};\r\n\r\nextendPrototype([BaseEvent], AnimationItem);\r\n\r\nAnimationItem.prototype.setParams = function(params) {\r\n    var self = this;\r\n    if(params.context){\r\n        this.context = params.context;\r\n    }\r\n    if(params.wrapper || params.container){\r\n        this.wrapper = params.wrapper || params.container;\r\n    }\r\n    var animType = params.animType ? params.animType : params.renderer ? params.renderer : 'svg';\r\n    switch(animType){\r\n        case 'canvas':\r\n            this.renderer = new CanvasRenderer(this, params.rendererSettings);\r\n            break;\r\n        case 'svg':\r\n            this.renderer = new SVGRenderer(this, params.rendererSettings);\r\n            break;\r\n        default:\r\n            this.renderer = new HybridRenderer(this, params.rendererSettings);\r\n            break;\r\n    }\r\n    this.renderer.setProjectInterface(this.projectInterface);\r\n    this.animType = animType;\r\n\r\n    if(params.loop === '' || params.loop === null){\r\n    }else if(params.loop === false){\r\n        this.loop = false;\r\n    }else if(params.loop === true){\r\n        this.loop = true;\r\n    }else{\r\n        this.loop = parseInt(params.loop);\r\n    }\r\n    this.autoplay = 'autoplay' in params ? params.autoplay : true;\r\n    this.name = params.name ? params.name :  '';\r\n    this.autoloadSegments = params.hasOwnProperty('autoloadSegments') ? params.autoloadSegments :  true;\r\n    if(params.animationData){\r\n        self.configAnimation(params.animationData);\r\n    }else if(params.path){\r\n        if(params.path.substr(-4) != 'json'){\r\n            if (params.path.substr(-1, 1) != '/') {\r\n                params.path += '/';\r\n            }\r\n            params.path += 'data.json';\r\n        }\r\n\r\n        var xhr = new XMLHttpRequest();\r\n        if(params.path.lastIndexOf('\\\\') != -1){\r\n            this.path = params.path.substr(0,params.path.lastIndexOf('\\\\')+1);\r\n        }else{\r\n            this.path = params.path.substr(0,params.path.lastIndexOf('/')+1);\r\n        }\r\n        this.assetsPath = params.assetsPath;\r\n        this.fileName = params.path.substr(params.path.lastIndexOf('/')+1);\r\n        this.fileName = this.fileName.substr(0,this.fileName.lastIndexOf('.json'));\r\n        xhr.open('GET', params.path, true);\r\n        xhr.send();\r\n        xhr.onreadystatechange = function () {\r\n            if (xhr.readyState == 4) {\r\n                if(xhr.status == 200){\r\n                    self.configAnimation(JSON.parse(xhr.responseText));\r\n                }else{\r\n                    try{\r\n                        var response = JSON.parse(xhr.responseText);\r\n                        self.configAnimation(response);\r\n                    }catch(err){\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.setData = function (wrapper, animationData) {\r\n    var params = {\r\n        wrapper: wrapper,\r\n        animationData: animationData ? (typeof animationData  === \"object\") ? animationData : JSON.parse(animationData) : null\r\n    };\r\n    var wrapperAttributes = wrapper.attributes;\r\n\r\n    params.path = wrapperAttributes.getNamedItem('data-animation-path') ? wrapperAttributes.getNamedItem('data-animation-path').value : wrapperAttributes.getNamedItem('data-bm-path') ? wrapperAttributes.getNamedItem('data-bm-path').value :  wrapperAttributes.getNamedItem('bm-path') ? wrapperAttributes.getNamedItem('bm-path').value : '';\r\n    params.animType = wrapperAttributes.getNamedItem('data-anim-type') ? wrapperAttributes.getNamedItem('data-anim-type').value : wrapperAttributes.getNamedItem('data-bm-type') ? wrapperAttributes.getNamedItem('data-bm-type').value : wrapperAttributes.getNamedItem('bm-type') ? wrapperAttributes.getNamedItem('bm-type').value :  wrapperAttributes.getNamedItem('data-bm-renderer') ? wrapperAttributes.getNamedItem('data-bm-renderer').value : wrapperAttributes.getNamedItem('bm-renderer') ? wrapperAttributes.getNamedItem('bm-renderer').value : 'canvas';\r\n\r\n    var loop = wrapperAttributes.getNamedItem('data-anim-loop') ? wrapperAttributes.getNamedItem('data-anim-loop').value :  wrapperAttributes.getNamedItem('data-bm-loop') ? wrapperAttributes.getNamedItem('data-bm-loop').value :  wrapperAttributes.getNamedItem('bm-loop') ? wrapperAttributes.getNamedItem('bm-loop').value : '';\r\n    if(loop === ''){\r\n    }else if(loop === 'false'){\r\n        params.loop = false;\r\n    }else if(loop === 'true'){\r\n        params.loop = true;\r\n    }else{\r\n        params.loop = parseInt(loop);\r\n    }\r\n    var autoplay = wrapperAttributes.getNamedItem('data-anim-autoplay') ? wrapperAttributes.getNamedItem('data-anim-autoplay').value :  wrapperAttributes.getNamedItem('data-bm-autoplay') ? wrapperAttributes.getNamedItem('data-bm-autoplay').value :  wrapperAttributes.getNamedItem('bm-autoplay') ? wrapperAttributes.getNamedItem('bm-autoplay').value : true;\r\n    params.autoplay = autoplay !== \"false\";\r\n\r\n    params.name = wrapperAttributes.getNamedItem('data-name') ? wrapperAttributes.getNamedItem('data-name').value :  wrapperAttributes.getNamedItem('data-bm-name') ? wrapperAttributes.getNamedItem('data-bm-name').value : wrapperAttributes.getNamedItem('bm-name') ? wrapperAttributes.getNamedItem('bm-name').value :  '';\r\n    var prerender = wrapperAttributes.getNamedItem('data-anim-prerender') ? wrapperAttributes.getNamedItem('data-anim-prerender').value :  wrapperAttributes.getNamedItem('data-bm-prerender') ? wrapperAttributes.getNamedItem('data-bm-prerender').value :  wrapperAttributes.getNamedItem('bm-prerender') ? wrapperAttributes.getNamedItem('bm-prerender').value : '';\r\n\r\n    if(prerender === 'false'){\r\n        params.prerender = false;\r\n    }\r\n    this.setParams(params);\r\n};\r\n\r\nAnimationItem.prototype.includeLayers = function(data) {\r\n    if(data.op > this.animationData.op){\r\n        this.animationData.op = data.op;\r\n        this.totalFrames = Math.floor(data.op - this.animationData.ip);\r\n        this.animationData.tf = this.totalFrames;\r\n    }\r\n    var layers = this.animationData.layers;\r\n    var i, len = layers.length;\r\n    var newLayers = data.layers;\r\n    var j, jLen = newLayers.length;\r\n    for(j=0;j<jLen;j+=1){\r\n        i = 0;\r\n        while(i<len){\r\n            if(layers[i].id == newLayers[j].id){\r\n                layers[i] = newLayers[j];\r\n                break;\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n    if(data.chars || data.fonts){\r\n        this.renderer.globalData.fontManager.addChars(data.chars);\r\n        this.renderer.globalData.fontManager.addFonts(data.fonts, this.renderer.globalData.defs);\r\n    }\r\n    if(data.assets){\r\n        len = data.assets.length;\r\n        for(i = 0; i < len; i += 1){\r\n            this.animationData.assets.push(data.assets[i]);\r\n        }\r\n    }\r\n    //this.totalFrames = 50;\r\n    //this.animationData.tf = 50;\r\n    this.animationData.__complete = false;\r\n    dataManager.completeData(this.animationData,this.renderer.globalData.fontManager);\r\n    this.renderer.includeLayers(data.layers);\r\n    if(expressionsPlugin){\r\n        expressionsPlugin.initExpressions(this);\r\n    }\r\n    this.renderer.renderFrame(-1);\r\n    this.loadNextSegment();\r\n};\r\n\r\nAnimationItem.prototype.loadNextSegment = function() {\r\n    var segments = this.animationData.segments;\r\n    if(!segments || segments.length === 0 || !this.autoloadSegments){\r\n        this.trigger('data_ready');\r\n        this.timeCompleted = this.animationData.tf;\r\n        return;\r\n    }\r\n    var segment = segments.shift();\r\n    this.timeCompleted = segment.time * this.frameRate;\r\n    var xhr = new XMLHttpRequest();\r\n    var self = this;\r\n    var segmentPath = this.path+this.fileName+'_' + this.segmentPos + '.json';\r\n    this.segmentPos += 1;\r\n    xhr.open('GET', segmentPath, true);\r\n    xhr.send();\r\n    xhr.onreadystatechange = function () {\r\n        if (xhr.readyState == 4) {\r\n            if(xhr.status == 200){\r\n                self.includeLayers(JSON.parse(xhr.responseText));\r\n            }else{\r\n                try{\r\n                    var response = JSON.parse(xhr.responseText);\r\n                    self.includeLayers(response);\r\n                }catch(err){\r\n                }\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\nAnimationItem.prototype.loadSegments = function() {\r\n    var segments = this.animationData.segments;\r\n    if(!segments) {\r\n        this.timeCompleted = this.animationData.tf;\r\n    }\r\n    this.loadNextSegment();\r\n};\r\n\r\nAnimationItem.prototype.configAnimation = function (animData) {\r\n    var _this = this;\r\n    if(this.renderer && this.renderer.destroyed){\r\n        return;\r\n    }\r\n    //console.log(JSON.parse(JSON.stringify(animData)));\r\n    //animData.w = Math.round(animData.w/blitter);\r\n    //animData.h = Math.round(animData.h/blitter);\r\n    this.animationData = animData;\r\n    this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip);\r\n    this.animationData.tf = this.totalFrames;\r\n    this.renderer.configAnimation(animData);\r\n    if(!animData.assets){\r\n        animData.assets = [];\r\n    }\r\n    if(animData.comps) {\r\n        animData.assets = animData.assets.concat(animData.comps);\r\n        animData.comps = null;\r\n    }\r\n    this.renderer.searchExtraCompositions(animData.assets);\r\n\r\n    this.layers = this.animationData.layers;\r\n    this.assets = this.animationData.assets;\r\n    this.frameRate = this.animationData.fr;\r\n    this.firstFrame = Math.round(this.animationData.ip);\r\n    this.frameMult = this.animationData.fr / 1000;\r\n    this.trigger('config_ready');\r\n    this.imagePreloader = new ImagePreloader();\r\n    this.imagePreloader.setAssetsPath(this.assetsPath);\r\n    this.imagePreloader.setPath(this.path);\r\n    this.imagePreloader.loadAssets(animData.assets, function(err) {\r\n        if(!err) {\r\n            _this.trigger('loaded_images');\r\n        }\r\n    });\r\n    this.loadSegments();\r\n    this.updaFrameModifier();\r\n    if(this.renderer.globalData.fontManager){\r\n        this.waitForFontsLoaded();\r\n    }else{\r\n        dataManager.completeData(this.animationData,this.renderer.globalData.fontManager);\r\n        this.checkLoaded();\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.waitForFontsLoaded = (function(){\r\n    function checkFontsLoaded(){\r\n        if(this.renderer.globalData.fontManager.loaded){\r\n            dataManager.completeData(this.animationData,this.renderer.globalData.fontManager);\r\n            //this.renderer.buildItems(this.animationData.layers);\r\n            this.checkLoaded();\r\n        }else{\r\n            setTimeout(checkFontsLoaded.bind(this),20);\r\n        }\r\n    }\r\n\r\n    return function(){\r\n        checkFontsLoaded.bind(this)();\r\n    };\r\n}());\r\n\r\nAnimationItem.prototype.addPendingElement = function () {\r\n    this.pendingElements += 1;\r\n};\r\n\r\nAnimationItem.prototype.elementLoaded = function () {\r\n    this.pendingElements--;\r\n    this.checkLoaded();\r\n};\r\n\r\nAnimationItem.prototype.checkLoaded = function () {\r\n    if (this.pendingElements === 0) {\r\n        if(expressionsPlugin){\r\n            expressionsPlugin.initExpressions(this);\r\n        }\r\n        this.renderer.initItems();\r\n        setTimeout(function(){\r\n            this.trigger('DOMLoaded');\r\n        }.bind(this),0);\r\n        this.isLoaded = true;\r\n        this.gotoFrame();\r\n        if(this.autoplay){\r\n            this.play();\r\n        }\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.resize = function () {\r\n    this.renderer.updateContainerSize();\r\n};\r\n\r\nAnimationItem.prototype.setSubframe = function(flag){\r\n    this.subframeEnabled = flag ? true : false;\r\n};\r\n\r\nAnimationItem.prototype.gotoFrame = function () {\r\n    this.currentFrame = this.subframeEnabled ? this.currentRawFrame : ~~this.currentRawFrame;\r\n\r\n    if(this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted){\r\n        this.currentFrame = this.timeCompleted;\r\n    }\r\n    //console.log(this.currentFrame)\r\n    this.trigger('enterFrame');\r\n    // console.log('gotoFrame: ', this.currentFrame )\r\n    this.renderFrame();\r\n};\r\n\r\nAnimationItem.prototype.renderFrame = function () {\r\n    if(this.isLoaded === false){\r\n        return;\r\n    }\r\n    //console.log('this.currentFrame:',this.currentFrame + this.firstFrame);\r\n    this.renderer.renderFrame(this.currentFrame + this.firstFrame);\r\n};\r\n\r\nAnimationItem.prototype.play = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === true){\r\n        this.isPaused = false;\r\n        if(this._idle){\r\n            this._idle = false;\r\n            this.trigger('_active');\r\n        }\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.pause = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === false){\r\n        this.isPaused = true;\r\n        this._idle = true;\r\n        this.trigger('_idle');\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.togglePause = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === true){\r\n        this.play();\r\n    }else{\r\n        this.pause();\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.stop = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    this.pause();\r\n    this.playCount = 0;\r\n    this.setCurrentRawFrameValue(0);\r\n};\r\n\r\nAnimationItem.prototype.goToAndStop = function (value, isFrame, name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(isFrame){\r\n        this.setCurrentRawFrameValue(value);\r\n    }else{\r\n        this.setCurrentRawFrameValue(value * this.frameModifier);\r\n    }\r\n    this.pause();\r\n};\r\n\r\nAnimationItem.prototype.goToAndPlay = function (value, isFrame, name) {\r\n    this.goToAndStop(value, isFrame, name);\r\n    this.play();\r\n};\r\n\r\nAnimationItem.prototype.advanceTime = function (value) {\r\n    if (this.isPaused === true || this.isLoaded === false) {\r\n        return;\r\n    }\r\n    var nextValue = this.currentRawFrame + value * this.frameModifier;\r\n    var _isComplete = false;\r\n    // Checking if nextValue > totalFrames - 1 for addressing non looping and looping animations.\r\n    // If animation won't loop, it should stop at totalFrames - 1. If it will loop it should complete the last frame and then loop.\r\n    if (nextValue >= this.totalFrames - 1 && this.frameModifier > 0) {\r\n        if (!this.loop || this.playCount === this.loop) {\r\n            if (!this.checkSegments(nextValue % this.totalFrames)) {\r\n                _isComplete = true;\r\n                nextValue = this.totalFrames - 1;\r\n            }\r\n        } else if (nextValue >= this.totalFrames) {\r\n            this.playCount += 1;\r\n            if (!this.checkSegments(nextValue % this.totalFrames)) {\r\n                this.setCurrentRawFrameValue(nextValue % this.totalFrames);\r\n                this.trigger('loopComplete');\r\n            }\r\n        } else {\r\n            this.setCurrentRawFrameValue(nextValue);\r\n        }\r\n    } else if(nextValue < 0) {\r\n        if (!this.checkSegments(nextValue % this.totalFrames)) {\r\n            if (this.loop && !(this.playCount-- <= 0 && this.loop !== true)) {\r\n                this.setCurrentRawFrameValue(this.totalFrames + (nextValue % this.totalFrames));\r\n                this.trigger('loopComplete');\r\n            } else {\r\n                _isComplete = true;\r\n                nextValue = 0;\r\n            }\r\n        }\r\n    } else {\r\n        this.setCurrentRawFrameValue(nextValue);\r\n    }\r\n    if (_isComplete) {\r\n        this.setCurrentRawFrameValue(nextValue);\r\n        this.pause();\r\n        this.trigger('complete');\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.adjustSegment = function(arr, offset){\r\n    this.playCount = 0;\r\n    if(arr[1] < arr[0]){\r\n        if(this.frameModifier > 0){\r\n            if(this.playSpeed < 0){\r\n                this.setSpeed(-this.playSpeed);\r\n            } else {\r\n                this.setDirection(-1);\r\n            }\r\n        }\r\n        this.timeCompleted = this.totalFrames = arr[0] - arr[1];\r\n        this.firstFrame = arr[1];\r\n        this.setCurrentRawFrameValue(this.totalFrames - 0.001 - offset);\r\n    } else if(arr[1] > arr[0]){\r\n        if(this.frameModifier < 0){\r\n            if(this.playSpeed < 0){\r\n                this.setSpeed(-this.playSpeed);\r\n            } else {\r\n                this.setDirection(1);\r\n            }\r\n        }\r\n        this.timeCompleted = this.totalFrames = arr[1] - arr[0];\r\n        this.firstFrame = arr[0];\r\n        this.setCurrentRawFrameValue(0.001 + offset);\r\n    }\r\n    this.trigger('segmentStart');\r\n};\r\nAnimationItem.prototype.setSegment = function (init,end) {\r\n    var pendingFrame = -1;\r\n    if(this.isPaused) {\r\n        if (this.currentRawFrame + this.firstFrame < init) {\r\n            pendingFrame = init;\r\n        } else if (this.currentRawFrame + this.firstFrame > end) {\r\n            pendingFrame = end - init;\r\n        }\r\n    }\r\n\r\n    this.firstFrame = init;\r\n    this.timeCompleted = this.totalFrames = end - init;\r\n    if(pendingFrame !== -1) {\r\n        this.goToAndStop(pendingFrame,true);\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.playSegments = function (arr,forceFlag) {\r\n    if(typeof arr[0] === 'object'){\r\n        var i, len = arr.length;\r\n        for(i=0;i<len;i+=1){\r\n            this.segments.push(arr[i]);\r\n        }\r\n    }else{\r\n        this.segments.push(arr);\r\n    }\r\n    if(forceFlag){\r\n        this.checkSegments(0);\r\n    }\r\n    if(this.isPaused){\r\n        this.play();\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.resetSegments = function (forceFlag) {\r\n    this.segments.length = 0;\r\n    this.segments.push([this.animationData.ip,this.animationData.op]);\r\n    //this.segments.push([this.animationData.ip*this.frameRate,Math.floor(this.animationData.op - this.animationData.ip+this.animationData.ip*this.frameRate)]);\r\n    if(forceFlag){\r\n        this.checkSegments(0);\r\n    }\r\n};\r\nAnimationItem.prototype.checkSegments = function(offset){\r\n    if(this.segments.length) {\r\n        //console.log(this.currentRawFrame % lastFrame)\r\n        this.adjustSegment(this.segments.shift(), offset);\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\nAnimationItem.prototype.remove = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    this.renderer.destroy();\r\n};\r\n\r\nAnimationItem.prototype.destroy = function (name) {\r\n    if((name && this.name != name) || (this.renderer && this.renderer.destroyed)){\r\n        return;\r\n    }\r\n    this.renderer.destroy();\r\n    this.trigger('destroy');\r\n    this._cbs = null;\r\n    this.onEnterFrame = this.onLoopComplete = this.onComplete = this.onSegmentStart = this.onDestroy = null;\r\n    this.renderer = null;\r\n};\r\n\r\nAnimationItem.prototype.setCurrentRawFrameValue = function(value){\r\n    this.currentRawFrame = value;\r\n    this.gotoFrame();\r\n};\r\n\r\nAnimationItem.prototype.setSpeed = function (val) {\r\n    this.playSpeed = val;\r\n    this.updaFrameModifier();\r\n};\r\n\r\nAnimationItem.prototype.setDirection = function (val) {\r\n    this.playDirection = val < 0 ? -1 : 1;\r\n    this.updaFrameModifier();\r\n};\r\n\r\nAnimationItem.prototype.updaFrameModifier = function () {\r\n    this.frameModifier = this.frameMult * this.playSpeed * this.playDirection;\r\n};\r\n\r\nAnimationItem.prototype.getPath = function () {\r\n    return this.path;\r\n};\r\n\r\nAnimationItem.prototype.getAssetsPath = function (assetData) {\r\n    var path = '';\r\n    if(this.assetsPath){\r\n        var imagePath = assetData.p;\r\n        if(imagePath.indexOf('images/') !== -1){\r\n            imagePath = imagePath.split('/')[1];\r\n        }\r\n        path = this.assetsPath + imagePath;\r\n    } else {\r\n        path = this.path;\r\n        path += assetData.u ? assetData.u : '';\r\n        path += assetData.p;\r\n    }\r\n    return path;\r\n};\r\n\r\nAnimationItem.prototype.getAssetData = function (id) {\r\n    var i = 0, len = this.assets.length;\r\n    while (i < len) {\r\n        if(id == this.assets[i].id){\r\n            return this.assets[i];\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.hide = function () {\r\n    this.renderer.hide();\r\n};\r\n\r\nAnimationItem.prototype.show = function () {\r\n    this.renderer.show();\r\n};\r\n\r\nAnimationItem.prototype.getAssets = function () {\r\n    return this.assets;\r\n};\r\n\r\nAnimationItem.prototype.trigger = function(name){\r\n    if(this._cbs && this._cbs[name]){\r\n        switch(name){\r\n            case 'enterFrame':\r\n                this.triggerEvent(name,new BMEnterFrameEvent(name,this.currentFrame,this.totalFrames,this.frameMult));\r\n                break;\r\n            case 'loopComplete':\r\n                this.triggerEvent(name,new BMCompleteLoopEvent(name,this.loop,this.playCount,this.frameMult));\r\n                break;\r\n            case 'complete':\r\n                this.triggerEvent(name,new BMCompleteEvent(name,this.frameMult));\r\n                break;\r\n            case 'segmentStart':\r\n                this.triggerEvent(name,new BMSegmentStartEvent(name,this.firstFrame,this.totalFrames));\r\n                break;\r\n            case 'destroy':\r\n                this.triggerEvent(name,new BMDestroyEvent(name,this));\r\n                break;\r\n            default:\r\n                this.triggerEvent(name);\r\n        }\r\n    }\r\n    if(name === 'enterFrame' && this.onEnterFrame){\r\n        this.onEnterFrame.call(this,new BMEnterFrameEvent(name,this.currentFrame,this.totalFrames,this.frameMult));\r\n    }\r\n    if(name === 'loopComplete' && this.onLoopComplete){\r\n        this.onLoopComplete.call(this,new BMCompleteLoopEvent(name,this.loop,this.playCount,this.frameMult));\r\n    }\r\n    if(name === 'complete' && this.onComplete){\r\n        this.onComplete.call(this,new BMCompleteEvent(name,this.frameMult));\r\n    }\r\n    if(name === 'segmentStart' && this.onSegmentStart){\r\n        this.onSegmentStart.call(this,new BMSegmentStartEvent(name,this.firstFrame,this.totalFrames));\r\n    }\r\n    if(name === 'destroy' && this.onDestroy){\r\n        this.onDestroy.call(this,new BMDestroyEvent(name,this));\r\n    }\r\n};\r\nfunction EffectsManager(){}\r\n    var lottiejs = {};\r\n\r\n    function setLocationHref (href) {\r\n        locationHref = href;\r\n    }\r\n    function play(animation){\r\n        animationManager.play(animation);\r\n    }\r\n\r\n    function pause(animation) {\r\n        animationManager.pause(animation);\r\n    }\r\n\r\n    function togglePause(animation) {\r\n        animationManager.togglePause(animation);\r\n    }\r\n\r\n    function setSpeed(value, animation) {\r\n        animationManager.setSpeed(value, animation);\r\n    }\r\n\r\n    function setDirection(value, animation) {\r\n        animationManager.setDirection(value, animation);\r\n    }\r\n\r\n    function stop(animation) {\r\n        animationManager.stop(animation);\r\n    }\r\n\r\n    function searchAnimations() {\r\n        if (standalone === true) {\r\n            animationManager.searchAnimations(animationData, standalone, renderer);\r\n        } else {\r\n            animationManager.searchAnimations();\r\n        }\r\n    }\r\n\r\n    function registerAnimation(elem) {\r\n        return animationManager.registerAnimation(elem);\r\n    }\r\n\r\n    function resize() {\r\n        animationManager.resize();\r\n    }\r\n\r\n    /*function start() {\r\n        animationManager.start();\r\n    }*/\r\n\r\n    function goToAndStop(val, isFrame, animation) {\r\n        animationManager.goToAndStop(val, isFrame, animation);\r\n    }\r\n\r\n    function setSubframeRendering(flag) {\r\n        subframeEnabled = flag;\r\n    }\r\n\r\n    function loadAnimation(params) {\r\n        if (standalone === true) {\r\n            params.animationData = JSON.parse(animationData);\r\n        }\r\n        return animationManager.loadAnimation(params);\r\n    }\r\n\r\n    function destroy(animation) {\r\n        return animationManager.destroy(animation);\r\n    }\r\n\r\n    function setQuality(value) {\r\n        if (typeof value === 'string') {\r\n            switch (value) {\r\n                case 'high':\r\n                    defaultCurveSegments = 200;\r\n                    break;\r\n                case 'medium':\r\n                    defaultCurveSegments = 50;\r\n                    break;\r\n                case 'low':\r\n                    defaultCurveSegments = 10;\r\n                    break;\r\n            }\r\n        } else if (!isNaN(value) && value > 1) {\r\n            defaultCurveSegments = value;\r\n        }\r\n        if (defaultCurveSegments >= 50) {\r\n            roundValues(false);\r\n        } else {\r\n            roundValues(true);\r\n        }\r\n    }\r\n\r\n    function inBrowser() {\r\n        return typeof navigator !== 'undefined';\r\n    }\r\n\r\n    function installPlugin(type, plugin) {\r\n        if (type === 'expressions') {\r\n            expressionsPlugin = plugin;\r\n        }\r\n    }\r\n\r\n    function getFactory(name) {\r\n        switch (name) {\r\n            case \"propertyFactory\":\r\n                return PropertyFactory;\r\n            case \"shapePropertyFactory\":\r\n                return ShapePropertyFactory;\r\n            case \"matrix\":\r\n                return Matrix;\r\n        }\r\n    }\r\n    lottiejs.play = play;\r\n    lottiejs.pause = pause;\r\n    lottiejs.setLocationHref = setLocationHref;\r\n    lottiejs.togglePause = togglePause;\r\n    lottiejs.setSpeed = setSpeed;\r\n    lottiejs.setDirection = setDirection;\r\n    lottiejs.stop = stop;\r\n    lottiejs.searchAnimations = searchAnimations;\r\n    lottiejs.registerAnimation = registerAnimation;\r\n    lottiejs.loadAnimation = loadAnimation;\r\n    lottiejs.setSubframeRendering = setSubframeRendering;\r\n    lottiejs.resize = resize;\r\n    //lottiejs.start = start;\r\n    lottiejs.goToAndStop = goToAndStop;\r\n    lottiejs.destroy = destroy;\r\n    lottiejs.setQuality = setQuality;\r\n    lottiejs.inBrowser = inBrowser;\r\n    lottiejs.installPlugin = installPlugin;\r\n    lottiejs.__getFactory = getFactory;\r\n    lottiejs.version = '5.1.7';\r\n\r\n    function checkReady() {\r\n        if (document.readyState === \"complete\") {\r\n            clearInterval(readyStateCheckInterval);\r\n            searchAnimations();\r\n        }\r\n    }\r\n\r\n    function getQueryVariable(variable) {\r\n        var vars = queryString.split('&');\r\n        for (var i = 0; i < vars.length; i++) {\r\n            var pair = vars[i].split('=');\r\n            if (decodeURIComponent(pair[0]) == variable) {\r\n                return decodeURIComponent(pair[1]);\r\n            }\r\n        }\r\n    }\r\n    var standalone = '__[STANDALONE]__';\r\n    var animationData = '__[ANIMATIONDATA]__';\r\n    var renderer = '';\r\n    if (standalone) {\r\n        var scripts = document.getElementsByTagName('script');\r\n        var index = scripts.length - 1;\r\n        var myScript = scripts[index] || {\r\n            src: ''\r\n        };\r\n        var queryString = myScript.src.replace(/^[^\\?]+\\??/, '');\r\n        renderer = getQueryVariable('renderer');\r\n    }\r\n    var readyStateCheckInterval = setInterval(checkReady, 100);\r\n    return lottiejs;\r\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lottie-web/build/player/lottie_light.js\n// module id = 11\n// module chunks = 2","/* globals __VUE_SSR_CONTEXT__ */\n\n// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/component-normalizer.js\n// module id = 2\n// module chunks = 2"],"sourceRoot":""}