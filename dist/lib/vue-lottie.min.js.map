{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///lib/vue-lottie.min.js","webpack:///webpack/bootstrap df13043cb3a005c0fd11","webpack:///./src/components/vue-lottie.vue","webpack:///./src/lib.js","webpack:///vue-lottie.vue","webpack:///./~/lottie-web/build/player/lottie_light.js","webpack:///./~/vue-loader/lib/component-normalizer.js","webpack:///./src/components/vue-lottie.vue?499d"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Component","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_0__components_vue_lottie__","__WEBPACK_IMPORTED_MODULE_0__components_vue_lottie___default","__WEBPACK_IMPORTED_MODULE_0_lottie_web_build_player_lottie_light_js__","__WEBPACK_IMPORTED_MODULE_0_lottie_web_build_player_lottie_light_js___default","props","data","type","required","loop","Boolean","autoplay","default","settings","height","Number","width","animation","computed","style","methods","play","pause","stop","setSpeed","val","mounted","a","loadAnimation","container","$refs","lavContainer","renderer","animationData","rendererSettings","__WEBPACK_AMD_DEFINE_RESULT__","undefined","window","ProjectInterface","roundValues","flag","bm_rnd","Math","round","BMEnterFrameEvent","t","currentTime","totalTime","direction","BMCompleteEvent","BMCompleteLoopEvent","currentLoop","totalLoops","BMSegmentStartEvent","f","firstFrame","totalFrames","BMDestroyEvent","target","randomString","length","chars","result","random","HSVtoRGB","h","v","r","g","b","q","floor","RGBtoHSV","max","min","addSaturationToRGB","color","offset","hsv","addBrightnessToRGB","addHueToRGB","BaseEvent","createSizedArray","len","Array","apply","createNS","document","createElementNS","svgNS","createTag","createElement","extendPrototype","sources","destination","sourcePrototype","attr","createProxyFunction","ProxyFunction","ShapePath","_length","_maxLength","ShapeModifier","TrimModifier","RoundCornersModifier","RepeaterModifier","ShapeCollection","shapes","DashProperty","elem","dynamicProperties","frameId","dataProps","_mdf","k","dashStr","dashArray","createTypedArray","dashoffset","prop","PropertyFactory","getProp","push","getValue","GradientProperty","arr","cLength","_cmdf","_omdf","_collapsable","checkCollapsable","_hasOpacity","TextAnimatorProperty","textData","renderType","_isFirstFrame","_hasMaskedPath","_frameId","_dynamicProperties","_textData","_renderType","_elem","_animatorsData","_pathData","_moreOptions","alignment","renderedLetters","lettersChangedFlag","TextAnimatorDataProperty","animatorProps","defaultData","propType","textAnimator_animatables","degToRads","rx","ry","sk","sa","sw","sc","fc","fh","fs","fb","TextSelectorProp","getTextSelectorProp","LetterProps","TextProperty","initialDefaultFrame","pv","kf","keysIndex","canResize","minimumFontSize","currentData","ascent","boxWidth","fStyle","fWeight","j","justifyOffset","lh","lineWidths","ls","of","tr","sz","ps","fillColorAnim","strokeColorAnim","strokeWidthAnim","yOffset","__complete","finalSize","finalText","finalLineHeight","searchProperty","BaseRenderer","SVGRenderer","animationItem","config","layers","renderedFrame","svgElement","maskElement","appendChild","layerElement","defs","renderConfig","preserveAspectRatio","progressiveLoad","hideOnTransparent","viewBoxOnly","viewBoxSize","className","globalData","frameNum","compSize","w","fontManager","FontManager","elements","pendingElements","destroyed","MaskElement","element","storedData","masksProperties","viewData","solidPath","path","jLen","rect","expansor","feMorph","x","properties","count","currentMasks","layerId","maskType","maskRef","mode","inv","setAttribute","comp","filterID","expan","lastPath","lastOperator","filterId","lastRadius","mask","locationHref","createLayerSolidPath","op","ShapePropertyFactory","getShapeProp","invRect","drawPath","maskedElement","HierarchyElement","FrameElement","TransformElement","RenderableElement","RenderableDOMElement","ProcessedElement","position","pos","SVGStyleData","level","ty","lvl","closed","pElem","msElem","SVGShapeData","transformers","shape","caches","styles","lStr","sh","SVGTransformData","mProps","transform","SVGStrokeStyleData","styleOb","SVGFillStyleData","SVGGradientFillStyleData","initGradientData","SVGGradientStrokeStyleData","ShapeGroupData","it","prevViewData","gr","BaseElement","NullElement","initFrame","initBaseData","initTransform","initHierarchy","SVGBaseElement","IShapeElement","ITextElement","ICompElement","IImageElement","assetData","getAssetData","refId","initElement","ISolidElement","SVGCompElement","supports3d","completeLayers","tm","frameRate","_placeholder","SVGTextElement","textSpans","SVGShapeElement","shapesData","stylesList","shapeModifiers","itemsData","processedElements","SVGTintFilter","filter","filterManager","feColorMatrix","matrixFilter","effectElements","feMerge","feMergeNode","SVGFillFilter","SVGStrokeEffect","initialized","paths","SVGTritoneFilter","feComponentTransfer","feFuncR","feFuncG","feFuncB","SVGProLevelsFilter","createFeFunc","feFuncA","feFuncRComposed","feFuncGComposed","feFuncBComposed","SVGDropShadowEffect","feGaussianBlur","feOffset","feFlood","feComposite","originalNodeAdded","SVGMatte3Effect","filterElem","matteElement","transformedElement","baseElement","SVGEffects","ef","filId","fil","filtersFactory","createFilter","filters","effectsManager","EffectsManager","setLocationHref","href","animationManager","togglePause","setDirection","searchAnimations","standalone","registerAnimation","resize","goToAndStop","isFrame","setSubframeRendering","subframeEnabled","params","JSON","parse","destroy","setQuality","defaultCurveSegments","isNaN","inBrowser","navigator","installPlugin","plugin","expressionsPlugin","getFactory","Matrix","checkReady","readyState","clearInterval","readyStateCheckInterval","bm_pow","test","userAgent","pow","bm_sqrt","sqrt","bm_floor","abs","bm_min","BMMath","propertyNames","getOwnPropertyNames","absArr","PI","roundCorner","rgbToHex","hex","colorMap","toString","triggerEvent","eventName","args","_cbs","addEventListener","callback","removeEventListener","bind","splice","createRegularArray","Float32Array","Int16Array","Uint8ClampedArray","reset","rotate","angle","mCos","_cos","mSin","_sin","_t","rotateX","rotateY","rotateZ","shear","sx","sy","skew","ax","ay","_tan","skewFromAxis","scale","setTransform","e","translate","tx","tz","a2","b2","c2","d2","e2","f2","g2","h2","i2","j2","k2","l2","m2","n2","o2","p2","_p","_identityCalculated","a1","b1","c1","d1","e1","f1","g1","h1","i1","j1","k1","l1","m1","n1","o1","p1","isIdentity","_identity","equals","matr","clone","cloneFromProps","applyToPoint","y","z","applyToX","applyToY","applyToZ","inversePoint","pt","determinant","inversePoints","pts","retPts","applyToTriplePoints","pt1","pt2","pt3","p0","p4","p5","p12","p13","applyToPointArray","applyToPointStringified","toCSS","cssValue","_rnd","to2dCSS","cos","sin","tan","pool","math","seedrandom","seed","options","key","entropy","shortseed","mixkey","flatten","tostring","autoseed","arc4","ARC4","prng","chunks","startdenom","significance","overflow","int32","quick","double","S","pass","is_math_call","state","copy","rngname","global","keylen","me","slice","obj","depth","typ","smear","stringseed","charCodeAt","nodecrypto","randomBytes","out","Uint8Array","crypto","msCrypto","getRandomValues","browser","plugins","Date","screen","String","fromCharCode","BezierFactory","getBezierEasing","nm","str","replace","beziers","bezEasing","BezierEasing","A","aA1","aA2","B","C","calcBezier","aT","getSlope","binarySubdivide","aX","aA","aB","mX1","mX2","currentX","currentT","SUBDIVISION_PRECISION","SUBDIVISION_MAX_ITERATIONS","newtonRaphsonIterate","aGuessT","NEWTON_ITERATIONS","currentSlope","points","_mSampleValues","float32ArraySupported","kSplineTableSize","_precomputed","ob","kSampleStepSize","mY1","mY2","_precompute","_getTForX","_calcSampleValues","mSampleValues","intervalStart","currentSample","lastSample","dist","guessForT","initialSlope","lastTime","vendors","requestAnimationFrame","cancelAnimationFrame","currTime","getTime","timeToCall","id","setTimeout","clearTimeout","bez","pointOnLine2D","x1","y1","x2","y2","x3","y3","det1","pointOnLine3D","z1","z2","z3","diffDist","dist1","dist2","dist3","getSegmentsLength","shapeData","segmentsLength","segments_length_pool","newElement","pathV","pathO","pathI","lengths","totalLength","getBezierLength","addedLength","BezierData","segmentLength","PointData","partial","point","partialLength","getDistancePerc","perc","bezierData","percents","initPos","lengthPos","lPerc","dir","getPointInSegment","pt4","percent","t1","u1","getNewSegment","startPerc","endPerc","t0","u0","u0u0u0","t0u0u0_3","t0t0u0_3","t0t0t0","u0u0u1","t0u0u1_3","t0t0u1_3","t0t0t1","u0u1u1","t0u1u1_3","t0t1u1_3","t0t1t1","u1u1u1","t1u1u1_3","t1t1u1_3","t1t1t1","bezier_segment_points","ptCoord","ptDistance","curveSegments","lastPoint","lengthData","bezier_length_pool","buildBezierData","keyData","to","ti","bezierName","dataManager","comps","layerData","kLen","completed","tt","td","hasMask","maskProps","convertPathsToAbsoluteValues","findCompLayers","completeShapes","completeText","__used","stringify","ks","checkVersion","minimum","animVersionString","animVersion","split","completeData","checkColors","checkText","checkChars","checkShapes","assets","singleShape","updateTextLayer","textLayer","documentData","iterateLayers","minimumVersion","pathData","__converted","iterateShapes","cl","moduleOb","setUpNode","font","family","parentNode","fontFamily","node","innerHTML","left","top","fontSize","fontVariant","fontStyle","fontWeight","letterSpacing","body","offsetWidth","parent","checkLoadedFonts","fonts","loadedCount","loaded","fOrigin","origin","Typekit","load","typekitLoaded","async","active","monoCase","sansCase","removeChild","now","initTime","maxWaitingTime","createHelper","def","fontData","tHelper","fFamily","textContent","fClass","tCanvasHelper","getContext","addFonts","list","fontArr","fPath","rel","helper","addChars","found","ch","getCharData","char","console","warn","emptyChar","measureText","fontName","size","getFontByName","fName","getCombinedCharacterCodes","combinedCharacters","concat","Font","interpolateValue","previousValue","caching","newValue","offsetTime","nextKeyData","iterationIndex","lastIndex","keyframes","fnc","ind","_lastBezierData","__fnct","segmentPerc","distanceInLine","lastFrame","_lastAddedLength","_lastPoint","outX","outY","inX","inY","keyValue","constructor","initP","endP","calculateMultidimensionalValueAtCurrentTime","renderResult","mult","lastPValue","calculateUnidimenstionalValueAtCurrentTime","getValueAtCurrentTime","endTime","_caching","calculateValueAtCurrentTime","getNoValue","ValueProperty","vel","MultiDimensionalProperty","lastValue","KeyframedValueProperty","st","KeyframedMultidimensionalProperty","arrLen","TransformPropertyFactory","applyToMatrix","mat","rz","or","px","py","pz","processKeys","forceRender","autoOriented","getValueAtTime","v1","v2","atan2","setInverted","inverted","iv","autoOrient","TransformProperty","getTransformProperty","setPathData","setLength","point_pool","doubleArrayLength","setXYAt","setTripleAt","vX","vY","oX","oY","iX","iY","reverse","newPath","vertices","outPoints","inPoints","init","cnt","interpolateShape","isCurrentRender","keyPropS","keyPropE","isHold","vertexValue","hasModified","interpolateShapeCurrentTime","localShapeCollection","getShapeValue","resetShape","ShapeProperty","shape_pool","shapeCollection_pool","newShapeCollection","addShape","KeyframedShapeProperty","dataProp","keys","RectShapeProperty","EllShapeProperty","StarShapeProperty","getConstructorFunction","getKeyframedConstructorFunction","convertEllToPath","s0","s1","_cw","_v","cPoint","convertPolygonToPath","numPts","rad","roundness","os","perimSegment","currentAng","ox","oy","convertStarToPath","longFlag","longRad","shortRad","ir","longRound","shortRound","is","longPerimSegment","shortPerimSegment","convertToPath","convertRectToPath","v0","ShapeModifiers","registerModifier","modifiers","getModifier","initModifierProperties","addShapeToModifier","sValue","eValue","pathsData","calculateShapeEdges","shapeLength","totalModifierLength","segments","segmentOb","shapeSegments","shapeS","shapeE","releasePathsData","release","processShapes","_s","shapePaths","totalShapeLength","releaseShapes","edges","newShapesData","addShapes","lastShape","pop","addPaths","newPaths","addSegment","shapePath","newShape","addSegmentFromArray","shapeSegment","currentLengthData","segmentCount","segment","rd","processPath","cloned_path","currentV","currentI","currentO","closerV","distance","newPosPerc","index","pMatrix","rMatrix","sMatrix","tMatrix","matrix","applyTransforms","scaleX","scaleY","elemsData","_currentCopies","_elements","_groups","cont","unshift","resetElements","_processed","cloneElements","newElements","changeGroupRender","renderFlag","_render","items","itemsTransform","copies","ceil","group","ix","reloadShapes","offsetModulo","roundOffset","pProps","rProps","sProps","iteration","comparePoints","values","ImagePreloader","imageLoaded","loadedAssets","totalImages","imagesLoadedCb","getAssetsPath","assetsPath","imagePath","indexOf","u","loadImage","img","src","loadAssets","cb","totalAssets","setPath","setAssetsPath","featureSupport","createAlphaToLuminanceFilter","searchProperties","maskManager","getMaskProperty","getMeasures","xPos","yPos","pathInfo","currentLength","currentPoint","pointInd","segmentInd","prevPoint","tanAngle","animators","matrixHelper","mHelper","renderedLettersCount","letters","tLength","pi","animatorSelector","letterValue","yOff","firstLine","offf","xPathPos","yPathPos","elemOpacity","letterSw","letterSc","letterFc","letterO","initPathPos","initSegmentInd","initPointInd","currentLine","lineLength","letterM","letterP","defaultPropsArray","line","extra","an","animatorOffset","getMult","anIndexes","totalChars","add","rot","atan","update","updated","setCurrentData","_forceRender","textDocumentData","textKeys","completeTextData","buildFinalText","text","charactersArray","charAt","newLineFlag","charData","anchorGrouping","currentSize","currentPos","lineWidth","maxLineWidth","toLowerCase","trackingOffset","currentHeight","boxHeight","lastSpaceIndex","currentChar","uncollapsedSpaces","animatorData","letterData","based","indexes","rn","newInd","currentInd","updateDocumentData","newData","dData","recalculate","canResizeFont","_canResize","setMinimumFontSize","_fontValue","updateRange","newCharsFlag","textProperty","divisor","finalS","finalE","easer","ne","xe","tot","pool_factory","initialLength","_create","_release","_clone","pooling","create","cloned","shapeCollection","checkLayers","num","ip","buildItem","checkPendingElements","createItem","layer","createImage","createComp","createSolid","createNull","createShape","createText","createCamera","Error","buildAllItems","includeLayers","newLayers","setProjectInterface","pInterface","projectInterface","initItems","buildElementParenting","parentName","hierarchy","setAsParent","setHierarchy","addPendingElement","searchExtraCompositions","xt","initExpressions","registerComposition","configAnimation","animData","wrapper","fr","maskId","updateContainerSize","appendElementInPos","setMatte","checkParenting","renderFrame","currentFrame","prepareFrame","getBaseElement","nextElement","insertBefore","hide","display","show","finalMat","finalTransform","mProp","getMaskelement","pathNodes","pathString","pathShapeValue","_isParent","prepareProperties","isVisible","_matMdf","_opMdf","ao","renderTransform","globalToLocal","transforms","ptNew","initRenderable","isInRange","hidden","isTransparent","prepareRenderableFrame","checkLayerLimits","checkTransparency","renderRenderable","renderableEffectsManager","sourceRectAtTime","getLayerSize","initRendererElement","createContainerElements","addMasks","createContent","hd","renderElement","renderInnerContent","innerElem","destroyBaseElement","stops","setGradientData","setGradientOpacity","pathElement","gradientId","gfill","gf","cst","opacityId","opFill","ms","ost","checkMasks","layerInterface","LayerExpressionInterface","registerMaskInterface","effectsInterface","EffectsExpressionInterface","createEffectsInterface","registerEffectsInterface","compInterface","CompExpressionInterface","shapeInterface","ShapeExpressionInterface","content","textInterface","TextExpressionInterface","blendModeEnums","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","getBlendMode","bm","setBlendMode","blendModeValue","sr","getType","_sizeChanged","gg","layerElementParent","masker","maskGroup","maskGrouper","alphaRect","ln","cp","clipId","cpGroup","addShapeToModifiers","renderModifiers","lcEnum","ljEnum","searchProcessedElement","addProcessedElement","buildShapeString","shapeString","textAnimator","buildNewText","createPathShape","shapeStr","_fontSize","applyTextPropertiesToMatrix","lineNumber","buildColor","colorData","emptyProp","timeRemapped","setElements","elems","getElements","destroyElements","assetPath","setAttributeNS","textContainer","buildTextContents","textArray","textContents","currentTextContent","usesGlyphs","tSpan","cachedSpansLength","tElement","justify","time","textBox","getBBox","bbox","renderedLetter","textSpan","initSecondaryElement","identityMatrix","buildExpressionInterface","searchShapes","createStyleElement","elementData","gradientConstructor","lc","lj","ml","createGroupElement","createTransformElement","createShapeElement","ownTransformers","shapeProperty","setElementStyles","render","currentTransform","modifier","processedPos","ownStyles","ownModifiers","renderShape","renderFill","renderGradient","renderStroke","renderPath","itemData","pathStringTransformed","redraw","iterations","lLen","styleData","styleElem","hasOpacity","attr1","attr2","cValues","oValues","ang","colorBlack","colorWhite","opacity","initialize","groupPath","elemChildren","children","childNodes","removeAttribute","pathMasker","dasharrayValue","getTotalLength","units","color1","color2","color3","tableR","tableG","tableB","feFunc","getTableValue","inputBlack","inputWhite","gamma","outputBlack","outputWhite","colorValue","table","outputDelta","inputDelta","join","col","_svgMatteSymbols","_svgMatteMaskCounter","findSymbol","replaceInParent","symbolId","nextChild","useElem","setElementAsMask","symbol","removeElement","ev","animItem","registeredAnimations","isPaused","subtractPlayingCount","AnimationItem","setupAnimation","setData","addPlayingCount","playingAnimationsNum","activate","idled","setParams","resume","nowTime","elapsedTime","advanceTime","_stopped","first","animElements","getElementsByClassName","getElementsByTagName","div","isLoaded","currentRawFrame","frameMult","playSpeed","playDirection","playCount","animationID","timeCompleted","segmentPos","_idle","self","context","animType","CanvasRenderer","HybridRenderer","parseInt","autoloadSegments","substr","xhr","XMLHttpRequest","lastIndexOf","fileName","open","send","onreadystatechange","status","responseText","response","err","wrapperAttributes","attributes","getNamedItem","prerender","tf","loadNextSegment","trigger","shift","segmentPath","loadSegments","_this","imagePreloader","updaFrameModifier","waitForFontsLoaded","checkLoaded","checkFontsLoaded","elementLoaded","gotoFrame","setSubframe","setCurrentRawFrameValue","frameModifier","goToAndPlay","nextValue","_isComplete","checkSegments","adjustSegment","setSegment","end","pendingFrame","playSegments","forceFlag","resetSegments","remove","onEnterFrame","onLoopComplete","onComplete","onSegmentStart","onDestroy","getPath","getAssets","lottiejs","__getFactory","version","scripts","myScript","queryString","variable","vars","pair","decodeURIComponent","setInterval","rawScriptExports","compiledTemplate","injectStyles","scopeId","moduleIdentifier","esModule","scriptExports","staticRenderFns","_scopeId","hook","$vnode","ssrContext","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","functional","existing","beforeCreate","_vm","_h","$createElement","_self","_c","ref"],"mappings":"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","file":"lib/vue-lottie.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vue-lottie\"] = factory();\n\telse\n\t\troot[\"vue-lottie\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vue-lottie\"] = factory();\n\telse\n\t\troot[\"vue-lottie\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/vue-lottie/dist\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(4)(\n  /* script */\n  __webpack_require__(2),\n  /* template */\n  __webpack_require__(5),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_vue_lottie__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_vue_lottie___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__components_vue_lottie__);\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (__WEBPACK_IMPORTED_MODULE_0__components_vue_lottie___default.a);\n\n/***/ }),\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lottie_web_build_player_lottie_light_js__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lottie_web_build_player_lottie_light_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_lottie_web_build_player_lottie_light_js__);\n//\n//\n//\n//\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    props: {\n        data: {\n            type: Object,\n            required: true\n        },\n        loop: Boolean,\n        autoplay: {\n            type: Boolean,\n            default: true\n        },\n        settings: Object,\n        height: Number,\n        width: Number\n    },\n\n    data: function data() {\n        return {\n            animation: null\n        };\n    },\n\n    computed: {\n        style: function style() {\n            var style = {};\n            if (this.width) {\n                style.width = this.width + 'px';\n            }\n            if (this.height) {\n                style.height = this.height + 'px';\n            }\n            return style;\n        }\n    },\n    methods: {\n        play: function play() {\n            this.animation.play();\n        },\n        pause: function pause() {\n            this.animation.pause();\n        },\n        stop: function stop() {\n            this.animation.stop();\n        },\n        setSpeed: function setSpeed(val) {\n            this.animation.setSpeed(val);\n        }\n    },\n    mounted: function mounted() {\n        this.animation = __WEBPACK_IMPORTED_MODULE_0_lottie_web_build_player_lottie_light_js___default.a.loadAnimation({\n            container: this.$refs.lavContainer,\n            renderer: 'svg',\n            loop: this.loop,\n            autoplay: this.autoplay,\n            animationData: this.data,\n            rendererSettings: this.settings\n        });\n    }\n});\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;(function(root, factory) {\r\n    if (true) {\r\n        !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\r\n            return factory(root);\r\n        }.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n    } else if (typeof module === \"object\" && module.exports) {\r\n        module.exports = factory(root);\r\n    } else {\r\n        root.lottie = factory(root);\r\n        root.bodymovin = root.lottie;\r\n    }\r\n}((window || {}), function(window) {\r\n    \"use strict\";\r\n    var svgNS = \"http://www.w3.org/2000/svg\";\r\n\r\nvar locationHref = '';\r\n\r\nvar initialDefaultFrame = -999999;\r\n\r\nvar subframeEnabled = true;\r\nvar expressionsPlugin;\r\nvar isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\r\nvar cachedColors = {};\r\nvar bm_rounder = Math.round;\r\nvar bm_rnd;\r\nvar bm_pow = Math.pow;\r\nvar bm_sqrt = Math.sqrt;\r\nvar bm_abs = Math.abs;\r\nvar bm_floor = Math.floor;\r\nvar bm_max = Math.max;\r\nvar bm_min = Math.min;\r\nvar blitter = 10;\r\n\r\nvar BMMath = {};\r\n(function(){\r\n    var propertyNames = Object.getOwnPropertyNames(Math);\r\n    var i, len = propertyNames.length;\r\n    for(i=0;i<len;i+=1){\r\n        BMMath[propertyNames[i]] = Math[propertyNames[i]];\r\n    }\r\n}());\r\n\r\nfunction ProjectInterface(){return {};}\r\n\r\nBMMath.random = Math.random;\r\nBMMath.abs = function(val){\r\n    var tOfVal = typeof val;\r\n    if(tOfVal === 'object' && val.length){\r\n        var absArr = createSizedArray(val.length);\r\n        var i, len = val.length;\r\n        for(i=0;i<len;i+=1){\r\n            absArr[i] = Math.abs(val[i]);\r\n        }\r\n        return absArr;\r\n    }\r\n    return Math.abs(val);\r\n\r\n};\r\nvar defaultCurveSegments = 150;\r\nvar degToRads = Math.PI/180;\r\nvar roundCorner = 0.5519;\r\n\r\nfunction roundValues(flag){\r\n    if(flag){\r\n        bm_rnd = Math.round;\r\n    }else{\r\n        bm_rnd = function(val){\r\n            return val;\r\n        };\r\n    }\r\n}\r\nroundValues(false);\r\n\r\nfunction styleDiv(element){\r\n    element.style.position = 'absolute';\r\n    element.style.top = 0;\r\n    element.style.left = 0;\r\n    element.style.display = 'block';\r\n    element.style.transformOrigin = element.style.webkitTransformOrigin = '0 0';\r\n    element.style.backfaceVisibility  = element.style.webkitBackfaceVisibility = 'visible';\r\n    element.style.transformStyle = element.style.webkitTransformStyle = element.style.mozTransformStyle = \"preserve-3d\";\r\n}\r\n\r\nfunction BMEnterFrameEvent(n,c,t,d){\r\n    this.type = n;\r\n    this.currentTime = c;\r\n    this.totalTime = t;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMCompleteEvent(n,d){\r\n    this.type = n;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMCompleteLoopEvent(n,c,t,d){\r\n    this.type = n;\r\n    this.currentLoop = t;\r\n    this.totalLoops = c;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMSegmentStartEvent(n,f,t){\r\n    this.type = n;\r\n    this.firstFrame = f;\r\n    this.totalFrames = t;\r\n}\r\n\r\nfunction BMDestroyEvent(n,t){\r\n    this.type = n;\r\n    this.target = t;\r\n}\r\n\r\nfunction randomString(length, chars){\r\n    if(chars === undefined){\r\n        chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890';\r\n    }\r\n    var i;\r\n    var result = '';\r\n    for (i = length; i > 0; --i) result += chars[Math.round(Math.random() * (chars.length - 1))];\r\n    return result;\r\n}\r\n\r\nfunction HSVtoRGB(h, s, v) {\r\n    var r, g, b, i, f, p, q, t;\r\n    i = Math.floor(h * 6);\r\n    f = h * 6 - i;\r\n    p = v * (1 - s);\r\n    q = v * (1 - f * s);\r\n    t = v * (1 - (1 - f) * s);\r\n    switch (i % 6) {\r\n        case 0: r = v; g = t; b = p; break;\r\n        case 1: r = q; g = v; b = p; break;\r\n        case 2: r = p; g = v; b = t; break;\r\n        case 3: r = p; g = q; b = v; break;\r\n        case 4: r = t; g = p; b = v; break;\r\n        case 5: r = v; g = p; b = q; break;\r\n    }\r\n    return [ r,\r\n        g,\r\n         b ];\r\n}\r\n\r\nfunction RGBtoHSV(r, g, b) {\r\n    var max = Math.max(r, g, b), min = Math.min(r, g, b),\r\n        d = max - min,\r\n        h,\r\n        s = (max === 0 ? 0 : d / max),\r\n        v = max / 255;\r\n\r\n    switch (max) {\r\n        case min: h = 0; break;\r\n        case r: h = (g - b) + d * (g < b ? 6: 0); h /= 6 * d; break;\r\n        case g: h = (b - r) + d * 2; h /= 6 * d; break;\r\n        case b: h = (r - g) + d * 4; h /= 6 * d; break;\r\n    }\r\n\r\n    return [\r\n         h,\r\n         s,\r\n         v\r\n    ];\r\n}\r\n\r\nfunction addSaturationToRGB(color,offset){\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[1] += offset;\r\n    if (hsv[1] > 1) {\r\n        hsv[1] = 1;\r\n    }\r\n    else if (hsv[1] <= 0) {\r\n        hsv[1] = 0;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nfunction addBrightnessToRGB(color,offset){\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[2] += offset;\r\n    if (hsv[2] > 1) {\r\n        hsv[2] = 1;\r\n    }\r\n    else if (hsv[2] < 0) {\r\n        hsv[2] = 0;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nfunction addHueToRGB(color,offset) {\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[0] += offset/360;\r\n    if (hsv[0] > 1) {\r\n        hsv[0] -= 1;\r\n    }\r\n    else if (hsv[0] < 0) {\r\n        hsv[0] += 1;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nvar rgbToHex = (function(){\r\n    var colorMap = [];\r\n    var i;\r\n    var hex;\r\n    for(i=0;i<256;i+=1){\r\n        hex = i.toString(16);\r\n        colorMap[i] = hex.length == 1 ? '0' + hex : hex;\r\n    }\r\n\r\n    return function(r, g, b) {\r\n        if(r<0){\r\n            r = 0;\r\n        }\r\n        if(g<0){\r\n            g = 0;\r\n        }\r\n        if(b<0){\r\n            b = 0;\r\n        }\r\n        return '#' + colorMap[r] + colorMap[g] + colorMap[b];\r\n    };\r\n}());\r\nfunction BaseEvent(){}\r\nBaseEvent.prototype = {\r\n\ttriggerEvent: function (eventName, args) {\r\n\t    if (this._cbs[eventName]) {\r\n\t        var len = this._cbs[eventName].length;\r\n\t        for (var i = 0; i < len; i++){\r\n\t            this._cbs[eventName][i](args);\r\n\t        }\r\n\t    }\r\n\t},\r\n\taddEventListener: function (eventName, callback) {\r\n\t    if (!this._cbs[eventName]){\r\n\t        this._cbs[eventName] = [];\r\n\t    }\r\n\t    this._cbs[eventName].push(callback);\r\n\r\n\t\treturn function() {\r\n\t\t\tthis.removeEventListener(eventName, callback);\r\n\t\t}.bind(this);\r\n\t},\r\n\tremoveEventListener: function (eventName,callback){\r\n\t    if (!callback){\r\n\t        this._cbs[eventName] = null;\r\n\t    }else if(this._cbs[eventName]){\r\n\t        var i = 0, len = this._cbs[eventName].length;\r\n\t        while(i<len){\r\n\t            if(this._cbs[eventName][i] === callback){\r\n\t                this._cbs[eventName].splice(i,1);\r\n\t                i -=1;\r\n\t                len -= 1;\r\n\t            }\r\n\t            i += 1;\r\n\t        }\r\n\t        if(!this._cbs[eventName].length){\r\n\t            this._cbs[eventName] = null;\r\n\t        }\r\n\t    }\r\n\t}\r\n};\r\nvar createTypedArray = (function(){\r\n\tfunction createRegularArray(type, len){\r\n\t\tvar i = 0, arr = [], value;\r\n\t\tswitch(type) {\r\n\t\t\tcase 'int16':\r\n\t\t\tcase 'uint8c':\r\n\t\t\t\tvalue = 1;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tvalue = 1.1;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tarr.push(value);\r\n\t\t}\r\n\t\treturn arr;\r\n\t}\r\n\tfunction createTypedArray(type, len){\r\n\t\tif(type === 'float32') {\r\n\t\t\treturn new Float32Array(len);\r\n\t\t} else if(type === 'int16') {\r\n\t\t\treturn new Int16Array(len);\r\n\t\t} else if(type === 'uint8c') {\r\n\t\t\treturn new Uint8ClampedArray(len);\r\n\t\t}\r\n\t}\r\n\tif(typeof Uint8ClampedArray === 'function' && typeof Float32Array === 'function') {\r\n\t\treturn createTypedArray;\r\n\t} else {\r\n\t\treturn createRegularArray;\r\n\t}\r\n}());\r\n\r\nfunction createSizedArray(len) {\r\n\treturn Array.apply(null,{length:len});\r\n}\r\nfunction createNS(type) {\r\n\t//return {appendChild:function(){},setAttribute:function(){},style:{}}\r\n\treturn document.createElementNS(svgNS, type);\r\n}\r\nfunction createTag(type) {\r\n\t//return {appendChild:function(){},setAttribute:function(){},style:{}}\r\n\treturn document.createElement(type);\r\n}\r\n/*!\r\n Transformation Matrix v2.0\r\n (c) Epistemex 2014-2015\r\n www.epistemex.com\r\n By Ken Fyrstenberg\r\n Contributions by leeoniya.\r\n License: MIT, header required.\r\n */\r\n\r\n/**\r\n * 2D transformation matrix object initialized with identity matrix.\r\n *\r\n * The matrix can synchronize a canvas context by supplying the context\r\n * as an argument, or later apply current absolute transform to an\r\n * existing context.\r\n *\r\n * All values are handled as floating point values.\r\n *\r\n * @param {CanvasRenderingContext2D} [context] - Optional context to sync with Matrix\r\n * @prop {number} a - scale x\r\n * @prop {number} b - shear y\r\n * @prop {number} c - shear x\r\n * @prop {number} d - scale y\r\n * @prop {number} e - translate x\r\n * @prop {number} f - translate y\r\n * @prop {CanvasRenderingContext2D|null} [context=null] - set or get current canvas context\r\n * @constructor\r\n */\r\n\r\nvar Matrix = (function(){\r\n\r\n    var _cos = Math.cos;\r\n    var _sin = Math.sin;\r\n    var _tan = Math.tan;\r\n    var _rnd = Math.round;\r\n\r\n    function reset(){\r\n        this.props[0] = 1;\r\n        this.props[1] = 0;\r\n        this.props[2] = 0;\r\n        this.props[3] = 0;\r\n        this.props[4] = 0;\r\n        this.props[5] = 1;\r\n        this.props[6] = 0;\r\n        this.props[7] = 0;\r\n        this.props[8] = 0;\r\n        this.props[9] = 0;\r\n        this.props[10] = 1;\r\n        this.props[11] = 0;\r\n        this.props[12] = 0;\r\n        this.props[13] = 0;\r\n        this.props[14] = 0;\r\n        this.props[15] = 1;\r\n        return this;\r\n    }\r\n\r\n    function rotate(angle) {\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateX(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(1, 0, 0, 0, 0, mCos, -mSin, 0, 0, mSin,  mCos, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateY(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos,  0,  mSin, 0, 0, 1, 0, 0, -mSin,  0,  mCos, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateZ(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function shear(sx,sy){\r\n        return this._t(1, sy, sx, 1, 0, 0);\r\n    }\r\n\r\n    function skew(ax, ay){\r\n        return this.shear(_tan(ax), _tan(ay));\r\n    }\r\n\r\n    function skewFromAxis(ax, angle){\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos, mSin,  0, 0, -mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1)\r\n            ._t(1, 0,  0, 0, _tan(ax),  1, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1)\r\n            ._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);\r\n        //return this._t(mCos, mSin, -mSin, mCos, 0, 0)._t(1, 0, _tan(ax), 1, 0, 0)._t(mCos, -mSin, mSin, mCos, 0, 0);\r\n    }\r\n\r\n    function scale(sx, sy, sz) {\r\n        sz = isNaN(sz) ? 1 : sz;\r\n        if(sx == 1 && sy == 1 && sz == 1){\r\n            return this;\r\n        }\r\n        return this._t(sx, 0, 0, 0, 0, sy, 0, 0, 0, 0, sz, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function setTransform(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {\r\n        this.props[0] = a;\r\n        this.props[1] = b;\r\n        this.props[2] = c;\r\n        this.props[3] = d;\r\n        this.props[4] = e;\r\n        this.props[5] = f;\r\n        this.props[6] = g;\r\n        this.props[7] = h;\r\n        this.props[8] = i;\r\n        this.props[9] = j;\r\n        this.props[10] = k;\r\n        this.props[11] = l;\r\n        this.props[12] = m;\r\n        this.props[13] = n;\r\n        this.props[14] = o;\r\n        this.props[15] = p;\r\n        return this;\r\n    }\r\n\r\n    function translate(tx, ty, tz) {\r\n        tz = tz || 0;\r\n        if(tx !== 0 || ty !== 0 || tz !== 0){\r\n            return this._t(1,0,0,0,0,1,0,0,0,0,1,0,tx,ty,tz,1);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function transform(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2, m2, n2, o2, p2) {\r\n\r\n        var _p = this.props;\r\n\r\n        if(a2 === 1 && b2 === 0 && c2 === 0 && d2 === 0 && e2 === 0 && f2 === 1 && g2 === 0 && h2 === 0 && i2 === 0 && j2 === 0 && k2 === 1 && l2 === 0){\r\n            //NOTE: commenting this condition because TurboFan deoptimizes code when present\r\n            //if(m2 !== 0 || n2 !== 0 || o2 !== 0){\r\n                _p[12] = _p[12] * a2 + _p[15] * m2;\r\n                _p[13] = _p[13] * f2 + _p[15] * n2;\r\n                _p[14] = _p[14] * k2 + _p[15] * o2;\r\n                _p[15] = _p[15] * p2;\r\n            //}\r\n            this._identityCalculated = false;\r\n            return this;\r\n        }\r\n\r\n        var a1 = _p[0];\r\n        var b1 = _p[1];\r\n        var c1 = _p[2];\r\n        var d1 = _p[3];\r\n        var e1 = _p[4];\r\n        var f1 = _p[5];\r\n        var g1 = _p[6];\r\n        var h1 = _p[7];\r\n        var i1 = _p[8];\r\n        var j1 = _p[9];\r\n        var k1 = _p[10];\r\n        var l1 = _p[11];\r\n        var m1 = _p[12];\r\n        var n1 = _p[13];\r\n        var o1 = _p[14];\r\n        var p1 = _p[15];\r\n\r\n        /* matrix order (canvas compatible):\r\n         * ace\r\n         * bdf\r\n         * 001\r\n         */\r\n        _p[0] = a1 * a2 + b1 * e2 + c1 * i2 + d1 * m2;\r\n        _p[1] = a1 * b2 + b1 * f2 + c1 * j2 + d1 * n2 ;\r\n        _p[2] = a1 * c2 + b1 * g2 + c1 * k2 + d1 * o2 ;\r\n        _p[3] = a1 * d2 + b1 * h2 + c1 * l2 + d1 * p2 ;\r\n\r\n        _p[4] = e1 * a2 + f1 * e2 + g1 * i2 + h1 * m2 ;\r\n        _p[5] = e1 * b2 + f1 * f2 + g1 * j2 + h1 * n2 ;\r\n        _p[6] = e1 * c2 + f1 * g2 + g1 * k2 + h1 * o2 ;\r\n        _p[7] = e1 * d2 + f1 * h2 + g1 * l2 + h1 * p2 ;\r\n\r\n        _p[8] = i1 * a2 + j1 * e2 + k1 * i2 + l1 * m2 ;\r\n        _p[9] = i1 * b2 + j1 * f2 + k1 * j2 + l1 * n2 ;\r\n        _p[10] = i1 * c2 + j1 * g2 + k1 * k2 + l1 * o2 ;\r\n        _p[11] = i1 * d2 + j1 * h2 + k1 * l2 + l1 * p2 ;\r\n\r\n        _p[12] = m1 * a2 + n1 * e2 + o1 * i2 + p1 * m2 ;\r\n        _p[13] = m1 * b2 + n1 * f2 + o1 * j2 + p1 * n2 ;\r\n        _p[14] = m1 * c2 + n1 * g2 + o1 * k2 + p1 * o2 ;\r\n        _p[15] = m1 * d2 + n1 * h2 + o1 * l2 + p1 * p2 ;\r\n\r\n        this._identityCalculated = false;\r\n        return this;\r\n    }\r\n\r\n    function isIdentity() {\r\n        if(!this._identityCalculated){\r\n            this._identity = !(this.props[0] !== 1 || this.props[1] !== 0 || this.props[2] !== 0 || this.props[3] !== 0 || this.props[4] !== 0 || this.props[5] !== 1 || this.props[6] !== 0 || this.props[7] !== 0 || this.props[8] !== 0 || this.props[9] !== 0 || this.props[10] !== 1 || this.props[11] !== 0 || this.props[12] !== 0 || this.props[13] !== 0 || this.props[14] !== 0 || this.props[15] !== 1);\r\n            this._identityCalculated = true;\r\n        }\r\n        return this._identity;\r\n    }\r\n\r\n    function equals(matr){\r\n        var i = 0;\r\n        while (i < 16) {\r\n            if(matr.props[i] !== this.props[i]) {\r\n                return false;\r\n            }\r\n            i+=1;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function clone(matr){\r\n        var i;\r\n        for(i=0;i<16;i+=1){\r\n            matr.props[i] = this.props[i];\r\n        }\r\n    }\r\n\r\n    function cloneFromProps(props){\r\n        var i;\r\n        for(i=0;i<16;i+=1){\r\n            this.props[i] = props[i];\r\n        }\r\n    }\r\n\r\n    function applyToPoint(x, y, z) {\r\n\r\n        return {\r\n            x: x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],\r\n            y: x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],\r\n            z: x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]\r\n        };\r\n        /*return {\r\n         x: x * me.a + y * me.c + me.e,\r\n         y: x * me.b + y * me.d + me.f\r\n         };*/\r\n    }\r\n    function applyToX(x, y, z) {\r\n        return x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12];\r\n    }\r\n    function applyToY(x, y, z) {\r\n        return x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13];\r\n    }\r\n    function applyToZ(x, y, z) {\r\n        return x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14];\r\n    }\r\n\r\n    function inversePoint(pt) {\r\n        var determinant = this.props[0] * this.props[5] - this.props[1] * this.props[4];\r\n        var a = this.props[5]/determinant;\r\n        var b = - this.props[1]/determinant;\r\n        var c = - this.props[4]/determinant;\r\n        var d = this.props[0]/determinant;\r\n        var e = (this.props[4] * this.props[13] - this.props[5] * this.props[12])/determinant;\r\n        var f = - (this.props[0] * this.props[13] - this.props[1] * this.props[12])/determinant;\r\n        return [pt[0] * a + pt[1] * c + e, pt[0] * b + pt[1] * d + f, 0];\r\n    }\r\n\r\n    function inversePoints(pts){\r\n        var i, len = pts.length, retPts = [];\r\n        for(i=0;i<len;i+=1){\r\n            retPts[i] = inversePoint(pts[i]);\r\n        }\r\n        return retPts;\r\n    }\r\n\r\n    function applyToTriplePoints(pt1, pt2, pt3) {\r\n        var arr = createTypedArray('float32', 6);\r\n        if(this.isIdentity()) {\r\n            arr[0] = pt1[0];\r\n            arr[1] = pt1[1];\r\n            arr[2] = pt2[0];\r\n            arr[3] = pt2[1];\r\n            arr[4] = pt3[0];\r\n            arr[5] = pt3[1];\r\n        } else {\r\n            var p0 = this.props[0], p1 = this.props[1], p4 = this.props[4], p5 = this.props[5], p12 = this.props[12], p13 = this.props[13];\r\n            arr[0] = pt1[0] * p0 + pt1[1] * p4 + p12;\r\n            arr[1] = pt1[0] * p1 + pt1[1] * p5 + p13;\r\n            arr[2] = pt2[0] * p0 + pt2[1] * p4 + p12;\r\n            arr[3] = pt2[0] * p1 + pt2[1] * p5 + p13;\r\n            arr[4] = pt3[0] * p0 + pt3[1] * p4 + p12;\r\n            arr[5] = pt3[0] * p1 + pt3[1] * p5 + p13;\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function applyToPointArray(x,y,z){\r\n        var arr;\r\n        if(this.isIdentity()) {\r\n            arr = [x,y,z];\r\n        } else {\r\n            arr = [x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]];\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function applyToPointStringified(x, y) {\r\n        if(this.isIdentity()) {\r\n            return x + ',' + y;\r\n        }\r\n        return (x * this.props[0] + y * this.props[4] + this.props[12])+','+(x * this.props[1] + y * this.props[5] + this.props[13]);\r\n    }\r\n\r\n    function toCSS() {\r\n        //Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.\r\n        /*if(this.isIdentity()) {\r\n            return '';\r\n        }*/\r\n        var i = 0;\r\n        var props = this.props;\r\n        var cssValue = 'matrix3d(';\r\n        var v = 10000;\r\n        while(i<16){\r\n            cssValue += _rnd(props[i]*v)/v;\r\n            cssValue += i === 15 ? ')':',';\r\n            i += 1;\r\n        }\r\n        return cssValue;\r\n    }\r\n\r\n    function to2dCSS() {\r\n        //Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.\r\n        /*if(this.isIdentity()) {\r\n            return '';\r\n        }*/\r\n        var v = 10000;\r\n        var props = this.props;\r\n        return \"matrix(\" + _rnd(props[0]*v)/v + ',' + _rnd(props[1]*v)/v + ',' + _rnd(props[4]*v)/v + ',' + _rnd(props[5]*v)/v + ',' + _rnd(props[12]*v)/v + ',' + _rnd(props[13]*v)/v + \")\";\r\n    }\r\n\r\n    return function(){\r\n        this.reset = reset;\r\n        this.rotate = rotate;\r\n        this.rotateX = rotateX;\r\n        this.rotateY = rotateY;\r\n        this.rotateZ = rotateZ;\r\n        this.skew = skew;\r\n        this.skewFromAxis = skewFromAxis;\r\n        this.shear = shear;\r\n        this.scale = scale;\r\n        this.setTransform = setTransform;\r\n        this.translate = translate;\r\n        this.transform = transform;\r\n        this.applyToPoint = applyToPoint;\r\n        this.applyToX = applyToX;\r\n        this.applyToY = applyToY;\r\n        this.applyToZ = applyToZ;\r\n        this.applyToPointArray = applyToPointArray;\r\n        this.applyToTriplePoints = applyToTriplePoints;\r\n        this.applyToPointStringified = applyToPointStringified;\r\n        this.toCSS = toCSS;\r\n        this.to2dCSS = to2dCSS;\r\n        this.clone = clone;\r\n        this.cloneFromProps = cloneFromProps;\r\n        this.equals = equals;\r\n        this.inversePoints = inversePoints;\r\n        this.inversePoint = inversePoint;\r\n        this._t = this.transform;\r\n        this.isIdentity = isIdentity;\r\n        this._identity = true;\r\n        this._identityCalculated = false;\r\n\r\n        this.props = createTypedArray('float32', 16);\r\n        this.reset();\r\n    };\r\n}());\r\n\r\n/*\r\n Copyright 2014 David Bau.\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining\r\n a copy of this software and associated documentation files (the\r\n \"Software\"), to deal in the Software without restriction, including\r\n without limitation the rights to use, copy, modify, merge, publish,\r\n distribute, sublicense, and/or sell copies of the Software, and to\r\n permit persons to whom the Software is furnished to do so, subject to\r\n the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be\r\n included in all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\n IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\n CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\n TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n */\r\n\r\n(function (pool, math) {\r\n//\r\n// The following constants are related to IEEE 754 limits.\r\n//\r\n    var global = this,\r\n        width = 256,        // each RC4 output is 0 <= x < 256\r\n        chunks = 6,         // at least six RC4 outputs for each double\r\n        digits = 52,        // there are 52 significant digits in a double\r\n        rngname = 'random', // rngname: name for Math.random and Math.seedrandom\r\n        startdenom = math.pow(width, chunks),\r\n        significance = math.pow(2, digits),\r\n        overflow = significance * 2,\r\n        mask = width - 1,\r\n        nodecrypto;         // node.js crypto module, initialized at the bottom.\r\n\r\n//\r\n// seedrandom()\r\n// This is the seedrandom function described above.\r\n//\r\n    function seedrandom(seed, options, callback) {\r\n        var key = [];\r\n        options = (options === true) ? { entropy: true } : (options || {});\r\n\r\n        // Flatten the seed string or build one from local entropy if needed.\r\n        var shortseed = mixkey(flatten(\r\n            options.entropy ? [seed, tostring(pool)] :\r\n                (seed === null) ? autoseed() : seed, 3), key);\r\n\r\n        // Use the seed to initialize an ARC4 generator.\r\n        var arc4 = new ARC4(key);\r\n\r\n        // This function returns a random double in [0, 1) that contains\r\n        // randomness in every bit of the mantissa of the IEEE 754 value.\r\n        var prng = function() {\r\n            var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\r\n                d = startdenom,                 //   and denominator d = 2 ^ 48.\r\n                x = 0;                          //   and no 'extra last byte'.\r\n            while (n < significance) {          // Fill up all significant digits by\r\n                n = (n + x) * width;              //   shifting numerator and\r\n                d *= width;                       //   denominator and generating a\r\n                x = arc4.g(1);                    //   new least-significant-byte.\r\n            }\r\n            while (n >= overflow) {             // To avoid rounding up, before adding\r\n                n /= 2;                           //   last byte, shift everything\r\n                d /= 2;                           //   right using integer math until\r\n                x >>>= 1;                         //   we have exactly the desired bits.\r\n            }\r\n            return (n + x) / d;                 // Form the number within [0, 1).\r\n        };\r\n\r\n        prng.int32 = function() { return arc4.g(4) | 0; };\r\n        prng.quick = function() { return arc4.g(4) / 0x100000000; };\r\n        prng.double = prng;\r\n\r\n        // Mix the randomness into accumulated entropy.\r\n        mixkey(tostring(arc4.S), pool);\r\n\r\n        // Calling convention: what to return as a function of prng, seed, is_math.\r\n        return (options.pass || callback ||\r\n        function(prng, seed, is_math_call, state) {\r\n            if (state) {\r\n                // Load the arc4 state from the given state if it has an S array.\r\n                if (state.S) { copy(state, arc4); }\r\n                // Only provide the .state method if requested via options.state.\r\n                prng.state = function() { return copy(arc4, {}); };\r\n            }\r\n\r\n            // If called as a method of Math (Math.seedrandom()), mutate\r\n            // Math.random because that is how seedrandom.js has worked since v1.0.\r\n            if (is_math_call) { math[rngname] = prng; return seed; }\r\n\r\n            // Otherwise, it is a newer calling convention, so return the\r\n            // prng directly.\r\n            else return prng;\r\n        })(\r\n            prng,\r\n            shortseed,\r\n            'global' in options ? options.global : (this == math),\r\n            options.state);\r\n    }\r\n    math['seed' + rngname] = seedrandom;\r\n\r\n//\r\n// ARC4\r\n//\r\n// An ARC4 implementation.  The constructor takes a key in the form of\r\n// an array of at most (width) integers that should be 0 <= x < (width).\r\n//\r\n// The g(count) method returns a pseudorandom integer that concatenates\r\n// the next (count) outputs from ARC4.  Its return value is a number x\r\n// that is in the range 0 <= x < (width ^ count).\r\n//\r\n    function ARC4(key) {\r\n        var t, keylen = key.length,\r\n            me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\r\n\r\n        // The empty key [] is treated as [0].\r\n        if (!keylen) { key = [keylen++]; }\r\n\r\n        // Set up S using the standard key scheduling algorithm.\r\n        while (i < width) {\r\n            s[i] = i++;\r\n        }\r\n        for (i = 0; i < width; i++) {\r\n            s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\r\n            s[j] = t;\r\n        }\r\n\r\n        // The \"g\" method returns the next (count) outputs as one number.\r\n        me.g = function(count) {\r\n            // Using instance members instead of closure state nearly doubles speed.\r\n            var t, r = 0,\r\n                i = me.i, j = me.j, s = me.S;\r\n            while (count--) {\r\n                t = s[i = mask & (i + 1)];\r\n                r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\r\n            }\r\n            me.i = i; me.j = j;\r\n            return r;\r\n            // For robust unpredictability, the function call below automatically\r\n            // discards an initial batch of values.  This is called RC4-drop[256].\r\n            // See http://google.com/search?q=rsa+fluhrer+response&btnI\r\n        };\r\n    }\r\n\r\n//\r\n// copy()\r\n// Copies internal state of ARC4 to or from a plain object.\r\n//\r\n    function copy(f, t) {\r\n        t.i = f.i;\r\n        t.j = f.j;\r\n        t.S = f.S.slice();\r\n        return t;\r\n    }\r\n\r\n//\r\n// flatten()\r\n// Converts an object tree to nested arrays of strings.\r\n//\r\n    function flatten(obj, depth) {\r\n        var result = [], typ = (typeof obj), prop;\r\n        if (depth && typ == 'object') {\r\n            for (prop in obj) {\r\n                try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\r\n            }\r\n        }\r\n        return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\r\n    }\r\n\r\n//\r\n// mixkey()\r\n// Mixes a string seed into a key that is an array of integers, and\r\n// returns a shortened string seed that is equivalent to the result key.\r\n//\r\n    function mixkey(seed, key) {\r\n        var stringseed = seed + '', smear, j = 0;\r\n        while (j < stringseed.length) {\r\n            key[mask & j] =\r\n                mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\r\n        }\r\n        return tostring(key);\r\n    }\r\n\r\n//\r\n// autoseed()\r\n// Returns an object for autoseeding, using window.crypto and Node crypto\r\n// module if available.\r\n//\r\n    function autoseed() {\r\n        try {\r\n            if (nodecrypto) { return tostring(nodecrypto.randomBytes(width)); }\r\n            var out = new Uint8Array(width);\r\n            (global.crypto || global.msCrypto).getRandomValues(out);\r\n            return tostring(out);\r\n        } catch (e) {\r\n            var browser = global.navigator,\r\n                plugins = browser && browser.plugins;\r\n            return [+new Date(), global, plugins, global.screen, tostring(pool)];\r\n        }\r\n    }\r\n\r\n//\r\n// tostring()\r\n// Converts an array of charcodes to a string\r\n//\r\n    function tostring(a) {\r\n        return String.fromCharCode.apply(0, a);\r\n    }\r\n\r\n//\r\n// When seedrandom.js is loaded, we immediately mix a few bits\r\n// from the built-in RNG into the entropy pool.  Because we do\r\n// not want to interfere with deterministic PRNG state later,\r\n// seedrandom will not call math.random on its own again after\r\n// initialization.\r\n//\r\n    mixkey(math.random(), pool);\r\n\r\n//\r\n// Nodejs and AMD support: export the implementation as a module using\r\n// either convention.\r\n//\r\n\r\n// End anonymous scope, and pass initial values.\r\n})(\r\n    [],     // pool: entropy pool starts empty\r\n    BMMath    // math: package containing random, pow, and seedrandom\r\n);\r\nvar BezierFactory = (function(){\r\n    /**\r\n     * BezierEasing - use bezier curve for transition easing function\r\n     * by Gaëtan Renaudeau 2014 - 2015 – MIT License\r\n     *\r\n     * Credits: is based on Firefox's nsSMILKeySpline.cpp\r\n     * Usage:\r\n     * var spline = BezierEasing([ 0.25, 0.1, 0.25, 1.0 ])\r\n     * spline.get(x) => returns the easing value | x must be in [0, 1] range\r\n     *\r\n     */\r\n\r\n        var ob = {};\r\n    ob.getBezierEasing = getBezierEasing;\r\n    var beziers = {};\r\n\r\n    function getBezierEasing(a,b,c,d,nm){\r\n        var str = nm || ('bez_' + a+'_'+b+'_'+c+'_'+d).replace(/\\./g, 'p');\r\n        if(beziers[str]){\r\n            return beziers[str];\r\n        }\r\n        var bezEasing = new BezierEasing([a,b,c,d]);\r\n        beziers[str] = bezEasing;\r\n        return bezEasing;\r\n    }\r\n\r\n// These values are established by empiricism with tests (tradeoff: performance VS precision)\r\n    var NEWTON_ITERATIONS = 4;\r\n    var NEWTON_MIN_SLOPE = 0.001;\r\n    var SUBDIVISION_PRECISION = 0.0000001;\r\n    var SUBDIVISION_MAX_ITERATIONS = 10;\r\n\r\n    var kSplineTableSize = 11;\r\n    var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\r\n\r\n    var float32ArraySupported = typeof Float32Array === \"function\";\r\n\r\n    function A (aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }\r\n    function B (aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }\r\n    function C (aA1)      { return 3.0 * aA1; }\r\n\r\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\r\n    function calcBezier (aT, aA1, aA2) {\r\n        return ((A(aA1, aA2)*aT + B(aA1, aA2))*aT + C(aA1))*aT;\r\n    }\r\n\r\n// Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\r\n    function getSlope (aT, aA1, aA2) {\r\n        return 3.0 * A(aA1, aA2)*aT*aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\r\n    }\r\n\r\n    function binarySubdivide (aX, aA, aB, mX1, mX2) {\r\n        var currentX, currentT, i = 0;\r\n        do {\r\n            currentT = aA + (aB - aA) / 2.0;\r\n            currentX = calcBezier(currentT, mX1, mX2) - aX;\r\n            if (currentX > 0.0) {\r\n                aB = currentT;\r\n            } else {\r\n                aA = currentT;\r\n            }\r\n        } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\r\n        return currentT;\r\n    }\r\n\r\n    function newtonRaphsonIterate (aX, aGuessT, mX1, mX2) {\r\n        for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\r\n            var currentSlope = getSlope(aGuessT, mX1, mX2);\r\n            if (currentSlope === 0.0) return aGuessT;\r\n            var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\r\n            aGuessT -= currentX / currentSlope;\r\n        }\r\n        return aGuessT;\r\n    }\r\n\r\n    /**\r\n     * points is an array of [ mX1, mY1, mX2, mY2 ]\r\n     */\r\n    function BezierEasing (points) {\r\n        this._p = points;\r\n        this._mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\r\n        this._precomputed = false;\r\n\r\n        this.get = this.get.bind(this);\r\n    }\r\n\r\n    BezierEasing.prototype = {\r\n\r\n        get: function (x) {\r\n            var mX1 = this._p[0],\r\n                mY1 = this._p[1],\r\n                mX2 = this._p[2],\r\n                mY2 = this._p[3];\r\n            if (!this._precomputed) this._precompute();\r\n            if (mX1 === mY1 && mX2 === mY2) return x; // linear\r\n            // Because JavaScript number are imprecise, we should guarantee the extremes are right.\r\n            if (x === 0) return 0;\r\n            if (x === 1) return 1;\r\n            return calcBezier(this._getTForX(x), mY1, mY2);\r\n        },\r\n\r\n        // Private part\r\n\r\n        _precompute: function () {\r\n            var mX1 = this._p[0],\r\n                mY1 = this._p[1],\r\n                mX2 = this._p[2],\r\n                mY2 = this._p[3];\r\n            this._precomputed = true;\r\n            if (mX1 !== mY1 || mX2 !== mY2)\r\n                this._calcSampleValues();\r\n        },\r\n\r\n        _calcSampleValues: function () {\r\n            var mX1 = this._p[0],\r\n                mX2 = this._p[2];\r\n            for (var i = 0; i < kSplineTableSize; ++i) {\r\n                this._mSampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * getTForX chose the fastest heuristic to determine the percentage value precisely from a given X projection.\r\n         */\r\n        _getTForX: function (aX) {\r\n            var mX1 = this._p[0],\r\n                mX2 = this._p[2],\r\n                mSampleValues = this._mSampleValues;\r\n\r\n            var intervalStart = 0.0;\r\n            var currentSample = 1;\r\n            var lastSample = kSplineTableSize - 1;\r\n\r\n            for (; currentSample !== lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {\r\n                intervalStart += kSampleStepSize;\r\n            }\r\n            --currentSample;\r\n\r\n            // Interpolate to provide an initial guess for t\r\n            var dist = (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample+1] - mSampleValues[currentSample]);\r\n            var guessForT = intervalStart + dist * kSampleStepSize;\r\n\r\n            var initialSlope = getSlope(guessForT, mX1, mX2);\r\n            if (initialSlope >= NEWTON_MIN_SLOPE) {\r\n                return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\r\n            } else if (initialSlope === 0.0) {\r\n                return guessForT;\r\n            } else {\r\n                return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\r\n            }\r\n        }\r\n    };\r\n\r\n    return ob;\r\n\r\n}());\r\n(function () {\r\n    var lastTime = 0;\r\n    var vendors = ['ms', 'moz', 'webkit', 'o'];\r\n    for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\r\n        window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\r\n        window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\r\n    }\r\n    if(!window.requestAnimationFrame)\r\n        window.requestAnimationFrame = function (callback, element) {\r\n            var currTime = new Date().getTime();\r\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n            var id = setTimeout(function () {\r\n                    callback(currTime + timeToCall);\r\n                },\r\n                timeToCall);\r\n            lastTime = currTime + timeToCall;\r\n            return id;\r\n        };\r\n    if(!window.cancelAnimationFrame)\r\n        window.cancelAnimationFrame = function (id) {\r\n            clearTimeout(id);\r\n        };\r\n}());\r\n\r\nfunction extendPrototype(sources,destination){\r\n    var i, len = sources.length, sourcePrototype;\r\n    for (i = 0;i < len;i += 1) {\r\n        sourcePrototype = sources[i].prototype;\r\n        for (var attr in sourcePrototype) {\r\n            if (sourcePrototype.hasOwnProperty(attr)) destination.prototype[attr] = sourcePrototype[attr];\r\n        }\r\n    }\r\n}\r\n\r\nfunction getDescriptor(object, prop) {\r\n    return Object.getOwnPropertyDescriptor(object, prop);\r\n}\r\n\r\nfunction createProxyFunction(prototype) {\r\n\tfunction ProxyFunction(){}\r\n\tProxyFunction.prototype = prototype;\r\n\treturn ProxyFunction;\r\n}\r\nfunction bezFunction(){\r\n\r\n    var easingFunctions = [];\r\n    var math = Math;\r\n\r\n    function pointOnLine2D(x1,y1, x2,y2, x3,y3){\r\n        var det1 = (x1*y2) + (y1*x3) + (x2*y3) - (x3*y2) - (y3*x1) - (x2*y1);\r\n        return det1 > -0.0001 && det1 < 0.0001;\r\n    }\r\n\r\n    function pointOnLine3D(x1,y1,z1, x2,y2,z2, x3,y3,z3){\r\n        if(z1 === 0 && z2 === 0 && z3 === 0) {\r\n            return pointOnLine2D(x1,y1, x2,y2, x3,y3);\r\n        }\r\n        var dist1 = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2) + Math.pow(z2 - z1, 2));\r\n        var dist2 = Math.sqrt(Math.pow(x3 - x1, 2) + Math.pow(y3 - y1, 2) + Math.pow(z3 - z1, 2));\r\n        var dist3 = Math.sqrt(Math.pow(x3 - x2, 2) + Math.pow(y3 - y2, 2) + Math.pow(z3 - z2, 2));\r\n        var diffDist;\r\n        if(dist1 > dist2){\r\n            if(dist1 > dist3){\r\n                diffDist = dist1 - dist2 - dist3;\r\n            } else {\r\n                diffDist = dist3 - dist2 - dist1;\r\n            }\r\n        } else if(dist3 > dist2){\r\n            diffDist = dist3 - dist2 - dist1;\r\n        } else {\r\n            diffDist = dist2 - dist1 - dist3;\r\n        }\r\n        return diffDist > -0.0001 && diffDist < 0.0001;\r\n    }\r\n\r\n    var getBezierLength = (function(){\r\n\r\n        return function(pt1,pt2,pt3,pt4){\r\n            var curveSegments = defaultCurveSegments;\r\n            var k;\r\n            var i, len;\r\n            var ptCoord,perc,addedLength = 0;\r\n            var ptDistance;\r\n            var point = [],lastPoint = [];\r\n            var lengthData = bezier_length_pool.newElement();\r\n            len = pt3.length;\r\n            for(k=0;k<curveSegments;k+=1){\r\n                perc = k/(curveSegments-1);\r\n                ptDistance = 0;\r\n                for(i=0;i<len;i+=1){\r\n                    ptCoord = bm_pow(1-perc,3)*pt1[i]+3*bm_pow(1-perc,2)*perc*pt3[i]+3*(1-perc)*bm_pow(perc,2)*pt4[i]+bm_pow(perc,3)*pt2[i];\r\n                    point[i] = ptCoord;\r\n                    if(lastPoint[i] !== null){\r\n                        ptDistance += bm_pow(point[i] - lastPoint[i],2);\r\n                    }\r\n                    lastPoint[i] = point[i];\r\n                }\r\n                if(ptDistance){\r\n                    ptDistance = bm_sqrt(ptDistance);\r\n                    addedLength += ptDistance;\r\n                }\r\n                lengthData.percents[k] = perc;\r\n                lengthData.lengths[k] = addedLength;\r\n            }\r\n            lengthData.addedLength = addedLength;\r\n            return lengthData;\r\n        };\r\n    }());\r\n\r\n    function getSegmentsLength(shapeData) {\r\n        var segmentsLength = segments_length_pool.newElement();\r\n        var closed = shapeData.c;\r\n        var pathV = shapeData.v;\r\n        var pathO = shapeData.o;\r\n        var pathI = shapeData.i;\r\n        var i, len = shapeData._length;\r\n        var lengths = segmentsLength.lengths;\r\n        var totalLength = 0;\r\n        for(i=0;i<len-1;i+=1){\r\n            lengths[i] = getBezierLength(pathV[i],pathV[i+1],pathO[i],pathI[i+1]);\r\n            totalLength += lengths[i].addedLength;\r\n        }\r\n        if(closed){\r\n            lengths[i] = getBezierLength(pathV[i],pathV[0],pathO[i],pathI[0]);\r\n            totalLength += lengths[i].addedLength;\r\n        }\r\n        segmentsLength.totalLength = totalLength;\r\n        return segmentsLength;\r\n    }\r\n\r\n    function BezierData(length){\r\n        this.segmentLength = 0;\r\n        this.points = new Array(length);\r\n    }\r\n\r\n    function PointData(partial,point){\r\n        this.partialLength = partial;\r\n        this.point = point;\r\n    }\r\n\r\n    var buildBezierData = (function(){\r\n\r\n        var storedData = {};\r\n\r\n        return function (keyData){\r\n            var pt1 = keyData.s;\r\n            var pt2 = keyData.e;\r\n            var pt3 = keyData.to;\r\n            var pt4 = keyData.ti;\r\n            var bezierName = (pt1[0]+'_'+pt1[1]+'_'+pt2[0]+'_'+pt2[1]+'_'+pt3[0]+'_'+pt3[1]+'_'+pt4[0]+'_'+pt4[1]).replace(/\\./g, 'p');\r\n            if(storedData[bezierName]){\r\n                keyData.bezierData = storedData[bezierName];\r\n                return;\r\n            }\r\n            var curveSegments = defaultCurveSegments;\r\n            var k, i, len;\r\n            var ptCoord,perc,addedLength = 0;\r\n            var ptDistance;\r\n            var point,lastPoint = null;\r\n            if (pt1.length === 2 && (pt1[0] != pt2[0] || pt1[1] != pt2[1]) && pointOnLine2D(pt1[0],pt1[1],pt2[0],pt2[1],pt1[0]+pt3[0],pt1[1]+pt3[1]) && pointOnLine2D(pt1[0],pt1[1],pt2[0],pt2[1],pt2[0]+pt4[0],pt2[1]+pt4[1])){\r\n                curveSegments = 2;\r\n            }\r\n            var bezierData = new BezierData(curveSegments);\r\n            len = pt3.length;\r\n            for (k = 0; k < curveSegments; k += 1) {\r\n                point = createSizedArray(len);\r\n                perc = k / (curveSegments - 1);\r\n                ptDistance = 0;\r\n                for (i = 0; i < len; i += 1){\r\n                    ptCoord = bm_pow(1-perc,3)*pt1[i]+3*bm_pow(1-perc,2)*perc*(pt1[i] + pt3[i])+3*(1-perc)*bm_pow(perc,2)*(pt2[i] + pt4[i])+bm_pow(perc,3)*pt2[i];\r\n                    point[i] = ptCoord;\r\n                    if(lastPoint !== null){\r\n                        ptDistance += bm_pow(point[i] - lastPoint[i],2);\r\n                    }\r\n                }\r\n                ptDistance = bm_sqrt(ptDistance);\r\n                addedLength += ptDistance;\r\n                bezierData.points[k] = new PointData(ptDistance, point);\r\n                lastPoint = point;\r\n            }\r\n            bezierData.segmentLength = addedLength;\r\n            keyData.bezierData = bezierData;\r\n            storedData[bezierName] = bezierData;\r\n        };\r\n    }());\r\n\r\n    function getDistancePerc(perc,bezierData){\r\n        var percents = bezierData.percents;\r\n        var lengths = bezierData.lengths;\r\n        var len = percents.length;\r\n        var initPos = bm_floor((len-1)*perc);\r\n        var lengthPos = perc*bezierData.addedLength;\r\n        var lPerc = 0;\r\n        if(initPos === len - 1 || initPos === 0 || lengthPos === lengths[initPos]){\r\n            return percents[initPos];\r\n        }else{\r\n            var dir = lengths[initPos] > lengthPos ? -1 : 1;\r\n            var flag = true;\r\n            while(flag){\r\n                if(lengths[initPos] <= lengthPos && lengths[initPos+1] > lengthPos){\r\n                    lPerc = (lengthPos - lengths[initPos]) / (lengths[initPos+1] - lengths[initPos]);\r\n                    flag = false;\r\n                }else{\r\n                    initPos += dir;\r\n                }\r\n                if(initPos < 0 || initPos >= len - 1){\r\n                    //FIX for TypedArrays that don't store floating point values with enough accuracy\r\n                    if(initPos === len - 1) {\r\n                        return percents[initPos];\r\n                    }\r\n                    flag = false;\r\n                }\r\n            }\r\n            return percents[initPos] + (percents[initPos+1] - percents[initPos])*lPerc;\r\n        }\r\n    }\r\n\r\n    function getPointInSegment(pt1, pt2, pt3, pt4, percent, bezierData) {\r\n        var t1 = getDistancePerc(percent,bezierData);\r\n        var u0 = 1;\r\n        var u1 = 1 - t1;\r\n        var ptX = Math.round((u1*u1*u1* pt1[0] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[0] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[0] + t1*t1*t1* pt2[0])* 1000) / 1000;\r\n        var ptY = Math.round((u1*u1*u1* pt1[1] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[1] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[1] + t1*t1*t1* pt2[1])* 1000) / 1000;\r\n        return [ptX, ptY];\r\n    }\r\n\r\n    function getSegmentArray() {\r\n\r\n    }\r\n\r\n    var bezier_segment_points = createTypedArray('float32', 8);\r\n\r\n    function getNewSegment(pt1,pt2,pt3,pt4,startPerc,endPerc, bezierData){\r\n\r\n        startPerc = startPerc < 0 ? 0 : startPerc > 1 ? 1 : startPerc;\r\n        var t0 = getDistancePerc(startPerc,bezierData);\r\n        endPerc = endPerc > 1 ? 1 : endPerc;\r\n        var t1 = getDistancePerc(endPerc,bezierData);\r\n        var i, len = pt1.length;\r\n        var u0 = 1 - t0;\r\n        var u1 = 1 - t1;\r\n        var u0u0u0 = u0*u0*u0;\r\n        var t0u0u0_3 = t0*u0*u0*3; // t0*u0*u0 + u0*t0*u0 + u0*u0*t0\r\n        var t0t0u0_3 = t0*t0*u0*3; // t0*t0*u0 + u0*t0*t0 + t0*u0*t0\r\n        var t0t0t0 = t0*t0*t0;\r\n        //\r\n        var u0u0u1 = u0*u0*u1;\r\n        var t0u0u1_3 = t0*u0*u1 + u0*t0*u1 + u0*u0*t1;\r\n        var t0t0u1_3 = t0*t0*u1 + u0*t0*t1 + t0*u0*t1;\r\n        var t0t0t1 = t0*t0*t1;\r\n        //\r\n        var u0u1u1 = u0*u1*u1;\r\n        var t0u1u1_3 = t0*u1*u1 + u0*t1*u1 + u0*u1*t1;\r\n        var t0t1u1_3 = t0*t1*u1 + u0*t1*t1 + t0*u1*t1;\r\n        var t0t1t1 = t0*t1*t1;\r\n        //\r\n        var u1u1u1 = u1*u1*u1;\r\n        var t1u1u1_3 = t1*u1*u1 + u1*t1*u1 + u1*u1*t1;\r\n        var t1t1u1_3 = t1*t1*u1 + u1*t1*t1 + t1*u1*t1;\r\n        var t1t1t1 = t1*t1*t1;\r\n        //Math.round(num * 100) / 100\r\n        for(i=0;i<len;i+=1){\r\n            bezier_segment_points[i * 4] = Math.round((u0u0u0 * pt1[i] + t0u0u0_3 * pt3[i] + t0t0u0_3 * pt4[i] + t0t0t0 * pt2[i]) * 1000) / 1000;\r\n            bezier_segment_points[i * 4 + 1] = Math.round((u0u0u1 * pt1[i] + t0u0u1_3 * pt3[i] + t0t0u1_3 * pt4[i] + t0t0t1 * pt2[i]) * 1000) / 1000;\r\n            bezier_segment_points[i * 4 + 2] = Math.round((u0u1u1 * pt1[i] + t0u1u1_3 * pt3[i] + t0t1u1_3 * pt4[i] + t0t1t1 * pt2[i]) * 1000) / 1000;\r\n            bezier_segment_points[i * 4 + 3] = Math.round((u1u1u1 * pt1[i] + t1u1u1_3 * pt3[i] + t1t1u1_3 * pt4[i] + t1t1t1 * pt2[i]) * 1000) / 1000;\r\n            // pts.pt1[i] = Math.round((u0u0u0 * pt1[i] + t0u0u0_3 * pt3[i] + t0t0u0_3 * pt4[i] + t0t0t0 * pt2[i]) * 1000) / 1000;\r\n            // pts.pt3[i] = Math.round((u0u0u1 * pt1[i] + t0u0u1_3 * pt3[i] + t0t0u1_3 * pt4[i] + t0t0t1 * pt2[i]) * 1000) / 1000;\r\n            // pts.pt4[i] = Math.round((u0u1u1 * pt1[i] + t0u1u1_3 * pt3[i] + t0t1u1_3 * pt4[i] + t0t1t1 * pt2[i]) * 1000) / 1000;\r\n            // pts.pt2[i] = Math.round((u1u1u1 * pt1[i] + t1u1u1_3 * pt3[i] + t1t1u1_3 * pt4[i] + t1t1t1 * pt2[i]) * 1000) / 1000;\r\n            // pts.pt1[i] =  Math.round((u0*u0*u0* pt1[i] + (t0*u0*u0 + u0*t0*u0 + u0*u0*t0) * pt3[i] + (t0*t0*u0 + u0*t0*t0 + t0*u0*t0)* pt4[i] + t0*t0*t0* pt2[i])* 1000) / 1000;\r\n            // pts.pt3[i] = Math.round((u0*u0*u1*pt1[i] + (t0*u0*u1 + u0*t0*u1 + u0*u0*t1)* pt3[i] + (t0*t0*u1 + u0*t0*t1 + t0*u0*t1)* pt4[i] + t0*t0*t1* pt2[i])* 1000) / 1000;\r\n            // pts.pt4[i] = Math.round((u0*u1*u1* pt1[i] + (t0*u1*u1 + u0*t1*u1 + u0*u1*t1)* pt3[i] + (t0*t1*u1 + u0*t1*t1 + t0*u1*t1)* pt4[i] + t0*t1*t1* pt2[i])* 1000) / 1000;\r\n            // pts.pt2[i] = Math.round((u1*u1*u1* pt1[i] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[i] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[i] + t1*t1*t1* pt2[i])* 1000) / 1000;\r\n        }\r\n\r\n        return bezier_segment_points;\r\n    }\r\n\r\n    return {\r\n        //getEasingCurve : getEasingCurve,\r\n        getSegmentsLength : getSegmentsLength,\r\n        getNewSegment : getNewSegment,\r\n        getPointInSegment : getPointInSegment,\r\n        buildBezierData : buildBezierData,\r\n        pointOnLine2D : pointOnLine2D,\r\n        pointOnLine3D : pointOnLine3D\r\n    };\r\n}\r\n\r\nvar bez = bezFunction();\r\nfunction dataFunctionManager(){\r\n\r\n    //var tCanvasHelper = createTag('canvas').getContext('2d');\r\n\r\n    function completeLayers(layers, comps, fontManager){\r\n        var layerData;\r\n        var animArray, lastFrame;\r\n        var i, len = layers.length;\r\n        var j, jLen, k, kLen;\r\n        for(i=0;i<len;i+=1){\r\n            layerData = layers[i];\r\n            if(!('ks' in layerData) || layerData.completed){\r\n                continue;\r\n            }\r\n            layerData.completed = true;\r\n            if(layerData.tt){\r\n                layers[i-1].td = layerData.tt;\r\n            }\r\n            animArray = [];\r\n            lastFrame = -1;\r\n            if(layerData.hasMask){\r\n                var maskProps = layerData.masksProperties;\r\n                jLen = maskProps.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    if(maskProps[j].pt.k.i){\r\n                        convertPathsToAbsoluteValues(maskProps[j].pt.k);\r\n                    }else{\r\n                        kLen = maskProps[j].pt.k.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            if(maskProps[j].pt.k[k].s){\r\n                                convertPathsToAbsoluteValues(maskProps[j].pt.k[k].s[0]);\r\n                            }\r\n                            if(maskProps[j].pt.k[k].e){\r\n                                convertPathsToAbsoluteValues(maskProps[j].pt.k[k].e[0]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(layerData.ty===0){\r\n                layerData.layers = findCompLayers(layerData.refId, comps);\r\n                completeLayers(layerData.layers,comps, fontManager);\r\n            }else if(layerData.ty === 4){\r\n                completeShapes(layerData.shapes);\r\n            }else if(layerData.ty == 5){\r\n                completeText(layerData, fontManager);\r\n            }\r\n        }\r\n    }\r\n\r\n    function findCompLayers(id,comps){\r\n        var i = 0, len = comps.length;\r\n        while(i<len){\r\n            if(comps[i].id === id){\r\n                if(!comps[i].layers.__used) {\r\n                    comps[i].layers.__used = true;\r\n                    return comps[i].layers;\r\n                }\r\n                return JSON.parse(JSON.stringify(comps[i].layers));\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    function completeShapes(arr){\r\n        var i, len = arr.length;\r\n        var j, jLen;\r\n        var hasPaths = false;\r\n        for(i=len-1;i>=0;i-=1){\r\n            if(arr[i].ty == 'sh'){\r\n                if(arr[i].ks.k.i){\r\n                    convertPathsToAbsoluteValues(arr[i].ks.k);\r\n                }else{\r\n                    jLen = arr[i].ks.k.length;\r\n                    for(j=0;j<jLen;j+=1){\r\n                        if(arr[i].ks.k[j].s){\r\n                            convertPathsToAbsoluteValues(arr[i].ks.k[j].s[0]);\r\n                        }\r\n                        if(arr[i].ks.k[j].e){\r\n                            convertPathsToAbsoluteValues(arr[i].ks.k[j].e[0]);\r\n                        }\r\n                    }\r\n                }\r\n                hasPaths = true;\r\n            }else if(arr[i].ty == 'gr'){\r\n                completeShapes(arr[i].it);\r\n            }\r\n        }\r\n        /*if(hasPaths){\r\n            //mx: distance\r\n            //ss: sensitivity\r\n            //dc: decay\r\n            arr.splice(arr.length-1,0,{\r\n                \"ty\": \"ms\",\r\n                \"mx\":20,\r\n                \"ss\":10,\r\n                 \"dc\":0.001,\r\n                \"maxDist\":200\r\n            });\r\n        }*/\r\n    }\r\n\r\n    function convertPathsToAbsoluteValues(path){\r\n        var i, len = path.i.length;\r\n        for(i=0;i<len;i+=1){\r\n            path.i[i][0] += path.v[i][0];\r\n            path.i[i][1] += path.v[i][1];\r\n            path.o[i][0] += path.v[i][0];\r\n            path.o[i][1] += path.v[i][1];\r\n        }\r\n    }\r\n\r\n    function checkVersion(minimum,animVersionString){\r\n        var animVersion = animVersionString ? animVersionString.split('.') : [100,100,100];\r\n        if(minimum[0]>animVersion[0]){\r\n            return true;\r\n        } else if(animVersion[0] > minimum[0]){\r\n            return false;\r\n        }\r\n        if(minimum[1]>animVersion[1]){\r\n            return true;\r\n        } else if(animVersion[1] > minimum[1]){\r\n            return false;\r\n        }\r\n        if(minimum[2]>animVersion[2]){\r\n            return true;\r\n        } else if(animVersion[2] > minimum[2]){\r\n            return false;\r\n        }\r\n    }\r\n\r\n    var checkText = (function(){\r\n        var minimumVersion = [4,4,14];\r\n\r\n        function updateTextLayer(textLayer){\r\n            var documentData = textLayer.t.d;\r\n            textLayer.t.d = {\r\n                k: [\r\n                    {\r\n                        s:documentData,\r\n                        t:0\r\n                    }\r\n                ]\r\n            };\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var i, len = layers.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(layers[i].ty === 5){\r\n                    updateTextLayer(layers[i]);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    var checkChars = (function() {\r\n        var minimumVersion = [4,7,99];\r\n        return function (animationData){\r\n            if(animationData.chars && !checkVersion(minimumVersion,animationData.v)){\r\n                var i, len = animationData.chars.length, j, jLen, k, kLen;\r\n                var pathData, paths;\r\n                for(i = 0; i < len; i += 1) {\r\n                    if(animationData.chars[i].data && animationData.chars[i].data.shapes) {\r\n                        paths = animationData.chars[i].data.shapes[0].it;\r\n                        jLen = paths.length;\r\n\r\n                        for(j = 0; j < jLen; j += 1) {\r\n                            pathData = paths[j].ks.k;\r\n                            if(!pathData.__converted) {\r\n                                convertPathsToAbsoluteValues(paths[j].ks.k);\r\n                                pathData.__converted = true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    var checkColors = (function(){\r\n        var minimumVersion = [4,1,9];\r\n\r\n        function iterateShapes(shapes){\r\n            var i, len = shapes.length;\r\n            var j, jLen;\r\n            for(i=0;i<len;i+=1){\r\n                if(shapes[i].ty === 'gr'){\r\n                    iterateShapes(shapes[i].it);\r\n                }else if(shapes[i].ty === 'fl' || shapes[i].ty === 'st'){\r\n                    if(shapes[i].c.k && shapes[i].c.k[0].i){\r\n                        jLen = shapes[i].c.k.length;\r\n                        for(j=0;j<jLen;j+=1){\r\n                            if(shapes[i].c.k[j].s){\r\n                                shapes[i].c.k[j].s[0] /= 255;\r\n                                shapes[i].c.k[j].s[1] /= 255;\r\n                                shapes[i].c.k[j].s[2] /= 255;\r\n                                shapes[i].c.k[j].s[3] /= 255;\r\n                            }\r\n                            if(shapes[i].c.k[j].e){\r\n                                shapes[i].c.k[j].e[0] /= 255;\r\n                                shapes[i].c.k[j].e[1] /= 255;\r\n                                shapes[i].c.k[j].e[2] /= 255;\r\n                                shapes[i].c.k[j].e[3] /= 255;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        shapes[i].c.k[0] /= 255;\r\n                        shapes[i].c.k[1] /= 255;\r\n                        shapes[i].c.k[2] /= 255;\r\n                        shapes[i].c.k[3] /= 255;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var i, len = layers.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(layers[i].ty === 4){\r\n                    iterateShapes(layers[i].shapes);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    var checkShapes = (function(){\r\n        var minimumVersion = [4,4,18];\r\n\r\n\r\n\r\n        function completeShapes(arr){\r\n            var i, len = arr.length;\r\n            var j, jLen;\r\n            var hasPaths = false;\r\n            for(i=len-1;i>=0;i-=1){\r\n                if(arr[i].ty == 'sh'){\r\n                    if(arr[i].ks.k.i){\r\n                        arr[i].ks.k.c = arr[i].closed;\r\n                    }else{\r\n                        jLen = arr[i].ks.k.length;\r\n                        for(j=0;j<jLen;j+=1){\r\n                            if(arr[i].ks.k[j].s){\r\n                                arr[i].ks.k[j].s[0].c = arr[i].closed;\r\n                            }\r\n                            if(arr[i].ks.k[j].e){\r\n                                arr[i].ks.k[j].e[0].c = arr[i].closed;\r\n                            }\r\n                        }\r\n                    }\r\n                    hasPaths = true;\r\n                }else if(arr[i].ty == 'gr'){\r\n                    completeShapes(arr[i].it);\r\n                }\r\n            }\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var layerData;\r\n            var i, len = layers.length;\r\n            var j, jLen, k, kLen;\r\n            for(i=0;i<len;i+=1){\r\n                layerData = layers[i];\r\n                if(layerData.hasMask){\r\n                    var maskProps = layerData.masksProperties;\r\n                    jLen = maskProps.length;\r\n                    for(j=0;j<jLen;j+=1){\r\n                        if(maskProps[j].pt.k.i){\r\n                            maskProps[j].pt.k.c = maskProps[j].cl;\r\n                        }else{\r\n                            kLen = maskProps[j].pt.k.length;\r\n                            for(k=0;k<kLen;k+=1){\r\n                                if(maskProps[j].pt.k[k].s){\r\n                                    maskProps[j].pt.k[k].s[0].c = maskProps[j].cl;\r\n                                }\r\n                                if(maskProps[j].pt.k[k].e){\r\n                                    maskProps[j].pt.k[k].e[0].c = maskProps[j].cl;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if(layerData.ty === 4){\r\n                    completeShapes(layerData.shapes);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    /*function blitPaths(path){\r\n        var i, len = path.i.length;\r\n        for(i=0;i<len;i+=1){\r\n            path.i[i][0] /= blitter;\r\n            path.i[i][1] /= blitter;\r\n            path.o[i][0] /= blitter;\r\n            path.o[i][1] /= blitter;\r\n            path.v[i][0] /= blitter;\r\n            path.v[i][1] /= blitter;\r\n        }\r\n    }\r\n\r\n    function blitShapes(arr){\r\n        var i, len = arr.length;\r\n        var j, jLen;\r\n        var hasPaths = false;\r\n        for(i=len-1;i>=0;i-=1){\r\n            if(arr[i].ty == 'sh'){\r\n                if(arr[i].ks.k.i){\r\n                    blitPaths(arr[i].ks.k);\r\n                }else{\r\n                    jLen = arr[i].ks.k.length;\r\n                    for(j=0;j<jLen;j+=1){\r\n                        if(arr[i].ks.k[j].s){\r\n                            blitPaths(arr[i].ks.k[j].s[0]);\r\n                        }\r\n                        if(arr[i].ks.k[j].e){\r\n                            blitPaths(arr[i].ks.k[j].e[0]);\r\n                        }\r\n                    }\r\n                }\r\n                hasPaths = true;\r\n            }else if(arr[i].ty == 'gr'){\r\n                blitShapes(arr[i].it);\r\n            }else if(arr[i].ty == 'rc'){\r\n                blitProperty(arr[i].p);\r\n                blitProperty(arr[i].s);\r\n            }else if(arr[i].ty == 'st'){\r\n                blitProperty(arr[i].w);\r\n            }else if(arr[i].ty == 'tr'){\r\n                blitProperty(arr[i].p);\r\n                blitProperty(arr[i].sk);\r\n                blitProperty(arr[i].a);\r\n            }else if(arr[i].ty == 'el'){\r\n                blitProperty(arr[i].p);\r\n                blitProperty(arr[i].s);\r\n            }else if(arr[i].ty == 'rd'){\r\n                blitProperty(arr[i].r);\r\n            }else{\r\n\r\n                //console.log(arr[i].ty );\r\n            }\r\n        }\r\n    }\r\n\r\n    function blitText(data, fontManager){\r\n\r\n    }\r\n\r\n    function blitValue(val){\r\n        if(typeof(val) === 'number'){\r\n            val /= blitter;\r\n        } else {\r\n            var i = val.length-1;\r\n            while(i>=0){\r\n                val[i] /= blitter;\r\n                i-=1;\r\n            }\r\n        }\r\n        return val;\r\n    }\r\n\r\n    function blitProperty(data){\r\n        if(!data.k.length){\r\n            data.k = blitValue(data.k);\r\n        }else if(typeof(data.k[0]) === 'number'){\r\n            data.k = blitValue(data.k);\r\n        } else {\r\n            var i, len = data.k.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(data.k[i].s){\r\n                    //console.log('pre S: ', data.k[i].s);\r\n                    data.k[i].s = blitValue(data.k[i].s);\r\n                    //console.log('post S: ', data.k[i].s);\r\n                }\r\n                if(data.k[i].e){\r\n                    //console.log('pre E: ', data.k[i].e);\r\n                    data.k[i].e = blitValue(data.k[i].e);\r\n                    //console.log('post E: ', data.k[i].e);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function blitLayers(layers,comps, fontManager){\r\n        var layerData;\r\n        var animArray, lastFrame;\r\n        var i, len = layers.length;\r\n        var j, jLen, k, kLen;\r\n        for(i=0;i<len;i+=1){\r\n            layerData = layers[i];\r\n            if(!('ks' in layerData)){\r\n                continue;\r\n            }\r\n            blitProperty(layerData.ks.a);\r\n            blitProperty(layerData.ks.p);\r\n            layerData.completed = true;\r\n            if(layerData.tt){\r\n                layers[i-1].td = layerData.tt;\r\n            }\r\n            animArray = [];\r\n            lastFrame = -1;\r\n            if(layerData.hasMask){\r\n                var maskProps = layerData.masksProperties;\r\n                jLen = maskProps.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    if(maskProps[j].pt.k.i){\r\n                        blitPaths(maskProps[j].pt.k);\r\n                    }else{\r\n                        kLen = maskProps[j].pt.k.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            if(maskProps[j].pt.k[k].s){\r\n                                blitPaths(maskProps[j].pt.k[k].s[0]);\r\n                            }\r\n                            if(maskProps[j].pt.k[k].e){\r\n                                blitPaths(maskProps[j].pt.k[k].e[0]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(layerData.ty===0){\r\n                layerData.w = Math.round(layerData.w/blitter);\r\n                layerData.h = Math.round(layerData.h/blitter);\r\n                blitLayers(layerData.layers,comps, fontManager);\r\n            }else if(layerData.ty === 4){\r\n                blitShapes(layerData.shapes);\r\n            }else if(layerData.ty == 5){\r\n                blitText(layerData, fontManager);\r\n            }else if(layerData.ty == 1){\r\n                layerData.sh /= blitter;\r\n                layerData.sw /= blitter;\r\n            } else {\r\n            }\r\n        }\r\n    }\r\n\r\n    function blitAnimation(animationData,comps, fontManager){\r\n        blitLayers(animationData.layers,comps, fontManager);\r\n    }*/\r\n\r\n    function completeData(animationData, fontManager){\r\n        if(animationData.__complete){\r\n            return;\r\n        }\r\n        checkColors(animationData);\r\n        checkText(animationData);\r\n        checkChars(animationData);\r\n        checkShapes(animationData);\r\n        completeLayers(animationData.layers, animationData.assets, fontManager);\r\n        animationData.__complete = true;\r\n        //blitAnimation(animationData, animationData.assets, fontManager);\r\n    }\r\n\r\n    function completeText(data, fontManager){\r\n        if(data.t.a.length === 0 && !('m' in data.t.p)){\r\n            data.singleShape = true;\r\n        }\r\n    }\r\n\r\n    var moduleOb = {};\r\n    moduleOb.completeData = completeData;\r\n\r\n    return moduleOb;\r\n}\r\n\r\nvar dataManager = dataFunctionManager();\r\nvar FontManager = (function(){\r\n\r\n    var maxWaitingTime = 5000;\r\n    var emptyChar = {\r\n        w: 0,\r\n        size:0,\r\n        shapes:[]\r\n    };\r\n    var combinedCharacters = [];\r\n    //Hindi characters\r\n    combinedCharacters = combinedCharacters.concat([2304, 2305, 2306, 2307, 2362, 2363, 2364, 2364, 2366\r\n    , 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379\r\n    , 2380, 2381, 2382, 2383, 2387, 2388, 2389, 2390, 2391, 2402, 2403]);\r\n\r\n    function setUpNode(font, family){\r\n        var parentNode = createTag('span');\r\n        parentNode.style.fontFamily    = family;\r\n        var node = createTag('span');\r\n        // Characters that vary significantly among different fonts\r\n        node.innerHTML = 'giItT1WQy@!-/#';\r\n        // Visible - so we can measure it - but not on the screen\r\n        parentNode.style.position      = 'absolute';\r\n        parentNode.style.left          = '-10000px';\r\n        parentNode.style.top           = '-10000px';\r\n        // Large font size makes even subtle changes obvious\r\n        parentNode.style.fontSize      = '300px';\r\n        // Reset any font properties\r\n        parentNode.style.fontVariant   = 'normal';\r\n        parentNode.style.fontStyle     = 'normal';\r\n        parentNode.style.fontWeight    = 'normal';\r\n        parentNode.style.letterSpacing = '0';\r\n        parentNode.appendChild(node);\r\n        document.body.appendChild(parentNode);\r\n\r\n        // Remember width with no applied web font\r\n        var width = node.offsetWidth;\r\n        node.style.fontFamily = font + ', '+family;\r\n        return {node:node, w:width, parent:parentNode};\r\n    }\r\n\r\n    function checkLoadedFonts() {\r\n        var i, len = this.fonts.length;\r\n        var node, w;\r\n        var loadedCount = len;\r\n        for(i=0;i<len; i+= 1){\r\n            if(this.fonts[i].loaded){\r\n                loadedCount -= 1;\r\n                continue;\r\n            }\r\n            if(this.fonts[i].fOrigin === 't' || this.fonts[i].origin === 2){\r\n                if(window.Typekit && window.Typekit.load && this.typekitLoaded === 0){\r\n                    this.typekitLoaded = 1;\r\n                    try{window.Typekit.load({\r\n                        async: true,\r\n                        active: function() {\r\n                            this.typekitLoaded = 2;\r\n                        }.bind(this)\r\n                    });}catch(e){}\r\n                }\r\n                if(this.typekitLoaded === 2) {\r\n                    this.fonts[i].loaded = true;\r\n                }\r\n            } else if(this.fonts[i].fOrigin === 'n' || this.fonts[i].origin === 0){\r\n                this.fonts[i].loaded = true;\r\n            } else{\r\n                node = this.fonts[i].monoCase.node;\r\n                w = this.fonts[i].monoCase.w;\r\n                if(node.offsetWidth !== w){\r\n                    loadedCount -= 1;\r\n                    this.fonts[i].loaded = true;\r\n                }else{\r\n                    node = this.fonts[i].sansCase.node;\r\n                    w = this.fonts[i].sansCase.w;\r\n                    if(node.offsetWidth !== w){\r\n                        loadedCount -= 1;\r\n                        this.fonts[i].loaded = true;\r\n                    }\r\n                }\r\n                if(this.fonts[i].loaded){\r\n                    this.fonts[i].sansCase.parent.parentNode.removeChild(this.fonts[i].sansCase.parent);\r\n                    this.fonts[i].monoCase.parent.parentNode.removeChild(this.fonts[i].monoCase.parent);\r\n                }\r\n            }\r\n        }\r\n\r\n        if(loadedCount !== 0 && Date.now() - this.initTime < maxWaitingTime){\r\n            setTimeout(checkLoadedFonts.bind(this),20);\r\n        }else{\r\n            setTimeout(function(){this.loaded = true;}.bind(this),0);\r\n\r\n        }\r\n    }\r\n\r\n    function createHelper(def, fontData){\r\n        var tHelper = createNS('text');\r\n        tHelper.style.fontSize = '100px';\r\n        tHelper.style.fontFamily = fontData.fFamily;\r\n        tHelper.textContent = '1';\r\n        if(fontData.fClass){\r\n            tHelper.style.fontFamily = 'inherit';\r\n            tHelper.className = fontData.fClass;\r\n        } else {\r\n            tHelper.style.fontFamily = fontData.fFamily;\r\n        }\r\n        def.appendChild(tHelper);\r\n        var tCanvasHelper = createTag('canvas').getContext('2d');\r\n        tCanvasHelper.font = '100px '+ fontData.fFamily;\r\n        return tCanvasHelper;\r\n    }\r\n\r\n    function addFonts(fontData, defs){\r\n        if(!fontData){\r\n            this.loaded = true;\r\n            return;\r\n        }\r\n        if(this.chars){\r\n            this.loaded = true;\r\n            this.fonts = fontData.list;\r\n            return;\r\n        }\r\n\r\n        var fontArr = fontData.list;\r\n        var i, len = fontArr.length;\r\n        for(i=0; i<len; i+= 1){\r\n            fontArr[i].loaded = false;\r\n            fontArr[i].monoCase = setUpNode(fontArr[i].fFamily,'monospace');\r\n            fontArr[i].sansCase = setUpNode(fontArr[i].fFamily,'sans-serif');\r\n            if(!fontArr[i].fPath) {\r\n                fontArr[i].loaded = true;\r\n            }else if(fontArr[i].fOrigin === 'p' || fontArr[i].origin === 3){\r\n                var s = createTag('style');\r\n                s.type = \"text/css\";\r\n                s.innerHTML = \"@font-face {\" + \"font-family: \"+fontArr[i].fFamily+\"; font-style: normal; src: url('\"+fontArr[i].fPath+\"');}\";\r\n                defs.appendChild(s);\r\n            } else if(fontArr[i].fOrigin === 'g' || fontArr[i].origin === 1){\r\n                //<link href='https://fonts.googleapis.com/css?family=Montserrat' rel='stylesheet' type='text/css'>\r\n                var l = createTag('link');\r\n                l.type = \"text/css\";\r\n                l.rel = \"stylesheet\";\r\n                l.href = fontArr[i].fPath;\r\n                defs.appendChild(l);\r\n            } else if(fontArr[i].fOrigin === 't' || fontArr[i].origin === 2){\r\n                //<link href='https://fonts.googleapis.com/css?family=Montserrat' rel='stylesheet' type='text/css'>\r\n                var sc = createTag('script');\r\n                sc.setAttribute('src',fontArr[i].fPath);\r\n                defs.appendChild(sc);\r\n            }\r\n            fontArr[i].helper = createHelper(defs,fontArr[i]);\r\n            this.fonts.push(fontArr[i]);\r\n        }\r\n        checkLoadedFonts.bind(this)();\r\n    }\r\n\r\n    function addChars(chars){\r\n        if(!chars){\r\n            return;\r\n        }\r\n        if(!this.chars){\r\n            this.chars = [];\r\n        }\r\n        var i, len = chars.length;\r\n        var j, jLen = this.chars.length, found;\r\n        for(i=0;i<len;i+=1){\r\n            j = 0;\r\n            found = false;\r\n            while(j<jLen){\r\n                if(this.chars[j].style === chars[i].style && this.chars[j].fFamily === chars[i].fFamily && this.chars[j].ch === chars[i].ch){\r\n                    found = true;\r\n                }\r\n                j += 1;\r\n            }\r\n            if(!found){\r\n                this.chars.push(chars[i]);\r\n                jLen += 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    function getCharData(char, style, font){\r\n        var i = 0, len = this.chars.length;\r\n        while( i < len) {\r\n            if(this.chars[i].ch === char && this.chars[i].style === style && this.chars[i].fFamily === font){\r\n                return this.chars[i];\r\n            }\r\n            i+= 1;\r\n        }\r\n        if(console && console.warn) {\r\n            console.warn('Missing character from exported characters list: ', char, style, font);\r\n        }\r\n        return emptyChar;\r\n    }\r\n\r\n    function measureText(char, fontName, size){\r\n        var fontData = this.getFontByName(fontName);\r\n        var tHelper = fontData.helper;\r\n        //tHelper.textContent = char;\r\n        return tHelper.measureText(char).width*size/100;\r\n        //return tHelper.getComputedTextLength()*size/100;\r\n    }\r\n\r\n    function getFontByName(name){\r\n        var i = 0, len = this.fonts.length;\r\n        while(i<len){\r\n            if(this.fonts[i].fName === name) {\r\n                return this.fonts[i];\r\n            }\r\n            i += 1;\r\n        }\r\n        return 'sans-serif';\r\n    }\r\n\r\n    function getCombinedCharacterCodes() {\r\n        return combinedCharacters;\r\n    }\r\n\r\n    var Font = function(){\r\n        this.fonts = [];\r\n        this.chars = null;\r\n        this.typekitLoaded = 0;\r\n        this.loaded = false;\r\n        this.initTime = Date.now();\r\n    };\r\n    //TODO: for now I'm adding these methods to the Class and not the prototype. Think of a better way to implement it. \r\n    Font.getCombinedCharacterCodes = getCombinedCharacterCodes;\r\n\r\n    Font.prototype.addChars = addChars;\r\n    Font.prototype.addFonts = addFonts;\r\n    Font.prototype.getCharData = getCharData;\r\n    Font.prototype.getFontByName = getFontByName;\r\n    Font.prototype.measureText = measureText;\r\n\r\n    return Font;\r\n\r\n}());\r\nvar PropertyFactory = (function(){\r\n\r\n    var initFrame = initialDefaultFrame;\r\n\r\n    function interpolateValue(frameNum, previousValue, caching){\r\n        var offsetTime = this.offsetTime;\r\n        var newValue;\r\n        if(this.propType === 'multidimensional') {\r\n            newValue = createTypedArray('float32', previousValue.length);\r\n        }\r\n        var iterationIndex = caching.lastIndex;\r\n        var i = iterationIndex;\r\n        var len = this.keyframes.length- 1,flag = true;\r\n        var keyData, nextKeyData;\r\n\r\n        while(flag){\r\n            keyData = this.keyframes[i];\r\n            nextKeyData = this.keyframes[i+1];\r\n            if(i == len-1 && frameNum >= nextKeyData.t - offsetTime){\r\n                if(keyData.h){\r\n                    keyData = nextKeyData;\r\n                }\r\n                iterationIndex = 0;\r\n                break;\r\n            }\r\n            if((nextKeyData.t - offsetTime) > frameNum){\r\n                iterationIndex = i;\r\n                break;\r\n            }\r\n            if(i < len - 1){\r\n                i += 1;\r\n            }else{\r\n                iterationIndex = 0;\r\n                flag = false;\r\n            }\r\n        }\r\n\r\n        var k, kLen,perc,jLen, j, fnc;\r\n        if(keyData.to){\r\n\r\n            if(!keyData.bezierData){\r\n                bez.buildBezierData(keyData);\r\n            }\r\n            var bezierData = keyData.bezierData;\r\n            if(frameNum >= nextKeyData.t-offsetTime || frameNum < keyData.t-offsetTime){\r\n                var ind = frameNum >= nextKeyData.t-offsetTime ? bezierData.points.length - 1 : 0;\r\n                kLen = bezierData.points[ind].point.length;\r\n                for(k = 0; k < kLen; k += 1){\r\n                    newValue[k] = bezierData.points[ind].point[k];\r\n                }\r\n                caching._lastBezierData = null;\r\n            }else{\r\n                if(keyData.__fnct){\r\n                    fnc = keyData.__fnct;\r\n                }else{\r\n                    fnc = BezierFactory.getBezierEasing(keyData.o.x,keyData.o.y,keyData.i.x,keyData.i.y,keyData.n).get;\r\n                    keyData.__fnct = fnc;\r\n                }\r\n                perc = fnc((frameNum-(keyData.t-offsetTime))/((nextKeyData.t-offsetTime)-(keyData.t-offsetTime)));\r\n                var distanceInLine = bezierData.segmentLength*perc;\r\n\r\n                var segmentPerc;\r\n                var addedLength =  (caching.lastFrame < frameNum && caching._lastBezierData === bezierData) ? caching._lastAddedLength : 0;\r\n                j =  (caching.lastFrame < frameNum && caching._lastBezierData === bezierData) ? caching._lastPoint : 0;\r\n                flag = true;\r\n                jLen = bezierData.points.length;\r\n                while(flag){\r\n                    addedLength +=bezierData.points[j].partialLength;\r\n                    if(distanceInLine === 0 || perc === 0 || j == bezierData.points.length - 1){\r\n                        kLen = bezierData.points[j].point.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            newValue[k] = bezierData.points[j].point[k];\r\n                        }\r\n                        break;\r\n                    }else if(distanceInLine >= addedLength && distanceInLine < addedLength + bezierData.points[j+1].partialLength){\r\n                        segmentPerc = (distanceInLine-addedLength)/(bezierData.points[j+1].partialLength);\r\n                        kLen = bezierData.points[j].point.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            newValue[k] = bezierData.points[j].point[k] + (bezierData.points[j+1].point[k] - bezierData.points[j].point[k])*segmentPerc;\r\n                        }\r\n                        break;\r\n                    }\r\n                    if(j < jLen - 1){\r\n                        j += 1;\r\n                    }else{\r\n                        flag = false;\r\n                    }\r\n                }\r\n                caching._lastPoint = j;\r\n                caching._lastAddedLength = addedLength - bezierData.points[j].partialLength;\r\n                caching._lastBezierData = bezierData;\r\n            }\r\n        }else{\r\n            var outX,outY,inX,inY, keyValue;\r\n            len = keyData.s.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(keyData.h !== 1){\r\n                    if(frameNum >= nextKeyData.t-offsetTime){\r\n                        perc = 1;\r\n                    }else if(frameNum < keyData.t-offsetTime){\r\n                        perc = 0;\r\n                    }else{\r\n                        if(keyData.o.x.constructor === Array){\r\n                            if(!keyData.__fnct){\r\n                                keyData.__fnct = [];\r\n                            }\r\n                            if (!keyData.__fnct[i]) {\r\n                                outX = keyData.o.x[i] || keyData.o.x[0];\r\n                                outY = keyData.o.y[i] || keyData.o.y[0];\r\n                                inX = keyData.i.x[i] || keyData.i.x[0];\r\n                                inY = keyData.i.y[i] || keyData.i.y[0];\r\n                                fnc = BezierFactory.getBezierEasing(outX,outY,inX,inY).get;\r\n                                keyData.__fnct[i] = fnc;\r\n                            } else {\r\n                                fnc = keyData.__fnct[i];\r\n                            }\r\n                        } else {\r\n                            if (!keyData.__fnct) {\r\n                                outX = keyData.o.x;\r\n                                outY = keyData.o.y;\r\n                                inX = keyData.i.x;\r\n                                inY = keyData.i.y;\r\n                                fnc = BezierFactory.getBezierEasing(outX,outY,inX,inY).get;\r\n                                keyData.__fnct = fnc;\r\n                            } else{\r\n                                fnc = keyData.__fnct;\r\n                            }\r\n                        }\r\n                        perc = fnc((frameNum-(keyData.t-offsetTime))/((nextKeyData.t-offsetTime)-(keyData.t-offsetTime)));\r\n                    }\r\n                }\r\n                if(this.sh && keyData.h !== 1){\r\n                    var initP = keyData.s[i];\r\n                    var endP = keyData.e[i];\r\n                    if(initP-endP < -180){\r\n                        initP += 360;\r\n                    } else if(initP-endP > 180){\r\n                        initP -= 360;\r\n                    }\r\n                    keyValue = initP+(endP-initP)*perc;\r\n                } else {\r\n                    keyValue = keyData.h === 1 ? keyData.s[i] : keyData.s[i]+(keyData.e[i]-keyData.s[i])*perc;\r\n                }\r\n                if(len === 1){\r\n                    newValue = keyValue;\r\n                }else{\r\n                    newValue[i] = keyValue;\r\n                }\r\n            }\r\n        }\r\n        caching.lastIndex = iterationIndex;\r\n        return newValue;\r\n    }\r\n\r\n    function calculateMultidimensionalValueAtCurrentTime(renderResult) {\r\n        var i = 0;\r\n        while(i<this.v.length){\r\n            this.pv[i] = renderResult[i];\r\n            this.v[i] = this.mult ? this.pv[i] * this.mult : this.pv[i];\r\n            if(this.lastPValue[i] !== this.pv[i]) {\r\n                this._mdf = true;\r\n                this.lastPValue[i] = this.pv[i];\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    function calculateUnidimenstionalValueAtCurrentTime(renderResult) {\r\n        this.pv = renderResult;\r\n        this.v = this.mult ? this.pv*this.mult : this.pv;\r\n        if(this.lastPValue != this.pv){\r\n            this._mdf = true;\r\n            this.lastPValue = this.pv;\r\n        }\r\n    }\r\n\r\n    function getValueAtCurrentTime(){\r\n        if(this.elem.globalData.frameId === this.frameId){\r\n            return;\r\n        }\r\n        this._mdf = false;\r\n        var frameNum = this.comp.renderedFrame - this.offsetTime;\r\n        var initTime = this.keyframes[0].t - this.offsetTime;\r\n        var endTime = this.keyframes[this.keyframes.length- 1].t-this.offsetTime;\r\n        if(!(frameNum === this._caching.lastFrame || (this._caching.lastFrame !== initFrame && ((this._caching.lastFrame >= endTime && frameNum >= endTime) || (this._caching.lastFrame < initTime && frameNum < initTime))))){\r\n            this._caching.lastIndex = this._caching.lastFrame < frameNum ? this._caching.lastIndex : 0;\r\n            var renderResult = this.interpolateValue(frameNum, this.pv, this._caching);\r\n            this.calculateValueAtCurrentTime(renderResult);\r\n        }\r\n        this._caching.lastFrame = frameNum;\r\n        this.frameId = this.elem.globalData.frameId;\r\n    }\r\n\r\n    function getNoValue(){\r\n        this._mdf = false;\r\n    }\r\n\r\n    function ValueProperty(elem,data, mult){\r\n        this.propType = 'unidimensional';\r\n        this.mult = mult;\r\n        this.v = mult ? data.k * mult : data.k;\r\n        this.pv = data.k;\r\n        this._mdf = false;\r\n        this.comp = elem.comp;\r\n        this.k = false;\r\n        this.kf = false;\r\n        this.vel = 0;\r\n        this.getValue = getNoValue;\r\n    }\r\n\r\n    function MultiDimensionalProperty(elem, data, mult) {\r\n        this.propType = 'multidimensional';\r\n        this.mult = mult;\r\n        this.data = data;\r\n        this._mdf = false;\r\n        this.comp = elem.comp;\r\n        this.k = false;\r\n        this.kf = false;\r\n        this.frameId = -1;\r\n        var i, len = data.k.length;\r\n        this.v = createTypedArray('float32', len);\r\n        this.pv = createTypedArray('float32', len);\r\n        this.lastValue = createTypedArray('float32', len);\r\n        var arr = createTypedArray('float32', len);\r\n        this.vel = createTypedArray('float32', len);\r\n        for (i = 0; i < len; i += 1) {\r\n            this.v[i] = mult ? data.k[i] * mult : data.k[i];\r\n            this.pv[i] = data.k[i];\r\n        }\r\n        this.getValue = getNoValue;\r\n    }\r\n\r\n    function KeyframedValueProperty(elem, data, mult) {\r\n        this.propType = 'unidimensional';\r\n        this.keyframes = data.k;\r\n        this.offsetTime = elem.data.st;\r\n        this.lastValue = initFrame;\r\n        this.lastPValue = initFrame;\r\n        this.frameId = -1;\r\n        this._caching = {lastFrame: initFrame, lastIndex: 0, value: 0};\r\n        this.k = true;\r\n        this.kf = true;\r\n        this.data = data;\r\n        this.mult = mult;\r\n        this.elem = elem;\r\n        this._isFirstFrame = false;\r\n        this.comp = elem.comp;\r\n        this.v = mult ? data.k[0].s[0] * mult : data.k[0].s[0];\r\n        this.pv = data.k[0].s[0];\r\n        this.getValue = getValueAtCurrentTime;\r\n        this.calculateValueAtCurrentTime = calculateUnidimenstionalValueAtCurrentTime;\r\n        this.interpolateValue = interpolateValue;\r\n    }\r\n\r\n    function KeyframedMultidimensionalProperty(elem, data, mult){\r\n        this.propType = 'multidimensional';\r\n        var i, len = data.k.length;\r\n        var s, e,to,ti;\r\n        for (i = 0; i < len - 1; i += 1) {\r\n            if (data.k[i].to && data.k[i].s && data.k[i].e) {\r\n                s = data.k[i].s;\r\n                e = data.k[i].e;\r\n                to = data.k[i].to;\r\n                ti = data.k[i].ti;\r\n                if((s.length === 2 && !(s[0] === e[0] && s[1] === e[1]) && bez.pointOnLine2D(s[0],s[1],e[0],e[1],s[0] + to[0],s[1] + to[1]) && bez.pointOnLine2D(s[0],s[1],e[0],e[1],e[0] + ti[0],e[1] + ti[1])) || (s.length === 3 && !(s[0] === e[0] && s[1] === e[1] && s[2] === e[2]) && bez.pointOnLine3D(s[0],s[1],s[2],e[0],e[1],e[2],s[0] + to[0],s[1] + to[1],s[2] + to[2]) && bez.pointOnLine3D(s[0],s[1],s[2],e[0],e[1],e[2],e[0] + ti[0],e[1] + ti[1],e[2] + ti[2]))){\r\n                    data.k[i].to = null;\r\n                    data.k[i].ti = null;\r\n                }\r\n                if(s[0] === e[0] && s[1] === e[1] && to[0] === 0 && to[1] === 0 && ti[0] === 0 && ti[1] === 0) {\r\n                    if(s.length === 2 || (s[2] === e[2] && to[2] === 0 && ti[2] === 0)) {\r\n                        data.k[i].to = null;\r\n                        data.k[i].ti = null;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.keyframes = data.k;\r\n        this.offsetTime = elem.data.st;\r\n        this.k = true;\r\n        this.kf = true;\r\n        this._isFirstFrame = true;\r\n        this.mult = mult;\r\n        this.elem = elem;\r\n        this.comp = elem.comp;\r\n        this.getValue = getValueAtCurrentTime;\r\n        this.calculateValueAtCurrentTime = calculateMultidimensionalValueAtCurrentTime;\r\n        this.interpolateValue = interpolateValue;\r\n        this.frameId = -1;\r\n        var arrLen = data.k[0].s.length;\r\n        this.v = createTypedArray('float32', arrLen);\r\n        this.pv = createTypedArray('float32', arrLen);\r\n        this.lastValue = createTypedArray('float32', arrLen);\r\n        this.lastPValue = createTypedArray('float32', arrLen);\r\n        this._caching={lastFrame:initFrame,lastIndex:0,value:createTypedArray('float32', arrLen)};\r\n    }\r\n\r\n    function getProp(elem,data,type, mult, arr) {\r\n        var p;\r\n        if(data.a === 0){\r\n            if(type === 0) {\r\n                p = new ValueProperty(elem,data,mult);\r\n            } else {\r\n                p = new MultiDimensionalProperty(elem,data, mult);\r\n            }\r\n        } else if(data.a === 1){\r\n            if(type === 0) {\r\n                p = new KeyframedValueProperty(elem,data,mult);\r\n            } else {\r\n                p = new KeyframedMultidimensionalProperty(elem,data, mult);\r\n            }\r\n        } else if(!data.k.length){\r\n            p = new ValueProperty(elem,data, mult);\r\n        }else if(typeof(data.k[0]) === 'number'){\r\n            p = new MultiDimensionalProperty(elem,data, mult);\r\n        }else{\r\n            switch(type){\r\n                case 0:\r\n                    p = new KeyframedValueProperty(elem,data,mult);\r\n                    break;\r\n                case 1:\r\n                    p = new KeyframedMultidimensionalProperty(elem,data,mult);\r\n                    break;\r\n            }\r\n        }\r\n        if(p.k){\r\n            arr.push(p);\r\n        }\r\n        return p;\r\n    }\r\n\r\n    var ob = {\r\n        getProp: getProp\r\n    };\r\n    return ob;\r\n}());\r\nvar TransformPropertyFactory = (function() {\r\n\r\n    function applyToMatrix(mat) {\r\n        var i, len = this.dynamicProperties.length;\r\n        for(i = 0; i < len; i += 1) {\r\n            this.dynamicProperties[i].getValue();\r\n            if (this.dynamicProperties[i]._mdf) {\r\n                this._mdf = true;\r\n            }\r\n        }\r\n        if (this.a) {\r\n            mat.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n        }\r\n        if (this.s) {\r\n            mat.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n        }\r\n        if (this.r) {\r\n            mat.rotate(-this.r.v);\r\n        } else {\r\n            mat.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n        }\r\n        if (this.data.p.s) {\r\n            if (this.data.p.z) {\r\n                mat.translate(this.px.v, this.py.v, -this.pz.v);\r\n            } else {\r\n                mat.translate(this.px.v, this.py.v, 0);\r\n            }\r\n        } else {\r\n            mat.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);\r\n        }\r\n    }\r\n    function processKeys(forceRender){\r\n        if (this.elem.globalData.frameId === this.frameId) {\r\n            return;\r\n        }\r\n\r\n        this._mdf = false;\r\n        var i, len = this.dynamicProperties.length;\r\n\r\n        for(i = 0; i < len; i += 1) {\r\n            this.dynamicProperties[i].getValue();\r\n            if (this.dynamicProperties[i]._mdf) {\r\n                this._mdf = true;\r\n            }\r\n        }\r\n\r\n        if (this._mdf || forceRender) {\r\n            this.v.reset();\r\n            if (this.a) {\r\n                this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n            }\r\n            if(this.s) {\r\n                this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n            }\r\n            if (this.sk) {\r\n                this.v.skewFromAxis(-this.sk.v, this.sa.v);\r\n            }\r\n            if (this.r) {\r\n                this.v.rotate(-this.r.v);\r\n            } else {\r\n                this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n            }\r\n            if (this.autoOriented && this.p.keyframes && this.p.getValueAtTime) {\r\n                var v1,v2;\r\n                if (this.p._caching.lastFrame+this.p.offsetTime <= this.p.keyframes[0].t) {\r\n                    v1 = this.p.getValueAtTime((this.p.keyframes[0].t + 0.01) / this.elem.globalData.frameRate,0);\r\n                    v2 = this.p.getValueAtTime(this.p.keyframes[0].t / this.elem.globalData.frameRate, 0);\r\n                } else if(this.p._caching.lastFrame+this.p.offsetTime >= this.p.keyframes[this.p.keyframes.length - 1].t) {\r\n                    v1 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t / this.elem.globalData.frameRate), 0);\r\n                    v2 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t - 0.01) / this.elem.globalData.frameRate, 0);\r\n                } else {\r\n                    v1 = this.p.pv;\r\n                    v2 = this.p.getValueAtTime((this.p._caching.lastFrame+this.p.offsetTime - 0.01) / this.elem.globalData.frameRate, this.p.offsetTime);\r\n                }\r\n                this.v.rotate(-Math.atan2(v1[1] - v2[1], v1[0] - v2[0]));\r\n            }\r\n            if(this.data.p.s){\r\n                if(this.data.p.z) {\r\n                    this.v.translate(this.px.v, this.py.v, -this.pz.v);\r\n                } else {\r\n                    this.v.translate(this.px.v, this.py.v, 0);\r\n                }\r\n            }else{\r\n                this.v.translate(this.p.v[0],this.p.v[1],-this.p.v[2]);\r\n            }\r\n        }\r\n        this.frameId = this.elem.globalData.frameId;\r\n    }\r\n\r\n    function setInverted(){\r\n        this.inverted = true;\r\n        this.iv = new Matrix();\r\n        if(!this.k){\r\n            if(this.data.p.s){\r\n                this.iv.translate(this.px.v,this.py.v,-this.pz.v);\r\n            }else{\r\n                this.iv.translate(this.p.v[0],this.p.v[1],-this.p.v[2]);\r\n            }\r\n            if(this.r){\r\n                this.iv.rotate(-this.r.v);\r\n            }else{\r\n                this.iv.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v);\r\n            }\r\n            if(this.s){\r\n                this.iv.scale(this.s.v[0],this.s.v[1],1);\r\n            }\r\n            if(this.a){\r\n                this.iv.translate(-this.a.v[0],-this.a.v[1],this.a.v[2]);\r\n            }\r\n        }\r\n    }\r\n\r\n    function autoOrient(){\r\n        //\r\n        //var prevP = this.getValueAtTime();\r\n    }\r\n\r\n    function TransformProperty(elem,data,arr){\r\n        this.elem = elem;\r\n        this.frameId = -1;\r\n        this.propType = 'transform';\r\n        this.dynamicProperties = [];\r\n        this._mdf = false;\r\n        this.data = data;\r\n        this.v = new Matrix();\r\n        if(data.p.s){\r\n            this.px = PropertyFactory.getProp(elem,data.p.x,0,0,this.dynamicProperties);\r\n            this.py = PropertyFactory.getProp(elem,data.p.y,0,0,this.dynamicProperties);\r\n            if(data.p.z){\r\n                this.pz = PropertyFactory.getProp(elem,data.p.z,0,0,this.dynamicProperties);\r\n            }\r\n        }else{\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this.dynamicProperties);\r\n        }\r\n        if(data.r) {\r\n            this.r = PropertyFactory.getProp(elem, data.r, 0, degToRads, this.dynamicProperties);\r\n        } else if(data.rx) {\r\n            this.rx = PropertyFactory.getProp(elem, data.rx, 0, degToRads, this.dynamicProperties);\r\n            this.ry = PropertyFactory.getProp(elem, data.ry, 0, degToRads, this.dynamicProperties);\r\n            this.rz = PropertyFactory.getProp(elem, data.rz, 0, degToRads, this.dynamicProperties);\r\n            if(data.or.k[0].ti) {\r\n                var i, len = data.or.k.length;\r\n                for(i=0;i<len;i+=1) {\r\n                    data.or.k[i].to = data.or.k[i].ti = null;\r\n                }\r\n            }\r\n            this.or = PropertyFactory.getProp(elem, data.or, 1, degToRads, this.dynamicProperties);\r\n            //sh Indicates it needs to be capped between -180 and 180\r\n            this.or.sh = true;\r\n        }\r\n        if(data.sk){\r\n            this.sk = PropertyFactory.getProp(elem, data.sk, 0, degToRads, this.dynamicProperties);\r\n            this.sa = PropertyFactory.getProp(elem, data.sa, 0, degToRads, this.dynamicProperties);\r\n        }\r\n        if(data.a) {\r\n            this.a = PropertyFactory.getProp(elem,data.a,1,0,this.dynamicProperties);\r\n        }\r\n        if(data.s) {\r\n            this.s = PropertyFactory.getProp(elem,data.s,1,0.01,this.dynamicProperties);\r\n        }\r\n        // Opacity is not part of the transform properties, that's why it won't use this.dynamicProperties. That way transforms won't get updated if opacity changes.\r\n        if(data.o){\r\n            this.o = PropertyFactory.getProp(elem,data.o,0,0.01,arr);\r\n        } else {\r\n            this.o = {_mdf:false,v:1};\r\n        }\r\n        if(this.dynamicProperties.length){\r\n            arr.push(this);\r\n        }else{\r\n            this.getValue(true);\r\n        }\r\n    }\r\n\r\n    TransformProperty.prototype.applyToMatrix = applyToMatrix;\r\n    TransformProperty.prototype.getValue = processKeys;\r\n    TransformProperty.prototype.setInverted = setInverted;\r\n    TransformProperty.prototype.autoOrient = autoOrient;\r\n\r\n    function getTransformProperty(elem,data,arr){\r\n        return new TransformProperty(elem,data,arr);\r\n    }\r\n\r\n    return {\r\n        getTransformProperty: getTransformProperty\r\n    };\r\n\r\n}());\r\nfunction ShapePath(){\r\n\tthis.c = false;\r\n\tthis._length = 0;\r\n\tthis._maxLength = 8;\r\n\tthis.v = createSizedArray(this._maxLength);\r\n\tthis.o = createSizedArray(this._maxLength);\r\n\tthis.i = createSizedArray(this._maxLength);\r\n}\r\n\r\nShapePath.prototype.setPathData = function(closed, len) {\r\n\tthis.c = closed;\r\n\tthis.setLength(len);\r\n\tvar i = 0;\r\n\twhile(i < len){\r\n\t\tthis.v[i] = point_pool.newElement();\r\n\t\tthis.o[i] = point_pool.newElement();\r\n\t\tthis.i[i] = point_pool.newElement();\r\n\t\ti += 1;\r\n\t}\r\n};\r\n\r\nShapePath.prototype.setLength = function(len) {\r\n\twhile(this._maxLength < len) {\r\n\t\tthis.doubleArrayLength();\r\n\t}\r\n\tthis._length = len;\r\n};\r\n\r\nShapePath.prototype.doubleArrayLength = function() {\r\n\tthis.v = this.v.concat(createSizedArray(this._maxLength));\r\n\tthis.i = this.i.concat(createSizedArray(this._maxLength));\r\n\tthis.o = this.o.concat(createSizedArray(this._maxLength));\r\n\tthis._maxLength *= 2;\r\n};\r\n\r\nShapePath.prototype.setXYAt = function(x, y, type, pos, replace) {\r\n\tvar arr;\r\n\tthis._length = Math.max(this._length, pos + 1);\r\n\tif(this._length >= this._maxLength) {\r\n\t\tthis.doubleArrayLength();\r\n\t}\r\n\tswitch(type){\r\n\t\tcase 'v':\r\n\t\t\tarr = this.v;\r\n\t\t\tbreak;\r\n\t\tcase 'i':\r\n\t\t\tarr = this.i;\r\n\t\t\tbreak;\r\n\t\tcase 'o':\r\n\t\t\tarr = this.o;\r\n\t\t\tbreak;\r\n\t}\r\n\tif(!arr[pos] || (arr[pos] && !replace)){\r\n\t\tarr[pos] = point_pool.newElement();\r\n\t}\r\n\tarr[pos][0] = x;\r\n\tarr[pos][1] = y;\r\n};\r\n\r\nShapePath.prototype.setTripleAt = function(vX,vY,oX,oY,iX,iY,pos, replace) {\r\n\tthis.setXYAt(vX,vY,'v',pos, replace);\r\n\tthis.setXYAt(oX,oY,'o',pos, replace);\r\n\tthis.setXYAt(iX,iY,'i',pos, replace);\r\n};\r\n\r\nShapePath.prototype.reverse = function() {\r\n\tvar newPath = new ShapePath();\r\n\tnewPath.setPathData(this.c, this._length);\r\n\tvar vertices = this.v, outPoints = this.o, inPoints = this.i;\r\n\tvar init = 0;\r\n\tif (this.c) {\r\n\t\tnewPath.setTripleAt(vertices[0][0], vertices[0][1], inPoints[0][0], inPoints[0][1], outPoints[0][0], outPoints[0][1], 0, false);\r\n        init = 1;\r\n    }\r\n    var cnt = this._length - 1;\r\n    var len = this._length;\r\n\r\n    for (i = init; i < len; i += 1) {\r\n    \tnewPath.setTripleAt(vertices[cnt][0], vertices[cnt][1], inPoints[cnt][0], inPoints[cnt][1], outPoints[cnt][0], outPoints[cnt][1], i, false);\r\n        cnt -= 1;\r\n    }\r\n    return newPath;\r\n};\r\nvar ShapePropertyFactory = (function(){\r\n\r\n    var initFrame = -999999;\r\n\r\n    function interpolateShape(frameNum, previousValue, isCurrentRender, caching) {\r\n        var iterationIndex = caching.lastIndex;\r\n        var keyPropS,keyPropE,isHold, j, k, jLen, kLen, perc, vertexValue, hasModified = false;\r\n        if(frameNum < this.keyframes[0].t-this.offsetTime){\r\n            keyPropS = this.keyframes[0].s[0];\r\n            isHold = true;\r\n            iterationIndex = 0;\r\n        }else if(frameNum >= this.keyframes[this.keyframes.length - 1].t-this.offsetTime){\r\n            if(this.keyframes[this.keyframes.length - 2].h === 1){\r\n                keyPropS = this.keyframes[this.keyframes.length - 1].s[0];\r\n            }else{\r\n                keyPropS = this.keyframes[this.keyframes.length - 2].e[0];\r\n            }\r\n            isHold = true;\r\n        }else{\r\n            var i = iterationIndex;\r\n            var len = this.keyframes.length- 1,flag = true,keyData,nextKeyData;\r\n            while(flag){\r\n                keyData = this.keyframes[i];\r\n                nextKeyData = this.keyframes[i+1];\r\n                if((nextKeyData.t - this.offsetTime) > frameNum){\r\n                    break;\r\n                }\r\n                if(i < len - 1){\r\n                    i += 1;\r\n                }else{\r\n                    flag = false;\r\n                }\r\n            }\r\n            isHold = keyData.h === 1;\r\n            iterationIndex = i;\r\n            if(!isHold){\r\n                if(frameNum >= nextKeyData.t-this.offsetTime){\r\n                    perc = 1;\r\n                }else if(frameNum < keyData.t-this.offsetTime){\r\n                    perc = 0;\r\n                }else{\r\n                    var fnc;\r\n                    if(keyData.__fnct){\r\n                        fnc = keyData.__fnct;\r\n                    }else{\r\n                        fnc = BezierFactory.getBezierEasing(keyData.o.x,keyData.o.y,keyData.i.x,keyData.i.y).get;\r\n                        keyData.__fnct = fnc;\r\n                    }\r\n                    perc = fnc((frameNum-(keyData.t-this.offsetTime))/((nextKeyData.t-this.offsetTime)-(keyData.t-this.offsetTime)));\r\n                }\r\n                keyPropE = keyData.e[0];\r\n            }\r\n            keyPropS = keyData.s[0];\r\n        }\r\n        jLen = previousValue._length;\r\n        kLen = keyPropS.i[0].length;\r\n        caching.lastIndex = iterationIndex;\r\n\r\n        for(j=0;j<jLen;j+=1){\r\n            for(k=0;k<kLen;k+=1){\r\n                vertexValue = isHold ? keyPropS.i[j][k] :  keyPropS.i[j][k]+(keyPropE.i[j][k]-keyPropS.i[j][k])*perc;\r\n                if(previousValue.i[j][k] !== vertexValue){\r\n                    previousValue.i[j][k] = vertexValue;\r\n                    if(isCurrentRender) {\r\n                        this.pv.i[j][k] = vertexValue;\r\n                    }\r\n                    hasModified = true;\r\n                }\r\n                vertexValue = isHold ? keyPropS.o[j][k] :  keyPropS.o[j][k]+(keyPropE.o[j][k]-keyPropS.o[j][k])*perc;\r\n                if(previousValue.o[j][k] !== vertexValue){\r\n                    previousValue.o[j][k] = vertexValue;\r\n                    if(isCurrentRender) {\r\n                        this.pv.o[j][k] = vertexValue;\r\n                    }\r\n                    hasModified = true;\r\n                }\r\n                vertexValue = isHold ? keyPropS.v[j][k] :  keyPropS.v[j][k]+(keyPropE.v[j][k]-keyPropS.v[j][k])*perc;\r\n                if(previousValue.v[j][k] !== vertexValue){\r\n                    previousValue.v[j][k] = vertexValue;\r\n                    if(isCurrentRender) {\r\n                        this.pv.v[j][k] = vertexValue;\r\n                    }\r\n                    hasModified = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return hasModified;\r\n    }\r\n\r\n    function interpolateShapeCurrentTime(){\r\n        if(this.elem.globalData.frameId === this.frameId){\r\n            return;\r\n        }\r\n        this._mdf = false;\r\n        var frameNum = this.comp.renderedFrame - this.offsetTime;\r\n        var initTime = this.keyframes[0].t - this.offsetTime;\r\n        var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;\r\n        var lastFrame = this._caching.lastFrame;\r\n        if(!(lastFrame !== initFrame && ((lastFrame < initTime && frameNum < initTime) || (lastFrame > endTime && frameNum > endTime)))){\r\n            ////\r\n            this._caching.lastIndex = lastFrame < frameNum ? this._caching.lastIndex : 0;\r\n            var hasModified = this.interpolateShape(frameNum, this.v, true, this._caching);\r\n            ////\r\n            this._mdf = hasModified;\r\n            if(hasModified) {\r\n                this.paths = this.localShapeCollection;\r\n            }\r\n        }\r\n        this._caching.lastFrame = frameNum;\r\n        this.frameId = this.elem.globalData.frameId;\r\n    }\r\n\r\n    function getShapeValue(){\r\n        return this.v;\r\n    }\r\n\r\n    function resetShape(){\r\n        this.paths = this.localShapeCollection;\r\n        if(!this.k){\r\n            this._mdf = false;\r\n        }\r\n    }\r\n\r\n    function ShapeProperty(elem, data, type){\r\n        this.propType = 'shape';\r\n        this.comp = elem.comp;\r\n        this.k = false;\r\n        this._mdf = false;\r\n        var pathData = type === 3 ? data.pt.k : data.ks.k;\r\n        this.v = shape_pool.clone(pathData);\r\n        this.pv = shape_pool.clone(this.v);\r\n        this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n        this.paths = this.localShapeCollection;\r\n        this.paths.addShape(this.v);\r\n        this.reset = resetShape;\r\n    }\r\n    ShapeProperty.prototype.interpolateShape = interpolateShape;\r\n    ShapeProperty.prototype.getValue = getShapeValue;\r\n\r\n    function KeyframedShapeProperty(elem,data,type){\r\n        this.propType = 'shape';\r\n        this.comp = elem.comp;\r\n        this.elem = elem;\r\n        this.offsetTime = elem.data.st;\r\n        this.keyframes = type === 3 ? data.pt.k : data.ks.k;\r\n        this.k = true;\r\n        this.kf = true;\r\n        var i, len = this.keyframes[0].s[0].i.length;\r\n        var jLen = this.keyframes[0].s[0].i[0].length;\r\n        this.v = shape_pool.newElement();\r\n        this.v.setPathData(this.keyframes[0].s[0].c, len);\r\n        this.pv = shape_pool.clone(this.v);\r\n        this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n        this.paths = this.localShapeCollection;\r\n        this.paths.addShape(this.v);\r\n        this.lastFrame = initFrame;\r\n        this.reset = resetShape;\r\n        this._caching = {lastFrame: initFrame, lastIndex: 0};\r\n    }\r\n    KeyframedShapeProperty.prototype.getValue = interpolateShapeCurrentTime;\r\n    KeyframedShapeProperty.prototype.interpolateShape = interpolateShape;\r\n\r\n    var EllShapeProperty = (function(){\r\n\r\n        var cPoint = roundCorner;\r\n\r\n        function convertEllToPath(){\r\n            var p0 = this.p.v[0], p1 = this.p.v[1], s0 = this.s.v[0]/2, s1 = this.s.v[1]/2;\r\n            var _cw = this.d !== 3;\r\n            var _v = this.v;\r\n            if(this.d !== 3){\r\n                _v.v[0][0] = p0;\r\n                _v.v[0][1] = p1 - s1;\r\n                _v.v[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n                _v.v[1][1] = p1;\r\n                _v.v[2][0] = p0;\r\n                _v.v[2][1] = p1 + s1;\r\n                _v.v[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n                _v.v[3][1] = p1;\r\n                _v.i[0][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;\r\n                _v.i[0][1] = p1 - s1;\r\n                _v.i[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n                _v.i[1][1] = p1 - s1 * cPoint;\r\n                _v.i[2][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;\r\n                _v.i[2][1] = p1 + s1;\r\n                _v.i[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n                _v.i[3][1] = p1 + s1 * cPoint;\r\n                _v.o[0][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;\r\n                _v.o[0][1] = p1 - s1;\r\n                _v.o[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n                _v.o[1][1] = p1 + s1 * cPoint;\r\n                _v.o[2][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;\r\n                _v.o[2][1] = p1 + s1;\r\n                _v.o[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n                _v.o[3][1] = p1 - s1 * cPoint;\r\n            }\r\n        }\r\n\r\n        function processKeys(frameNum){\r\n            var i, len = this.dynamicProperties.length;\r\n            if(this.elem.globalData.frameId === this.frameId){\r\n                return;\r\n            }\r\n            this._mdf = false;\r\n            this.frameId = this.elem.globalData.frameId;\r\n\r\n            for(i=0;i<len;i+=1){\r\n                this.dynamicProperties[i].getValue(frameNum);\r\n                if(this.dynamicProperties[i]._mdf){\r\n                    this._mdf = true;\r\n                }\r\n            }\r\n            if(this._mdf){\r\n                this.convertEllToPath();\r\n            }\r\n        }\r\n\r\n        return function EllShapeProperty(elem,data) {\r\n            /*this.v = {\r\n                v: createSizedArray(4),\r\n                i: createSizedArray(4),\r\n                o: createSizedArray(4),\r\n                c: true\r\n            };*/\r\n            this.v = shape_pool.newElement();\r\n            this.v.setPathData(true, 4);\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.paths = this.localShapeCollection;\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.d = data.d;\r\n            this.dynamicProperties = [];\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.frameId = -1;\r\n            this._mdf = false;\r\n            this.getValue = processKeys;\r\n            this.convertEllToPath = convertEllToPath;\r\n            this.reset = resetShape;\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this.dynamicProperties);\r\n            this.s = PropertyFactory.getProp(elem,data.s,1,0,this.dynamicProperties);\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.convertEllToPath();\r\n            }\r\n        };\r\n    }());\r\n\r\n    var StarShapeProperty = (function() {\r\n\r\n        function convertPolygonToPath(){\r\n            var numPts = Math.floor(this.pt.v);\r\n            var angle = Math.PI*2/numPts;\r\n            /*this.v.v.length = numPts;\r\n            this.v.i.length = numPts;\r\n            this.v.o.length = numPts;*/\r\n            var rad = this.or.v;\r\n            var roundness = this.os.v;\r\n            var perimSegment = 2*Math.PI*rad/(numPts*4);\r\n            var i, currentAng = -Math.PI/ 2;\r\n            var dir = this.data.d === 3 ? -1 : 1;\r\n            currentAng += this.r.v;\r\n            this.v._length = 0;\r\n            for(i=0;i<numPts;i+=1){\r\n                var x = rad * Math.cos(currentAng);\r\n                var y = rad * Math.sin(currentAng);\r\n                var ox = x === 0 && y === 0 ? 0 : y/Math.sqrt(x*x + y*y);\r\n                var oy = x === 0 && y === 0 ? 0 : -x/Math.sqrt(x*x + y*y);\r\n                x +=  + this.p.v[0];\r\n                y +=  + this.p.v[1];\r\n                this.v.setTripleAt(x,y,x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir,x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir, i, true);\r\n                /*this.v.v[i] = [x,y];\r\n                this.v.i[i] = [x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir];\r\n                this.v.o[i] = [x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir];*/\r\n                currentAng += angle*dir;\r\n            }\r\n            this.paths.length = 0;\r\n            this.paths[0] = this.v;\r\n        }\r\n\r\n        function convertStarToPath() {\r\n            var numPts = Math.floor(this.pt.v)*2;\r\n            var angle = Math.PI*2/numPts;\r\n            /*this.v.v.length = numPts;\r\n            this.v.i.length = numPts;\r\n            this.v.o.length = numPts;*/\r\n            var longFlag = true;\r\n            var longRad = this.or.v;\r\n            var shortRad = this.ir.v;\r\n            var longRound = this.os.v;\r\n            var shortRound = this.is.v;\r\n            var longPerimSegment = 2*Math.PI*longRad/(numPts*2);\r\n            var shortPerimSegment = 2*Math.PI*shortRad/(numPts*2);\r\n            var i, rad,roundness,perimSegment, currentAng = -Math.PI/ 2;\r\n            currentAng += this.r.v;\r\n            var dir = this.data.d === 3 ? -1 : 1;\r\n            this.v._length = 0;\r\n            for(i=0;i<numPts;i+=1){\r\n                rad = longFlag ? longRad : shortRad;\r\n                roundness = longFlag ? longRound : shortRound;\r\n                perimSegment = longFlag ? longPerimSegment : shortPerimSegment;\r\n                var x = rad * Math.cos(currentAng);\r\n                var y = rad * Math.sin(currentAng);\r\n                var ox = x === 0 && y === 0 ? 0 : y/Math.sqrt(x*x + y*y);\r\n                var oy = x === 0 && y === 0 ? 0 : -x/Math.sqrt(x*x + y*y);\r\n                x +=  + this.p.v[0];\r\n                y +=  + this.p.v[1];\r\n                this.v.setTripleAt(x,y,x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir,x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir, i, true);\r\n\r\n                /*this.v.v[i] = [x,y];\r\n                this.v.i[i] = [x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir];\r\n                this.v.o[i] = [x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir];\r\n                this.v._length = numPts;*/\r\n                longFlag = !longFlag;\r\n                currentAng += angle*dir;\r\n            }\r\n        }\r\n\r\n        function processKeys() {\r\n            if(this.elem.globalData.frameId === this.frameId){\r\n                return;\r\n            }\r\n            this._mdf = false;\r\n            this.frameId = this.elem.globalData.frameId;\r\n            var i, len = this.dynamicProperties.length;\r\n\r\n            for(i=0;i<len;i+=1){\r\n                this.dynamicProperties[i].getValue();\r\n                if(this.dynamicProperties[i]._mdf){\r\n                    this._mdf = true;\r\n                }\r\n            }\r\n            if(this._mdf){\r\n                this.convertToPath();\r\n            }\r\n        }\r\n\r\n        return function StarShapeProperty(elem,data) {\r\n            /*this.v = {\r\n                v: [],\r\n                i: [],\r\n                o: [],\r\n                c: true\r\n            };*/\r\n            this.v = shape_pool.newElement();\r\n            this.v.setPathData(true, 0);\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.data = data;\r\n            this.frameId = -1;\r\n            this.d = data.d;\r\n            this.dynamicProperties = [];\r\n            this._mdf = false;\r\n            this.getValue = processKeys;\r\n            this.reset = resetShape;\r\n            if(data.sy === 1){\r\n                this.ir = PropertyFactory.getProp(elem,data.ir,0,0,this.dynamicProperties);\r\n                this.is = PropertyFactory.getProp(elem,data.is,0,0.01,this.dynamicProperties);\r\n                this.convertToPath = convertStarToPath;\r\n            } else {\r\n                this.convertToPath = convertPolygonToPath;\r\n            }\r\n            this.pt = PropertyFactory.getProp(elem,data.pt,0,0,this.dynamicProperties);\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this.dynamicProperties);\r\n            this.r = PropertyFactory.getProp(elem,data.r,0,degToRads,this.dynamicProperties);\r\n            this.or = PropertyFactory.getProp(elem,data.or,0,0,this.dynamicProperties);\r\n            this.os = PropertyFactory.getProp(elem,data.os,0,0.01,this.dynamicProperties);\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.paths = this.localShapeCollection;\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.convertToPath();\r\n            }\r\n        };\r\n    }());\r\n\r\n    var RectShapeProperty = (function() {\r\n        function processKeys(frameNum){\r\n            if(this.elem.globalData.frameId === this.frameId){\r\n                return;\r\n            }\r\n            this._mdf = false;\r\n            this.frameId = this.elem.globalData.frameId;\r\n            var i, len = this.dynamicProperties.length;\r\n\r\n            for(i=0;i<len;i+=1){\r\n                this.dynamicProperties[i].getValue(frameNum);\r\n                if(this.dynamicProperties[i]._mdf){\r\n                    this._mdf = true;\r\n                }\r\n            }\r\n            if(this._mdf){\r\n                this.convertRectToPath();\r\n            }\r\n\r\n        }\r\n\r\n        function convertRectToPath(){\r\n            var p0 = this.p.v[0], p1 = this.p.v[1], v0 = this.s.v[0]/2, v1 = this.s.v[1]/2;\r\n            var round = bm_min(v0,v1,this.r.v);\r\n            var cPoint = round*(1-roundCorner);\r\n            this.v._length = 0;\r\n\r\n            if(this.d === 2 || this.d === 1) {\r\n                this.v.setTripleAt(p0+v0, p1-v1+round,p0+v0, p1-v1+round,p0+v0,p1-v1+cPoint,0, true);\r\n                this.v.setTripleAt(p0+v0, p1+v1-round,p0+v0, p1+v1-cPoint,p0+v0, p1+v1-round,1, true);\r\n                if(round!== 0){\r\n                    this.v.setTripleAt(p0+v0-round, p1+v1,p0+v0-round,p1+v1,p0+v0-cPoint,p1+v1,2, true);\r\n                    this.v.setTripleAt(p0-v0+round,p1+v1,p0-v0+cPoint,p1+v1,p0-v0+round,p1+v1,3, true);\r\n                    this.v.setTripleAt(p0-v0,p1+v1-round,p0-v0,p1+v1-round,p0-v0,p1+v1-cPoint,4, true);\r\n                    this.v.setTripleAt(p0-v0,p1-v1+round,p0-v0,p1-v1+cPoint,p0-v0,p1-v1+round,5, true);\r\n                    this.v.setTripleAt(p0-v0+round,p1-v1,p0-v0+round,p1-v1,p0-v0+cPoint,p1-v1,6, true);\r\n                    this.v.setTripleAt(p0+v0-round,p1-v1,p0+v0-cPoint,p1-v1,p0+v0-round,p1-v1,7, true);\r\n                } else {\r\n                    this.v.setTripleAt(p0-v0,p1+v1,p0-v0+cPoint,p1+v1,p0-v0,p1+v1,2);\r\n                    this.v.setTripleAt(p0-v0,p1-v1,p0-v0,p1-v1+cPoint,p0-v0,p1-v1,3);\r\n                }\r\n            }else{\r\n                this.v.setTripleAt(p0+v0,p1-v1+round,p0+v0,p1-v1+cPoint,p0+v0,p1-v1+round,0, true);\r\n                if(round!== 0){\r\n                    this.v.setTripleAt(p0+v0-round,p1-v1,p0+v0-round,p1-v1,p0+v0-cPoint,p1-v1,1, true);\r\n                    this.v.setTripleAt(p0-v0+round,p1-v1,p0-v0+cPoint,p1-v1,p0-v0+round,p1-v1,2, true);\r\n                    this.v.setTripleAt(p0-v0,p1-v1+round,p0-v0,p1-v1+round,p0-v0,p1-v1+cPoint,3, true);\r\n                    this.v.setTripleAt(p0-v0,p1+v1-round,p0-v0,p1+v1-cPoint,p0-v0,p1+v1-round,4, true);\r\n                    this.v.setTripleAt(p0-v0+round,p1+v1,p0-v0+round,p1+v1,p0-v0+cPoint,p1+v1,5, true);\r\n                    this.v.setTripleAt(p0+v0-round,p1+v1,p0+v0-cPoint,p1+v1,p0+v0-round,p1+v1,6, true);\r\n                    this.v.setTripleAt(p0+v0,p1+v1-round,p0+v0,p1+v1-round,p0+v0,p1+v1-cPoint,7, true);\r\n                } else {\r\n                    this.v.setTripleAt(p0-v0,p1-v1,p0-v0+cPoint,p1-v1,p0-v0,p1-v1,1, true);\r\n                    this.v.setTripleAt(p0-v0,p1+v1,p0-v0,p1+v1-cPoint,p0-v0,p1+v1,2, true);\r\n                    this.v.setTripleAt(p0+v0,p1+v1,p0+v0-cPoint,p1+v1,p0+v0,p1+v1,3, true);\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        return function RectShapeProperty(elem,data) {\r\n            this.v = shape_pool.newElement();\r\n            this.v.c = true;\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.paths = this.localShapeCollection;\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.frameId = -1;\r\n            this.d = data.d;\r\n            this.dynamicProperties = [];\r\n            this._mdf = false;\r\n            this.getValue = processKeys;\r\n            this.convertRectToPath = convertRectToPath;\r\n            this.reset = resetShape;\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this.dynamicProperties);\r\n            this.s = PropertyFactory.getProp(elem,data.s,1,0,this.dynamicProperties);\r\n            this.r = PropertyFactory.getProp(elem,data.r,0,0,this.dynamicProperties);\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.convertRectToPath();\r\n            }\r\n        };\r\n    }());\r\n\r\n    function getShapeProp(elem,data,type, arr){\r\n        var prop;\r\n        if(type === 3 || type === 4){\r\n            var dataProp = type === 3 ? data.pt : data.ks;\r\n            var keys = dataProp.k;\r\n            if(dataProp.a === 1 || keys.length){\r\n                prop = new KeyframedShapeProperty(elem, data, type);\r\n            }else{\r\n                prop = new ShapeProperty(elem, data, type);\r\n            }\r\n        }else if(type === 5){\r\n            prop = new RectShapeProperty(elem, data);\r\n        }else if(type === 6){\r\n            prop = new EllShapeProperty(elem, data);\r\n        }else if(type === 7){\r\n            prop = new StarShapeProperty(elem, data);\r\n        }\r\n        if(prop.k){\r\n            arr.push(prop);\r\n        }\r\n        return prop;\r\n    }\r\n\r\n    function getConstructorFunction() {\r\n        return ShapeProperty;\r\n    }\r\n\r\n    function getKeyframedConstructorFunction() {\r\n        return KeyframedShapeProperty;\r\n    }\r\n\r\n    var ob = {};\r\n    ob.getShapeProp = getShapeProp;\r\n    ob.getConstructorFunction = getConstructorFunction;\r\n    ob.getKeyframedConstructorFunction = getKeyframedConstructorFunction;\r\n    return ob;\r\n}());\r\nvar ShapeModifiers = (function(){\r\n    var ob = {};\r\n    var modifiers = {};\r\n    ob.registerModifier = registerModifier;\r\n    ob.getModifier = getModifier;\r\n\r\n    function registerModifier(nm,factory){\r\n        if(!modifiers[nm]){\r\n            modifiers[nm] = factory;\r\n        }\r\n    }\r\n\r\n    function getModifier(nm,elem, data, dynamicProperties){\r\n        return new modifiers[nm](elem, data, dynamicProperties);\r\n    }\r\n\r\n    return ob;\r\n}());\r\n\r\nfunction ShapeModifier(){}\r\nShapeModifier.prototype.initModifierProperties = function(){};\r\nShapeModifier.prototype.addShapeToModifier = function(){};\r\nShapeModifier.prototype.addShape = function(data){\r\n    if(!this.closed){\r\n        var shapeData = {shape:data.sh, data: data, localShapeCollection:shapeCollection_pool.newShapeCollection()};\r\n        this.shapes.push(shapeData);\r\n        this.addShapeToModifier(shapeData);\r\n    }\r\n};\r\nShapeModifier.prototype.init = function(elem,data,dynamicProperties){\r\n    this.dynamicProperties = [];\r\n    this.shapes = [];\r\n    this.elem = elem;\r\n    this.initModifierProperties(elem,data);\r\n    this.frameId = initialDefaultFrame;\r\n    this._mdf = false;\r\n    this.closed = false;\r\n    this.k = false;\r\n    if(this.dynamicProperties.length){\r\n        this.k = true;\r\n        dynamicProperties.push(this);\r\n    }else{\r\n        this.getValue(true);\r\n    }\r\n};\r\nShapeModifier.prototype.processKeys = function(){\r\n    if(this.elem.globalData.frameId === this.frameId){\r\n        return;\r\n    }\r\n    this._mdf = false;\r\n    var i, len = this.dynamicProperties.length;\r\n\r\n    for(i=0;i<len;i+=1){\r\n        this.dynamicProperties[i].getValue();\r\n        if(this.dynamicProperties[i]._mdf){\r\n            this._mdf = true;\r\n        }\r\n    }\r\n    this.frameId = this.elem.globalData.frameId;\r\n};\r\nfunction TrimModifier(){\r\n}\r\nextendPrototype([ShapeModifier], TrimModifier);\r\nTrimModifier.prototype.initModifierProperties = function(elem, data) {\r\n    this.s = PropertyFactory.getProp(elem, data.s, 0, 0.01, this.dynamicProperties);\r\n    this.e = PropertyFactory.getProp(elem, data.e, 0, 0.01, this.dynamicProperties);\r\n    this.o = PropertyFactory.getProp(elem, data.o, 0, 0, this.dynamicProperties);\r\n    this.sValue = 0;\r\n    this.eValue = 0;\r\n    this.getValue = this.processKeys;\r\n    this.m = data.m;\r\n};\r\n\r\nTrimModifier.prototype.addShapeToModifier = function(shapeData){\r\n    shapeData.pathsData = [];\r\n};\r\n\r\nTrimModifier.prototype.calculateShapeEdges = function(s, e, shapeLength, addedLength, totalModifierLength) {\r\n    var segments = [];\r\n    if (e <= 1) {\r\n        segments.push({\r\n            s: s,\r\n            e: e\r\n        });\r\n    } else if (s >= 1) {\r\n        segments.push({\r\n            s: s - 1,\r\n            e: e - 1\r\n        });\r\n    } else {\r\n        segments.push({\r\n            s: s,\r\n            e: 1\r\n        });\r\n        segments.push({\r\n            s: 0,\r\n            e: e - 1\r\n        });\r\n    }\r\n    var shapeSegments = [];\r\n    var i, len = segments.length, segmentOb;\r\n    for (i = 0; i < len; i += 1) {\r\n        segmentOb = segments[i];\r\n        if (segmentOb.e * totalModifierLength < addedLength || segmentOb.s * totalModifierLength > addedLength + shapeLength) {\r\n            \r\n        } else {\r\n            var shapeS, shapeE;\r\n            if (segmentOb.s * totalModifierLength <= addedLength) {\r\n                shapeS = 0;\r\n            } else {\r\n                shapeS = (segmentOb.s * totalModifierLength - addedLength) / shapeLength;\r\n            }\r\n            if(segmentOb.e * totalModifierLength >= addedLength + shapeLength) {\r\n                shapeE = 1;\r\n            } else {\r\n                shapeE = ((segmentOb.e * totalModifierLength - addedLength) / shapeLength);\r\n            }\r\n            shapeSegments.push([shapeS, shapeE]);\r\n        }\r\n    }\r\n    if (!shapeSegments.length) {\r\n        shapeSegments.push([0, 0]);\r\n    }\r\n    return shapeSegments;\r\n};\r\n\r\nTrimModifier.prototype.releasePathsData = function(pathsData) {\r\n    var i, len = pathsData.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        segments_length_pool.release(pathsData[i]);\r\n    }\r\n    pathsData.length = 0;\r\n    return pathsData;\r\n};\r\n\r\nTrimModifier.prototype.processShapes = function(_isFirstFrame) {\r\n    var s, e;\r\n    if (this._mdf || _isFirstFrame) {\r\n        var o = (this.o.v % 360) / 360;\r\n        if (o < 0) {\r\n            o += 1;\r\n        }\r\n        s = this.s.v + o;\r\n        e = this.e.v + o;\r\n        if (s === e) {\r\n\r\n        }\r\n        if (s > e) {\r\n            var _s = s;\r\n            s = e;\r\n            e = _s;\r\n        }\r\n        this.sValue = s;\r\n        this.eValue = e;\r\n    } else {\r\n        s = this.sValue;\r\n        e = this.eValue;\r\n    }\r\n    var shapePaths;\r\n    var i, len = this.shapes.length, j, jLen;\r\n    var pathsData, pathData, totalShapeLength, totalModifierLength = 0;\r\n\r\n    if (e === s) {\r\n        for (i = 0; i < len; i += 1) {\r\n            this.shapes[i].localShapeCollection.releaseShapes();\r\n            this.shapes[i].shape._mdf = true;\r\n            this.shapes[i].shape.paths = this.shapes[i].localShapeCollection;\r\n        }\r\n    } else if (!((e === 1 && s === 0) || (e===0 && s === 1))){\r\n        var segments = [], shapeData, localShapeCollection;\r\n        for (i = 0; i < len; i += 1) {\r\n            shapeData = this.shapes[i];\r\n            // if shape hasn't changed and trim properties haven't changed, cached previous path can be used\r\n            if (!shapeData.shape._mdf && !this._mdf && !_isFirstFrame && this.m !== 2) {\r\n                shapeData.shape.paths = shapeData.localShapeCollection;\r\n            } else {\r\n                shapePaths = shapeData.shape.paths;\r\n                jLen = shapePaths._length;\r\n                totalShapeLength = 0;\r\n                if (!shapeData.shape._mdf && shapeData.pathsData.length) {\r\n                    totalShapeLength = shapeData.totalShapeLength;\r\n                } else {\r\n                    pathsData = this.releasePathsData(shapeData.pathsData);\r\n                    for (j = 0; j < jLen; j += 1) {\r\n                        pathData = bez.getSegmentsLength(shapePaths.shapes[j]);\r\n                        pathsData.push(pathData);\r\n                        totalShapeLength += pathData.totalLength;\r\n                    }\r\n                    shapeData.totalShapeLength = totalShapeLength;\r\n                    shapeData.pathsData = pathsData;\r\n                }\r\n\r\n                totalModifierLength += totalShapeLength;\r\n                shapeData.shape._mdf = true;\r\n            }\r\n        }\r\n        var shapeS = s, shapeE = e, addedLength = 0, edges;\r\n        for (i = len - 1; i >= 0; i -= 1) {\r\n            shapeData = this.shapes[i];\r\n            if (shapeData.shape._mdf) {\r\n                localShapeCollection = shapeData.localShapeCollection;\r\n                localShapeCollection.releaseShapes();\r\n                //if m === 2 means paths are trimmed individually so edges need to be found for this specific shape relative to whoel group\r\n                if (this.m === 2 && len > 1) {\r\n                    edges = this.calculateShapeEdges(s, e, shapeData.totalShapeLength, addedLength, totalModifierLength);\r\n                    addedLength += shapeData.totalShapeLength;\r\n                } else {\r\n                    edges = [[shapeS, shapeE]];\r\n                }\r\n                jLen = edges.length;\r\n                for (j = 0; j < jLen; j += 1) {\r\n                    shapeS = edges[j][0];\r\n                    shapeE = edges[j][1];\r\n                    segments.length = 0;\r\n                    if (shapeE <= 1) {\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * shapeS,\r\n                            e:shapeData.totalShapeLength * shapeE\r\n                        });\r\n                    } else if (shapeS >= 1) {\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * (shapeS - 1),\r\n                            e:shapeData.totalShapeLength * (shapeE - 1)\r\n                        });\r\n                    } else {\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * shapeS,\r\n                            e:shapeData.totalShapeLength\r\n                        });\r\n                        segments.push({\r\n                            s:0,\r\n                            e:shapeData.totalShapeLength * (shapeE - 1)\r\n                        });\r\n                    }\r\n                    var newShapesData = this.addShapes(shapeData,segments[0]);\r\n                    if (segments[0].s !== segments[0].e) {\r\n                        if (segments.length > 1) {\r\n                            if (shapeData.shape.v.c) {\r\n                                var lastShape = newShapesData.pop();\r\n                                this.addPaths(newShapesData, localShapeCollection);\r\n                                newShapesData = this.addShapes(shapeData, segments[1], lastShape);\r\n                            } else {\r\n                                this.addPaths(newShapesData, localShapeCollection);\r\n                                newShapesData = this.addShapes(shapeData, segments[1]);\r\n                            }\r\n                        } \r\n                        this.addPaths(newShapesData, localShapeCollection);\r\n                    }\r\n                    \r\n                }\r\n                shapeData.shape.paths = localShapeCollection;\r\n            }\r\n        }\r\n    } else if (this._mdf) {\r\n        for (i = 0; i < len; i += 1) {\r\n            this.shapes[i].shape._mdf = true;\r\n        }\r\n    }\r\n};\r\n\r\nTrimModifier.prototype.addPaths = function(newPaths, localShapeCollection) {\r\n    var i, len = newPaths.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        localShapeCollection.addShape(newPaths[i]);\r\n    }\r\n};\r\n\r\nTrimModifier.prototype.addSegment = function(pt1, pt2, pt3, pt4, shapePath, pos, newShape) {\r\n    shapePath.setXYAt(pt2[0], pt2[1], 'o', pos);\r\n    shapePath.setXYAt(pt3[0], pt3[1], 'i', pos + 1);\r\n    if(newShape){\r\n        shapePath.setXYAt(pt1[0], pt1[1], 'v', pos);\r\n    }\r\n    shapePath.setXYAt(pt4[0], pt4[1], 'v', pos + 1);\r\n};\r\n\r\nTrimModifier.prototype.addSegmentFromArray = function(points, shapePath, pos, newShape) {\r\n    shapePath.setXYAt(points[1], points[5], 'o', pos);\r\n    shapePath.setXYAt(points[2], points[6], 'i', pos + 1);\r\n    if(newShape){\r\n        shapePath.setXYAt(points[0], points[4], 'v', pos);\r\n    }\r\n    shapePath.setXYAt(points[3], points[7], 'v', pos + 1);\r\n};\r\n\r\nTrimModifier.prototype.addShapes = function(shapeData, shapeSegment, shapePath) {\r\n    var pathsData = shapeData.pathsData;\r\n    var shapePaths = shapeData.shape.paths.shapes;\r\n    var i, len = shapeData.shape.paths._length, j, jLen;\r\n    var addedLength = 0;\r\n    var currentLengthData,segmentCount;\r\n    var lengths;\r\n    var segment;\r\n    var shapes = [];\r\n    var initPos;\r\n    var newShape = true;\r\n    if (!shapePath) {\r\n        shapePath = shape_pool.newElement();\r\n        segmentCount = 0;\r\n        initPos = 0;\r\n    } else {\r\n        segmentCount = shapePath._length;\r\n        initPos = shapePath._length;\r\n    }\r\n    shapes.push(shapePath);\r\n    for (i = 0; i < len; i += 1) {\r\n        lengths = pathsData[i].lengths;\r\n        shapePath.c = shapePaths[i].c;\r\n        jLen = shapePaths[i].c ? lengths.length : lengths.length + 1;\r\n        for (j = 1; j < jLen; j +=1) {\r\n            currentLengthData = lengths[j-1];\r\n            if (addedLength + currentLengthData.addedLength < shapeSegment.s) {\r\n                addedLength += currentLengthData.addedLength;\r\n                shapePath.c = false;\r\n            } else if(addedLength > shapeSegment.e) {\r\n                shapePath.c = false;\r\n                break;\r\n            } else {\r\n                if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + currentLengthData.addedLength) {\r\n                    this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[j], shapePaths[i].v[j], shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                } else {\r\n                    segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[j], shapePaths[i].o[j - 1], shapePaths[i].i[j], (shapeSegment.s - addedLength)/currentLengthData.addedLength,(shapeSegment.e - addedLength)/currentLengthData.addedLength, lengths[j-1]);\r\n                    this.addSegmentFromArray(segment, shapePath, segmentCount, newShape);\r\n                    // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                    shapePath.c = false;\r\n                }\r\n                addedLength += currentLengthData.addedLength;\r\n                segmentCount += 1;\r\n            }\r\n        }\r\n        if (shapePaths[i].c) {\r\n            currentLengthData = lengths[j - 1];\r\n            if (addedLength <= shapeSegment.e) {\r\n                var segmentLength = lengths[j - 1].addedLength;\r\n                if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + segmentLength) {\r\n                    this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[0], shapePaths[i].v[0], shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                } else {\r\n                    segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[0], shapePaths[i].o[j - 1], shapePaths[i].i[0], (shapeSegment.s - addedLength) / segmentLength, (shapeSegment.e - addedLength) / segmentLength, lengths[j - 1]);\r\n                    this.addSegmentFromArray(segment, shapePath, segmentCount, newShape);\r\n                    // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                    shapePath.c = false;\r\n                }\r\n            } else {\r\n                shapePath.c = false;\r\n            }\r\n            addedLength += currentLengthData.addedLength;\r\n            segmentCount += 1;\r\n        }\r\n        if (shapePath._length) {\r\n            shapePath.setXYAt(shapePath.v[initPos][0], shapePath.v[initPos][1], 'i', initPos);\r\n            shapePath.setXYAt(shapePath.v[shapePath._length - 1][0], shapePath.v[shapePath._length - 1][1],'o', shapePath._length - 1);\r\n        }\r\n        if (addedLength > shapeSegment.e) {\r\n            break;\r\n        }\r\n        if (i < len - 1) {\r\n            shapePath = shape_pool.newElement();\r\n            newShape = true;\r\n            shapes.push(shapePath);\r\n            segmentCount = 0;\r\n        }\r\n    }\r\n    return shapes;\r\n};\r\n\r\n\r\nShapeModifiers.registerModifier('tm', TrimModifier);\r\nfunction RoundCornersModifier(){}\r\nextendPrototype([ShapeModifier],RoundCornersModifier);\r\nRoundCornersModifier.prototype.initModifierProperties = function(elem,data){\r\n    this.getValue = this.processKeys;\r\n    this.rd = PropertyFactory.getProp(elem,data.r,0,null,this.dynamicProperties);\r\n};\r\n\r\nRoundCornersModifier.prototype.processPath = function(path, round){\r\n    var cloned_path = shape_pool.newElement();\r\n    cloned_path.c = path.c;\r\n    var i, len = path._length;\r\n    var currentV,currentI,currentO,closerV, newV,newO,newI,distance,newPosPerc,index = 0;\r\n    var vX,vY,oX,oY,iX,iY;\r\n    for(i=0;i<len;i+=1){\r\n        currentV = path.v[i];\r\n        currentO = path.o[i];\r\n        currentI = path.i[i];\r\n        if(currentV[0]===currentO[0] && currentV[1]===currentO[1] && currentV[0]===currentI[0] && currentV[1]===currentI[1]){\r\n            if((i===0 || i === len - 1) && !path.c){\r\n                cloned_path.setTripleAt(currentV[0],currentV[1],currentO[0],currentO[1],currentI[0],currentI[1],index);\r\n                /*cloned_path.v[index] = currentV;\r\n                cloned_path.o[index] = currentO;\r\n                cloned_path.i[index] = currentI;*/\r\n                index += 1;\r\n            } else {\r\n                if(i===0){\r\n                    closerV = path.v[len-1];\r\n                } else {\r\n                    closerV = path.v[i-1];\r\n                }\r\n                distance = Math.sqrt(Math.pow(currentV[0]-closerV[0],2)+Math.pow(currentV[1]-closerV[1],2));\r\n                newPosPerc = distance ? Math.min(distance/2,round)/distance : 0;\r\n                vX = iX = currentV[0]+(closerV[0]-currentV[0])*newPosPerc;\r\n                vY = iY = currentV[1]-(currentV[1]-closerV[1])*newPosPerc;\r\n                oX = vX-(vX-currentV[0])*roundCorner;\r\n                oY = vY-(vY-currentV[1])*roundCorner;\r\n                cloned_path.setTripleAt(vX,vY,oX,oY,iX,iY,index);\r\n                index += 1;\r\n\r\n                if(i === len - 1){\r\n                    closerV = path.v[0];\r\n                } else {\r\n                    closerV = path.v[i+1];\r\n                }\r\n                distance = Math.sqrt(Math.pow(currentV[0]-closerV[0],2)+Math.pow(currentV[1]-closerV[1],2));\r\n                newPosPerc = distance ? Math.min(distance/2,round)/distance : 0;\r\n                vX = oX = currentV[0]+(closerV[0]-currentV[0])*newPosPerc;\r\n                vY = oY = currentV[1]+(closerV[1]-currentV[1])*newPosPerc;\r\n                iX = vX-(vX-currentV[0])*roundCorner;\r\n                iY = vY-(vY-currentV[1])*roundCorner;\r\n                cloned_path.setTripleAt(vX,vY,oX,oY,iX,iY,index);\r\n                index += 1;\r\n            }\r\n        } else {\r\n            cloned_path.setTripleAt(path.v[i][0],path.v[i][1],path.o[i][0],path.o[i][1],path.i[i][0],path.i[i][1],index);\r\n            index += 1;\r\n        }\r\n    }\r\n    return cloned_path;\r\n};\r\n\r\nRoundCornersModifier.prototype.processShapes = function(_isFirstFrame){\r\n    var shapePaths;\r\n    var i, len = this.shapes.length;\r\n    var j, jLen;\r\n    var rd = this.rd.v;\r\n\r\n    if(rd !== 0){\r\n        var shapeData, newPaths, localShapeCollection;\r\n        for(i=0;i<len;i+=1){\r\n            shapeData = this.shapes[i];\r\n            newPaths = shapeData.shape.paths;\r\n            localShapeCollection = shapeData.localShapeCollection;\r\n            if(!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)){\r\n                localShapeCollection.releaseShapes();\r\n                shapeData.shape._mdf = true;\r\n                shapePaths = shapeData.shape.paths.shapes;\r\n                jLen = shapeData.shape.paths._length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    localShapeCollection.addShape(this.processPath(shapePaths[j],rd));\r\n                }\r\n            }\r\n            shapeData.shape.paths = shapeData.localShapeCollection;\r\n        }\r\n\r\n    }\r\n    if(!this.dynamicProperties.length){\r\n        this._mdf = false;\r\n    }\r\n};\r\n\r\nShapeModifiers.registerModifier('rd',RoundCornersModifier);\r\nfunction RepeaterModifier(){}\r\nextendPrototype([ShapeModifier], RepeaterModifier);\r\n\r\nRepeaterModifier.prototype.initModifierProperties = function(elem,data){\r\n    this.getValue = this.processKeys;\r\n    this.c = PropertyFactory.getProp(elem,data.c,0,null,this.dynamicProperties);\r\n    this.o = PropertyFactory.getProp(elem,data.o,0,null,this.dynamicProperties);\r\n    this.tr = TransformPropertyFactory.getTransformProperty(elem,data.tr,this.dynamicProperties);\r\n    this.data = data;\r\n    if(!this.dynamicProperties.length){\r\n        this.getValue(true);\r\n    }\r\n    this.pMatrix = new Matrix();\r\n    this.rMatrix = new Matrix();\r\n    this.sMatrix = new Matrix();\r\n    this.tMatrix = new Matrix();\r\n    this.matrix = new Matrix();\r\n};\r\n\r\nRepeaterModifier.prototype.applyTransforms = function(pMatrix, rMatrix, sMatrix, transform, perc, inv){\r\n    var dir = inv ? -1 : 1;\r\n    var scaleX = transform.s.v[0] + (1 - transform.s.v[0]) * (1 - perc);\r\n    var scaleY = transform.s.v[1] + (1 - transform.s.v[1]) * (1 - perc);\r\n    pMatrix.translate(transform.p.v[0] * dir * perc, transform.p.v[1] * dir * perc, transform.p.v[2]);\r\n    rMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\r\n    rMatrix.rotate(-transform.r.v * dir * perc);\r\n    rMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\r\n    sMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\r\n    sMatrix.scale(inv ? 1/scaleX : scaleX, inv ? 1/scaleY : scaleY);\r\n    sMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\r\n};\r\n\r\nRepeaterModifier.prototype.init = function(elem, arr, pos, elemsData, dynamicProperties) {\r\n    this.elem = elem;\r\n    this.arr = arr;\r\n    this.pos = pos;\r\n    this.elemsData = elemsData;\r\n    this._currentCopies = 0;\r\n    this._elements = [];\r\n    this._groups = [];\r\n    this.dynamicProperties = [];\r\n    this.frameId = -1;\r\n    this.initModifierProperties(elem,arr[pos]);\r\n    var cont = 0;\r\n    while(pos>0){\r\n        pos -= 1;\r\n        //this._elements.unshift(arr.splice(pos,1)[0]);\r\n        this._elements.unshift(arr[pos]);\r\n        cont += 1;\r\n    }\r\n    if(this.dynamicProperties.length){\r\n        this.k = true;\r\n        dynamicProperties.push(this);\r\n    }else{\r\n        this.getValue(true);\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.resetElements = function(elements){\r\n    var i, len = elements.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        elements[i]._processed = false;\r\n        if(elements[i].ty === 'gr'){\r\n            this.resetElements(elements[i].it);\r\n        }\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.cloneElements = function(elements){\r\n    var i, len = elements.length;\r\n    var newElements = JSON.parse(JSON.stringify(elements));\r\n    this.resetElements(newElements);\r\n    return newElements;\r\n};\r\n\r\nRepeaterModifier.prototype.changeGroupRender = function(elements, renderFlag) {\r\n    var i, len = elements.length;\r\n    for(i = 0; i < len ; i += 1) {\r\n        elements[i]._render = renderFlag;\r\n        if(elements[i].ty === 'gr') {\r\n            this.changeGroupRender(elements[i].it, renderFlag);\r\n        }\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.processShapes = function(_isFirstFrame) {\r\n    var items, itemsTransform, i, dir, cont;\r\n    if(this._mdf || _isFirstFrame){\r\n        var copies = Math.ceil(this.c.v);\r\n        if(this._groups.length < copies){\r\n            while(this._groups.length < copies){\r\n                var group = {\r\n                    it:this.cloneElements(this._elements),\r\n                    ty:'gr'\r\n                };\r\n                group.it.push({\"a\":{\"a\":0,\"ix\":1,\"k\":[0,0]},\"nm\":\"Transform\",\"o\":{\"a\":0,\"ix\":7,\"k\":100},\"p\":{\"a\":0,\"ix\":2,\"k\":[0,0]},\"r\":{\"a\":0,\"ix\":6,\"k\":0},\"s\":{\"a\":0,\"ix\":3,\"k\":[100,100]},\"sa\":{\"a\":0,\"ix\":5,\"k\":0},\"sk\":{\"a\":0,\"ix\":4,\"k\":0},\"ty\":\"tr\"});\r\n                \r\n                this.arr.splice(0,0,group);\r\n                this._groups.splice(0,0,group);\r\n                this._currentCopies += 1;\r\n            }\r\n            this.elem.reloadShapes();\r\n        }\r\n        cont = 0;\r\n        var renderFlag;\r\n        for(i = 0; i  <= this._groups.length - 1; i += 1){\r\n            renderFlag = cont < copies;\r\n            this._groups[i]._render = renderFlag;\r\n            this.changeGroupRender(this._groups[i].it, renderFlag);\r\n            cont += 1;\r\n        }\r\n        \r\n        this._currentCopies = copies;\r\n        ////\r\n\r\n        var offset = this.o.v;\r\n        var offsetModulo = offset%1;\r\n        var roundOffset = offset > 0 ? Math.floor(offset) : Math.ceil(offset);\r\n        var k;\r\n        var tMat = this.tr.v.props;\r\n        var pProps = this.pMatrix.props;\r\n        var rProps = this.rMatrix.props;\r\n        var sProps = this.sMatrix.props;\r\n        this.pMatrix.reset();\r\n        this.rMatrix.reset();\r\n        this.sMatrix.reset();\r\n        this.tMatrix.reset();\r\n        this.matrix.reset();\r\n        var iteration = 0;\r\n\r\n        if(offset > 0) {\r\n            while(iteration<roundOffset){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\r\n                iteration += 1;\r\n            }\r\n            if(offsetModulo){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, offsetModulo, false);\r\n                iteration += offsetModulo;\r\n            }\r\n        } else if(offset < 0) {\r\n            while(iteration>roundOffset){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, true);\r\n                iteration -= 1;\r\n            }\r\n            if(offsetModulo){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, - offsetModulo, true);\r\n                iteration -= offsetModulo;\r\n            }\r\n        }\r\n        i = this.data.m === 1 ? 0 : this._currentCopies - 1;\r\n        dir = this.data.m === 1 ? 1 : -1;\r\n        cont = this._currentCopies;\r\n        var j, jLen;\r\n        while(cont){\r\n            items = this.elemsData[i].it;\r\n            itemsTransform = items[items.length - 1].transform.mProps.v.props;\r\n            jLen = itemsTransform.length;\r\n            items[items.length - 1].transform.mProps._mdf = true;\r\n            items[items.length - 1].transform.op._mdf = true;\r\n            if(iteration !== 0){\r\n                if((i !== 0 && dir === 1) || (i !== this._currentCopies - 1 && dir === -1)){\r\n                    this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\r\n                }\r\n                this.matrix.transform(rProps[0],rProps[1],rProps[2],rProps[3],rProps[4],rProps[5],rProps[6],rProps[7],rProps[8],rProps[9],rProps[10],rProps[11],rProps[12],rProps[13],rProps[14],rProps[15]);\r\n                this.matrix.transform(sProps[0],sProps[1],sProps[2],sProps[3],sProps[4],sProps[5],sProps[6],sProps[7],sProps[8],sProps[9],sProps[10],sProps[11],sProps[12],sProps[13],sProps[14],sProps[15]);\r\n                this.matrix.transform(pProps[0],pProps[1],pProps[2],pProps[3],pProps[4],pProps[5],pProps[6],pProps[7],pProps[8],pProps[9],pProps[10],pProps[11],pProps[12],pProps[13],pProps[14],pProps[15]);\r\n                \r\n                for(j=0;j<jLen;j+=1) {\r\n                    itemsTransform[j] = this.matrix.props[j];\r\n                }\r\n                this.matrix.reset();\r\n            } else {\r\n                this.matrix.reset();\r\n                for(j=0;j<jLen;j+=1) {\r\n                    itemsTransform[j] = this.matrix.props[j];\r\n                }\r\n            }\r\n            iteration += 1;\r\n            cont -= 1;\r\n            i += dir;\r\n        }\r\n    } else {\r\n        cont = this._currentCopies;\r\n        i = 0;\r\n        dir = 1;\r\n        while(cont){\r\n            items = this.elemsData[i].it;\r\n            itemsTransform = items[items.length - 1].transform.mProps.v.props;\r\n            items[items.length - 1].transform.mProps._mdf = false;\r\n            items[items.length - 1].transform.op._mdf = false;\r\n            cont -= 1;\r\n            i += dir;\r\n        }\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.addShape = function(){};\r\n\r\nShapeModifiers.registerModifier('rp',RepeaterModifier);\r\nfunction ShapeCollection(){\r\n\tthis._length = 0;\r\n\tthis._maxLength = 4;\r\n\tthis.shapes = createSizedArray(this._maxLength);\r\n}\r\n\r\nShapeCollection.prototype.addShape = function(shapeData){\r\n\tif(this._length === this._maxLength){\r\n\t\tthis.shapes = this.shapes.concat(createSizedArray(this._maxLength));\r\n\t\tthis._maxLength *= 2;\r\n\t}\r\n\tthis.shapes[this._length] = shapeData;\r\n\tthis._length += 1;\r\n};\r\n\r\nShapeCollection.prototype.releaseShapes = function(){\r\n\tvar i;\r\n\tfor(i = 0; i < this._length; i += 1) {\r\n\t\tshape_pool.release(this.shapes[i]);\r\n\t}\r\n\tthis._length = 0;\r\n};\r\nfunction DashProperty(elem, data, renderer, dynamicProperties) {\r\n    this.elem = elem;\r\n    this.frameId = -1;\r\n    this.dataProps = createSizedArray(data.length);\r\n    this.renderer = renderer;\r\n    this._mdf = false;\r\n    this.k = false;\r\n    this.dashStr = '';\r\n    this.dashArray = createTypedArray('float32',  data.length - 1);\r\n    this.dashoffset = createTypedArray('float32',  1);\r\n    var i, len = data.length, prop;\r\n    for(i=0;i<len;i+=1){\r\n        prop = PropertyFactory.getProp(elem,data[i].v,0, 0, dynamicProperties);\r\n        this.k = prop.k ? true : this.k;\r\n        this.dataProps[i] = {n:data[i].n,p:prop};\r\n    }\r\n    if(this.k){\r\n        dynamicProperties.push(this);\r\n    }else{\r\n        this.getValue(true);\r\n    }\r\n}\r\n\r\nDashProperty.prototype.getValue = function(forceRender) {\r\n    if(this.elem.globalData.frameId === this.frameId && !forceRender){\r\n        return;\r\n    }\r\n    var i = 0, len = this.dataProps.length;\r\n    this._mdf = false;\r\n    this.frameId = this.elem.globalData.frameId;\r\n    while(i<len){\r\n        if(this.dataProps[i].p._mdf){\r\n            this._mdf = !forceRender;\r\n            break;\r\n        }\r\n        i+=1;\r\n    }\r\n    if(this._mdf || forceRender){\r\n        if(this.renderer === 'svg') {\r\n            this.dashStr = '';\r\n        }\r\n        for(i=0;i<len;i+=1){\r\n            if(this.dataProps[i].n != 'o'){\r\n                if(this.renderer === 'svg') {\r\n                    this.dashStr += ' ' + this.dataProps[i].p.v;\r\n                }else{\r\n                    this.dashArray[i] = this.dataProps[i].p.v;\r\n                }\r\n            }else{\r\n                this.dashoffset[0] = this.dataProps[i].p.v;\r\n            }\r\n        }\r\n    }\r\n};\r\nfunction GradientProperty(elem,data,arr){\r\n    this.prop = PropertyFactory.getProp(elem,data.k,1,null,[]);\r\n    this.data = data;\r\n    this.k = this.prop.k;\r\n    this.c = createTypedArray('uint8c', data.p*4);\r\n    var cLength = data.k.k[0].s ? (data.k.k[0].s.length - data.p*4) : data.k.k.length - data.p*4;\r\n    this.o = createTypedArray('float32', cLength);\r\n    this._cmdf = false;\r\n    this._omdf = false;\r\n    this._collapsable = this.checkCollapsable();\r\n    this._hasOpacity = cLength;\r\n    this._mdf = false;\r\n    if(this.prop.k){\r\n        arr.push(this);\r\n    }\r\n    this.getValue(true);\r\n}\r\n\r\nGradientProperty.prototype.comparePoints = function(values, points) {\r\n    var i = 0, len = this.o.length/2, diff;\r\n    while(i < len) {\r\n        diff = Math.abs(values[i*4] - values[points*4 + i*2]);\r\n        if(diff > 0.01){\r\n            return false;\r\n        }\r\n        i += 1;\r\n    }\r\n    return true;\r\n};\r\n\r\nGradientProperty.prototype.checkCollapsable = function() {\r\n    if (this.o.length/2 !== this.c.length/4) {\r\n        return false;\r\n    }\r\n    if (this.data.k.k[0].s) {\r\n        var i = 0, len = this.data.k.k.length;\r\n        while (i < len) {\r\n            if (!this.comparePoints(this.data.k.k[i].s, this.data.p)) {\r\n                return false;\r\n            }\r\n            i += 1;\r\n        }\r\n    } else if(!this.comparePoints(this.data.k.k, this.data.p)) {\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\n\r\nGradientProperty.prototype.getValue = function(forceRender){\r\n    this.prop.getValue();\r\n    this._mdf = false;\r\n    this._cmdf = false;\r\n    this._omdf = false;\r\n    if(this.prop._mdf || forceRender){\r\n        var i, len = this.data.p*4;\r\n        var mult, val;\r\n        for(i=0;i<len;i+=1){\r\n            mult = i%4 === 0 ? 100 : 255;\r\n            val = Math.round(this.prop.v[i]*mult);\r\n            if(this.c[i] !== val){\r\n                this.c[i] = val;\r\n                this._cmdf = !forceRender;\r\n            }\r\n        }\r\n        if(this.o.length){\r\n            len = this.prop.v.length;\r\n            for(i=this.data.p*4;i<len;i+=1){\r\n                mult = i%2 === 0 ? 100 : 1;\r\n                val = i%2 === 0 ?  Math.round(this.prop.v[i]*100):this.prop.v[i];\r\n                if(this.o[i-this.data.p*4] !== val){\r\n                    this.o[i-this.data.p*4] = val;\r\n                    this._omdf = !forceRender;\r\n                }\r\n            }\r\n        }\r\n        this._mdf = !forceRender;\r\n    }\r\n};\r\nvar ImagePreloader = (function(){\r\n\r\n    function imageLoaded(){\r\n        this.loadedAssets += 1;\r\n        if(this.loadedAssets === this.totalImages){\r\n            if(this.imagesLoadedCb) {\r\n                this.imagesLoadedCb(null);\r\n            }\r\n        }\r\n    }\r\n\r\n    function getAssetsPath(assetData){\r\n        var path = '';\r\n        if(this.assetsPath){\r\n            var imagePath = assetData.p;\r\n            if(imagePath.indexOf('images/') !== -1){\r\n                imagePath = imagePath.split('/')[1];\r\n            }\r\n            path = this.assetsPath + imagePath;\r\n        } else {\r\n            path = this.path;\r\n            path += assetData.u ? assetData.u : '';\r\n            path += assetData.p;\r\n        }\r\n        return path;\r\n    }\r\n\r\n    function loadImage(path){\r\n        var img = createTag('img');\r\n        img.addEventListener('load', imageLoaded.bind(this), false);\r\n        img.addEventListener('error', imageLoaded.bind(this), false);\r\n        img.src = path;\r\n    }\r\n    function loadAssets(assets, cb){\r\n        this.imagesLoadedCb = cb;\r\n        this.totalAssets = assets.length;\r\n        var i;\r\n        for(i=0;i<this.totalAssets;i+=1){\r\n            if(!assets[i].layers){\r\n                loadImage.bind(this)(getAssetsPath.bind(this)(assets[i]));\r\n                this.totalImages += 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    function setPath(path){\r\n        this.path = path || '';\r\n    }\r\n\r\n    function setAssetsPath(path){\r\n        this.assetsPath = path || '';\r\n    }\r\n\r\n    function destroy() {\r\n        this.imagesLoadedCb = null;\r\n    }\r\n\r\n    return function ImagePreloader(){\r\n        this.loadAssets = loadAssets;\r\n        this.setAssetsPath = setAssetsPath;\r\n        this.setPath = setPath;\r\n        this.destroy = destroy;\r\n        this.assetsPath = '';\r\n        this.path = '';\r\n        this.totalAssets = 0;\r\n        this.totalImages = 0;\r\n        this.loadedAssets = 0;\r\n        this.imagesLoadedCb = null;\r\n    };\r\n}());\r\nvar featureSupport = (function(){\r\n\tvar ob = {\r\n\t\tmaskType: true\r\n\t};\r\n\tif (/MSIE 10/i.test(navigator.userAgent) || /MSIE 9/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /Edge\\/\\d./i.test(navigator.userAgent)) {\r\n\t   ob.maskType = false;\r\n\t}\r\n\treturn ob;\r\n}());\r\nvar filtersFactory = (function(){\r\n\tvar ob = {};\r\n\tob.createFilter = createFilter;\r\n\tob.createAlphaToLuminanceFilter = createAlphaToLuminanceFilter;\r\n\r\n\tfunction createFilter(filId){\r\n        \tvar fil = createNS('filter');\r\n        \tfil.setAttribute('id',filId);\r\n                fil.setAttribute('filterUnits','objectBoundingBox');\r\n                fil.setAttribute('x','0%');\r\n                fil.setAttribute('y','0%');\r\n                fil.setAttribute('width','100%');\r\n                fil.setAttribute('height','100%');\r\n                return fil;\r\n\t}\r\n\r\n\tfunction createAlphaToLuminanceFilter(){\r\n                var feColorMatrix = createNS('feColorMatrix');\r\n                feColorMatrix.setAttribute('type','matrix');\r\n                feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n                feColorMatrix.setAttribute('values','0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1');\r\n                return feColorMatrix;\r\n\t}\r\n\r\n\treturn ob;\r\n}());\r\nfunction TextAnimatorProperty(textData, renderType, elem){\r\n    this._mdf = false;\r\n    this._isFirstFrame = true;\r\n\tthis._hasMaskedPath = false;\r\n\tthis._frameId = -1;\r\n\tthis._dynamicProperties = [];\r\n\tthis._textData = textData;\r\n\tthis._renderType = renderType;\r\n\tthis._elem = elem;\r\n\tthis._animatorsData = createSizedArray(this._textData.a.length);\r\n\tthis._pathData = {};\r\n\tthis._moreOptions = {\r\n\t\talignment: {}\r\n\t};\r\n\tthis.renderedLetters = [];\r\n    this.lettersChangedFlag = false;\r\n\r\n}\r\n\r\nTextAnimatorProperty.prototype.searchProperties = function(dynamicProperties){\r\n    var i, len = this._textData.a.length, animatorProps;\r\n    var getProp = PropertyFactory.getProp;\r\n    for(i=0;i<len;i+=1){\r\n        animatorProps = this._textData.a[i];\r\n        this._animatorsData[i] = new TextAnimatorDataProperty(this._elem, animatorProps, this._dynamicProperties);\r\n    }\r\n    if(this._textData.p && 'm' in this._textData.p){\r\n        this._pathData = {\r\n            f: getProp(this._elem,this._textData.p.f,0,0,this._dynamicProperties),\r\n            l: getProp(this._elem,this._textData.p.l,0,0,this._dynamicProperties),\r\n            r: this._textData.p.r,\r\n            m: this._elem.maskManager.getMaskProperty(this._textData.p.m)\r\n        };\r\n        this._hasMaskedPath = true;\r\n    } else {\r\n        this._hasMaskedPath = false;\r\n    }\r\n    this._moreOptions.alignment = getProp(this._elem,this._textData.m.a,1,0,this._dynamicProperties);\r\n    if(this._dynamicProperties.length) {\r\n    \tdynamicProperties.push(this);\r\n    }\r\n};\r\n\r\nTextAnimatorProperty.prototype.getMeasures = function(documentData, lettersChangedFlag){\r\n    this.lettersChangedFlag = lettersChangedFlag;\r\n    if(!this._mdf && !this._isFirstFrame && !lettersChangedFlag && (!this._hasMaskedPath || !this._pathData.m._mdf)) {\r\n        return;\r\n    }\r\n    this._isFirstFrame = false;\r\n    var alignment = this._moreOptions.alignment.v;\r\n    var animators = this._animatorsData;\r\n    var textData = this._textData;\r\n    var matrixHelper = this.mHelper;\r\n    var renderType = this._renderType;\r\n    var renderedLettersCount = this.renderedLetters.length;\r\n    var data = this.data;\r\n    var xPos,yPos;\r\n    var i, len;\r\n    var letters = documentData.l, pathInfo, currentLength, currentPoint, segmentLength, flag, pointInd, segmentInd, prevPoint, points, segments, partialLength, totalLength, perc, tanAngle, mask;\r\n    if(this._hasMaskedPath) {\r\n        mask = this._pathData.m;\r\n        if(!this._pathData.n || this._pathData._mdf){\r\n            var paths = mask.v;\r\n            if(this._pathData.r){\r\n                paths = paths.reverse();\r\n            }\r\n            // TODO: release bezier data cached from previous pathInfo: this._pathData.pi\r\n            pathInfo = {\r\n                tLength: 0,\r\n                segments: []\r\n            };\r\n            len = paths._length - 1;\r\n            var pathData;\r\n            totalLength = 0;\r\n            for (i = 0; i < len; i += 1) {\r\n                pathData = {\r\n                    s: paths.v[i],\r\n                    e: paths.v[i + 1],\r\n                    to: [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]],\r\n                    ti: [paths.i[i + 1][0] - paths.v[i + 1][0], paths.i[i + 1][1] - paths.v[i + 1][1]]\r\n                };\r\n                bez.buildBezierData(pathData);\r\n                pathInfo.tLength += pathData.bezierData.segmentLength;\r\n                pathInfo.segments.push(pathData);\r\n                totalLength += pathData.bezierData.segmentLength;\r\n            }\r\n            i = len;\r\n            if (mask.v.c) {\r\n                pathData = {\r\n                    s: paths.v[i],\r\n                    e: paths.v[0],\r\n                    to: [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]],\r\n                    ti: [paths.i[0][0] - paths.v[0][0], paths.i[0][1] - paths.v[0][1]]\r\n                };\r\n                bez.buildBezierData(pathData);\r\n                pathInfo.tLength += pathData.bezierData.segmentLength;\r\n                pathInfo.segments.push(pathData);\r\n                totalLength += pathData.bezierData.segmentLength;\r\n            }\r\n            this._pathData.pi = pathInfo;\r\n        }\r\n        pathInfo = this._pathData.pi;\r\n\r\n        currentLength = this._pathData.f.v;\r\n        segmentInd = 0;\r\n        pointInd = 1;\r\n        segmentLength = 0;\r\n        flag = true;\r\n        segments = pathInfo.segments;\r\n        if (currentLength < 0 && mask.v.c) {\r\n            if (pathInfo.tLength < Math.abs(currentLength)) {\r\n                currentLength = -Math.abs(currentLength) % pathInfo.tLength;\r\n            }\r\n            segmentInd = segments.length - 1;\r\n            points = segments[segmentInd].bezierData.points;\r\n            pointInd = points.length - 1;\r\n            while (currentLength < 0) {\r\n                currentLength += points[pointInd].partialLength;\r\n                pointInd -= 1;\r\n                if (pointInd < 0) {\r\n                    segmentInd -= 1;\r\n                    points = segments[segmentInd].bezierData.points;\r\n                    pointInd = points.length - 1;\r\n                }\r\n            }\r\n\r\n        }\r\n        points = segments[segmentInd].bezierData.points;\r\n        prevPoint = points[pointInd - 1];\r\n        currentPoint = points[pointInd];\r\n        partialLength = currentPoint.partialLength;\r\n    }\r\n\r\n\r\n    len = letters.length;\r\n    xPos = 0;\r\n    yPos = 0;\r\n    var yOff = documentData.finalSize * 1.2 * 0.714;\r\n    var firstLine = true;\r\n    var animatorProps, animatorSelector;\r\n    var j, jLen;\r\n    var letterValue;\r\n\r\n    jLen = animators.length;\r\n    var lastLetter;\r\n\r\n    var mult, ind = -1, offf, xPathPos, yPathPos;\r\n    var initPathPos = currentLength,initSegmentInd = segmentInd, initPointInd = pointInd, currentLine = -1;\r\n    var elemOpacity;\r\n    var sc,sw,fc,k;\r\n    var lineLength = 0;\r\n    var letterSw,letterSc,letterFc,letterM = '',letterP = this.defaultPropsArray,letterO;\r\n    for( i = 0; i < len; i += 1) {\r\n        matrixHelper.reset();\r\n        elemOpacity = 1;\r\n        if(letters[i].n) {\r\n            xPos = 0;\r\n            yPos += documentData.yOffset;\r\n            yPos += firstLine ? 1 : 0;\r\n            currentLength = initPathPos ;\r\n            firstLine = false;\r\n            lineLength = 0;\r\n            if(this._hasMaskedPath) {\r\n                segmentInd = initSegmentInd;\r\n                pointInd = initPointInd;\r\n                points = segments[segmentInd].bezierData.points;\r\n                prevPoint = points[pointInd - 1];\r\n                currentPoint = points[pointInd];\r\n                partialLength = currentPoint.partialLength;\r\n                segmentLength = 0;\r\n            }\r\n            letterO = letterSw = letterFc = letterM = '';\r\n            letterP = this.defaultPropsArray;\r\n        }else{\r\n            if(this._hasMaskedPath) {\r\n                if(currentLine !== letters[i].line){\r\n                    switch(documentData.j){\r\n                        case 1:\r\n                            currentLength += totalLength - documentData.lineWidths[letters[i].line];\r\n                            break;\r\n                        case 2:\r\n                            currentLength += (totalLength - documentData.lineWidths[letters[i].line])/2;\r\n                            break;\r\n                    }\r\n                    currentLine = letters[i].line;\r\n                }\r\n                if (ind !== letters[i].ind) {\r\n                    if (letters[ind]) {\r\n                        currentLength += letters[ind].extra;\r\n                    }\r\n                    currentLength += letters[i].an / 2;\r\n                    ind = letters[i].ind;\r\n                }\r\n                currentLength += alignment[0] * letters[i].an / 200;\r\n                var animatorOffset = 0;\r\n                for (j = 0; j < jLen; j += 1) {\r\n                    animatorProps = animators[j].a;\r\n                    if (animatorProps.p.propType) {\r\n                        animatorSelector = animators[j].s;\r\n                        mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                        if(mult.length){\r\n                            animatorOffset += animatorProps.p.v[0] * mult[0];\r\n                        } else{\r\n                            animatorOffset += animatorProps.p.v[0] * mult;\r\n                        }\r\n\r\n                    }\r\n                    if (animatorProps.a.propType) {\r\n                        animatorSelector = animators[j].s;\r\n                        mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                        if(mult.length){\r\n                            animatorOffset += animatorProps.a.v[0] * mult[0];\r\n                        } else{\r\n                            animatorOffset += animatorProps.a.v[0] * mult;\r\n                        }\r\n\r\n                    }\r\n                }\r\n                flag = true;\r\n                while (flag) {\r\n                    if (segmentLength + partialLength >= currentLength + animatorOffset || !points) {\r\n                        perc = (currentLength + animatorOffset - segmentLength) / currentPoint.partialLength;\r\n                        xPathPos = prevPoint.point[0] + (currentPoint.point[0] - prevPoint.point[0]) * perc;\r\n                        yPathPos = prevPoint.point[1] + (currentPoint.point[1] - prevPoint.point[1]) * perc;\r\n                        matrixHelper.translate(-alignment[0]*letters[i].an/200, -(alignment[1] * yOff / 100));\r\n                        flag = false;\r\n                    } else if (points) {\r\n                        segmentLength += currentPoint.partialLength;\r\n                        pointInd += 1;\r\n                        if (pointInd >= points.length) {\r\n                            pointInd = 0;\r\n                            segmentInd += 1;\r\n                            if (!segments[segmentInd]) {\r\n                                if (mask.v.c) {\r\n                                    pointInd = 0;\r\n                                    segmentInd = 0;\r\n                                    points = segments[segmentInd].bezierData.points;\r\n                                } else {\r\n                                    segmentLength -= currentPoint.partialLength;\r\n                                    points = null;\r\n                                }\r\n                            } else {\r\n                                points = segments[segmentInd].bezierData.points;\r\n                            }\r\n                        }\r\n                        if (points) {\r\n                            prevPoint = currentPoint;\r\n                            currentPoint = points[pointInd];\r\n                            partialLength = currentPoint.partialLength;\r\n                        }\r\n                    }\r\n                }\r\n                offf = letters[i].an / 2 - letters[i].add;\r\n                matrixHelper.translate(-offf, 0, 0);\r\n            } else {\r\n                offf = letters[i].an/2 - letters[i].add;\r\n                matrixHelper.translate(-offf,0,0);\r\n\r\n                // Grouping alignment\r\n                matrixHelper.translate(-alignment[0]*letters[i].an/200, -alignment[1]*yOff/100, 0);\r\n            }\r\n\r\n            lineLength += letters[i].l/2;\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if (animatorProps.t.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    if(this._hasMaskedPath) {\r\n                        if(mult.length) {\r\n                            currentLength += animatorProps.t*mult[0];\r\n                        } else {\r\n                            currentLength += animatorProps.t*mult;\r\n                        }\r\n                    }else{\r\n                        if(mult.length) {\r\n                            xPos += animatorProps.t.v*mult[0];\r\n                        } else {\r\n                            xPos += animatorProps.t.v*mult;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            lineLength += letters[i].l/2;\r\n            if(documentData.strokeWidthAnim) {\r\n                sw = documentData.sw || 0;\r\n            }\r\n            if(documentData.strokeColorAnim) {\r\n                if(documentData.sc){\r\n                    sc = [documentData.sc[0], documentData.sc[1], documentData.sc[2]];\r\n                }else{\r\n                    sc = [0,0,0];\r\n                }\r\n            }\r\n            if(documentData.fillColorAnim && documentData.fc) {\r\n                fc = [documentData.fc[0], documentData.fc[1], documentData.fc[2]];\r\n            }\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if (animatorProps.a.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n\r\n                    if(mult.length){\r\n                        matrixHelper.translate(-animatorProps.a.v[0]*mult[0], -animatorProps.a.v[1]*mult[1], animatorProps.a.v[2]*mult[2]);\r\n                    } else {\r\n                        matrixHelper.translate(-animatorProps.a.v[0]*mult, -animatorProps.a.v[1]*mult, animatorProps.a.v[2]*mult);\r\n                    }\r\n                }\r\n            }\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if (animatorProps.s.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    if(mult.length){\r\n                        matrixHelper.scale(1+((animatorProps.s.v[0]-1)*mult[0]),1+((animatorProps.s.v[1]-1)*mult[1]),1);\r\n                    } else {\r\n                        matrixHelper.scale(1+((animatorProps.s.v[0]-1)*mult),1+((animatorProps.s.v[1]-1)*mult),1);\r\n                    }\r\n                }\r\n            }\r\n            for(j=0;j<jLen;j+=1) {\r\n                animatorProps = animators[j].a;\r\n                animatorSelector = animators[j].s;\r\n                mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                if (animatorProps.sk.propType) {\r\n                    if(mult.length) {\r\n                        matrixHelper.skewFromAxis(-animatorProps.sk.v * mult[0], animatorProps.sa.v * mult[1]);\r\n                    } else {\r\n                        matrixHelper.skewFromAxis(-animatorProps.sk.v * mult, animatorProps.sa.v * mult);\r\n                    }\r\n                }\r\n                if (animatorProps.r.propType) {\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateZ(-animatorProps.r.v * mult[2]);\r\n                    } else {\r\n                        matrixHelper.rotateZ(-animatorProps.r.v * mult);\r\n                    }\r\n                }\r\n                if (animatorProps.ry.propType) {\r\n\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateY(animatorProps.ry.v*mult[1]);\r\n                    }else{\r\n                        matrixHelper.rotateY(animatorProps.ry.v*mult);\r\n                    }\r\n                }\r\n                if (animatorProps.rx.propType) {\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateX(animatorProps.rx.v*mult[0]);\r\n                    } else {\r\n                        matrixHelper.rotateX(animatorProps.rx.v*mult);\r\n                    }\r\n                }\r\n                if (animatorProps.o.propType) {\r\n                    if(mult.length) {\r\n                        elemOpacity += ((animatorProps.o.v)*mult[0] - elemOpacity)*mult[0];\r\n                    } else {\r\n                        elemOpacity += ((animatorProps.o.v)*mult - elemOpacity)*mult;\r\n                    }\r\n                }\r\n                if (documentData.strokeWidthAnim && animatorProps.sw.propType) {\r\n                    if(mult.length) {\r\n                        sw += animatorProps.sw.v*mult[0];\r\n                    } else {\r\n                        sw += animatorProps.sw.v*mult;\r\n                    }\r\n                }\r\n                if (documentData.strokeColorAnim && animatorProps.sc.propType) {\r\n                    for(k=0;k<3;k+=1){\r\n                        if(mult.length) {\r\n                            sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k])*mult[0];\r\n                        } else {\r\n                            sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k])*mult;\r\n                        }\r\n                    }\r\n                }\r\n                if (documentData.fillColorAnim && documentData.fc) {\r\n                    if(animatorProps.fc.propType){\r\n                        for(k=0;k<3;k+=1){\r\n                            if(mult.length) {\r\n                                fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k])*mult[0];\r\n                            } else {\r\n                                fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k])*mult;\r\n                            }\r\n                        }\r\n                    }\r\n                    if(animatorProps.fh.propType){\r\n                        if(mult.length) {\r\n                            fc = addHueToRGB(fc,animatorProps.fh.v*mult[0]);\r\n                        } else {\r\n                            fc = addHueToRGB(fc,animatorProps.fh.v*mult);\r\n                        }\r\n                    }\r\n                    if(animatorProps.fs.propType){\r\n                        if(mult.length) {\r\n                            fc = addSaturationToRGB(fc,animatorProps.fs.v*mult[0]);\r\n                        } else {\r\n                            fc = addSaturationToRGB(fc,animatorProps.fs.v*mult);\r\n                        }\r\n                    }\r\n                    if(animatorProps.fb.propType){\r\n                        if(mult.length) {\r\n                            fc = addBrightnessToRGB(fc,animatorProps.fb.v*mult[0]);\r\n                        } else {\r\n                            fc = addBrightnessToRGB(fc,animatorProps.fb.v*mult);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n\r\n                if (animatorProps.p.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    if(this._hasMaskedPath) {\r\n                        if(mult.length) {\r\n                            matrixHelper.translate(0, animatorProps.p.v[1] * mult[0], -animatorProps.p.v[2] * mult[1]);\r\n                        } else {\r\n                            matrixHelper.translate(0, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\r\n                        }\r\n                    }else{\r\n                        if(mult.length) {\r\n                            matrixHelper.translate(animatorProps.p.v[0] * mult[0], animatorProps.p.v[1] * mult[1], -animatorProps.p.v[2] * mult[2]);\r\n                        } else {\r\n                            matrixHelper.translate(animatorProps.p.v[0] * mult, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(documentData.strokeWidthAnim){\r\n                letterSw = sw < 0 ? 0 : sw;\r\n            }\r\n            if(documentData.strokeColorAnim){\r\n                letterSc = 'rgb('+Math.round(sc[0]*255)+','+Math.round(sc[1]*255)+','+Math.round(sc[2]*255)+')';\r\n            }\r\n            if(documentData.fillColorAnim && documentData.fc){\r\n                letterFc = 'rgb('+Math.round(fc[0]*255)+','+Math.round(fc[1]*255)+','+Math.round(fc[2]*255)+')';\r\n            }\r\n\r\n            if(this._hasMaskedPath) {\r\n                matrixHelper.translate(0,-documentData.ls);\r\n\r\n                matrixHelper.translate(0, alignment[1]*yOff/100 + yPos,0);\r\n                if (textData.p.p) {\r\n                    tanAngle = (currentPoint.point[1] - prevPoint.point[1]) / (currentPoint.point[0] - prevPoint.point[0]);\r\n                    var rot = Math.atan(tanAngle) * 180 / Math.PI;\r\n                    if (currentPoint.point[0] < prevPoint.point[0]) {\r\n                        rot += 180;\r\n                    }\r\n                    matrixHelper.rotate(-rot * Math.PI / 180);\r\n                }\r\n                matrixHelper.translate(xPathPos, yPathPos, 0);\r\n                currentLength -= alignment[0]*letters[i].an/200;\r\n                if(letters[i+1] && ind !== letters[i+1].ind){\r\n                    currentLength += letters[i].an / 2;\r\n                    currentLength += documentData.tr/1000*documentData.finalSize;\r\n                }\r\n            }else{\r\n\r\n                matrixHelper.translate(xPos,yPos,0);\r\n\r\n                if(documentData.ps){\r\n                    //matrixHelper.translate(documentData.ps[0],documentData.ps[1],0);\r\n                    matrixHelper.translate(documentData.ps[0],documentData.ps[1] + documentData.ascent,0);\r\n                }\r\n                switch(documentData.j){\r\n                    case 1:\r\n                        matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]),0,0);\r\n                        break;\r\n                    case 2:\r\n                        matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line])/2,0,0);\r\n                        break;\r\n                }\r\n                matrixHelper.translate(0,-documentData.ls);\r\n                matrixHelper.translate(offf,0,0);\r\n                matrixHelper.translate(alignment[0]*letters[i].an/200,alignment[1]*yOff/100,0);\r\n                xPos += letters[i].l + documentData.tr/1000*documentData.finalSize;\r\n            }\r\n            if(renderType === 'html'){\r\n                letterM = matrixHelper.toCSS();\r\n            }else if(renderType === 'svg'){\r\n                letterM = matrixHelper.to2dCSS();\r\n            }else{\r\n                letterP = [matrixHelper.props[0],matrixHelper.props[1],matrixHelper.props[2],matrixHelper.props[3],matrixHelper.props[4],matrixHelper.props[5],matrixHelper.props[6],matrixHelper.props[7],matrixHelper.props[8],matrixHelper.props[9],matrixHelper.props[10],matrixHelper.props[11],matrixHelper.props[12],matrixHelper.props[13],matrixHelper.props[14],matrixHelper.props[15]];\r\n            }\r\n            letterO = elemOpacity;\r\n        }\r\n\r\n        if(renderedLettersCount <= i) {\r\n            letterValue = new LetterProps(letterO,letterSw,letterSc,letterFc,letterM,letterP);\r\n            this.renderedLetters.push(letterValue);\r\n            renderedLettersCount += 1;\r\n            this.lettersChangedFlag = true;\r\n        } else {\r\n            letterValue = this.renderedLetters[i];\r\n            this.lettersChangedFlag = letterValue.update(letterO, letterSw, letterSc, letterFc, letterM, letterP) || this.lettersChangedFlag;\r\n        }\r\n    }\r\n};\r\n\r\nTextAnimatorProperty.prototype.getValue = function(){\r\n\tif(this._elem.globalData.frameId === this._frameId){\r\n        return;\r\n    }\r\n    this._frameId = this._elem.globalData.frameId;\r\n\tvar i, len = this._dynamicProperties.length;\r\n    this._mdf = false;\r\n\tfor(i = 0; i < len; i += 1) {\r\n\t\tthis._dynamicProperties[i].getValue();\r\n        this._mdf = this._dynamicProperties[i]._mdf || this._mdf;\r\n\t}\r\n};\r\n\r\nTextAnimatorProperty.prototype.mHelper = new Matrix();\r\nTextAnimatorProperty.prototype.defaultPropsArray = [];\r\nfunction TextAnimatorDataProperty(elem, animatorProps, dynamicProperties) {\r\n\tvar defaultData = {propType:false};\r\n\tvar getProp = PropertyFactory.getProp;\r\n\tvar textAnimator_animatables = animatorProps.a;\r\n\tthis.a = {\r\n\t\tr: textAnimator_animatables.r ? getProp(elem, textAnimator_animatables.r, 0, degToRads, dynamicProperties) : defaultData,\r\n\t\trx: textAnimator_animatables.rx ? getProp(elem, textAnimator_animatables.rx, 0, degToRads, dynamicProperties) : defaultData,\r\n\t\try: textAnimator_animatables.ry ? getProp(elem, textAnimator_animatables.ry, 0, degToRads, dynamicProperties) : defaultData,\r\n\t\tsk: textAnimator_animatables.sk ? getProp(elem, textAnimator_animatables.sk, 0, degToRads, dynamicProperties) : defaultData,\r\n\t\tsa: textAnimator_animatables.sa ? getProp(elem, textAnimator_animatables.sa, 0, degToRads, dynamicProperties) : defaultData,\r\n\t\ts: textAnimator_animatables.s ? getProp(elem, textAnimator_animatables.s, 1, 0.01, dynamicProperties) : defaultData,\r\n\t\ta: textAnimator_animatables.a ? getProp(elem, textAnimator_animatables.a, 1, 0, dynamicProperties) : defaultData,\r\n\t\to: textAnimator_animatables.o ? getProp(elem, textAnimator_animatables.o, 0, 0.01, dynamicProperties) : defaultData,\r\n\t\tp: textAnimator_animatables.p ? getProp(elem,textAnimator_animatables.p, 1, 0, dynamicProperties) : defaultData,\r\n\t\tsw: textAnimator_animatables.sw ? getProp(elem, textAnimator_animatables.sw, 0, 0, dynamicProperties) : defaultData,\r\n\t\tsc: textAnimator_animatables.sc ? getProp(elem, textAnimator_animatables.sc, 1, 0, dynamicProperties) : defaultData,\r\n\t\tfc: textAnimator_animatables.fc ? getProp(elem, textAnimator_animatables.fc, 1, 0, dynamicProperties) : defaultData,\r\n\t\tfh: textAnimator_animatables.fh ? getProp(elem, textAnimator_animatables.fh, 0, 0, dynamicProperties) : defaultData,\r\n\t\tfs: textAnimator_animatables.fs ? getProp(elem, textAnimator_animatables.fs, 0, 0.01, dynamicProperties) : defaultData,\r\n\t\tfb: textAnimator_animatables.fb ? getProp(elem, textAnimator_animatables.fb, 0, 0.01, dynamicProperties) : defaultData,\r\n\t\tt: textAnimator_animatables.t ? getProp(elem, textAnimator_animatables.t, 0, 0, dynamicProperties) : defaultData\r\n\t};\r\n\r\n\tthis.s = TextSelectorProp.getTextSelectorProp(elem,animatorProps.s, dynamicProperties);\r\n    this.s.t = animatorProps.s.t;\r\n}\r\nfunction LetterProps(o, sw, sc, fc, m, p){\r\n    this.o = o;\r\n    this.sw = sw;\r\n    this.sc = sc;\r\n    this.fc = fc;\r\n    this.m = m;\r\n    this.p = p;\r\n    this._mdf = {\r\n    \to: true,\r\n    \tsw: !!sw,\r\n    \tsc: !!sc,\r\n    \tfc: !!fc,\r\n    \tm: true,\r\n    \tp: true\r\n    };\r\n}\r\n\r\nLetterProps.prototype.update = function(o, sw, sc, fc, m, p) {\r\n\tthis._mdf.o = false;\r\n\tthis._mdf.sw = false;\r\n\tthis._mdf.sc = false;\r\n\tthis._mdf.fc = false;\r\n\tthis._mdf.m = false;\r\n\tthis._mdf.p = false;\r\n\tvar updated = false;\r\n\r\n\tif(this.o !== o) {\r\n\t\tthis.o = o;\r\n\t\tthis._mdf.o = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.sw !== sw) {\r\n\t\tthis.sw = sw;\r\n\t\tthis._mdf.sw = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.sc !== sc) {\r\n\t\tthis.sc = sc;\r\n\t\tthis._mdf.sc = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.fc !== fc) {\r\n\t\tthis.fc = fc;\r\n\t\tthis._mdf.fc = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.m !== m) {\r\n\t\tthis.m = m;\r\n\t\tthis._mdf.m = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(p.length && (this.p[0] !== p[0] || this.p[1] !== p[1] || this.p[4] !== p[4] || this.p[5] !== p[5] || this.p[12] !== p[12] || this.p[13] !== p[13])) {\r\n\t\tthis.p = p;\r\n\t\tthis._mdf.p = true;\r\n\t\tupdated = true;\r\n\t}\r\n\treturn updated;\r\n};\r\nfunction TextProperty(elem, data, dynamicProperties){\r\n\tthis._frameId = initialDefaultFrame;\r\n\tthis.pv = '';\r\n\tthis.v = '';\r\n\tthis.kf = false;\r\n\tthis._isFirstFrame = true;\r\n\tthis._mdf = true;\r\n\tthis.data = data;\r\n\tthis.elem = elem;\r\n\tthis.keysIndex = -1;\r\n    this.canResize = false;\r\n    this.minimumFontSize = 1;\r\n\tthis.currentData = {\r\n\t\tascent: 0,\r\n        boxWidth: [0,0],\r\n        f: '',\r\n        fStyle: '',\r\n        fWeight: '',\r\n        fc: '',\r\n        j: '',\r\n        justifyOffset: '',\r\n        l: [],\r\n        lh: 0,\r\n        lineWidths: [],\r\n        ls: '',\r\n        of: '',\r\n        s: '',\r\n        sc: '',\r\n        sw: 0,\r\n        t: 0,\r\n        tr: 0,\r\n        sz:0,\r\n        ps:[0,0],\r\n        fillColorAnim: false,\r\n        strokeColorAnim: false,\r\n        strokeWidthAnim: false,\r\n        yOffset: 0,\r\n        __complete: false,\r\n        finalSize:0,\r\n        finalText:[],\r\n        finalLineHeight: 0\r\n\r\n\t};\r\n\tif(this.searchProperty()) {\r\n\t\tdynamicProperties.push(this);\r\n\t} else {\r\n\t\tthis.getValue(true);\r\n\t}\r\n}\r\n\r\nTextProperty.prototype.setCurrentData = function(data){\r\n\t\tvar currentData = this.currentData;\r\n        currentData.ascent = data.ascent;\r\n        currentData.boxWidth = data.boxWidth ? data.boxWidth : currentData.boxWidth;\r\n        currentData.f = data.f;\r\n        currentData.fStyle = data.fStyle;\r\n        currentData.fWeight = data.fWeight;\r\n        currentData.fc = data.fc;\r\n        currentData.j = data.j;\r\n        currentData.justifyOffset = data.justifyOffset;\r\n        currentData.l = data.l;\r\n        currentData.lh = data.lh;\r\n        currentData.lineWidths = data.lineWidths;\r\n        currentData.ls = data.ls;\r\n        currentData.of = data.of;\r\n        currentData.s = data.s;\r\n        currentData.sc = data.sc;\r\n        currentData.sw = data.sw;\r\n        currentData.sz = data.sz;\r\n        currentData.ps = data.ps;\r\n        currentData.t = data.t;\r\n        currentData.tr = data.tr;\r\n        currentData.fillColorAnim = data.fillColorAnim || currentData.fillColorAnim;\r\n        currentData.strokeColorAnim = data.strokeColorAnim || currentData.strokeColorAnim;\r\n        currentData.strokeWidthAnim = data.strokeWidthAnim || currentData.strokeWidthAnim;\r\n        currentData.yOffset = data.yOffset;\r\n        currentData.finalSize = data.finalSize;\r\n        currentData.finalLineHeight = data.finalLineHeight;\r\n        currentData.finalText = data.finalText;\r\n        currentData.__complete = false;\r\n};\r\n\r\nTextProperty.prototype.searchProperty = function() {\r\n\tthis.kf = this.data.d.k.length > 1;\r\n\treturn this.kf;\r\n};\r\n\r\nTextProperty.prototype.getValue = function(_forceRender) {\r\n\tthis._mdf = false;\r\n\tvar frameId = this.elem.globalData.frameId;\r\n\tif((frameId === this._frameId || !this.kf) && !this._isFirstFrame && !_forceRender) {\r\n\t\treturn;\r\n\t}\r\n    var textKeys = this.data.d.k, textDocumentData;\r\n    var frameNum = this.elem.comp.renderedFrame;\r\n    var i = 0, len = textKeys.length;\r\n    while(i <= len - 1) {\r\n        textDocumentData = textKeys[i].s;\r\n        if(i === len - 1 || textKeys[i+1].t > frameNum){\r\n            break;\r\n        }\r\n        i += 1;\r\n    }\r\n    if(this.keysIndex !== i) {\r\n    \tif(!textDocumentData.__complete) {\r\n            this.completeTextData(textDocumentData);\r\n        }\r\n        this.setCurrentData(textDocumentData);\r\n        this._mdf = !this._isFirstFrame;\r\n        this.pv = this.v = this.currentData.t;\r\n        this.keysIndex = i;\r\n    }\r\n\tthis._frameId = frameId;\r\n};\r\n\r\nTextProperty.prototype.buildFinalText = function(text) {\r\n    var combinedCharacters = FontManager.getCombinedCharacterCodes();\r\n    var charactersArray = [];\r\n    var i = 0, len = text.length;\r\n    while (i < len) {\r\n        if (combinedCharacters.indexOf(text.charCodeAt(i)) !== -1) {\r\n            charactersArray[charactersArray.length - 1] += text.charAt(i);\r\n        } else {\r\n            charactersArray.push(text.charAt(i));\r\n        }\r\n        i += 1;\r\n    }\r\n    return charactersArray;\r\n}\r\n\r\nTextProperty.prototype.completeTextData = function(documentData) {\r\n    documentData.__complete = true;\r\n    var fontManager = this.elem.globalData.fontManager;\r\n    var data = this.data;\r\n    var letters = [];\r\n    var i, len;\r\n    var newLineFlag, index = 0, val;\r\n    var anchorGrouping = data.m.g;\r\n    var currentSize = 0, currentPos = 0, currentLine = 0, lineWidths = [];\r\n    var lineWidth = 0;\r\n    var maxLineWidth = 0;\r\n    var j, jLen;\r\n    var fontData = fontManager.getFontByName(documentData.f);\r\n    var charData, cLength = 0;\r\n    var styles = fontData.fStyle.split(' ');\r\n\r\n    var fWeight = 'normal', fStyle = 'normal';\r\n    len = styles.length;\r\n    var styleName;\r\n    for(i=0;i<len;i+=1){\r\n        styleName = styles[i].toLowerCase();\r\n        switch(styleName) {\r\n            case 'italic':\r\n            fStyle = 'italic';\r\n            break;\r\n            case 'bold':\r\n            fWeight = '700';\r\n            break;\r\n            case 'black':\r\n            fWeight = '900';\r\n            break;\r\n            case 'medium':\r\n            fWeight = '500';\r\n            break;\r\n            case 'regular':\r\n            case 'normal':\r\n            fWeight = '400';\r\n            break;\r\n            case 'light':\r\n            case 'thin':\r\n            fWeight = '200';\r\n            break;\r\n        }\r\n    }\r\n    documentData.fWeight = fontData.fWeight || fWeight;\r\n    documentData.fStyle = fStyle;\r\n    len = documentData.t.length;\r\n    documentData.finalSize = documentData.s;\r\n    documentData.finalText = this.buildFinalText(documentData.t);\r\n    documentData.finalLineHeight = documentData.lh;\r\n    var trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n    if(documentData.sz){\r\n        var flag = true;\r\n        var boxWidth = documentData.sz[0];\r\n        var boxHeight = documentData.sz[1];\r\n        var currentHeight, finalText;\r\n        while(flag) {\r\n            finalText = this.buildFinalText(documentData.t);\r\n            currentHeight = 0;\r\n            lineWidth = 0;\r\n            len = finalText.length;\r\n            trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n            var lastSpaceIndex = -1;\r\n            for(i=0;i<len;i+=1){\r\n                newLineFlag = false;\r\n                if(finalText[i] === ' '){\r\n                    lastSpaceIndex = i;\r\n                }else if(finalText[i].charCodeAt(0) === 13){\r\n                    lineWidth = 0;\r\n                    newLineFlag = true;\r\n                    currentHeight += documentData.finalLineHeight || documentData.finalSize*1.2;\r\n                }\r\n                if(fontManager.chars){\r\n                    charData = fontManager.getCharData(finalText[i], fontData.fStyle, fontData.fFamily);\r\n                    cLength = newLineFlag ? 0 : charData.w*documentData.finalSize/100;\r\n                }else{\r\n                    //tCanvasHelper.font = documentData.s + 'px '+ fontData.fFamily;\r\n                    cLength = fontManager.measureText(finalText[i], documentData.f, documentData.finalSize);\r\n                }\r\n                if(lineWidth + cLength > boxWidth && finalText[i] !== ' '){\r\n                    if(lastSpaceIndex === -1){\r\n                        len += 1;\r\n                    } else {\r\n                        i = lastSpaceIndex;\r\n                    }\r\n                    currentHeight += documentData.finalLineHeight || documentData.finalSize*1.2;\r\n                    finalText.splice(i, lastSpaceIndex === i ? 1 : 0,\"\\r\");\r\n                    //finalText = finalText.substr(0,i) + \"\\r\" + finalText.substr(i === lastSpaceIndex ? i + 1 : i);\r\n                    lastSpaceIndex = -1;\r\n                    lineWidth = 0;\r\n                }else {\r\n                    lineWidth += cLength;\r\n                    lineWidth += trackingOffset;\r\n                }\r\n            }\r\n            currentHeight += fontData.ascent*documentData.finalSize/100;\r\n            if(this.canResize && documentData.finalSize > this.minimumFontSize && boxHeight < currentHeight) {\r\n                documentData.finalSize -= 1;\r\n                documentData.finalLineHeight = documentData.finalSize * documentData.lh / documentData.s;\r\n            } else {\r\n                documentData.finalText = finalText;\r\n                len = documentData.finalText.length;\r\n                flag = false;\r\n            }\r\n        }\r\n\r\n    }\r\n    lineWidth = - trackingOffset;\r\n    cLength = 0;\r\n    var uncollapsedSpaces = 0;\r\n    var currentChar;\r\n    for (i = 0;i < len ;i += 1) {\r\n        newLineFlag = false;\r\n        currentChar = documentData.finalText[i];\r\n        if(currentChar === ' '){\r\n            val = '\\u00A0';\r\n        }else if(currentChar.charCodeAt(0) === 13){\r\n            uncollapsedSpaces = 0;\r\n            lineWidths.push(lineWidth);\r\n            maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\r\n            lineWidth = - 2 * trackingOffset;\r\n            val = '';\r\n            newLineFlag = true;\r\n            currentLine += 1;\r\n        }else{\r\n            val = documentData.finalText[i];\r\n        }\r\n        if(fontManager.chars){\r\n            charData = fontManager.getCharData(currentChar, fontData.fStyle, fontManager.getFontByName(documentData.f).fFamily);\r\n            cLength = newLineFlag ? 0 : charData.w*documentData.finalSize/100;\r\n        }else{\r\n            //var charWidth = fontManager.measureText(val, documentData.f, documentData.finalSize);\r\n            //tCanvasHelper.font = documentData.finalSize + 'px '+ fontManager.getFontByName(documentData.f).fFamily;\r\n            cLength = fontManager.measureText(val, documentData.f, documentData.finalSize);\r\n        }\r\n\r\n        //\r\n        if(currentChar === ' '){\r\n            uncollapsedSpaces += cLength + trackingOffset;\r\n        } else {\r\n            lineWidth += cLength + trackingOffset + uncollapsedSpaces;\r\n            uncollapsedSpaces = 0;\r\n        }\r\n        letters.push({l:cLength,an:cLength,add:currentSize,n:newLineFlag, anIndexes:[], val: val, line: currentLine});\r\n        if(anchorGrouping == 2){\r\n            currentSize += cLength;\r\n            if(val === '' || val === '\\u00A0' || i === len - 1){\r\n                if(val === '' || val === '\\u00A0'){\r\n                    currentSize -= cLength;\r\n                }\r\n                while(currentPos<=i){\r\n                    letters[currentPos].an = currentSize;\r\n                    letters[currentPos].ind = index;\r\n                    letters[currentPos].extra = cLength;\r\n                    currentPos += 1;\r\n                }\r\n                index += 1;\r\n                currentSize = 0;\r\n            }\r\n        }else if(anchorGrouping == 3){\r\n            currentSize += cLength;\r\n            if(val === '' || i === len - 1){\r\n                if(val === ''){\r\n                    currentSize -= cLength;\r\n                }\r\n                while(currentPos<=i){\r\n                    letters[currentPos].an = currentSize;\r\n                    letters[currentPos].ind = index;\r\n                    letters[currentPos].extra = cLength;\r\n                    currentPos += 1;\r\n                }\r\n                currentSize = 0;\r\n                index += 1;\r\n            }\r\n        }else{\r\n            letters[index].ind = index;\r\n            letters[index].extra = 0;\r\n            index += 1;\r\n        }\r\n    }\r\n    documentData.l = letters;\r\n    maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\r\n    lineWidths.push(lineWidth);\r\n    if(documentData.sz){\r\n        documentData.boxWidth = documentData.sz[0];\r\n        documentData.justifyOffset = 0;\r\n    }else{\r\n        documentData.boxWidth = maxLineWidth;\r\n        switch(documentData.j){\r\n            case 1:\r\n                documentData.justifyOffset = - documentData.boxWidth;\r\n                break;\r\n            case 2:\r\n                documentData.justifyOffset = - documentData.boxWidth/2;\r\n                break;\r\n            default:\r\n                documentData.justifyOffset = 0;\r\n        }\r\n    }\r\n    documentData.lineWidths = lineWidths;\r\n\r\n    var animators = data.a, animatorData, letterData;\r\n    jLen = animators.length;\r\n    var based, ind, indexes = [];\r\n    for(j=0;j<jLen;j+=1){\r\n        animatorData = animators[j];\r\n        if(animatorData.a.sc){\r\n            documentData.strokeColorAnim = true;\r\n        }\r\n        if(animatorData.a.sw){\r\n            documentData.strokeWidthAnim = true;\r\n        }\r\n        if(animatorData.a.fc || animatorData.a.fh || animatorData.a.fs || animatorData.a.fb){\r\n            documentData.fillColorAnim = true;\r\n        }\r\n        ind = 0;\r\n        based = animatorData.s.b;\r\n        for(i=0;i<len;i+=1){\r\n            letterData = letters[i];\r\n            letterData.anIndexes[j] = ind;\r\n            if((based == 1 && letterData.val !== '') || (based == 2 && letterData.val !== '' && letterData.val !== '\\u00A0') || (based == 3 && (letterData.n || letterData.val == '\\u00A0' || i == len - 1)) || (based == 4 && (letterData.n || i == len - 1))){\r\n                if(animatorData.s.rn === 1){\r\n                    indexes.push(ind);\r\n                }\r\n                ind += 1;\r\n            }\r\n        }\r\n        data.a[j].s.totalChars = ind;\r\n        var currentInd = -1, newInd;\r\n        if(animatorData.s.rn === 1){\r\n            for(i = 0; i < len; i += 1){\r\n                letterData = letters[i];\r\n                if(currentInd != letterData.anIndexes[j]){\r\n                    currentInd = letterData.anIndexes[j];\r\n                    newInd = indexes.splice(Math.floor(Math.random()*indexes.length),1)[0];\r\n                }\r\n                letterData.anIndexes[j] = newInd;\r\n            }\r\n        }\r\n    }\r\n    documentData.yOffset = documentData.finalLineHeight || documentData.finalSize*1.2;\r\n    documentData.ls = documentData.ls || 0;\r\n    documentData.ascent = fontData.ascent*documentData.finalSize/100;\r\n};\r\n\r\nTextProperty.prototype.updateDocumentData = function(newData, index) {\r\n\tindex = index === undefined ? this.keysIndex : index;\r\n    var dData = this.data.d.k[index].s;\r\n    for(var s in newData) {\r\n        dData[s] = newData[s];\r\n    }\r\n    this.recalculate(index);\r\n};\r\n\r\nTextProperty.prototype.recalculate = function(index) {\r\n    var dData = this.data.d.k[index].s;\r\n    dData.__complete = false;\r\n    this.keysIndex = -1;\r\n    this.getValue(true);\r\n}\r\n\r\nTextProperty.prototype.canResizeFont = function(_canResize) {\r\n    this.canResize = _canResize;\r\n    this.recalculate(this.keysIndex);\r\n};\r\n\r\nTextProperty.prototype.setMinimumFontSize = function(_fontValue) {\r\n    this.minimumFontSize = Math.floor(_fontValue) || 1;\r\n    this.recalculate(this.keysIndex);\r\n};\r\n\r\nvar TextSelectorProp = (function(){\r\n    var max = Math.max;\r\n    var min = Math.min;\r\n    var floor = Math.floor;\r\n    function updateRange(newCharsFlag){\r\n        this._mdf = newCharsFlag || false;\r\n        if(this.dynamicProperties.length){\r\n            var i, len = this.dynamicProperties.length;\r\n            for(i=0;i<len;i+=1){\r\n                this.dynamicProperties[i].getValue();\r\n                if(this.dynamicProperties[i]._mdf){\r\n                    this._mdf = true;\r\n                }\r\n            }\r\n        }\r\n        var totalChars = this.data.totalChars || this.elem.textProperty.currentData.l.length || 0;\r\n        if(newCharsFlag && this.data.r === 2) {\r\n            this.e.v = totalChars;\r\n        }\r\n        var divisor = this.data.r === 2 ? 1 : 100 / totalChars;\r\n        var o = this.o.v/divisor;\r\n        var s = this.s.v/divisor + o;\r\n        var e = (this.e.v/divisor) + o;\r\n        if(s>e){\r\n            var _s = s;\r\n            s = e;\r\n            e = _s;\r\n        }\r\n        this.finalS = s;\r\n        this.finalE = e;\r\n    }\r\n\r\n    function getMult(ind){\r\n        //var easer = bez.getEasingCurve(this.ne.v/100,0,1-this.xe.v/100,1);\r\n        var easer = BezierFactory.getBezierEasing(this.ne.v/100,0,1-this.xe.v/100,1).get;\r\n        var mult = 0;\r\n        var s = this.finalS;\r\n        var e = this.finalE;\r\n        var type = this.data.sh;\r\n        if(type == 2){\r\n            if(e === s){\r\n                mult = ind >= e ? 1 : 0;\r\n            }else{\r\n                mult = max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n            }\r\n            mult = easer(mult);\r\n        }else if(type == 3){\r\n            if(e === s){\r\n                mult = ind >= e ? 0 : 1;\r\n            }else{\r\n                mult = 1 - max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n            }\r\n\r\n            mult = easer(mult);\r\n        }else if(type == 4){\r\n            if(e === s){\r\n                mult = 0;\r\n            }else{\r\n                mult = max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n                if(mult<0.5){\r\n                    mult *= 2;\r\n                }else{\r\n                    mult = 1 - 2*(mult-0.5);\r\n                }\r\n            }\r\n            mult = easer(mult);\r\n        }else if(type == 5){\r\n            if(e === s){\r\n                mult = 0;\r\n            }else{\r\n                var tot = e - s;\r\n                /*ind += 0.5;\r\n                mult = -4/(tot*tot)*(ind*ind)+(4/tot)*ind;*/\r\n                ind = min(max(0,ind+0.5-s),e-s);\r\n                var x = -tot/2+ind;\r\n                var a = tot/2;\r\n                mult = Math.sqrt(1 - (x*x)/(a*a));\r\n            }\r\n            mult = easer(mult);\r\n        }else if(type == 6){\r\n            if(e === s){\r\n                mult = 0;\r\n            }else{\r\n                ind = min(max(0,ind+0.5-s),e-s);\r\n                mult = (1+(Math.cos((Math.PI+Math.PI*2*(ind)/(e-s)))))/2;\r\n                /*\r\n                 ind = Math.min(Math.max(s,ind),e-1);\r\n                 mult = (1+(Math.cos((Math.PI+Math.PI*2*(ind-s)/(e-1-s)))))/2;\r\n                 mult = Math.max(mult,(1/(e-1-s))/(e-1-s));*/\r\n            }\r\n            mult = easer(mult);\r\n        }else {\r\n            if(ind >= floor(s)){\r\n                if(ind-s < 0){\r\n                    mult = 1 - (s - ind);\r\n                }else{\r\n                    mult = max(0,min(e-ind,1));\r\n                }\r\n            }\r\n            mult = easer(mult);\r\n        }\r\n        return mult*this.a.v;\r\n    }\r\n\r\n    function TextSelectorProp(elem,data, arr){\r\n        this._mdf = false;\r\n        this.k = false;\r\n        this.data = data;\r\n        this.dynamicProperties = [];\r\n        this.getValue = updateRange;\r\n        this.getMult = getMult;\r\n        this.elem = elem;\r\n        this.comp = elem.comp;\r\n        this.finalS = 0;\r\n        this.finalE = 0;\r\n        this.s = PropertyFactory.getProp(elem,data.s || {k:0},0,0,this.dynamicProperties);\r\n        if('e' in data){\r\n            this.e = PropertyFactory.getProp(elem,data.e,0,0,this.dynamicProperties);\r\n        }else{\r\n            this.e = {v:100};\r\n        }\r\n        this.o = PropertyFactory.getProp(elem,data.o || {k:0},0,0,this.dynamicProperties);\r\n        this.xe = PropertyFactory.getProp(elem,data.xe || {k:0},0,0,this.dynamicProperties);\r\n        this.ne = PropertyFactory.getProp(elem,data.ne || {k:0},0,0,this.dynamicProperties);\r\n        this.a = PropertyFactory.getProp(elem,data.a,0,0.01,this.dynamicProperties);\r\n        if(this.dynamicProperties.length){\r\n            arr.push(this);\r\n        }else{\r\n            this.getValue();\r\n        }\r\n    }\r\n\r\n    function getTextSelectorProp(elem, data,arr) {\r\n        return new TextSelectorProp(elem, data, arr);\r\n    }\r\n\r\n    return {\r\n        getTextSelectorProp: getTextSelectorProp\r\n    };\r\n}());\r\n\r\n    \r\nvar pool_factory = (function() {\r\n\treturn function(initialLength, _create, _release, _clone) {\r\n\r\n\t\tvar _length = 0;\r\n\t\tvar _maxLength = initialLength;\r\n\t\tvar pool = createSizedArray(_maxLength);\r\n\r\n\t\tvar ob = {\r\n\t\t\tnewElement: newElement,\r\n\t\t\trelease: release\r\n\t\t};\r\n\r\n\t\tfunction newElement(){\r\n\t\t\tvar element;\r\n\t\t\tif(_length){\r\n\t\t\t\t_length -= 1;\r\n\t\t\t\telement = pool[_length];\r\n\t\t\t} else {\r\n\t\t\t\telement = _create();\r\n\t\t\t}\r\n\t\t\treturn element;\r\n\t\t}\r\n\r\n\t\tfunction release(element) {\r\n\t\t\tif(_length === _maxLength) {\r\n\t\t\t\tpool = pooling.double(pool);\r\n\t\t\t\t_maxLength = _maxLength*2;\r\n\t\t\t}\r\n\t\t\tif (_release) {\r\n\t\t\t\t_release(element);\r\n\t\t\t}\r\n\t\t\tpool[_length] = element;\r\n\t\t\t_length += 1;\r\n\t\t}\r\n\r\n\t\tfunction clone() {\r\n\t\t\tvar clonedElement = newElement();\r\n\t\t\treturn _clone(clonedElement);\r\n\t\t}\r\n\r\n\t\treturn ob;\r\n\t};\r\n}());\r\n\r\nvar pooling = (function(){\r\n\r\n\tfunction double(arr){\r\n\t\treturn arr.concat(createSizedArray(arr.length));\r\n\t}\r\n\r\n\treturn {\r\n\t\tdouble: double\r\n\t};\r\n}());\r\nvar point_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn createTypedArray('float32', 2);\r\n\t}\r\n\treturn pool_factory(8, create);\r\n}());\r\nvar shape_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn new ShapePath();\r\n\t}\r\n\r\n\tfunction release(shapePath) {\r\n\t\tvar len = shapePath._length, i;\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tpoint_pool.release(shapePath.v[i]);\r\n\t\t\tpoint_pool.release(shapePath.i[i]);\r\n\t\t\tpoint_pool.release(shapePath.o[i]);\r\n\t\t\tshapePath.v[i] = null;\r\n\t\t\tshapePath.i[i] = null;\r\n\t\t\tshapePath.o[i] = null;\r\n\t\t}\r\n\t\tshapePath._length = 0;\r\n\t\tshapePath.c = false;\r\n\t}\r\n\r\n\tfunction clone(shape) {\r\n\t\tvar cloned = factory.newElement();\r\n\t\tvar i, len = shape._length === undefined ? shape.v.length : shape._length;\r\n\t\tcloned.setLength(len);\r\n\t\tcloned.c = shape.c;\r\n\t\tvar pt;\r\n\t\t\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tcloned.setTripleAt(shape.v[i][0],shape.v[i][1],shape.o[i][0],shape.o[i][1],shape.i[i][0],shape.i[i][1], i);\r\n\t\t}\r\n\t\treturn cloned;\r\n\t}\r\n\r\n\tvar factory = pool_factory(4, create, release);\r\n\tfactory.clone = clone;\r\n\r\n\treturn factory;\r\n}());\r\nvar shapeCollection_pool = (function(){\r\n\tvar ob = {\r\n\t\tnewShapeCollection: newShapeCollection,\r\n\t\trelease: release\r\n\t};\r\n\r\n\tvar _length = 0;\r\n\tvar _maxLength = 4;\r\n\tvar pool = createSizedArray(_maxLength);\r\n\r\n\tfunction newShapeCollection(){\r\n\t\tvar shapeCollection;\r\n\t\tif(_length){\r\n\t\t\t_length -= 1;\r\n\t\t\tshapeCollection = pool[_length];\r\n\t\t} else {\r\n\t\t\tshapeCollection = new ShapeCollection();\r\n\t\t}\r\n\t\treturn shapeCollection;\r\n\t}\r\n\r\n\tfunction release(shapeCollection) {\r\n\t\tvar i, len = shapeCollection._length;\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tshape_pool.release(shapeCollection.shapes[i]);\r\n\t\t}\r\n\t\tshapeCollection._length = 0;\r\n\r\n\t\tif(_length === _maxLength) {\r\n\t\t\tpool = pooling.double(pool);\r\n\t\t\t_maxLength = _maxLength*2;\r\n\t\t}\r\n\t\tpool[_length] = shapeCollection;\r\n\t\t_length += 1;\r\n\t}\r\n\r\n\treturn ob;\r\n}());\r\nvar segments_length_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn {\r\n\t\t\tlengths: [],\r\n\t\t\ttotalLength: 0\r\n\t\t};\r\n\t}\r\n\r\n\tfunction release(element) {\r\n\t\tvar i, len = element.lengths.length;\r\n\t\tfor(i=0;i<len;i+=1) {\r\n\t\t\tbezier_length_pool.release(element.lengths[i]);\r\n\t\t}\r\n\t\telement.lengths.length = 0;\r\n\t}\r\n\r\n\treturn pool_factory(8, create, release);\r\n}());\r\nvar bezier_length_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn {\r\n            addedLength: 0,\r\n            percents: createTypedArray('float32', defaultCurveSegments),\r\n            lengths: createTypedArray('float32', defaultCurveSegments),\r\n        };\r\n\t}\r\n\treturn pool_factory(8, create);\r\n}());\r\nfunction BaseRenderer(){}\r\nBaseRenderer.prototype.checkLayers = function(num){\r\n    var i, len = this.layers.length, data;\r\n    this.completeLayers = true;\r\n    for (i = len - 1; i >= 0; i--) {\r\n        if (!this.elements[i]) {\r\n            data = this.layers[i];\r\n            if(data.ip - data.st <= (num - this.layers[i].st) && data.op - data.st > (num - this.layers[i].st))\r\n            {\r\n                this.buildItem(i);\r\n            }\r\n        }\r\n        this.completeLayers = this.elements[i] ? this.completeLayers:false;\r\n    }\r\n    this.checkPendingElements();\r\n};\r\n\r\nBaseRenderer.prototype.createItem = function(layer){\r\n    switch(layer.ty){\r\n        case 2:\r\n            return this.createImage(layer);\r\n        case 0:\r\n            return this.createComp(layer);\r\n        case 1:\r\n            return this.createSolid(layer);\r\n        case 3:\r\n            return this.createNull(layer);\r\n        case 4:\r\n            return this.createShape(layer);\r\n        case 5:\r\n            return this.createText(layer);\r\n        case 13:\r\n            return this.createCamera(layer);\r\n    }\r\n    return this.createNull(layer);\r\n};\r\n\r\nBaseRenderer.prototype.createCamera = function(){\r\n    throw new Error('You\\'re using a 3d camera. Try the html renderer.');\r\n};\r\n\r\nBaseRenderer.prototype.buildAllItems = function(){\r\n    var i, len = this.layers.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.buildItem(i);\r\n    }\r\n    this.checkPendingElements();\r\n};\r\n\r\nBaseRenderer.prototype.includeLayers = function(newLayers){\r\n    this.completeLayers = false;\r\n    var i, len = newLayers.length;\r\n    var j, jLen = this.layers.length;\r\n    for(i=0;i<len;i+=1){\r\n        j = 0;\r\n        while(j<jLen){\r\n            if(this.layers[j].id == newLayers[i].id){\r\n                this.layers[j] = newLayers[i];\r\n                break;\r\n            }\r\n            j += 1;\r\n        }\r\n    }\r\n};\r\n\r\nBaseRenderer.prototype.setProjectInterface = function(pInterface){\r\n    this.globalData.projectInterface = pInterface;\r\n};\r\n\r\nBaseRenderer.prototype.initItems = function(){\r\n    if(!this.globalData.progressiveLoad){\r\n        this.buildAllItems();\r\n    }\r\n};\r\nBaseRenderer.prototype.buildElementParenting = function(element, parentName, hierarchy) {\r\n    var elements = this.elements;\r\n    var layers = this.layers;\r\n    var i=0, len = layers.length;\r\n    while (i < len) {\r\n        if (layers[i].ind == parentName) {\r\n            if (!elements[i] || elements[i] === true) {\r\n                this.buildItem(i);\r\n                this.addPendingElement(element);\r\n            } else {\r\n                hierarchy.push(elements[i]);\r\n                elements[i].setAsParent();\r\n                if(layers[i].parent !== undefined) {\r\n                    this.buildElementParenting(element, layers[i].parent, hierarchy);\r\n                } else {\r\n                    element.setHierarchy(hierarchy);\r\n                }\r\n            }\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nBaseRenderer.prototype.addPendingElement = function(element){\r\n    this.pendingElements.push(element);\r\n};\r\n\r\nBaseRenderer.prototype.searchExtraCompositions = function(assets){\r\n    var i, len = assets.length;\r\n    for(i=0;i<len;i+=1){\r\n        if(assets[i].xt){\r\n            var comp = this.createComp(assets[i]);\r\n            comp.initExpressions();\r\n            this.globalData.projectInterface.registerComposition(comp);\r\n        }\r\n    }\r\n};\r\n\r\nfunction SVGRenderer(animationItem, config){\r\n    this.animationItem = animationItem;\r\n    this.layers = null;\r\n    this.renderedFrame = -1;\r\n    this.svgElement = createNS('svg');\r\n    var maskElement = createNS('g');\r\n    this.svgElement.appendChild(maskElement);\r\n    this.layerElement = maskElement;\r\n    var defs = createNS( 'defs');\r\n    this.svgElement.appendChild(defs);\r\n    this.renderConfig = {\r\n        preserveAspectRatio: (config && config.preserveAspectRatio) || 'xMidYMid meet',\r\n        progressiveLoad: (config && config.progressiveLoad) || false,\r\n        hideOnTransparent: (config && config.hideOnTransparent === false) ? false : true,\r\n        viewBoxOnly: (config && config.viewBoxOnly) || false,\r\n        viewBoxSize: (config && config.viewBoxSize) || false,\r\n        className: (config && config.className) || ''\r\n    };\r\n    this.globalData = {\r\n        _mdf: false,\r\n        frameNum: -1,\r\n        defs: defs,\r\n        frameId: 0,\r\n        compSize: {w:0,h:0},\r\n        renderConfig: this.renderConfig,\r\n        fontManager: new FontManager()\r\n    };\r\n    this.elements = [];\r\n    this.pendingElements = [];\r\n    this.destroyed = false;\r\n\r\n}\r\n\r\nextendPrototype([BaseRenderer],SVGRenderer);\r\n\r\nSVGRenderer.prototype.createNull = function (data) {\r\n    return new NullElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createShape = function (data) {\r\n    return new SVGShapeElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createText = function (data) {\r\n    return new SVGTextElement(data,this.globalData,this);\r\n\r\n};\r\n\r\nSVGRenderer.prototype.createImage = function (data) {\r\n    return new IImageElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createComp = function (data) {\r\n    return new SVGCompElement(data,this.globalData,this);\r\n\r\n};\r\n\r\nSVGRenderer.prototype.createSolid = function (data) {\r\n    return new ISolidElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.configAnimation = function(animData){\r\n    this.svgElement.setAttribute('xmlns','http://www.w3.org/2000/svg');\r\n    if(this.renderConfig.viewBoxSize) {\r\n        this.svgElement.setAttribute('viewBox',this.renderConfig.viewBoxSize);\r\n    } else {\r\n        this.svgElement.setAttribute('viewBox','0 0 '+animData.w+' '+animData.h);\r\n    }\r\n\r\n    if(!this.renderConfig.viewBoxOnly) {\r\n        this.svgElement.setAttribute('width',animData.w);\r\n        this.svgElement.setAttribute('height',animData.h);\r\n        this.svgElement.style.width = '100%';\r\n        this.svgElement.style.height = '100%';\r\n    }\r\n    if(this.renderConfig.className) {\r\n        this.svgElement.setAttribute('class', this.renderConfig.className);\r\n    }\r\n    this.svgElement.setAttribute('preserveAspectRatio',this.renderConfig.preserveAspectRatio);\r\n    //this.layerElement.style.transform = 'translate3d(0,0,0)';\r\n    //this.layerElement.style.transformOrigin = this.layerElement.style.mozTransformOrigin = this.layerElement.style.webkitTransformOrigin = this.layerElement.style['-webkit-transform'] = \"0px 0px 0px\";\r\n    this.animationItem.wrapper.appendChild(this.svgElement);\r\n    //Mask animation\r\n    var defs = this.globalData.defs;\r\n\r\n    this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem);\r\n    this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem);\r\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\r\n    this.globalData.nm = animData.nm;\r\n    this.globalData.compSize.w = animData.w;\r\n    this.globalData.compSize.h = animData.h;\r\n    this.globalData.frameRate = animData.fr;\r\n    this.data = animData;\r\n\r\n    var maskElement = createNS( 'clipPath');\r\n    var rect = createNS('rect');\r\n    rect.setAttribute('width',animData.w);\r\n    rect.setAttribute('height',animData.h);\r\n    rect.setAttribute('x',0);\r\n    rect.setAttribute('y',0);\r\n    var maskId = 'animationMask_'+randomString(10);\r\n    maskElement.setAttribute('id', maskId);\r\n    maskElement.appendChild(rect);\r\n    this.layerElement.setAttribute(\"clip-path\", \"url(\" + locationHref + \"#\"+maskId+\")\");\r\n\r\n    defs.appendChild(maskElement);\r\n    this.layers = animData.layers;\r\n    this.globalData.fontManager.addChars(animData.chars);\r\n    this.globalData.fontManager.addFonts(animData.fonts,defs);\r\n    this.elements = createSizedArray(animData.layers.length);\r\n};\r\n\r\n\r\nSVGRenderer.prototype.destroy = function () {\r\n    this.animationItem.wrapper.innerHTML = '';\r\n    this.layerElement = null;\r\n    this.globalData.defs = null;\r\n    var i, len = this.layers ? this.layers.length : 0;\r\n    for (i = 0; i < len; i++) {\r\n        if(this.elements[i]){\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n    this.elements.length = 0;\r\n    this.destroyed = true;\r\n    this.animationItem = null;\r\n};\r\n\r\nSVGRenderer.prototype.updateContainerSize = function () {\r\n};\r\n\r\nSVGRenderer.prototype.buildItem  = function(pos){\r\n    var elements = this.elements;\r\n    if(elements[pos] || this.layers[pos].ty == 99){\r\n        return;\r\n    }\r\n    elements[pos] = true;\r\n    var element = this.createItem(this.layers[pos]);\r\n\r\n    elements[pos] = element;\r\n    if(expressionsPlugin){\r\n        if(this.layers[pos].ty === 0){\r\n            this.globalData.projectInterface.registerComposition(element);\r\n        }\r\n        element.initExpressions();\r\n    }\r\n    this.appendElementInPos(element,pos);\r\n    if(this.layers[pos].tt){\r\n        if(!this.elements[pos - 1] || this.elements[pos - 1] === true){\r\n            this.buildItem(pos - 1);\r\n            this.addPendingElement(element);\r\n        } else {\r\n            element.setMatte(elements[pos - 1].layerId);\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.checkPendingElements  = function(){\r\n    while(this.pendingElements.length){\r\n        var element = this.pendingElements.pop();\r\n        element.checkParenting();\r\n        if(element.data.tt){\r\n            var i = 0, len = this.elements.length;\r\n            while(i<len){\r\n                if(this.elements[i] === element){\r\n                    element.setMatte(this.elements[i - 1].layerId);\r\n                    break;\r\n                }\r\n                i += 1;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.renderFrame = function(num){\r\n    if(this.renderedFrame === num || this.destroyed){\r\n        return;\r\n    }\r\n    if(num === null){\r\n        num = this.renderedFrame;\r\n    }else{\r\n        this.renderedFrame = num;\r\n    }\r\n    //clearPoints();\r\n    // console.log('-------');\r\n    // console.log('FRAME ',num);\r\n    this.globalData.frameNum = num;\r\n    this.globalData.frameId += 1;\r\n    this.globalData.projectInterface.currentFrame = num;\r\n    this.globalData._mdf = false;\r\n    var i, len = this.layers.length;\r\n    if(!this.completeLayers){\r\n        this.checkLayers(num);\r\n    }\r\n    for (i = len - 1; i >= 0; i--) {\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].prepareFrame(num - this.layers[i].st);\r\n        }\r\n    }\r\n    if(this.globalData._mdf) {\r\n        for (i = 0; i < len; i += 1) {\r\n            if(this.completeLayers || this.elements[i]){\r\n                this.elements[i].renderFrame();\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.appendElementInPos = function(element, pos){\r\n    var newElement = element.getBaseElement();\r\n    if(!newElement){\r\n        return;\r\n    }\r\n    var i = 0;\r\n    var nextElement;\r\n    while(i<pos){\r\n        if(this.elements[i] && this.elements[i]!== true && this.elements[i].getBaseElement()){\r\n            nextElement = this.elements[i].getBaseElement();\r\n        }\r\n        i += 1;\r\n    }\r\n    if(nextElement){\r\n        this.layerElement.insertBefore(newElement, nextElement);\r\n    } else {\r\n        this.layerElement.appendChild(newElement);\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.hide = function(){\r\n    this.layerElement.style.display = 'none';\r\n};\r\n\r\nSVGRenderer.prototype.show = function(){\r\n    this.layerElement.style.display = 'block';\r\n};\r\n\r\nfunction MaskElement(data,element,globalData, dynamicProperties) {\r\n    this.data = data;\r\n    this.element = element;\r\n    this.globalData = globalData;\r\n    this.storedData = [];\r\n    this.masksProperties = this.data.masksProperties || [];\r\n    this.maskElement = null;\r\n    this._isFirstFrame = true;\r\n    var defs = this.globalData.defs;\r\n    var i, len = this.masksProperties ? this.masksProperties.length : 0;\r\n    this.viewData = createSizedArray(len);\r\n    this.solidPath = '';\r\n\r\n\r\n    var path, properties = this.masksProperties;\r\n    var count = 0;\r\n    var currentMasks = [];\r\n    var j, jLen;\r\n    var layerId = randomString(10);\r\n    var rect, expansor, feMorph,x;\r\n    var maskType = 'clipPath', maskRef = 'clip-path';\r\n    for (i = 0; i < len; i++) {\r\n\r\n        if((properties[i].mode !== 'a' && properties[i].mode !== 'n')|| properties[i].inv || properties[i].o.k !== 100){\r\n            maskType = 'mask';\r\n            maskRef = 'mask';\r\n        }\r\n\r\n        if((properties[i].mode == 's' || properties[i].mode == 'i') && count === 0){\r\n            rect = createNS( 'rect');\r\n            rect.setAttribute('fill', '#ffffff');\r\n            rect.setAttribute('width', this.element.comp.data.w);\r\n            rect.setAttribute('height', this.element.comp.data.h);\r\n            currentMasks.push(rect);\r\n        } else {\r\n            rect = null;\r\n        }\r\n\r\n        path = createNS( 'path');\r\n        if(properties[i].mode == 'n') {\r\n            // TODO move this to a factory or to a constructor\r\n            this.viewData[i] = {\r\n                op: PropertyFactory.getProp(this.element,properties[i].o,0,0.01,dynamicProperties),\r\n                prop: ShapePropertyFactory.getShapeProp(this.element,properties[i],3,dynamicProperties,null),\r\n                elem: path\r\n            };\r\n            defs.appendChild(path);\r\n            continue;\r\n        }\r\n        count += 1;\r\n\r\n        path.setAttribute('fill', properties[i].mode === 's' ? '#000000':'#ffffff');\r\n        path.setAttribute('clip-rule','nonzero');\r\n        var filterID;\r\n\r\n        if (properties[i].x.k !== 0) {\r\n            maskType = 'mask';\r\n            maskRef = 'mask';\r\n            x = PropertyFactory.getProp(this.element,properties[i].x,0,null,dynamicProperties);\r\n            filterID = 'fi_'+randomString(10);\r\n            expansor = createNS('filter');\r\n            expansor.setAttribute('id',filterID);\r\n            feMorph = createNS('feMorphology');\r\n            feMorph.setAttribute('operator','dilate');\r\n            feMorph.setAttribute('in','SourceGraphic');\r\n            feMorph.setAttribute('radius','0');\r\n            expansor.appendChild(feMorph);\r\n            defs.appendChild(expansor);\r\n            path.setAttribute('stroke', properties[i].mode === 's' ? '#000000':'#ffffff');\r\n        } else {\r\n            feMorph = null;\r\n            x = null;\r\n        }\r\n\r\n        // TODO move this to a factory or to a constructor\r\n        this.storedData[i] = {\r\n             elem: path,\r\n             x: x,\r\n             expan: feMorph,\r\n            lastPath: '',\r\n            lastOperator:'',\r\n            filterId:filterID,\r\n            lastRadius:0\r\n        };\r\n        if(properties[i].mode == 'i'){\r\n            jLen = currentMasks.length;\r\n            var g = createNS('g');\r\n            for(j=0;j<jLen;j+=1){\r\n                g.appendChild(currentMasks[j]);\r\n            }\r\n            var mask = createNS('mask');\r\n            mask.setAttribute('mask-type','alpha');\r\n            mask.setAttribute('id',layerId+'_'+count);\r\n            mask.appendChild(path);\r\n            defs.appendChild(mask);\r\n            g.setAttribute('mask','url(' + locationHref + '#'+layerId+'_'+count+')');\r\n\r\n            currentMasks.length = 0;\r\n            currentMasks.push(g);\r\n        }else{\r\n            currentMasks.push(path);\r\n        }\r\n        if(properties[i].inv && !this.solidPath){\r\n            this.solidPath = this.createLayerSolidPath();\r\n        }\r\n        // TODO move this to a factory or to a constructor\r\n        this.viewData[i] = {\r\n            elem: path,\r\n            lastPath: '',\r\n            op: PropertyFactory.getProp(this.element,properties[i].o,0,0.01,dynamicProperties),\r\n            prop:ShapePropertyFactory.getShapeProp(this.element,properties[i],3,dynamicProperties,null),\r\n            invRect: rect\r\n        };\r\n        if(!this.viewData[i].prop.k){\r\n            this.drawPath(properties[i],this.viewData[i].prop.v,this.viewData[i]);\r\n        }\r\n    }\r\n\r\n    this.maskElement = createNS( maskType);\r\n\r\n    len = currentMasks.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.maskElement.appendChild(currentMasks[i]);\r\n    }\r\n\r\n    if(count > 0){\r\n        this.maskElement.setAttribute('id', layerId);\r\n        this.element.maskedElement.setAttribute(maskRef, \"url(\" + locationHref + \"#\" + layerId + \")\");\r\n        defs.appendChild(this.maskElement);\r\n    }\r\n\r\n}\r\n\r\nMaskElement.prototype.getMaskProperty = function(pos){\r\n    return this.viewData[pos].prop;\r\n};\r\n\r\nMaskElement.prototype.renderFrame = function (finalMat) {\r\n    var i, len = this.masksProperties.length;\r\n    for (i = 0; i < len; i++) {\r\n        if(this.viewData[i].prop._mdf || this._isFirstFrame){\r\n            this.drawPath(this.masksProperties[i],this.viewData[i].prop.v,this.viewData[i]);\r\n        }\r\n        if(this.viewData[i].op._mdf || this._isFirstFrame){\r\n            this.viewData[i].elem.setAttribute('fill-opacity',this.viewData[i].op.v);\r\n        }\r\n        if(this.masksProperties[i].mode !== 'n'){\r\n            if(this.viewData[i].invRect && (this.element.finalTransform.mProp._mdf || this._isFirstFrame)){\r\n                this.viewData[i].invRect.setAttribute('x', -finalMat.props[12]);\r\n                this.viewData[i].invRect.setAttribute('y', -finalMat.props[13]);\r\n            }\r\n            if(this.storedData[i].x && (this.storedData[i].x._mdf || this._isFirstFrame)){\r\n                var feMorph = this.storedData[i].expan;\r\n                if(this.storedData[i].x.v < 0){\r\n                    if(this.storedData[i].lastOperator !== 'erode'){\r\n                        this.storedData[i].lastOperator = 'erode';\r\n                        this.storedData[i].elem.setAttribute('filter','url(' + locationHref + '#'+this.storedData[i].filterId+')');\r\n                    }\r\n                    feMorph.setAttribute('radius',-this.storedData[i].x.v);\r\n                }else{\r\n                    if(this.storedData[i].lastOperator !== 'dilate'){\r\n                        this.storedData[i].lastOperator = 'dilate';\r\n                        this.storedData[i].elem.setAttribute('filter',null);\r\n                    }\r\n                    this.storedData[i].elem.setAttribute('stroke-width', this.storedData[i].x.v*2);\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n    this._isFirstFrame = false;\r\n};\r\n\r\nMaskElement.prototype.getMaskelement = function () {\r\n    return this.maskElement;\r\n};\r\n\r\nMaskElement.prototype.createLayerSolidPath = function(){\r\n    var path = 'M0,0 ';\r\n    path += ' h' + this.globalData.compSize.w ;\r\n    path += ' v' + this.globalData.compSize.h ;\r\n    path += ' h-' + this.globalData.compSize.w ;\r\n    path += ' v-' + this.globalData.compSize.h + ' ';\r\n    return path;\r\n};\r\n\r\nMaskElement.prototype.drawPath = function(pathData,pathNodes,viewData){\r\n    var pathString = \" M\"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    var i, len;\r\n    len = pathNodes._length;\r\n    for(i=1;i<len;i+=1){\r\n        //pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[i][0]+','+pathNodes.i[i][1] + \" \"+pathNodes.v[i][0]+','+pathNodes.v[i][1];\r\n        pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[i][0]+','+pathNodes.i[i][1] + \" \"+pathNodes.v[i][0]+','+pathNodes.v[i][1];\r\n    }\r\n        //pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[0][0]+','+pathNodes.i[0][1] + \" \"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    if(pathNodes.c && len > 1){\r\n        pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[0][0]+','+pathNodes.i[0][1] + \" \"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    }\r\n    //pathNodes.__renderedString = pathString;\r\n\r\n\r\n    if(viewData.lastPath !== pathString){\r\n        var pathShapeValue = '';\r\n        if(viewData.elem){\r\n            if(pathNodes.c){\r\n                pathShapeValue = pathData.inv ? this.solidPath + pathString : pathString;\r\n            }\r\n            viewData.elem.setAttribute('d',pathShapeValue);\r\n        }\r\n        viewData.lastPath = pathString;\r\n    }\r\n};\r\n\r\nMaskElement.prototype.destroy = function(){\r\n    this.element = null;\r\n    this.globalData = null;\r\n    this.maskElement = null;\r\n    this.data = null;\r\n    this.masksProperties = null;\r\n};\r\n/**\r\n * @file \r\n * Handles AE's layer parenting property.\r\n *\r\n */\r\n\r\nfunction HierarchyElement(){}\r\n\r\nHierarchyElement.prototype = {\r\n\t/**\r\n     * @function \r\n     * Initializes hierarchy properties\r\n     *\r\n     */\r\n\tinitHierarchy: function() {\r\n\t\t//element's parent list\r\n\t    this.hierarchy = [];\r\n\t    //if element is parent of another layer _isParent will be true\r\n\t    this._isParent = false;\r\n\t    this.checkParenting();\r\n\t},\r\n\t/**\r\n     * @function \r\n     * Sets layer's hierarchy.\r\n     * @param {array} hierarch\r\n     * layer's parent list\r\n     *\r\n     */ \r\n\tsetHierarchy: function(hierarchy){\r\n\t    this.hierarchy = hierarchy;\r\n\t},\r\n\t/**\r\n     * @function \r\n     * Sets layer as parent.\r\n     *\r\n     */ \r\n\tsetAsParent: function() {\r\n\t    this._isParent = true;\r\n\t},\r\n\t/**\r\n     * @function \r\n     * Searches layer's parenting chain\r\n     *\r\n     */ \r\n\tcheckParenting: function(){\r\n\t    if (this.data.parent !== undefined){\r\n\t        this.comp.buildElementParenting(this, this.data.parent, []);\r\n\t    }\r\n\t}\r\n};\r\n/**\r\n * @file \r\n * Handles element's layer frame update.\r\n * Checks layer in point and out point\r\n *\r\n */\r\n\r\nfunction FrameElement(){}\r\n\r\nFrameElement.prototype = {\r\n    /**\r\n     * @function \r\n     * Initializes frame related properties.\r\n     *\r\n     */\r\n    initFrame: function(){\r\n        //set to true when inpoint is rendered\r\n        this._isFirstFrame = false;\r\n        //list of animated properties\r\n        this.dynamicProperties = [];\r\n        // If layer has been modified in current tick this will be true\r\n        this._mdf = false;\r\n    },\r\n    /**\r\n     * @function \r\n     * Calculates all dynamic values\r\n     *\r\n     * @param {number} num\r\n     * current frame number in Layer's time\r\n     * @param {boolean} isVisible\r\n     * if layers is currently in range\r\n     * \r\n     */\r\n    prepareProperties: function(num, isVisible) {\r\n        var i, len = this.dynamicProperties.length;\r\n        for (i = 0;i < len; i += 1) {\r\n            if (isVisible || (this._isParent && this.dynamicProperties[i].propType === 'transform')) {\r\n                this.dynamicProperties[i].getValue();\r\n                if (this.dynamicProperties[i]._mdf) {\r\n                    this.globalData._mdf = true;\r\n                    this._mdf = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nfunction TransformElement(){}\r\n\r\nTransformElement.prototype = {\r\n    initTransform: function() {\r\n        this.finalTransform = {\r\n            mProp: this.data.ks ? TransformPropertyFactory.getTransformProperty(this, this.data.ks, this.dynamicProperties) : {o:0},\r\n            _matMdf: false,\r\n            _opMdf: false,\r\n            mat: new Matrix()\r\n        };\r\n        if (this.data.ao) {\r\n            this.finalTransform.mProp.autoOriented = true;\r\n        }\r\n\r\n        //TODO: check TYPE 11: Guided elements\r\n        if (this.data.ty !== 11) {\r\n            //this.createElements();\r\n        }\r\n    },\r\n    renderTransform: function() {\r\n\r\n        this.finalTransform._opMdf = this.finalTransform.mProp.o._mdf || this._isFirstFrame;\r\n        this.finalTransform._matMdf = this.finalTransform.mProp._mdf || this._isFirstFrame;\r\n\r\n        if (this.hierarchy) {\r\n            var mat;\r\n            var finalMat = this.finalTransform.mat;\r\n            var i = 0, len = this.hierarchy.length;\r\n            //Checking if any of the transformation matrices in the hierarchy chain has changed.\r\n            if (!this.finalTransform._matMdf) {\r\n                while (i < len) {\r\n                    if (this.hierarchy[i].finalTransform.mProp._mdf) {\r\n                        this.finalTransform._matMdf = true;\r\n                        break;\r\n                    }\r\n                    i += 1;\r\n                }\r\n            }\r\n            \r\n            if (this.finalTransform._matMdf) {\r\n                mat = this.finalTransform.mProp.v.props;\r\n                finalMat.cloneFromProps(mat);\r\n                for (i = 0; i < len; i += 1) {\r\n                    mat = this.hierarchy[i].finalTransform.mProp.v.props;\r\n                    finalMat.transform(mat[0], mat[1], mat[2], mat[3], mat[4], mat[5], mat[6], mat[7], mat[8], mat[9], mat[10], mat[11], mat[12], mat[13], mat[14], mat[15]);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    globalToLocal: function(pt) {\r\n        var transforms = [];\r\n        transforms.push(this.finalTransform);\r\n        var flag = true;\r\n        var comp = this.comp;\r\n        while (flag) {\r\n            if (comp.finalTransform) {\r\n                if (comp.data.hasMask) {\r\n                    transforms.splice(0, 0, comp.finalTransform);\r\n                }\r\n                comp = comp.comp;\r\n            } else {\r\n                flag = false;\r\n            }\r\n        }\r\n        var i, len = transforms.length,ptNew;\r\n        for (i = 0; i < len; i += 1) {\r\n            ptNew = transforms[i].mat.applyToPointArray(0, 0, 0);\r\n            //ptNew = transforms[i].mat.applyToPointArray(pt[0],pt[1],pt[2]);\r\n            pt = [pt[0] - ptNew[0], pt[1] - ptNew[1], 0];\r\n        }\r\n        return pt;\r\n    },\r\n    mHelper: new Matrix()\r\n};\r\nfunction RenderableElement(){\r\n\r\n}\r\n\r\nRenderableElement.prototype = {\r\n    initRenderable: function() {\r\n        //layer's visibility related to inpoint and outpoint. Rename isVisible to isInRange\r\n        this.isInRange = false;\r\n        //layer's display state\r\n        this.hidden = false;\r\n        // If layer's transparency equals 0, it can be hidden\r\n        this.isTransparent = false;\r\n    },\r\n    prepareRenderableFrame: function(num) {\r\n        this.checkLayerLimits(num);\r\n    },\r\n    checkTransparency: function(){\r\n        if(this.finalTransform.mProp.o.v <= 0) {\r\n            if(!this.isTransparent && this.globalData.renderConfig.hideOnTransparent){\r\n                this.isTransparent = true;\r\n                this.hide();\r\n            }\r\n        } else if(this.isTransparent) {\r\n            this.isTransparent = false;\r\n            this.show();\r\n        }\r\n    },\r\n    /**\r\n     * @function \r\n     * Initializes frame related properties.\r\n     *\r\n     * @param {number} num\r\n     * current frame number in Layer's time\r\n     * \r\n     */\r\n    checkLayerLimits: function(num) {\r\n        if(this.data.ip - this.data.st <= num && this.data.op - this.data.st > num)\r\n        {\r\n            if(this.isInRange !== true){\r\n                this.globalData._mdf = true;\r\n                this._mdf = true;\r\n                this.isInRange = true;\r\n                this.show();\r\n            }\r\n        } else {\r\n            if(this.isInRange !== false){\r\n                this.globalData._mdf = true;\r\n                this.isInRange = false;\r\n                this.hide();\r\n            }\r\n        }\r\n    },\r\n    renderRenderable: function() {\r\n        this.maskManager.renderFrame(this.finalTransform.mat);\r\n        this.renderableEffectsManager.renderFrame(this._isFirstFrame);\r\n    },\r\n    sourceRectAtTime: function(){\r\n        return {\r\n            top:0,\r\n            left:0,\r\n            width:100,\r\n            height:100\r\n        };\r\n    },\r\n    getLayerSize: function(){\r\n        if(this.data.ty === 5){\r\n            return {w:this.data.textData.width,h:this.data.textData.height};\r\n        }else{\r\n            return {w:this.data.width,h:this.data.height};\r\n        }\r\n    }\r\n};\r\nfunction RenderableDOMElement() {}\r\n\r\n(function(){\r\n    var _prototype = {\r\n        initElement: function(data,globalData,comp) {\r\n            this.initFrame();\r\n            this.initBaseData(data, globalData, comp);\r\n            this.initTransform(data, globalData, comp);\r\n            this.initHierarchy();\r\n            this.initRenderable();\r\n            this.initRendererElement();\r\n            this.createContainerElements();\r\n            this.addMasks();\r\n            this.createContent();\r\n            this.hide();\r\n        },\r\n        hide: function(){\r\n            if (!this.hidden && (!this.isInRange || this.isTransparent)) {\r\n                this.layerElement.style.display = 'none';\r\n                this.hidden = true;\r\n            }\r\n        },\r\n        show: function(){\r\n            if (this.isInRange && !this.isTransparent){\r\n                if (!this.data.hd) {\r\n                    this.layerElement.style.display = 'block';\r\n                }\r\n                this.hidden = false;\r\n                this._isFirstFrame = true;\r\n                this.maskManager._isFirstFrame = true;\r\n            }\r\n        },\r\n        renderFrame: function() {\r\n            //If it is exported as hidden (data.hd === true) no need to render\r\n            //If it is not visible no need to render\r\n            if (this.data.hd || this.hidden) {\r\n                return;\r\n            }\r\n            this.renderTransform();\r\n            this.renderRenderable();\r\n            this.renderElement();\r\n            this.renderInnerContent();\r\n            if (this._isFirstFrame) {\r\n                this._isFirstFrame = false;\r\n            }\r\n        },\r\n        renderInnerContent: function() {},\r\n        prepareFrame: function(num) {\r\n            this._mdf = false;\r\n            this.prepareRenderableFrame(num);\r\n            this.prepareProperties(num, this.isInRange);\r\n            this.checkTransparency();\r\n        },\r\n        destroy: function(){\r\n            this.innerElem =  null;\r\n            this.destroyBaseElement();\r\n        }\r\n    };\r\n    extendPrototype([RenderableElement, createProxyFunction(_prototype)], RenderableDOMElement);\r\n}());\r\nfunction ProcessedElement(element, position) {\r\n\tthis.elem = element;\r\n\tthis.pos = position;\r\n}\r\nfunction SVGStyleData(data, level) {\r\n\tthis.data = data;\r\n\tthis.type = data.ty;\r\n\tthis.d = '';\r\n\tthis.lvl = level;\r\n\tthis._mdf = false;\r\n\tthis.closed = false;\r\n\tthis.pElem = createNS('path');\r\n\tthis.msElem = null;\r\n}\r\n\r\nSVGStyleData.prototype.reset = function() {\r\n\tthis.d = '';\r\n\tthis._mdf = false;\r\n};\r\nfunction SVGShapeData(transformers, level, shape) {\r\n    this.caches = [];\r\n    this.styles = [];\r\n    this.transformers = transformers;\r\n    this.lStr = '';\r\n    this.sh = shape;\r\n    this.lvl = level;\r\n}\r\nfunction SVGTransformData(mProps, op) {\r\n\tthis.transform = {\r\n\t\tmProps: mProps,\r\n\t\top: op\r\n\t};\r\n\tthis.elements = [];\r\n}\r\nfunction SVGStrokeStyleData(elem, data, dynamicProperties, styleOb){\r\n\tthis.o = PropertyFactory.getProp(elem,data.o,0,0.01,dynamicProperties);\r\n\tthis.w = PropertyFactory.getProp(elem,data.w,0,null,dynamicProperties);\r\n\tthis.d = new DashProperty(elem,data.d||{},'svg',dynamicProperties);\r\n\tthis.c = PropertyFactory.getProp(elem,data.c,1,255,dynamicProperties);\r\n\tthis.style = styleOb;\r\n}\r\nfunction SVGFillStyleData(elem, data, dynamicProperties, styleOb){\r\n\tthis.o = PropertyFactory.getProp(elem,data.o,0,0.01,dynamicProperties);\r\n\tthis.c = PropertyFactory.getProp(elem,data.c,1,255,dynamicProperties);\r\n\tthis.style = styleOb;\r\n}\r\nfunction SVGGradientFillStyleData(elem, data, dynamicProperties, styleOb){\r\n    this.initGradientData(elem, data, dynamicProperties, styleOb);\r\n}\r\n\r\nSVGGradientFillStyleData.prototype.initGradientData = function(elem, data, dynamicProperties, styleOb){\r\n    this.o = PropertyFactory.getProp(elem,data.o,0,0.01,dynamicProperties);\r\n    this.s = PropertyFactory.getProp(elem,data.s,1,null,dynamicProperties);\r\n    this.e = PropertyFactory.getProp(elem,data.e,1,null,dynamicProperties);\r\n    this.h = PropertyFactory.getProp(elem,data.h||{k:0},0,0.01,dynamicProperties);\r\n    this.a = PropertyFactory.getProp(elem,data.a||{k:0},0,degToRads,dynamicProperties);\r\n    this.g = new GradientProperty(elem,data.g,dynamicProperties);\r\n    this.style = styleOb;\r\n    this.stops = [];\r\n    this.setGradientData(styleOb.pElem, data);\r\n    this.setGradientOpacity(data, styleOb);\r\n\r\n};\r\n\r\nSVGGradientFillStyleData.prototype.setGradientData = function(pathElement,data){\r\n\r\n    var gradientId = 'gr_'+randomString(10);\r\n    var gfill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');\r\n    gfill.setAttribute('id',gradientId);\r\n    gfill.setAttribute('spreadMethod','pad');\r\n    gfill.setAttribute('gradientUnits','userSpaceOnUse');\r\n    var stops = [];\r\n    var stop, j, jLen;\r\n    jLen = data.g.p*4;\r\n    for(j=0;j<jLen;j+=4){\r\n        stop = createNS('stop');\r\n        gfill.appendChild(stop);\r\n        stops.push(stop);\r\n    }\r\n    pathElement.setAttribute( data.ty === 'gf' ? 'fill':'stroke','url(#'+gradientId+')');\r\n    \r\n    this.gf = gfill;\r\n    this.cst = stops;\r\n};\r\n\r\nSVGGradientFillStyleData.prototype.setGradientOpacity = function(data, styleOb){\r\n    if(this.g._hasOpacity && !this.g._collapsable){\r\n        var stop, j, jLen;\r\n        var mask = createNS(\"mask\");\r\n        var maskElement = createNS( 'path');\r\n        mask.appendChild(maskElement);\r\n        var opacityId = 'op_'+randomString(10);\r\n        var maskId = 'mk_'+randomString(10);\r\n        mask.setAttribute('id',maskId);\r\n        var opFill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');\r\n        opFill.setAttribute('id',opacityId);\r\n        opFill.setAttribute('spreadMethod','pad');\r\n        opFill.setAttribute('gradientUnits','userSpaceOnUse');\r\n        jLen = data.g.k.k[0].s ? data.g.k.k[0].s.length : data.g.k.k.length;\r\n        var stops = this.stops;\r\n        for(j=data.g.p*4;j<jLen;j+=2){\r\n            stop = createNS('stop');\r\n            stop.setAttribute('stop-color','rgb(255,255,255)');\r\n            opFill.appendChild(stop);\r\n            stops.push(stop);\r\n        }\r\n        maskElement.setAttribute( data.ty === 'gf' ? 'fill':'stroke','url(#'+opacityId+')');\r\n        this.of = opFill;\r\n        this.ms = mask;\r\n        this.ost = stops;\r\n        this.maskId = maskId;\r\n        styleOb.msElem = maskElement;\r\n    }\r\n};\r\nfunction SVGGradientStrokeStyleData(elem, data, dynamicProperties, styleOb){\r\n\tthis.w = PropertyFactory.getProp(elem,data.w,0,null,dynamicProperties);\r\n\tthis.d = new DashProperty(elem,data.d||{},'svg',dynamicProperties);\r\n    this.initGradientData(elem, data, dynamicProperties, styleOb);\r\n}\r\n\r\nSVGGradientStrokeStyleData.prototype.initGradientData = SVGGradientFillStyleData.prototype.initGradientData;\r\nSVGGradientStrokeStyleData.prototype.setGradientData = SVGGradientFillStyleData.prototype.setGradientData;\r\nSVGGradientStrokeStyleData.prototype.setGradientOpacity = SVGGradientFillStyleData.prototype.setGradientOpacity;\r\nfunction ShapeGroupData() {\r\n\tthis.it = [];\r\n    this.prevViewData = [];\r\n    this.gr = createNS('g');\r\n}\r\nfunction BaseElement(){\r\n}\r\nBaseElement.prototype.checkMasks = function(){\r\n    if(!this.data.hasMask){\r\n        return false;\r\n    }\r\n    var i = 0, len = this.data.masksProperties.length;\r\n    while(i<len) {\r\n        if((this.data.masksProperties[i].mode !== 'n' && this.data.masksProperties[i].cl !== false)) {\r\n            return true;\r\n        }\r\n        i += 1;\r\n    }\r\n    return false;\r\n};\r\n\r\nBaseElement.prototype.initExpressions = function(){\r\n    this.layerInterface = LayerExpressionInterface(this);\r\n    if(this.data.hasMask && this.maskManager) {\r\n        this.layerInterface.registerMaskInterface(this.maskManager);\r\n    }\r\n    var effectsInterface = EffectsExpressionInterface.createEffectsInterface(this,this.layerInterface);\r\n    this.layerInterface.registerEffectsInterface(effectsInterface);\r\n\r\n    if(this.data.ty === 0 || this.data.xt){\r\n        this.compInterface = CompExpressionInterface(this);\r\n    } else if(this.data.ty === 4){\r\n        this.layerInterface.shapeInterface = ShapeExpressionInterface(this.shapesData,this.itemsData,this.layerInterface);\r\n        this.layerInterface.content = this.layerInterface.shapeInterface;\r\n    } else if(this.data.ty === 5){\r\n        this.layerInterface.textInterface = TextExpressionInterface(this);\r\n        this.layerInterface.text = this.layerInterface.textInterface;\r\n    }\r\n};\r\n\r\nBaseElement.prototype.blendModeEnums = {\r\n    1:'multiply',\r\n    2:'screen',\r\n    3:'overlay',\r\n    4:'darken',\r\n    5:'lighten',\r\n    6:'color-dodge',\r\n    7:'color-burn',\r\n    8:'hard-light',\r\n    9:'soft-light',\r\n    10:'difference',\r\n    11:'exclusion',\r\n    12:'hue',\r\n    13:'saturation',\r\n    14:'color',\r\n    15:'luminosity'\r\n};\r\n\r\nBaseElement.prototype.getBlendMode = function(){\r\n    return this.blendModeEnums[this.data.bm] || '';\r\n};\r\n\r\nBaseElement.prototype.setBlendMode = function(){\r\n    var blendModeValue = this.getBlendMode();\r\n    var elem = this.baseElement || this.layerElement;\r\n\r\n    elem.style['mix-blend-mode'] = blendModeValue;\r\n};\r\n\r\nBaseElement.prototype.initBaseData = function(data, globalData, comp){\r\n    this.globalData = globalData;\r\n    this.comp = comp;\r\n    this.data = data;\r\n    this.layerId = 'ly_'+randomString(10);\r\n    \r\n    //Stretch factor for old animations missing this property.\r\n    if(!this.data.sr){\r\n        this.data.sr = 1;\r\n    }\r\n    // effects manager\r\n    this.effectsManager = new EffectsManager(this.data,this,this.dynamicProperties);\r\n    \r\n};\r\n\r\nBaseElement.prototype.getType = function(){\r\n    return this.type;\r\n};\r\n\r\nfunction NullElement(data,globalData,comp){\r\n    this.initFrame();\r\n\tthis.initBaseData(data, globalData, comp);\r\n    this.initFrame();\r\n    this.initTransform(data, globalData, comp);\r\n    this.initHierarchy();\r\n}\r\n\r\nNullElement.prototype.prepareFrame = function(num) {\r\n    this.prepareProperties(num, true);\r\n};\r\n\r\nNullElement.prototype.renderFrame = function() {\r\n};\r\n\r\nNullElement.prototype.getBaseElement = function() {\r\n\treturn null;\r\n};\r\n\r\nNullElement.prototype.destroy = function() {\r\n};\r\n\r\nNullElement.prototype.sourceRectAtTime = function() {\r\n};\r\n\r\nNullElement.prototype.hide = function() {\r\n};\r\n\r\nextendPrototype([BaseElement,TransformElement,HierarchyElement,FrameElement], NullElement);\r\n\r\nfunction SVGBaseElement(){\r\n}\r\n\r\nSVGBaseElement.prototype = {\r\n    initRendererElement: function() {\r\n        this.layerElement = createNS('g');\r\n    },\r\n    createContainerElements: function(){\r\n        this.matteElement = createNS('g');\r\n        this.transformedElement = this.layerElement;\r\n        this.maskedElement = this.layerElement;\r\n        this._sizeChanged = false;\r\n        var layerElementParent = null;\r\n        //If this layer acts as a mask for the following layer\r\n        var filId, fil, gg;\r\n        if (this.data.td) {\r\n            if (this.data.td == 3 || this.data.td == 1) {\r\n                var masker = createNS('mask');\r\n                masker.setAttribute('id', this.layerId);\r\n                masker.setAttribute('mask-type', this.data.td == 3 ? 'luminance' : 'alpha');\r\n                masker.appendChild(this.layerElement);\r\n                layerElementParent = masker;\r\n                this.globalData.defs.appendChild(masker);\r\n                // This is only for IE and Edge when mask if of type alpha\r\n                if (!featureSupport.maskType && this.data.td == 1) {\r\n                    masker.setAttribute('mask-type', 'luminance');\r\n                    filId = randomString(10);\r\n                    fil = filtersFactory.createFilter(filId);\r\n                    this.globalData.defs.appendChild(fil);\r\n                    fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\r\n                    gg = createNS('g');\r\n                    gg.appendChild(this.layerElement);\r\n                    layerElementParent = gg;\r\n                    masker.appendChild(gg);\r\n                    gg.setAttribute('filter','url(' + locationHref + '#' + filId + ')');\r\n                }\r\n            } else if(this.data.td == 2) {\r\n                var maskGroup = createNS('mask');\r\n                maskGroup.setAttribute('id', this.layerId);\r\n                maskGroup.setAttribute('mask-type','alpha');\r\n                var maskGrouper = createNS('g');\r\n                maskGroup.appendChild(maskGrouper);\r\n                filId = randomString(10);\r\n                fil = filtersFactory.createFilter(filId);\r\n                ////\r\n\r\n                var feColorMatrix = createNS('feColorMatrix');\r\n                feColorMatrix.setAttribute('type', 'matrix');\r\n                feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');\r\n                feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 -1 1');\r\n                fil.appendChild(feColorMatrix);\r\n\r\n                ////\r\n                /*var feCTr = createNS('feComponentTransfer');\r\n                feCTr.setAttribute('in','SourceGraphic');\r\n                fil.appendChild(feCTr);\r\n                var feFunc = createNS('feFuncA');\r\n                feFunc.setAttribute('type','table');\r\n                feFunc.setAttribute('tableValues','1.0 0.0');\r\n                feCTr.appendChild(feFunc);*/\r\n                this.globalData.defs.appendChild(fil);\r\n                var alphaRect = createNS('rect');\r\n                alphaRect.setAttribute('width',  this.comp.data.w);\r\n                alphaRect.setAttribute('height', this.comp.data.h);\r\n                alphaRect.setAttribute('x','0');\r\n                alphaRect.setAttribute('y','0');\r\n                alphaRect.setAttribute('fill','#ffffff');\r\n                alphaRect.setAttribute('opacity','0');\r\n                maskGrouper.setAttribute('filter', 'url(' + locationHref + '#'+filId+')');\r\n                maskGrouper.appendChild(alphaRect);\r\n                maskGrouper.appendChild(this.layerElement);\r\n                layerElementParent = maskGrouper;\r\n                if (!featureSupport.maskType) {\r\n                    maskGroup.setAttribute('mask-type', 'luminance');\r\n                    fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\r\n                    gg = createNS('g');\r\n                    maskGrouper.appendChild(alphaRect);\r\n                    gg.appendChild(this.layerElement);\r\n                    layerElementParent = gg;\r\n                    maskGrouper.appendChild(gg);\r\n                }\r\n                this.globalData.defs.appendChild(maskGroup);\r\n            }\r\n        } else if (this.data.tt) {\r\n            this.matteElement.appendChild(this.layerElement);\r\n            layerElementParent = this.matteElement;\r\n            this.baseElement = this.matteElement;\r\n        } else {\r\n            this.baseElement = this.layerElement;\r\n        }\r\n        if (this.data.ln) {\r\n            this.layerElement.setAttribute('id', this.data.ln);\r\n        }\r\n        if (this.data.cl) {\r\n            this.layerElement.setAttribute('class', this.data.cl);\r\n        }\r\n        //Clipping compositions to hide content that exceeds boundaries. If collapsed transformations is on, component should not be clipped\r\n        if (this.data.ty === 0 && !this.data.hd) {\r\n            var cp = createNS( 'clipPath');\r\n            var pt = createNS('path');\r\n            pt.setAttribute('d','M0,0 L' + this.data.w + ',0' + ' L' + this.data.w + ',' + this.data.h + ' L0,' + this.data.h + 'z');\r\n            var clipId = 'cp_'+randomString(8);\r\n            cp.setAttribute('id',clipId);\r\n            cp.appendChild(pt);\r\n            this.globalData.defs.appendChild(cp);\r\n\r\n            if (this.checkMasks()) {\r\n                var cpGroup = createNS('g');\r\n                cpGroup.setAttribute('clip-path','url(' + locationHref + '#'+clipId + ')');\r\n                cpGroup.appendChild(this.layerElement);\r\n                this.transformedElement = cpGroup;\r\n                if (layerElementParent) {\r\n                    layerElementParent.appendChild(this.transformedElement);\r\n                } else {\r\n                    this.baseElement = this.transformedElement;\r\n                }\r\n            } else {\r\n                this.layerElement.setAttribute('clip-path','url(' + locationHref + '#'+clipId+')');\r\n            }\r\n            \r\n        }\r\n        if (this.data.bm !== 0) {\r\n            this.setBlendMode();\r\n        }\r\n        this.renderableEffectsManager = new SVGEffects(this);\r\n\r\n    },\r\n    renderElement: function() {\r\n        if (this.finalTransform._matMdf) {\r\n            this.transformedElement.setAttribute('transform', this.finalTransform.mat.to2dCSS());\r\n        }\r\n        if (this.finalTransform._opMdf) {\r\n            this.transformedElement.setAttribute('opacity', this.finalTransform.mProp.o.v);\r\n        }\r\n    },\r\n    destroyBaseElement: function() {\r\n        this.layerElement = null;\r\n        this.matteElement = null;\r\n        this.maskManager.destroy();\r\n    },\r\n    getBaseElement: function() {\r\n        if (this.data.hd) {\r\n            return null;\r\n        }\r\n        return this.baseElement;\r\n    },\r\n    addMasks: function() {\r\n        this.maskManager = new MaskElement(this.data, this, this.globalData, this.dynamicProperties);\r\n    },\r\n    setMatte: function(id) {\r\n        if (!this.matteElement) {\r\n            return;\r\n        }\r\n        this.matteElement.setAttribute(\"mask\", \"url(\" + locationHref + \"#\" + id + \")\");\r\n    }\r\n};\r\nfunction IShapeElement(){\r\n}\r\n\r\nIShapeElement.prototype = {\r\n    addShapeToModifiers: function(data) {\r\n        var i, len = this.shapeModifiers.length;\r\n        for(i=0;i<len;i+=1){\r\n            this.shapeModifiers[i].addShape(data);\r\n        }\r\n    },\r\n    renderModifiers: function() {\r\n        if(!this.shapeModifiers.length){\r\n            return;\r\n        }\r\n        var i, len = this.shapes.length;\r\n        for(i=0;i<len;i+=1){\r\n            this.shapes[i].reset();\r\n        }\r\n\r\n        len = this.shapeModifiers.length;\r\n        for(i=len-1;i>=0;i-=1){\r\n            this.shapeModifiers[i].processShapes(this._isFirstFrame);\r\n        }\r\n    },\r\n    lcEnum: {\r\n        '1': 'butt',\r\n        '2': 'round',\r\n        '3': 'square'\r\n    },\r\n    ljEnum: {\r\n        '1': 'miter',\r\n        '2': 'round',\r\n        '3': 'butt'\r\n    },\r\n    searchProcessedElement: function(elem){\r\n        var i = 0, len = this.processedElements.length;\r\n        while(i < len){\r\n            if(this.processedElements[i].elem === elem){\r\n                return this.processedElements[i].pos;\r\n            }\r\n            i += 1;\r\n        }\r\n        return 0;\r\n    },\r\n    addProcessedElement: function(elem, pos){\r\n        var i = this.processedElements.length;\r\n        while(i){\r\n            i -= 1;\r\n            if(this.processedElements[i].elem === elem){\r\n                this.processedElements[i].pos = pos;\r\n                break;\r\n            }\r\n        }\r\n        if(i === 0){\r\n            this.processedElements.push(new ProcessedElement(elem, pos));\r\n        }\r\n    },\r\n    prepareFrame: function(num) {\r\n        this.prepareRenderableFrame(num);\r\n        this.prepareProperties(num, this.isInRange);\r\n    },\r\n    buildShapeString: function(pathNodes, length, closed, mat) {\r\n        var i, shapeString = '';\r\n        for(i = 1; i < length; i += 1) {\r\n            if (i === 1) {\r\n                shapeString += \" M\" + mat.applyToPointStringified(pathNodes.v[0][0], pathNodes.v[0][1]);\r\n            }\r\n            shapeString += \" C\" + mat.applyToPointStringified(pathNodes.o[i - 1][0], pathNodes.o[i - 1][1]) + \" \" + mat.applyToPointStringified(pathNodes.i[i][0], pathNodes.i[i][1]) + \" \" + mat.applyToPointStringified(pathNodes.v[i][0], pathNodes.v[i][1]);\r\n        }\r\n        if (length === 1) {\r\n            shapeString += \" M\" + mat.applyToPointStringified(pathNodes.v[0][0], pathNodes.v[0][1]);\r\n        }\r\n        if (closed && length) {\r\n            shapeString += \" C\" + mat.applyToPointStringified(pathNodes.o[i - 1][0], pathNodes.o[i - 1][1]) + \" \" + mat.applyToPointStringified(pathNodes.i[0][0], pathNodes.i[0][1]) + \" \" + mat.applyToPointStringified(pathNodes.v[0][0], pathNodes.v[0][1]);\r\n            shapeString += 'z';\r\n        }\r\n        return shapeString;\r\n    }\r\n};\r\nfunction ITextElement(){\r\n}\r\n\r\nITextElement.prototype.initElement = function(data,globalData,comp){\r\n    this.lettersChangedFlag = true;\r\n    this.initFrame();\r\n    this.initBaseData(data, globalData, comp);\r\n    this.textAnimator = new TextAnimatorProperty(data.t, this.renderType, this);\r\n    this.textProperty = new TextProperty(this, data.t, this.dynamicProperties);\r\n    this.initTransform(data, globalData, comp);\r\n    this.initHierarchy();\r\n    this.initRenderable();\r\n    this.initRendererElement();\r\n    this.createContainerElements();\r\n    this.addMasks();\r\n    this.createContent();\r\n    this.hide();\r\n    this.textAnimator.searchProperties(this.dynamicProperties);\r\n};\r\n\r\nITextElement.prototype.prepareFrame = function(num) {\r\n    this._mdf = false;\r\n    this.prepareRenderableFrame(num);\r\n    this.prepareProperties(num, this.isInRange);\r\n    if(this.textProperty._mdf || this.textProperty._isFirstFrame) {\r\n        this.buildNewText();\r\n        this.textProperty._isFirstFrame = false;\r\n    }\r\n};\r\n\r\nITextElement.prototype.createPathShape = function(matrixHelper, shapes) {\r\n    var j,jLen = shapes.length;\r\n    var k, kLen, pathNodes;\r\n    var shapeStr = '';\r\n    for(j=0;j<jLen;j+=1){\r\n        pathNodes = shapes[j].ks.k;\r\n        shapeStr += this.buildShapeString(pathNodes, pathNodes.i.length, true, matrixHelper);\r\n    }\r\n    return shapeStr;\r\n};\r\n\r\nITextElement.prototype.updateDocumentData = function(newData, index) {\r\n    this.textProperty.updateDocumentData(newData, index);\r\n    this.buildNewText();\r\n    this.renderInnerContent();\r\n};\r\n\r\nITextElement.prototype.canResizeFont = function(_canResize) {\r\n    this.textProperty.canResizeFont(_canResize);\r\n    this.buildNewText();\r\n    this.renderInnerContent();\r\n};\r\n\r\nITextElement.prototype.setMinimumFontSize = function(_fontSize) {\r\n    this.textProperty.setMinimumFontSize(_fontSize);\r\n    this.buildNewText();\r\n    this.renderInnerContent();\r\n};\r\n\r\nITextElement.prototype.applyTextPropertiesToMatrix = function(documentData, matrixHelper, lineNumber, xPos, yPos) {\r\n    if(documentData.ps){\r\n        matrixHelper.translate(documentData.ps[0],documentData.ps[1] + documentData.ascent,0);\r\n    }\r\n    matrixHelper.translate(0,-documentData.ls,0);\r\n    switch(documentData.j){\r\n        case 1:\r\n            matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]),0,0);\r\n            break;\r\n        case 2:\r\n            matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber] )/2,0,0);\r\n            break;\r\n    }\r\n    matrixHelper.translate(xPos, yPos, 0);\r\n};\r\n\r\nITextElement.prototype.buildColor = function(colorData) {\r\n    return 'rgb(' + Math.round(colorData[0]*255) + ',' + Math.round(colorData[1]*255) + ',' + Math.round(colorData[2]*255) + ')';\r\n};\r\n\r\nITextElement.prototype.buildShapeString = IShapeElement.prototype.buildShapeString;\r\n\r\nITextElement.prototype.emptyProp = new LetterProps();\r\n\r\nITextElement.prototype.destroy = function(){\r\n    \r\n};\r\nfunction ICompElement(){}\r\n\r\nextendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement, RenderableDOMElement], ICompElement);\r\n\r\nICompElement.prototype.initElement = function(data,globalData,comp) {\r\n    this.initFrame();\r\n    this.initBaseData(data, globalData, comp);\r\n    this.initTransform(data, globalData, comp);\r\n    this.initRenderable();\r\n    this.initHierarchy();\r\n    this.initRendererElement();\r\n    this.createContainerElements();\r\n    this.addMasks();\r\n    if(this.data.xt || !globalData.progressiveLoad){\r\n        this.buildAllItems();\r\n    }\r\n    this.hide();\r\n};\r\n\r\n/*ICompElement.prototype.hide = function(){\r\n    if(!this.hidden){\r\n        this.hideElement();\r\n        var i,len = this.elements.length;\r\n        for( i = 0; i < len; i+=1 ){\r\n            if(this.elements[i]){\r\n                this.elements[i].hide();\r\n            }\r\n        }\r\n    }\r\n};*/\r\n\r\nICompElement.prototype.prepareFrame = function(num){\r\n    this._mdf = false;\r\n    this.prepareRenderableFrame(num);\r\n    this.prepareProperties(num, this.isInRange);\r\n    if(!this.isInRange && !this.data.xt){\r\n        return;\r\n    }\r\n\r\n    if (!this.tm._placeholder) {\r\n        var timeRemapped = this.tm.v;\r\n        if(timeRemapped === this.data.op){\r\n            timeRemapped = this.data.op - 1;\r\n        }\r\n        this.renderedFrame = timeRemapped;\r\n    } else {\r\n        this.renderedFrame = num/this.data.sr;\r\n    }\r\n    var i,len = this.elements.length;\r\n    if(!this.completeLayers){\r\n        this.checkLayers(this.renderedFrame);\r\n    }\r\n    for( i = 0; i < len; i+=1 ){\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].prepareFrame(this.renderedFrame - this.layers[i].st);\r\n            if(this.elements[i]._mdf) {\r\n                this._mdf = true;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.renderInnerContent = function() {\r\n    var i,len = this.layers.length;\r\n    for( i = 0; i < len; i += 1 ){\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].renderFrame();\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.setElements = function(elems){\r\n    this.elements = elems;\r\n};\r\n\r\nICompElement.prototype.getElements = function(){\r\n    return this.elements;\r\n};\r\n\r\nICompElement.prototype.destroyElements = function(){\r\n    var i,len = this.layers.length;\r\n    for( i = 0; i < len; i+=1 ){\r\n        if(this.elements[i]){\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.destroy = function(){\r\n    this.destroyElements();\r\n    this.destroyBaseElement();\r\n};\r\n\r\nfunction IImageElement(data,globalData,comp){\r\n    this.assetData = globalData.getAssetData(data.refId);\r\n    this.initElement(data,globalData,comp);\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,SVGBaseElement,HierarchyElement,FrameElement,RenderableDOMElement], IImageElement);\r\n\r\nIImageElement.prototype.createContent = function(){\r\n\r\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\r\n\r\n    this.innerElem = createNS('image');\r\n    this.innerElem.setAttribute('width',this.assetData.w+\"px\");\r\n    this.innerElem.setAttribute('height',this.assetData.h+\"px\");\r\n    this.innerElem.setAttribute('preserveAspectRatio','xMidYMid slice');\r\n    this.innerElem.setAttributeNS('http://www.w3.org/1999/xlink','href',assetPath);\r\n    \r\n    this.layerElement.appendChild(this.innerElem);\r\n};\r\n\r\nfunction ISolidElement(data,globalData,comp){\r\n    this.initElement(data,globalData,comp);\r\n}\r\nextendPrototype([IImageElement], ISolidElement);\r\n\r\nISolidElement.prototype.createContent = function(){\r\n\r\n    var rect = createNS('rect');\r\n    ////rect.style.width = this.data.sw;\r\n    ////rect.style.height = this.data.sh;\r\n    ////rect.style.fill = this.data.sc;\r\n    rect.setAttribute('width',this.data.sw);\r\n    rect.setAttribute('height',this.data.sh);\r\n    rect.setAttribute('fill',this.data.sc);\r\n    this.layerElement.appendChild(rect);\r\n};\r\nfunction SVGCompElement(data,globalData,comp){\r\n    this.layers = data.layers;\r\n    this.supports3d = true;\r\n    this.completeLayers = false;\r\n    this.pendingElements = [];\r\n    this.elements = this.layers ? createSizedArray(this.layers.length) : [];\r\n    //this.layerElement = createNS('g');\r\n    this.initElement(data,globalData,comp);\r\n    this.tm = data.tm ? PropertyFactory.getProp(this,data.tm,0,globalData.frameRate,this.dynamicProperties) : {_placeholder:true};\r\n}\r\n\r\nextendPrototype([SVGRenderer, ICompElement, SVGBaseElement], SVGCompElement);\r\nfunction SVGTextElement(data,globalData,comp){\r\n    this.textSpans = [];\r\n    this.renderType = 'svg';\r\n    this.initElement(data,globalData,comp);\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,SVGBaseElement,HierarchyElement,FrameElement,RenderableDOMElement,ITextElement], SVGTextElement);\r\n\r\nSVGTextElement.prototype.createContent = function(){\r\n\r\n    if (this.data.singleShape && !this.globalData.fontManager.chars) {\r\n        this.textContainer = createNS('text');\r\n    }\r\n};\r\n\r\nSVGTextElement.prototype.buildTextContents = function(textArray) {\r\n    var i = 0, len = textArray.length;\r\n    var textContents = [], currentTextContent = '';\r\n    while (i < len) {\r\n        if(textArray[i] === String.fromCharCode(13)) {\r\n            textContents.push(currentTextContent);\r\n            currentTextContent = '';\r\n        } else {\r\n            currentTextContent += textArray[i];\r\n        }\r\n        i += 1;\r\n    }\r\n    textContents.push(currentTextContent);\r\n    return textContents;\r\n}\r\n\r\nSVGTextElement.prototype.buildNewText = function(){\r\n    var i, len;\r\n\r\n    var documentData = this.textProperty.currentData;\r\n    this.renderedLetters = createSizedArray(documentData ? documentData.l.length : 0);\r\n    if(documentData.fc) {\r\n        this.layerElement.setAttribute('fill', this.buildColor(documentData.fc));\r\n    }else{\r\n        this.layerElement.setAttribute('fill', 'rgba(0,0,0,0)');\r\n    }\r\n    if(documentData.sc){\r\n        this.layerElement.setAttribute('stroke', this.buildColor(documentData.sc));\r\n        this.layerElement.setAttribute('stroke-width', documentData.sw);\r\n    }\r\n    this.layerElement.setAttribute('font-size', documentData.finalSize);\r\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\r\n    if(fontData.fClass){\r\n        this.layerElement.setAttribute('class',fontData.fClass);\r\n    } else {\r\n        this.layerElement.setAttribute('font-family', fontData.fFamily);\r\n        var fWeight = documentData.fWeight, fStyle = documentData.fStyle;\r\n        this.layerElement.setAttribute('font-style', fStyle);\r\n        this.layerElement.setAttribute('font-weight', fWeight);\r\n    }\r\n\r\n    var letters = documentData.l || [];\r\n    var usesGlyphs = this.globalData.fontManager.chars;\r\n    len = letters.length;\r\n    if(!len){\r\n        return;\r\n    }\r\n    var tSpan;\r\n    var matrixHelper = this.mHelper;\r\n    var shapes, shapeStr = '', singleShape = this.data.singleShape;\r\n    var xPos = 0, yPos = 0, firstLine = true;\r\n    var trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n    if(singleShape && !usesGlyphs && !documentData.sz) {\r\n        var tElement = this.textContainer;\r\n        var justify = 'start';\r\n        switch(documentData.j) {\r\n            case 1:\r\n                justify = 'end';\r\n                break;\r\n            case 2:\r\n                justify = 'middle';\r\n                break;\r\n        }\r\n        tElement.setAttribute('text-anchor',justify);\r\n        tElement.setAttribute('letter-spacing',trackingOffset);\r\n        var textContent = this.buildTextContents(documentData.finalText);\r\n        len = textContent.length;\r\n        yPos = documentData.ps ? documentData.ps[1] + documentData.ascent : 0;\r\n        for ( i = 0; i < len; i += 1) {\r\n            tSpan = this.textSpans[i] || createNS('tspan');\r\n            tSpan.textContent = textContent[i];\r\n            tSpan.setAttribute('x', 0);\r\n            tSpan.setAttribute('y', yPos);\r\n            tSpan.style.display = 'inherit';\r\n            tElement.appendChild(tSpan);\r\n            this.textSpans[i] = tSpan;\r\n            yPos += documentData.finalLineHeight;\r\n        }\r\n        \r\n        this.layerElement.appendChild(tElement);\r\n    } else {\r\n        var cachedSpansLength = this.textSpans.length;\r\n        var shapeData, charData;\r\n        for (i = 0; i < len; i += 1) {\r\n            if(!usesGlyphs || !singleShape || i === 0){\r\n                tSpan = cachedSpansLength > i ? this.textSpans[i] : createNS(usesGlyphs?'path':'text');\r\n                if (cachedSpansLength <= i) {\r\n                    tSpan.setAttribute('stroke-linecap', 'butt');\r\n                    tSpan.setAttribute('stroke-linejoin','round');\r\n                    tSpan.setAttribute('stroke-miterlimit','4');\r\n                    this.textSpans[i] = tSpan;\r\n                    this.layerElement.appendChild(tSpan);\r\n                }\r\n                tSpan.style.display = 'inherit';\r\n            }\r\n            \r\n            matrixHelper.reset();\r\n            matrixHelper.scale(documentData.finalSize / 100, documentData.finalSize / 100);\r\n            if (singleShape) {\r\n                if(letters[i].n) {\r\n                    xPos = -trackingOffset;\r\n                    yPos += documentData.yOffset;\r\n                    yPos += firstLine ? 1 : 0;\r\n                    firstLine = false;\r\n                }\r\n                this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\r\n                xPos += letters[i].l || 0;\r\n                //xPos += letters[i].val === ' ' ? 0 : trackingOffset;\r\n                xPos += trackingOffset;\r\n            }\r\n            if(usesGlyphs) {\r\n                charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\r\n                shapeData = charData && charData.data || {};\r\n                shapes = shapeData.shapes ? shapeData.shapes[0].it : [];\r\n                if(!singleShape){\r\n                    tSpan.setAttribute('d',this.createPathShape(matrixHelper,shapes));\r\n                } else {\r\n                    shapeStr += this.createPathShape(matrixHelper,shapes);\r\n                }\r\n            } else {\r\n                if(singleShape) {\r\n                    tSpan.setAttribute(\"transform\", \"translate(\" + matrixHelper.props[12] + \",\" + matrixHelper.props[13] + \")\");\r\n                }\r\n                tSpan.textContent = letters[i].val;\r\n                tSpan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\",\"preserve\");\r\n            }\r\n            //\r\n        }\r\n        if (singleShape) {\r\n            tSpan.setAttribute('d',shapeStr);\r\n        }\r\n    }\r\n    while (i < this.textSpans.length){\r\n        this.textSpans[i].style.display = 'none';\r\n        i += 1;\r\n    }\r\n    \r\n    this._sizeChanged = true;\r\n};\r\n\r\nSVGTextElement.prototype.sourceRectAtTime = function(time){\r\n    this.prepareFrame(this.comp.renderedFrame - this.data.st);\r\n    this.renderInnerContent();\r\n    if(this._sizeChanged){\r\n        this._sizeChanged = false;\r\n        var textBox = this.layerElement.getBBox();\r\n        this.bbox = {\r\n            top: textBox.y,\r\n            left: textBox.x,\r\n            width: textBox.width,\r\n            height: textBox.height\r\n        };\r\n    }\r\n    return this.bbox;\r\n};\r\n\r\nSVGTextElement.prototype.renderInnerContent = function(){\r\n\r\n    if(!this.data.singleShape){\r\n        this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\r\n        if(this.lettersChangedFlag || this.textAnimator.lettersChangedFlag){\r\n            this._sizeChanged = true;\r\n            var  i,len;\r\n            var renderedLetters = this.textAnimator.renderedLetters;\r\n\r\n            var letters = this.textProperty.currentData.l;\r\n\r\n            len = letters.length;\r\n            var renderedLetter, textSpan;\r\n            for(i=0;i<len;i+=1){\r\n                if(letters[i].n){\r\n                    continue;\r\n                }\r\n                renderedLetter = renderedLetters[i];\r\n                textSpan = this.textSpans[i];\r\n                if(renderedLetter._mdf.m) {\r\n                    textSpan.setAttribute('transform',renderedLetter.m);\r\n                }\r\n                if(renderedLetter._mdf.o) {\r\n                    textSpan.setAttribute('opacity',renderedLetter.o);\r\n                }\r\n                if(renderedLetter._mdf.sw){\r\n                    textSpan.setAttribute('stroke-width',renderedLetter.sw);\r\n                }\r\n                if(renderedLetter._mdf.sc){\r\n                    textSpan.setAttribute('stroke',renderedLetter.sc);\r\n                }\r\n                if(renderedLetter._mdf.fc){\r\n                    textSpan.setAttribute('fill',renderedLetter.fc);\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nfunction SVGShapeElement(data,globalData,comp){\r\n    //List of drawable elements\r\n    this.shapes = [];\r\n    // Full shape data\r\n    this.shapesData = data.shapes;\r\n    //List of styles that will be applied to shapes\r\n    this.stylesList = [];\r\n    //List of modifiers that will be applied to shapes\r\n    this.shapeModifiers = [];\r\n    //List of items in shape tree\r\n    this.itemsData = [];\r\n    //List of items in previous shape tree\r\n    this.processedElements = [];\r\n    this.initElement(data,globalData,comp);\r\n    //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\r\n    // List of elements that have been created\r\n    this.prevViewData = [];\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,SVGBaseElement,IShapeElement,HierarchyElement,FrameElement,RenderableDOMElement], SVGShapeElement);\r\n\r\nSVGShapeElement.prototype.initSecondaryElement = function() {\r\n};\r\n\r\nSVGShapeElement.prototype.identityMatrix = new Matrix();\r\n\r\nSVGShapeElement.prototype.buildExpressionInterface = function(){};\r\n\r\nSVGShapeElement.prototype.createContent = function(){\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement,this.dynamicProperties, 0, [], true);\r\n};\r\n\r\nSVGShapeElement.prototype.createStyleElement = function(data, level, dynamicProperties){\r\n    //TODO: prevent drawing of hidden styles\r\n    var elementData;\r\n    var styleOb = new SVGStyleData(data, level);\r\n\r\n    var pathElement = styleOb.pElem;\r\n    if(data.ty === 'st') {\r\n        elementData = new SVGStrokeStyleData(this, data, dynamicProperties, styleOb);\r\n    } else if(data.ty === 'fl') {\r\n        elementData = new SVGFillStyleData(this, data, dynamicProperties, styleOb);\r\n    } else if(data.ty === 'gf' || data.ty === 'gs') {\r\n        var gradientConstructor = data.ty === 'gf' ? SVGGradientFillStyleData : SVGGradientStrokeStyleData;\r\n        elementData = new gradientConstructor(this, data, dynamicProperties, styleOb);\r\n        this.globalData.defs.appendChild(elementData.gf);\r\n        if (elementData.maskId) {\r\n            this.globalData.defs.appendChild(elementData.ms);\r\n            this.globalData.defs.appendChild(elementData.of);\r\n            pathElement.setAttribute('mask','url(#' + elementData.maskId + ')');\r\n        }\r\n    }\r\n    \r\n    if(data.ty === 'st' || data.ty === 'gs') {\r\n        pathElement.setAttribute('stroke-linecap', this.lcEnum[data.lc] || 'round');\r\n        pathElement.setAttribute('stroke-linejoin',this.ljEnum[data.lj] || 'round');\r\n        pathElement.setAttribute('fill-opacity','0');\r\n        if(data.lj === 1) {\r\n            pathElement.setAttribute('stroke-miterlimit',data.ml);\r\n        }\r\n    }\r\n\r\n    if(data.r === 2) {\r\n        pathElement.setAttribute('fill-rule', 'evenodd');\r\n    }\r\n\r\n    if(data.ln){\r\n        pathElement.setAttribute('id',data.ln);\r\n    }\r\n    if(data.cl){\r\n        pathElement.setAttribute('class',data.cl);\r\n    }\r\n    this.stylesList.push(styleOb);\r\n    return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.createGroupElement = function(data) {\r\n    var elementData = new ShapeGroupData();\r\n    if(data.ln){\r\n        elementData.gr.setAttribute('id',data.ln);\r\n    }\r\n    return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.createTransformElement = function(data, dynamicProperties) {\r\n    return new SVGTransformData(TransformPropertyFactory.getTransformProperty(this,data,dynamicProperties), PropertyFactory.getProp(this,data.o,0,0.01,dynamicProperties));\r\n};\r\n\r\nSVGShapeElement.prototype.createShapeElement = function(data, ownTransformers, level, dynamicProperties) {\r\n    var ty = 4;\r\n    if(data.ty === 'rc'){\r\n        ty = 5;\r\n    }else if(data.ty === 'el'){\r\n        ty = 6;\r\n    }else if(data.ty === 'sr'){\r\n        ty = 7;\r\n    }\r\n    var shapeProperty = ShapePropertyFactory.getShapeProp(this,data,ty,dynamicProperties);\r\n    var elementData = new SVGShapeData(ownTransformers, level, shapeProperty);\r\n    this.shapes.push(elementData.sh);\r\n    this.addShapeToModifiers(elementData);\r\n    return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.setElementStyles = function(elementData){\r\n    var arr = elementData.styles;\r\n    var j, jLen = this.stylesList.length;\r\n    for (j = 0; j < jLen; j += 1) {\r\n        if (!this.stylesList[j].closed) {\r\n            arr.push(this.stylesList[j]);\r\n        }\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.reloadShapes = function(){\r\n    this._isFirstFrame = true;\r\n    var i, len = this.itemsData.length;\r\n    for( i = 0; i < len; i += 1) {\r\n        this.prevViewData[i] = this.itemsData[i];\r\n    }\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement,this.dynamicProperties, 0, [], true);\r\n    len = this.dynamicProperties.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        this.dynamicProperties[i].getValue();\r\n    }\r\n    this.renderModifiers();\r\n};\r\n\r\nSVGShapeElement.prototype.searchShapes = function(arr,itemsData,prevViewData,container,dynamicProperties, level, transformers, render){\r\n    var ownTransformers = [].concat(transformers);\r\n    var i, len = arr.length - 1;\r\n    var j, jLen;\r\n    var ownStyles = [], ownModifiers = [], styleOb, currentTransform, modifier, processedPos;\r\n    for(i=len;i>=0;i-=1){\r\n        processedPos = this.searchProcessedElement(arr[i]);\r\n        if(!processedPos){\r\n            arr[i]._render = render;\r\n        } else {\r\n            itemsData[i] = prevViewData[processedPos - 1];\r\n        }\r\n        if(arr[i].ty == 'fl' || arr[i].ty == 'st' || arr[i].ty == 'gf' || arr[i].ty == 'gs'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createStyleElement(arr[i], level, dynamicProperties);\r\n            } else {\r\n                itemsData[i].style.closed = false;\r\n            }\r\n            if(arr[i]._render){\r\n                container.appendChild(itemsData[i].style.pElem);\r\n            }\r\n            ownStyles.push(itemsData[i].style);\r\n        }else if(arr[i].ty == 'gr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createGroupElement(arr[i]);\r\n            } else {\r\n                jLen = itemsData[i].it.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    itemsData[i].prevViewData[j] = itemsData[i].it[j];\r\n                }\r\n            }\r\n            this.searchShapes(arr[i].it,itemsData[i].it,itemsData[i].prevViewData,itemsData[i].gr,dynamicProperties, level + 1, ownTransformers, render);\r\n            if(arr[i]._render){\r\n                container.appendChild(itemsData[i].gr);\r\n            }\r\n        }else if(arr[i].ty == 'tr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createTransformElement(arr[i], dynamicProperties);\r\n            }\r\n            currentTransform = itemsData[i].transform;\r\n            ownTransformers.push(currentTransform);\r\n        }else if(arr[i].ty == 'sh' || arr[i].ty == 'rc' || arr[i].ty == 'el' || arr[i].ty == 'sr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createShapeElement(arr[i], ownTransformers, level, dynamicProperties);\r\n            }\r\n            this.setElementStyles(itemsData[i]);\r\n\r\n        }else if(arr[i].ty == 'tm' || arr[i].ty == 'rd' || arr[i].ty == 'ms'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                modifier.init(this,arr[i],dynamicProperties);\r\n                itemsData[i] = modifier;\r\n                this.shapeModifiers.push(modifier);\r\n            } else {\r\n                modifier = itemsData[i];\r\n                modifier.closed = false;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        }else if(arr[i].ty == 'rp'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                itemsData[i] = modifier;\r\n                modifier.init(this,arr,i,itemsData,dynamicProperties);\r\n                this.shapeModifiers.push(modifier);\r\n                render = false;\r\n            }else{\r\n                modifier = itemsData[i];\r\n                modifier.closed = true;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        }\r\n        this.addProcessedElement(arr[i], i + 1);\r\n    }\r\n    len = ownStyles.length;\r\n    for(i=0;i<len;i+=1){\r\n        ownStyles[i].closed = true;\r\n    }\r\n    len = ownModifiers.length;\r\n    for(i=0;i<len;i+=1){\r\n        ownModifiers[i].closed = true;\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.renderInnerContent = function() {\r\n    this.renderModifiers();\r\n    var i, len = this.stylesList.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.stylesList[i].reset();\r\n    }\r\n    this.renderShape(this.shapesData, this.itemsData, this.layerElement);\r\n\r\n    for (i = 0; i < len; i += 1) {\r\n        if (this.stylesList[i]._mdf || this._isFirstFrame) {\r\n            if(this.stylesList[i].msElem){\r\n                this.stylesList[i].msElem.setAttribute('d', this.stylesList[i].d);\r\n                //Adding M0 0 fixes same mask bug on all browsers\r\n                this.stylesList[i].d = 'M0 0' + this.stylesList[i].d;\r\n            }\r\n            this.stylesList[i].pElem.setAttribute('d', this.stylesList[i].d || 'M0 0');\r\n        }\r\n    }\r\n};\r\n\r\n\r\nSVGShapeElement.prototype.renderShape = function(items, data, container) {\r\n    var i, len = items.length - 1;\r\n    var ty;\r\n    for(i=0;i<=len;i+=1){\r\n        ty = items[i].ty;\r\n        if(ty == 'tr'){\r\n            if(this._isFirstFrame || data[i].transform.op._mdf){\r\n                container.setAttribute('opacity',data[i].transform.op.v);\r\n            }\r\n            if(this._isFirstFrame || data[i].transform.mProps._mdf){\r\n                container.setAttribute('transform',data[i].transform.mProps.v.to2dCSS());\r\n            }\r\n        }else if(items[i]._render && (ty == 'sh' || ty == 'el' || ty == 'rc' || ty == 'sr')){\r\n            this.renderPath(data[i]);\r\n        }else if(ty == 'fl'){\r\n            this.renderFill(items[i],data[i]);\r\n        }else if(ty == 'gf'){\r\n            this.renderGradient(items[i],data[i]);\r\n        }else if(ty == 'gs'){\r\n            this.renderGradient(items[i],data[i]);\r\n            this.renderStroke(items[i],data[i]);\r\n        }else if(ty == 'st'){\r\n            this.renderStroke(items[i],data[i]);\r\n        }else if(ty == 'gr'){\r\n            this.renderShape(items[i].it,data[i].it, data[i].gr);\r\n        }else if(ty == 'tm'){\r\n            //\r\n        }\r\n    }\r\n\r\n};\r\n\r\nSVGShapeElement.prototype.renderPath = function(itemData){\r\n    var j, jLen,pathStringTransformed,redraw,pathNodes,l, lLen = itemData.styles.length;\r\n    var lvl = itemData.lvl;\r\n    var paths, mat, props, iterations, k;\r\n    for(l=0;l<lLen;l+=1){\r\n        redraw = itemData.sh._mdf || this._isFirstFrame;\r\n        if(itemData.styles[l].lvl < lvl){\r\n            mat = this.mHelper.reset();\r\n            iterations = lvl - itemData.styles[l].lvl;\r\n            k = itemData.transformers.length-1;\r\n            while(iterations > 0) {\r\n                redraw = itemData.transformers[k].mProps._mdf || redraw;\r\n                props = itemData.transformers[k].mProps.v.props;\r\n                mat.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\r\n                iterations --;\r\n                k --;\r\n            }\r\n        } else {\r\n            mat = this.identityMatrix;\r\n        }\r\n        paths = itemData.sh.paths;\r\n        jLen = paths._length;\r\n        if(redraw){\r\n            pathStringTransformed = '';\r\n            for(j=0;j<jLen;j+=1){\r\n                pathNodes = paths.shapes[j];\r\n                if(pathNodes && pathNodes._length){\r\n                    pathStringTransformed += this.buildShapeString(pathNodes, pathNodes._length, pathNodes.c, mat);\r\n                }\r\n            }\r\n            itemData.caches[l] = pathStringTransformed;\r\n        } else {\r\n            pathStringTransformed = itemData.caches[l];\r\n        }\r\n        itemData.styles[l].d += pathStringTransformed;\r\n        itemData.styles[l]._mdf = redraw || itemData.styles[l]._mdf;\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.renderFill = function(styleData,itemData){\r\n    var styleElem = itemData.style;\r\n\r\n    if(itemData.c._mdf || this._isFirstFrame){\r\n        styleElem.pElem.setAttribute('fill','rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')');\r\n    }\r\n    if(itemData.o._mdf || this._isFirstFrame){\r\n        styleElem.pElem.setAttribute('fill-opacity',itemData.o.v);\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.renderGradient = function(styleData, itemData) {\r\n    var gfill = itemData.gf;\r\n    var hasOpacity = itemData.g._hasOpacity;\r\n    var pt1 = itemData.s.v, pt2 = itemData.e.v;\r\n\r\n    if (itemData.o._mdf || this._isFirstFrame) {\r\n        var attr = styleData.ty === 'gf' ? 'fill-opacity' : 'stroke-opacity';\r\n        itemData.style.pElem.setAttribute(attr, itemData.o.v);\r\n    }\r\n    if (itemData.s._mdf || this._isFirstFrame) {\r\n        var attr1 = styleData.t === 1 ? 'x1' : 'cx';\r\n        var attr2 = attr1 === 'x1' ? 'y1' : 'cy';\r\n        gfill.setAttribute(attr1, pt1[0]);\r\n        gfill.setAttribute(attr2, pt1[1]);\r\n        if (hasOpacity && !itemData.g._collapsable) {\r\n            itemData.of.setAttribute(attr1, pt1[0]);\r\n            itemData.of.setAttribute(attr2, pt1[1]);\r\n        }\r\n    }\r\n    var stops, i, len, stop;\r\n    if (itemData.g._cmdf || this._isFirstFrame) {\r\n        stops = itemData.cst;\r\n        var cValues = itemData.g.c;\r\n        len = stops.length;\r\n        for (i = 0; i < len; i += 1){\r\n            stop = stops[i];\r\n            stop.setAttribute('offset', cValues[i * 4] + '%');\r\n            stop.setAttribute('stop-color','rgb('+ cValues[i * 4 + 1] + ',' + cValues[i * 4 + 2] + ','+cValues[i * 4 + 3] + ')');\r\n        }\r\n    }\r\n    if (hasOpacity && (itemData.g._omdf || this._isFirstFrame)) {\r\n        var oValues = itemData.g.o;\r\n        if(itemData.g._collapsable) {\r\n            stops = itemData.cst;\r\n        } else {\r\n            stops = itemData.ost;\r\n        }\r\n        len = stops.length;\r\n        for (i = 0; i < len; i += 1) {\r\n            stop = stops[i];\r\n            if(!itemData.g._collapsable) {\r\n                stop.setAttribute('offset', oValues[i * 2] + '%');\r\n            }\r\n            stop.setAttribute('stop-opacity', oValues[i * 2 + 1]);\r\n        }\r\n    }\r\n    if (styleData.t === 1) {\r\n        if (itemData.e._mdf  || this._isFirstFrame) {\r\n            gfill.setAttribute('x2', pt2[0]);\r\n            gfill.setAttribute('y2', pt2[1]);\r\n            if (hasOpacity && !itemData.g._collapsable) {\r\n                itemData.of.setAttribute('x2', pt2[0]);\r\n                itemData.of.setAttribute('y2', pt2[1]);\r\n            }\r\n        }\r\n    } else {\r\n        var rad;\r\n        if (itemData.s._mdf || itemData.e._mdf || this._isFirstFrame) {\r\n            rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\r\n            gfill.setAttribute('r', rad);\r\n            if(hasOpacity && !itemData.g._collapsable){\r\n                itemData.of.setAttribute('r', rad);\r\n            }\r\n        }\r\n        if (itemData.e._mdf || itemData.h._mdf || itemData.a._mdf || this._isFirstFrame) {\r\n            if (!rad) {\r\n                rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\r\n            }\r\n            var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);\r\n\r\n            var percent = itemData.h.v >= 1 ? 0.99 : itemData.h.v <= -1 ? -0.99: itemData.h.v;\r\n            var dist = rad * percent;\r\n            var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];\r\n            var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];\r\n            gfill.setAttribute('fx', x);\r\n            gfill.setAttribute('fy', y);\r\n            if (hasOpacity && !itemData.g._collapsable) {\r\n                itemData.of.setAttribute('fx', x);\r\n                itemData.of.setAttribute('fy', y);\r\n            }\r\n        }\r\n        //gfill.setAttribute('fy','200');\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.renderStroke = function(styleData, itemData) {\r\n    var styleElem = itemData.style;\r\n    var d = itemData.d;\r\n    if (d && (d._mdf || this._isFirstFrame)) {\r\n        styleElem.pElem.setAttribute('stroke-dasharray', d.dashStr);\r\n        styleElem.pElem.setAttribute('stroke-dashoffset', d.dashoffset[0]);\r\n    }\r\n    if(itemData.c && (itemData.c._mdf || this._isFirstFrame)){\r\n        styleElem.pElem.setAttribute('stroke','rgb(' + bm_floor(itemData.c.v[0]) + ',' + bm_floor(itemData.c.v[1]) + ',' + bm_floor(itemData.c.v[2]) + ')');\r\n    }\r\n    if(itemData.o._mdf || this._isFirstFrame){\r\n        styleElem.pElem.setAttribute('stroke-opacity', itemData.o.v);\r\n    }\r\n    if(itemData.w._mdf || this._isFirstFrame){\r\n        styleElem.pElem.setAttribute('stroke-width', itemData.w.v);\r\n        if(styleElem.msElem){\r\n            styleElem.msElem.setAttribute('stroke-width', itemData.w.v);\r\n        }\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.destroy = function(){\r\n    this.destroyBaseElement();\r\n    this.shapeData = null;\r\n    this.itemsData = null;\r\n};\r\n\r\nfunction SVGTintFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','linearRGB');\r\n    feColorMatrix.setAttribute('values','0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f1');\r\n    filter.appendChild(feColorMatrix);\r\n    feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n    feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f2');\r\n    filter.appendChild(feColorMatrix);\r\n    this.matrixFilter = feColorMatrix;\r\n    if(filterManager.effectElements[2].p.v !== 100 || filterManager.effectElements[2].p.k){\r\n        var feMerge = createNS('feMerge');\r\n        filter.appendChild(feMerge);\r\n        var feMergeNode;\r\n        feMergeNode = createNS('feMergeNode');\r\n        feMergeNode.setAttribute('in','SourceGraphic');\r\n        feMerge.appendChild(feMergeNode);\r\n        feMergeNode = createNS('feMergeNode');\r\n        feMergeNode.setAttribute('in','f2');\r\n        feMerge.appendChild(feMergeNode);\r\n    }\r\n}\r\n\r\nSVGTintFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var colorBlack = this.filterManager.effectElements[0].p.v;\r\n        var colorWhite = this.filterManager.effectElements[1].p.v;\r\n        var opacity = this.filterManager.effectElements[2].p.v/100;\r\n        this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');\r\n    }\r\n};\r\nfunction SVGFillFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n    feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\r\n    filter.appendChild(feColorMatrix);\r\n    this.matrixFilter = feColorMatrix;\r\n}\r\nSVGFillFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var color = this.filterManager.effectElements[2].p.v;\r\n        var opacity = this.filterManager.effectElements[6].p.v;\r\n        this.matrixFilter.setAttribute('values','0 0 0 0 '+color[0]+' 0 0 0 0 '+color[1]+' 0 0 0 0 '+color[2]+' 0 0 0 '+opacity+' 0');\r\n    }\r\n};\r\nfunction SVGStrokeEffect(elem, filterManager){\r\n    this.initialized = false;\r\n    this.filterManager = filterManager;\r\n    this.elem = elem;\r\n    this.paths = [];\r\n}\r\n\r\nSVGStrokeEffect.prototype.initialize = function(){\r\n\r\n    var elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\r\n    var path,groupPath, i, len;\r\n    if(this.filterManager.effectElements[1].p.v === 1){\r\n        len = this.elem.maskManager.masksProperties.length;\r\n        i = 0;\r\n    } else {\r\n        i = this.filterManager.effectElements[0].p.v - 1;\r\n        len = i + 1;\r\n    }\r\n    groupPath = createNS('g'); \r\n    groupPath.setAttribute('fill','none');\r\n    groupPath.setAttribute('stroke-linecap','round');\r\n    groupPath.setAttribute('stroke-dashoffset',1);\r\n    for(i;i<len;i+=1){\r\n        path = createNS('path');\r\n        groupPath.appendChild(path);\r\n        this.paths.push({p:path,m:i});\r\n    }\r\n    if(this.filterManager.effectElements[10].p.v === 3){\r\n        var mask = createNS('mask');\r\n        var id = 'stms_' + randomString(10);\r\n        mask.setAttribute('id',id);\r\n        mask.setAttribute('mask-type','alpha');\r\n        mask.appendChild(groupPath);\r\n        this.elem.globalData.defs.appendChild(mask);\r\n        var g = createNS('g');\r\n        g.setAttribute('mask','url(' + locationHref + '#'+id+')');\r\n        if(elemChildren[0]){\r\n            g.appendChild(elemChildren[0]);\r\n        }\r\n        this.elem.layerElement.appendChild(g);\r\n        this.masker = mask;\r\n        groupPath.setAttribute('stroke','#fff');\r\n    } else if(this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2){\r\n        if(this.filterManager.effectElements[10].p.v === 2){\r\n            elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\r\n            while(elemChildren.length){\r\n                this.elem.layerElement.removeChild(elemChildren[0]);\r\n            }\r\n        }\r\n        this.elem.layerElement.appendChild(groupPath);\r\n        this.elem.layerElement.removeAttribute('mask');\r\n        groupPath.setAttribute('stroke','#fff');\r\n    }\r\n    this.initialized = true;\r\n    this.pathMasker = groupPath;\r\n};\r\n\r\nSVGStrokeEffect.prototype.renderFrame = function(forceRender){\r\n    if(!this.initialized){\r\n        this.initialize();\r\n    }\r\n    var i, len = this.paths.length;\r\n    var mask, path;\r\n    for(i=0;i<len;i+=1){\r\n        mask = this.elem.maskManager.viewData[this.paths[i].m];\r\n        path = this.paths[i].p;\r\n        if(forceRender || this.filterManager._mdf || mask.prop._mdf){\r\n            path.setAttribute('d',mask.lastPath);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[9].p._mdf || this.filterManager.effectElements[4].p._mdf || this.filterManager.effectElements[7].p._mdf || this.filterManager.effectElements[8].p._mdf || mask.prop._mdf){\r\n            var dasharrayValue;\r\n            if(this.filterManager.effectElements[7].p.v !== 0 || this.filterManager.effectElements[8].p.v !== 100){\r\n                var s = Math.min(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)/100;\r\n                var e = Math.max(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)/100;\r\n                var l = path.getTotalLength();\r\n                dasharrayValue = '0 0 0 ' + l*s + ' ';\r\n                var lineLength = l*(e-s);\r\n                var segment = 1+this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100;\r\n                var units = Math.floor(lineLength/segment);\r\n                var j;\r\n                for(j=0;j<units;j+=1){\r\n                    dasharrayValue += '1 ' + this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100 + ' ';\r\n                }\r\n                dasharrayValue += '0 ' + l*10 + ' 0 0';\r\n            } else {\r\n                dasharrayValue = '1 ' + this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100;\r\n            }\r\n            path.setAttribute('stroke-dasharray',dasharrayValue);\r\n        }\r\n    }\r\n    if(forceRender || this.filterManager.effectElements[4].p._mdf){\r\n        this.pathMasker.setAttribute('stroke-width',this.filterManager.effectElements[4].p.v*2);\r\n    }\r\n    \r\n    if(forceRender || this.filterManager.effectElements[6].p._mdf){\r\n        this.pathMasker.setAttribute('opacity',this.filterManager.effectElements[6].p.v);\r\n    }\r\n    if(this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2){\r\n        if(forceRender || this.filterManager.effectElements[3].p._mdf){\r\n            var color = this.filterManager.effectElements[3].p.v;\r\n            this.pathMasker.setAttribute('stroke','rgb('+bm_floor(color[0]*255)+','+bm_floor(color[1]*255)+','+bm_floor(color[2]*255)+')');\r\n        }\r\n    }\r\n};\r\nfunction SVGTritoneFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','linearRGB');\r\n    feColorMatrix.setAttribute('values','0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f1');\r\n    filter.appendChild(feColorMatrix);\r\n    var feComponentTransfer = createNS('feComponentTransfer');\r\n    feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n    filter.appendChild(feComponentTransfer);\r\n    this.matrixFilter = feComponentTransfer;\r\n    var feFuncR = createNS('feFuncR');\r\n    feFuncR.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncR);\r\n    this.feFuncR = feFuncR;\r\n    var feFuncG = createNS('feFuncG');\r\n    feFuncG.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncG);\r\n    this.feFuncG = feFuncG;\r\n    var feFuncB = createNS('feFuncB');\r\n    feFuncB.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncB);\r\n    this.feFuncB = feFuncB;\r\n}\r\n\r\nSVGTritoneFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var color1 = this.filterManager.effectElements[0].p.v;\r\n        var color2 = this.filterManager.effectElements[1].p.v;\r\n        var color3 = this.filterManager.effectElements[2].p.v;\r\n        var tableR = color3[0] + ' ' + color2[0] + ' ' + color1[0];\r\n        var tableG = color3[1] + ' ' + color2[1] + ' ' + color1[1];\r\n        var tableB = color3[2] + ' ' + color2[2] + ' ' + color1[2];\r\n        this.feFuncR.setAttribute('tableValues', tableR);\r\n        this.feFuncG.setAttribute('tableValues', tableG);\r\n        this.feFuncB.setAttribute('tableValues', tableB);\r\n        //var opacity = this.filterManager.effectElements[2].p.v/100;\r\n        //this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');\r\n    }\r\n};\r\nfunction SVGProLevelsFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var effectElements = this.filterManager.effectElements;\r\n    var feComponentTransfer = createNS('feComponentTransfer');\r\n    var feFuncR, feFuncG, feFuncB;\r\n    \r\n    if(effectElements[10].p.k || effectElements[10].p.v !== 0 || effectElements[11].p.k || effectElements[11].p.v !== 1 || effectElements[12].p.k || effectElements[12].p.v !== 1 || effectElements[13].p.k || effectElements[13].p.v !== 0 || effectElements[14].p.k || effectElements[14].p.v !== 1){\r\n        this.feFuncR = this.createFeFunc('feFuncR', feComponentTransfer);\r\n    }\r\n    if(effectElements[17].p.k || effectElements[17].p.v !== 0 || effectElements[18].p.k || effectElements[18].p.v !== 1 || effectElements[19].p.k || effectElements[19].p.v !== 1 || effectElements[20].p.k || effectElements[20].p.v !== 0 || effectElements[21].p.k || effectElements[21].p.v !== 1){\r\n        this.feFuncG = this.createFeFunc('feFuncG', feComponentTransfer);\r\n    }\r\n    if(effectElements[24].p.k || effectElements[24].p.v !== 0 || effectElements[25].p.k || effectElements[25].p.v !== 1 || effectElements[26].p.k || effectElements[26].p.v !== 1 || effectElements[27].p.k || effectElements[27].p.v !== 0 || effectElements[28].p.k || effectElements[28].p.v !== 1){\r\n        this.feFuncB = this.createFeFunc('feFuncB', feComponentTransfer);\r\n    }\r\n    if(effectElements[31].p.k || effectElements[31].p.v !== 0 || effectElements[32].p.k || effectElements[32].p.v !== 1 || effectElements[33].p.k || effectElements[33].p.v !== 1 || effectElements[34].p.k || effectElements[34].p.v !== 0 || effectElements[35].p.k || effectElements[35].p.v !== 1){\r\n        this.feFuncA = this.createFeFunc('feFuncA', feComponentTransfer);\r\n    }\r\n    \r\n    if(this.feFuncR || this.feFuncG || this.feFuncB || this.feFuncA){\r\n        feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n        filter.appendChild(feComponentTransfer);\r\n        feComponentTransfer = createNS('feComponentTransfer');\r\n    }\r\n\r\n    if(effectElements[3].p.k || effectElements[3].p.v !== 0 || effectElements[4].p.k || effectElements[4].p.v !== 1 || effectElements[5].p.k || effectElements[5].p.v !== 1 || effectElements[6].p.k || effectElements[6].p.v !== 0 || effectElements[7].p.k || effectElements[7].p.v !== 1){\r\n\r\n        feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n        filter.appendChild(feComponentTransfer);\r\n        this.feFuncRComposed = this.createFeFunc('feFuncR', feComponentTransfer);\r\n        this.feFuncGComposed = this.createFeFunc('feFuncG', feComponentTransfer);\r\n        this.feFuncBComposed = this.createFeFunc('feFuncB', feComponentTransfer);\r\n    }\r\n}\r\n\r\nSVGProLevelsFilter.prototype.createFeFunc = function(type, feComponentTransfer) {\r\n    var feFunc = createNS(type);\r\n    feFunc.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFunc);\r\n    return feFunc;\r\n};\r\n\r\nSVGProLevelsFilter.prototype.getTableValue = function(inputBlack, inputWhite, gamma, outputBlack, outputWhite) {\r\n    var cnt = 0;\r\n    var segments = 256;\r\n    var perc;\r\n    var min = Math.min(inputBlack, inputWhite);\r\n    var max = Math.max(inputBlack, inputWhite);\r\n    var table = Array.call(null,{length:segments});\r\n    var colorValue;\r\n    var pos = 0;\r\n    var outputDelta = outputWhite - outputBlack; \r\n    var inputDelta = inputWhite - inputBlack; \r\n    while(cnt <= 256) {\r\n        perc = cnt/256;\r\n        if(perc <= min){\r\n            colorValue = inputDelta < 0 ? outputWhite : outputBlack;\r\n        } else if(perc >= max){\r\n            colorValue = inputDelta < 0 ? outputBlack : outputWhite;\r\n        } else {\r\n            colorValue = (outputBlack + outputDelta * Math.pow((perc - inputBlack) / inputDelta, 1 / gamma));\r\n        }\r\n        table[pos++] = colorValue;\r\n        cnt += 256/(segments-1);\r\n    }\r\n    return table.join(' ');\r\n};\r\n\r\nSVGProLevelsFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var val, cnt, perc, bezier;\r\n        var effectElements = this.filterManager.effectElements;\r\n        if(this.feFuncRComposed && (forceRender || effectElements[3].p._mdf || effectElements[4].p._mdf || effectElements[5].p._mdf || effectElements[6].p._mdf || effectElements[7].p._mdf)){\r\n            val = this.getTableValue(effectElements[3].p.v,effectElements[4].p.v,effectElements[5].p.v,effectElements[6].p.v,effectElements[7].p.v);\r\n            this.feFuncRComposed.setAttribute('tableValues',val);\r\n            this.feFuncGComposed.setAttribute('tableValues',val);\r\n            this.feFuncBComposed.setAttribute('tableValues',val);\r\n        }\r\n\r\n\r\n        if(this.feFuncR && (forceRender || effectElements[10].p._mdf || effectElements[11].p._mdf || effectElements[12].p._mdf || effectElements[13].p._mdf || effectElements[14].p._mdf)){\r\n            val = this.getTableValue(effectElements[10].p.v,effectElements[11].p.v,effectElements[12].p.v,effectElements[13].p.v,effectElements[14].p.v);\r\n            this.feFuncR.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncG && (forceRender || effectElements[17].p._mdf || effectElements[18].p._mdf || effectElements[19].p._mdf || effectElements[20].p._mdf || effectElements[21].p._mdf)){\r\n            val = this.getTableValue(effectElements[17].p.v,effectElements[18].p.v,effectElements[19].p.v,effectElements[20].p.v,effectElements[21].p.v);\r\n            this.feFuncG.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncB && (forceRender || effectElements[24].p._mdf || effectElements[25].p._mdf || effectElements[26].p._mdf || effectElements[27].p._mdf || effectElements[28].p._mdf)){\r\n            val = this.getTableValue(effectElements[24].p.v,effectElements[25].p.v,effectElements[26].p.v,effectElements[27].p.v,effectElements[28].p.v);\r\n            this.feFuncB.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncA && (forceRender || effectElements[31].p._mdf || effectElements[32].p._mdf || effectElements[33].p._mdf || effectElements[34].p._mdf || effectElements[35].p._mdf)){\r\n            val = this.getTableValue(effectElements[31].p.v,effectElements[32].p.v,effectElements[33].p.v,effectElements[34].p.v,effectElements[35].p.v);\r\n            this.feFuncA.setAttribute('tableValues',val);\r\n        }\r\n        \r\n    }\r\n};\r\nfunction SVGDropShadowEffect(filter, filterManager){\r\n    filter.setAttribute('x','-100%');\r\n    filter.setAttribute('y','-100%');\r\n    filter.setAttribute('width','400%');\r\n    filter.setAttribute('height','400%');\r\n    this.filterManager = filterManager;\r\n\r\n    var feGaussianBlur = createNS('feGaussianBlur');\r\n    feGaussianBlur.setAttribute('in','SourceAlpha');\r\n    feGaussianBlur.setAttribute('result','drop_shadow_1');\r\n    feGaussianBlur.setAttribute('stdDeviation','0');\r\n    this.feGaussianBlur = feGaussianBlur;\r\n    filter.appendChild(feGaussianBlur);\r\n\r\n    var feOffset = createNS('feOffset');\r\n    feOffset.setAttribute('dx','25');\r\n    feOffset.setAttribute('dy','0');\r\n    feOffset.setAttribute('in','drop_shadow_1');\r\n    feOffset.setAttribute('result','drop_shadow_2');\r\n    this.feOffset = feOffset;\r\n    filter.appendChild(feOffset);\r\n    var feFlood = createNS('feFlood');\r\n    feFlood.setAttribute('flood-color','#00ff00');\r\n    feFlood.setAttribute('flood-opacity','1');\r\n    feFlood.setAttribute('result','drop_shadow_3');\r\n    this.feFlood = feFlood;\r\n    filter.appendChild(feFlood);\r\n\r\n    var feComposite = createNS('feComposite');\r\n    feComposite.setAttribute('in','drop_shadow_3');\r\n    feComposite.setAttribute('in2','drop_shadow_2');\r\n    feComposite.setAttribute('operator','in');\r\n    feComposite.setAttribute('result','drop_shadow_4');\r\n    filter.appendChild(feComposite);\r\n\r\n\r\n    var feMerge = createNS('feMerge');\r\n    filter.appendChild(feMerge);\r\n    var feMergeNode;\r\n    feMergeNode = createNS('feMergeNode');\r\n    feMerge.appendChild(feMergeNode);\r\n    feMergeNode = createNS('feMergeNode');\r\n    feMergeNode.setAttribute('in','SourceGraphic');\r\n    this.feMergeNode = feMergeNode;\r\n    this.feMerge = feMerge;\r\n    this.originalNodeAdded = false;\r\n    feMerge.appendChild(feMergeNode);\r\n}\r\n\r\nSVGDropShadowEffect.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        if(forceRender || this.filterManager.effectElements[4].p._mdf){\r\n            this.feGaussianBlur.setAttribute('stdDeviation', this.filterManager.effectElements[4].p.v / 4);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[0].p._mdf){\r\n            var col = this.filterManager.effectElements[0].p.v;\r\n            this.feFlood.setAttribute('flood-color',rgbToHex(Math.round(col[0]*255),Math.round(col[1]*255),Math.round(col[2]*255)));\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[1].p._mdf){\r\n            this.feFlood.setAttribute('flood-opacity',this.filterManager.effectElements[1].p.v/255);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[2].p._mdf || this.filterManager.effectElements[3].p._mdf){\r\n            var distance = this.filterManager.effectElements[3].p.v;\r\n            var angle = (this.filterManager.effectElements[2].p.v - 90) * degToRads;\r\n            var x = distance * Math.cos(angle);\r\n            var y = distance * Math.sin(angle);\r\n            this.feOffset.setAttribute('dx', x);\r\n            this.feOffset.setAttribute('dy', y);\r\n        }\r\n        /*if(forceRender || this.filterManager.effectElements[5].p._mdf){\r\n            if(this.filterManager.effectElements[5].p.v === 1 && this.originalNodeAdded) {\r\n                this.feMerge.removeChild(this.feMergeNode);\r\n                this.originalNodeAdded = false;\r\n            } else if(this.filterManager.effectElements[5].p.v === 0 && !this.originalNodeAdded) {\r\n                this.feMerge.appendChild(this.feMergeNode);\r\n                this.originalNodeAdded = true;\r\n            }\r\n        }*/\r\n    }\r\n};\r\nvar _svgMatteSymbols = [];\r\nvar _svgMatteMaskCounter = 0;\r\n\r\nfunction SVGMatte3Effect(filterElem, filterManager, elem){\r\n    this.initialized = false;\r\n    this.filterManager = filterManager;\r\n    this.filterElem = filterElem;\r\n    this.elem = elem;\r\n    elem.matteElement = createNS('g');\r\n    elem.matteElement.appendChild(elem.layerElement);\r\n    elem.matteElement.appendChild(elem.transformedElement);\r\n    elem.baseElement = elem.matteElement;\r\n}\r\n\r\nSVGMatte3Effect.prototype.findSymbol = function(mask) {\r\n    var i = 0, len = _svgMatteSymbols.length;\r\n    while(i < len) {\r\n        if(_svgMatteSymbols[i] === mask) {\r\n            return _svgMatteSymbols[i];\r\n        }\r\n        i += 1;\r\n    }\r\n    return null;\r\n};\r\n\r\nSVGMatte3Effect.prototype.replaceInParent = function(mask, symbolId) {\r\n    var parentNode = mask.layerElement.parentNode;\r\n    if(!parentNode) {\r\n        return;\r\n    }\r\n    var children = parentNode.children;\r\n    var i = 0, len = children.length;\r\n    while (i < len) {\r\n        if (children[i] === mask.layerElement) {\r\n            break;\r\n        }\r\n        i += 1;\r\n    }\r\n    var nextChild;\r\n    if (i <= len - 2) {\r\n        nextChild = children[i + 1];\r\n    }\r\n    var useElem = createNS('use');\r\n    useElem.setAttribute('href', '#' + symbolId);\r\n    if(nextChild) {\r\n        parentNode.insertBefore(useElem, nextChild);\r\n    } else {\r\n        parentNode.appendChild(useElem);\r\n    }\r\n};\r\n\r\nSVGMatte3Effect.prototype.setElementAsMask = function(elem, mask) {\r\n    if(!this.findSymbol(mask)) {\r\n        var symbolId = 'matte_' + randomString(5) + '_' + _svgMatteMaskCounter++;\r\n        var masker = createNS('mask');\r\n        masker.setAttribute('id', mask.layerId);\r\n        masker.setAttribute('mask-type', 'alpha');\r\n        _svgMatteSymbols.push(mask);\r\n        var defs = elem.globalData.defs;\r\n        defs.appendChild(masker);\r\n        var symbol = createNS('symbol');\r\n        symbol.setAttribute('id', symbolId);\r\n        this.replaceInParent(mask, symbolId);\r\n        symbol.appendChild(mask.layerElement);\r\n        defs.appendChild(symbol);\r\n        useElem = createNS('use');\r\n        useElem.setAttribute('href', '#' + symbolId);\r\n        masker.appendChild(useElem);\r\n        mask.data.hd = false;\r\n        mask.show();\r\n    }\r\n    elem.setMatte(mask.layerId);\r\n};\r\n\r\nSVGMatte3Effect.prototype.initialize = function() {\r\n    var ind = this.filterManager.effectElements[0].p.v;\r\n    var i = 0, len = this.elem.comp.elements.length;\r\n    while (i < len) {\r\n    \tif (this.elem.comp.elements[i].data.ind === ind) {\r\n    \t\tthis.setElementAsMask(this.elem, this.elem.comp.elements[i]);\r\n    \t}\r\n    \ti += 1;\r\n    }\r\n    this.initialized = true;\r\n};\r\n\r\nSVGMatte3Effect.prototype.renderFrame = function() {\r\n\tif(!this.initialized) {\r\n\t\tthis.initialize();\r\n\t}\r\n};\r\nfunction SVGEffects(elem){\r\n    var i, len = elem.data.ef ? elem.data.ef.length : 0;\r\n    var filId = randomString(10);\r\n    var fil = filtersFactory.createFilter(filId);\r\n    var count = 0;\r\n    this.filters = [];\r\n    var filterManager;\r\n    for(i=0;i<len;i+=1){\r\n        filterManager = null;\r\n        if(elem.data.ef[i].ty === 20){\r\n            count += 1;\r\n            filterManager = new SVGTintFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 21){\r\n            count += 1;\r\n            filterManager = new SVGFillFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 22){\r\n            filterManager = new SVGStrokeEffect(elem, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 23){\r\n            count += 1;\r\n            filterManager = new SVGTritoneFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 24){\r\n            count += 1;\r\n            filterManager = new SVGProLevelsFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 25){\r\n            count += 1;\r\n            filterManager = new SVGDropShadowEffect(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 28){\r\n            //count += 1;\r\n            filterManager = new SVGMatte3Effect(fil, elem.effectsManager.effectElements[i], elem);\r\n        }\r\n        if(filterManager) {\r\n            this.filters.push(filterManager);\r\n        }\r\n    }\r\n    if(count){\r\n        elem.globalData.defs.appendChild(fil);\r\n        elem.layerElement.setAttribute('filter','url(' + locationHref + '#'+filId+')');\r\n    }\r\n}\r\n\r\nSVGEffects.prototype.renderFrame = function(_isFirstFrame){\r\n    var i, len = this.filters.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.filters[i].renderFrame(_isFirstFrame);\r\n    }\r\n};\r\nvar animationManager = (function(){\r\n    var moduleOb = {};\r\n    var registeredAnimations = [];\r\n    var initTime = 0;\r\n    var len = 0;\r\n    var idled = true;\r\n    var playingAnimationsNum = 0;\r\n    var _stopped = true;\r\n\r\n    function removeElement(ev){\r\n        var i = 0;\r\n        var animItem = ev.target;\r\n        while(i<len) {\r\n            if (registeredAnimations[i].animation === animItem) {\r\n                registeredAnimations.splice(i, 1);\r\n                i -= 1;\r\n                len -= 1;\r\n                if(!animItem.isPaused){\r\n                    subtractPlayingCount();\r\n                }\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    function registerAnimation(element, animationData){\r\n        if(!element){\r\n            return null;\r\n        }\r\n        var i=0;\r\n        while(i<len){\r\n            if(registeredAnimations[i].elem == element && registeredAnimations[i].elem !== null ){\r\n                return registeredAnimations[i].animation;\r\n            }\r\n            i+=1;\r\n        }\r\n        var animItem = new AnimationItem();\r\n        setupAnimation(animItem, element);\r\n        animItem.setData(element, animationData);\r\n        return animItem;\r\n    }\r\n\r\n    function addPlayingCount(){\r\n        playingAnimationsNum += 1;\r\n        activate();\r\n    }\r\n\r\n    function subtractPlayingCount(){\r\n        playingAnimationsNum -= 1;\r\n        if(playingAnimationsNum === 0){\r\n            idled = true;\r\n        }\r\n    }\r\n\r\n    function setupAnimation(animItem, element){\r\n        animItem.addEventListener('destroy',removeElement);\r\n        animItem.addEventListener('_active',addPlayingCount);\r\n        animItem.addEventListener('_idle',subtractPlayingCount);\r\n        registeredAnimations.push({elem: element,animation:animItem});\r\n        len += 1;\r\n    }\r\n\r\n    function loadAnimation(params){\r\n        var animItem = new AnimationItem();\r\n        setupAnimation(animItem, null);\r\n        animItem.setParams(params);\r\n        return animItem;\r\n    }\r\n\r\n\r\n    function setSpeed(val,animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.setSpeed(val, animation);\r\n        }\r\n    }\r\n\r\n    function setDirection(val, animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.setDirection(val, animation);\r\n        }\r\n    }\r\n\r\n    function play(animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.play(animation);\r\n        }\r\n    }\r\n    function resume(nowTime) {\r\n        var elapsedTime = nowTime - initTime;\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.advanceTime(elapsedTime);\r\n        }\r\n        initTime = nowTime;\r\n        if(!idled) {\r\n            window.requestAnimationFrame(resume);\r\n        } else {\r\n            _stopped = true;\r\n        }\r\n    }\r\n\r\n    function first(nowTime){\r\n        initTime = nowTime;\r\n        window.requestAnimationFrame(resume);\r\n    }\r\n\r\n    function pause(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.pause(animation);\r\n        }\r\n    }\r\n\r\n    function goToAndStop(value,isFrame,animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.goToAndStop(value,isFrame,animation);\r\n        }\r\n    }\r\n\r\n    function stop(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.stop(animation);\r\n        }\r\n    }\r\n\r\n    function togglePause(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.togglePause(animation);\r\n        }\r\n    }\r\n\r\n    function destroy(animation) {\r\n        var i;\r\n        for(i=(len-1);i>=0;i-=1){\r\n            registeredAnimations[i].animation.destroy(animation);\r\n        }\r\n    }\r\n\r\n    function searchAnimations(animationData, standalone, renderer){\r\n        var animElements = [].concat([].slice.call(document.getElementsByClassName('lottie')),\r\n                  [].slice.call(document.getElementsByClassName('bodymovin')));\r\n        var i, len = animElements.length;\r\n        for(i=0;i<len;i+=1){\r\n            if(renderer){\r\n                animElements[i].setAttribute('data-bm-type',renderer);\r\n            }\r\n            registerAnimation(animElements[i], animationData);\r\n        }\r\n        if(standalone && len === 0){\r\n            if(!renderer){\r\n                renderer = 'svg';\r\n            }\r\n            var body = document.getElementsByTagName('body')[0];\r\n            body.innerHTML = '';\r\n            var div = createTag('div');\r\n            div.style.width = '100%';\r\n            div.style.height = '100%';\r\n            div.setAttribute('data-bm-type',renderer);\r\n            body.appendChild(div);\r\n            registerAnimation(div, animationData);\r\n        }\r\n    }\r\n\r\n    function resize(){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.resize();\r\n        }\r\n    }\r\n\r\n    /*function start(){\r\n        window.requestAnimationFrame(first);\r\n    }*/\r\n\r\n    function activate(){\r\n        if(idled){\r\n            idled = false;\r\n            if(_stopped) {\r\n                window.requestAnimationFrame(first);\r\n                _stopped = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    //start();\r\n\r\n    //setTimeout(start,0);\r\n\r\n    moduleOb.registerAnimation = registerAnimation;\r\n    moduleOb.loadAnimation = loadAnimation;\r\n    moduleOb.setSpeed = setSpeed;\r\n    moduleOb.setDirection = setDirection;\r\n    moduleOb.play = play;\r\n    moduleOb.pause = pause;\r\n    moduleOb.stop = stop;\r\n    moduleOb.togglePause = togglePause;\r\n    moduleOb.searchAnimations = searchAnimations;\r\n    moduleOb.resize = resize;\r\n    //moduleOb.start = start;\r\n    moduleOb.goToAndStop = goToAndStop;\r\n    moduleOb.destroy = destroy;\r\n    return moduleOb;\r\n}());\r\n\r\nvar AnimationItem = function () {\r\n    this._cbs = [];\r\n    this.name = '';\r\n    this.path = '';\r\n    this.isLoaded = false;\r\n    this.currentFrame = 0;\r\n    this.currentRawFrame = 0;\r\n    this.totalFrames = 0;\r\n    this.frameRate = 0;\r\n    this.frameMult = 0;\r\n    this.playSpeed = 1;\r\n    this.playDirection = 1;\r\n    this.pendingElements = 0;\r\n    this.playCount = 0;\r\n    this.animationData = {};\r\n    this.layers = [];\r\n    this.assets = [];\r\n    this.isPaused = true;\r\n    this.autoplay = false;\r\n    this.loop = true;\r\n    this.renderer = null;\r\n    this.animationID = randomString(10);\r\n    this.assetsPath = '';\r\n    this.timeCompleted = 0;\r\n    this.segmentPos = 0;\r\n    this.subframeEnabled = subframeEnabled;\r\n    this.segments = [];\r\n    this._idle = true;\r\n    this.projectInterface = ProjectInterface();\r\n};\r\n\r\nextendPrototype([BaseEvent], AnimationItem);\r\n\r\nAnimationItem.prototype.setParams = function(params) {\r\n    var self = this;\r\n    if(params.context){\r\n        this.context = params.context;\r\n    }\r\n    if(params.wrapper || params.container){\r\n        this.wrapper = params.wrapper || params.container;\r\n    }\r\n    var animType = params.animType ? params.animType : params.renderer ? params.renderer : 'svg';\r\n    switch(animType){\r\n        case 'canvas':\r\n            this.renderer = new CanvasRenderer(this, params.rendererSettings);\r\n            break;\r\n        case 'svg':\r\n            this.renderer = new SVGRenderer(this, params.rendererSettings);\r\n            break;\r\n        default:\r\n            this.renderer = new HybridRenderer(this, params.rendererSettings);\r\n            break;\r\n    }\r\n    this.renderer.setProjectInterface(this.projectInterface);\r\n    this.animType = animType;\r\n\r\n    if(params.loop === '' || params.loop === null){\r\n    }else if(params.loop === false){\r\n        this.loop = false;\r\n    }else if(params.loop === true){\r\n        this.loop = true;\r\n    }else{\r\n        this.loop = parseInt(params.loop);\r\n    }\r\n    this.autoplay = 'autoplay' in params ? params.autoplay : true;\r\n    this.name = params.name ? params.name :  '';\r\n    this.autoloadSegments = params.hasOwnProperty('autoloadSegments') ? params.autoloadSegments :  true;\r\n    if(params.animationData){\r\n        self.configAnimation(params.animationData);\r\n    }else if(params.path){\r\n        if(params.path.substr(-4) != 'json'){\r\n            if (params.path.substr(-1, 1) != '/') {\r\n                params.path += '/';\r\n            }\r\n            params.path += 'data.json';\r\n        }\r\n\r\n        var xhr = new XMLHttpRequest();\r\n        if(params.path.lastIndexOf('\\\\') != -1){\r\n            this.path = params.path.substr(0,params.path.lastIndexOf('\\\\')+1);\r\n        }else{\r\n            this.path = params.path.substr(0,params.path.lastIndexOf('/')+1);\r\n        }\r\n        this.assetsPath = params.assetsPath;\r\n        this.fileName = params.path.substr(params.path.lastIndexOf('/')+1);\r\n        this.fileName = this.fileName.substr(0,this.fileName.lastIndexOf('.json'));\r\n        xhr.open('GET', params.path, true);\r\n        xhr.send();\r\n        xhr.onreadystatechange = function () {\r\n            if (xhr.readyState == 4) {\r\n                if(xhr.status == 200){\r\n                    self.configAnimation(JSON.parse(xhr.responseText));\r\n                }else{\r\n                    try{\r\n                        var response = JSON.parse(xhr.responseText);\r\n                        self.configAnimation(response);\r\n                    }catch(err){\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.setData = function (wrapper, animationData) {\r\n    var params = {\r\n        wrapper: wrapper,\r\n        animationData: animationData ? (typeof animationData  === \"object\") ? animationData : JSON.parse(animationData) : null\r\n    };\r\n    var wrapperAttributes = wrapper.attributes;\r\n\r\n    params.path = wrapperAttributes.getNamedItem('data-animation-path') ? wrapperAttributes.getNamedItem('data-animation-path').value : wrapperAttributes.getNamedItem('data-bm-path') ? wrapperAttributes.getNamedItem('data-bm-path').value :  wrapperAttributes.getNamedItem('bm-path') ? wrapperAttributes.getNamedItem('bm-path').value : '';\r\n    params.animType = wrapperAttributes.getNamedItem('data-anim-type') ? wrapperAttributes.getNamedItem('data-anim-type').value : wrapperAttributes.getNamedItem('data-bm-type') ? wrapperAttributes.getNamedItem('data-bm-type').value : wrapperAttributes.getNamedItem('bm-type') ? wrapperAttributes.getNamedItem('bm-type').value :  wrapperAttributes.getNamedItem('data-bm-renderer') ? wrapperAttributes.getNamedItem('data-bm-renderer').value : wrapperAttributes.getNamedItem('bm-renderer') ? wrapperAttributes.getNamedItem('bm-renderer').value : 'canvas';\r\n\r\n    var loop = wrapperAttributes.getNamedItem('data-anim-loop') ? wrapperAttributes.getNamedItem('data-anim-loop').value :  wrapperAttributes.getNamedItem('data-bm-loop') ? wrapperAttributes.getNamedItem('data-bm-loop').value :  wrapperAttributes.getNamedItem('bm-loop') ? wrapperAttributes.getNamedItem('bm-loop').value : '';\r\n    if(loop === ''){\r\n    }else if(loop === 'false'){\r\n        params.loop = false;\r\n    }else if(loop === 'true'){\r\n        params.loop = true;\r\n    }else{\r\n        params.loop = parseInt(loop);\r\n    }\r\n    var autoplay = wrapperAttributes.getNamedItem('data-anim-autoplay') ? wrapperAttributes.getNamedItem('data-anim-autoplay').value :  wrapperAttributes.getNamedItem('data-bm-autoplay') ? wrapperAttributes.getNamedItem('data-bm-autoplay').value :  wrapperAttributes.getNamedItem('bm-autoplay') ? wrapperAttributes.getNamedItem('bm-autoplay').value : true;\r\n    params.autoplay = autoplay !== \"false\";\r\n\r\n    params.name = wrapperAttributes.getNamedItem('data-name') ? wrapperAttributes.getNamedItem('data-name').value :  wrapperAttributes.getNamedItem('data-bm-name') ? wrapperAttributes.getNamedItem('data-bm-name').value : wrapperAttributes.getNamedItem('bm-name') ? wrapperAttributes.getNamedItem('bm-name').value :  '';\r\n    var prerender = wrapperAttributes.getNamedItem('data-anim-prerender') ? wrapperAttributes.getNamedItem('data-anim-prerender').value :  wrapperAttributes.getNamedItem('data-bm-prerender') ? wrapperAttributes.getNamedItem('data-bm-prerender').value :  wrapperAttributes.getNamedItem('bm-prerender') ? wrapperAttributes.getNamedItem('bm-prerender').value : '';\r\n\r\n    if(prerender === 'false'){\r\n        params.prerender = false;\r\n    }\r\n    this.setParams(params);\r\n};\r\n\r\nAnimationItem.prototype.includeLayers = function(data) {\r\n    if(data.op > this.animationData.op){\r\n        this.animationData.op = data.op;\r\n        this.totalFrames = Math.floor(data.op - this.animationData.ip);\r\n        this.animationData.tf = this.totalFrames;\r\n    }\r\n    var layers = this.animationData.layers;\r\n    var i, len = layers.length;\r\n    var newLayers = data.layers;\r\n    var j, jLen = newLayers.length;\r\n    for(j=0;j<jLen;j+=1){\r\n        i = 0;\r\n        while(i<len){\r\n            if(layers[i].id == newLayers[j].id){\r\n                layers[i] = newLayers[j];\r\n                break;\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n    if(data.chars || data.fonts){\r\n        this.renderer.globalData.fontManager.addChars(data.chars);\r\n        this.renderer.globalData.fontManager.addFonts(data.fonts, this.renderer.globalData.defs);\r\n    }\r\n    if(data.assets){\r\n        len = data.assets.length;\r\n        for(i = 0; i < len; i += 1){\r\n            this.animationData.assets.push(data.assets[i]);\r\n        }\r\n    }\r\n    //this.totalFrames = 50;\r\n    //this.animationData.tf = 50;\r\n    this.animationData.__complete = false;\r\n    dataManager.completeData(this.animationData,this.renderer.globalData.fontManager);\r\n    this.renderer.includeLayers(data.layers);\r\n    if(expressionsPlugin){\r\n        expressionsPlugin.initExpressions(this);\r\n    }\r\n    this.renderer.renderFrame(-1);\r\n    this.loadNextSegment();\r\n};\r\n\r\nAnimationItem.prototype.loadNextSegment = function() {\r\n    var segments = this.animationData.segments;\r\n    if(!segments || segments.length === 0 || !this.autoloadSegments){\r\n        this.trigger('data_ready');\r\n        this.timeCompleted = this.animationData.tf;\r\n        return;\r\n    }\r\n    var segment = segments.shift();\r\n    this.timeCompleted = segment.time * this.frameRate;\r\n    var xhr = new XMLHttpRequest();\r\n    var self = this;\r\n    var segmentPath = this.path+this.fileName+'_' + this.segmentPos + '.json';\r\n    this.segmentPos += 1;\r\n    xhr.open('GET', segmentPath, true);\r\n    xhr.send();\r\n    xhr.onreadystatechange = function () {\r\n        if (xhr.readyState == 4) {\r\n            if(xhr.status == 200){\r\n                self.includeLayers(JSON.parse(xhr.responseText));\r\n            }else{\r\n                try{\r\n                    var response = JSON.parse(xhr.responseText);\r\n                    self.includeLayers(response);\r\n                }catch(err){\r\n                }\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\nAnimationItem.prototype.loadSegments = function() {\r\n    var segments = this.animationData.segments;\r\n    if(!segments) {\r\n        this.timeCompleted = this.animationData.tf;\r\n    }\r\n    this.loadNextSegment();\r\n};\r\n\r\nAnimationItem.prototype.configAnimation = function (animData) {\r\n    var _this = this;\r\n    if(this.renderer && this.renderer.destroyed){\r\n        return;\r\n    }\r\n    //console.log(JSON.parse(JSON.stringify(animData)));\r\n    //animData.w = Math.round(animData.w/blitter);\r\n    //animData.h = Math.round(animData.h/blitter);\r\n    this.animationData = animData;\r\n    this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip);\r\n    this.animationData.tf = this.totalFrames;\r\n    this.renderer.configAnimation(animData);\r\n    if(!animData.assets){\r\n        animData.assets = [];\r\n    }\r\n    if(animData.comps) {\r\n        animData.assets = animData.assets.concat(animData.comps);\r\n        animData.comps = null;\r\n    }\r\n    this.renderer.searchExtraCompositions(animData.assets);\r\n\r\n    this.layers = this.animationData.layers;\r\n    this.assets = this.animationData.assets;\r\n    this.frameRate = this.animationData.fr;\r\n    this.firstFrame = Math.round(this.animationData.ip);\r\n    this.frameMult = this.animationData.fr / 1000;\r\n    this.trigger('config_ready');\r\n    this.imagePreloader = new ImagePreloader();\r\n    this.imagePreloader.setAssetsPath(this.assetsPath);\r\n    this.imagePreloader.setPath(this.path);\r\n    this.imagePreloader.loadAssets(animData.assets, function(err) {\r\n        if(!err) {\r\n            _this.trigger('loaded_images');\r\n        }\r\n    });\r\n    this.loadSegments();\r\n    this.updaFrameModifier();\r\n    if(this.renderer.globalData.fontManager){\r\n        this.waitForFontsLoaded();\r\n    }else{\r\n        dataManager.completeData(this.animationData,this.renderer.globalData.fontManager);\r\n        this.checkLoaded();\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.waitForFontsLoaded = (function(){\r\n    function checkFontsLoaded(){\r\n        if(this.renderer.globalData.fontManager.loaded){\r\n            dataManager.completeData(this.animationData,this.renderer.globalData.fontManager);\r\n            //this.renderer.buildItems(this.animationData.layers);\r\n            this.checkLoaded();\r\n        }else{\r\n            setTimeout(checkFontsLoaded.bind(this),20);\r\n        }\r\n    }\r\n\r\n    return function(){\r\n        checkFontsLoaded.bind(this)();\r\n    };\r\n}());\r\n\r\nAnimationItem.prototype.addPendingElement = function () {\r\n    this.pendingElements += 1;\r\n};\r\n\r\nAnimationItem.prototype.elementLoaded = function () {\r\n    this.pendingElements--;\r\n    this.checkLoaded();\r\n};\r\n\r\nAnimationItem.prototype.checkLoaded = function () {\r\n    if (this.pendingElements === 0) {\r\n        if(expressionsPlugin){\r\n            expressionsPlugin.initExpressions(this);\r\n        }\r\n        this.renderer.initItems();\r\n        setTimeout(function(){\r\n            this.trigger('DOMLoaded');\r\n        }.bind(this),0);\r\n        this.isLoaded = true;\r\n        this.gotoFrame();\r\n        if(this.autoplay){\r\n            this.play();\r\n        }\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.resize = function () {\r\n    this.renderer.updateContainerSize();\r\n};\r\n\r\nAnimationItem.prototype.setSubframe = function(flag){\r\n    this.subframeEnabled = flag ? true : false;\r\n};\r\n\r\nAnimationItem.prototype.gotoFrame = function () {\r\n    this.currentFrame = this.subframeEnabled ? this.currentRawFrame : ~~this.currentRawFrame;\r\n\r\n    if(this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted){\r\n        this.currentFrame = this.timeCompleted;\r\n    }\r\n    //console.log(this.currentFrame)\r\n    this.trigger('enterFrame');\r\n    // console.log('gotoFrame: ', this.currentFrame )\r\n    this.renderFrame();\r\n};\r\n\r\nAnimationItem.prototype.renderFrame = function () {\r\n    if(this.isLoaded === false){\r\n        return;\r\n    }\r\n    //console.log('this.currentFrame:',this.currentFrame + this.firstFrame);\r\n    this.renderer.renderFrame(this.currentFrame + this.firstFrame);\r\n};\r\n\r\nAnimationItem.prototype.play = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === true){\r\n        this.isPaused = false;\r\n        if(this._idle){\r\n            this._idle = false;\r\n            this.trigger('_active');\r\n        }\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.pause = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === false){\r\n        this.isPaused = true;\r\n        this._idle = true;\r\n        this.trigger('_idle');\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.togglePause = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === true){\r\n        this.play();\r\n    }else{\r\n        this.pause();\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.stop = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    this.pause();\r\n    this.playCount = 0;\r\n    this.setCurrentRawFrameValue(0);\r\n};\r\n\r\nAnimationItem.prototype.goToAndStop = function (value, isFrame, name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(isFrame){\r\n        this.setCurrentRawFrameValue(value);\r\n    }else{\r\n        this.setCurrentRawFrameValue(value * this.frameModifier);\r\n    }\r\n    this.pause();\r\n};\r\n\r\nAnimationItem.prototype.goToAndPlay = function (value, isFrame, name) {\r\n    this.goToAndStop(value, isFrame, name);\r\n    this.play();\r\n};\r\n\r\nAnimationItem.prototype.advanceTime = function (value) {\r\n    if (this.isPaused === true || this.isLoaded === false) {\r\n        return;\r\n    }\r\n    var nextValue = this.currentRawFrame + value * this.frameModifier;\r\n    var _isComplete = false;\r\n    // Checking if nextValue > totalFrames - 1 for addressing non looping and looping animations.\r\n    // If animation won't loop, it should stop at totalFrames - 1. If it will loop it should complete the last frame and then loop.\r\n    if (nextValue >= this.totalFrames - 1 && this.frameModifier > 0) {\r\n        if (!this.loop || this.playCount === this.loop) {\r\n            if (!this.checkSegments(nextValue % this.totalFrames)) {\r\n                _isComplete = true;\r\n                nextValue = this.totalFrames - 1;\r\n            }\r\n        } else if (nextValue >= this.totalFrames) {\r\n            this.playCount += 1;\r\n            if (!this.checkSegments(nextValue % this.totalFrames)) {\r\n                this.setCurrentRawFrameValue(nextValue % this.totalFrames);\r\n                this.trigger('loopComplete');\r\n            }\r\n        } else {\r\n            this.setCurrentRawFrameValue(nextValue);\r\n        }\r\n    } else if(nextValue < 0) {\r\n        if (!this.checkSegments(nextValue % this.totalFrames)) {\r\n            if (this.loop && !(this.playCount-- <= 0 && this.loop !== true)) {\r\n                this.setCurrentRawFrameValue(this.totalFrames + (nextValue % this.totalFrames));\r\n                this.trigger('loopComplete');\r\n            } else {\r\n                _isComplete = true;\r\n                nextValue = 0;\r\n            }\r\n        }\r\n    } else {\r\n        this.setCurrentRawFrameValue(nextValue);\r\n    }\r\n    if (_isComplete) {\r\n        this.setCurrentRawFrameValue(nextValue);\r\n        this.pause();\r\n        this.trigger('complete');\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.adjustSegment = function(arr, offset){\r\n    this.playCount = 0;\r\n    if(arr[1] < arr[0]){\r\n        if(this.frameModifier > 0){\r\n            if(this.playSpeed < 0){\r\n                this.setSpeed(-this.playSpeed);\r\n            } else {\r\n                this.setDirection(-1);\r\n            }\r\n        }\r\n        this.timeCompleted = this.totalFrames = arr[0] - arr[1];\r\n        this.firstFrame = arr[1];\r\n        this.setCurrentRawFrameValue(this.totalFrames - 0.001 - offset);\r\n    } else if(arr[1] > arr[0]){\r\n        if(this.frameModifier < 0){\r\n            if(this.playSpeed < 0){\r\n                this.setSpeed(-this.playSpeed);\r\n            } else {\r\n                this.setDirection(1);\r\n            }\r\n        }\r\n        this.timeCompleted = this.totalFrames = arr[1] - arr[0];\r\n        this.firstFrame = arr[0];\r\n        this.setCurrentRawFrameValue(0.001 + offset);\r\n    }\r\n    this.trigger('segmentStart');\r\n};\r\nAnimationItem.prototype.setSegment = function (init,end) {\r\n    var pendingFrame = -1;\r\n    if(this.isPaused) {\r\n        if (this.currentRawFrame + this.firstFrame < init) {\r\n            pendingFrame = init;\r\n        } else if (this.currentRawFrame + this.firstFrame > end) {\r\n            pendingFrame = end - init;\r\n        }\r\n    }\r\n\r\n    this.firstFrame = init;\r\n    this.timeCompleted = this.totalFrames = end - init;\r\n    if(pendingFrame !== -1) {\r\n        this.goToAndStop(pendingFrame,true);\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.playSegments = function (arr,forceFlag) {\r\n    if(typeof arr[0] === 'object'){\r\n        var i, len = arr.length;\r\n        for(i=0;i<len;i+=1){\r\n            this.segments.push(arr[i]);\r\n        }\r\n    }else{\r\n        this.segments.push(arr);\r\n    }\r\n    if(forceFlag){\r\n        this.checkSegments(0);\r\n    }\r\n    if(this.isPaused){\r\n        this.play();\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.resetSegments = function (forceFlag) {\r\n    this.segments.length = 0;\r\n    this.segments.push([this.animationData.ip,this.animationData.op]);\r\n    //this.segments.push([this.animationData.ip*this.frameRate,Math.floor(this.animationData.op - this.animationData.ip+this.animationData.ip*this.frameRate)]);\r\n    if(forceFlag){\r\n        this.checkSegments(0);\r\n    }\r\n};\r\nAnimationItem.prototype.checkSegments = function(offset){\r\n    if(this.segments.length) {\r\n        //console.log(this.currentRawFrame % lastFrame)\r\n        this.adjustSegment(this.segments.shift(), offset);\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\nAnimationItem.prototype.remove = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    this.renderer.destroy();\r\n};\r\n\r\nAnimationItem.prototype.destroy = function (name) {\r\n    if((name && this.name != name) || (this.renderer && this.renderer.destroyed)){\r\n        return;\r\n    }\r\n    this.renderer.destroy();\r\n    this.trigger('destroy');\r\n    this._cbs = null;\r\n    this.onEnterFrame = this.onLoopComplete = this.onComplete = this.onSegmentStart = this.onDestroy = null;\r\n    this.renderer = null;\r\n};\r\n\r\nAnimationItem.prototype.setCurrentRawFrameValue = function(value){\r\n    this.currentRawFrame = value;\r\n    this.gotoFrame();\r\n};\r\n\r\nAnimationItem.prototype.setSpeed = function (val) {\r\n    this.playSpeed = val;\r\n    this.updaFrameModifier();\r\n};\r\n\r\nAnimationItem.prototype.setDirection = function (val) {\r\n    this.playDirection = val < 0 ? -1 : 1;\r\n    this.updaFrameModifier();\r\n};\r\n\r\nAnimationItem.prototype.updaFrameModifier = function () {\r\n    this.frameModifier = this.frameMult * this.playSpeed * this.playDirection;\r\n};\r\n\r\nAnimationItem.prototype.getPath = function () {\r\n    return this.path;\r\n};\r\n\r\nAnimationItem.prototype.getAssetsPath = function (assetData) {\r\n    var path = '';\r\n    if(this.assetsPath){\r\n        var imagePath = assetData.p;\r\n        if(imagePath.indexOf('images/') !== -1){\r\n            imagePath = imagePath.split('/')[1];\r\n        }\r\n        path = this.assetsPath + imagePath;\r\n    } else {\r\n        path = this.path;\r\n        path += assetData.u ? assetData.u : '';\r\n        path += assetData.p;\r\n    }\r\n    return path;\r\n};\r\n\r\nAnimationItem.prototype.getAssetData = function (id) {\r\n    var i = 0, len = this.assets.length;\r\n    while (i < len) {\r\n        if(id == this.assets[i].id){\r\n            return this.assets[i];\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.hide = function () {\r\n    this.renderer.hide();\r\n};\r\n\r\nAnimationItem.prototype.show = function () {\r\n    this.renderer.show();\r\n};\r\n\r\nAnimationItem.prototype.getAssets = function () {\r\n    return this.assets;\r\n};\r\n\r\nAnimationItem.prototype.trigger = function(name){\r\n    if(this._cbs && this._cbs[name]){\r\n        switch(name){\r\n            case 'enterFrame':\r\n                this.triggerEvent(name,new BMEnterFrameEvent(name,this.currentFrame,this.totalFrames,this.frameMult));\r\n                break;\r\n            case 'loopComplete':\r\n                this.triggerEvent(name,new BMCompleteLoopEvent(name,this.loop,this.playCount,this.frameMult));\r\n                break;\r\n            case 'complete':\r\n                this.triggerEvent(name,new BMCompleteEvent(name,this.frameMult));\r\n                break;\r\n            case 'segmentStart':\r\n                this.triggerEvent(name,new BMSegmentStartEvent(name,this.firstFrame,this.totalFrames));\r\n                break;\r\n            case 'destroy':\r\n                this.triggerEvent(name,new BMDestroyEvent(name,this));\r\n                break;\r\n            default:\r\n                this.triggerEvent(name);\r\n        }\r\n    }\r\n    if(name === 'enterFrame' && this.onEnterFrame){\r\n        this.onEnterFrame.call(this,new BMEnterFrameEvent(name,this.currentFrame,this.totalFrames,this.frameMult));\r\n    }\r\n    if(name === 'loopComplete' && this.onLoopComplete){\r\n        this.onLoopComplete.call(this,new BMCompleteLoopEvent(name,this.loop,this.playCount,this.frameMult));\r\n    }\r\n    if(name === 'complete' && this.onComplete){\r\n        this.onComplete.call(this,new BMCompleteEvent(name,this.frameMult));\r\n    }\r\n    if(name === 'segmentStart' && this.onSegmentStart){\r\n        this.onSegmentStart.call(this,new BMSegmentStartEvent(name,this.firstFrame,this.totalFrames));\r\n    }\r\n    if(name === 'destroy' && this.onDestroy){\r\n        this.onDestroy.call(this,new BMDestroyEvent(name,this));\r\n    }\r\n};\r\nfunction EffectsManager(){}\r\n    var lottiejs = {};\r\n\r\n    function setLocationHref (href) {\r\n        locationHref = href;\r\n    }\r\n    function play(animation){\r\n        animationManager.play(animation);\r\n    }\r\n\r\n    function pause(animation) {\r\n        animationManager.pause(animation);\r\n    }\r\n\r\n    function togglePause(animation) {\r\n        animationManager.togglePause(animation);\r\n    }\r\n\r\n    function setSpeed(value, animation) {\r\n        animationManager.setSpeed(value, animation);\r\n    }\r\n\r\n    function setDirection(value, animation) {\r\n        animationManager.setDirection(value, animation);\r\n    }\r\n\r\n    function stop(animation) {\r\n        animationManager.stop(animation);\r\n    }\r\n\r\n    function searchAnimations() {\r\n        if (standalone === true) {\r\n            animationManager.searchAnimations(animationData, standalone, renderer);\r\n        } else {\r\n            animationManager.searchAnimations();\r\n        }\r\n    }\r\n\r\n    function registerAnimation(elem) {\r\n        return animationManager.registerAnimation(elem);\r\n    }\r\n\r\n    function resize() {\r\n        animationManager.resize();\r\n    }\r\n\r\n    /*function start() {\r\n        animationManager.start();\r\n    }*/\r\n\r\n    function goToAndStop(val, isFrame, animation) {\r\n        animationManager.goToAndStop(val, isFrame, animation);\r\n    }\r\n\r\n    function setSubframeRendering(flag) {\r\n        subframeEnabled = flag;\r\n    }\r\n\r\n    function loadAnimation(params) {\r\n        if (standalone === true) {\r\n            params.animationData = JSON.parse(animationData);\r\n        }\r\n        return animationManager.loadAnimation(params);\r\n    }\r\n\r\n    function destroy(animation) {\r\n        return animationManager.destroy(animation);\r\n    }\r\n\r\n    function setQuality(value) {\r\n        if (typeof value === 'string') {\r\n            switch (value) {\r\n                case 'high':\r\n                    defaultCurveSegments = 200;\r\n                    break;\r\n                case 'medium':\r\n                    defaultCurveSegments = 50;\r\n                    break;\r\n                case 'low':\r\n                    defaultCurveSegments = 10;\r\n                    break;\r\n            }\r\n        } else if (!isNaN(value) && value > 1) {\r\n            defaultCurveSegments = value;\r\n        }\r\n        if (defaultCurveSegments >= 50) {\r\n            roundValues(false);\r\n        } else {\r\n            roundValues(true);\r\n        }\r\n    }\r\n\r\n    function inBrowser() {\r\n        return typeof navigator !== 'undefined';\r\n    }\r\n\r\n    function installPlugin(type, plugin) {\r\n        if (type === 'expressions') {\r\n            expressionsPlugin = plugin;\r\n        }\r\n    }\r\n\r\n    function getFactory(name) {\r\n        switch (name) {\r\n            case \"propertyFactory\":\r\n                return PropertyFactory;\r\n            case \"shapePropertyFactory\":\r\n                return ShapePropertyFactory;\r\n            case \"matrix\":\r\n                return Matrix;\r\n        }\r\n    }\r\n    lottiejs.play = play;\r\n    lottiejs.pause = pause;\r\n    lottiejs.setLocationHref = setLocationHref;\r\n    lottiejs.togglePause = togglePause;\r\n    lottiejs.setSpeed = setSpeed;\r\n    lottiejs.setDirection = setDirection;\r\n    lottiejs.stop = stop;\r\n    lottiejs.searchAnimations = searchAnimations;\r\n    lottiejs.registerAnimation = registerAnimation;\r\n    lottiejs.loadAnimation = loadAnimation;\r\n    lottiejs.setSubframeRendering = setSubframeRendering;\r\n    lottiejs.resize = resize;\r\n    //lottiejs.start = start;\r\n    lottiejs.goToAndStop = goToAndStop;\r\n    lottiejs.destroy = destroy;\r\n    lottiejs.setQuality = setQuality;\r\n    lottiejs.inBrowser = inBrowser;\r\n    lottiejs.installPlugin = installPlugin;\r\n    lottiejs.__getFactory = getFactory;\r\n    lottiejs.version = '5.1.7';\r\n\r\n    function checkReady() {\r\n        if (document.readyState === \"complete\") {\r\n            clearInterval(readyStateCheckInterval);\r\n            searchAnimations();\r\n        }\r\n    }\r\n\r\n    function getQueryVariable(variable) {\r\n        var vars = queryString.split('&');\r\n        for (var i = 0; i < vars.length; i++) {\r\n            var pair = vars[i].split('=');\r\n            if (decodeURIComponent(pair[0]) == variable) {\r\n                return decodeURIComponent(pair[1]);\r\n            }\r\n        }\r\n    }\r\n    var standalone = '__[STANDALONE]__';\r\n    var animationData = '__[ANIMATIONDATA]__';\r\n    var renderer = '';\r\n    if (standalone) {\r\n        var scripts = document.getElementsByTagName('script');\r\n        var index = scripts.length - 1;\r\n        var myScript = scripts[index] || {\r\n            src: ''\r\n        };\r\n        var queryString = myScript.src.replace(/^[^\\?]+\\??/, '');\r\n        renderer = getQueryVariable('renderer');\r\n    }\r\n    var readyStateCheckInterval = setInterval(checkReady, 100);\r\n    return lottiejs;\r\n}));\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n/* globals __VUE_SSR_CONTEXT__ */\n\n// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    ref: \"lavContainer\",\n    style: (_vm.style)\n  })\n},staticRenderFns: []}\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// lib/vue-lottie.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/vue-lottie/dist\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap df13043cb3a005c0fd11","var Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./vue-lottie.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-91474f0e\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./vue-lottie.vue\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/vue-lottie.vue\n// module id = 0\n// module chunks = 0","import vueLottie from './components/vue-lottie'\n\nexport default vueLottie\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib.js","<template>\n    <div :style=\"style\" ref=\"lavContainer\"></div>\n</template>\n\n<script>\n    import lottieWeb from 'lottie-web/build/player/lottie_light.js'\n\n    export default {\n        props: {\n            data: {\n                type: Object,\n                required: true\n            },\n            loop: Boolean,\n            autoplay: {\n                type: Boolean,\n                default: true\n            },\n            settings: Object,\n            height: Number,\n            width: Number\n        },\n\n        data () {\n            return {\n                animation: null\n            }\n        },\n        computed: {\n            style () {\n                let style = {}\n                if (this.width) {\n                    style.width = this.width + 'px'\n                }\n                if (this.height) {\n                    style.height = this.height + 'px'\n                }\n                return style\n            }\n        },\n        methods: {\n            play () {\n                this.animation.play()\n            },\n            pause () {\n                this.animation.pause()\n            },\n            stop () {\n                this.animation.stop()\n            },\n            setSpeed (val) {\n                this.animation.setSpeed(val)\n            }\n        },\n        mounted () {\n            this.animation = lottieWeb.loadAnimation({\n                container: this.$refs.lavContainer,\n                renderer: 'svg',\n                loop: this.loop,\n                autoplay: this.autoplay,\n                animationData: this.data,\n                rendererSettings: this.settings\n            })\n        }\n    }\n</script>\n\n\n\n// WEBPACK FOOTER //\n// vue-lottie.vue?685fb426","(function(root, factory) {\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(function() {\r\n            return factory(root);\r\n        });\r\n    } else if (typeof module === \"object\" && module.exports) {\r\n        module.exports = factory(root);\r\n    } else {\r\n        root.lottie = factory(root);\r\n        root.bodymovin = root.lottie;\r\n    }\r\n}((window || {}), function(window) {\r\n    \"use strict\";\r\n    var svgNS = \"http://www.w3.org/2000/svg\";\r\n\r\nvar locationHref = '';\r\n\r\nvar initialDefaultFrame = -999999;\r\n\r\nvar subframeEnabled = true;\r\nvar expressionsPlugin;\r\nvar isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\r\nvar cachedColors = {};\r\nvar bm_rounder = Math.round;\r\nvar bm_rnd;\r\nvar bm_pow = Math.pow;\r\nvar bm_sqrt = Math.sqrt;\r\nvar bm_abs = Math.abs;\r\nvar bm_floor = Math.floor;\r\nvar bm_max = Math.max;\r\nvar bm_min = Math.min;\r\nvar blitter = 10;\r\n\r\nvar BMMath = {};\r\n(function(){\r\n    var propertyNames = Object.getOwnPropertyNames(Math);\r\n    var i, len = propertyNames.length;\r\n    for(i=0;i<len;i+=1){\r\n        BMMath[propertyNames[i]] = Math[propertyNames[i]];\r\n    }\r\n}());\r\n\r\nfunction ProjectInterface(){return {};}\r\n\r\nBMMath.random = Math.random;\r\nBMMath.abs = function(val){\r\n    var tOfVal = typeof val;\r\n    if(tOfVal === 'object' && val.length){\r\n        var absArr = createSizedArray(val.length);\r\n        var i, len = val.length;\r\n        for(i=0;i<len;i+=1){\r\n            absArr[i] = Math.abs(val[i]);\r\n        }\r\n        return absArr;\r\n    }\r\n    return Math.abs(val);\r\n\r\n};\r\nvar defaultCurveSegments = 150;\r\nvar degToRads = Math.PI/180;\r\nvar roundCorner = 0.5519;\r\n\r\nfunction roundValues(flag){\r\n    if(flag){\r\n        bm_rnd = Math.round;\r\n    }else{\r\n        bm_rnd = function(val){\r\n            return val;\r\n        };\r\n    }\r\n}\r\nroundValues(false);\r\n\r\nfunction styleDiv(element){\r\n    element.style.position = 'absolute';\r\n    element.style.top = 0;\r\n    element.style.left = 0;\r\n    element.style.display = 'block';\r\n    element.style.transformOrigin = element.style.webkitTransformOrigin = '0 0';\r\n    element.style.backfaceVisibility  = element.style.webkitBackfaceVisibility = 'visible';\r\n    element.style.transformStyle = element.style.webkitTransformStyle = element.style.mozTransformStyle = \"preserve-3d\";\r\n}\r\n\r\nfunction BMEnterFrameEvent(n,c,t,d){\r\n    this.type = n;\r\n    this.currentTime = c;\r\n    this.totalTime = t;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMCompleteEvent(n,d){\r\n    this.type = n;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMCompleteLoopEvent(n,c,t,d){\r\n    this.type = n;\r\n    this.currentLoop = t;\r\n    this.totalLoops = c;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMSegmentStartEvent(n,f,t){\r\n    this.type = n;\r\n    this.firstFrame = f;\r\n    this.totalFrames = t;\r\n}\r\n\r\nfunction BMDestroyEvent(n,t){\r\n    this.type = n;\r\n    this.target = t;\r\n}\r\n\r\nfunction randomString(length, chars){\r\n    if(chars === undefined){\r\n        chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890';\r\n    }\r\n    var i;\r\n    var result = '';\r\n    for (i = length; i > 0; --i) result += chars[Math.round(Math.random() * (chars.length - 1))];\r\n    return result;\r\n}\r\n\r\nfunction HSVtoRGB(h, s, v) {\r\n    var r, g, b, i, f, p, q, t;\r\n    i = Math.floor(h * 6);\r\n    f = h * 6 - i;\r\n    p = v * (1 - s);\r\n    q = v * (1 - f * s);\r\n    t = v * (1 - (1 - f) * s);\r\n    switch (i % 6) {\r\n        case 0: r = v; g = t; b = p; break;\r\n        case 1: r = q; g = v; b = p; break;\r\n        case 2: r = p; g = v; b = t; break;\r\n        case 3: r = p; g = q; b = v; break;\r\n        case 4: r = t; g = p; b = v; break;\r\n        case 5: r = v; g = p; b = q; break;\r\n    }\r\n    return [ r,\r\n        g,\r\n         b ];\r\n}\r\n\r\nfunction RGBtoHSV(r, g, b) {\r\n    var max = Math.max(r, g, b), min = Math.min(r, g, b),\r\n        d = max - min,\r\n        h,\r\n        s = (max === 0 ? 0 : d / max),\r\n        v = max / 255;\r\n\r\n    switch (max) {\r\n        case min: h = 0; break;\r\n        case r: h = (g - b) + d * (g < b ? 6: 0); h /= 6 * d; break;\r\n        case g: h = (b - r) + d * 2; h /= 6 * d; break;\r\n        case b: h = (r - g) + d * 4; h /= 6 * d; break;\r\n    }\r\n\r\n    return [\r\n         h,\r\n         s,\r\n         v\r\n    ];\r\n}\r\n\r\nfunction addSaturationToRGB(color,offset){\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[1] += offset;\r\n    if (hsv[1] > 1) {\r\n        hsv[1] = 1;\r\n    }\r\n    else if (hsv[1] <= 0) {\r\n        hsv[1] = 0;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nfunction addBrightnessToRGB(color,offset){\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[2] += offset;\r\n    if (hsv[2] > 1) {\r\n        hsv[2] = 1;\r\n    }\r\n    else if (hsv[2] < 0) {\r\n        hsv[2] = 0;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nfunction addHueToRGB(color,offset) {\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[0] += offset/360;\r\n    if (hsv[0] > 1) {\r\n        hsv[0] -= 1;\r\n    }\r\n    else if (hsv[0] < 0) {\r\n        hsv[0] += 1;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nvar rgbToHex = (function(){\r\n    var colorMap = [];\r\n    var i;\r\n    var hex;\r\n    for(i=0;i<256;i+=1){\r\n        hex = i.toString(16);\r\n        colorMap[i] = hex.length == 1 ? '0' + hex : hex;\r\n    }\r\n\r\n    return function(r, g, b) {\r\n        if(r<0){\r\n            r = 0;\r\n        }\r\n        if(g<0){\r\n            g = 0;\r\n        }\r\n        if(b<0){\r\n            b = 0;\r\n        }\r\n        return '#' + colorMap[r] + colorMap[g] + colorMap[b];\r\n    };\r\n}());\r\nfunction BaseEvent(){}\r\nBaseEvent.prototype = {\r\n\ttriggerEvent: function (eventName, args) {\r\n\t    if (this._cbs[eventName]) {\r\n\t        var len = this._cbs[eventName].length;\r\n\t        for (var i = 0; i < len; i++){\r\n\t            this._cbs[eventName][i](args);\r\n\t        }\r\n\t    }\r\n\t},\r\n\taddEventListener: function (eventName, callback) {\r\n\t    if (!this._cbs[eventName]){\r\n\t        this._cbs[eventName] = [];\r\n\t    }\r\n\t    this._cbs[eventName].push(callback);\r\n\r\n\t\treturn function() {\r\n\t\t\tthis.removeEventListener(eventName, callback);\r\n\t\t}.bind(this);\r\n\t},\r\n\tremoveEventListener: function (eventName,callback){\r\n\t    if (!callback){\r\n\t        this._cbs[eventName] = null;\r\n\t    }else if(this._cbs[eventName]){\r\n\t        var i = 0, len = this._cbs[eventName].length;\r\n\t        while(i<len){\r\n\t            if(this._cbs[eventName][i] === callback){\r\n\t                this._cbs[eventName].splice(i,1);\r\n\t                i -=1;\r\n\t                len -= 1;\r\n\t            }\r\n\t            i += 1;\r\n\t        }\r\n\t        if(!this._cbs[eventName].length){\r\n\t            this._cbs[eventName] = null;\r\n\t        }\r\n\t    }\r\n\t}\r\n};\r\nvar createTypedArray = (function(){\r\n\tfunction createRegularArray(type, len){\r\n\t\tvar i = 0, arr = [], value;\r\n\t\tswitch(type) {\r\n\t\t\tcase 'int16':\r\n\t\t\tcase 'uint8c':\r\n\t\t\t\tvalue = 1;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tvalue = 1.1;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tarr.push(value);\r\n\t\t}\r\n\t\treturn arr;\r\n\t}\r\n\tfunction createTypedArray(type, len){\r\n\t\tif(type === 'float32') {\r\n\t\t\treturn new Float32Array(len);\r\n\t\t} else if(type === 'int16') {\r\n\t\t\treturn new Int16Array(len);\r\n\t\t} else if(type === 'uint8c') {\r\n\t\t\treturn new Uint8ClampedArray(len);\r\n\t\t}\r\n\t}\r\n\tif(typeof Uint8ClampedArray === 'function' && typeof Float32Array === 'function') {\r\n\t\treturn createTypedArray;\r\n\t} else {\r\n\t\treturn createRegularArray;\r\n\t}\r\n}());\r\n\r\nfunction createSizedArray(len) {\r\n\treturn Array.apply(null,{length:len});\r\n}\r\nfunction createNS(type) {\r\n\t//return {appendChild:function(){},setAttribute:function(){},style:{}}\r\n\treturn document.createElementNS(svgNS, type);\r\n}\r\nfunction createTag(type) {\r\n\t//return {appendChild:function(){},setAttribute:function(){},style:{}}\r\n\treturn document.createElement(type);\r\n}\r\n/*!\r\n Transformation Matrix v2.0\r\n (c) Epistemex 2014-2015\r\n www.epistemex.com\r\n By Ken Fyrstenberg\r\n Contributions by leeoniya.\r\n License: MIT, header required.\r\n */\r\n\r\n/**\r\n * 2D transformation matrix object initialized with identity matrix.\r\n *\r\n * The matrix can synchronize a canvas context by supplying the context\r\n * as an argument, or later apply current absolute transform to an\r\n * existing context.\r\n *\r\n * All values are handled as floating point values.\r\n *\r\n * @param {CanvasRenderingContext2D} [context] - Optional context to sync with Matrix\r\n * @prop {number} a - scale x\r\n * @prop {number} b - shear y\r\n * @prop {number} c - shear x\r\n * @prop {number} d - scale y\r\n * @prop {number} e - translate x\r\n * @prop {number} f - translate y\r\n * @prop {CanvasRenderingContext2D|null} [context=null] - set or get current canvas context\r\n * @constructor\r\n */\r\n\r\nvar Matrix = (function(){\r\n\r\n    var _cos = Math.cos;\r\n    var _sin = Math.sin;\r\n    var _tan = Math.tan;\r\n    var _rnd = Math.round;\r\n\r\n    function reset(){\r\n        this.props[0] = 1;\r\n        this.props[1] = 0;\r\n        this.props[2] = 0;\r\n        this.props[3] = 0;\r\n        this.props[4] = 0;\r\n        this.props[5] = 1;\r\n        this.props[6] = 0;\r\n        this.props[7] = 0;\r\n        this.props[8] = 0;\r\n        this.props[9] = 0;\r\n        this.props[10] = 1;\r\n        this.props[11] = 0;\r\n        this.props[12] = 0;\r\n        this.props[13] = 0;\r\n        this.props[14] = 0;\r\n        this.props[15] = 1;\r\n        return this;\r\n    }\r\n\r\n    function rotate(angle) {\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateX(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(1, 0, 0, 0, 0, mCos, -mSin, 0, 0, mSin,  mCos, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateY(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos,  0,  mSin, 0, 0, 1, 0, 0, -mSin,  0,  mCos, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateZ(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function shear(sx,sy){\r\n        return this._t(1, sy, sx, 1, 0, 0);\r\n    }\r\n\r\n    function skew(ax, ay){\r\n        return this.shear(_tan(ax), _tan(ay));\r\n    }\r\n\r\n    function skewFromAxis(ax, angle){\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos, mSin,  0, 0, -mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1)\r\n            ._t(1, 0,  0, 0, _tan(ax),  1, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1)\r\n            ._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);\r\n        //return this._t(mCos, mSin, -mSin, mCos, 0, 0)._t(1, 0, _tan(ax), 1, 0, 0)._t(mCos, -mSin, mSin, mCos, 0, 0);\r\n    }\r\n\r\n    function scale(sx, sy, sz) {\r\n        sz = isNaN(sz) ? 1 : sz;\r\n        if(sx == 1 && sy == 1 && sz == 1){\r\n            return this;\r\n        }\r\n        return this._t(sx, 0, 0, 0, 0, sy, 0, 0, 0, 0, sz, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function setTransform(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {\r\n        this.props[0] = a;\r\n        this.props[1] = b;\r\n        this.props[2] = c;\r\n        this.props[3] = d;\r\n        this.props[4] = e;\r\n        this.props[5] = f;\r\n        this.props[6] = g;\r\n        this.props[7] = h;\r\n        this.props[8] = i;\r\n        this.props[9] = j;\r\n        this.props[10] = k;\r\n        this.props[11] = l;\r\n        this.props[12] = m;\r\n        this.props[13] = n;\r\n        this.props[14] = o;\r\n        this.props[15] = p;\r\n        return this;\r\n    }\r\n\r\n    function translate(tx, ty, tz) {\r\n        tz = tz || 0;\r\n        if(tx !== 0 || ty !== 0 || tz !== 0){\r\n            return this._t(1,0,0,0,0,1,0,0,0,0,1,0,tx,ty,tz,1);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function transform(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2, m2, n2, o2, p2) {\r\n\r\n        var _p = this.props;\r\n\r\n        if(a2 === 1 && b2 === 0 && c2 === 0 && d2 === 0 && e2 === 0 && f2 === 1 && g2 === 0 && h2 === 0 && i2 === 0 && j2 === 0 && k2 === 1 && l2 === 0){\r\n            //NOTE: commenting this condition because TurboFan deoptimizes code when present\r\n            //if(m2 !== 0 || n2 !== 0 || o2 !== 0){\r\n                _p[12] = _p[12] * a2 + _p[15] * m2;\r\n                _p[13] = _p[13] * f2 + _p[15] * n2;\r\n                _p[14] = _p[14] * k2 + _p[15] * o2;\r\n                _p[15] = _p[15] * p2;\r\n            //}\r\n            this._identityCalculated = false;\r\n            return this;\r\n        }\r\n\r\n        var a1 = _p[0];\r\n        var b1 = _p[1];\r\n        var c1 = _p[2];\r\n        var d1 = _p[3];\r\n        var e1 = _p[4];\r\n        var f1 = _p[5];\r\n        var g1 = _p[6];\r\n        var h1 = _p[7];\r\n        var i1 = _p[8];\r\n        var j1 = _p[9];\r\n        var k1 = _p[10];\r\n        var l1 = _p[11];\r\n        var m1 = _p[12];\r\n        var n1 = _p[13];\r\n        var o1 = _p[14];\r\n        var p1 = _p[15];\r\n\r\n        /* matrix order (canvas compatible):\r\n         * ace\r\n         * bdf\r\n         * 001\r\n         */\r\n        _p[0] = a1 * a2 + b1 * e2 + c1 * i2 + d1 * m2;\r\n        _p[1] = a1 * b2 + b1 * f2 + c1 * j2 + d1 * n2 ;\r\n        _p[2] = a1 * c2 + b1 * g2 + c1 * k2 + d1 * o2 ;\r\n        _p[3] = a1 * d2 + b1 * h2 + c1 * l2 + d1 * p2 ;\r\n\r\n        _p[4] = e1 * a2 + f1 * e2 + g1 * i2 + h1 * m2 ;\r\n        _p[5] = e1 * b2 + f1 * f2 + g1 * j2 + h1 * n2 ;\r\n        _p[6] = e1 * c2 + f1 * g2 + g1 * k2 + h1 * o2 ;\r\n        _p[7] = e1 * d2 + f1 * h2 + g1 * l2 + h1 * p2 ;\r\n\r\n        _p[8] = i1 * a2 + j1 * e2 + k1 * i2 + l1 * m2 ;\r\n        _p[9] = i1 * b2 + j1 * f2 + k1 * j2 + l1 * n2 ;\r\n        _p[10] = i1 * c2 + j1 * g2 + k1 * k2 + l1 * o2 ;\r\n        _p[11] = i1 * d2 + j1 * h2 + k1 * l2 + l1 * p2 ;\r\n\r\n        _p[12] = m1 * a2 + n1 * e2 + o1 * i2 + p1 * m2 ;\r\n        _p[13] = m1 * b2 + n1 * f2 + o1 * j2 + p1 * n2 ;\r\n        _p[14] = m1 * c2 + n1 * g2 + o1 * k2 + p1 * o2 ;\r\n        _p[15] = m1 * d2 + n1 * h2 + o1 * l2 + p1 * p2 ;\r\n\r\n        this._identityCalculated = false;\r\n        return this;\r\n    }\r\n\r\n    function isIdentity() {\r\n        if(!this._identityCalculated){\r\n            this._identity = !(this.props[0] !== 1 || this.props[1] !== 0 || this.props[2] !== 0 || this.props[3] !== 0 || this.props[4] !== 0 || this.props[5] !== 1 || this.props[6] !== 0 || this.props[7] !== 0 || this.props[8] !== 0 || this.props[9] !== 0 || this.props[10] !== 1 || this.props[11] !== 0 || this.props[12] !== 0 || this.props[13] !== 0 || this.props[14] !== 0 || this.props[15] !== 1);\r\n            this._identityCalculated = true;\r\n        }\r\n        return this._identity;\r\n    }\r\n\r\n    function equals(matr){\r\n        var i = 0;\r\n        while (i < 16) {\r\n            if(matr.props[i] !== this.props[i]) {\r\n                return false;\r\n            }\r\n            i+=1;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function clone(matr){\r\n        var i;\r\n        for(i=0;i<16;i+=1){\r\n            matr.props[i] = this.props[i];\r\n        }\r\n    }\r\n\r\n    function cloneFromProps(props){\r\n        var i;\r\n        for(i=0;i<16;i+=1){\r\n            this.props[i] = props[i];\r\n        }\r\n    }\r\n\r\n    function applyToPoint(x, y, z) {\r\n\r\n        return {\r\n            x: x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],\r\n            y: x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],\r\n            z: x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]\r\n        };\r\n        /*return {\r\n         x: x * me.a + y * me.c + me.e,\r\n         y: x * me.b + y * me.d + me.f\r\n         };*/\r\n    }\r\n    function applyToX(x, y, z) {\r\n        return x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12];\r\n    }\r\n    function applyToY(x, y, z) {\r\n        return x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13];\r\n    }\r\n    function applyToZ(x, y, z) {\r\n        return x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14];\r\n    }\r\n\r\n    function inversePoint(pt) {\r\n        var determinant = this.props[0] * this.props[5] - this.props[1] * this.props[4];\r\n        var a = this.props[5]/determinant;\r\n        var b = - this.props[1]/determinant;\r\n        var c = - this.props[4]/determinant;\r\n        var d = this.props[0]/determinant;\r\n        var e = (this.props[4] * this.props[13] - this.props[5] * this.props[12])/determinant;\r\n        var f = - (this.props[0] * this.props[13] - this.props[1] * this.props[12])/determinant;\r\n        return [pt[0] * a + pt[1] * c + e, pt[0] * b + pt[1] * d + f, 0];\r\n    }\r\n\r\n    function inversePoints(pts){\r\n        var i, len = pts.length, retPts = [];\r\n        for(i=0;i<len;i+=1){\r\n            retPts[i] = inversePoint(pts[i]);\r\n        }\r\n        return retPts;\r\n    }\r\n\r\n    function applyToTriplePoints(pt1, pt2, pt3) {\r\n        var arr = createTypedArray('float32', 6);\r\n        if(this.isIdentity()) {\r\n            arr[0] = pt1[0];\r\n            arr[1] = pt1[1];\r\n            arr[2] = pt2[0];\r\n            arr[3] = pt2[1];\r\n            arr[4] = pt3[0];\r\n            arr[5] = pt3[1];\r\n        } else {\r\n            var p0 = this.props[0], p1 = this.props[1], p4 = this.props[4], p5 = this.props[5], p12 = this.props[12], p13 = this.props[13];\r\n            arr[0] = pt1[0] * p0 + pt1[1] * p4 + p12;\r\n            arr[1] = pt1[0] * p1 + pt1[1] * p5 + p13;\r\n            arr[2] = pt2[0] * p0 + pt2[1] * p4 + p12;\r\n            arr[3] = pt2[0] * p1 + pt2[1] * p5 + p13;\r\n            arr[4] = pt3[0] * p0 + pt3[1] * p4 + p12;\r\n            arr[5] = pt3[0] * p1 + pt3[1] * p5 + p13;\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function applyToPointArray(x,y,z){\r\n        var arr;\r\n        if(this.isIdentity()) {\r\n            arr = [x,y,z];\r\n        } else {\r\n            arr = [x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]];\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function applyToPointStringified(x, y) {\r\n        if(this.isIdentity()) {\r\n            return x + ',' + y;\r\n        }\r\n        return (x * this.props[0] + y * this.props[4] + this.props[12])+','+(x * this.props[1] + y * this.props[5] + this.props[13]);\r\n    }\r\n\r\n    function toCSS() {\r\n        //Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.\r\n        /*if(this.isIdentity()) {\r\n            return '';\r\n        }*/\r\n        var i = 0;\r\n        var props = this.props;\r\n        var cssValue = 'matrix3d(';\r\n        var v = 10000;\r\n        while(i<16){\r\n            cssValue += _rnd(props[i]*v)/v;\r\n            cssValue += i === 15 ? ')':',';\r\n            i += 1;\r\n        }\r\n        return cssValue;\r\n    }\r\n\r\n    function to2dCSS() {\r\n        //Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.\r\n        /*if(this.isIdentity()) {\r\n            return '';\r\n        }*/\r\n        var v = 10000;\r\n        var props = this.props;\r\n        return \"matrix(\" + _rnd(props[0]*v)/v + ',' + _rnd(props[1]*v)/v + ',' + _rnd(props[4]*v)/v + ',' + _rnd(props[5]*v)/v + ',' + _rnd(props[12]*v)/v + ',' + _rnd(props[13]*v)/v + \")\";\r\n    }\r\n\r\n    return function(){\r\n        this.reset = reset;\r\n        this.rotate = rotate;\r\n        this.rotateX = rotateX;\r\n        this.rotateY = rotateY;\r\n        this.rotateZ = rotateZ;\r\n        this.skew = skew;\r\n        this.skewFromAxis = skewFromAxis;\r\n        this.shear = shear;\r\n        this.scale = scale;\r\n        this.setTransform = setTransform;\r\n        this.translate = translate;\r\n        this.transform = transform;\r\n        this.applyToPoint = applyToPoint;\r\n        this.applyToX = applyToX;\r\n        this.applyToY = applyToY;\r\n        this.applyToZ = applyToZ;\r\n        this.applyToPointArray = applyToPointArray;\r\n        this.applyToTriplePoints = applyToTriplePoints;\r\n        this.applyToPointStringified = applyToPointStringified;\r\n        this.toCSS = toCSS;\r\n        this.to2dCSS = to2dCSS;\r\n        this.clone = clone;\r\n        this.cloneFromProps = cloneFromProps;\r\n        this.equals = equals;\r\n        this.inversePoints = inversePoints;\r\n        this.inversePoint = inversePoint;\r\n        this._t = this.transform;\r\n        this.isIdentity = isIdentity;\r\n        this._identity = true;\r\n        this._identityCalculated = false;\r\n\r\n        this.props = createTypedArray('float32', 16);\r\n        this.reset();\r\n    };\r\n}());\r\n\r\n/*\r\n Copyright 2014 David Bau.\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining\r\n a copy of this software and associated documentation files (the\r\n \"Software\"), to deal in the Software without restriction, including\r\n without limitation the rights to use, copy, modify, merge, publish,\r\n distribute, sublicense, and/or sell copies of the Software, and to\r\n permit persons to whom the Software is furnished to do so, subject to\r\n the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be\r\n included in all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\n IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\n CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\n TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n */\r\n\r\n(function (pool, math) {\r\n//\r\n// The following constants are related to IEEE 754 limits.\r\n//\r\n    var global = this,\r\n        width = 256,        // each RC4 output is 0 <= x < 256\r\n        chunks = 6,         // at least six RC4 outputs for each double\r\n        digits = 52,        // there are 52 significant digits in a double\r\n        rngname = 'random', // rngname: name for Math.random and Math.seedrandom\r\n        startdenom = math.pow(width, chunks),\r\n        significance = math.pow(2, digits),\r\n        overflow = significance * 2,\r\n        mask = width - 1,\r\n        nodecrypto;         // node.js crypto module, initialized at the bottom.\r\n\r\n//\r\n// seedrandom()\r\n// This is the seedrandom function described above.\r\n//\r\n    function seedrandom(seed, options, callback) {\r\n        var key = [];\r\n        options = (options === true) ? { entropy: true } : (options || {});\r\n\r\n        // Flatten the seed string or build one from local entropy if needed.\r\n        var shortseed = mixkey(flatten(\r\n            options.entropy ? [seed, tostring(pool)] :\r\n                (seed === null) ? autoseed() : seed, 3), key);\r\n\r\n        // Use the seed to initialize an ARC4 generator.\r\n        var arc4 = new ARC4(key);\r\n\r\n        // This function returns a random double in [0, 1) that contains\r\n        // randomness in every bit of the mantissa of the IEEE 754 value.\r\n        var prng = function() {\r\n            var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\r\n                d = startdenom,                 //   and denominator d = 2 ^ 48.\r\n                x = 0;                          //   and no 'extra last byte'.\r\n            while (n < significance) {          // Fill up all significant digits by\r\n                n = (n + x) * width;              //   shifting numerator and\r\n                d *= width;                       //   denominator and generating a\r\n                x = arc4.g(1);                    //   new least-significant-byte.\r\n            }\r\n            while (n >= overflow) {             // To avoid rounding up, before adding\r\n                n /= 2;                           //   last byte, shift everything\r\n                d /= 2;                           //   right using integer math until\r\n                x >>>= 1;                         //   we have exactly the desired bits.\r\n            }\r\n            return (n + x) / d;                 // Form the number within [0, 1).\r\n        };\r\n\r\n        prng.int32 = function() { return arc4.g(4) | 0; };\r\n        prng.quick = function() { return arc4.g(4) / 0x100000000; };\r\n        prng.double = prng;\r\n\r\n        // Mix the randomness into accumulated entropy.\r\n        mixkey(tostring(arc4.S), pool);\r\n\r\n        // Calling convention: what to return as a function of prng, seed, is_math.\r\n        return (options.pass || callback ||\r\n        function(prng, seed, is_math_call, state) {\r\n            if (state) {\r\n                // Load the arc4 state from the given state if it has an S array.\r\n                if (state.S) { copy(state, arc4); }\r\n                // Only provide the .state method if requested via options.state.\r\n                prng.state = function() { return copy(arc4, {}); };\r\n            }\r\n\r\n            // If called as a method of Math (Math.seedrandom()), mutate\r\n            // Math.random because that is how seedrandom.js has worked since v1.0.\r\n            if (is_math_call) { math[rngname] = prng; return seed; }\r\n\r\n            // Otherwise, it is a newer calling convention, so return the\r\n            // prng directly.\r\n            else return prng;\r\n        })(\r\n            prng,\r\n            shortseed,\r\n            'global' in options ? options.global : (this == math),\r\n            options.state);\r\n    }\r\n    math['seed' + rngname] = seedrandom;\r\n\r\n//\r\n// ARC4\r\n//\r\n// An ARC4 implementation.  The constructor takes a key in the form of\r\n// an array of at most (width) integers that should be 0 <= x < (width).\r\n//\r\n// The g(count) method returns a pseudorandom integer that concatenates\r\n// the next (count) outputs from ARC4.  Its return value is a number x\r\n// that is in the range 0 <= x < (width ^ count).\r\n//\r\n    function ARC4(key) {\r\n        var t, keylen = key.length,\r\n            me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\r\n\r\n        // The empty key [] is treated as [0].\r\n        if (!keylen) { key = [keylen++]; }\r\n\r\n        // Set up S using the standard key scheduling algorithm.\r\n        while (i < width) {\r\n            s[i] = i++;\r\n        }\r\n        for (i = 0; i < width; i++) {\r\n            s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\r\n            s[j] = t;\r\n        }\r\n\r\n        // The \"g\" method returns the next (count) outputs as one number.\r\n        me.g = function(count) {\r\n            // Using instance members instead of closure state nearly doubles speed.\r\n            var t, r = 0,\r\n                i = me.i, j = me.j, s = me.S;\r\n            while (count--) {\r\n                t = s[i = mask & (i + 1)];\r\n                r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\r\n            }\r\n            me.i = i; me.j = j;\r\n            return r;\r\n            // For robust unpredictability, the function call below automatically\r\n            // discards an initial batch of values.  This is called RC4-drop[256].\r\n            // See http://google.com/search?q=rsa+fluhrer+response&btnI\r\n        };\r\n    }\r\n\r\n//\r\n// copy()\r\n// Copies internal state of ARC4 to or from a plain object.\r\n//\r\n    function copy(f, t) {\r\n        t.i = f.i;\r\n        t.j = f.j;\r\n        t.S = f.S.slice();\r\n        return t;\r\n    }\r\n\r\n//\r\n// flatten()\r\n// Converts an object tree to nested arrays of strings.\r\n//\r\n    function flatten(obj, depth) {\r\n        var result = [], typ = (typeof obj), prop;\r\n        if (depth && typ == 'object') {\r\n            for (prop in obj) {\r\n                try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\r\n            }\r\n        }\r\n        return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\r\n    }\r\n\r\n//\r\n// mixkey()\r\n// Mixes a string seed into a key that is an array of integers, and\r\n// returns a shortened string seed that is equivalent to the result key.\r\n//\r\n    function mixkey(seed, key) {\r\n        var stringseed = seed + '', smear, j = 0;\r\n        while (j < stringseed.length) {\r\n            key[mask & j] =\r\n                mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\r\n        }\r\n        return tostring(key);\r\n    }\r\n\r\n//\r\n// autoseed()\r\n// Returns an object for autoseeding, using window.crypto and Node crypto\r\n// module if available.\r\n//\r\n    function autoseed() {\r\n        try {\r\n            if (nodecrypto) { return tostring(nodecrypto.randomBytes(width)); }\r\n            var out = new Uint8Array(width);\r\n            (global.crypto || global.msCrypto).getRandomValues(out);\r\n            return tostring(out);\r\n        } catch (e) {\r\n            var browser = global.navigator,\r\n                plugins = browser && browser.plugins;\r\n            return [+new Date(), global, plugins, global.screen, tostring(pool)];\r\n        }\r\n    }\r\n\r\n//\r\n// tostring()\r\n// Converts an array of charcodes to a string\r\n//\r\n    function tostring(a) {\r\n        return String.fromCharCode.apply(0, a);\r\n    }\r\n\r\n//\r\n// When seedrandom.js is loaded, we immediately mix a few bits\r\n// from the built-in RNG into the entropy pool.  Because we do\r\n// not want to interfere with deterministic PRNG state later,\r\n// seedrandom will not call math.random on its own again after\r\n// initialization.\r\n//\r\n    mixkey(math.random(), pool);\r\n\r\n//\r\n// Nodejs and AMD support: export the implementation as a module using\r\n// either convention.\r\n//\r\n\r\n// End anonymous scope, and pass initial values.\r\n})(\r\n    [],     // pool: entropy pool starts empty\r\n    BMMath    // math: package containing random, pow, and seedrandom\r\n);\r\nvar BezierFactory = (function(){\r\n    /**\r\n     * BezierEasing - use bezier curve for transition easing function\r\n     * by Gaëtan Renaudeau 2014 - 2015 – MIT License\r\n     *\r\n     * Credits: is based on Firefox's nsSMILKeySpline.cpp\r\n     * Usage:\r\n     * var spline = BezierEasing([ 0.25, 0.1, 0.25, 1.0 ])\r\n     * spline.get(x) => returns the easing value | x must be in [0, 1] range\r\n     *\r\n     */\r\n\r\n        var ob = {};\r\n    ob.getBezierEasing = getBezierEasing;\r\n    var beziers = {};\r\n\r\n    function getBezierEasing(a,b,c,d,nm){\r\n        var str = nm || ('bez_' + a+'_'+b+'_'+c+'_'+d).replace(/\\./g, 'p');\r\n        if(beziers[str]){\r\n            return beziers[str];\r\n        }\r\n        var bezEasing = new BezierEasing([a,b,c,d]);\r\n        beziers[str] = bezEasing;\r\n        return bezEasing;\r\n    }\r\n\r\n// These values are established by empiricism with tests (tradeoff: performance VS precision)\r\n    var NEWTON_ITERATIONS = 4;\r\n    var NEWTON_MIN_SLOPE = 0.001;\r\n    var SUBDIVISION_PRECISION = 0.0000001;\r\n    var SUBDIVISION_MAX_ITERATIONS = 10;\r\n\r\n    var kSplineTableSize = 11;\r\n    var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\r\n\r\n    var float32ArraySupported = typeof Float32Array === \"function\";\r\n\r\n    function A (aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }\r\n    function B (aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }\r\n    function C (aA1)      { return 3.0 * aA1; }\r\n\r\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\r\n    function calcBezier (aT, aA1, aA2) {\r\n        return ((A(aA1, aA2)*aT + B(aA1, aA2))*aT + C(aA1))*aT;\r\n    }\r\n\r\n// Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\r\n    function getSlope (aT, aA1, aA2) {\r\n        return 3.0 * A(aA1, aA2)*aT*aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\r\n    }\r\n\r\n    function binarySubdivide (aX, aA, aB, mX1, mX2) {\r\n        var currentX, currentT, i = 0;\r\n        do {\r\n            currentT = aA + (aB - aA) / 2.0;\r\n            currentX = calcBezier(currentT, mX1, mX2) - aX;\r\n            if (currentX > 0.0) {\r\n                aB = currentT;\r\n            } else {\r\n                aA = currentT;\r\n            }\r\n        } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\r\n        return currentT;\r\n    }\r\n\r\n    function newtonRaphsonIterate (aX, aGuessT, mX1, mX2) {\r\n        for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\r\n            var currentSlope = getSlope(aGuessT, mX1, mX2);\r\n            if (currentSlope === 0.0) return aGuessT;\r\n            var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\r\n            aGuessT -= currentX / currentSlope;\r\n        }\r\n        return aGuessT;\r\n    }\r\n\r\n    /**\r\n     * points is an array of [ mX1, mY1, mX2, mY2 ]\r\n     */\r\n    function BezierEasing (points) {\r\n        this._p = points;\r\n        this._mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\r\n        this._precomputed = false;\r\n\r\n        this.get = this.get.bind(this);\r\n    }\r\n\r\n    BezierEasing.prototype = {\r\n\r\n        get: function (x) {\r\n            var mX1 = this._p[0],\r\n                mY1 = this._p[1],\r\n                mX2 = this._p[2],\r\n                mY2 = this._p[3];\r\n            if (!this._precomputed) this._precompute();\r\n            if (mX1 === mY1 && mX2 === mY2) return x; // linear\r\n            // Because JavaScript number are imprecise, we should guarantee the extremes are right.\r\n            if (x === 0) return 0;\r\n            if (x === 1) return 1;\r\n            return calcBezier(this._getTForX(x), mY1, mY2);\r\n        },\r\n\r\n        // Private part\r\n\r\n        _precompute: function () {\r\n            var mX1 = this._p[0],\r\n                mY1 = this._p[1],\r\n                mX2 = this._p[2],\r\n                mY2 = this._p[3];\r\n            this._precomputed = true;\r\n            if (mX1 !== mY1 || mX2 !== mY2)\r\n                this._calcSampleValues();\r\n        },\r\n\r\n        _calcSampleValues: function () {\r\n            var mX1 = this._p[0],\r\n                mX2 = this._p[2];\r\n            for (var i = 0; i < kSplineTableSize; ++i) {\r\n                this._mSampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * getTForX chose the fastest heuristic to determine the percentage value precisely from a given X projection.\r\n         */\r\n        _getTForX: function (aX) {\r\n            var mX1 = this._p[0],\r\n                mX2 = this._p[2],\r\n                mSampleValues = this._mSampleValues;\r\n\r\n            var intervalStart = 0.0;\r\n            var currentSample = 1;\r\n            var lastSample = kSplineTableSize - 1;\r\n\r\n            for (; currentSample !== lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {\r\n                intervalStart += kSampleStepSize;\r\n            }\r\n            --currentSample;\r\n\r\n            // Interpolate to provide an initial guess for t\r\n            var dist = (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample+1] - mSampleValues[currentSample]);\r\n            var guessForT = intervalStart + dist * kSampleStepSize;\r\n\r\n            var initialSlope = getSlope(guessForT, mX1, mX2);\r\n            if (initialSlope >= NEWTON_MIN_SLOPE) {\r\n                return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\r\n            } else if (initialSlope === 0.0) {\r\n                return guessForT;\r\n            } else {\r\n                return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\r\n            }\r\n        }\r\n    };\r\n\r\n    return ob;\r\n\r\n}());\r\n(function () {\r\n    var lastTime = 0;\r\n    var vendors = ['ms', 'moz', 'webkit', 'o'];\r\n    for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\r\n        window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\r\n        window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\r\n    }\r\n    if(!window.requestAnimationFrame)\r\n        window.requestAnimationFrame = function (callback, element) {\r\n            var currTime = new Date().getTime();\r\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n            var id = setTimeout(function () {\r\n                    callback(currTime + timeToCall);\r\n                },\r\n                timeToCall);\r\n            lastTime = currTime + timeToCall;\r\n            return id;\r\n        };\r\n    if(!window.cancelAnimationFrame)\r\n        window.cancelAnimationFrame = function (id) {\r\n            clearTimeout(id);\r\n        };\r\n}());\r\n\r\nfunction extendPrototype(sources,destination){\r\n    var i, len = sources.length, sourcePrototype;\r\n    for (i = 0;i < len;i += 1) {\r\n        sourcePrototype = sources[i].prototype;\r\n        for (var attr in sourcePrototype) {\r\n            if (sourcePrototype.hasOwnProperty(attr)) destination.prototype[attr] = sourcePrototype[attr];\r\n        }\r\n    }\r\n}\r\n\r\nfunction getDescriptor(object, prop) {\r\n    return Object.getOwnPropertyDescriptor(object, prop);\r\n}\r\n\r\nfunction createProxyFunction(prototype) {\r\n\tfunction ProxyFunction(){}\r\n\tProxyFunction.prototype = prototype;\r\n\treturn ProxyFunction;\r\n}\r\nfunction bezFunction(){\r\n\r\n    var easingFunctions = [];\r\n    var math = Math;\r\n\r\n    function pointOnLine2D(x1,y1, x2,y2, x3,y3){\r\n        var det1 = (x1*y2) + (y1*x3) + (x2*y3) - (x3*y2) - (y3*x1) - (x2*y1);\r\n        return det1 > -0.0001 && det1 < 0.0001;\r\n    }\r\n\r\n    function pointOnLine3D(x1,y1,z1, x2,y2,z2, x3,y3,z3){\r\n        if(z1 === 0 && z2 === 0 && z3 === 0) {\r\n            return pointOnLine2D(x1,y1, x2,y2, x3,y3);\r\n        }\r\n        var dist1 = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2) + Math.pow(z2 - z1, 2));\r\n        var dist2 = Math.sqrt(Math.pow(x3 - x1, 2) + Math.pow(y3 - y1, 2) + Math.pow(z3 - z1, 2));\r\n        var dist3 = Math.sqrt(Math.pow(x3 - x2, 2) + Math.pow(y3 - y2, 2) + Math.pow(z3 - z2, 2));\r\n        var diffDist;\r\n        if(dist1 > dist2){\r\n            if(dist1 > dist3){\r\n                diffDist = dist1 - dist2 - dist3;\r\n            } else {\r\n                diffDist = dist3 - dist2 - dist1;\r\n            }\r\n        } else if(dist3 > dist2){\r\n            diffDist = dist3 - dist2 - dist1;\r\n        } else {\r\n            diffDist = dist2 - dist1 - dist3;\r\n        }\r\n        return diffDist > -0.0001 && diffDist < 0.0001;\r\n    }\r\n\r\n    var getBezierLength = (function(){\r\n\r\n        return function(pt1,pt2,pt3,pt4){\r\n            var curveSegments = defaultCurveSegments;\r\n            var k;\r\n            var i, len;\r\n            var ptCoord,perc,addedLength = 0;\r\n            var ptDistance;\r\n            var point = [],lastPoint = [];\r\n            var lengthData = bezier_length_pool.newElement();\r\n            len = pt3.length;\r\n            for(k=0;k<curveSegments;k+=1){\r\n                perc = k/(curveSegments-1);\r\n                ptDistance = 0;\r\n                for(i=0;i<len;i+=1){\r\n                    ptCoord = bm_pow(1-perc,3)*pt1[i]+3*bm_pow(1-perc,2)*perc*pt3[i]+3*(1-perc)*bm_pow(perc,2)*pt4[i]+bm_pow(perc,3)*pt2[i];\r\n                    point[i] = ptCoord;\r\n                    if(lastPoint[i] !== null){\r\n                        ptDistance += bm_pow(point[i] - lastPoint[i],2);\r\n                    }\r\n                    lastPoint[i] = point[i];\r\n                }\r\n                if(ptDistance){\r\n                    ptDistance = bm_sqrt(ptDistance);\r\n                    addedLength += ptDistance;\r\n                }\r\n                lengthData.percents[k] = perc;\r\n                lengthData.lengths[k] = addedLength;\r\n            }\r\n            lengthData.addedLength = addedLength;\r\n            return lengthData;\r\n        };\r\n    }());\r\n\r\n    function getSegmentsLength(shapeData) {\r\n        var segmentsLength = segments_length_pool.newElement();\r\n        var closed = shapeData.c;\r\n        var pathV = shapeData.v;\r\n        var pathO = shapeData.o;\r\n        var pathI = shapeData.i;\r\n        var i, len = shapeData._length;\r\n        var lengths = segmentsLength.lengths;\r\n        var totalLength = 0;\r\n        for(i=0;i<len-1;i+=1){\r\n            lengths[i] = getBezierLength(pathV[i],pathV[i+1],pathO[i],pathI[i+1]);\r\n            totalLength += lengths[i].addedLength;\r\n        }\r\n        if(closed){\r\n            lengths[i] = getBezierLength(pathV[i],pathV[0],pathO[i],pathI[0]);\r\n            totalLength += lengths[i].addedLength;\r\n        }\r\n        segmentsLength.totalLength = totalLength;\r\n        return segmentsLength;\r\n    }\r\n\r\n    function BezierData(length){\r\n        this.segmentLength = 0;\r\n        this.points = new Array(length);\r\n    }\r\n\r\n    function PointData(partial,point){\r\n        this.partialLength = partial;\r\n        this.point = point;\r\n    }\r\n\r\n    var buildBezierData = (function(){\r\n\r\n        var storedData = {};\r\n\r\n        return function (keyData){\r\n            var pt1 = keyData.s;\r\n            var pt2 = keyData.e;\r\n            var pt3 = keyData.to;\r\n            var pt4 = keyData.ti;\r\n            var bezierName = (pt1[0]+'_'+pt1[1]+'_'+pt2[0]+'_'+pt2[1]+'_'+pt3[0]+'_'+pt3[1]+'_'+pt4[0]+'_'+pt4[1]).replace(/\\./g, 'p');\r\n            if(storedData[bezierName]){\r\n                keyData.bezierData = storedData[bezierName];\r\n                return;\r\n            }\r\n            var curveSegments = defaultCurveSegments;\r\n            var k, i, len;\r\n            var ptCoord,perc,addedLength = 0;\r\n            var ptDistance;\r\n            var point,lastPoint = null;\r\n            if (pt1.length === 2 && (pt1[0] != pt2[0] || pt1[1] != pt2[1]) && pointOnLine2D(pt1[0],pt1[1],pt2[0],pt2[1],pt1[0]+pt3[0],pt1[1]+pt3[1]) && pointOnLine2D(pt1[0],pt1[1],pt2[0],pt2[1],pt2[0]+pt4[0],pt2[1]+pt4[1])){\r\n                curveSegments = 2;\r\n            }\r\n            var bezierData = new BezierData(curveSegments);\r\n            len = pt3.length;\r\n            for (k = 0; k < curveSegments; k += 1) {\r\n                point = createSizedArray(len);\r\n                perc = k / (curveSegments - 1);\r\n                ptDistance = 0;\r\n                for (i = 0; i < len; i += 1){\r\n                    ptCoord = bm_pow(1-perc,3)*pt1[i]+3*bm_pow(1-perc,2)*perc*(pt1[i] + pt3[i])+3*(1-perc)*bm_pow(perc,2)*(pt2[i] + pt4[i])+bm_pow(perc,3)*pt2[i];\r\n                    point[i] = ptCoord;\r\n                    if(lastPoint !== null){\r\n                        ptDistance += bm_pow(point[i] - lastPoint[i],2);\r\n                    }\r\n                }\r\n                ptDistance = bm_sqrt(ptDistance);\r\n                addedLength += ptDistance;\r\n                bezierData.points[k] = new PointData(ptDistance, point);\r\n                lastPoint = point;\r\n            }\r\n            bezierData.segmentLength = addedLength;\r\n            keyData.bezierData = bezierData;\r\n            storedData[bezierName] = bezierData;\r\n        };\r\n    }());\r\n\r\n    function getDistancePerc(perc,bezierData){\r\n        var percents = bezierData.percents;\r\n        var lengths = bezierData.lengths;\r\n        var len = percents.length;\r\n        var initPos = bm_floor((len-1)*perc);\r\n        var lengthPos = perc*bezierData.addedLength;\r\n        var lPerc = 0;\r\n        if(initPos === len - 1 || initPos === 0 || lengthPos === lengths[initPos]){\r\n            return percents[initPos];\r\n        }else{\r\n            var dir = lengths[initPos] > lengthPos ? -1 : 1;\r\n            var flag = true;\r\n            while(flag){\r\n                if(lengths[initPos] <= lengthPos && lengths[initPos+1] > lengthPos){\r\n                    lPerc = (lengthPos - lengths[initPos]) / (lengths[initPos+1] - lengths[initPos]);\r\n                    flag = false;\r\n                }else{\r\n                    initPos += dir;\r\n                }\r\n                if(initPos < 0 || initPos >= len - 1){\r\n                    //FIX for TypedArrays that don't store floating point values with enough accuracy\r\n                    if(initPos === len - 1) {\r\n                        return percents[initPos];\r\n                    }\r\n                    flag = false;\r\n                }\r\n            }\r\n            return percents[initPos] + (percents[initPos+1] - percents[initPos])*lPerc;\r\n        }\r\n    }\r\n\r\n    function getPointInSegment(pt1, pt2, pt3, pt4, percent, bezierData) {\r\n        var t1 = getDistancePerc(percent,bezierData);\r\n        var u0 = 1;\r\n        var u1 = 1 - t1;\r\n        var ptX = Math.round((u1*u1*u1* pt1[0] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[0] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[0] + t1*t1*t1* pt2[0])* 1000) / 1000;\r\n        var ptY = Math.round((u1*u1*u1* pt1[1] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[1] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[1] + t1*t1*t1* pt2[1])* 1000) / 1000;\r\n        return [ptX, ptY];\r\n    }\r\n\r\n    function getSegmentArray() {\r\n\r\n    }\r\n\r\n    var bezier_segment_points = createTypedArray('float32', 8);\r\n\r\n    function getNewSegment(pt1,pt2,pt3,pt4,startPerc,endPerc, bezierData){\r\n\r\n        startPerc = startPerc < 0 ? 0 : startPerc > 1 ? 1 : startPerc;\r\n        var t0 = getDistancePerc(startPerc,bezierData);\r\n        endPerc = endPerc > 1 ? 1 : endPerc;\r\n        var t1 = getDistancePerc(endPerc,bezierData);\r\n        var i, len = pt1.length;\r\n        var u0 = 1 - t0;\r\n        var u1 = 1 - t1;\r\n        var u0u0u0 = u0*u0*u0;\r\n        var t0u0u0_3 = t0*u0*u0*3; // t0*u0*u0 + u0*t0*u0 + u0*u0*t0\r\n        var t0t0u0_3 = t0*t0*u0*3; // t0*t0*u0 + u0*t0*t0 + t0*u0*t0\r\n        var t0t0t0 = t0*t0*t0;\r\n        //\r\n        var u0u0u1 = u0*u0*u1;\r\n        var t0u0u1_3 = t0*u0*u1 + u0*t0*u1 + u0*u0*t1;\r\n        var t0t0u1_3 = t0*t0*u1 + u0*t0*t1 + t0*u0*t1;\r\n        var t0t0t1 = t0*t0*t1;\r\n        //\r\n        var u0u1u1 = u0*u1*u1;\r\n        var t0u1u1_3 = t0*u1*u1 + u0*t1*u1 + u0*u1*t1;\r\n        var t0t1u1_3 = t0*t1*u1 + u0*t1*t1 + t0*u1*t1;\r\n        var t0t1t1 = t0*t1*t1;\r\n        //\r\n        var u1u1u1 = u1*u1*u1;\r\n        var t1u1u1_3 = t1*u1*u1 + u1*t1*u1 + u1*u1*t1;\r\n        var t1t1u1_3 = t1*t1*u1 + u1*t1*t1 + t1*u1*t1;\r\n        var t1t1t1 = t1*t1*t1;\r\n        //Math.round(num * 100) / 100\r\n        for(i=0;i<len;i+=1){\r\n            bezier_segment_points[i * 4] = Math.round((u0u0u0 * pt1[i] + t0u0u0_3 * pt3[i] + t0t0u0_3 * pt4[i] + t0t0t0 * pt2[i]) * 1000) / 1000;\r\n            bezier_segment_points[i * 4 + 1] = Math.round((u0u0u1 * pt1[i] + t0u0u1_3 * pt3[i] + t0t0u1_3 * pt4[i] + t0t0t1 * pt2[i]) * 1000) / 1000;\r\n            bezier_segment_points[i * 4 + 2] = Math.round((u0u1u1 * pt1[i] + t0u1u1_3 * pt3[i] + t0t1u1_3 * pt4[i] + t0t1t1 * pt2[i]) * 1000) / 1000;\r\n            bezier_segment_points[i * 4 + 3] = Math.round((u1u1u1 * pt1[i] + t1u1u1_3 * pt3[i] + t1t1u1_3 * pt4[i] + t1t1t1 * pt2[i]) * 1000) / 1000;\r\n            // pts.pt1[i] = Math.round((u0u0u0 * pt1[i] + t0u0u0_3 * pt3[i] + t0t0u0_3 * pt4[i] + t0t0t0 * pt2[i]) * 1000) / 1000;\r\n            // pts.pt3[i] = Math.round((u0u0u1 * pt1[i] + t0u0u1_3 * pt3[i] + t0t0u1_3 * pt4[i] + t0t0t1 * pt2[i]) * 1000) / 1000;\r\n            // pts.pt4[i] = Math.round((u0u1u1 * pt1[i] + t0u1u1_3 * pt3[i] + t0t1u1_3 * pt4[i] + t0t1t1 * pt2[i]) * 1000) / 1000;\r\n            // pts.pt2[i] = Math.round((u1u1u1 * pt1[i] + t1u1u1_3 * pt3[i] + t1t1u1_3 * pt4[i] + t1t1t1 * pt2[i]) * 1000) / 1000;\r\n            // pts.pt1[i] =  Math.round((u0*u0*u0* pt1[i] + (t0*u0*u0 + u0*t0*u0 + u0*u0*t0) * pt3[i] + (t0*t0*u0 + u0*t0*t0 + t0*u0*t0)* pt4[i] + t0*t0*t0* pt2[i])* 1000) / 1000;\r\n            // pts.pt3[i] = Math.round((u0*u0*u1*pt1[i] + (t0*u0*u1 + u0*t0*u1 + u0*u0*t1)* pt3[i] + (t0*t0*u1 + u0*t0*t1 + t0*u0*t1)* pt4[i] + t0*t0*t1* pt2[i])* 1000) / 1000;\r\n            // pts.pt4[i] = Math.round((u0*u1*u1* pt1[i] + (t0*u1*u1 + u0*t1*u1 + u0*u1*t1)* pt3[i] + (t0*t1*u1 + u0*t1*t1 + t0*u1*t1)* pt4[i] + t0*t1*t1* pt2[i])* 1000) / 1000;\r\n            // pts.pt2[i] = Math.round((u1*u1*u1* pt1[i] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[i] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[i] + t1*t1*t1* pt2[i])* 1000) / 1000;\r\n        }\r\n\r\n        return bezier_segment_points;\r\n    }\r\n\r\n    return {\r\n        //getEasingCurve : getEasingCurve,\r\n        getSegmentsLength : getSegmentsLength,\r\n        getNewSegment : getNewSegment,\r\n        getPointInSegment : getPointInSegment,\r\n        buildBezierData : buildBezierData,\r\n        pointOnLine2D : pointOnLine2D,\r\n        pointOnLine3D : pointOnLine3D\r\n    };\r\n}\r\n\r\nvar bez = bezFunction();\r\nfunction dataFunctionManager(){\r\n\r\n    //var tCanvasHelper = createTag('canvas').getContext('2d');\r\n\r\n    function completeLayers(layers, comps, fontManager){\r\n        var layerData;\r\n        var animArray, lastFrame;\r\n        var i, len = layers.length;\r\n        var j, jLen, k, kLen;\r\n        for(i=0;i<len;i+=1){\r\n            layerData = layers[i];\r\n            if(!('ks' in layerData) || layerData.completed){\r\n                continue;\r\n            }\r\n            layerData.completed = true;\r\n            if(layerData.tt){\r\n                layers[i-1].td = layerData.tt;\r\n            }\r\n            animArray = [];\r\n            lastFrame = -1;\r\n            if(layerData.hasMask){\r\n                var maskProps = layerData.masksProperties;\r\n                jLen = maskProps.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    if(maskProps[j].pt.k.i){\r\n                        convertPathsToAbsoluteValues(maskProps[j].pt.k);\r\n                    }else{\r\n                        kLen = maskProps[j].pt.k.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            if(maskProps[j].pt.k[k].s){\r\n                                convertPathsToAbsoluteValues(maskProps[j].pt.k[k].s[0]);\r\n                            }\r\n                            if(maskProps[j].pt.k[k].e){\r\n                                convertPathsToAbsoluteValues(maskProps[j].pt.k[k].e[0]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(layerData.ty===0){\r\n                layerData.layers = findCompLayers(layerData.refId, comps);\r\n                completeLayers(layerData.layers,comps, fontManager);\r\n            }else if(layerData.ty === 4){\r\n                completeShapes(layerData.shapes);\r\n            }else if(layerData.ty == 5){\r\n                completeText(layerData, fontManager);\r\n            }\r\n        }\r\n    }\r\n\r\n    function findCompLayers(id,comps){\r\n        var i = 0, len = comps.length;\r\n        while(i<len){\r\n            if(comps[i].id === id){\r\n                if(!comps[i].layers.__used) {\r\n                    comps[i].layers.__used = true;\r\n                    return comps[i].layers;\r\n                }\r\n                return JSON.parse(JSON.stringify(comps[i].layers));\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    function completeShapes(arr){\r\n        var i, len = arr.length;\r\n        var j, jLen;\r\n        var hasPaths = false;\r\n        for(i=len-1;i>=0;i-=1){\r\n            if(arr[i].ty == 'sh'){\r\n                if(arr[i].ks.k.i){\r\n                    convertPathsToAbsoluteValues(arr[i].ks.k);\r\n                }else{\r\n                    jLen = arr[i].ks.k.length;\r\n                    for(j=0;j<jLen;j+=1){\r\n                        if(arr[i].ks.k[j].s){\r\n                            convertPathsToAbsoluteValues(arr[i].ks.k[j].s[0]);\r\n                        }\r\n                        if(arr[i].ks.k[j].e){\r\n                            convertPathsToAbsoluteValues(arr[i].ks.k[j].e[0]);\r\n                        }\r\n                    }\r\n                }\r\n                hasPaths = true;\r\n            }else if(arr[i].ty == 'gr'){\r\n                completeShapes(arr[i].it);\r\n            }\r\n        }\r\n        /*if(hasPaths){\r\n            //mx: distance\r\n            //ss: sensitivity\r\n            //dc: decay\r\n            arr.splice(arr.length-1,0,{\r\n                \"ty\": \"ms\",\r\n                \"mx\":20,\r\n                \"ss\":10,\r\n                 \"dc\":0.001,\r\n                \"maxDist\":200\r\n            });\r\n        }*/\r\n    }\r\n\r\n    function convertPathsToAbsoluteValues(path){\r\n        var i, len = path.i.length;\r\n        for(i=0;i<len;i+=1){\r\n            path.i[i][0] += path.v[i][0];\r\n            path.i[i][1] += path.v[i][1];\r\n            path.o[i][0] += path.v[i][0];\r\n            path.o[i][1] += path.v[i][1];\r\n        }\r\n    }\r\n\r\n    function checkVersion(minimum,animVersionString){\r\n        var animVersion = animVersionString ? animVersionString.split('.') : [100,100,100];\r\n        if(minimum[0]>animVersion[0]){\r\n            return true;\r\n        } else if(animVersion[0] > minimum[0]){\r\n            return false;\r\n        }\r\n        if(minimum[1]>animVersion[1]){\r\n            return true;\r\n        } else if(animVersion[1] > minimum[1]){\r\n            return false;\r\n        }\r\n        if(minimum[2]>animVersion[2]){\r\n            return true;\r\n        } else if(animVersion[2] > minimum[2]){\r\n            return false;\r\n        }\r\n    }\r\n\r\n    var checkText = (function(){\r\n        var minimumVersion = [4,4,14];\r\n\r\n        function updateTextLayer(textLayer){\r\n            var documentData = textLayer.t.d;\r\n            textLayer.t.d = {\r\n                k: [\r\n                    {\r\n                        s:documentData,\r\n                        t:0\r\n                    }\r\n                ]\r\n            };\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var i, len = layers.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(layers[i].ty === 5){\r\n                    updateTextLayer(layers[i]);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    var checkChars = (function() {\r\n        var minimumVersion = [4,7,99];\r\n        return function (animationData){\r\n            if(animationData.chars && !checkVersion(minimumVersion,animationData.v)){\r\n                var i, len = animationData.chars.length, j, jLen, k, kLen;\r\n                var pathData, paths;\r\n                for(i = 0; i < len; i += 1) {\r\n                    if(animationData.chars[i].data && animationData.chars[i].data.shapes) {\r\n                        paths = animationData.chars[i].data.shapes[0].it;\r\n                        jLen = paths.length;\r\n\r\n                        for(j = 0; j < jLen; j += 1) {\r\n                            pathData = paths[j].ks.k;\r\n                            if(!pathData.__converted) {\r\n                                convertPathsToAbsoluteValues(paths[j].ks.k);\r\n                                pathData.__converted = true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    var checkColors = (function(){\r\n        var minimumVersion = [4,1,9];\r\n\r\n        function iterateShapes(shapes){\r\n            var i, len = shapes.length;\r\n            var j, jLen;\r\n            for(i=0;i<len;i+=1){\r\n                if(shapes[i].ty === 'gr'){\r\n                    iterateShapes(shapes[i].it);\r\n                }else if(shapes[i].ty === 'fl' || shapes[i].ty === 'st'){\r\n                    if(shapes[i].c.k && shapes[i].c.k[0].i){\r\n                        jLen = shapes[i].c.k.length;\r\n                        for(j=0;j<jLen;j+=1){\r\n                            if(shapes[i].c.k[j].s){\r\n                                shapes[i].c.k[j].s[0] /= 255;\r\n                                shapes[i].c.k[j].s[1] /= 255;\r\n                                shapes[i].c.k[j].s[2] /= 255;\r\n                                shapes[i].c.k[j].s[3] /= 255;\r\n                            }\r\n                            if(shapes[i].c.k[j].e){\r\n                                shapes[i].c.k[j].e[0] /= 255;\r\n                                shapes[i].c.k[j].e[1] /= 255;\r\n                                shapes[i].c.k[j].e[2] /= 255;\r\n                                shapes[i].c.k[j].e[3] /= 255;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        shapes[i].c.k[0] /= 255;\r\n                        shapes[i].c.k[1] /= 255;\r\n                        shapes[i].c.k[2] /= 255;\r\n                        shapes[i].c.k[3] /= 255;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var i, len = layers.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(layers[i].ty === 4){\r\n                    iterateShapes(layers[i].shapes);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    var checkShapes = (function(){\r\n        var minimumVersion = [4,4,18];\r\n\r\n\r\n\r\n        function completeShapes(arr){\r\n            var i, len = arr.length;\r\n            var j, jLen;\r\n            var hasPaths = false;\r\n            for(i=len-1;i>=0;i-=1){\r\n                if(arr[i].ty == 'sh'){\r\n                    if(arr[i].ks.k.i){\r\n                        arr[i].ks.k.c = arr[i].closed;\r\n                    }else{\r\n                        jLen = arr[i].ks.k.length;\r\n                        for(j=0;j<jLen;j+=1){\r\n                            if(arr[i].ks.k[j].s){\r\n                                arr[i].ks.k[j].s[0].c = arr[i].closed;\r\n                            }\r\n                            if(arr[i].ks.k[j].e){\r\n                                arr[i].ks.k[j].e[0].c = arr[i].closed;\r\n                            }\r\n                        }\r\n                    }\r\n                    hasPaths = true;\r\n                }else if(arr[i].ty == 'gr'){\r\n                    completeShapes(arr[i].it);\r\n                }\r\n            }\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var layerData;\r\n            var i, len = layers.length;\r\n            var j, jLen, k, kLen;\r\n            for(i=0;i<len;i+=1){\r\n                layerData = layers[i];\r\n                if(layerData.hasMask){\r\n                    var maskProps = layerData.masksProperties;\r\n                    jLen = maskProps.length;\r\n                    for(j=0;j<jLen;j+=1){\r\n                        if(maskProps[j].pt.k.i){\r\n                            maskProps[j].pt.k.c = maskProps[j].cl;\r\n                        }else{\r\n                            kLen = maskProps[j].pt.k.length;\r\n                            for(k=0;k<kLen;k+=1){\r\n                                if(maskProps[j].pt.k[k].s){\r\n                                    maskProps[j].pt.k[k].s[0].c = maskProps[j].cl;\r\n                                }\r\n                                if(maskProps[j].pt.k[k].e){\r\n                                    maskProps[j].pt.k[k].e[0].c = maskProps[j].cl;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if(layerData.ty === 4){\r\n                    completeShapes(layerData.shapes);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    /*function blitPaths(path){\r\n        var i, len = path.i.length;\r\n        for(i=0;i<len;i+=1){\r\n            path.i[i][0] /= blitter;\r\n            path.i[i][1] /= blitter;\r\n            path.o[i][0] /= blitter;\r\n            path.o[i][1] /= blitter;\r\n            path.v[i][0] /= blitter;\r\n            path.v[i][1] /= blitter;\r\n        }\r\n    }\r\n\r\n    function blitShapes(arr){\r\n        var i, len = arr.length;\r\n        var j, jLen;\r\n        var hasPaths = false;\r\n        for(i=len-1;i>=0;i-=1){\r\n            if(arr[i].ty == 'sh'){\r\n                if(arr[i].ks.k.i){\r\n                    blitPaths(arr[i].ks.k);\r\n                }else{\r\n                    jLen = arr[i].ks.k.length;\r\n                    for(j=0;j<jLen;j+=1){\r\n                        if(arr[i].ks.k[j].s){\r\n                            blitPaths(arr[i].ks.k[j].s[0]);\r\n                        }\r\n                        if(arr[i].ks.k[j].e){\r\n                            blitPaths(arr[i].ks.k[j].e[0]);\r\n                        }\r\n                    }\r\n                }\r\n                hasPaths = true;\r\n            }else if(arr[i].ty == 'gr'){\r\n                blitShapes(arr[i].it);\r\n            }else if(arr[i].ty == 'rc'){\r\n                blitProperty(arr[i].p);\r\n                blitProperty(arr[i].s);\r\n            }else if(arr[i].ty == 'st'){\r\n                blitProperty(arr[i].w);\r\n            }else if(arr[i].ty == 'tr'){\r\n                blitProperty(arr[i].p);\r\n                blitProperty(arr[i].sk);\r\n                blitProperty(arr[i].a);\r\n            }else if(arr[i].ty == 'el'){\r\n                blitProperty(arr[i].p);\r\n                blitProperty(arr[i].s);\r\n            }else if(arr[i].ty == 'rd'){\r\n                blitProperty(arr[i].r);\r\n            }else{\r\n\r\n                //console.log(arr[i].ty );\r\n            }\r\n        }\r\n    }\r\n\r\n    function blitText(data, fontManager){\r\n\r\n    }\r\n\r\n    function blitValue(val){\r\n        if(typeof(val) === 'number'){\r\n            val /= blitter;\r\n        } else {\r\n            var i = val.length-1;\r\n            while(i>=0){\r\n                val[i] /= blitter;\r\n                i-=1;\r\n            }\r\n        }\r\n        return val;\r\n    }\r\n\r\n    function blitProperty(data){\r\n        if(!data.k.length){\r\n            data.k = blitValue(data.k);\r\n        }else if(typeof(data.k[0]) === 'number'){\r\n            data.k = blitValue(data.k);\r\n        } else {\r\n            var i, len = data.k.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(data.k[i].s){\r\n                    //console.log('pre S: ', data.k[i].s);\r\n                    data.k[i].s = blitValue(data.k[i].s);\r\n                    //console.log('post S: ', data.k[i].s);\r\n                }\r\n                if(data.k[i].e){\r\n                    //console.log('pre E: ', data.k[i].e);\r\n                    data.k[i].e = blitValue(data.k[i].e);\r\n                    //console.log('post E: ', data.k[i].e);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function blitLayers(layers,comps, fontManager){\r\n        var layerData;\r\n        var animArray, lastFrame;\r\n        var i, len = layers.length;\r\n        var j, jLen, k, kLen;\r\n        for(i=0;i<len;i+=1){\r\n            layerData = layers[i];\r\n            if(!('ks' in layerData)){\r\n                continue;\r\n            }\r\n            blitProperty(layerData.ks.a);\r\n            blitProperty(layerData.ks.p);\r\n            layerData.completed = true;\r\n            if(layerData.tt){\r\n                layers[i-1].td = layerData.tt;\r\n            }\r\n            animArray = [];\r\n            lastFrame = -1;\r\n            if(layerData.hasMask){\r\n                var maskProps = layerData.masksProperties;\r\n                jLen = maskProps.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    if(maskProps[j].pt.k.i){\r\n                        blitPaths(maskProps[j].pt.k);\r\n                    }else{\r\n                        kLen = maskProps[j].pt.k.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            if(maskProps[j].pt.k[k].s){\r\n                                blitPaths(maskProps[j].pt.k[k].s[0]);\r\n                            }\r\n                            if(maskProps[j].pt.k[k].e){\r\n                                blitPaths(maskProps[j].pt.k[k].e[0]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(layerData.ty===0){\r\n                layerData.w = Math.round(layerData.w/blitter);\r\n                layerData.h = Math.round(layerData.h/blitter);\r\n                blitLayers(layerData.layers,comps, fontManager);\r\n            }else if(layerData.ty === 4){\r\n                blitShapes(layerData.shapes);\r\n            }else if(layerData.ty == 5){\r\n                blitText(layerData, fontManager);\r\n            }else if(layerData.ty == 1){\r\n                layerData.sh /= blitter;\r\n                layerData.sw /= blitter;\r\n            } else {\r\n            }\r\n        }\r\n    }\r\n\r\n    function blitAnimation(animationData,comps, fontManager){\r\n        blitLayers(animationData.layers,comps, fontManager);\r\n    }*/\r\n\r\n    function completeData(animationData, fontManager){\r\n        if(animationData.__complete){\r\n            return;\r\n        }\r\n        checkColors(animationData);\r\n        checkText(animationData);\r\n        checkChars(animationData);\r\n        checkShapes(animationData);\r\n        completeLayers(animationData.layers, animationData.assets, fontManager);\r\n        animationData.__complete = true;\r\n        //blitAnimation(animationData, animationData.assets, fontManager);\r\n    }\r\n\r\n    function completeText(data, fontManager){\r\n        if(data.t.a.length === 0 && !('m' in data.t.p)){\r\n            data.singleShape = true;\r\n        }\r\n    }\r\n\r\n    var moduleOb = {};\r\n    moduleOb.completeData = completeData;\r\n\r\n    return moduleOb;\r\n}\r\n\r\nvar dataManager = dataFunctionManager();\r\nvar FontManager = (function(){\r\n\r\n    var maxWaitingTime = 5000;\r\n    var emptyChar = {\r\n        w: 0,\r\n        size:0,\r\n        shapes:[]\r\n    };\r\n    var combinedCharacters = [];\r\n    //Hindi characters\r\n    combinedCharacters = combinedCharacters.concat([2304, 2305, 2306, 2307, 2362, 2363, 2364, 2364, 2366\r\n    , 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379\r\n    , 2380, 2381, 2382, 2383, 2387, 2388, 2389, 2390, 2391, 2402, 2403]);\r\n\r\n    function setUpNode(font, family){\r\n        var parentNode = createTag('span');\r\n        parentNode.style.fontFamily    = family;\r\n        var node = createTag('span');\r\n        // Characters that vary significantly among different fonts\r\n        node.innerHTML = 'giItT1WQy@!-/#';\r\n        // Visible - so we can measure it - but not on the screen\r\n        parentNode.style.position      = 'absolute';\r\n        parentNode.style.left          = '-10000px';\r\n        parentNode.style.top           = '-10000px';\r\n        // Large font size makes even subtle changes obvious\r\n        parentNode.style.fontSize      = '300px';\r\n        // Reset any font properties\r\n        parentNode.style.fontVariant   = 'normal';\r\n        parentNode.style.fontStyle     = 'normal';\r\n        parentNode.style.fontWeight    = 'normal';\r\n        parentNode.style.letterSpacing = '0';\r\n        parentNode.appendChild(node);\r\n        document.body.appendChild(parentNode);\r\n\r\n        // Remember width with no applied web font\r\n        var width = node.offsetWidth;\r\n        node.style.fontFamily = font + ', '+family;\r\n        return {node:node, w:width, parent:parentNode};\r\n    }\r\n\r\n    function checkLoadedFonts() {\r\n        var i, len = this.fonts.length;\r\n        var node, w;\r\n        var loadedCount = len;\r\n        for(i=0;i<len; i+= 1){\r\n            if(this.fonts[i].loaded){\r\n                loadedCount -= 1;\r\n                continue;\r\n            }\r\n            if(this.fonts[i].fOrigin === 't' || this.fonts[i].origin === 2){\r\n                if(window.Typekit && window.Typekit.load && this.typekitLoaded === 0){\r\n                    this.typekitLoaded = 1;\r\n                    try{window.Typekit.load({\r\n                        async: true,\r\n                        active: function() {\r\n                            this.typekitLoaded = 2;\r\n                        }.bind(this)\r\n                    });}catch(e){}\r\n                }\r\n                if(this.typekitLoaded === 2) {\r\n                    this.fonts[i].loaded = true;\r\n                }\r\n            } else if(this.fonts[i].fOrigin === 'n' || this.fonts[i].origin === 0){\r\n                this.fonts[i].loaded = true;\r\n            } else{\r\n                node = this.fonts[i].monoCase.node;\r\n                w = this.fonts[i].monoCase.w;\r\n                if(node.offsetWidth !== w){\r\n                    loadedCount -= 1;\r\n                    this.fonts[i].loaded = true;\r\n                }else{\r\n                    node = this.fonts[i].sansCase.node;\r\n                    w = this.fonts[i].sansCase.w;\r\n                    if(node.offsetWidth !== w){\r\n                        loadedCount -= 1;\r\n                        this.fonts[i].loaded = true;\r\n                    }\r\n                }\r\n                if(this.fonts[i].loaded){\r\n                    this.fonts[i].sansCase.parent.parentNode.removeChild(this.fonts[i].sansCase.parent);\r\n                    this.fonts[i].monoCase.parent.parentNode.removeChild(this.fonts[i].monoCase.parent);\r\n                }\r\n            }\r\n        }\r\n\r\n        if(loadedCount !== 0 && Date.now() - this.initTime < maxWaitingTime){\r\n            setTimeout(checkLoadedFonts.bind(this),20);\r\n        }else{\r\n            setTimeout(function(){this.loaded = true;}.bind(this),0);\r\n\r\n        }\r\n    }\r\n\r\n    function createHelper(def, fontData){\r\n        var tHelper = createNS('text');\r\n        tHelper.style.fontSize = '100px';\r\n        tHelper.style.fontFamily = fontData.fFamily;\r\n        tHelper.textContent = '1';\r\n        if(fontData.fClass){\r\n            tHelper.style.fontFamily = 'inherit';\r\n            tHelper.className = fontData.fClass;\r\n        } else {\r\n            tHelper.style.fontFamily = fontData.fFamily;\r\n        }\r\n        def.appendChild(tHelper);\r\n        var tCanvasHelper = createTag('canvas').getContext('2d');\r\n        tCanvasHelper.font = '100px '+ fontData.fFamily;\r\n        return tCanvasHelper;\r\n    }\r\n\r\n    function addFonts(fontData, defs){\r\n        if(!fontData){\r\n            this.loaded = true;\r\n            return;\r\n        }\r\n        if(this.chars){\r\n            this.loaded = true;\r\n            this.fonts = fontData.list;\r\n            return;\r\n        }\r\n\r\n        var fontArr = fontData.list;\r\n        var i, len = fontArr.length;\r\n        for(i=0; i<len; i+= 1){\r\n            fontArr[i].loaded = false;\r\n            fontArr[i].monoCase = setUpNode(fontArr[i].fFamily,'monospace');\r\n            fontArr[i].sansCase = setUpNode(fontArr[i].fFamily,'sans-serif');\r\n            if(!fontArr[i].fPath) {\r\n                fontArr[i].loaded = true;\r\n            }else if(fontArr[i].fOrigin === 'p' || fontArr[i].origin === 3){\r\n                var s = createTag('style');\r\n                s.type = \"text/css\";\r\n                s.innerHTML = \"@font-face {\" + \"font-family: \"+fontArr[i].fFamily+\"; font-style: normal; src: url('\"+fontArr[i].fPath+\"');}\";\r\n                defs.appendChild(s);\r\n            } else if(fontArr[i].fOrigin === 'g' || fontArr[i].origin === 1){\r\n                //<link href='https://fonts.googleapis.com/css?family=Montserrat' rel='stylesheet' type='text/css'>\r\n                var l = createTag('link');\r\n                l.type = \"text/css\";\r\n                l.rel = \"stylesheet\";\r\n                l.href = fontArr[i].fPath;\r\n                defs.appendChild(l);\r\n            } else if(fontArr[i].fOrigin === 't' || fontArr[i].origin === 2){\r\n                //<link href='https://fonts.googleapis.com/css?family=Montserrat' rel='stylesheet' type='text/css'>\r\n                var sc = createTag('script');\r\n                sc.setAttribute('src',fontArr[i].fPath);\r\n                defs.appendChild(sc);\r\n            }\r\n            fontArr[i].helper = createHelper(defs,fontArr[i]);\r\n            this.fonts.push(fontArr[i]);\r\n        }\r\n        checkLoadedFonts.bind(this)();\r\n    }\r\n\r\n    function addChars(chars){\r\n        if(!chars){\r\n            return;\r\n        }\r\n        if(!this.chars){\r\n            this.chars = [];\r\n        }\r\n        var i, len = chars.length;\r\n        var j, jLen = this.chars.length, found;\r\n        for(i=0;i<len;i+=1){\r\n            j = 0;\r\n            found = false;\r\n            while(j<jLen){\r\n                if(this.chars[j].style === chars[i].style && this.chars[j].fFamily === chars[i].fFamily && this.chars[j].ch === chars[i].ch){\r\n                    found = true;\r\n                }\r\n                j += 1;\r\n            }\r\n            if(!found){\r\n                this.chars.push(chars[i]);\r\n                jLen += 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    function getCharData(char, style, font){\r\n        var i = 0, len = this.chars.length;\r\n        while( i < len) {\r\n            if(this.chars[i].ch === char && this.chars[i].style === style && this.chars[i].fFamily === font){\r\n                return this.chars[i];\r\n            }\r\n            i+= 1;\r\n        }\r\n        if(console && console.warn) {\r\n            console.warn('Missing character from exported characters list: ', char, style, font);\r\n        }\r\n        return emptyChar;\r\n    }\r\n\r\n    function measureText(char, fontName, size){\r\n        var fontData = this.getFontByName(fontName);\r\n        var tHelper = fontData.helper;\r\n        //tHelper.textContent = char;\r\n        return tHelper.measureText(char).width*size/100;\r\n        //return tHelper.getComputedTextLength()*size/100;\r\n    }\r\n\r\n    function getFontByName(name){\r\n        var i = 0, len = this.fonts.length;\r\n        while(i<len){\r\n            if(this.fonts[i].fName === name) {\r\n                return this.fonts[i];\r\n            }\r\n            i += 1;\r\n        }\r\n        return 'sans-serif';\r\n    }\r\n\r\n    function getCombinedCharacterCodes() {\r\n        return combinedCharacters;\r\n    }\r\n\r\n    var Font = function(){\r\n        this.fonts = [];\r\n        this.chars = null;\r\n        this.typekitLoaded = 0;\r\n        this.loaded = false;\r\n        this.initTime = Date.now();\r\n    };\r\n    //TODO: for now I'm adding these methods to the Class and not the prototype. Think of a better way to implement it. \r\n    Font.getCombinedCharacterCodes = getCombinedCharacterCodes;\r\n\r\n    Font.prototype.addChars = addChars;\r\n    Font.prototype.addFonts = addFonts;\r\n    Font.prototype.getCharData = getCharData;\r\n    Font.prototype.getFontByName = getFontByName;\r\n    Font.prototype.measureText = measureText;\r\n\r\n    return Font;\r\n\r\n}());\r\nvar PropertyFactory = (function(){\r\n\r\n    var initFrame = initialDefaultFrame;\r\n\r\n    function interpolateValue(frameNum, previousValue, caching){\r\n        var offsetTime = this.offsetTime;\r\n        var newValue;\r\n        if(this.propType === 'multidimensional') {\r\n            newValue = createTypedArray('float32', previousValue.length);\r\n        }\r\n        var iterationIndex = caching.lastIndex;\r\n        var i = iterationIndex;\r\n        var len = this.keyframes.length- 1,flag = true;\r\n        var keyData, nextKeyData;\r\n\r\n        while(flag){\r\n            keyData = this.keyframes[i];\r\n            nextKeyData = this.keyframes[i+1];\r\n            if(i == len-1 && frameNum >= nextKeyData.t - offsetTime){\r\n                if(keyData.h){\r\n                    keyData = nextKeyData;\r\n                }\r\n                iterationIndex = 0;\r\n                break;\r\n            }\r\n            if((nextKeyData.t - offsetTime) > frameNum){\r\n                iterationIndex = i;\r\n                break;\r\n            }\r\n            if(i < len - 1){\r\n                i += 1;\r\n            }else{\r\n                iterationIndex = 0;\r\n                flag = false;\r\n            }\r\n        }\r\n\r\n        var k, kLen,perc,jLen, j, fnc;\r\n        if(keyData.to){\r\n\r\n            if(!keyData.bezierData){\r\n                bez.buildBezierData(keyData);\r\n            }\r\n            var bezierData = keyData.bezierData;\r\n            if(frameNum >= nextKeyData.t-offsetTime || frameNum < keyData.t-offsetTime){\r\n                var ind = frameNum >= nextKeyData.t-offsetTime ? bezierData.points.length - 1 : 0;\r\n                kLen = bezierData.points[ind].point.length;\r\n                for(k = 0; k < kLen; k += 1){\r\n                    newValue[k] = bezierData.points[ind].point[k];\r\n                }\r\n                caching._lastBezierData = null;\r\n            }else{\r\n                if(keyData.__fnct){\r\n                    fnc = keyData.__fnct;\r\n                }else{\r\n                    fnc = BezierFactory.getBezierEasing(keyData.o.x,keyData.o.y,keyData.i.x,keyData.i.y,keyData.n).get;\r\n                    keyData.__fnct = fnc;\r\n                }\r\n                perc = fnc((frameNum-(keyData.t-offsetTime))/((nextKeyData.t-offsetTime)-(keyData.t-offsetTime)));\r\n                var distanceInLine = bezierData.segmentLength*perc;\r\n\r\n                var segmentPerc;\r\n                var addedLength =  (caching.lastFrame < frameNum && caching._lastBezierData === bezierData) ? caching._lastAddedLength : 0;\r\n                j =  (caching.lastFrame < frameNum && caching._lastBezierData === bezierData) ? caching._lastPoint : 0;\r\n                flag = true;\r\n                jLen = bezierData.points.length;\r\n                while(flag){\r\n                    addedLength +=bezierData.points[j].partialLength;\r\n                    if(distanceInLine === 0 || perc === 0 || j == bezierData.points.length - 1){\r\n                        kLen = bezierData.points[j].point.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            newValue[k] = bezierData.points[j].point[k];\r\n                        }\r\n                        break;\r\n                    }else if(distanceInLine >= addedLength && distanceInLine < addedLength + bezierData.points[j+1].partialLength){\r\n                        segmentPerc = (distanceInLine-addedLength)/(bezierData.points[j+1].partialLength);\r\n                        kLen = bezierData.points[j].point.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            newValue[k] = bezierData.points[j].point[k] + (bezierData.points[j+1].point[k] - bezierData.points[j].point[k])*segmentPerc;\r\n                        }\r\n                        break;\r\n                    }\r\n                    if(j < jLen - 1){\r\n                        j += 1;\r\n                    }else{\r\n                        flag = false;\r\n                    }\r\n                }\r\n                caching._lastPoint = j;\r\n                caching._lastAddedLength = addedLength - bezierData.points[j].partialLength;\r\n                caching._lastBezierData = bezierData;\r\n            }\r\n        }else{\r\n            var outX,outY,inX,inY, keyValue;\r\n            len = keyData.s.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(keyData.h !== 1){\r\n                    if(frameNum >= nextKeyData.t-offsetTime){\r\n                        perc = 1;\r\n                    }else if(frameNum < keyData.t-offsetTime){\r\n                        perc = 0;\r\n                    }else{\r\n                        if(keyData.o.x.constructor === Array){\r\n                            if(!keyData.__fnct){\r\n                                keyData.__fnct = [];\r\n                            }\r\n                            if (!keyData.__fnct[i]) {\r\n                                outX = keyData.o.x[i] || keyData.o.x[0];\r\n                                outY = keyData.o.y[i] || keyData.o.y[0];\r\n                                inX = keyData.i.x[i] || keyData.i.x[0];\r\n                                inY = keyData.i.y[i] || keyData.i.y[0];\r\n                                fnc = BezierFactory.getBezierEasing(outX,outY,inX,inY).get;\r\n                                keyData.__fnct[i] = fnc;\r\n                            } else {\r\n                                fnc = keyData.__fnct[i];\r\n                            }\r\n                        } else {\r\n                            if (!keyData.__fnct) {\r\n                                outX = keyData.o.x;\r\n                                outY = keyData.o.y;\r\n                                inX = keyData.i.x;\r\n                                inY = keyData.i.y;\r\n                                fnc = BezierFactory.getBezierEasing(outX,outY,inX,inY).get;\r\n                                keyData.__fnct = fnc;\r\n                            } else{\r\n                                fnc = keyData.__fnct;\r\n                            }\r\n                        }\r\n                        perc = fnc((frameNum-(keyData.t-offsetTime))/((nextKeyData.t-offsetTime)-(keyData.t-offsetTime)));\r\n                    }\r\n                }\r\n                if(this.sh && keyData.h !== 1){\r\n                    var initP = keyData.s[i];\r\n                    var endP = keyData.e[i];\r\n                    if(initP-endP < -180){\r\n                        initP += 360;\r\n                    } else if(initP-endP > 180){\r\n                        initP -= 360;\r\n                    }\r\n                    keyValue = initP+(endP-initP)*perc;\r\n                } else {\r\n                    keyValue = keyData.h === 1 ? keyData.s[i] : keyData.s[i]+(keyData.e[i]-keyData.s[i])*perc;\r\n                }\r\n                if(len === 1){\r\n                    newValue = keyValue;\r\n                }else{\r\n                    newValue[i] = keyValue;\r\n                }\r\n            }\r\n        }\r\n        caching.lastIndex = iterationIndex;\r\n        return newValue;\r\n    }\r\n\r\n    function calculateMultidimensionalValueAtCurrentTime(renderResult) {\r\n        var i = 0;\r\n        while(i<this.v.length){\r\n            this.pv[i] = renderResult[i];\r\n            this.v[i] = this.mult ? this.pv[i] * this.mult : this.pv[i];\r\n            if(this.lastPValue[i] !== this.pv[i]) {\r\n                this._mdf = true;\r\n                this.lastPValue[i] = this.pv[i];\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    function calculateUnidimenstionalValueAtCurrentTime(renderResult) {\r\n        this.pv = renderResult;\r\n        this.v = this.mult ? this.pv*this.mult : this.pv;\r\n        if(this.lastPValue != this.pv){\r\n            this._mdf = true;\r\n            this.lastPValue = this.pv;\r\n        }\r\n    }\r\n\r\n    function getValueAtCurrentTime(){\r\n        if(this.elem.globalData.frameId === this.frameId){\r\n            return;\r\n        }\r\n        this._mdf = false;\r\n        var frameNum = this.comp.renderedFrame - this.offsetTime;\r\n        var initTime = this.keyframes[0].t - this.offsetTime;\r\n        var endTime = this.keyframes[this.keyframes.length- 1].t-this.offsetTime;\r\n        if(!(frameNum === this._caching.lastFrame || (this._caching.lastFrame !== initFrame && ((this._caching.lastFrame >= endTime && frameNum >= endTime) || (this._caching.lastFrame < initTime && frameNum < initTime))))){\r\n            this._caching.lastIndex = this._caching.lastFrame < frameNum ? this._caching.lastIndex : 0;\r\n            var renderResult = this.interpolateValue(frameNum, this.pv, this._caching);\r\n            this.calculateValueAtCurrentTime(renderResult);\r\n        }\r\n        this._caching.lastFrame = frameNum;\r\n        this.frameId = this.elem.globalData.frameId;\r\n    }\r\n\r\n    function getNoValue(){\r\n        this._mdf = false;\r\n    }\r\n\r\n    function ValueProperty(elem,data, mult){\r\n        this.propType = 'unidimensional';\r\n        this.mult = mult;\r\n        this.v = mult ? data.k * mult : data.k;\r\n        this.pv = data.k;\r\n        this._mdf = false;\r\n        this.comp = elem.comp;\r\n        this.k = false;\r\n        this.kf = false;\r\n        this.vel = 0;\r\n        this.getValue = getNoValue;\r\n    }\r\n\r\n    function MultiDimensionalProperty(elem, data, mult) {\r\n        this.propType = 'multidimensional';\r\n        this.mult = mult;\r\n        this.data = data;\r\n        this._mdf = false;\r\n        this.comp = elem.comp;\r\n        this.k = false;\r\n        this.kf = false;\r\n        this.frameId = -1;\r\n        var i, len = data.k.length;\r\n        this.v = createTypedArray('float32', len);\r\n        this.pv = createTypedArray('float32', len);\r\n        this.lastValue = createTypedArray('float32', len);\r\n        var arr = createTypedArray('float32', len);\r\n        this.vel = createTypedArray('float32', len);\r\n        for (i = 0; i < len; i += 1) {\r\n            this.v[i] = mult ? data.k[i] * mult : data.k[i];\r\n            this.pv[i] = data.k[i];\r\n        }\r\n        this.getValue = getNoValue;\r\n    }\r\n\r\n    function KeyframedValueProperty(elem, data, mult) {\r\n        this.propType = 'unidimensional';\r\n        this.keyframes = data.k;\r\n        this.offsetTime = elem.data.st;\r\n        this.lastValue = initFrame;\r\n        this.lastPValue = initFrame;\r\n        this.frameId = -1;\r\n        this._caching = {lastFrame: initFrame, lastIndex: 0, value: 0};\r\n        this.k = true;\r\n        this.kf = true;\r\n        this.data = data;\r\n        this.mult = mult;\r\n        this.elem = elem;\r\n        this._isFirstFrame = false;\r\n        this.comp = elem.comp;\r\n        this.v = mult ? data.k[0].s[0] * mult : data.k[0].s[0];\r\n        this.pv = data.k[0].s[0];\r\n        this.getValue = getValueAtCurrentTime;\r\n        this.calculateValueAtCurrentTime = calculateUnidimenstionalValueAtCurrentTime;\r\n        this.interpolateValue = interpolateValue;\r\n    }\r\n\r\n    function KeyframedMultidimensionalProperty(elem, data, mult){\r\n        this.propType = 'multidimensional';\r\n        var i, len = data.k.length;\r\n        var s, e,to,ti;\r\n        for (i = 0; i < len - 1; i += 1) {\r\n            if (data.k[i].to && data.k[i].s && data.k[i].e) {\r\n                s = data.k[i].s;\r\n                e = data.k[i].e;\r\n                to = data.k[i].to;\r\n                ti = data.k[i].ti;\r\n                if((s.length === 2 && !(s[0] === e[0] && s[1] === e[1]) && bez.pointOnLine2D(s[0],s[1],e[0],e[1],s[0] + to[0],s[1] + to[1]) && bez.pointOnLine2D(s[0],s[1],e[0],e[1],e[0] + ti[0],e[1] + ti[1])) || (s.length === 3 && !(s[0] === e[0] && s[1] === e[1] && s[2] === e[2]) && bez.pointOnLine3D(s[0],s[1],s[2],e[0],e[1],e[2],s[0] + to[0],s[1] + to[1],s[2] + to[2]) && bez.pointOnLine3D(s[0],s[1],s[2],e[0],e[1],e[2],e[0] + ti[0],e[1] + ti[1],e[2] + ti[2]))){\r\n                    data.k[i].to = null;\r\n                    data.k[i].ti = null;\r\n                }\r\n                if(s[0] === e[0] && s[1] === e[1] && to[0] === 0 && to[1] === 0 && ti[0] === 0 && ti[1] === 0) {\r\n                    if(s.length === 2 || (s[2] === e[2] && to[2] === 0 && ti[2] === 0)) {\r\n                        data.k[i].to = null;\r\n                        data.k[i].ti = null;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.keyframes = data.k;\r\n        this.offsetTime = elem.data.st;\r\n        this.k = true;\r\n        this.kf = true;\r\n        this._isFirstFrame = true;\r\n        this.mult = mult;\r\n        this.elem = elem;\r\n        this.comp = elem.comp;\r\n        this.getValue = getValueAtCurrentTime;\r\n        this.calculateValueAtCurrentTime = calculateMultidimensionalValueAtCurrentTime;\r\n        this.interpolateValue = interpolateValue;\r\n        this.frameId = -1;\r\n        var arrLen = data.k[0].s.length;\r\n        this.v = createTypedArray('float32', arrLen);\r\n        this.pv = createTypedArray('float32', arrLen);\r\n        this.lastValue = createTypedArray('float32', arrLen);\r\n        this.lastPValue = createTypedArray('float32', arrLen);\r\n        this._caching={lastFrame:initFrame,lastIndex:0,value:createTypedArray('float32', arrLen)};\r\n    }\r\n\r\n    function getProp(elem,data,type, mult, arr) {\r\n        var p;\r\n        if(data.a === 0){\r\n            if(type === 0) {\r\n                p = new ValueProperty(elem,data,mult);\r\n            } else {\r\n                p = new MultiDimensionalProperty(elem,data, mult);\r\n            }\r\n        } else if(data.a === 1){\r\n            if(type === 0) {\r\n                p = new KeyframedValueProperty(elem,data,mult);\r\n            } else {\r\n                p = new KeyframedMultidimensionalProperty(elem,data, mult);\r\n            }\r\n        } else if(!data.k.length){\r\n            p = new ValueProperty(elem,data, mult);\r\n        }else if(typeof(data.k[0]) === 'number'){\r\n            p = new MultiDimensionalProperty(elem,data, mult);\r\n        }else{\r\n            switch(type){\r\n                case 0:\r\n                    p = new KeyframedValueProperty(elem,data,mult);\r\n                    break;\r\n                case 1:\r\n                    p = new KeyframedMultidimensionalProperty(elem,data,mult);\r\n                    break;\r\n            }\r\n        }\r\n        if(p.k){\r\n            arr.push(p);\r\n        }\r\n        return p;\r\n    }\r\n\r\n    var ob = {\r\n        getProp: getProp\r\n    };\r\n    return ob;\r\n}());\r\nvar TransformPropertyFactory = (function() {\r\n\r\n    function applyToMatrix(mat) {\r\n        var i, len = this.dynamicProperties.length;\r\n        for(i = 0; i < len; i += 1) {\r\n            this.dynamicProperties[i].getValue();\r\n            if (this.dynamicProperties[i]._mdf) {\r\n                this._mdf = true;\r\n            }\r\n        }\r\n        if (this.a) {\r\n            mat.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n        }\r\n        if (this.s) {\r\n            mat.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n        }\r\n        if (this.r) {\r\n            mat.rotate(-this.r.v);\r\n        } else {\r\n            mat.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n        }\r\n        if (this.data.p.s) {\r\n            if (this.data.p.z) {\r\n                mat.translate(this.px.v, this.py.v, -this.pz.v);\r\n            } else {\r\n                mat.translate(this.px.v, this.py.v, 0);\r\n            }\r\n        } else {\r\n            mat.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);\r\n        }\r\n    }\r\n    function processKeys(forceRender){\r\n        if (this.elem.globalData.frameId === this.frameId) {\r\n            return;\r\n        }\r\n\r\n        this._mdf = false;\r\n        var i, len = this.dynamicProperties.length;\r\n\r\n        for(i = 0; i < len; i += 1) {\r\n            this.dynamicProperties[i].getValue();\r\n            if (this.dynamicProperties[i]._mdf) {\r\n                this._mdf = true;\r\n            }\r\n        }\r\n\r\n        if (this._mdf || forceRender) {\r\n            this.v.reset();\r\n            if (this.a) {\r\n                this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n            }\r\n            if(this.s) {\r\n                this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n            }\r\n            if (this.sk) {\r\n                this.v.skewFromAxis(-this.sk.v, this.sa.v);\r\n            }\r\n            if (this.r) {\r\n                this.v.rotate(-this.r.v);\r\n            } else {\r\n                this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n            }\r\n            if (this.autoOriented && this.p.keyframes && this.p.getValueAtTime) {\r\n                var v1,v2;\r\n                if (this.p._caching.lastFrame+this.p.offsetTime <= this.p.keyframes[0].t) {\r\n                    v1 = this.p.getValueAtTime((this.p.keyframes[0].t + 0.01) / this.elem.globalData.frameRate,0);\r\n                    v2 = this.p.getValueAtTime(this.p.keyframes[0].t / this.elem.globalData.frameRate, 0);\r\n                } else if(this.p._caching.lastFrame+this.p.offsetTime >= this.p.keyframes[this.p.keyframes.length - 1].t) {\r\n                    v1 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t / this.elem.globalData.frameRate), 0);\r\n                    v2 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t - 0.01) / this.elem.globalData.frameRate, 0);\r\n                } else {\r\n                    v1 = this.p.pv;\r\n                    v2 = this.p.getValueAtTime((this.p._caching.lastFrame+this.p.offsetTime - 0.01) / this.elem.globalData.frameRate, this.p.offsetTime);\r\n                }\r\n                this.v.rotate(-Math.atan2(v1[1] - v2[1], v1[0] - v2[0]));\r\n            }\r\n            if(this.data.p.s){\r\n                if(this.data.p.z) {\r\n                    this.v.translate(this.px.v, this.py.v, -this.pz.v);\r\n                } else {\r\n                    this.v.translate(this.px.v, this.py.v, 0);\r\n                }\r\n            }else{\r\n                this.v.translate(this.p.v[0],this.p.v[1],-this.p.v[2]);\r\n            }\r\n        }\r\n        this.frameId = this.elem.globalData.frameId;\r\n    }\r\n\r\n    function setInverted(){\r\n        this.inverted = true;\r\n        this.iv = new Matrix();\r\n        if(!this.k){\r\n            if(this.data.p.s){\r\n                this.iv.translate(this.px.v,this.py.v,-this.pz.v);\r\n            }else{\r\n                this.iv.translate(this.p.v[0],this.p.v[1],-this.p.v[2]);\r\n            }\r\n            if(this.r){\r\n                this.iv.rotate(-this.r.v);\r\n            }else{\r\n                this.iv.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v);\r\n            }\r\n            if(this.s){\r\n                this.iv.scale(this.s.v[0],this.s.v[1],1);\r\n            }\r\n            if(this.a){\r\n                this.iv.translate(-this.a.v[0],-this.a.v[1],this.a.v[2]);\r\n            }\r\n        }\r\n    }\r\n\r\n    function autoOrient(){\r\n        //\r\n        //var prevP = this.getValueAtTime();\r\n    }\r\n\r\n    function TransformProperty(elem,data,arr){\r\n        this.elem = elem;\r\n        this.frameId = -1;\r\n        this.propType = 'transform';\r\n        this.dynamicProperties = [];\r\n        this._mdf = false;\r\n        this.data = data;\r\n        this.v = new Matrix();\r\n        if(data.p.s){\r\n            this.px = PropertyFactory.getProp(elem,data.p.x,0,0,this.dynamicProperties);\r\n            this.py = PropertyFactory.getProp(elem,data.p.y,0,0,this.dynamicProperties);\r\n            if(data.p.z){\r\n                this.pz = PropertyFactory.getProp(elem,data.p.z,0,0,this.dynamicProperties);\r\n            }\r\n        }else{\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this.dynamicProperties);\r\n        }\r\n        if(data.r) {\r\n            this.r = PropertyFactory.getProp(elem, data.r, 0, degToRads, this.dynamicProperties);\r\n        } else if(data.rx) {\r\n            this.rx = PropertyFactory.getProp(elem, data.rx, 0, degToRads, this.dynamicProperties);\r\n            this.ry = PropertyFactory.getProp(elem, data.ry, 0, degToRads, this.dynamicProperties);\r\n            this.rz = PropertyFactory.getProp(elem, data.rz, 0, degToRads, this.dynamicProperties);\r\n            if(data.or.k[0].ti) {\r\n                var i, len = data.or.k.length;\r\n                for(i=0;i<len;i+=1) {\r\n                    data.or.k[i].to = data.or.k[i].ti = null;\r\n                }\r\n            }\r\n            this.or = PropertyFactory.getProp(elem, data.or, 1, degToRads, this.dynamicProperties);\r\n            //sh Indicates it needs to be capped between -180 and 180\r\n            this.or.sh = true;\r\n        }\r\n        if(data.sk){\r\n            this.sk = PropertyFactory.getProp(elem, data.sk, 0, degToRads, this.dynamicProperties);\r\n            this.sa = PropertyFactory.getProp(elem, data.sa, 0, degToRads, this.dynamicProperties);\r\n        }\r\n        if(data.a) {\r\n            this.a = PropertyFactory.getProp(elem,data.a,1,0,this.dynamicProperties);\r\n        }\r\n        if(data.s) {\r\n            this.s = PropertyFactory.getProp(elem,data.s,1,0.01,this.dynamicProperties);\r\n        }\r\n        // Opacity is not part of the transform properties, that's why it won't use this.dynamicProperties. That way transforms won't get updated if opacity changes.\r\n        if(data.o){\r\n            this.o = PropertyFactory.getProp(elem,data.o,0,0.01,arr);\r\n        } else {\r\n            this.o = {_mdf:false,v:1};\r\n        }\r\n        if(this.dynamicProperties.length){\r\n            arr.push(this);\r\n        }else{\r\n            this.getValue(true);\r\n        }\r\n    }\r\n\r\n    TransformProperty.prototype.applyToMatrix = applyToMatrix;\r\n    TransformProperty.prototype.getValue = processKeys;\r\n    TransformProperty.prototype.setInverted = setInverted;\r\n    TransformProperty.prototype.autoOrient = autoOrient;\r\n\r\n    function getTransformProperty(elem,data,arr){\r\n        return new TransformProperty(elem,data,arr);\r\n    }\r\n\r\n    return {\r\n        getTransformProperty: getTransformProperty\r\n    };\r\n\r\n}());\r\nfunction ShapePath(){\r\n\tthis.c = false;\r\n\tthis._length = 0;\r\n\tthis._maxLength = 8;\r\n\tthis.v = createSizedArray(this._maxLength);\r\n\tthis.o = createSizedArray(this._maxLength);\r\n\tthis.i = createSizedArray(this._maxLength);\r\n}\r\n\r\nShapePath.prototype.setPathData = function(closed, len) {\r\n\tthis.c = closed;\r\n\tthis.setLength(len);\r\n\tvar i = 0;\r\n\twhile(i < len){\r\n\t\tthis.v[i] = point_pool.newElement();\r\n\t\tthis.o[i] = point_pool.newElement();\r\n\t\tthis.i[i] = point_pool.newElement();\r\n\t\ti += 1;\r\n\t}\r\n};\r\n\r\nShapePath.prototype.setLength = function(len) {\r\n\twhile(this._maxLength < len) {\r\n\t\tthis.doubleArrayLength();\r\n\t}\r\n\tthis._length = len;\r\n};\r\n\r\nShapePath.prototype.doubleArrayLength = function() {\r\n\tthis.v = this.v.concat(createSizedArray(this._maxLength));\r\n\tthis.i = this.i.concat(createSizedArray(this._maxLength));\r\n\tthis.o = this.o.concat(createSizedArray(this._maxLength));\r\n\tthis._maxLength *= 2;\r\n};\r\n\r\nShapePath.prototype.setXYAt = function(x, y, type, pos, replace) {\r\n\tvar arr;\r\n\tthis._length = Math.max(this._length, pos + 1);\r\n\tif(this._length >= this._maxLength) {\r\n\t\tthis.doubleArrayLength();\r\n\t}\r\n\tswitch(type){\r\n\t\tcase 'v':\r\n\t\t\tarr = this.v;\r\n\t\t\tbreak;\r\n\t\tcase 'i':\r\n\t\t\tarr = this.i;\r\n\t\t\tbreak;\r\n\t\tcase 'o':\r\n\t\t\tarr = this.o;\r\n\t\t\tbreak;\r\n\t}\r\n\tif(!arr[pos] || (arr[pos] && !replace)){\r\n\t\tarr[pos] = point_pool.newElement();\r\n\t}\r\n\tarr[pos][0] = x;\r\n\tarr[pos][1] = y;\r\n};\r\n\r\nShapePath.prototype.setTripleAt = function(vX,vY,oX,oY,iX,iY,pos, replace) {\r\n\tthis.setXYAt(vX,vY,'v',pos, replace);\r\n\tthis.setXYAt(oX,oY,'o',pos, replace);\r\n\tthis.setXYAt(iX,iY,'i',pos, replace);\r\n};\r\n\r\nShapePath.prototype.reverse = function() {\r\n\tvar newPath = new ShapePath();\r\n\tnewPath.setPathData(this.c, this._length);\r\n\tvar vertices = this.v, outPoints = this.o, inPoints = this.i;\r\n\tvar init = 0;\r\n\tif (this.c) {\r\n\t\tnewPath.setTripleAt(vertices[0][0], vertices[0][1], inPoints[0][0], inPoints[0][1], outPoints[0][0], outPoints[0][1], 0, false);\r\n        init = 1;\r\n    }\r\n    var cnt = this._length - 1;\r\n    var len = this._length;\r\n\r\n    for (i = init; i < len; i += 1) {\r\n    \tnewPath.setTripleAt(vertices[cnt][0], vertices[cnt][1], inPoints[cnt][0], inPoints[cnt][1], outPoints[cnt][0], outPoints[cnt][1], i, false);\r\n        cnt -= 1;\r\n    }\r\n    return newPath;\r\n};\r\nvar ShapePropertyFactory = (function(){\r\n\r\n    var initFrame = -999999;\r\n\r\n    function interpolateShape(frameNum, previousValue, isCurrentRender, caching) {\r\n        var iterationIndex = caching.lastIndex;\r\n        var keyPropS,keyPropE,isHold, j, k, jLen, kLen, perc, vertexValue, hasModified = false;\r\n        if(frameNum < this.keyframes[0].t-this.offsetTime){\r\n            keyPropS = this.keyframes[0].s[0];\r\n            isHold = true;\r\n            iterationIndex = 0;\r\n        }else if(frameNum >= this.keyframes[this.keyframes.length - 1].t-this.offsetTime){\r\n            if(this.keyframes[this.keyframes.length - 2].h === 1){\r\n                keyPropS = this.keyframes[this.keyframes.length - 1].s[0];\r\n            }else{\r\n                keyPropS = this.keyframes[this.keyframes.length - 2].e[0];\r\n            }\r\n            isHold = true;\r\n        }else{\r\n            var i = iterationIndex;\r\n            var len = this.keyframes.length- 1,flag = true,keyData,nextKeyData;\r\n            while(flag){\r\n                keyData = this.keyframes[i];\r\n                nextKeyData = this.keyframes[i+1];\r\n                if((nextKeyData.t - this.offsetTime) > frameNum){\r\n                    break;\r\n                }\r\n                if(i < len - 1){\r\n                    i += 1;\r\n                }else{\r\n                    flag = false;\r\n                }\r\n            }\r\n            isHold = keyData.h === 1;\r\n            iterationIndex = i;\r\n            if(!isHold){\r\n                if(frameNum >= nextKeyData.t-this.offsetTime){\r\n                    perc = 1;\r\n                }else if(frameNum < keyData.t-this.offsetTime){\r\n                    perc = 0;\r\n                }else{\r\n                    var fnc;\r\n                    if(keyData.__fnct){\r\n                        fnc = keyData.__fnct;\r\n                    }else{\r\n                        fnc = BezierFactory.getBezierEasing(keyData.o.x,keyData.o.y,keyData.i.x,keyData.i.y).get;\r\n                        keyData.__fnct = fnc;\r\n                    }\r\n                    perc = fnc((frameNum-(keyData.t-this.offsetTime))/((nextKeyData.t-this.offsetTime)-(keyData.t-this.offsetTime)));\r\n                }\r\n                keyPropE = keyData.e[0];\r\n            }\r\n            keyPropS = keyData.s[0];\r\n        }\r\n        jLen = previousValue._length;\r\n        kLen = keyPropS.i[0].length;\r\n        caching.lastIndex = iterationIndex;\r\n\r\n        for(j=0;j<jLen;j+=1){\r\n            for(k=0;k<kLen;k+=1){\r\n                vertexValue = isHold ? keyPropS.i[j][k] :  keyPropS.i[j][k]+(keyPropE.i[j][k]-keyPropS.i[j][k])*perc;\r\n                if(previousValue.i[j][k] !== vertexValue){\r\n                    previousValue.i[j][k] = vertexValue;\r\n                    if(isCurrentRender) {\r\n                        this.pv.i[j][k] = vertexValue;\r\n                    }\r\n                    hasModified = true;\r\n                }\r\n                vertexValue = isHold ? keyPropS.o[j][k] :  keyPropS.o[j][k]+(keyPropE.o[j][k]-keyPropS.o[j][k])*perc;\r\n                if(previousValue.o[j][k] !== vertexValue){\r\n                    previousValue.o[j][k] = vertexValue;\r\n                    if(isCurrentRender) {\r\n                        this.pv.o[j][k] = vertexValue;\r\n                    }\r\n                    hasModified = true;\r\n                }\r\n                vertexValue = isHold ? keyPropS.v[j][k] :  keyPropS.v[j][k]+(keyPropE.v[j][k]-keyPropS.v[j][k])*perc;\r\n                if(previousValue.v[j][k] !== vertexValue){\r\n                    previousValue.v[j][k] = vertexValue;\r\n                    if(isCurrentRender) {\r\n                        this.pv.v[j][k] = vertexValue;\r\n                    }\r\n                    hasModified = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return hasModified;\r\n    }\r\n\r\n    function interpolateShapeCurrentTime(){\r\n        if(this.elem.globalData.frameId === this.frameId){\r\n            return;\r\n        }\r\n        this._mdf = false;\r\n        var frameNum = this.comp.renderedFrame - this.offsetTime;\r\n        var initTime = this.keyframes[0].t - this.offsetTime;\r\n        var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;\r\n        var lastFrame = this._caching.lastFrame;\r\n        if(!(lastFrame !== initFrame && ((lastFrame < initTime && frameNum < initTime) || (lastFrame > endTime && frameNum > endTime)))){\r\n            ////\r\n            this._caching.lastIndex = lastFrame < frameNum ? this._caching.lastIndex : 0;\r\n            var hasModified = this.interpolateShape(frameNum, this.v, true, this._caching);\r\n            ////\r\n            this._mdf = hasModified;\r\n            if(hasModified) {\r\n                this.paths = this.localShapeCollection;\r\n            }\r\n        }\r\n        this._caching.lastFrame = frameNum;\r\n        this.frameId = this.elem.globalData.frameId;\r\n    }\r\n\r\n    function getShapeValue(){\r\n        return this.v;\r\n    }\r\n\r\n    function resetShape(){\r\n        this.paths = this.localShapeCollection;\r\n        if(!this.k){\r\n            this._mdf = false;\r\n        }\r\n    }\r\n\r\n    function ShapeProperty(elem, data, type){\r\n        this.propType = 'shape';\r\n        this.comp = elem.comp;\r\n        this.k = false;\r\n        this._mdf = false;\r\n        var pathData = type === 3 ? data.pt.k : data.ks.k;\r\n        this.v = shape_pool.clone(pathData);\r\n        this.pv = shape_pool.clone(this.v);\r\n        this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n        this.paths = this.localShapeCollection;\r\n        this.paths.addShape(this.v);\r\n        this.reset = resetShape;\r\n    }\r\n    ShapeProperty.prototype.interpolateShape = interpolateShape;\r\n    ShapeProperty.prototype.getValue = getShapeValue;\r\n\r\n    function KeyframedShapeProperty(elem,data,type){\r\n        this.propType = 'shape';\r\n        this.comp = elem.comp;\r\n        this.elem = elem;\r\n        this.offsetTime = elem.data.st;\r\n        this.keyframes = type === 3 ? data.pt.k : data.ks.k;\r\n        this.k = true;\r\n        this.kf = true;\r\n        var i, len = this.keyframes[0].s[0].i.length;\r\n        var jLen = this.keyframes[0].s[0].i[0].length;\r\n        this.v = shape_pool.newElement();\r\n        this.v.setPathData(this.keyframes[0].s[0].c, len);\r\n        this.pv = shape_pool.clone(this.v);\r\n        this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n        this.paths = this.localShapeCollection;\r\n        this.paths.addShape(this.v);\r\n        this.lastFrame = initFrame;\r\n        this.reset = resetShape;\r\n        this._caching = {lastFrame: initFrame, lastIndex: 0};\r\n    }\r\n    KeyframedShapeProperty.prototype.getValue = interpolateShapeCurrentTime;\r\n    KeyframedShapeProperty.prototype.interpolateShape = interpolateShape;\r\n\r\n    var EllShapeProperty = (function(){\r\n\r\n        var cPoint = roundCorner;\r\n\r\n        function convertEllToPath(){\r\n            var p0 = this.p.v[0], p1 = this.p.v[1], s0 = this.s.v[0]/2, s1 = this.s.v[1]/2;\r\n            var _cw = this.d !== 3;\r\n            var _v = this.v;\r\n            if(this.d !== 3){\r\n                _v.v[0][0] = p0;\r\n                _v.v[0][1] = p1 - s1;\r\n                _v.v[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n                _v.v[1][1] = p1;\r\n                _v.v[2][0] = p0;\r\n                _v.v[2][1] = p1 + s1;\r\n                _v.v[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n                _v.v[3][1] = p1;\r\n                _v.i[0][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;\r\n                _v.i[0][1] = p1 - s1;\r\n                _v.i[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n                _v.i[1][1] = p1 - s1 * cPoint;\r\n                _v.i[2][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;\r\n                _v.i[2][1] = p1 + s1;\r\n                _v.i[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n                _v.i[3][1] = p1 + s1 * cPoint;\r\n                _v.o[0][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;\r\n                _v.o[0][1] = p1 - s1;\r\n                _v.o[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n                _v.o[1][1] = p1 + s1 * cPoint;\r\n                _v.o[2][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;\r\n                _v.o[2][1] = p1 + s1;\r\n                _v.o[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n                _v.o[3][1] = p1 - s1 * cPoint;\r\n            }\r\n        }\r\n\r\n        function processKeys(frameNum){\r\n            var i, len = this.dynamicProperties.length;\r\n            if(this.elem.globalData.frameId === this.frameId){\r\n                return;\r\n            }\r\n            this._mdf = false;\r\n            this.frameId = this.elem.globalData.frameId;\r\n\r\n            for(i=0;i<len;i+=1){\r\n                this.dynamicProperties[i].getValue(frameNum);\r\n                if(this.dynamicProperties[i]._mdf){\r\n                    this._mdf = true;\r\n                }\r\n            }\r\n            if(this._mdf){\r\n                this.convertEllToPath();\r\n            }\r\n        }\r\n\r\n        return function EllShapeProperty(elem,data) {\r\n            /*this.v = {\r\n                v: createSizedArray(4),\r\n                i: createSizedArray(4),\r\n                o: createSizedArray(4),\r\n                c: true\r\n            };*/\r\n            this.v = shape_pool.newElement();\r\n            this.v.setPathData(true, 4);\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.paths = this.localShapeCollection;\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.d = data.d;\r\n            this.dynamicProperties = [];\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.frameId = -1;\r\n            this._mdf = false;\r\n            this.getValue = processKeys;\r\n            this.convertEllToPath = convertEllToPath;\r\n            this.reset = resetShape;\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this.dynamicProperties);\r\n            this.s = PropertyFactory.getProp(elem,data.s,1,0,this.dynamicProperties);\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.convertEllToPath();\r\n            }\r\n        };\r\n    }());\r\n\r\n    var StarShapeProperty = (function() {\r\n\r\n        function convertPolygonToPath(){\r\n            var numPts = Math.floor(this.pt.v);\r\n            var angle = Math.PI*2/numPts;\r\n            /*this.v.v.length = numPts;\r\n            this.v.i.length = numPts;\r\n            this.v.o.length = numPts;*/\r\n            var rad = this.or.v;\r\n            var roundness = this.os.v;\r\n            var perimSegment = 2*Math.PI*rad/(numPts*4);\r\n            var i, currentAng = -Math.PI/ 2;\r\n            var dir = this.data.d === 3 ? -1 : 1;\r\n            currentAng += this.r.v;\r\n            this.v._length = 0;\r\n            for(i=0;i<numPts;i+=1){\r\n                var x = rad * Math.cos(currentAng);\r\n                var y = rad * Math.sin(currentAng);\r\n                var ox = x === 0 && y === 0 ? 0 : y/Math.sqrt(x*x + y*y);\r\n                var oy = x === 0 && y === 0 ? 0 : -x/Math.sqrt(x*x + y*y);\r\n                x +=  + this.p.v[0];\r\n                y +=  + this.p.v[1];\r\n                this.v.setTripleAt(x,y,x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir,x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir, i, true);\r\n                /*this.v.v[i] = [x,y];\r\n                this.v.i[i] = [x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir];\r\n                this.v.o[i] = [x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir];*/\r\n                currentAng += angle*dir;\r\n            }\r\n            this.paths.length = 0;\r\n            this.paths[0] = this.v;\r\n        }\r\n\r\n        function convertStarToPath() {\r\n            var numPts = Math.floor(this.pt.v)*2;\r\n            var angle = Math.PI*2/numPts;\r\n            /*this.v.v.length = numPts;\r\n            this.v.i.length = numPts;\r\n            this.v.o.length = numPts;*/\r\n            var longFlag = true;\r\n            var longRad = this.or.v;\r\n            var shortRad = this.ir.v;\r\n            var longRound = this.os.v;\r\n            var shortRound = this.is.v;\r\n            var longPerimSegment = 2*Math.PI*longRad/(numPts*2);\r\n            var shortPerimSegment = 2*Math.PI*shortRad/(numPts*2);\r\n            var i, rad,roundness,perimSegment, currentAng = -Math.PI/ 2;\r\n            currentAng += this.r.v;\r\n            var dir = this.data.d === 3 ? -1 : 1;\r\n            this.v._length = 0;\r\n            for(i=0;i<numPts;i+=1){\r\n                rad = longFlag ? longRad : shortRad;\r\n                roundness = longFlag ? longRound : shortRound;\r\n                perimSegment = longFlag ? longPerimSegment : shortPerimSegment;\r\n                var x = rad * Math.cos(currentAng);\r\n                var y = rad * Math.sin(currentAng);\r\n                var ox = x === 0 && y === 0 ? 0 : y/Math.sqrt(x*x + y*y);\r\n                var oy = x === 0 && y === 0 ? 0 : -x/Math.sqrt(x*x + y*y);\r\n                x +=  + this.p.v[0];\r\n                y +=  + this.p.v[1];\r\n                this.v.setTripleAt(x,y,x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir,x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir, i, true);\r\n\r\n                /*this.v.v[i] = [x,y];\r\n                this.v.i[i] = [x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir];\r\n                this.v.o[i] = [x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir];\r\n                this.v._length = numPts;*/\r\n                longFlag = !longFlag;\r\n                currentAng += angle*dir;\r\n            }\r\n        }\r\n\r\n        function processKeys() {\r\n            if(this.elem.globalData.frameId === this.frameId){\r\n                return;\r\n            }\r\n            this._mdf = false;\r\n            this.frameId = this.elem.globalData.frameId;\r\n            var i, len = this.dynamicProperties.length;\r\n\r\n            for(i=0;i<len;i+=1){\r\n                this.dynamicProperties[i].getValue();\r\n                if(this.dynamicProperties[i]._mdf){\r\n                    this._mdf = true;\r\n                }\r\n            }\r\n            if(this._mdf){\r\n                this.convertToPath();\r\n            }\r\n        }\r\n\r\n        return function StarShapeProperty(elem,data) {\r\n            /*this.v = {\r\n                v: [],\r\n                i: [],\r\n                o: [],\r\n                c: true\r\n            };*/\r\n            this.v = shape_pool.newElement();\r\n            this.v.setPathData(true, 0);\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.data = data;\r\n            this.frameId = -1;\r\n            this.d = data.d;\r\n            this.dynamicProperties = [];\r\n            this._mdf = false;\r\n            this.getValue = processKeys;\r\n            this.reset = resetShape;\r\n            if(data.sy === 1){\r\n                this.ir = PropertyFactory.getProp(elem,data.ir,0,0,this.dynamicProperties);\r\n                this.is = PropertyFactory.getProp(elem,data.is,0,0.01,this.dynamicProperties);\r\n                this.convertToPath = convertStarToPath;\r\n            } else {\r\n                this.convertToPath = convertPolygonToPath;\r\n            }\r\n            this.pt = PropertyFactory.getProp(elem,data.pt,0,0,this.dynamicProperties);\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this.dynamicProperties);\r\n            this.r = PropertyFactory.getProp(elem,data.r,0,degToRads,this.dynamicProperties);\r\n            this.or = PropertyFactory.getProp(elem,data.or,0,0,this.dynamicProperties);\r\n            this.os = PropertyFactory.getProp(elem,data.os,0,0.01,this.dynamicProperties);\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.paths = this.localShapeCollection;\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.convertToPath();\r\n            }\r\n        };\r\n    }());\r\n\r\n    var RectShapeProperty = (function() {\r\n        function processKeys(frameNum){\r\n            if(this.elem.globalData.frameId === this.frameId){\r\n                return;\r\n            }\r\n            this._mdf = false;\r\n            this.frameId = this.elem.globalData.frameId;\r\n            var i, len = this.dynamicProperties.length;\r\n\r\n            for(i=0;i<len;i+=1){\r\n                this.dynamicProperties[i].getValue(frameNum);\r\n                if(this.dynamicProperties[i]._mdf){\r\n                    this._mdf = true;\r\n                }\r\n            }\r\n            if(this._mdf){\r\n                this.convertRectToPath();\r\n            }\r\n\r\n        }\r\n\r\n        function convertRectToPath(){\r\n            var p0 = this.p.v[0], p1 = this.p.v[1], v0 = this.s.v[0]/2, v1 = this.s.v[1]/2;\r\n            var round = bm_min(v0,v1,this.r.v);\r\n            var cPoint = round*(1-roundCorner);\r\n            this.v._length = 0;\r\n\r\n            if(this.d === 2 || this.d === 1) {\r\n                this.v.setTripleAt(p0+v0, p1-v1+round,p0+v0, p1-v1+round,p0+v0,p1-v1+cPoint,0, true);\r\n                this.v.setTripleAt(p0+v0, p1+v1-round,p0+v0, p1+v1-cPoint,p0+v0, p1+v1-round,1, true);\r\n                if(round!== 0){\r\n                    this.v.setTripleAt(p0+v0-round, p1+v1,p0+v0-round,p1+v1,p0+v0-cPoint,p1+v1,2, true);\r\n                    this.v.setTripleAt(p0-v0+round,p1+v1,p0-v0+cPoint,p1+v1,p0-v0+round,p1+v1,3, true);\r\n                    this.v.setTripleAt(p0-v0,p1+v1-round,p0-v0,p1+v1-round,p0-v0,p1+v1-cPoint,4, true);\r\n                    this.v.setTripleAt(p0-v0,p1-v1+round,p0-v0,p1-v1+cPoint,p0-v0,p1-v1+round,5, true);\r\n                    this.v.setTripleAt(p0-v0+round,p1-v1,p0-v0+round,p1-v1,p0-v0+cPoint,p1-v1,6, true);\r\n                    this.v.setTripleAt(p0+v0-round,p1-v1,p0+v0-cPoint,p1-v1,p0+v0-round,p1-v1,7, true);\r\n                } else {\r\n                    this.v.setTripleAt(p0-v0,p1+v1,p0-v0+cPoint,p1+v1,p0-v0,p1+v1,2);\r\n                    this.v.setTripleAt(p0-v0,p1-v1,p0-v0,p1-v1+cPoint,p0-v0,p1-v1,3);\r\n                }\r\n            }else{\r\n                this.v.setTripleAt(p0+v0,p1-v1+round,p0+v0,p1-v1+cPoint,p0+v0,p1-v1+round,0, true);\r\n                if(round!== 0){\r\n                    this.v.setTripleAt(p0+v0-round,p1-v1,p0+v0-round,p1-v1,p0+v0-cPoint,p1-v1,1, true);\r\n                    this.v.setTripleAt(p0-v0+round,p1-v1,p0-v0+cPoint,p1-v1,p0-v0+round,p1-v1,2, true);\r\n                    this.v.setTripleAt(p0-v0,p1-v1+round,p0-v0,p1-v1+round,p0-v0,p1-v1+cPoint,3, true);\r\n                    this.v.setTripleAt(p0-v0,p1+v1-round,p0-v0,p1+v1-cPoint,p0-v0,p1+v1-round,4, true);\r\n                    this.v.setTripleAt(p0-v0+round,p1+v1,p0-v0+round,p1+v1,p0-v0+cPoint,p1+v1,5, true);\r\n                    this.v.setTripleAt(p0+v0-round,p1+v1,p0+v0-cPoint,p1+v1,p0+v0-round,p1+v1,6, true);\r\n                    this.v.setTripleAt(p0+v0,p1+v1-round,p0+v0,p1+v1-round,p0+v0,p1+v1-cPoint,7, true);\r\n                } else {\r\n                    this.v.setTripleAt(p0-v0,p1-v1,p0-v0+cPoint,p1-v1,p0-v0,p1-v1,1, true);\r\n                    this.v.setTripleAt(p0-v0,p1+v1,p0-v0,p1+v1-cPoint,p0-v0,p1+v1,2, true);\r\n                    this.v.setTripleAt(p0+v0,p1+v1,p0+v0-cPoint,p1+v1,p0+v0,p1+v1,3, true);\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        return function RectShapeProperty(elem,data) {\r\n            this.v = shape_pool.newElement();\r\n            this.v.c = true;\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.paths = this.localShapeCollection;\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.frameId = -1;\r\n            this.d = data.d;\r\n            this.dynamicProperties = [];\r\n            this._mdf = false;\r\n            this.getValue = processKeys;\r\n            this.convertRectToPath = convertRectToPath;\r\n            this.reset = resetShape;\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this.dynamicProperties);\r\n            this.s = PropertyFactory.getProp(elem,data.s,1,0,this.dynamicProperties);\r\n            this.r = PropertyFactory.getProp(elem,data.r,0,0,this.dynamicProperties);\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.convertRectToPath();\r\n            }\r\n        };\r\n    }());\r\n\r\n    function getShapeProp(elem,data,type, arr){\r\n        var prop;\r\n        if(type === 3 || type === 4){\r\n            var dataProp = type === 3 ? data.pt : data.ks;\r\n            var keys = dataProp.k;\r\n            if(dataProp.a === 1 || keys.length){\r\n                prop = new KeyframedShapeProperty(elem, data, type);\r\n            }else{\r\n                prop = new ShapeProperty(elem, data, type);\r\n            }\r\n        }else if(type === 5){\r\n            prop = new RectShapeProperty(elem, data);\r\n        }else if(type === 6){\r\n            prop = new EllShapeProperty(elem, data);\r\n        }else if(type === 7){\r\n            prop = new StarShapeProperty(elem, data);\r\n        }\r\n        if(prop.k){\r\n            arr.push(prop);\r\n        }\r\n        return prop;\r\n    }\r\n\r\n    function getConstructorFunction() {\r\n        return ShapeProperty;\r\n    }\r\n\r\n    function getKeyframedConstructorFunction() {\r\n        return KeyframedShapeProperty;\r\n    }\r\n\r\n    var ob = {};\r\n    ob.getShapeProp = getShapeProp;\r\n    ob.getConstructorFunction = getConstructorFunction;\r\n    ob.getKeyframedConstructorFunction = getKeyframedConstructorFunction;\r\n    return ob;\r\n}());\r\nvar ShapeModifiers = (function(){\r\n    var ob = {};\r\n    var modifiers = {};\r\n    ob.registerModifier = registerModifier;\r\n    ob.getModifier = getModifier;\r\n\r\n    function registerModifier(nm,factory){\r\n        if(!modifiers[nm]){\r\n            modifiers[nm] = factory;\r\n        }\r\n    }\r\n\r\n    function getModifier(nm,elem, data, dynamicProperties){\r\n        return new modifiers[nm](elem, data, dynamicProperties);\r\n    }\r\n\r\n    return ob;\r\n}());\r\n\r\nfunction ShapeModifier(){}\r\nShapeModifier.prototype.initModifierProperties = function(){};\r\nShapeModifier.prototype.addShapeToModifier = function(){};\r\nShapeModifier.prototype.addShape = function(data){\r\n    if(!this.closed){\r\n        var shapeData = {shape:data.sh, data: data, localShapeCollection:shapeCollection_pool.newShapeCollection()};\r\n        this.shapes.push(shapeData);\r\n        this.addShapeToModifier(shapeData);\r\n    }\r\n};\r\nShapeModifier.prototype.init = function(elem,data,dynamicProperties){\r\n    this.dynamicProperties = [];\r\n    this.shapes = [];\r\n    this.elem = elem;\r\n    this.initModifierProperties(elem,data);\r\n    this.frameId = initialDefaultFrame;\r\n    this._mdf = false;\r\n    this.closed = false;\r\n    this.k = false;\r\n    if(this.dynamicProperties.length){\r\n        this.k = true;\r\n        dynamicProperties.push(this);\r\n    }else{\r\n        this.getValue(true);\r\n    }\r\n};\r\nShapeModifier.prototype.processKeys = function(){\r\n    if(this.elem.globalData.frameId === this.frameId){\r\n        return;\r\n    }\r\n    this._mdf = false;\r\n    var i, len = this.dynamicProperties.length;\r\n\r\n    for(i=0;i<len;i+=1){\r\n        this.dynamicProperties[i].getValue();\r\n        if(this.dynamicProperties[i]._mdf){\r\n            this._mdf = true;\r\n        }\r\n    }\r\n    this.frameId = this.elem.globalData.frameId;\r\n};\r\nfunction TrimModifier(){\r\n}\r\nextendPrototype([ShapeModifier], TrimModifier);\r\nTrimModifier.prototype.initModifierProperties = function(elem, data) {\r\n    this.s = PropertyFactory.getProp(elem, data.s, 0, 0.01, this.dynamicProperties);\r\n    this.e = PropertyFactory.getProp(elem, data.e, 0, 0.01, this.dynamicProperties);\r\n    this.o = PropertyFactory.getProp(elem, data.o, 0, 0, this.dynamicProperties);\r\n    this.sValue = 0;\r\n    this.eValue = 0;\r\n    this.getValue = this.processKeys;\r\n    this.m = data.m;\r\n};\r\n\r\nTrimModifier.prototype.addShapeToModifier = function(shapeData){\r\n    shapeData.pathsData = [];\r\n};\r\n\r\nTrimModifier.prototype.calculateShapeEdges = function(s, e, shapeLength, addedLength, totalModifierLength) {\r\n    var segments = [];\r\n    if (e <= 1) {\r\n        segments.push({\r\n            s: s,\r\n            e: e\r\n        });\r\n    } else if (s >= 1) {\r\n        segments.push({\r\n            s: s - 1,\r\n            e: e - 1\r\n        });\r\n    } else {\r\n        segments.push({\r\n            s: s,\r\n            e: 1\r\n        });\r\n        segments.push({\r\n            s: 0,\r\n            e: e - 1\r\n        });\r\n    }\r\n    var shapeSegments = [];\r\n    var i, len = segments.length, segmentOb;\r\n    for (i = 0; i < len; i += 1) {\r\n        segmentOb = segments[i];\r\n        if (segmentOb.e * totalModifierLength < addedLength || segmentOb.s * totalModifierLength > addedLength + shapeLength) {\r\n            \r\n        } else {\r\n            var shapeS, shapeE;\r\n            if (segmentOb.s * totalModifierLength <= addedLength) {\r\n                shapeS = 0;\r\n            } else {\r\n                shapeS = (segmentOb.s * totalModifierLength - addedLength) / shapeLength;\r\n            }\r\n            if(segmentOb.e * totalModifierLength >= addedLength + shapeLength) {\r\n                shapeE = 1;\r\n            } else {\r\n                shapeE = ((segmentOb.e * totalModifierLength - addedLength) / shapeLength);\r\n            }\r\n            shapeSegments.push([shapeS, shapeE]);\r\n        }\r\n    }\r\n    if (!shapeSegments.length) {\r\n        shapeSegments.push([0, 0]);\r\n    }\r\n    return shapeSegments;\r\n};\r\n\r\nTrimModifier.prototype.releasePathsData = function(pathsData) {\r\n    var i, len = pathsData.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        segments_length_pool.release(pathsData[i]);\r\n    }\r\n    pathsData.length = 0;\r\n    return pathsData;\r\n};\r\n\r\nTrimModifier.prototype.processShapes = function(_isFirstFrame) {\r\n    var s, e;\r\n    if (this._mdf || _isFirstFrame) {\r\n        var o = (this.o.v % 360) / 360;\r\n        if (o < 0) {\r\n            o += 1;\r\n        }\r\n        s = this.s.v + o;\r\n        e = this.e.v + o;\r\n        if (s === e) {\r\n\r\n        }\r\n        if (s > e) {\r\n            var _s = s;\r\n            s = e;\r\n            e = _s;\r\n        }\r\n        this.sValue = s;\r\n        this.eValue = e;\r\n    } else {\r\n        s = this.sValue;\r\n        e = this.eValue;\r\n    }\r\n    var shapePaths;\r\n    var i, len = this.shapes.length, j, jLen;\r\n    var pathsData, pathData, totalShapeLength, totalModifierLength = 0;\r\n\r\n    if (e === s) {\r\n        for (i = 0; i < len; i += 1) {\r\n            this.shapes[i].localShapeCollection.releaseShapes();\r\n            this.shapes[i].shape._mdf = true;\r\n            this.shapes[i].shape.paths = this.shapes[i].localShapeCollection;\r\n        }\r\n    } else if (!((e === 1 && s === 0) || (e===0 && s === 1))){\r\n        var segments = [], shapeData, localShapeCollection;\r\n        for (i = 0; i < len; i += 1) {\r\n            shapeData = this.shapes[i];\r\n            // if shape hasn't changed and trim properties haven't changed, cached previous path can be used\r\n            if (!shapeData.shape._mdf && !this._mdf && !_isFirstFrame && this.m !== 2) {\r\n                shapeData.shape.paths = shapeData.localShapeCollection;\r\n            } else {\r\n                shapePaths = shapeData.shape.paths;\r\n                jLen = shapePaths._length;\r\n                totalShapeLength = 0;\r\n                if (!shapeData.shape._mdf && shapeData.pathsData.length) {\r\n                    totalShapeLength = shapeData.totalShapeLength;\r\n                } else {\r\n                    pathsData = this.releasePathsData(shapeData.pathsData);\r\n                    for (j = 0; j < jLen; j += 1) {\r\n                        pathData = bez.getSegmentsLength(shapePaths.shapes[j]);\r\n                        pathsData.push(pathData);\r\n                        totalShapeLength += pathData.totalLength;\r\n                    }\r\n                    shapeData.totalShapeLength = totalShapeLength;\r\n                    shapeData.pathsData = pathsData;\r\n                }\r\n\r\n                totalModifierLength += totalShapeLength;\r\n                shapeData.shape._mdf = true;\r\n            }\r\n        }\r\n        var shapeS = s, shapeE = e, addedLength = 0, edges;\r\n        for (i = len - 1; i >= 0; i -= 1) {\r\n            shapeData = this.shapes[i];\r\n            if (shapeData.shape._mdf) {\r\n                localShapeCollection = shapeData.localShapeCollection;\r\n                localShapeCollection.releaseShapes();\r\n                //if m === 2 means paths are trimmed individually so edges need to be found for this specific shape relative to whoel group\r\n                if (this.m === 2 && len > 1) {\r\n                    edges = this.calculateShapeEdges(s, e, shapeData.totalShapeLength, addedLength, totalModifierLength);\r\n                    addedLength += shapeData.totalShapeLength;\r\n                } else {\r\n                    edges = [[shapeS, shapeE]];\r\n                }\r\n                jLen = edges.length;\r\n                for (j = 0; j < jLen; j += 1) {\r\n                    shapeS = edges[j][0];\r\n                    shapeE = edges[j][1];\r\n                    segments.length = 0;\r\n                    if (shapeE <= 1) {\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * shapeS,\r\n                            e:shapeData.totalShapeLength * shapeE\r\n                        });\r\n                    } else if (shapeS >= 1) {\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * (shapeS - 1),\r\n                            e:shapeData.totalShapeLength * (shapeE - 1)\r\n                        });\r\n                    } else {\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * shapeS,\r\n                            e:shapeData.totalShapeLength\r\n                        });\r\n                        segments.push({\r\n                            s:0,\r\n                            e:shapeData.totalShapeLength * (shapeE - 1)\r\n                        });\r\n                    }\r\n                    var newShapesData = this.addShapes(shapeData,segments[0]);\r\n                    if (segments[0].s !== segments[0].e) {\r\n                        if (segments.length > 1) {\r\n                            if (shapeData.shape.v.c) {\r\n                                var lastShape = newShapesData.pop();\r\n                                this.addPaths(newShapesData, localShapeCollection);\r\n                                newShapesData = this.addShapes(shapeData, segments[1], lastShape);\r\n                            } else {\r\n                                this.addPaths(newShapesData, localShapeCollection);\r\n                                newShapesData = this.addShapes(shapeData, segments[1]);\r\n                            }\r\n                        } \r\n                        this.addPaths(newShapesData, localShapeCollection);\r\n                    }\r\n                    \r\n                }\r\n                shapeData.shape.paths = localShapeCollection;\r\n            }\r\n        }\r\n    } else if (this._mdf) {\r\n        for (i = 0; i < len; i += 1) {\r\n            this.shapes[i].shape._mdf = true;\r\n        }\r\n    }\r\n};\r\n\r\nTrimModifier.prototype.addPaths = function(newPaths, localShapeCollection) {\r\n    var i, len = newPaths.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        localShapeCollection.addShape(newPaths[i]);\r\n    }\r\n};\r\n\r\nTrimModifier.prototype.addSegment = function(pt1, pt2, pt3, pt4, shapePath, pos, newShape) {\r\n    shapePath.setXYAt(pt2[0], pt2[1], 'o', pos);\r\n    shapePath.setXYAt(pt3[0], pt3[1], 'i', pos + 1);\r\n    if(newShape){\r\n        shapePath.setXYAt(pt1[0], pt1[1], 'v', pos);\r\n    }\r\n    shapePath.setXYAt(pt4[0], pt4[1], 'v', pos + 1);\r\n};\r\n\r\nTrimModifier.prototype.addSegmentFromArray = function(points, shapePath, pos, newShape) {\r\n    shapePath.setXYAt(points[1], points[5], 'o', pos);\r\n    shapePath.setXYAt(points[2], points[6], 'i', pos + 1);\r\n    if(newShape){\r\n        shapePath.setXYAt(points[0], points[4], 'v', pos);\r\n    }\r\n    shapePath.setXYAt(points[3], points[7], 'v', pos + 1);\r\n};\r\n\r\nTrimModifier.prototype.addShapes = function(shapeData, shapeSegment, shapePath) {\r\n    var pathsData = shapeData.pathsData;\r\n    var shapePaths = shapeData.shape.paths.shapes;\r\n    var i, len = shapeData.shape.paths._length, j, jLen;\r\n    var addedLength = 0;\r\n    var currentLengthData,segmentCount;\r\n    var lengths;\r\n    var segment;\r\n    var shapes = [];\r\n    var initPos;\r\n    var newShape = true;\r\n    if (!shapePath) {\r\n        shapePath = shape_pool.newElement();\r\n        segmentCount = 0;\r\n        initPos = 0;\r\n    } else {\r\n        segmentCount = shapePath._length;\r\n        initPos = shapePath._length;\r\n    }\r\n    shapes.push(shapePath);\r\n    for (i = 0; i < len; i += 1) {\r\n        lengths = pathsData[i].lengths;\r\n        shapePath.c = shapePaths[i].c;\r\n        jLen = shapePaths[i].c ? lengths.length : lengths.length + 1;\r\n        for (j = 1; j < jLen; j +=1) {\r\n            currentLengthData = lengths[j-1];\r\n            if (addedLength + currentLengthData.addedLength < shapeSegment.s) {\r\n                addedLength += currentLengthData.addedLength;\r\n                shapePath.c = false;\r\n            } else if(addedLength > shapeSegment.e) {\r\n                shapePath.c = false;\r\n                break;\r\n            } else {\r\n                if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + currentLengthData.addedLength) {\r\n                    this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[j], shapePaths[i].v[j], shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                } else {\r\n                    segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[j], shapePaths[i].o[j - 1], shapePaths[i].i[j], (shapeSegment.s - addedLength)/currentLengthData.addedLength,(shapeSegment.e - addedLength)/currentLengthData.addedLength, lengths[j-1]);\r\n                    this.addSegmentFromArray(segment, shapePath, segmentCount, newShape);\r\n                    // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                    shapePath.c = false;\r\n                }\r\n                addedLength += currentLengthData.addedLength;\r\n                segmentCount += 1;\r\n            }\r\n        }\r\n        if (shapePaths[i].c) {\r\n            currentLengthData = lengths[j - 1];\r\n            if (addedLength <= shapeSegment.e) {\r\n                var segmentLength = lengths[j - 1].addedLength;\r\n                if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + segmentLength) {\r\n                    this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[0], shapePaths[i].v[0], shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                } else {\r\n                    segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[0], shapePaths[i].o[j - 1], shapePaths[i].i[0], (shapeSegment.s - addedLength) / segmentLength, (shapeSegment.e - addedLength) / segmentLength, lengths[j - 1]);\r\n                    this.addSegmentFromArray(segment, shapePath, segmentCount, newShape);\r\n                    // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                    shapePath.c = false;\r\n                }\r\n            } else {\r\n                shapePath.c = false;\r\n            }\r\n            addedLength += currentLengthData.addedLength;\r\n            segmentCount += 1;\r\n        }\r\n        if (shapePath._length) {\r\n            shapePath.setXYAt(shapePath.v[initPos][0], shapePath.v[initPos][1], 'i', initPos);\r\n            shapePath.setXYAt(shapePath.v[shapePath._length - 1][0], shapePath.v[shapePath._length - 1][1],'o', shapePath._length - 1);\r\n        }\r\n        if (addedLength > shapeSegment.e) {\r\n            break;\r\n        }\r\n        if (i < len - 1) {\r\n            shapePath = shape_pool.newElement();\r\n            newShape = true;\r\n            shapes.push(shapePath);\r\n            segmentCount = 0;\r\n        }\r\n    }\r\n    return shapes;\r\n};\r\n\r\n\r\nShapeModifiers.registerModifier('tm', TrimModifier);\r\nfunction RoundCornersModifier(){}\r\nextendPrototype([ShapeModifier],RoundCornersModifier);\r\nRoundCornersModifier.prototype.initModifierProperties = function(elem,data){\r\n    this.getValue = this.processKeys;\r\n    this.rd = PropertyFactory.getProp(elem,data.r,0,null,this.dynamicProperties);\r\n};\r\n\r\nRoundCornersModifier.prototype.processPath = function(path, round){\r\n    var cloned_path = shape_pool.newElement();\r\n    cloned_path.c = path.c;\r\n    var i, len = path._length;\r\n    var currentV,currentI,currentO,closerV, newV,newO,newI,distance,newPosPerc,index = 0;\r\n    var vX,vY,oX,oY,iX,iY;\r\n    for(i=0;i<len;i+=1){\r\n        currentV = path.v[i];\r\n        currentO = path.o[i];\r\n        currentI = path.i[i];\r\n        if(currentV[0]===currentO[0] && currentV[1]===currentO[1] && currentV[0]===currentI[0] && currentV[1]===currentI[1]){\r\n            if((i===0 || i === len - 1) && !path.c){\r\n                cloned_path.setTripleAt(currentV[0],currentV[1],currentO[0],currentO[1],currentI[0],currentI[1],index);\r\n                /*cloned_path.v[index] = currentV;\r\n                cloned_path.o[index] = currentO;\r\n                cloned_path.i[index] = currentI;*/\r\n                index += 1;\r\n            } else {\r\n                if(i===0){\r\n                    closerV = path.v[len-1];\r\n                } else {\r\n                    closerV = path.v[i-1];\r\n                }\r\n                distance = Math.sqrt(Math.pow(currentV[0]-closerV[0],2)+Math.pow(currentV[1]-closerV[1],2));\r\n                newPosPerc = distance ? Math.min(distance/2,round)/distance : 0;\r\n                vX = iX = currentV[0]+(closerV[0]-currentV[0])*newPosPerc;\r\n                vY = iY = currentV[1]-(currentV[1]-closerV[1])*newPosPerc;\r\n                oX = vX-(vX-currentV[0])*roundCorner;\r\n                oY = vY-(vY-currentV[1])*roundCorner;\r\n                cloned_path.setTripleAt(vX,vY,oX,oY,iX,iY,index);\r\n                index += 1;\r\n\r\n                if(i === len - 1){\r\n                    closerV = path.v[0];\r\n                } else {\r\n                    closerV = path.v[i+1];\r\n                }\r\n                distance = Math.sqrt(Math.pow(currentV[0]-closerV[0],2)+Math.pow(currentV[1]-closerV[1],2));\r\n                newPosPerc = distance ? Math.min(distance/2,round)/distance : 0;\r\n                vX = oX = currentV[0]+(closerV[0]-currentV[0])*newPosPerc;\r\n                vY = oY = currentV[1]+(closerV[1]-currentV[1])*newPosPerc;\r\n                iX = vX-(vX-currentV[0])*roundCorner;\r\n                iY = vY-(vY-currentV[1])*roundCorner;\r\n                cloned_path.setTripleAt(vX,vY,oX,oY,iX,iY,index);\r\n                index += 1;\r\n            }\r\n        } else {\r\n            cloned_path.setTripleAt(path.v[i][0],path.v[i][1],path.o[i][0],path.o[i][1],path.i[i][0],path.i[i][1],index);\r\n            index += 1;\r\n        }\r\n    }\r\n    return cloned_path;\r\n};\r\n\r\nRoundCornersModifier.prototype.processShapes = function(_isFirstFrame){\r\n    var shapePaths;\r\n    var i, len = this.shapes.length;\r\n    var j, jLen;\r\n    var rd = this.rd.v;\r\n\r\n    if(rd !== 0){\r\n        var shapeData, newPaths, localShapeCollection;\r\n        for(i=0;i<len;i+=1){\r\n            shapeData = this.shapes[i];\r\n            newPaths = shapeData.shape.paths;\r\n            localShapeCollection = shapeData.localShapeCollection;\r\n            if(!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)){\r\n                localShapeCollection.releaseShapes();\r\n                shapeData.shape._mdf = true;\r\n                shapePaths = shapeData.shape.paths.shapes;\r\n                jLen = shapeData.shape.paths._length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    localShapeCollection.addShape(this.processPath(shapePaths[j],rd));\r\n                }\r\n            }\r\n            shapeData.shape.paths = shapeData.localShapeCollection;\r\n        }\r\n\r\n    }\r\n    if(!this.dynamicProperties.length){\r\n        this._mdf = false;\r\n    }\r\n};\r\n\r\nShapeModifiers.registerModifier('rd',RoundCornersModifier);\r\nfunction RepeaterModifier(){}\r\nextendPrototype([ShapeModifier], RepeaterModifier);\r\n\r\nRepeaterModifier.prototype.initModifierProperties = function(elem,data){\r\n    this.getValue = this.processKeys;\r\n    this.c = PropertyFactory.getProp(elem,data.c,0,null,this.dynamicProperties);\r\n    this.o = PropertyFactory.getProp(elem,data.o,0,null,this.dynamicProperties);\r\n    this.tr = TransformPropertyFactory.getTransformProperty(elem,data.tr,this.dynamicProperties);\r\n    this.data = data;\r\n    if(!this.dynamicProperties.length){\r\n        this.getValue(true);\r\n    }\r\n    this.pMatrix = new Matrix();\r\n    this.rMatrix = new Matrix();\r\n    this.sMatrix = new Matrix();\r\n    this.tMatrix = new Matrix();\r\n    this.matrix = new Matrix();\r\n};\r\n\r\nRepeaterModifier.prototype.applyTransforms = function(pMatrix, rMatrix, sMatrix, transform, perc, inv){\r\n    var dir = inv ? -1 : 1;\r\n    var scaleX = transform.s.v[0] + (1 - transform.s.v[0]) * (1 - perc);\r\n    var scaleY = transform.s.v[1] + (1 - transform.s.v[1]) * (1 - perc);\r\n    pMatrix.translate(transform.p.v[0] * dir * perc, transform.p.v[1] * dir * perc, transform.p.v[2]);\r\n    rMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\r\n    rMatrix.rotate(-transform.r.v * dir * perc);\r\n    rMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\r\n    sMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\r\n    sMatrix.scale(inv ? 1/scaleX : scaleX, inv ? 1/scaleY : scaleY);\r\n    sMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\r\n};\r\n\r\nRepeaterModifier.prototype.init = function(elem, arr, pos, elemsData, dynamicProperties) {\r\n    this.elem = elem;\r\n    this.arr = arr;\r\n    this.pos = pos;\r\n    this.elemsData = elemsData;\r\n    this._currentCopies = 0;\r\n    this._elements = [];\r\n    this._groups = [];\r\n    this.dynamicProperties = [];\r\n    this.frameId = -1;\r\n    this.initModifierProperties(elem,arr[pos]);\r\n    var cont = 0;\r\n    while(pos>0){\r\n        pos -= 1;\r\n        //this._elements.unshift(arr.splice(pos,1)[0]);\r\n        this._elements.unshift(arr[pos]);\r\n        cont += 1;\r\n    }\r\n    if(this.dynamicProperties.length){\r\n        this.k = true;\r\n        dynamicProperties.push(this);\r\n    }else{\r\n        this.getValue(true);\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.resetElements = function(elements){\r\n    var i, len = elements.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        elements[i]._processed = false;\r\n        if(elements[i].ty === 'gr'){\r\n            this.resetElements(elements[i].it);\r\n        }\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.cloneElements = function(elements){\r\n    var i, len = elements.length;\r\n    var newElements = JSON.parse(JSON.stringify(elements));\r\n    this.resetElements(newElements);\r\n    return newElements;\r\n};\r\n\r\nRepeaterModifier.prototype.changeGroupRender = function(elements, renderFlag) {\r\n    var i, len = elements.length;\r\n    for(i = 0; i < len ; i += 1) {\r\n        elements[i]._render = renderFlag;\r\n        if(elements[i].ty === 'gr') {\r\n            this.changeGroupRender(elements[i].it, renderFlag);\r\n        }\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.processShapes = function(_isFirstFrame) {\r\n    var items, itemsTransform, i, dir, cont;\r\n    if(this._mdf || _isFirstFrame){\r\n        var copies = Math.ceil(this.c.v);\r\n        if(this._groups.length < copies){\r\n            while(this._groups.length < copies){\r\n                var group = {\r\n                    it:this.cloneElements(this._elements),\r\n                    ty:'gr'\r\n                };\r\n                group.it.push({\"a\":{\"a\":0,\"ix\":1,\"k\":[0,0]},\"nm\":\"Transform\",\"o\":{\"a\":0,\"ix\":7,\"k\":100},\"p\":{\"a\":0,\"ix\":2,\"k\":[0,0]},\"r\":{\"a\":0,\"ix\":6,\"k\":0},\"s\":{\"a\":0,\"ix\":3,\"k\":[100,100]},\"sa\":{\"a\":0,\"ix\":5,\"k\":0},\"sk\":{\"a\":0,\"ix\":4,\"k\":0},\"ty\":\"tr\"});\r\n                \r\n                this.arr.splice(0,0,group);\r\n                this._groups.splice(0,0,group);\r\n                this._currentCopies += 1;\r\n            }\r\n            this.elem.reloadShapes();\r\n        }\r\n        cont = 0;\r\n        var renderFlag;\r\n        for(i = 0; i  <= this._groups.length - 1; i += 1){\r\n            renderFlag = cont < copies;\r\n            this._groups[i]._render = renderFlag;\r\n            this.changeGroupRender(this._groups[i].it, renderFlag);\r\n            cont += 1;\r\n        }\r\n        \r\n        this._currentCopies = copies;\r\n        ////\r\n\r\n        var offset = this.o.v;\r\n        var offsetModulo = offset%1;\r\n        var roundOffset = offset > 0 ? Math.floor(offset) : Math.ceil(offset);\r\n        var k;\r\n        var tMat = this.tr.v.props;\r\n        var pProps = this.pMatrix.props;\r\n        var rProps = this.rMatrix.props;\r\n        var sProps = this.sMatrix.props;\r\n        this.pMatrix.reset();\r\n        this.rMatrix.reset();\r\n        this.sMatrix.reset();\r\n        this.tMatrix.reset();\r\n        this.matrix.reset();\r\n        var iteration = 0;\r\n\r\n        if(offset > 0) {\r\n            while(iteration<roundOffset){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\r\n                iteration += 1;\r\n            }\r\n            if(offsetModulo){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, offsetModulo, false);\r\n                iteration += offsetModulo;\r\n            }\r\n        } else if(offset < 0) {\r\n            while(iteration>roundOffset){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, true);\r\n                iteration -= 1;\r\n            }\r\n            if(offsetModulo){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, - offsetModulo, true);\r\n                iteration -= offsetModulo;\r\n            }\r\n        }\r\n        i = this.data.m === 1 ? 0 : this._currentCopies - 1;\r\n        dir = this.data.m === 1 ? 1 : -1;\r\n        cont = this._currentCopies;\r\n        var j, jLen;\r\n        while(cont){\r\n            items = this.elemsData[i].it;\r\n            itemsTransform = items[items.length - 1].transform.mProps.v.props;\r\n            jLen = itemsTransform.length;\r\n            items[items.length - 1].transform.mProps._mdf = true;\r\n            items[items.length - 1].transform.op._mdf = true;\r\n            if(iteration !== 0){\r\n                if((i !== 0 && dir === 1) || (i !== this._currentCopies - 1 && dir === -1)){\r\n                    this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\r\n                }\r\n                this.matrix.transform(rProps[0],rProps[1],rProps[2],rProps[3],rProps[4],rProps[5],rProps[6],rProps[7],rProps[8],rProps[9],rProps[10],rProps[11],rProps[12],rProps[13],rProps[14],rProps[15]);\r\n                this.matrix.transform(sProps[0],sProps[1],sProps[2],sProps[3],sProps[4],sProps[5],sProps[6],sProps[7],sProps[8],sProps[9],sProps[10],sProps[11],sProps[12],sProps[13],sProps[14],sProps[15]);\r\n                this.matrix.transform(pProps[0],pProps[1],pProps[2],pProps[3],pProps[4],pProps[5],pProps[6],pProps[7],pProps[8],pProps[9],pProps[10],pProps[11],pProps[12],pProps[13],pProps[14],pProps[15]);\r\n                \r\n                for(j=0;j<jLen;j+=1) {\r\n                    itemsTransform[j] = this.matrix.props[j];\r\n                }\r\n                this.matrix.reset();\r\n            } else {\r\n                this.matrix.reset();\r\n                for(j=0;j<jLen;j+=1) {\r\n                    itemsTransform[j] = this.matrix.props[j];\r\n                }\r\n            }\r\n            iteration += 1;\r\n            cont -= 1;\r\n            i += dir;\r\n        }\r\n    } else {\r\n        cont = this._currentCopies;\r\n        i = 0;\r\n        dir = 1;\r\n        while(cont){\r\n            items = this.elemsData[i].it;\r\n            itemsTransform = items[items.length - 1].transform.mProps.v.props;\r\n            items[items.length - 1].transform.mProps._mdf = false;\r\n            items[items.length - 1].transform.op._mdf = false;\r\n            cont -= 1;\r\n            i += dir;\r\n        }\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.addShape = function(){};\r\n\r\nShapeModifiers.registerModifier('rp',RepeaterModifier);\r\nfunction ShapeCollection(){\r\n\tthis._length = 0;\r\n\tthis._maxLength = 4;\r\n\tthis.shapes = createSizedArray(this._maxLength);\r\n}\r\n\r\nShapeCollection.prototype.addShape = function(shapeData){\r\n\tif(this._length === this._maxLength){\r\n\t\tthis.shapes = this.shapes.concat(createSizedArray(this._maxLength));\r\n\t\tthis._maxLength *= 2;\r\n\t}\r\n\tthis.shapes[this._length] = shapeData;\r\n\tthis._length += 1;\r\n};\r\n\r\nShapeCollection.prototype.releaseShapes = function(){\r\n\tvar i;\r\n\tfor(i = 0; i < this._length; i += 1) {\r\n\t\tshape_pool.release(this.shapes[i]);\r\n\t}\r\n\tthis._length = 0;\r\n};\r\nfunction DashProperty(elem, data, renderer, dynamicProperties) {\r\n    this.elem = elem;\r\n    this.frameId = -1;\r\n    this.dataProps = createSizedArray(data.length);\r\n    this.renderer = renderer;\r\n    this._mdf = false;\r\n    this.k = false;\r\n    this.dashStr = '';\r\n    this.dashArray = createTypedArray('float32',  data.length - 1);\r\n    this.dashoffset = createTypedArray('float32',  1);\r\n    var i, len = data.length, prop;\r\n    for(i=0;i<len;i+=1){\r\n        prop = PropertyFactory.getProp(elem,data[i].v,0, 0, dynamicProperties);\r\n        this.k = prop.k ? true : this.k;\r\n        this.dataProps[i] = {n:data[i].n,p:prop};\r\n    }\r\n    if(this.k){\r\n        dynamicProperties.push(this);\r\n    }else{\r\n        this.getValue(true);\r\n    }\r\n}\r\n\r\nDashProperty.prototype.getValue = function(forceRender) {\r\n    if(this.elem.globalData.frameId === this.frameId && !forceRender){\r\n        return;\r\n    }\r\n    var i = 0, len = this.dataProps.length;\r\n    this._mdf = false;\r\n    this.frameId = this.elem.globalData.frameId;\r\n    while(i<len){\r\n        if(this.dataProps[i].p._mdf){\r\n            this._mdf = !forceRender;\r\n            break;\r\n        }\r\n        i+=1;\r\n    }\r\n    if(this._mdf || forceRender){\r\n        if(this.renderer === 'svg') {\r\n            this.dashStr = '';\r\n        }\r\n        for(i=0;i<len;i+=1){\r\n            if(this.dataProps[i].n != 'o'){\r\n                if(this.renderer === 'svg') {\r\n                    this.dashStr += ' ' + this.dataProps[i].p.v;\r\n                }else{\r\n                    this.dashArray[i] = this.dataProps[i].p.v;\r\n                }\r\n            }else{\r\n                this.dashoffset[0] = this.dataProps[i].p.v;\r\n            }\r\n        }\r\n    }\r\n};\r\nfunction GradientProperty(elem,data,arr){\r\n    this.prop = PropertyFactory.getProp(elem,data.k,1,null,[]);\r\n    this.data = data;\r\n    this.k = this.prop.k;\r\n    this.c = createTypedArray('uint8c', data.p*4);\r\n    var cLength = data.k.k[0].s ? (data.k.k[0].s.length - data.p*4) : data.k.k.length - data.p*4;\r\n    this.o = createTypedArray('float32', cLength);\r\n    this._cmdf = false;\r\n    this._omdf = false;\r\n    this._collapsable = this.checkCollapsable();\r\n    this._hasOpacity = cLength;\r\n    this._mdf = false;\r\n    if(this.prop.k){\r\n        arr.push(this);\r\n    }\r\n    this.getValue(true);\r\n}\r\n\r\nGradientProperty.prototype.comparePoints = function(values, points) {\r\n    var i = 0, len = this.o.length/2, diff;\r\n    while(i < len) {\r\n        diff = Math.abs(values[i*4] - values[points*4 + i*2]);\r\n        if(diff > 0.01){\r\n            return false;\r\n        }\r\n        i += 1;\r\n    }\r\n    return true;\r\n};\r\n\r\nGradientProperty.prototype.checkCollapsable = function() {\r\n    if (this.o.length/2 !== this.c.length/4) {\r\n        return false;\r\n    }\r\n    if (this.data.k.k[0].s) {\r\n        var i = 0, len = this.data.k.k.length;\r\n        while (i < len) {\r\n            if (!this.comparePoints(this.data.k.k[i].s, this.data.p)) {\r\n                return false;\r\n            }\r\n            i += 1;\r\n        }\r\n    } else if(!this.comparePoints(this.data.k.k, this.data.p)) {\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\n\r\nGradientProperty.prototype.getValue = function(forceRender){\r\n    this.prop.getValue();\r\n    this._mdf = false;\r\n    this._cmdf = false;\r\n    this._omdf = false;\r\n    if(this.prop._mdf || forceRender){\r\n        var i, len = this.data.p*4;\r\n        var mult, val;\r\n        for(i=0;i<len;i+=1){\r\n            mult = i%4 === 0 ? 100 : 255;\r\n            val = Math.round(this.prop.v[i]*mult);\r\n            if(this.c[i] !== val){\r\n                this.c[i] = val;\r\n                this._cmdf = !forceRender;\r\n            }\r\n        }\r\n        if(this.o.length){\r\n            len = this.prop.v.length;\r\n            for(i=this.data.p*4;i<len;i+=1){\r\n                mult = i%2 === 0 ? 100 : 1;\r\n                val = i%2 === 0 ?  Math.round(this.prop.v[i]*100):this.prop.v[i];\r\n                if(this.o[i-this.data.p*4] !== val){\r\n                    this.o[i-this.data.p*4] = val;\r\n                    this._omdf = !forceRender;\r\n                }\r\n            }\r\n        }\r\n        this._mdf = !forceRender;\r\n    }\r\n};\r\nvar ImagePreloader = (function(){\r\n\r\n    function imageLoaded(){\r\n        this.loadedAssets += 1;\r\n        if(this.loadedAssets === this.totalImages){\r\n            if(this.imagesLoadedCb) {\r\n                this.imagesLoadedCb(null);\r\n            }\r\n        }\r\n    }\r\n\r\n    function getAssetsPath(assetData){\r\n        var path = '';\r\n        if(this.assetsPath){\r\n            var imagePath = assetData.p;\r\n            if(imagePath.indexOf('images/') !== -1){\r\n                imagePath = imagePath.split('/')[1];\r\n            }\r\n            path = this.assetsPath + imagePath;\r\n        } else {\r\n            path = this.path;\r\n            path += assetData.u ? assetData.u : '';\r\n            path += assetData.p;\r\n        }\r\n        return path;\r\n    }\r\n\r\n    function loadImage(path){\r\n        var img = createTag('img');\r\n        img.addEventListener('load', imageLoaded.bind(this), false);\r\n        img.addEventListener('error', imageLoaded.bind(this), false);\r\n        img.src = path;\r\n    }\r\n    function loadAssets(assets, cb){\r\n        this.imagesLoadedCb = cb;\r\n        this.totalAssets = assets.length;\r\n        var i;\r\n        for(i=0;i<this.totalAssets;i+=1){\r\n            if(!assets[i].layers){\r\n                loadImage.bind(this)(getAssetsPath.bind(this)(assets[i]));\r\n                this.totalImages += 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    function setPath(path){\r\n        this.path = path || '';\r\n    }\r\n\r\n    function setAssetsPath(path){\r\n        this.assetsPath = path || '';\r\n    }\r\n\r\n    function destroy() {\r\n        this.imagesLoadedCb = null;\r\n    }\r\n\r\n    return function ImagePreloader(){\r\n        this.loadAssets = loadAssets;\r\n        this.setAssetsPath = setAssetsPath;\r\n        this.setPath = setPath;\r\n        this.destroy = destroy;\r\n        this.assetsPath = '';\r\n        this.path = '';\r\n        this.totalAssets = 0;\r\n        this.totalImages = 0;\r\n        this.loadedAssets = 0;\r\n        this.imagesLoadedCb = null;\r\n    };\r\n}());\r\nvar featureSupport = (function(){\r\n\tvar ob = {\r\n\t\tmaskType: true\r\n\t};\r\n\tif (/MSIE 10/i.test(navigator.userAgent) || /MSIE 9/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /Edge\\/\\d./i.test(navigator.userAgent)) {\r\n\t   ob.maskType = false;\r\n\t}\r\n\treturn ob;\r\n}());\r\nvar filtersFactory = (function(){\r\n\tvar ob = {};\r\n\tob.createFilter = createFilter;\r\n\tob.createAlphaToLuminanceFilter = createAlphaToLuminanceFilter;\r\n\r\n\tfunction createFilter(filId){\r\n        \tvar fil = createNS('filter');\r\n        \tfil.setAttribute('id',filId);\r\n                fil.setAttribute('filterUnits','objectBoundingBox');\r\n                fil.setAttribute('x','0%');\r\n                fil.setAttribute('y','0%');\r\n                fil.setAttribute('width','100%');\r\n                fil.setAttribute('height','100%');\r\n                return fil;\r\n\t}\r\n\r\n\tfunction createAlphaToLuminanceFilter(){\r\n                var feColorMatrix = createNS('feColorMatrix');\r\n                feColorMatrix.setAttribute('type','matrix');\r\n                feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n                feColorMatrix.setAttribute('values','0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1');\r\n                return feColorMatrix;\r\n\t}\r\n\r\n\treturn ob;\r\n}());\r\nfunction TextAnimatorProperty(textData, renderType, elem){\r\n    this._mdf = false;\r\n    this._isFirstFrame = true;\r\n\tthis._hasMaskedPath = false;\r\n\tthis._frameId = -1;\r\n\tthis._dynamicProperties = [];\r\n\tthis._textData = textData;\r\n\tthis._renderType = renderType;\r\n\tthis._elem = elem;\r\n\tthis._animatorsData = createSizedArray(this._textData.a.length);\r\n\tthis._pathData = {};\r\n\tthis._moreOptions = {\r\n\t\talignment: {}\r\n\t};\r\n\tthis.renderedLetters = [];\r\n    this.lettersChangedFlag = false;\r\n\r\n}\r\n\r\nTextAnimatorProperty.prototype.searchProperties = function(dynamicProperties){\r\n    var i, len = this._textData.a.length, animatorProps;\r\n    var getProp = PropertyFactory.getProp;\r\n    for(i=0;i<len;i+=1){\r\n        animatorProps = this._textData.a[i];\r\n        this._animatorsData[i] = new TextAnimatorDataProperty(this._elem, animatorProps, this._dynamicProperties);\r\n    }\r\n    if(this._textData.p && 'm' in this._textData.p){\r\n        this._pathData = {\r\n            f: getProp(this._elem,this._textData.p.f,0,0,this._dynamicProperties),\r\n            l: getProp(this._elem,this._textData.p.l,0,0,this._dynamicProperties),\r\n            r: this._textData.p.r,\r\n            m: this._elem.maskManager.getMaskProperty(this._textData.p.m)\r\n        };\r\n        this._hasMaskedPath = true;\r\n    } else {\r\n        this._hasMaskedPath = false;\r\n    }\r\n    this._moreOptions.alignment = getProp(this._elem,this._textData.m.a,1,0,this._dynamicProperties);\r\n    if(this._dynamicProperties.length) {\r\n    \tdynamicProperties.push(this);\r\n    }\r\n};\r\n\r\nTextAnimatorProperty.prototype.getMeasures = function(documentData, lettersChangedFlag){\r\n    this.lettersChangedFlag = lettersChangedFlag;\r\n    if(!this._mdf && !this._isFirstFrame && !lettersChangedFlag && (!this._hasMaskedPath || !this._pathData.m._mdf)) {\r\n        return;\r\n    }\r\n    this._isFirstFrame = false;\r\n    var alignment = this._moreOptions.alignment.v;\r\n    var animators = this._animatorsData;\r\n    var textData = this._textData;\r\n    var matrixHelper = this.mHelper;\r\n    var renderType = this._renderType;\r\n    var renderedLettersCount = this.renderedLetters.length;\r\n    var data = this.data;\r\n    var xPos,yPos;\r\n    var i, len;\r\n    var letters = documentData.l, pathInfo, currentLength, currentPoint, segmentLength, flag, pointInd, segmentInd, prevPoint, points, segments, partialLength, totalLength, perc, tanAngle, mask;\r\n    if(this._hasMaskedPath) {\r\n        mask = this._pathData.m;\r\n        if(!this._pathData.n || this._pathData._mdf){\r\n            var paths = mask.v;\r\n            if(this._pathData.r){\r\n                paths = paths.reverse();\r\n            }\r\n            // TODO: release bezier data cached from previous pathInfo: this._pathData.pi\r\n            pathInfo = {\r\n                tLength: 0,\r\n                segments: []\r\n            };\r\n            len = paths._length - 1;\r\n            var pathData;\r\n            totalLength = 0;\r\n            for (i = 0; i < len; i += 1) {\r\n                pathData = {\r\n                    s: paths.v[i],\r\n                    e: paths.v[i + 1],\r\n                    to: [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]],\r\n                    ti: [paths.i[i + 1][0] - paths.v[i + 1][0], paths.i[i + 1][1] - paths.v[i + 1][1]]\r\n                };\r\n                bez.buildBezierData(pathData);\r\n                pathInfo.tLength += pathData.bezierData.segmentLength;\r\n                pathInfo.segments.push(pathData);\r\n                totalLength += pathData.bezierData.segmentLength;\r\n            }\r\n            i = len;\r\n            if (mask.v.c) {\r\n                pathData = {\r\n                    s: paths.v[i],\r\n                    e: paths.v[0],\r\n                    to: [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]],\r\n                    ti: [paths.i[0][0] - paths.v[0][0], paths.i[0][1] - paths.v[0][1]]\r\n                };\r\n                bez.buildBezierData(pathData);\r\n                pathInfo.tLength += pathData.bezierData.segmentLength;\r\n                pathInfo.segments.push(pathData);\r\n                totalLength += pathData.bezierData.segmentLength;\r\n            }\r\n            this._pathData.pi = pathInfo;\r\n        }\r\n        pathInfo = this._pathData.pi;\r\n\r\n        currentLength = this._pathData.f.v;\r\n        segmentInd = 0;\r\n        pointInd = 1;\r\n        segmentLength = 0;\r\n        flag = true;\r\n        segments = pathInfo.segments;\r\n        if (currentLength < 0 && mask.v.c) {\r\n            if (pathInfo.tLength < Math.abs(currentLength)) {\r\n                currentLength = -Math.abs(currentLength) % pathInfo.tLength;\r\n            }\r\n            segmentInd = segments.length - 1;\r\n            points = segments[segmentInd].bezierData.points;\r\n            pointInd = points.length - 1;\r\n            while (currentLength < 0) {\r\n                currentLength += points[pointInd].partialLength;\r\n                pointInd -= 1;\r\n                if (pointInd < 0) {\r\n                    segmentInd -= 1;\r\n                    points = segments[segmentInd].bezierData.points;\r\n                    pointInd = points.length - 1;\r\n                }\r\n            }\r\n\r\n        }\r\n        points = segments[segmentInd].bezierData.points;\r\n        prevPoint = points[pointInd - 1];\r\n        currentPoint = points[pointInd];\r\n        partialLength = currentPoint.partialLength;\r\n    }\r\n\r\n\r\n    len = letters.length;\r\n    xPos = 0;\r\n    yPos = 0;\r\n    var yOff = documentData.finalSize * 1.2 * 0.714;\r\n    var firstLine = true;\r\n    var animatorProps, animatorSelector;\r\n    var j, jLen;\r\n    var letterValue;\r\n\r\n    jLen = animators.length;\r\n    var lastLetter;\r\n\r\n    var mult, ind = -1, offf, xPathPos, yPathPos;\r\n    var initPathPos = currentLength,initSegmentInd = segmentInd, initPointInd = pointInd, currentLine = -1;\r\n    var elemOpacity;\r\n    var sc,sw,fc,k;\r\n    var lineLength = 0;\r\n    var letterSw,letterSc,letterFc,letterM = '',letterP = this.defaultPropsArray,letterO;\r\n    for( i = 0; i < len; i += 1) {\r\n        matrixHelper.reset();\r\n        elemOpacity = 1;\r\n        if(letters[i].n) {\r\n            xPos = 0;\r\n            yPos += documentData.yOffset;\r\n            yPos += firstLine ? 1 : 0;\r\n            currentLength = initPathPos ;\r\n            firstLine = false;\r\n            lineLength = 0;\r\n            if(this._hasMaskedPath) {\r\n                segmentInd = initSegmentInd;\r\n                pointInd = initPointInd;\r\n                points = segments[segmentInd].bezierData.points;\r\n                prevPoint = points[pointInd - 1];\r\n                currentPoint = points[pointInd];\r\n                partialLength = currentPoint.partialLength;\r\n                segmentLength = 0;\r\n            }\r\n            letterO = letterSw = letterFc = letterM = '';\r\n            letterP = this.defaultPropsArray;\r\n        }else{\r\n            if(this._hasMaskedPath) {\r\n                if(currentLine !== letters[i].line){\r\n                    switch(documentData.j){\r\n                        case 1:\r\n                            currentLength += totalLength - documentData.lineWidths[letters[i].line];\r\n                            break;\r\n                        case 2:\r\n                            currentLength += (totalLength - documentData.lineWidths[letters[i].line])/2;\r\n                            break;\r\n                    }\r\n                    currentLine = letters[i].line;\r\n                }\r\n                if (ind !== letters[i].ind) {\r\n                    if (letters[ind]) {\r\n                        currentLength += letters[ind].extra;\r\n                    }\r\n                    currentLength += letters[i].an / 2;\r\n                    ind = letters[i].ind;\r\n                }\r\n                currentLength += alignment[0] * letters[i].an / 200;\r\n                var animatorOffset = 0;\r\n                for (j = 0; j < jLen; j += 1) {\r\n                    animatorProps = animators[j].a;\r\n                    if (animatorProps.p.propType) {\r\n                        animatorSelector = animators[j].s;\r\n                        mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                        if(mult.length){\r\n                            animatorOffset += animatorProps.p.v[0] * mult[0];\r\n                        } else{\r\n                            animatorOffset += animatorProps.p.v[0] * mult;\r\n                        }\r\n\r\n                    }\r\n                    if (animatorProps.a.propType) {\r\n                        animatorSelector = animators[j].s;\r\n                        mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                        if(mult.length){\r\n                            animatorOffset += animatorProps.a.v[0] * mult[0];\r\n                        } else{\r\n                            animatorOffset += animatorProps.a.v[0] * mult;\r\n                        }\r\n\r\n                    }\r\n                }\r\n                flag = true;\r\n                while (flag) {\r\n                    if (segmentLength + partialLength >= currentLength + animatorOffset || !points) {\r\n                        perc = (currentLength + animatorOffset - segmentLength) / currentPoint.partialLength;\r\n                        xPathPos = prevPoint.point[0] + (currentPoint.point[0] - prevPoint.point[0]) * perc;\r\n                        yPathPos = prevPoint.point[1] + (currentPoint.point[1] - prevPoint.point[1]) * perc;\r\n                        matrixHelper.translate(-alignment[0]*letters[i].an/200, -(alignment[1] * yOff / 100));\r\n                        flag = false;\r\n                    } else if (points) {\r\n                        segmentLength += currentPoint.partialLength;\r\n                        pointInd += 1;\r\n                        if (pointInd >= points.length) {\r\n                            pointInd = 0;\r\n                            segmentInd += 1;\r\n                            if (!segments[segmentInd]) {\r\n                                if (mask.v.c) {\r\n                                    pointInd = 0;\r\n                                    segmentInd = 0;\r\n                                    points = segments[segmentInd].bezierData.points;\r\n                                } else {\r\n                                    segmentLength -= currentPoint.partialLength;\r\n                                    points = null;\r\n                                }\r\n                            } else {\r\n                                points = segments[segmentInd].bezierData.points;\r\n                            }\r\n                        }\r\n                        if (points) {\r\n                            prevPoint = currentPoint;\r\n                            currentPoint = points[pointInd];\r\n                            partialLength = currentPoint.partialLength;\r\n                        }\r\n                    }\r\n                }\r\n                offf = letters[i].an / 2 - letters[i].add;\r\n                matrixHelper.translate(-offf, 0, 0);\r\n            } else {\r\n                offf = letters[i].an/2 - letters[i].add;\r\n                matrixHelper.translate(-offf,0,0);\r\n\r\n                // Grouping alignment\r\n                matrixHelper.translate(-alignment[0]*letters[i].an/200, -alignment[1]*yOff/100, 0);\r\n            }\r\n\r\n            lineLength += letters[i].l/2;\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if (animatorProps.t.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    if(this._hasMaskedPath) {\r\n                        if(mult.length) {\r\n                            currentLength += animatorProps.t*mult[0];\r\n                        } else {\r\n                            currentLength += animatorProps.t*mult;\r\n                        }\r\n                    }else{\r\n                        if(mult.length) {\r\n                            xPos += animatorProps.t.v*mult[0];\r\n                        } else {\r\n                            xPos += animatorProps.t.v*mult;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            lineLength += letters[i].l/2;\r\n            if(documentData.strokeWidthAnim) {\r\n                sw = documentData.sw || 0;\r\n            }\r\n            if(documentData.strokeColorAnim) {\r\n                if(documentData.sc){\r\n                    sc = [documentData.sc[0], documentData.sc[1], documentData.sc[2]];\r\n                }else{\r\n                    sc = [0,0,0];\r\n                }\r\n            }\r\n            if(documentData.fillColorAnim && documentData.fc) {\r\n                fc = [documentData.fc[0], documentData.fc[1], documentData.fc[2]];\r\n            }\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if (animatorProps.a.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n\r\n                    if(mult.length){\r\n                        matrixHelper.translate(-animatorProps.a.v[0]*mult[0], -animatorProps.a.v[1]*mult[1], animatorProps.a.v[2]*mult[2]);\r\n                    } else {\r\n                        matrixHelper.translate(-animatorProps.a.v[0]*mult, -animatorProps.a.v[1]*mult, animatorProps.a.v[2]*mult);\r\n                    }\r\n                }\r\n            }\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if (animatorProps.s.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    if(mult.length){\r\n                        matrixHelper.scale(1+((animatorProps.s.v[0]-1)*mult[0]),1+((animatorProps.s.v[1]-1)*mult[1]),1);\r\n                    } else {\r\n                        matrixHelper.scale(1+((animatorProps.s.v[0]-1)*mult),1+((animatorProps.s.v[1]-1)*mult),1);\r\n                    }\r\n                }\r\n            }\r\n            for(j=0;j<jLen;j+=1) {\r\n                animatorProps = animators[j].a;\r\n                animatorSelector = animators[j].s;\r\n                mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                if (animatorProps.sk.propType) {\r\n                    if(mult.length) {\r\n                        matrixHelper.skewFromAxis(-animatorProps.sk.v * mult[0], animatorProps.sa.v * mult[1]);\r\n                    } else {\r\n                        matrixHelper.skewFromAxis(-animatorProps.sk.v * mult, animatorProps.sa.v * mult);\r\n                    }\r\n                }\r\n                if (animatorProps.r.propType) {\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateZ(-animatorProps.r.v * mult[2]);\r\n                    } else {\r\n                        matrixHelper.rotateZ(-animatorProps.r.v * mult);\r\n                    }\r\n                }\r\n                if (animatorProps.ry.propType) {\r\n\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateY(animatorProps.ry.v*mult[1]);\r\n                    }else{\r\n                        matrixHelper.rotateY(animatorProps.ry.v*mult);\r\n                    }\r\n                }\r\n                if (animatorProps.rx.propType) {\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateX(animatorProps.rx.v*mult[0]);\r\n                    } else {\r\n                        matrixHelper.rotateX(animatorProps.rx.v*mult);\r\n                    }\r\n                }\r\n                if (animatorProps.o.propType) {\r\n                    if(mult.length) {\r\n                        elemOpacity += ((animatorProps.o.v)*mult[0] - elemOpacity)*mult[0];\r\n                    } else {\r\n                        elemOpacity += ((animatorProps.o.v)*mult - elemOpacity)*mult;\r\n                    }\r\n                }\r\n                if (documentData.strokeWidthAnim && animatorProps.sw.propType) {\r\n                    if(mult.length) {\r\n                        sw += animatorProps.sw.v*mult[0];\r\n                    } else {\r\n                        sw += animatorProps.sw.v*mult;\r\n                    }\r\n                }\r\n                if (documentData.strokeColorAnim && animatorProps.sc.propType) {\r\n                    for(k=0;k<3;k+=1){\r\n                        if(mult.length) {\r\n                            sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k])*mult[0];\r\n                        } else {\r\n                            sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k])*mult;\r\n                        }\r\n                    }\r\n                }\r\n                if (documentData.fillColorAnim && documentData.fc) {\r\n                    if(animatorProps.fc.propType){\r\n                        for(k=0;k<3;k+=1){\r\n                            if(mult.length) {\r\n                                fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k])*mult[0];\r\n                            } else {\r\n                                fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k])*mult;\r\n                            }\r\n                        }\r\n                    }\r\n                    if(animatorProps.fh.propType){\r\n                        if(mult.length) {\r\n                            fc = addHueToRGB(fc,animatorProps.fh.v*mult[0]);\r\n                        } else {\r\n                            fc = addHueToRGB(fc,animatorProps.fh.v*mult);\r\n                        }\r\n                    }\r\n                    if(animatorProps.fs.propType){\r\n                        if(mult.length) {\r\n                            fc = addSaturationToRGB(fc,animatorProps.fs.v*mult[0]);\r\n                        } else {\r\n                            fc = addSaturationToRGB(fc,animatorProps.fs.v*mult);\r\n                        }\r\n                    }\r\n                    if(animatorProps.fb.propType){\r\n                        if(mult.length) {\r\n                            fc = addBrightnessToRGB(fc,animatorProps.fb.v*mult[0]);\r\n                        } else {\r\n                            fc = addBrightnessToRGB(fc,animatorProps.fb.v*mult);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n\r\n                if (animatorProps.p.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    if(this._hasMaskedPath) {\r\n                        if(mult.length) {\r\n                            matrixHelper.translate(0, animatorProps.p.v[1] * mult[0], -animatorProps.p.v[2] * mult[1]);\r\n                        } else {\r\n                            matrixHelper.translate(0, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\r\n                        }\r\n                    }else{\r\n                        if(mult.length) {\r\n                            matrixHelper.translate(animatorProps.p.v[0] * mult[0], animatorProps.p.v[1] * mult[1], -animatorProps.p.v[2] * mult[2]);\r\n                        } else {\r\n                            matrixHelper.translate(animatorProps.p.v[0] * mult, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(documentData.strokeWidthAnim){\r\n                letterSw = sw < 0 ? 0 : sw;\r\n            }\r\n            if(documentData.strokeColorAnim){\r\n                letterSc = 'rgb('+Math.round(sc[0]*255)+','+Math.round(sc[1]*255)+','+Math.round(sc[2]*255)+')';\r\n            }\r\n            if(documentData.fillColorAnim && documentData.fc){\r\n                letterFc = 'rgb('+Math.round(fc[0]*255)+','+Math.round(fc[1]*255)+','+Math.round(fc[2]*255)+')';\r\n            }\r\n\r\n            if(this._hasMaskedPath) {\r\n                matrixHelper.translate(0,-documentData.ls);\r\n\r\n                matrixHelper.translate(0, alignment[1]*yOff/100 + yPos,0);\r\n                if (textData.p.p) {\r\n                    tanAngle = (currentPoint.point[1] - prevPoint.point[1]) / (currentPoint.point[0] - prevPoint.point[0]);\r\n                    var rot = Math.atan(tanAngle) * 180 / Math.PI;\r\n                    if (currentPoint.point[0] < prevPoint.point[0]) {\r\n                        rot += 180;\r\n                    }\r\n                    matrixHelper.rotate(-rot * Math.PI / 180);\r\n                }\r\n                matrixHelper.translate(xPathPos, yPathPos, 0);\r\n                currentLength -= alignment[0]*letters[i].an/200;\r\n                if(letters[i+1] && ind !== letters[i+1].ind){\r\n                    currentLength += letters[i].an / 2;\r\n                    currentLength += documentData.tr/1000*documentData.finalSize;\r\n                }\r\n            }else{\r\n\r\n                matrixHelper.translate(xPos,yPos,0);\r\n\r\n                if(documentData.ps){\r\n                    //matrixHelper.translate(documentData.ps[0],documentData.ps[1],0);\r\n                    matrixHelper.translate(documentData.ps[0],documentData.ps[1] + documentData.ascent,0);\r\n                }\r\n                switch(documentData.j){\r\n                    case 1:\r\n                        matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]),0,0);\r\n                        break;\r\n                    case 2:\r\n                        matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line])/2,0,0);\r\n                        break;\r\n                }\r\n                matrixHelper.translate(0,-documentData.ls);\r\n                matrixHelper.translate(offf,0,0);\r\n                matrixHelper.translate(alignment[0]*letters[i].an/200,alignment[1]*yOff/100,0);\r\n                xPos += letters[i].l + documentData.tr/1000*documentData.finalSize;\r\n            }\r\n            if(renderType === 'html'){\r\n                letterM = matrixHelper.toCSS();\r\n            }else if(renderType === 'svg'){\r\n                letterM = matrixHelper.to2dCSS();\r\n            }else{\r\n                letterP = [matrixHelper.props[0],matrixHelper.props[1],matrixHelper.props[2],matrixHelper.props[3],matrixHelper.props[4],matrixHelper.props[5],matrixHelper.props[6],matrixHelper.props[7],matrixHelper.props[8],matrixHelper.props[9],matrixHelper.props[10],matrixHelper.props[11],matrixHelper.props[12],matrixHelper.props[13],matrixHelper.props[14],matrixHelper.props[15]];\r\n            }\r\n            letterO = elemOpacity;\r\n        }\r\n\r\n        if(renderedLettersCount <= i) {\r\n            letterValue = new LetterProps(letterO,letterSw,letterSc,letterFc,letterM,letterP);\r\n            this.renderedLetters.push(letterValue);\r\n            renderedLettersCount += 1;\r\n            this.lettersChangedFlag = true;\r\n        } else {\r\n            letterValue = this.renderedLetters[i];\r\n            this.lettersChangedFlag = letterValue.update(letterO, letterSw, letterSc, letterFc, letterM, letterP) || this.lettersChangedFlag;\r\n        }\r\n    }\r\n};\r\n\r\nTextAnimatorProperty.prototype.getValue = function(){\r\n\tif(this._elem.globalData.frameId === this._frameId){\r\n        return;\r\n    }\r\n    this._frameId = this._elem.globalData.frameId;\r\n\tvar i, len = this._dynamicProperties.length;\r\n    this._mdf = false;\r\n\tfor(i = 0; i < len; i += 1) {\r\n\t\tthis._dynamicProperties[i].getValue();\r\n        this._mdf = this._dynamicProperties[i]._mdf || this._mdf;\r\n\t}\r\n};\r\n\r\nTextAnimatorProperty.prototype.mHelper = new Matrix();\r\nTextAnimatorProperty.prototype.defaultPropsArray = [];\r\nfunction TextAnimatorDataProperty(elem, animatorProps, dynamicProperties) {\r\n\tvar defaultData = {propType:false};\r\n\tvar getProp = PropertyFactory.getProp;\r\n\tvar textAnimator_animatables = animatorProps.a;\r\n\tthis.a = {\r\n\t\tr: textAnimator_animatables.r ? getProp(elem, textAnimator_animatables.r, 0, degToRads, dynamicProperties) : defaultData,\r\n\t\trx: textAnimator_animatables.rx ? getProp(elem, textAnimator_animatables.rx, 0, degToRads, dynamicProperties) : defaultData,\r\n\t\try: textAnimator_animatables.ry ? getProp(elem, textAnimator_animatables.ry, 0, degToRads, dynamicProperties) : defaultData,\r\n\t\tsk: textAnimator_animatables.sk ? getProp(elem, textAnimator_animatables.sk, 0, degToRads, dynamicProperties) : defaultData,\r\n\t\tsa: textAnimator_animatables.sa ? getProp(elem, textAnimator_animatables.sa, 0, degToRads, dynamicProperties) : defaultData,\r\n\t\ts: textAnimator_animatables.s ? getProp(elem, textAnimator_animatables.s, 1, 0.01, dynamicProperties) : defaultData,\r\n\t\ta: textAnimator_animatables.a ? getProp(elem, textAnimator_animatables.a, 1, 0, dynamicProperties) : defaultData,\r\n\t\to: textAnimator_animatables.o ? getProp(elem, textAnimator_animatables.o, 0, 0.01, dynamicProperties) : defaultData,\r\n\t\tp: textAnimator_animatables.p ? getProp(elem,textAnimator_animatables.p, 1, 0, dynamicProperties) : defaultData,\r\n\t\tsw: textAnimator_animatables.sw ? getProp(elem, textAnimator_animatables.sw, 0, 0, dynamicProperties) : defaultData,\r\n\t\tsc: textAnimator_animatables.sc ? getProp(elem, textAnimator_animatables.sc, 1, 0, dynamicProperties) : defaultData,\r\n\t\tfc: textAnimator_animatables.fc ? getProp(elem, textAnimator_animatables.fc, 1, 0, dynamicProperties) : defaultData,\r\n\t\tfh: textAnimator_animatables.fh ? getProp(elem, textAnimator_animatables.fh, 0, 0, dynamicProperties) : defaultData,\r\n\t\tfs: textAnimator_animatables.fs ? getProp(elem, textAnimator_animatables.fs, 0, 0.01, dynamicProperties) : defaultData,\r\n\t\tfb: textAnimator_animatables.fb ? getProp(elem, textAnimator_animatables.fb, 0, 0.01, dynamicProperties) : defaultData,\r\n\t\tt: textAnimator_animatables.t ? getProp(elem, textAnimator_animatables.t, 0, 0, dynamicProperties) : defaultData\r\n\t};\r\n\r\n\tthis.s = TextSelectorProp.getTextSelectorProp(elem,animatorProps.s, dynamicProperties);\r\n    this.s.t = animatorProps.s.t;\r\n}\r\nfunction LetterProps(o, sw, sc, fc, m, p){\r\n    this.o = o;\r\n    this.sw = sw;\r\n    this.sc = sc;\r\n    this.fc = fc;\r\n    this.m = m;\r\n    this.p = p;\r\n    this._mdf = {\r\n    \to: true,\r\n    \tsw: !!sw,\r\n    \tsc: !!sc,\r\n    \tfc: !!fc,\r\n    \tm: true,\r\n    \tp: true\r\n    };\r\n}\r\n\r\nLetterProps.prototype.update = function(o, sw, sc, fc, m, p) {\r\n\tthis._mdf.o = false;\r\n\tthis._mdf.sw = false;\r\n\tthis._mdf.sc = false;\r\n\tthis._mdf.fc = false;\r\n\tthis._mdf.m = false;\r\n\tthis._mdf.p = false;\r\n\tvar updated = false;\r\n\r\n\tif(this.o !== o) {\r\n\t\tthis.o = o;\r\n\t\tthis._mdf.o = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.sw !== sw) {\r\n\t\tthis.sw = sw;\r\n\t\tthis._mdf.sw = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.sc !== sc) {\r\n\t\tthis.sc = sc;\r\n\t\tthis._mdf.sc = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.fc !== fc) {\r\n\t\tthis.fc = fc;\r\n\t\tthis._mdf.fc = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.m !== m) {\r\n\t\tthis.m = m;\r\n\t\tthis._mdf.m = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(p.length && (this.p[0] !== p[0] || this.p[1] !== p[1] || this.p[4] !== p[4] || this.p[5] !== p[5] || this.p[12] !== p[12] || this.p[13] !== p[13])) {\r\n\t\tthis.p = p;\r\n\t\tthis._mdf.p = true;\r\n\t\tupdated = true;\r\n\t}\r\n\treturn updated;\r\n};\r\nfunction TextProperty(elem, data, dynamicProperties){\r\n\tthis._frameId = initialDefaultFrame;\r\n\tthis.pv = '';\r\n\tthis.v = '';\r\n\tthis.kf = false;\r\n\tthis._isFirstFrame = true;\r\n\tthis._mdf = true;\r\n\tthis.data = data;\r\n\tthis.elem = elem;\r\n\tthis.keysIndex = -1;\r\n    this.canResize = false;\r\n    this.minimumFontSize = 1;\r\n\tthis.currentData = {\r\n\t\tascent: 0,\r\n        boxWidth: [0,0],\r\n        f: '',\r\n        fStyle: '',\r\n        fWeight: '',\r\n        fc: '',\r\n        j: '',\r\n        justifyOffset: '',\r\n        l: [],\r\n        lh: 0,\r\n        lineWidths: [],\r\n        ls: '',\r\n        of: '',\r\n        s: '',\r\n        sc: '',\r\n        sw: 0,\r\n        t: 0,\r\n        tr: 0,\r\n        sz:0,\r\n        ps:[0,0],\r\n        fillColorAnim: false,\r\n        strokeColorAnim: false,\r\n        strokeWidthAnim: false,\r\n        yOffset: 0,\r\n        __complete: false,\r\n        finalSize:0,\r\n        finalText:[],\r\n        finalLineHeight: 0\r\n\r\n\t};\r\n\tif(this.searchProperty()) {\r\n\t\tdynamicProperties.push(this);\r\n\t} else {\r\n\t\tthis.getValue(true);\r\n\t}\r\n}\r\n\r\nTextProperty.prototype.setCurrentData = function(data){\r\n\t\tvar currentData = this.currentData;\r\n        currentData.ascent = data.ascent;\r\n        currentData.boxWidth = data.boxWidth ? data.boxWidth : currentData.boxWidth;\r\n        currentData.f = data.f;\r\n        currentData.fStyle = data.fStyle;\r\n        currentData.fWeight = data.fWeight;\r\n        currentData.fc = data.fc;\r\n        currentData.j = data.j;\r\n        currentData.justifyOffset = data.justifyOffset;\r\n        currentData.l = data.l;\r\n        currentData.lh = data.lh;\r\n        currentData.lineWidths = data.lineWidths;\r\n        currentData.ls = data.ls;\r\n        currentData.of = data.of;\r\n        currentData.s = data.s;\r\n        currentData.sc = data.sc;\r\n        currentData.sw = data.sw;\r\n        currentData.sz = data.sz;\r\n        currentData.ps = data.ps;\r\n        currentData.t = data.t;\r\n        currentData.tr = data.tr;\r\n        currentData.fillColorAnim = data.fillColorAnim || currentData.fillColorAnim;\r\n        currentData.strokeColorAnim = data.strokeColorAnim || currentData.strokeColorAnim;\r\n        currentData.strokeWidthAnim = data.strokeWidthAnim || currentData.strokeWidthAnim;\r\n        currentData.yOffset = data.yOffset;\r\n        currentData.finalSize = data.finalSize;\r\n        currentData.finalLineHeight = data.finalLineHeight;\r\n        currentData.finalText = data.finalText;\r\n        currentData.__complete = false;\r\n};\r\n\r\nTextProperty.prototype.searchProperty = function() {\r\n\tthis.kf = this.data.d.k.length > 1;\r\n\treturn this.kf;\r\n};\r\n\r\nTextProperty.prototype.getValue = function(_forceRender) {\r\n\tthis._mdf = false;\r\n\tvar frameId = this.elem.globalData.frameId;\r\n\tif((frameId === this._frameId || !this.kf) && !this._isFirstFrame && !_forceRender) {\r\n\t\treturn;\r\n\t}\r\n    var textKeys = this.data.d.k, textDocumentData;\r\n    var frameNum = this.elem.comp.renderedFrame;\r\n    var i = 0, len = textKeys.length;\r\n    while(i <= len - 1) {\r\n        textDocumentData = textKeys[i].s;\r\n        if(i === len - 1 || textKeys[i+1].t > frameNum){\r\n            break;\r\n        }\r\n        i += 1;\r\n    }\r\n    if(this.keysIndex !== i) {\r\n    \tif(!textDocumentData.__complete) {\r\n            this.completeTextData(textDocumentData);\r\n        }\r\n        this.setCurrentData(textDocumentData);\r\n        this._mdf = !this._isFirstFrame;\r\n        this.pv = this.v = this.currentData.t;\r\n        this.keysIndex = i;\r\n    }\r\n\tthis._frameId = frameId;\r\n};\r\n\r\nTextProperty.prototype.buildFinalText = function(text) {\r\n    var combinedCharacters = FontManager.getCombinedCharacterCodes();\r\n    var charactersArray = [];\r\n    var i = 0, len = text.length;\r\n    while (i < len) {\r\n        if (combinedCharacters.indexOf(text.charCodeAt(i)) !== -1) {\r\n            charactersArray[charactersArray.length - 1] += text.charAt(i);\r\n        } else {\r\n            charactersArray.push(text.charAt(i));\r\n        }\r\n        i += 1;\r\n    }\r\n    return charactersArray;\r\n}\r\n\r\nTextProperty.prototype.completeTextData = function(documentData) {\r\n    documentData.__complete = true;\r\n    var fontManager = this.elem.globalData.fontManager;\r\n    var data = this.data;\r\n    var letters = [];\r\n    var i, len;\r\n    var newLineFlag, index = 0, val;\r\n    var anchorGrouping = data.m.g;\r\n    var currentSize = 0, currentPos = 0, currentLine = 0, lineWidths = [];\r\n    var lineWidth = 0;\r\n    var maxLineWidth = 0;\r\n    var j, jLen;\r\n    var fontData = fontManager.getFontByName(documentData.f);\r\n    var charData, cLength = 0;\r\n    var styles = fontData.fStyle.split(' ');\r\n\r\n    var fWeight = 'normal', fStyle = 'normal';\r\n    len = styles.length;\r\n    var styleName;\r\n    for(i=0;i<len;i+=1){\r\n        styleName = styles[i].toLowerCase();\r\n        switch(styleName) {\r\n            case 'italic':\r\n            fStyle = 'italic';\r\n            break;\r\n            case 'bold':\r\n            fWeight = '700';\r\n            break;\r\n            case 'black':\r\n            fWeight = '900';\r\n            break;\r\n            case 'medium':\r\n            fWeight = '500';\r\n            break;\r\n            case 'regular':\r\n            case 'normal':\r\n            fWeight = '400';\r\n            break;\r\n            case 'light':\r\n            case 'thin':\r\n            fWeight = '200';\r\n            break;\r\n        }\r\n    }\r\n    documentData.fWeight = fontData.fWeight || fWeight;\r\n    documentData.fStyle = fStyle;\r\n    len = documentData.t.length;\r\n    documentData.finalSize = documentData.s;\r\n    documentData.finalText = this.buildFinalText(documentData.t);\r\n    documentData.finalLineHeight = documentData.lh;\r\n    var trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n    if(documentData.sz){\r\n        var flag = true;\r\n        var boxWidth = documentData.sz[0];\r\n        var boxHeight = documentData.sz[1];\r\n        var currentHeight, finalText;\r\n        while(flag) {\r\n            finalText = this.buildFinalText(documentData.t);\r\n            currentHeight = 0;\r\n            lineWidth = 0;\r\n            len = finalText.length;\r\n            trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n            var lastSpaceIndex = -1;\r\n            for(i=0;i<len;i+=1){\r\n                newLineFlag = false;\r\n                if(finalText[i] === ' '){\r\n                    lastSpaceIndex = i;\r\n                }else if(finalText[i].charCodeAt(0) === 13){\r\n                    lineWidth = 0;\r\n                    newLineFlag = true;\r\n                    currentHeight += documentData.finalLineHeight || documentData.finalSize*1.2;\r\n                }\r\n                if(fontManager.chars){\r\n                    charData = fontManager.getCharData(finalText[i], fontData.fStyle, fontData.fFamily);\r\n                    cLength = newLineFlag ? 0 : charData.w*documentData.finalSize/100;\r\n                }else{\r\n                    //tCanvasHelper.font = documentData.s + 'px '+ fontData.fFamily;\r\n                    cLength = fontManager.measureText(finalText[i], documentData.f, documentData.finalSize);\r\n                }\r\n                if(lineWidth + cLength > boxWidth && finalText[i] !== ' '){\r\n                    if(lastSpaceIndex === -1){\r\n                        len += 1;\r\n                    } else {\r\n                        i = lastSpaceIndex;\r\n                    }\r\n                    currentHeight += documentData.finalLineHeight || documentData.finalSize*1.2;\r\n                    finalText.splice(i, lastSpaceIndex === i ? 1 : 0,\"\\r\");\r\n                    //finalText = finalText.substr(0,i) + \"\\r\" + finalText.substr(i === lastSpaceIndex ? i + 1 : i);\r\n                    lastSpaceIndex = -1;\r\n                    lineWidth = 0;\r\n                }else {\r\n                    lineWidth += cLength;\r\n                    lineWidth += trackingOffset;\r\n                }\r\n            }\r\n            currentHeight += fontData.ascent*documentData.finalSize/100;\r\n            if(this.canResize && documentData.finalSize > this.minimumFontSize && boxHeight < currentHeight) {\r\n                documentData.finalSize -= 1;\r\n                documentData.finalLineHeight = documentData.finalSize * documentData.lh / documentData.s;\r\n            } else {\r\n                documentData.finalText = finalText;\r\n                len = documentData.finalText.length;\r\n                flag = false;\r\n            }\r\n        }\r\n\r\n    }\r\n    lineWidth = - trackingOffset;\r\n    cLength = 0;\r\n    var uncollapsedSpaces = 0;\r\n    var currentChar;\r\n    for (i = 0;i < len ;i += 1) {\r\n        newLineFlag = false;\r\n        currentChar = documentData.finalText[i];\r\n        if(currentChar === ' '){\r\n            val = '\\u00A0';\r\n        }else if(currentChar.charCodeAt(0) === 13){\r\n            uncollapsedSpaces = 0;\r\n            lineWidths.push(lineWidth);\r\n            maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\r\n            lineWidth = - 2 * trackingOffset;\r\n            val = '';\r\n            newLineFlag = true;\r\n            currentLine += 1;\r\n        }else{\r\n            val = documentData.finalText[i];\r\n        }\r\n        if(fontManager.chars){\r\n            charData = fontManager.getCharData(currentChar, fontData.fStyle, fontManager.getFontByName(documentData.f).fFamily);\r\n            cLength = newLineFlag ? 0 : charData.w*documentData.finalSize/100;\r\n        }else{\r\n            //var charWidth = fontManager.measureText(val, documentData.f, documentData.finalSize);\r\n            //tCanvasHelper.font = documentData.finalSize + 'px '+ fontManager.getFontByName(documentData.f).fFamily;\r\n            cLength = fontManager.measureText(val, documentData.f, documentData.finalSize);\r\n        }\r\n\r\n        //\r\n        if(currentChar === ' '){\r\n            uncollapsedSpaces += cLength + trackingOffset;\r\n        } else {\r\n            lineWidth += cLength + trackingOffset + uncollapsedSpaces;\r\n            uncollapsedSpaces = 0;\r\n        }\r\n        letters.push({l:cLength,an:cLength,add:currentSize,n:newLineFlag, anIndexes:[], val: val, line: currentLine});\r\n        if(anchorGrouping == 2){\r\n            currentSize += cLength;\r\n            if(val === '' || val === '\\u00A0' || i === len - 1){\r\n                if(val === '' || val === '\\u00A0'){\r\n                    currentSize -= cLength;\r\n                }\r\n                while(currentPos<=i){\r\n                    letters[currentPos].an = currentSize;\r\n                    letters[currentPos].ind = index;\r\n                    letters[currentPos].extra = cLength;\r\n                    currentPos += 1;\r\n                }\r\n                index += 1;\r\n                currentSize = 0;\r\n            }\r\n        }else if(anchorGrouping == 3){\r\n            currentSize += cLength;\r\n            if(val === '' || i === len - 1){\r\n                if(val === ''){\r\n                    currentSize -= cLength;\r\n                }\r\n                while(currentPos<=i){\r\n                    letters[currentPos].an = currentSize;\r\n                    letters[currentPos].ind = index;\r\n                    letters[currentPos].extra = cLength;\r\n                    currentPos += 1;\r\n                }\r\n                currentSize = 0;\r\n                index += 1;\r\n            }\r\n        }else{\r\n            letters[index].ind = index;\r\n            letters[index].extra = 0;\r\n            index += 1;\r\n        }\r\n    }\r\n    documentData.l = letters;\r\n    maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\r\n    lineWidths.push(lineWidth);\r\n    if(documentData.sz){\r\n        documentData.boxWidth = documentData.sz[0];\r\n        documentData.justifyOffset = 0;\r\n    }else{\r\n        documentData.boxWidth = maxLineWidth;\r\n        switch(documentData.j){\r\n            case 1:\r\n                documentData.justifyOffset = - documentData.boxWidth;\r\n                break;\r\n            case 2:\r\n                documentData.justifyOffset = - documentData.boxWidth/2;\r\n                break;\r\n            default:\r\n                documentData.justifyOffset = 0;\r\n        }\r\n    }\r\n    documentData.lineWidths = lineWidths;\r\n\r\n    var animators = data.a, animatorData, letterData;\r\n    jLen = animators.length;\r\n    var based, ind, indexes = [];\r\n    for(j=0;j<jLen;j+=1){\r\n        animatorData = animators[j];\r\n        if(animatorData.a.sc){\r\n            documentData.strokeColorAnim = true;\r\n        }\r\n        if(animatorData.a.sw){\r\n            documentData.strokeWidthAnim = true;\r\n        }\r\n        if(animatorData.a.fc || animatorData.a.fh || animatorData.a.fs || animatorData.a.fb){\r\n            documentData.fillColorAnim = true;\r\n        }\r\n        ind = 0;\r\n        based = animatorData.s.b;\r\n        for(i=0;i<len;i+=1){\r\n            letterData = letters[i];\r\n            letterData.anIndexes[j] = ind;\r\n            if((based == 1 && letterData.val !== '') || (based == 2 && letterData.val !== '' && letterData.val !== '\\u00A0') || (based == 3 && (letterData.n || letterData.val == '\\u00A0' || i == len - 1)) || (based == 4 && (letterData.n || i == len - 1))){\r\n                if(animatorData.s.rn === 1){\r\n                    indexes.push(ind);\r\n                }\r\n                ind += 1;\r\n            }\r\n        }\r\n        data.a[j].s.totalChars = ind;\r\n        var currentInd = -1, newInd;\r\n        if(animatorData.s.rn === 1){\r\n            for(i = 0; i < len; i += 1){\r\n                letterData = letters[i];\r\n                if(currentInd != letterData.anIndexes[j]){\r\n                    currentInd = letterData.anIndexes[j];\r\n                    newInd = indexes.splice(Math.floor(Math.random()*indexes.length),1)[0];\r\n                }\r\n                letterData.anIndexes[j] = newInd;\r\n            }\r\n        }\r\n    }\r\n    documentData.yOffset = documentData.finalLineHeight || documentData.finalSize*1.2;\r\n    documentData.ls = documentData.ls || 0;\r\n    documentData.ascent = fontData.ascent*documentData.finalSize/100;\r\n};\r\n\r\nTextProperty.prototype.updateDocumentData = function(newData, index) {\r\n\tindex = index === undefined ? this.keysIndex : index;\r\n    var dData = this.data.d.k[index].s;\r\n    for(var s in newData) {\r\n        dData[s] = newData[s];\r\n    }\r\n    this.recalculate(index);\r\n};\r\n\r\nTextProperty.prototype.recalculate = function(index) {\r\n    var dData = this.data.d.k[index].s;\r\n    dData.__complete = false;\r\n    this.keysIndex = -1;\r\n    this.getValue(true);\r\n}\r\n\r\nTextProperty.prototype.canResizeFont = function(_canResize) {\r\n    this.canResize = _canResize;\r\n    this.recalculate(this.keysIndex);\r\n};\r\n\r\nTextProperty.prototype.setMinimumFontSize = function(_fontValue) {\r\n    this.minimumFontSize = Math.floor(_fontValue) || 1;\r\n    this.recalculate(this.keysIndex);\r\n};\r\n\r\nvar TextSelectorProp = (function(){\r\n    var max = Math.max;\r\n    var min = Math.min;\r\n    var floor = Math.floor;\r\n    function updateRange(newCharsFlag){\r\n        this._mdf = newCharsFlag || false;\r\n        if(this.dynamicProperties.length){\r\n            var i, len = this.dynamicProperties.length;\r\n            for(i=0;i<len;i+=1){\r\n                this.dynamicProperties[i].getValue();\r\n                if(this.dynamicProperties[i]._mdf){\r\n                    this._mdf = true;\r\n                }\r\n            }\r\n        }\r\n        var totalChars = this.data.totalChars || this.elem.textProperty.currentData.l.length || 0;\r\n        if(newCharsFlag && this.data.r === 2) {\r\n            this.e.v = totalChars;\r\n        }\r\n        var divisor = this.data.r === 2 ? 1 : 100 / totalChars;\r\n        var o = this.o.v/divisor;\r\n        var s = this.s.v/divisor + o;\r\n        var e = (this.e.v/divisor) + o;\r\n        if(s>e){\r\n            var _s = s;\r\n            s = e;\r\n            e = _s;\r\n        }\r\n        this.finalS = s;\r\n        this.finalE = e;\r\n    }\r\n\r\n    function getMult(ind){\r\n        //var easer = bez.getEasingCurve(this.ne.v/100,0,1-this.xe.v/100,1);\r\n        var easer = BezierFactory.getBezierEasing(this.ne.v/100,0,1-this.xe.v/100,1).get;\r\n        var mult = 0;\r\n        var s = this.finalS;\r\n        var e = this.finalE;\r\n        var type = this.data.sh;\r\n        if(type == 2){\r\n            if(e === s){\r\n                mult = ind >= e ? 1 : 0;\r\n            }else{\r\n                mult = max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n            }\r\n            mult = easer(mult);\r\n        }else if(type == 3){\r\n            if(e === s){\r\n                mult = ind >= e ? 0 : 1;\r\n            }else{\r\n                mult = 1 - max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n            }\r\n\r\n            mult = easer(mult);\r\n        }else if(type == 4){\r\n            if(e === s){\r\n                mult = 0;\r\n            }else{\r\n                mult = max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n                if(mult<0.5){\r\n                    mult *= 2;\r\n                }else{\r\n                    mult = 1 - 2*(mult-0.5);\r\n                }\r\n            }\r\n            mult = easer(mult);\r\n        }else if(type == 5){\r\n            if(e === s){\r\n                mult = 0;\r\n            }else{\r\n                var tot = e - s;\r\n                /*ind += 0.5;\r\n                mult = -4/(tot*tot)*(ind*ind)+(4/tot)*ind;*/\r\n                ind = min(max(0,ind+0.5-s),e-s);\r\n                var x = -tot/2+ind;\r\n                var a = tot/2;\r\n                mult = Math.sqrt(1 - (x*x)/(a*a));\r\n            }\r\n            mult = easer(mult);\r\n        }else if(type == 6){\r\n            if(e === s){\r\n                mult = 0;\r\n            }else{\r\n                ind = min(max(0,ind+0.5-s),e-s);\r\n                mult = (1+(Math.cos((Math.PI+Math.PI*2*(ind)/(e-s)))))/2;\r\n                /*\r\n                 ind = Math.min(Math.max(s,ind),e-1);\r\n                 mult = (1+(Math.cos((Math.PI+Math.PI*2*(ind-s)/(e-1-s)))))/2;\r\n                 mult = Math.max(mult,(1/(e-1-s))/(e-1-s));*/\r\n            }\r\n            mult = easer(mult);\r\n        }else {\r\n            if(ind >= floor(s)){\r\n                if(ind-s < 0){\r\n                    mult = 1 - (s - ind);\r\n                }else{\r\n                    mult = max(0,min(e-ind,1));\r\n                }\r\n            }\r\n            mult = easer(mult);\r\n        }\r\n        return mult*this.a.v;\r\n    }\r\n\r\n    function TextSelectorProp(elem,data, arr){\r\n        this._mdf = false;\r\n        this.k = false;\r\n        this.data = data;\r\n        this.dynamicProperties = [];\r\n        this.getValue = updateRange;\r\n        this.getMult = getMult;\r\n        this.elem = elem;\r\n        this.comp = elem.comp;\r\n        this.finalS = 0;\r\n        this.finalE = 0;\r\n        this.s = PropertyFactory.getProp(elem,data.s || {k:0},0,0,this.dynamicProperties);\r\n        if('e' in data){\r\n            this.e = PropertyFactory.getProp(elem,data.e,0,0,this.dynamicProperties);\r\n        }else{\r\n            this.e = {v:100};\r\n        }\r\n        this.o = PropertyFactory.getProp(elem,data.o || {k:0},0,0,this.dynamicProperties);\r\n        this.xe = PropertyFactory.getProp(elem,data.xe || {k:0},0,0,this.dynamicProperties);\r\n        this.ne = PropertyFactory.getProp(elem,data.ne || {k:0},0,0,this.dynamicProperties);\r\n        this.a = PropertyFactory.getProp(elem,data.a,0,0.01,this.dynamicProperties);\r\n        if(this.dynamicProperties.length){\r\n            arr.push(this);\r\n        }else{\r\n            this.getValue();\r\n        }\r\n    }\r\n\r\n    function getTextSelectorProp(elem, data,arr) {\r\n        return new TextSelectorProp(elem, data, arr);\r\n    }\r\n\r\n    return {\r\n        getTextSelectorProp: getTextSelectorProp\r\n    };\r\n}());\r\n\r\n    \r\nvar pool_factory = (function() {\r\n\treturn function(initialLength, _create, _release, _clone) {\r\n\r\n\t\tvar _length = 0;\r\n\t\tvar _maxLength = initialLength;\r\n\t\tvar pool = createSizedArray(_maxLength);\r\n\r\n\t\tvar ob = {\r\n\t\t\tnewElement: newElement,\r\n\t\t\trelease: release\r\n\t\t};\r\n\r\n\t\tfunction newElement(){\r\n\t\t\tvar element;\r\n\t\t\tif(_length){\r\n\t\t\t\t_length -= 1;\r\n\t\t\t\telement = pool[_length];\r\n\t\t\t} else {\r\n\t\t\t\telement = _create();\r\n\t\t\t}\r\n\t\t\treturn element;\r\n\t\t}\r\n\r\n\t\tfunction release(element) {\r\n\t\t\tif(_length === _maxLength) {\r\n\t\t\t\tpool = pooling.double(pool);\r\n\t\t\t\t_maxLength = _maxLength*2;\r\n\t\t\t}\r\n\t\t\tif (_release) {\r\n\t\t\t\t_release(element);\r\n\t\t\t}\r\n\t\t\tpool[_length] = element;\r\n\t\t\t_length += 1;\r\n\t\t}\r\n\r\n\t\tfunction clone() {\r\n\t\t\tvar clonedElement = newElement();\r\n\t\t\treturn _clone(clonedElement);\r\n\t\t}\r\n\r\n\t\treturn ob;\r\n\t};\r\n}());\r\n\r\nvar pooling = (function(){\r\n\r\n\tfunction double(arr){\r\n\t\treturn arr.concat(createSizedArray(arr.length));\r\n\t}\r\n\r\n\treturn {\r\n\t\tdouble: double\r\n\t};\r\n}());\r\nvar point_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn createTypedArray('float32', 2);\r\n\t}\r\n\treturn pool_factory(8, create);\r\n}());\r\nvar shape_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn new ShapePath();\r\n\t}\r\n\r\n\tfunction release(shapePath) {\r\n\t\tvar len = shapePath._length, i;\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tpoint_pool.release(shapePath.v[i]);\r\n\t\t\tpoint_pool.release(shapePath.i[i]);\r\n\t\t\tpoint_pool.release(shapePath.o[i]);\r\n\t\t\tshapePath.v[i] = null;\r\n\t\t\tshapePath.i[i] = null;\r\n\t\t\tshapePath.o[i] = null;\r\n\t\t}\r\n\t\tshapePath._length = 0;\r\n\t\tshapePath.c = false;\r\n\t}\r\n\r\n\tfunction clone(shape) {\r\n\t\tvar cloned = factory.newElement();\r\n\t\tvar i, len = shape._length === undefined ? shape.v.length : shape._length;\r\n\t\tcloned.setLength(len);\r\n\t\tcloned.c = shape.c;\r\n\t\tvar pt;\r\n\t\t\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tcloned.setTripleAt(shape.v[i][0],shape.v[i][1],shape.o[i][0],shape.o[i][1],shape.i[i][0],shape.i[i][1], i);\r\n\t\t}\r\n\t\treturn cloned;\r\n\t}\r\n\r\n\tvar factory = pool_factory(4, create, release);\r\n\tfactory.clone = clone;\r\n\r\n\treturn factory;\r\n}());\r\nvar shapeCollection_pool = (function(){\r\n\tvar ob = {\r\n\t\tnewShapeCollection: newShapeCollection,\r\n\t\trelease: release\r\n\t};\r\n\r\n\tvar _length = 0;\r\n\tvar _maxLength = 4;\r\n\tvar pool = createSizedArray(_maxLength);\r\n\r\n\tfunction newShapeCollection(){\r\n\t\tvar shapeCollection;\r\n\t\tif(_length){\r\n\t\t\t_length -= 1;\r\n\t\t\tshapeCollection = pool[_length];\r\n\t\t} else {\r\n\t\t\tshapeCollection = new ShapeCollection();\r\n\t\t}\r\n\t\treturn shapeCollection;\r\n\t}\r\n\r\n\tfunction release(shapeCollection) {\r\n\t\tvar i, len = shapeCollection._length;\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tshape_pool.release(shapeCollection.shapes[i]);\r\n\t\t}\r\n\t\tshapeCollection._length = 0;\r\n\r\n\t\tif(_length === _maxLength) {\r\n\t\t\tpool = pooling.double(pool);\r\n\t\t\t_maxLength = _maxLength*2;\r\n\t\t}\r\n\t\tpool[_length] = shapeCollection;\r\n\t\t_length += 1;\r\n\t}\r\n\r\n\treturn ob;\r\n}());\r\nvar segments_length_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn {\r\n\t\t\tlengths: [],\r\n\t\t\ttotalLength: 0\r\n\t\t};\r\n\t}\r\n\r\n\tfunction release(element) {\r\n\t\tvar i, len = element.lengths.length;\r\n\t\tfor(i=0;i<len;i+=1) {\r\n\t\t\tbezier_length_pool.release(element.lengths[i]);\r\n\t\t}\r\n\t\telement.lengths.length = 0;\r\n\t}\r\n\r\n\treturn pool_factory(8, create, release);\r\n}());\r\nvar bezier_length_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn {\r\n            addedLength: 0,\r\n            percents: createTypedArray('float32', defaultCurveSegments),\r\n            lengths: createTypedArray('float32', defaultCurveSegments),\r\n        };\r\n\t}\r\n\treturn pool_factory(8, create);\r\n}());\r\nfunction BaseRenderer(){}\r\nBaseRenderer.prototype.checkLayers = function(num){\r\n    var i, len = this.layers.length, data;\r\n    this.completeLayers = true;\r\n    for (i = len - 1; i >= 0; i--) {\r\n        if (!this.elements[i]) {\r\n            data = this.layers[i];\r\n            if(data.ip - data.st <= (num - this.layers[i].st) && data.op - data.st > (num - this.layers[i].st))\r\n            {\r\n                this.buildItem(i);\r\n            }\r\n        }\r\n        this.completeLayers = this.elements[i] ? this.completeLayers:false;\r\n    }\r\n    this.checkPendingElements();\r\n};\r\n\r\nBaseRenderer.prototype.createItem = function(layer){\r\n    switch(layer.ty){\r\n        case 2:\r\n            return this.createImage(layer);\r\n        case 0:\r\n            return this.createComp(layer);\r\n        case 1:\r\n            return this.createSolid(layer);\r\n        case 3:\r\n            return this.createNull(layer);\r\n        case 4:\r\n            return this.createShape(layer);\r\n        case 5:\r\n            return this.createText(layer);\r\n        case 13:\r\n            return this.createCamera(layer);\r\n    }\r\n    return this.createNull(layer);\r\n};\r\n\r\nBaseRenderer.prototype.createCamera = function(){\r\n    throw new Error('You\\'re using a 3d camera. Try the html renderer.');\r\n};\r\n\r\nBaseRenderer.prototype.buildAllItems = function(){\r\n    var i, len = this.layers.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.buildItem(i);\r\n    }\r\n    this.checkPendingElements();\r\n};\r\n\r\nBaseRenderer.prototype.includeLayers = function(newLayers){\r\n    this.completeLayers = false;\r\n    var i, len = newLayers.length;\r\n    var j, jLen = this.layers.length;\r\n    for(i=0;i<len;i+=1){\r\n        j = 0;\r\n        while(j<jLen){\r\n            if(this.layers[j].id == newLayers[i].id){\r\n                this.layers[j] = newLayers[i];\r\n                break;\r\n            }\r\n            j += 1;\r\n        }\r\n    }\r\n};\r\n\r\nBaseRenderer.prototype.setProjectInterface = function(pInterface){\r\n    this.globalData.projectInterface = pInterface;\r\n};\r\n\r\nBaseRenderer.prototype.initItems = function(){\r\n    if(!this.globalData.progressiveLoad){\r\n        this.buildAllItems();\r\n    }\r\n};\r\nBaseRenderer.prototype.buildElementParenting = function(element, parentName, hierarchy) {\r\n    var elements = this.elements;\r\n    var layers = this.layers;\r\n    var i=0, len = layers.length;\r\n    while (i < len) {\r\n        if (layers[i].ind == parentName) {\r\n            if (!elements[i] || elements[i] === true) {\r\n                this.buildItem(i);\r\n                this.addPendingElement(element);\r\n            } else {\r\n                hierarchy.push(elements[i]);\r\n                elements[i].setAsParent();\r\n                if(layers[i].parent !== undefined) {\r\n                    this.buildElementParenting(element, layers[i].parent, hierarchy);\r\n                } else {\r\n                    element.setHierarchy(hierarchy);\r\n                }\r\n            }\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nBaseRenderer.prototype.addPendingElement = function(element){\r\n    this.pendingElements.push(element);\r\n};\r\n\r\nBaseRenderer.prototype.searchExtraCompositions = function(assets){\r\n    var i, len = assets.length;\r\n    for(i=0;i<len;i+=1){\r\n        if(assets[i].xt){\r\n            var comp = this.createComp(assets[i]);\r\n            comp.initExpressions();\r\n            this.globalData.projectInterface.registerComposition(comp);\r\n        }\r\n    }\r\n};\r\n\r\nfunction SVGRenderer(animationItem, config){\r\n    this.animationItem = animationItem;\r\n    this.layers = null;\r\n    this.renderedFrame = -1;\r\n    this.svgElement = createNS('svg');\r\n    var maskElement = createNS('g');\r\n    this.svgElement.appendChild(maskElement);\r\n    this.layerElement = maskElement;\r\n    var defs = createNS( 'defs');\r\n    this.svgElement.appendChild(defs);\r\n    this.renderConfig = {\r\n        preserveAspectRatio: (config && config.preserveAspectRatio) || 'xMidYMid meet',\r\n        progressiveLoad: (config && config.progressiveLoad) || false,\r\n        hideOnTransparent: (config && config.hideOnTransparent === false) ? false : true,\r\n        viewBoxOnly: (config && config.viewBoxOnly) || false,\r\n        viewBoxSize: (config && config.viewBoxSize) || false,\r\n        className: (config && config.className) || ''\r\n    };\r\n    this.globalData = {\r\n        _mdf: false,\r\n        frameNum: -1,\r\n        defs: defs,\r\n        frameId: 0,\r\n        compSize: {w:0,h:0},\r\n        renderConfig: this.renderConfig,\r\n        fontManager: new FontManager()\r\n    };\r\n    this.elements = [];\r\n    this.pendingElements = [];\r\n    this.destroyed = false;\r\n\r\n}\r\n\r\nextendPrototype([BaseRenderer],SVGRenderer);\r\n\r\nSVGRenderer.prototype.createNull = function (data) {\r\n    return new NullElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createShape = function (data) {\r\n    return new SVGShapeElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createText = function (data) {\r\n    return new SVGTextElement(data,this.globalData,this);\r\n\r\n};\r\n\r\nSVGRenderer.prototype.createImage = function (data) {\r\n    return new IImageElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createComp = function (data) {\r\n    return new SVGCompElement(data,this.globalData,this);\r\n\r\n};\r\n\r\nSVGRenderer.prototype.createSolid = function (data) {\r\n    return new ISolidElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.configAnimation = function(animData){\r\n    this.svgElement.setAttribute('xmlns','http://www.w3.org/2000/svg');\r\n    if(this.renderConfig.viewBoxSize) {\r\n        this.svgElement.setAttribute('viewBox',this.renderConfig.viewBoxSize);\r\n    } else {\r\n        this.svgElement.setAttribute('viewBox','0 0 '+animData.w+' '+animData.h);\r\n    }\r\n\r\n    if(!this.renderConfig.viewBoxOnly) {\r\n        this.svgElement.setAttribute('width',animData.w);\r\n        this.svgElement.setAttribute('height',animData.h);\r\n        this.svgElement.style.width = '100%';\r\n        this.svgElement.style.height = '100%';\r\n    }\r\n    if(this.renderConfig.className) {\r\n        this.svgElement.setAttribute('class', this.renderConfig.className);\r\n    }\r\n    this.svgElement.setAttribute('preserveAspectRatio',this.renderConfig.preserveAspectRatio);\r\n    //this.layerElement.style.transform = 'translate3d(0,0,0)';\r\n    //this.layerElement.style.transformOrigin = this.layerElement.style.mozTransformOrigin = this.layerElement.style.webkitTransformOrigin = this.layerElement.style['-webkit-transform'] = \"0px 0px 0px\";\r\n    this.animationItem.wrapper.appendChild(this.svgElement);\r\n    //Mask animation\r\n    var defs = this.globalData.defs;\r\n\r\n    this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem);\r\n    this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem);\r\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\r\n    this.globalData.nm = animData.nm;\r\n    this.globalData.compSize.w = animData.w;\r\n    this.globalData.compSize.h = animData.h;\r\n    this.globalData.frameRate = animData.fr;\r\n    this.data = animData;\r\n\r\n    var maskElement = createNS( 'clipPath');\r\n    var rect = createNS('rect');\r\n    rect.setAttribute('width',animData.w);\r\n    rect.setAttribute('height',animData.h);\r\n    rect.setAttribute('x',0);\r\n    rect.setAttribute('y',0);\r\n    var maskId = 'animationMask_'+randomString(10);\r\n    maskElement.setAttribute('id', maskId);\r\n    maskElement.appendChild(rect);\r\n    this.layerElement.setAttribute(\"clip-path\", \"url(\" + locationHref + \"#\"+maskId+\")\");\r\n\r\n    defs.appendChild(maskElement);\r\n    this.layers = animData.layers;\r\n    this.globalData.fontManager.addChars(animData.chars);\r\n    this.globalData.fontManager.addFonts(animData.fonts,defs);\r\n    this.elements = createSizedArray(animData.layers.length);\r\n};\r\n\r\n\r\nSVGRenderer.prototype.destroy = function () {\r\n    this.animationItem.wrapper.innerHTML = '';\r\n    this.layerElement = null;\r\n    this.globalData.defs = null;\r\n    var i, len = this.layers ? this.layers.length : 0;\r\n    for (i = 0; i < len; i++) {\r\n        if(this.elements[i]){\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n    this.elements.length = 0;\r\n    this.destroyed = true;\r\n    this.animationItem = null;\r\n};\r\n\r\nSVGRenderer.prototype.updateContainerSize = function () {\r\n};\r\n\r\nSVGRenderer.prototype.buildItem  = function(pos){\r\n    var elements = this.elements;\r\n    if(elements[pos] || this.layers[pos].ty == 99){\r\n        return;\r\n    }\r\n    elements[pos] = true;\r\n    var element = this.createItem(this.layers[pos]);\r\n\r\n    elements[pos] = element;\r\n    if(expressionsPlugin){\r\n        if(this.layers[pos].ty === 0){\r\n            this.globalData.projectInterface.registerComposition(element);\r\n        }\r\n        element.initExpressions();\r\n    }\r\n    this.appendElementInPos(element,pos);\r\n    if(this.layers[pos].tt){\r\n        if(!this.elements[pos - 1] || this.elements[pos - 1] === true){\r\n            this.buildItem(pos - 1);\r\n            this.addPendingElement(element);\r\n        } else {\r\n            element.setMatte(elements[pos - 1].layerId);\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.checkPendingElements  = function(){\r\n    while(this.pendingElements.length){\r\n        var element = this.pendingElements.pop();\r\n        element.checkParenting();\r\n        if(element.data.tt){\r\n            var i = 0, len = this.elements.length;\r\n            while(i<len){\r\n                if(this.elements[i] === element){\r\n                    element.setMatte(this.elements[i - 1].layerId);\r\n                    break;\r\n                }\r\n                i += 1;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.renderFrame = function(num){\r\n    if(this.renderedFrame === num || this.destroyed){\r\n        return;\r\n    }\r\n    if(num === null){\r\n        num = this.renderedFrame;\r\n    }else{\r\n        this.renderedFrame = num;\r\n    }\r\n    //clearPoints();\r\n    // console.log('-------');\r\n    // console.log('FRAME ',num);\r\n    this.globalData.frameNum = num;\r\n    this.globalData.frameId += 1;\r\n    this.globalData.projectInterface.currentFrame = num;\r\n    this.globalData._mdf = false;\r\n    var i, len = this.layers.length;\r\n    if(!this.completeLayers){\r\n        this.checkLayers(num);\r\n    }\r\n    for (i = len - 1; i >= 0; i--) {\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].prepareFrame(num - this.layers[i].st);\r\n        }\r\n    }\r\n    if(this.globalData._mdf) {\r\n        for (i = 0; i < len; i += 1) {\r\n            if(this.completeLayers || this.elements[i]){\r\n                this.elements[i].renderFrame();\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.appendElementInPos = function(element, pos){\r\n    var newElement = element.getBaseElement();\r\n    if(!newElement){\r\n        return;\r\n    }\r\n    var i = 0;\r\n    var nextElement;\r\n    while(i<pos){\r\n        if(this.elements[i] && this.elements[i]!== true && this.elements[i].getBaseElement()){\r\n            nextElement = this.elements[i].getBaseElement();\r\n        }\r\n        i += 1;\r\n    }\r\n    if(nextElement){\r\n        this.layerElement.insertBefore(newElement, nextElement);\r\n    } else {\r\n        this.layerElement.appendChild(newElement);\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.hide = function(){\r\n    this.layerElement.style.display = 'none';\r\n};\r\n\r\nSVGRenderer.prototype.show = function(){\r\n    this.layerElement.style.display = 'block';\r\n};\r\n\r\nfunction MaskElement(data,element,globalData, dynamicProperties) {\r\n    this.data = data;\r\n    this.element = element;\r\n    this.globalData = globalData;\r\n    this.storedData = [];\r\n    this.masksProperties = this.data.masksProperties || [];\r\n    this.maskElement = null;\r\n    this._isFirstFrame = true;\r\n    var defs = this.globalData.defs;\r\n    var i, len = this.masksProperties ? this.masksProperties.length : 0;\r\n    this.viewData = createSizedArray(len);\r\n    this.solidPath = '';\r\n\r\n\r\n    var path, properties = this.masksProperties;\r\n    var count = 0;\r\n    var currentMasks = [];\r\n    var j, jLen;\r\n    var layerId = randomString(10);\r\n    var rect, expansor, feMorph,x;\r\n    var maskType = 'clipPath', maskRef = 'clip-path';\r\n    for (i = 0; i < len; i++) {\r\n\r\n        if((properties[i].mode !== 'a' && properties[i].mode !== 'n')|| properties[i].inv || properties[i].o.k !== 100){\r\n            maskType = 'mask';\r\n            maskRef = 'mask';\r\n        }\r\n\r\n        if((properties[i].mode == 's' || properties[i].mode == 'i') && count === 0){\r\n            rect = createNS( 'rect');\r\n            rect.setAttribute('fill', '#ffffff');\r\n            rect.setAttribute('width', this.element.comp.data.w);\r\n            rect.setAttribute('height', this.element.comp.data.h);\r\n            currentMasks.push(rect);\r\n        } else {\r\n            rect = null;\r\n        }\r\n\r\n        path = createNS( 'path');\r\n        if(properties[i].mode == 'n') {\r\n            // TODO move this to a factory or to a constructor\r\n            this.viewData[i] = {\r\n                op: PropertyFactory.getProp(this.element,properties[i].o,0,0.01,dynamicProperties),\r\n                prop: ShapePropertyFactory.getShapeProp(this.element,properties[i],3,dynamicProperties,null),\r\n                elem: path\r\n            };\r\n            defs.appendChild(path);\r\n            continue;\r\n        }\r\n        count += 1;\r\n\r\n        path.setAttribute('fill', properties[i].mode === 's' ? '#000000':'#ffffff');\r\n        path.setAttribute('clip-rule','nonzero');\r\n        var filterID;\r\n\r\n        if (properties[i].x.k !== 0) {\r\n            maskType = 'mask';\r\n            maskRef = 'mask';\r\n            x = PropertyFactory.getProp(this.element,properties[i].x,0,null,dynamicProperties);\r\n            filterID = 'fi_'+randomString(10);\r\n            expansor = createNS('filter');\r\n            expansor.setAttribute('id',filterID);\r\n            feMorph = createNS('feMorphology');\r\n            feMorph.setAttribute('operator','dilate');\r\n            feMorph.setAttribute('in','SourceGraphic');\r\n            feMorph.setAttribute('radius','0');\r\n            expansor.appendChild(feMorph);\r\n            defs.appendChild(expansor);\r\n            path.setAttribute('stroke', properties[i].mode === 's' ? '#000000':'#ffffff');\r\n        } else {\r\n            feMorph = null;\r\n            x = null;\r\n        }\r\n\r\n        // TODO move this to a factory or to a constructor\r\n        this.storedData[i] = {\r\n             elem: path,\r\n             x: x,\r\n             expan: feMorph,\r\n            lastPath: '',\r\n            lastOperator:'',\r\n            filterId:filterID,\r\n            lastRadius:0\r\n        };\r\n        if(properties[i].mode == 'i'){\r\n            jLen = currentMasks.length;\r\n            var g = createNS('g');\r\n            for(j=0;j<jLen;j+=1){\r\n                g.appendChild(currentMasks[j]);\r\n            }\r\n            var mask = createNS('mask');\r\n            mask.setAttribute('mask-type','alpha');\r\n            mask.setAttribute('id',layerId+'_'+count);\r\n            mask.appendChild(path);\r\n            defs.appendChild(mask);\r\n            g.setAttribute('mask','url(' + locationHref + '#'+layerId+'_'+count+')');\r\n\r\n            currentMasks.length = 0;\r\n            currentMasks.push(g);\r\n        }else{\r\n            currentMasks.push(path);\r\n        }\r\n        if(properties[i].inv && !this.solidPath){\r\n            this.solidPath = this.createLayerSolidPath();\r\n        }\r\n        // TODO move this to a factory or to a constructor\r\n        this.viewData[i] = {\r\n            elem: path,\r\n            lastPath: '',\r\n            op: PropertyFactory.getProp(this.element,properties[i].o,0,0.01,dynamicProperties),\r\n            prop:ShapePropertyFactory.getShapeProp(this.element,properties[i],3,dynamicProperties,null),\r\n            invRect: rect\r\n        };\r\n        if(!this.viewData[i].prop.k){\r\n            this.drawPath(properties[i],this.viewData[i].prop.v,this.viewData[i]);\r\n        }\r\n    }\r\n\r\n    this.maskElement = createNS( maskType);\r\n\r\n    len = currentMasks.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.maskElement.appendChild(currentMasks[i]);\r\n    }\r\n\r\n    if(count > 0){\r\n        this.maskElement.setAttribute('id', layerId);\r\n        this.element.maskedElement.setAttribute(maskRef, \"url(\" + locationHref + \"#\" + layerId + \")\");\r\n        defs.appendChild(this.maskElement);\r\n    }\r\n\r\n}\r\n\r\nMaskElement.prototype.getMaskProperty = function(pos){\r\n    return this.viewData[pos].prop;\r\n};\r\n\r\nMaskElement.prototype.renderFrame = function (finalMat) {\r\n    var i, len = this.masksProperties.length;\r\n    for (i = 0; i < len; i++) {\r\n        if(this.viewData[i].prop._mdf || this._isFirstFrame){\r\n            this.drawPath(this.masksProperties[i],this.viewData[i].prop.v,this.viewData[i]);\r\n        }\r\n        if(this.viewData[i].op._mdf || this._isFirstFrame){\r\n            this.viewData[i].elem.setAttribute('fill-opacity',this.viewData[i].op.v);\r\n        }\r\n        if(this.masksProperties[i].mode !== 'n'){\r\n            if(this.viewData[i].invRect && (this.element.finalTransform.mProp._mdf || this._isFirstFrame)){\r\n                this.viewData[i].invRect.setAttribute('x', -finalMat.props[12]);\r\n                this.viewData[i].invRect.setAttribute('y', -finalMat.props[13]);\r\n            }\r\n            if(this.storedData[i].x && (this.storedData[i].x._mdf || this._isFirstFrame)){\r\n                var feMorph = this.storedData[i].expan;\r\n                if(this.storedData[i].x.v < 0){\r\n                    if(this.storedData[i].lastOperator !== 'erode'){\r\n                        this.storedData[i].lastOperator = 'erode';\r\n                        this.storedData[i].elem.setAttribute('filter','url(' + locationHref + '#'+this.storedData[i].filterId+')');\r\n                    }\r\n                    feMorph.setAttribute('radius',-this.storedData[i].x.v);\r\n                }else{\r\n                    if(this.storedData[i].lastOperator !== 'dilate'){\r\n                        this.storedData[i].lastOperator = 'dilate';\r\n                        this.storedData[i].elem.setAttribute('filter',null);\r\n                    }\r\n                    this.storedData[i].elem.setAttribute('stroke-width', this.storedData[i].x.v*2);\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n    this._isFirstFrame = false;\r\n};\r\n\r\nMaskElement.prototype.getMaskelement = function () {\r\n    return this.maskElement;\r\n};\r\n\r\nMaskElement.prototype.createLayerSolidPath = function(){\r\n    var path = 'M0,0 ';\r\n    path += ' h' + this.globalData.compSize.w ;\r\n    path += ' v' + this.globalData.compSize.h ;\r\n    path += ' h-' + this.globalData.compSize.w ;\r\n    path += ' v-' + this.globalData.compSize.h + ' ';\r\n    return path;\r\n};\r\n\r\nMaskElement.prototype.drawPath = function(pathData,pathNodes,viewData){\r\n    var pathString = \" M\"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    var i, len;\r\n    len = pathNodes._length;\r\n    for(i=1;i<len;i+=1){\r\n        //pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[i][0]+','+pathNodes.i[i][1] + \" \"+pathNodes.v[i][0]+','+pathNodes.v[i][1];\r\n        pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[i][0]+','+pathNodes.i[i][1] + \" \"+pathNodes.v[i][0]+','+pathNodes.v[i][1];\r\n    }\r\n        //pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[0][0]+','+pathNodes.i[0][1] + \" \"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    if(pathNodes.c && len > 1){\r\n        pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[0][0]+','+pathNodes.i[0][1] + \" \"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    }\r\n    //pathNodes.__renderedString = pathString;\r\n\r\n\r\n    if(viewData.lastPath !== pathString){\r\n        var pathShapeValue = '';\r\n        if(viewData.elem){\r\n            if(pathNodes.c){\r\n                pathShapeValue = pathData.inv ? this.solidPath + pathString : pathString;\r\n            }\r\n            viewData.elem.setAttribute('d',pathShapeValue);\r\n        }\r\n        viewData.lastPath = pathString;\r\n    }\r\n};\r\n\r\nMaskElement.prototype.destroy = function(){\r\n    this.element = null;\r\n    this.globalData = null;\r\n    this.maskElement = null;\r\n    this.data = null;\r\n    this.masksProperties = null;\r\n};\r\n/**\r\n * @file \r\n * Handles AE's layer parenting property.\r\n *\r\n */\r\n\r\nfunction HierarchyElement(){}\r\n\r\nHierarchyElement.prototype = {\r\n\t/**\r\n     * @function \r\n     * Initializes hierarchy properties\r\n     *\r\n     */\r\n\tinitHierarchy: function() {\r\n\t\t//element's parent list\r\n\t    this.hierarchy = [];\r\n\t    //if element is parent of another layer _isParent will be true\r\n\t    this._isParent = false;\r\n\t    this.checkParenting();\r\n\t},\r\n\t/**\r\n     * @function \r\n     * Sets layer's hierarchy.\r\n     * @param {array} hierarch\r\n     * layer's parent list\r\n     *\r\n     */ \r\n\tsetHierarchy: function(hierarchy){\r\n\t    this.hierarchy = hierarchy;\r\n\t},\r\n\t/**\r\n     * @function \r\n     * Sets layer as parent.\r\n     *\r\n     */ \r\n\tsetAsParent: function() {\r\n\t    this._isParent = true;\r\n\t},\r\n\t/**\r\n     * @function \r\n     * Searches layer's parenting chain\r\n     *\r\n     */ \r\n\tcheckParenting: function(){\r\n\t    if (this.data.parent !== undefined){\r\n\t        this.comp.buildElementParenting(this, this.data.parent, []);\r\n\t    }\r\n\t}\r\n};\r\n/**\r\n * @file \r\n * Handles element's layer frame update.\r\n * Checks layer in point and out point\r\n *\r\n */\r\n\r\nfunction FrameElement(){}\r\n\r\nFrameElement.prototype = {\r\n    /**\r\n     * @function \r\n     * Initializes frame related properties.\r\n     *\r\n     */\r\n    initFrame: function(){\r\n        //set to true when inpoint is rendered\r\n        this._isFirstFrame = false;\r\n        //list of animated properties\r\n        this.dynamicProperties = [];\r\n        // If layer has been modified in current tick this will be true\r\n        this._mdf = false;\r\n    },\r\n    /**\r\n     * @function \r\n     * Calculates all dynamic values\r\n     *\r\n     * @param {number} num\r\n     * current frame number in Layer's time\r\n     * @param {boolean} isVisible\r\n     * if layers is currently in range\r\n     * \r\n     */\r\n    prepareProperties: function(num, isVisible) {\r\n        var i, len = this.dynamicProperties.length;\r\n        for (i = 0;i < len; i += 1) {\r\n            if (isVisible || (this._isParent && this.dynamicProperties[i].propType === 'transform')) {\r\n                this.dynamicProperties[i].getValue();\r\n                if (this.dynamicProperties[i]._mdf) {\r\n                    this.globalData._mdf = true;\r\n                    this._mdf = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nfunction TransformElement(){}\r\n\r\nTransformElement.prototype = {\r\n    initTransform: function() {\r\n        this.finalTransform = {\r\n            mProp: this.data.ks ? TransformPropertyFactory.getTransformProperty(this, this.data.ks, this.dynamicProperties) : {o:0},\r\n            _matMdf: false,\r\n            _opMdf: false,\r\n            mat: new Matrix()\r\n        };\r\n        if (this.data.ao) {\r\n            this.finalTransform.mProp.autoOriented = true;\r\n        }\r\n\r\n        //TODO: check TYPE 11: Guided elements\r\n        if (this.data.ty !== 11) {\r\n            //this.createElements();\r\n        }\r\n    },\r\n    renderTransform: function() {\r\n\r\n        this.finalTransform._opMdf = this.finalTransform.mProp.o._mdf || this._isFirstFrame;\r\n        this.finalTransform._matMdf = this.finalTransform.mProp._mdf || this._isFirstFrame;\r\n\r\n        if (this.hierarchy) {\r\n            var mat;\r\n            var finalMat = this.finalTransform.mat;\r\n            var i = 0, len = this.hierarchy.length;\r\n            //Checking if any of the transformation matrices in the hierarchy chain has changed.\r\n            if (!this.finalTransform._matMdf) {\r\n                while (i < len) {\r\n                    if (this.hierarchy[i].finalTransform.mProp._mdf) {\r\n                        this.finalTransform._matMdf = true;\r\n                        break;\r\n                    }\r\n                    i += 1;\r\n                }\r\n            }\r\n            \r\n            if (this.finalTransform._matMdf) {\r\n                mat = this.finalTransform.mProp.v.props;\r\n                finalMat.cloneFromProps(mat);\r\n                for (i = 0; i < len; i += 1) {\r\n                    mat = this.hierarchy[i].finalTransform.mProp.v.props;\r\n                    finalMat.transform(mat[0], mat[1], mat[2], mat[3], mat[4], mat[5], mat[6], mat[7], mat[8], mat[9], mat[10], mat[11], mat[12], mat[13], mat[14], mat[15]);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    globalToLocal: function(pt) {\r\n        var transforms = [];\r\n        transforms.push(this.finalTransform);\r\n        var flag = true;\r\n        var comp = this.comp;\r\n        while (flag) {\r\n            if (comp.finalTransform) {\r\n                if (comp.data.hasMask) {\r\n                    transforms.splice(0, 0, comp.finalTransform);\r\n                }\r\n                comp = comp.comp;\r\n            } else {\r\n                flag = false;\r\n            }\r\n        }\r\n        var i, len = transforms.length,ptNew;\r\n        for (i = 0; i < len; i += 1) {\r\n            ptNew = transforms[i].mat.applyToPointArray(0, 0, 0);\r\n            //ptNew = transforms[i].mat.applyToPointArray(pt[0],pt[1],pt[2]);\r\n            pt = [pt[0] - ptNew[0], pt[1] - ptNew[1], 0];\r\n        }\r\n        return pt;\r\n    },\r\n    mHelper: new Matrix()\r\n};\r\nfunction RenderableElement(){\r\n\r\n}\r\n\r\nRenderableElement.prototype = {\r\n    initRenderable: function() {\r\n        //layer's visibility related to inpoint and outpoint. Rename isVisible to isInRange\r\n        this.isInRange = false;\r\n        //layer's display state\r\n        this.hidden = false;\r\n        // If layer's transparency equals 0, it can be hidden\r\n        this.isTransparent = false;\r\n    },\r\n    prepareRenderableFrame: function(num) {\r\n        this.checkLayerLimits(num);\r\n    },\r\n    checkTransparency: function(){\r\n        if(this.finalTransform.mProp.o.v <= 0) {\r\n            if(!this.isTransparent && this.globalData.renderConfig.hideOnTransparent){\r\n                this.isTransparent = true;\r\n                this.hide();\r\n            }\r\n        } else if(this.isTransparent) {\r\n            this.isTransparent = false;\r\n            this.show();\r\n        }\r\n    },\r\n    /**\r\n     * @function \r\n     * Initializes frame related properties.\r\n     *\r\n     * @param {number} num\r\n     * current frame number in Layer's time\r\n     * \r\n     */\r\n    checkLayerLimits: function(num) {\r\n        if(this.data.ip - this.data.st <= num && this.data.op - this.data.st > num)\r\n        {\r\n            if(this.isInRange !== true){\r\n                this.globalData._mdf = true;\r\n                this._mdf = true;\r\n                this.isInRange = true;\r\n                this.show();\r\n            }\r\n        } else {\r\n            if(this.isInRange !== false){\r\n                this.globalData._mdf = true;\r\n                this.isInRange = false;\r\n                this.hide();\r\n            }\r\n        }\r\n    },\r\n    renderRenderable: function() {\r\n        this.maskManager.renderFrame(this.finalTransform.mat);\r\n        this.renderableEffectsManager.renderFrame(this._isFirstFrame);\r\n    },\r\n    sourceRectAtTime: function(){\r\n        return {\r\n            top:0,\r\n            left:0,\r\n            width:100,\r\n            height:100\r\n        };\r\n    },\r\n    getLayerSize: function(){\r\n        if(this.data.ty === 5){\r\n            return {w:this.data.textData.width,h:this.data.textData.height};\r\n        }else{\r\n            return {w:this.data.width,h:this.data.height};\r\n        }\r\n    }\r\n};\r\nfunction RenderableDOMElement() {}\r\n\r\n(function(){\r\n    var _prototype = {\r\n        initElement: function(data,globalData,comp) {\r\n            this.initFrame();\r\n            this.initBaseData(data, globalData, comp);\r\n            this.initTransform(data, globalData, comp);\r\n            this.initHierarchy();\r\n            this.initRenderable();\r\n            this.initRendererElement();\r\n            this.createContainerElements();\r\n            this.addMasks();\r\n            this.createContent();\r\n            this.hide();\r\n        },\r\n        hide: function(){\r\n            if (!this.hidden && (!this.isInRange || this.isTransparent)) {\r\n                this.layerElement.style.display = 'none';\r\n                this.hidden = true;\r\n            }\r\n        },\r\n        show: function(){\r\n            if (this.isInRange && !this.isTransparent){\r\n                if (!this.data.hd) {\r\n                    this.layerElement.style.display = 'block';\r\n                }\r\n                this.hidden = false;\r\n                this._isFirstFrame = true;\r\n                this.maskManager._isFirstFrame = true;\r\n            }\r\n        },\r\n        renderFrame: function() {\r\n            //If it is exported as hidden (data.hd === true) no need to render\r\n            //If it is not visible no need to render\r\n            if (this.data.hd || this.hidden) {\r\n                return;\r\n            }\r\n            this.renderTransform();\r\n            this.renderRenderable();\r\n            this.renderElement();\r\n            this.renderInnerContent();\r\n            if (this._isFirstFrame) {\r\n                this._isFirstFrame = false;\r\n            }\r\n        },\r\n        renderInnerContent: function() {},\r\n        prepareFrame: function(num) {\r\n            this._mdf = false;\r\n            this.prepareRenderableFrame(num);\r\n            this.prepareProperties(num, this.isInRange);\r\n            this.checkTransparency();\r\n        },\r\n        destroy: function(){\r\n            this.innerElem =  null;\r\n            this.destroyBaseElement();\r\n        }\r\n    };\r\n    extendPrototype([RenderableElement, createProxyFunction(_prototype)], RenderableDOMElement);\r\n}());\r\nfunction ProcessedElement(element, position) {\r\n\tthis.elem = element;\r\n\tthis.pos = position;\r\n}\r\nfunction SVGStyleData(data, level) {\r\n\tthis.data = data;\r\n\tthis.type = data.ty;\r\n\tthis.d = '';\r\n\tthis.lvl = level;\r\n\tthis._mdf = false;\r\n\tthis.closed = false;\r\n\tthis.pElem = createNS('path');\r\n\tthis.msElem = null;\r\n}\r\n\r\nSVGStyleData.prototype.reset = function() {\r\n\tthis.d = '';\r\n\tthis._mdf = false;\r\n};\r\nfunction SVGShapeData(transformers, level, shape) {\r\n    this.caches = [];\r\n    this.styles = [];\r\n    this.transformers = transformers;\r\n    this.lStr = '';\r\n    this.sh = shape;\r\n    this.lvl = level;\r\n}\r\nfunction SVGTransformData(mProps, op) {\r\n\tthis.transform = {\r\n\t\tmProps: mProps,\r\n\t\top: op\r\n\t};\r\n\tthis.elements = [];\r\n}\r\nfunction SVGStrokeStyleData(elem, data, dynamicProperties, styleOb){\r\n\tthis.o = PropertyFactory.getProp(elem,data.o,0,0.01,dynamicProperties);\r\n\tthis.w = PropertyFactory.getProp(elem,data.w,0,null,dynamicProperties);\r\n\tthis.d = new DashProperty(elem,data.d||{},'svg',dynamicProperties);\r\n\tthis.c = PropertyFactory.getProp(elem,data.c,1,255,dynamicProperties);\r\n\tthis.style = styleOb;\r\n}\r\nfunction SVGFillStyleData(elem, data, dynamicProperties, styleOb){\r\n\tthis.o = PropertyFactory.getProp(elem,data.o,0,0.01,dynamicProperties);\r\n\tthis.c = PropertyFactory.getProp(elem,data.c,1,255,dynamicProperties);\r\n\tthis.style = styleOb;\r\n}\r\nfunction SVGGradientFillStyleData(elem, data, dynamicProperties, styleOb){\r\n    this.initGradientData(elem, data, dynamicProperties, styleOb);\r\n}\r\n\r\nSVGGradientFillStyleData.prototype.initGradientData = function(elem, data, dynamicProperties, styleOb){\r\n    this.o = PropertyFactory.getProp(elem,data.o,0,0.01,dynamicProperties);\r\n    this.s = PropertyFactory.getProp(elem,data.s,1,null,dynamicProperties);\r\n    this.e = PropertyFactory.getProp(elem,data.e,1,null,dynamicProperties);\r\n    this.h = PropertyFactory.getProp(elem,data.h||{k:0},0,0.01,dynamicProperties);\r\n    this.a = PropertyFactory.getProp(elem,data.a||{k:0},0,degToRads,dynamicProperties);\r\n    this.g = new GradientProperty(elem,data.g,dynamicProperties);\r\n    this.style = styleOb;\r\n    this.stops = [];\r\n    this.setGradientData(styleOb.pElem, data);\r\n    this.setGradientOpacity(data, styleOb);\r\n\r\n};\r\n\r\nSVGGradientFillStyleData.prototype.setGradientData = function(pathElement,data){\r\n\r\n    var gradientId = 'gr_'+randomString(10);\r\n    var gfill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');\r\n    gfill.setAttribute('id',gradientId);\r\n    gfill.setAttribute('spreadMethod','pad');\r\n    gfill.setAttribute('gradientUnits','userSpaceOnUse');\r\n    var stops = [];\r\n    var stop, j, jLen;\r\n    jLen = data.g.p*4;\r\n    for(j=0;j<jLen;j+=4){\r\n        stop = createNS('stop');\r\n        gfill.appendChild(stop);\r\n        stops.push(stop);\r\n    }\r\n    pathElement.setAttribute( data.ty === 'gf' ? 'fill':'stroke','url(#'+gradientId+')');\r\n    \r\n    this.gf = gfill;\r\n    this.cst = stops;\r\n};\r\n\r\nSVGGradientFillStyleData.prototype.setGradientOpacity = function(data, styleOb){\r\n    if(this.g._hasOpacity && !this.g._collapsable){\r\n        var stop, j, jLen;\r\n        var mask = createNS(\"mask\");\r\n        var maskElement = createNS( 'path');\r\n        mask.appendChild(maskElement);\r\n        var opacityId = 'op_'+randomString(10);\r\n        var maskId = 'mk_'+randomString(10);\r\n        mask.setAttribute('id',maskId);\r\n        var opFill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');\r\n        opFill.setAttribute('id',opacityId);\r\n        opFill.setAttribute('spreadMethod','pad');\r\n        opFill.setAttribute('gradientUnits','userSpaceOnUse');\r\n        jLen = data.g.k.k[0].s ? data.g.k.k[0].s.length : data.g.k.k.length;\r\n        var stops = this.stops;\r\n        for(j=data.g.p*4;j<jLen;j+=2){\r\n            stop = createNS('stop');\r\n            stop.setAttribute('stop-color','rgb(255,255,255)');\r\n            opFill.appendChild(stop);\r\n            stops.push(stop);\r\n        }\r\n        maskElement.setAttribute( data.ty === 'gf' ? 'fill':'stroke','url(#'+opacityId+')');\r\n        this.of = opFill;\r\n        this.ms = mask;\r\n        this.ost = stops;\r\n        this.maskId = maskId;\r\n        styleOb.msElem = maskElement;\r\n    }\r\n};\r\nfunction SVGGradientStrokeStyleData(elem, data, dynamicProperties, styleOb){\r\n\tthis.w = PropertyFactory.getProp(elem,data.w,0,null,dynamicProperties);\r\n\tthis.d = new DashProperty(elem,data.d||{},'svg',dynamicProperties);\r\n    this.initGradientData(elem, data, dynamicProperties, styleOb);\r\n}\r\n\r\nSVGGradientStrokeStyleData.prototype.initGradientData = SVGGradientFillStyleData.prototype.initGradientData;\r\nSVGGradientStrokeStyleData.prototype.setGradientData = SVGGradientFillStyleData.prototype.setGradientData;\r\nSVGGradientStrokeStyleData.prototype.setGradientOpacity = SVGGradientFillStyleData.prototype.setGradientOpacity;\r\nfunction ShapeGroupData() {\r\n\tthis.it = [];\r\n    this.prevViewData = [];\r\n    this.gr = createNS('g');\r\n}\r\nfunction BaseElement(){\r\n}\r\nBaseElement.prototype.checkMasks = function(){\r\n    if(!this.data.hasMask){\r\n        return false;\r\n    }\r\n    var i = 0, len = this.data.masksProperties.length;\r\n    while(i<len) {\r\n        if((this.data.masksProperties[i].mode !== 'n' && this.data.masksProperties[i].cl !== false)) {\r\n            return true;\r\n        }\r\n        i += 1;\r\n    }\r\n    return false;\r\n};\r\n\r\nBaseElement.prototype.initExpressions = function(){\r\n    this.layerInterface = LayerExpressionInterface(this);\r\n    if(this.data.hasMask && this.maskManager) {\r\n        this.layerInterface.registerMaskInterface(this.maskManager);\r\n    }\r\n    var effectsInterface = EffectsExpressionInterface.createEffectsInterface(this,this.layerInterface);\r\n    this.layerInterface.registerEffectsInterface(effectsInterface);\r\n\r\n    if(this.data.ty === 0 || this.data.xt){\r\n        this.compInterface = CompExpressionInterface(this);\r\n    } else if(this.data.ty === 4){\r\n        this.layerInterface.shapeInterface = ShapeExpressionInterface(this.shapesData,this.itemsData,this.layerInterface);\r\n        this.layerInterface.content = this.layerInterface.shapeInterface;\r\n    } else if(this.data.ty === 5){\r\n        this.layerInterface.textInterface = TextExpressionInterface(this);\r\n        this.layerInterface.text = this.layerInterface.textInterface;\r\n    }\r\n};\r\n\r\nBaseElement.prototype.blendModeEnums = {\r\n    1:'multiply',\r\n    2:'screen',\r\n    3:'overlay',\r\n    4:'darken',\r\n    5:'lighten',\r\n    6:'color-dodge',\r\n    7:'color-burn',\r\n    8:'hard-light',\r\n    9:'soft-light',\r\n    10:'difference',\r\n    11:'exclusion',\r\n    12:'hue',\r\n    13:'saturation',\r\n    14:'color',\r\n    15:'luminosity'\r\n};\r\n\r\nBaseElement.prototype.getBlendMode = function(){\r\n    return this.blendModeEnums[this.data.bm] || '';\r\n};\r\n\r\nBaseElement.prototype.setBlendMode = function(){\r\n    var blendModeValue = this.getBlendMode();\r\n    var elem = this.baseElement || this.layerElement;\r\n\r\n    elem.style['mix-blend-mode'] = blendModeValue;\r\n};\r\n\r\nBaseElement.prototype.initBaseData = function(data, globalData, comp){\r\n    this.globalData = globalData;\r\n    this.comp = comp;\r\n    this.data = data;\r\n    this.layerId = 'ly_'+randomString(10);\r\n    \r\n    //Stretch factor for old animations missing this property.\r\n    if(!this.data.sr){\r\n        this.data.sr = 1;\r\n    }\r\n    // effects manager\r\n    this.effectsManager = new EffectsManager(this.data,this,this.dynamicProperties);\r\n    \r\n};\r\n\r\nBaseElement.prototype.getType = function(){\r\n    return this.type;\r\n};\r\n\r\nfunction NullElement(data,globalData,comp){\r\n    this.initFrame();\r\n\tthis.initBaseData(data, globalData, comp);\r\n    this.initFrame();\r\n    this.initTransform(data, globalData, comp);\r\n    this.initHierarchy();\r\n}\r\n\r\nNullElement.prototype.prepareFrame = function(num) {\r\n    this.prepareProperties(num, true);\r\n};\r\n\r\nNullElement.prototype.renderFrame = function() {\r\n};\r\n\r\nNullElement.prototype.getBaseElement = function() {\r\n\treturn null;\r\n};\r\n\r\nNullElement.prototype.destroy = function() {\r\n};\r\n\r\nNullElement.prototype.sourceRectAtTime = function() {\r\n};\r\n\r\nNullElement.prototype.hide = function() {\r\n};\r\n\r\nextendPrototype([BaseElement,TransformElement,HierarchyElement,FrameElement], NullElement);\r\n\r\nfunction SVGBaseElement(){\r\n}\r\n\r\nSVGBaseElement.prototype = {\r\n    initRendererElement: function() {\r\n        this.layerElement = createNS('g');\r\n    },\r\n    createContainerElements: function(){\r\n        this.matteElement = createNS('g');\r\n        this.transformedElement = this.layerElement;\r\n        this.maskedElement = this.layerElement;\r\n        this._sizeChanged = false;\r\n        var layerElementParent = null;\r\n        //If this layer acts as a mask for the following layer\r\n        var filId, fil, gg;\r\n        if (this.data.td) {\r\n            if (this.data.td == 3 || this.data.td == 1) {\r\n                var masker = createNS('mask');\r\n                masker.setAttribute('id', this.layerId);\r\n                masker.setAttribute('mask-type', this.data.td == 3 ? 'luminance' : 'alpha');\r\n                masker.appendChild(this.layerElement);\r\n                layerElementParent = masker;\r\n                this.globalData.defs.appendChild(masker);\r\n                // This is only for IE and Edge when mask if of type alpha\r\n                if (!featureSupport.maskType && this.data.td == 1) {\r\n                    masker.setAttribute('mask-type', 'luminance');\r\n                    filId = randomString(10);\r\n                    fil = filtersFactory.createFilter(filId);\r\n                    this.globalData.defs.appendChild(fil);\r\n                    fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\r\n                    gg = createNS('g');\r\n                    gg.appendChild(this.layerElement);\r\n                    layerElementParent = gg;\r\n                    masker.appendChild(gg);\r\n                    gg.setAttribute('filter','url(' + locationHref + '#' + filId + ')');\r\n                }\r\n            } else if(this.data.td == 2) {\r\n                var maskGroup = createNS('mask');\r\n                maskGroup.setAttribute('id', this.layerId);\r\n                maskGroup.setAttribute('mask-type','alpha');\r\n                var maskGrouper = createNS('g');\r\n                maskGroup.appendChild(maskGrouper);\r\n                filId = randomString(10);\r\n                fil = filtersFactory.createFilter(filId);\r\n                ////\r\n\r\n                var feColorMatrix = createNS('feColorMatrix');\r\n                feColorMatrix.setAttribute('type', 'matrix');\r\n                feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');\r\n                feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 -1 1');\r\n                fil.appendChild(feColorMatrix);\r\n\r\n                ////\r\n                /*var feCTr = createNS('feComponentTransfer');\r\n                feCTr.setAttribute('in','SourceGraphic');\r\n                fil.appendChild(feCTr);\r\n                var feFunc = createNS('feFuncA');\r\n                feFunc.setAttribute('type','table');\r\n                feFunc.setAttribute('tableValues','1.0 0.0');\r\n                feCTr.appendChild(feFunc);*/\r\n                this.globalData.defs.appendChild(fil);\r\n                var alphaRect = createNS('rect');\r\n                alphaRect.setAttribute('width',  this.comp.data.w);\r\n                alphaRect.setAttribute('height', this.comp.data.h);\r\n                alphaRect.setAttribute('x','0');\r\n                alphaRect.setAttribute('y','0');\r\n                alphaRect.setAttribute('fill','#ffffff');\r\n                alphaRect.setAttribute('opacity','0');\r\n                maskGrouper.setAttribute('filter', 'url(' + locationHref + '#'+filId+')');\r\n                maskGrouper.appendChild(alphaRect);\r\n                maskGrouper.appendChild(this.layerElement);\r\n                layerElementParent = maskGrouper;\r\n                if (!featureSupport.maskType) {\r\n                    maskGroup.setAttribute('mask-type', 'luminance');\r\n                    fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\r\n                    gg = createNS('g');\r\n                    maskGrouper.appendChild(alphaRect);\r\n                    gg.appendChild(this.layerElement);\r\n                    layerElementParent = gg;\r\n                    maskGrouper.appendChild(gg);\r\n                }\r\n                this.globalData.defs.appendChild(maskGroup);\r\n            }\r\n        } else if (this.data.tt) {\r\n            this.matteElement.appendChild(this.layerElement);\r\n            layerElementParent = this.matteElement;\r\n            this.baseElement = this.matteElement;\r\n        } else {\r\n            this.baseElement = this.layerElement;\r\n        }\r\n        if (this.data.ln) {\r\n            this.layerElement.setAttribute('id', this.data.ln);\r\n        }\r\n        if (this.data.cl) {\r\n            this.layerElement.setAttribute('class', this.data.cl);\r\n        }\r\n        //Clipping compositions to hide content that exceeds boundaries. If collapsed transformations is on, component should not be clipped\r\n        if (this.data.ty === 0 && !this.data.hd) {\r\n            var cp = createNS( 'clipPath');\r\n            var pt = createNS('path');\r\n            pt.setAttribute('d','M0,0 L' + this.data.w + ',0' + ' L' + this.data.w + ',' + this.data.h + ' L0,' + this.data.h + 'z');\r\n            var clipId = 'cp_'+randomString(8);\r\n            cp.setAttribute('id',clipId);\r\n            cp.appendChild(pt);\r\n            this.globalData.defs.appendChild(cp);\r\n\r\n            if (this.checkMasks()) {\r\n                var cpGroup = createNS('g');\r\n                cpGroup.setAttribute('clip-path','url(' + locationHref + '#'+clipId + ')');\r\n                cpGroup.appendChild(this.layerElement);\r\n                this.transformedElement = cpGroup;\r\n                if (layerElementParent) {\r\n                    layerElementParent.appendChild(this.transformedElement);\r\n                } else {\r\n                    this.baseElement = this.transformedElement;\r\n                }\r\n            } else {\r\n                this.layerElement.setAttribute('clip-path','url(' + locationHref + '#'+clipId+')');\r\n            }\r\n            \r\n        }\r\n        if (this.data.bm !== 0) {\r\n            this.setBlendMode();\r\n        }\r\n        this.renderableEffectsManager = new SVGEffects(this);\r\n\r\n    },\r\n    renderElement: function() {\r\n        if (this.finalTransform._matMdf) {\r\n            this.transformedElement.setAttribute('transform', this.finalTransform.mat.to2dCSS());\r\n        }\r\n        if (this.finalTransform._opMdf) {\r\n            this.transformedElement.setAttribute('opacity', this.finalTransform.mProp.o.v);\r\n        }\r\n    },\r\n    destroyBaseElement: function() {\r\n        this.layerElement = null;\r\n        this.matteElement = null;\r\n        this.maskManager.destroy();\r\n    },\r\n    getBaseElement: function() {\r\n        if (this.data.hd) {\r\n            return null;\r\n        }\r\n        return this.baseElement;\r\n    },\r\n    addMasks: function() {\r\n        this.maskManager = new MaskElement(this.data, this, this.globalData, this.dynamicProperties);\r\n    },\r\n    setMatte: function(id) {\r\n        if (!this.matteElement) {\r\n            return;\r\n        }\r\n        this.matteElement.setAttribute(\"mask\", \"url(\" + locationHref + \"#\" + id + \")\");\r\n    }\r\n};\r\nfunction IShapeElement(){\r\n}\r\n\r\nIShapeElement.prototype = {\r\n    addShapeToModifiers: function(data) {\r\n        var i, len = this.shapeModifiers.length;\r\n        for(i=0;i<len;i+=1){\r\n            this.shapeModifiers[i].addShape(data);\r\n        }\r\n    },\r\n    renderModifiers: function() {\r\n        if(!this.shapeModifiers.length){\r\n            return;\r\n        }\r\n        var i, len = this.shapes.length;\r\n        for(i=0;i<len;i+=1){\r\n            this.shapes[i].reset();\r\n        }\r\n\r\n        len = this.shapeModifiers.length;\r\n        for(i=len-1;i>=0;i-=1){\r\n            this.shapeModifiers[i].processShapes(this._isFirstFrame);\r\n        }\r\n    },\r\n    lcEnum: {\r\n        '1': 'butt',\r\n        '2': 'round',\r\n        '3': 'square'\r\n    },\r\n    ljEnum: {\r\n        '1': 'miter',\r\n        '2': 'round',\r\n        '3': 'butt'\r\n    },\r\n    searchProcessedElement: function(elem){\r\n        var i = 0, len = this.processedElements.length;\r\n        while(i < len){\r\n            if(this.processedElements[i].elem === elem){\r\n                return this.processedElements[i].pos;\r\n            }\r\n            i += 1;\r\n        }\r\n        return 0;\r\n    },\r\n    addProcessedElement: function(elem, pos){\r\n        var i = this.processedElements.length;\r\n        while(i){\r\n            i -= 1;\r\n            if(this.processedElements[i].elem === elem){\r\n                this.processedElements[i].pos = pos;\r\n                break;\r\n            }\r\n        }\r\n        if(i === 0){\r\n            this.processedElements.push(new ProcessedElement(elem, pos));\r\n        }\r\n    },\r\n    prepareFrame: function(num) {\r\n        this.prepareRenderableFrame(num);\r\n        this.prepareProperties(num, this.isInRange);\r\n    },\r\n    buildShapeString: function(pathNodes, length, closed, mat) {\r\n        var i, shapeString = '';\r\n        for(i = 1; i < length; i += 1) {\r\n            if (i === 1) {\r\n                shapeString += \" M\" + mat.applyToPointStringified(pathNodes.v[0][0], pathNodes.v[0][1]);\r\n            }\r\n            shapeString += \" C\" + mat.applyToPointStringified(pathNodes.o[i - 1][0], pathNodes.o[i - 1][1]) + \" \" + mat.applyToPointStringified(pathNodes.i[i][0], pathNodes.i[i][1]) + \" \" + mat.applyToPointStringified(pathNodes.v[i][0], pathNodes.v[i][1]);\r\n        }\r\n        if (length === 1) {\r\n            shapeString += \" M\" + mat.applyToPointStringified(pathNodes.v[0][0], pathNodes.v[0][1]);\r\n        }\r\n        if (closed && length) {\r\n            shapeString += \" C\" + mat.applyToPointStringified(pathNodes.o[i - 1][0], pathNodes.o[i - 1][1]) + \" \" + mat.applyToPointStringified(pathNodes.i[0][0], pathNodes.i[0][1]) + \" \" + mat.applyToPointStringified(pathNodes.v[0][0], pathNodes.v[0][1]);\r\n            shapeString += 'z';\r\n        }\r\n        return shapeString;\r\n    }\r\n};\r\nfunction ITextElement(){\r\n}\r\n\r\nITextElement.prototype.initElement = function(data,globalData,comp){\r\n    this.lettersChangedFlag = true;\r\n    this.initFrame();\r\n    this.initBaseData(data, globalData, comp);\r\n    this.textAnimator = new TextAnimatorProperty(data.t, this.renderType, this);\r\n    this.textProperty = new TextProperty(this, data.t, this.dynamicProperties);\r\n    this.initTransform(data, globalData, comp);\r\n    this.initHierarchy();\r\n    this.initRenderable();\r\n    this.initRendererElement();\r\n    this.createContainerElements();\r\n    this.addMasks();\r\n    this.createContent();\r\n    this.hide();\r\n    this.textAnimator.searchProperties(this.dynamicProperties);\r\n};\r\n\r\nITextElement.prototype.prepareFrame = function(num) {\r\n    this._mdf = false;\r\n    this.prepareRenderableFrame(num);\r\n    this.prepareProperties(num, this.isInRange);\r\n    if(this.textProperty._mdf || this.textProperty._isFirstFrame) {\r\n        this.buildNewText();\r\n        this.textProperty._isFirstFrame = false;\r\n    }\r\n};\r\n\r\nITextElement.prototype.createPathShape = function(matrixHelper, shapes) {\r\n    var j,jLen = shapes.length;\r\n    var k, kLen, pathNodes;\r\n    var shapeStr = '';\r\n    for(j=0;j<jLen;j+=1){\r\n        pathNodes = shapes[j].ks.k;\r\n        shapeStr += this.buildShapeString(pathNodes, pathNodes.i.length, true, matrixHelper);\r\n    }\r\n    return shapeStr;\r\n};\r\n\r\nITextElement.prototype.updateDocumentData = function(newData, index) {\r\n    this.textProperty.updateDocumentData(newData, index);\r\n    this.buildNewText();\r\n    this.renderInnerContent();\r\n};\r\n\r\nITextElement.prototype.canResizeFont = function(_canResize) {\r\n    this.textProperty.canResizeFont(_canResize);\r\n    this.buildNewText();\r\n    this.renderInnerContent();\r\n};\r\n\r\nITextElement.prototype.setMinimumFontSize = function(_fontSize) {\r\n    this.textProperty.setMinimumFontSize(_fontSize);\r\n    this.buildNewText();\r\n    this.renderInnerContent();\r\n};\r\n\r\nITextElement.prototype.applyTextPropertiesToMatrix = function(documentData, matrixHelper, lineNumber, xPos, yPos) {\r\n    if(documentData.ps){\r\n        matrixHelper.translate(documentData.ps[0],documentData.ps[1] + documentData.ascent,0);\r\n    }\r\n    matrixHelper.translate(0,-documentData.ls,0);\r\n    switch(documentData.j){\r\n        case 1:\r\n            matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]),0,0);\r\n            break;\r\n        case 2:\r\n            matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber] )/2,0,0);\r\n            break;\r\n    }\r\n    matrixHelper.translate(xPos, yPos, 0);\r\n};\r\n\r\nITextElement.prototype.buildColor = function(colorData) {\r\n    return 'rgb(' + Math.round(colorData[0]*255) + ',' + Math.round(colorData[1]*255) + ',' + Math.round(colorData[2]*255) + ')';\r\n};\r\n\r\nITextElement.prototype.buildShapeString = IShapeElement.prototype.buildShapeString;\r\n\r\nITextElement.prototype.emptyProp = new LetterProps();\r\n\r\nITextElement.prototype.destroy = function(){\r\n    \r\n};\r\nfunction ICompElement(){}\r\n\r\nextendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement, RenderableDOMElement], ICompElement);\r\n\r\nICompElement.prototype.initElement = function(data,globalData,comp) {\r\n    this.initFrame();\r\n    this.initBaseData(data, globalData, comp);\r\n    this.initTransform(data, globalData, comp);\r\n    this.initRenderable();\r\n    this.initHierarchy();\r\n    this.initRendererElement();\r\n    this.createContainerElements();\r\n    this.addMasks();\r\n    if(this.data.xt || !globalData.progressiveLoad){\r\n        this.buildAllItems();\r\n    }\r\n    this.hide();\r\n};\r\n\r\n/*ICompElement.prototype.hide = function(){\r\n    if(!this.hidden){\r\n        this.hideElement();\r\n        var i,len = this.elements.length;\r\n        for( i = 0; i < len; i+=1 ){\r\n            if(this.elements[i]){\r\n                this.elements[i].hide();\r\n            }\r\n        }\r\n    }\r\n};*/\r\n\r\nICompElement.prototype.prepareFrame = function(num){\r\n    this._mdf = false;\r\n    this.prepareRenderableFrame(num);\r\n    this.prepareProperties(num, this.isInRange);\r\n    if(!this.isInRange && !this.data.xt){\r\n        return;\r\n    }\r\n\r\n    if (!this.tm._placeholder) {\r\n        var timeRemapped = this.tm.v;\r\n        if(timeRemapped === this.data.op){\r\n            timeRemapped = this.data.op - 1;\r\n        }\r\n        this.renderedFrame = timeRemapped;\r\n    } else {\r\n        this.renderedFrame = num/this.data.sr;\r\n    }\r\n    var i,len = this.elements.length;\r\n    if(!this.completeLayers){\r\n        this.checkLayers(this.renderedFrame);\r\n    }\r\n    for( i = 0; i < len; i+=1 ){\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].prepareFrame(this.renderedFrame - this.layers[i].st);\r\n            if(this.elements[i]._mdf) {\r\n                this._mdf = true;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.renderInnerContent = function() {\r\n    var i,len = this.layers.length;\r\n    for( i = 0; i < len; i += 1 ){\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].renderFrame();\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.setElements = function(elems){\r\n    this.elements = elems;\r\n};\r\n\r\nICompElement.prototype.getElements = function(){\r\n    return this.elements;\r\n};\r\n\r\nICompElement.prototype.destroyElements = function(){\r\n    var i,len = this.layers.length;\r\n    for( i = 0; i < len; i+=1 ){\r\n        if(this.elements[i]){\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.destroy = function(){\r\n    this.destroyElements();\r\n    this.destroyBaseElement();\r\n};\r\n\r\nfunction IImageElement(data,globalData,comp){\r\n    this.assetData = globalData.getAssetData(data.refId);\r\n    this.initElement(data,globalData,comp);\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,SVGBaseElement,HierarchyElement,FrameElement,RenderableDOMElement], IImageElement);\r\n\r\nIImageElement.prototype.createContent = function(){\r\n\r\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\r\n\r\n    this.innerElem = createNS('image');\r\n    this.innerElem.setAttribute('width',this.assetData.w+\"px\");\r\n    this.innerElem.setAttribute('height',this.assetData.h+\"px\");\r\n    this.innerElem.setAttribute('preserveAspectRatio','xMidYMid slice');\r\n    this.innerElem.setAttributeNS('http://www.w3.org/1999/xlink','href',assetPath);\r\n    \r\n    this.layerElement.appendChild(this.innerElem);\r\n};\r\n\r\nfunction ISolidElement(data,globalData,comp){\r\n    this.initElement(data,globalData,comp);\r\n}\r\nextendPrototype([IImageElement], ISolidElement);\r\n\r\nISolidElement.prototype.createContent = function(){\r\n\r\n    var rect = createNS('rect');\r\n    ////rect.style.width = this.data.sw;\r\n    ////rect.style.height = this.data.sh;\r\n    ////rect.style.fill = this.data.sc;\r\n    rect.setAttribute('width',this.data.sw);\r\n    rect.setAttribute('height',this.data.sh);\r\n    rect.setAttribute('fill',this.data.sc);\r\n    this.layerElement.appendChild(rect);\r\n};\r\nfunction SVGCompElement(data,globalData,comp){\r\n    this.layers = data.layers;\r\n    this.supports3d = true;\r\n    this.completeLayers = false;\r\n    this.pendingElements = [];\r\n    this.elements = this.layers ? createSizedArray(this.layers.length) : [];\r\n    //this.layerElement = createNS('g');\r\n    this.initElement(data,globalData,comp);\r\n    this.tm = data.tm ? PropertyFactory.getProp(this,data.tm,0,globalData.frameRate,this.dynamicProperties) : {_placeholder:true};\r\n}\r\n\r\nextendPrototype([SVGRenderer, ICompElement, SVGBaseElement], SVGCompElement);\r\nfunction SVGTextElement(data,globalData,comp){\r\n    this.textSpans = [];\r\n    this.renderType = 'svg';\r\n    this.initElement(data,globalData,comp);\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,SVGBaseElement,HierarchyElement,FrameElement,RenderableDOMElement,ITextElement], SVGTextElement);\r\n\r\nSVGTextElement.prototype.createContent = function(){\r\n\r\n    if (this.data.singleShape && !this.globalData.fontManager.chars) {\r\n        this.textContainer = createNS('text');\r\n    }\r\n};\r\n\r\nSVGTextElement.prototype.buildTextContents = function(textArray) {\r\n    var i = 0, len = textArray.length;\r\n    var textContents = [], currentTextContent = '';\r\n    while (i < len) {\r\n        if(textArray[i] === String.fromCharCode(13)) {\r\n            textContents.push(currentTextContent);\r\n            currentTextContent = '';\r\n        } else {\r\n            currentTextContent += textArray[i];\r\n        }\r\n        i += 1;\r\n    }\r\n    textContents.push(currentTextContent);\r\n    return textContents;\r\n}\r\n\r\nSVGTextElement.prototype.buildNewText = function(){\r\n    var i, len;\r\n\r\n    var documentData = this.textProperty.currentData;\r\n    this.renderedLetters = createSizedArray(documentData ? documentData.l.length : 0);\r\n    if(documentData.fc) {\r\n        this.layerElement.setAttribute('fill', this.buildColor(documentData.fc));\r\n    }else{\r\n        this.layerElement.setAttribute('fill', 'rgba(0,0,0,0)');\r\n    }\r\n    if(documentData.sc){\r\n        this.layerElement.setAttribute('stroke', this.buildColor(documentData.sc));\r\n        this.layerElement.setAttribute('stroke-width', documentData.sw);\r\n    }\r\n    this.layerElement.setAttribute('font-size', documentData.finalSize);\r\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\r\n    if(fontData.fClass){\r\n        this.layerElement.setAttribute('class',fontData.fClass);\r\n    } else {\r\n        this.layerElement.setAttribute('font-family', fontData.fFamily);\r\n        var fWeight = documentData.fWeight, fStyle = documentData.fStyle;\r\n        this.layerElement.setAttribute('font-style', fStyle);\r\n        this.layerElement.setAttribute('font-weight', fWeight);\r\n    }\r\n\r\n    var letters = documentData.l || [];\r\n    var usesGlyphs = this.globalData.fontManager.chars;\r\n    len = letters.length;\r\n    if(!len){\r\n        return;\r\n    }\r\n    var tSpan;\r\n    var matrixHelper = this.mHelper;\r\n    var shapes, shapeStr = '', singleShape = this.data.singleShape;\r\n    var xPos = 0, yPos = 0, firstLine = true;\r\n    var trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n    if(singleShape && !usesGlyphs && !documentData.sz) {\r\n        var tElement = this.textContainer;\r\n        var justify = 'start';\r\n        switch(documentData.j) {\r\n            case 1:\r\n                justify = 'end';\r\n                break;\r\n            case 2:\r\n                justify = 'middle';\r\n                break;\r\n        }\r\n        tElement.setAttribute('text-anchor',justify);\r\n        tElement.setAttribute('letter-spacing',trackingOffset);\r\n        var textContent = this.buildTextContents(documentData.finalText);\r\n        len = textContent.length;\r\n        yPos = documentData.ps ? documentData.ps[1] + documentData.ascent : 0;\r\n        for ( i = 0; i < len; i += 1) {\r\n            tSpan = this.textSpans[i] || createNS('tspan');\r\n            tSpan.textContent = textContent[i];\r\n            tSpan.setAttribute('x', 0);\r\n            tSpan.setAttribute('y', yPos);\r\n            tSpan.style.display = 'inherit';\r\n            tElement.appendChild(tSpan);\r\n            this.textSpans[i] = tSpan;\r\n            yPos += documentData.finalLineHeight;\r\n        }\r\n        \r\n        this.layerElement.appendChild(tElement);\r\n    } else {\r\n        var cachedSpansLength = this.textSpans.length;\r\n        var shapeData, charData;\r\n        for (i = 0; i < len; i += 1) {\r\n            if(!usesGlyphs || !singleShape || i === 0){\r\n                tSpan = cachedSpansLength > i ? this.textSpans[i] : createNS(usesGlyphs?'path':'text');\r\n                if (cachedSpansLength <= i) {\r\n                    tSpan.setAttribute('stroke-linecap', 'butt');\r\n                    tSpan.setAttribute('stroke-linejoin','round');\r\n                    tSpan.setAttribute('stroke-miterlimit','4');\r\n                    this.textSpans[i] = tSpan;\r\n                    this.layerElement.appendChild(tSpan);\r\n                }\r\n                tSpan.style.display = 'inherit';\r\n            }\r\n            \r\n            matrixHelper.reset();\r\n            matrixHelper.scale(documentData.finalSize / 100, documentData.finalSize / 100);\r\n            if (singleShape) {\r\n                if(letters[i].n) {\r\n                    xPos = -trackingOffset;\r\n                    yPos += documentData.yOffset;\r\n                    yPos += firstLine ? 1 : 0;\r\n                    firstLine = false;\r\n                }\r\n                this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\r\n                xPos += letters[i].l || 0;\r\n                //xPos += letters[i].val === ' ' ? 0 : trackingOffset;\r\n                xPos += trackingOffset;\r\n            }\r\n            if(usesGlyphs) {\r\n                charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\r\n                shapeData = charData && charData.data || {};\r\n                shapes = shapeData.shapes ? shapeData.shapes[0].it : [];\r\n                if(!singleShape){\r\n                    tSpan.setAttribute('d',this.createPathShape(matrixHelper,shapes));\r\n                } else {\r\n                    shapeStr += this.createPathShape(matrixHelper,shapes);\r\n                }\r\n            } else {\r\n                if(singleShape) {\r\n                    tSpan.setAttribute(\"transform\", \"translate(\" + matrixHelper.props[12] + \",\" + matrixHelper.props[13] + \")\");\r\n                }\r\n                tSpan.textContent = letters[i].val;\r\n                tSpan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\",\"preserve\");\r\n            }\r\n            //\r\n        }\r\n        if (singleShape) {\r\n            tSpan.setAttribute('d',shapeStr);\r\n        }\r\n    }\r\n    while (i < this.textSpans.length){\r\n        this.textSpans[i].style.display = 'none';\r\n        i += 1;\r\n    }\r\n    \r\n    this._sizeChanged = true;\r\n};\r\n\r\nSVGTextElement.prototype.sourceRectAtTime = function(time){\r\n    this.prepareFrame(this.comp.renderedFrame - this.data.st);\r\n    this.renderInnerContent();\r\n    if(this._sizeChanged){\r\n        this._sizeChanged = false;\r\n        var textBox = this.layerElement.getBBox();\r\n        this.bbox = {\r\n            top: textBox.y,\r\n            left: textBox.x,\r\n            width: textBox.width,\r\n            height: textBox.height\r\n        };\r\n    }\r\n    return this.bbox;\r\n};\r\n\r\nSVGTextElement.prototype.renderInnerContent = function(){\r\n\r\n    if(!this.data.singleShape){\r\n        this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\r\n        if(this.lettersChangedFlag || this.textAnimator.lettersChangedFlag){\r\n            this._sizeChanged = true;\r\n            var  i,len;\r\n            var renderedLetters = this.textAnimator.renderedLetters;\r\n\r\n            var letters = this.textProperty.currentData.l;\r\n\r\n            len = letters.length;\r\n            var renderedLetter, textSpan;\r\n            for(i=0;i<len;i+=1){\r\n                if(letters[i].n){\r\n                    continue;\r\n                }\r\n                renderedLetter = renderedLetters[i];\r\n                textSpan = this.textSpans[i];\r\n                if(renderedLetter._mdf.m) {\r\n                    textSpan.setAttribute('transform',renderedLetter.m);\r\n                }\r\n                if(renderedLetter._mdf.o) {\r\n                    textSpan.setAttribute('opacity',renderedLetter.o);\r\n                }\r\n                if(renderedLetter._mdf.sw){\r\n                    textSpan.setAttribute('stroke-width',renderedLetter.sw);\r\n                }\r\n                if(renderedLetter._mdf.sc){\r\n                    textSpan.setAttribute('stroke',renderedLetter.sc);\r\n                }\r\n                if(renderedLetter._mdf.fc){\r\n                    textSpan.setAttribute('fill',renderedLetter.fc);\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nfunction SVGShapeElement(data,globalData,comp){\r\n    //List of drawable elements\r\n    this.shapes = [];\r\n    // Full shape data\r\n    this.shapesData = data.shapes;\r\n    //List of styles that will be applied to shapes\r\n    this.stylesList = [];\r\n    //List of modifiers that will be applied to shapes\r\n    this.shapeModifiers = [];\r\n    //List of items in shape tree\r\n    this.itemsData = [];\r\n    //List of items in previous shape tree\r\n    this.processedElements = [];\r\n    this.initElement(data,globalData,comp);\r\n    //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\r\n    // List of elements that have been created\r\n    this.prevViewData = [];\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,SVGBaseElement,IShapeElement,HierarchyElement,FrameElement,RenderableDOMElement], SVGShapeElement);\r\n\r\nSVGShapeElement.prototype.initSecondaryElement = function() {\r\n};\r\n\r\nSVGShapeElement.prototype.identityMatrix = new Matrix();\r\n\r\nSVGShapeElement.prototype.buildExpressionInterface = function(){};\r\n\r\nSVGShapeElement.prototype.createContent = function(){\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement,this.dynamicProperties, 0, [], true);\r\n};\r\n\r\nSVGShapeElement.prototype.createStyleElement = function(data, level, dynamicProperties){\r\n    //TODO: prevent drawing of hidden styles\r\n    var elementData;\r\n    var styleOb = new SVGStyleData(data, level);\r\n\r\n    var pathElement = styleOb.pElem;\r\n    if(data.ty === 'st') {\r\n        elementData = new SVGStrokeStyleData(this, data, dynamicProperties, styleOb);\r\n    } else if(data.ty === 'fl') {\r\n        elementData = new SVGFillStyleData(this, data, dynamicProperties, styleOb);\r\n    } else if(data.ty === 'gf' || data.ty === 'gs') {\r\n        var gradientConstructor = data.ty === 'gf' ? SVGGradientFillStyleData : SVGGradientStrokeStyleData;\r\n        elementData = new gradientConstructor(this, data, dynamicProperties, styleOb);\r\n        this.globalData.defs.appendChild(elementData.gf);\r\n        if (elementData.maskId) {\r\n            this.globalData.defs.appendChild(elementData.ms);\r\n            this.globalData.defs.appendChild(elementData.of);\r\n            pathElement.setAttribute('mask','url(#' + elementData.maskId + ')');\r\n        }\r\n    }\r\n    \r\n    if(data.ty === 'st' || data.ty === 'gs') {\r\n        pathElement.setAttribute('stroke-linecap', this.lcEnum[data.lc] || 'round');\r\n        pathElement.setAttribute('stroke-linejoin',this.ljEnum[data.lj] || 'round');\r\n        pathElement.setAttribute('fill-opacity','0');\r\n        if(data.lj === 1) {\r\n            pathElement.setAttribute('stroke-miterlimit',data.ml);\r\n        }\r\n    }\r\n\r\n    if(data.r === 2) {\r\n        pathElement.setAttribute('fill-rule', 'evenodd');\r\n    }\r\n\r\n    if(data.ln){\r\n        pathElement.setAttribute('id',data.ln);\r\n    }\r\n    if(data.cl){\r\n        pathElement.setAttribute('class',data.cl);\r\n    }\r\n    this.stylesList.push(styleOb);\r\n    return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.createGroupElement = function(data) {\r\n    var elementData = new ShapeGroupData();\r\n    if(data.ln){\r\n        elementData.gr.setAttribute('id',data.ln);\r\n    }\r\n    return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.createTransformElement = function(data, dynamicProperties) {\r\n    return new SVGTransformData(TransformPropertyFactory.getTransformProperty(this,data,dynamicProperties), PropertyFactory.getProp(this,data.o,0,0.01,dynamicProperties));\r\n};\r\n\r\nSVGShapeElement.prototype.createShapeElement = function(data, ownTransformers, level, dynamicProperties) {\r\n    var ty = 4;\r\n    if(data.ty === 'rc'){\r\n        ty = 5;\r\n    }else if(data.ty === 'el'){\r\n        ty = 6;\r\n    }else if(data.ty === 'sr'){\r\n        ty = 7;\r\n    }\r\n    var shapeProperty = ShapePropertyFactory.getShapeProp(this,data,ty,dynamicProperties);\r\n    var elementData = new SVGShapeData(ownTransformers, level, shapeProperty);\r\n    this.shapes.push(elementData.sh);\r\n    this.addShapeToModifiers(elementData);\r\n    return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.setElementStyles = function(elementData){\r\n    var arr = elementData.styles;\r\n    var j, jLen = this.stylesList.length;\r\n    for (j = 0; j < jLen; j += 1) {\r\n        if (!this.stylesList[j].closed) {\r\n            arr.push(this.stylesList[j]);\r\n        }\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.reloadShapes = function(){\r\n    this._isFirstFrame = true;\r\n    var i, len = this.itemsData.length;\r\n    for( i = 0; i < len; i += 1) {\r\n        this.prevViewData[i] = this.itemsData[i];\r\n    }\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement,this.dynamicProperties, 0, [], true);\r\n    len = this.dynamicProperties.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        this.dynamicProperties[i].getValue();\r\n    }\r\n    this.renderModifiers();\r\n};\r\n\r\nSVGShapeElement.prototype.searchShapes = function(arr,itemsData,prevViewData,container,dynamicProperties, level, transformers, render){\r\n    var ownTransformers = [].concat(transformers);\r\n    var i, len = arr.length - 1;\r\n    var j, jLen;\r\n    var ownStyles = [], ownModifiers = [], styleOb, currentTransform, modifier, processedPos;\r\n    for(i=len;i>=0;i-=1){\r\n        processedPos = this.searchProcessedElement(arr[i]);\r\n        if(!processedPos){\r\n            arr[i]._render = render;\r\n        } else {\r\n            itemsData[i] = prevViewData[processedPos - 1];\r\n        }\r\n        if(arr[i].ty == 'fl' || arr[i].ty == 'st' || arr[i].ty == 'gf' || arr[i].ty == 'gs'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createStyleElement(arr[i], level, dynamicProperties);\r\n            } else {\r\n                itemsData[i].style.closed = false;\r\n            }\r\n            if(arr[i]._render){\r\n                container.appendChild(itemsData[i].style.pElem);\r\n            }\r\n            ownStyles.push(itemsData[i].style);\r\n        }else if(arr[i].ty == 'gr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createGroupElement(arr[i]);\r\n            } else {\r\n                jLen = itemsData[i].it.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    itemsData[i].prevViewData[j] = itemsData[i].it[j];\r\n                }\r\n            }\r\n            this.searchShapes(arr[i].it,itemsData[i].it,itemsData[i].prevViewData,itemsData[i].gr,dynamicProperties, level + 1, ownTransformers, render);\r\n            if(arr[i]._render){\r\n                container.appendChild(itemsData[i].gr);\r\n            }\r\n        }else if(arr[i].ty == 'tr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createTransformElement(arr[i], dynamicProperties);\r\n            }\r\n            currentTransform = itemsData[i].transform;\r\n            ownTransformers.push(currentTransform);\r\n        }else if(arr[i].ty == 'sh' || arr[i].ty == 'rc' || arr[i].ty == 'el' || arr[i].ty == 'sr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createShapeElement(arr[i], ownTransformers, level, dynamicProperties);\r\n            }\r\n            this.setElementStyles(itemsData[i]);\r\n\r\n        }else if(arr[i].ty == 'tm' || arr[i].ty == 'rd' || arr[i].ty == 'ms'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                modifier.init(this,arr[i],dynamicProperties);\r\n                itemsData[i] = modifier;\r\n                this.shapeModifiers.push(modifier);\r\n            } else {\r\n                modifier = itemsData[i];\r\n                modifier.closed = false;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        }else if(arr[i].ty == 'rp'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                itemsData[i] = modifier;\r\n                modifier.init(this,arr,i,itemsData,dynamicProperties);\r\n                this.shapeModifiers.push(modifier);\r\n                render = false;\r\n            }else{\r\n                modifier = itemsData[i];\r\n                modifier.closed = true;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        }\r\n        this.addProcessedElement(arr[i], i + 1);\r\n    }\r\n    len = ownStyles.length;\r\n    for(i=0;i<len;i+=1){\r\n        ownStyles[i].closed = true;\r\n    }\r\n    len = ownModifiers.length;\r\n    for(i=0;i<len;i+=1){\r\n        ownModifiers[i].closed = true;\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.renderInnerContent = function() {\r\n    this.renderModifiers();\r\n    var i, len = this.stylesList.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.stylesList[i].reset();\r\n    }\r\n    this.renderShape(this.shapesData, this.itemsData, this.layerElement);\r\n\r\n    for (i = 0; i < len; i += 1) {\r\n        if (this.stylesList[i]._mdf || this._isFirstFrame) {\r\n            if(this.stylesList[i].msElem){\r\n                this.stylesList[i].msElem.setAttribute('d', this.stylesList[i].d);\r\n                //Adding M0 0 fixes same mask bug on all browsers\r\n                this.stylesList[i].d = 'M0 0' + this.stylesList[i].d;\r\n            }\r\n            this.stylesList[i].pElem.setAttribute('d', this.stylesList[i].d || 'M0 0');\r\n        }\r\n    }\r\n};\r\n\r\n\r\nSVGShapeElement.prototype.renderShape = function(items, data, container) {\r\n    var i, len = items.length - 1;\r\n    var ty;\r\n    for(i=0;i<=len;i+=1){\r\n        ty = items[i].ty;\r\n        if(ty == 'tr'){\r\n            if(this._isFirstFrame || data[i].transform.op._mdf){\r\n                container.setAttribute('opacity',data[i].transform.op.v);\r\n            }\r\n            if(this._isFirstFrame || data[i].transform.mProps._mdf){\r\n                container.setAttribute('transform',data[i].transform.mProps.v.to2dCSS());\r\n            }\r\n        }else if(items[i]._render && (ty == 'sh' || ty == 'el' || ty == 'rc' || ty == 'sr')){\r\n            this.renderPath(data[i]);\r\n        }else if(ty == 'fl'){\r\n            this.renderFill(items[i],data[i]);\r\n        }else if(ty == 'gf'){\r\n            this.renderGradient(items[i],data[i]);\r\n        }else if(ty == 'gs'){\r\n            this.renderGradient(items[i],data[i]);\r\n            this.renderStroke(items[i],data[i]);\r\n        }else if(ty == 'st'){\r\n            this.renderStroke(items[i],data[i]);\r\n        }else if(ty == 'gr'){\r\n            this.renderShape(items[i].it,data[i].it, data[i].gr);\r\n        }else if(ty == 'tm'){\r\n            //\r\n        }\r\n    }\r\n\r\n};\r\n\r\nSVGShapeElement.prototype.renderPath = function(itemData){\r\n    var j, jLen,pathStringTransformed,redraw,pathNodes,l, lLen = itemData.styles.length;\r\n    var lvl = itemData.lvl;\r\n    var paths, mat, props, iterations, k;\r\n    for(l=0;l<lLen;l+=1){\r\n        redraw = itemData.sh._mdf || this._isFirstFrame;\r\n        if(itemData.styles[l].lvl < lvl){\r\n            mat = this.mHelper.reset();\r\n            iterations = lvl - itemData.styles[l].lvl;\r\n            k = itemData.transformers.length-1;\r\n            while(iterations > 0) {\r\n                redraw = itemData.transformers[k].mProps._mdf || redraw;\r\n                props = itemData.transformers[k].mProps.v.props;\r\n                mat.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\r\n                iterations --;\r\n                k --;\r\n            }\r\n        } else {\r\n            mat = this.identityMatrix;\r\n        }\r\n        paths = itemData.sh.paths;\r\n        jLen = paths._length;\r\n        if(redraw){\r\n            pathStringTransformed = '';\r\n            for(j=0;j<jLen;j+=1){\r\n                pathNodes = paths.shapes[j];\r\n                if(pathNodes && pathNodes._length){\r\n                    pathStringTransformed += this.buildShapeString(pathNodes, pathNodes._length, pathNodes.c, mat);\r\n                }\r\n            }\r\n            itemData.caches[l] = pathStringTransformed;\r\n        } else {\r\n            pathStringTransformed = itemData.caches[l];\r\n        }\r\n        itemData.styles[l].d += pathStringTransformed;\r\n        itemData.styles[l]._mdf = redraw || itemData.styles[l]._mdf;\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.renderFill = function(styleData,itemData){\r\n    var styleElem = itemData.style;\r\n\r\n    if(itemData.c._mdf || this._isFirstFrame){\r\n        styleElem.pElem.setAttribute('fill','rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')');\r\n    }\r\n    if(itemData.o._mdf || this._isFirstFrame){\r\n        styleElem.pElem.setAttribute('fill-opacity',itemData.o.v);\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.renderGradient = function(styleData, itemData) {\r\n    var gfill = itemData.gf;\r\n    var hasOpacity = itemData.g._hasOpacity;\r\n    var pt1 = itemData.s.v, pt2 = itemData.e.v;\r\n\r\n    if (itemData.o._mdf || this._isFirstFrame) {\r\n        var attr = styleData.ty === 'gf' ? 'fill-opacity' : 'stroke-opacity';\r\n        itemData.style.pElem.setAttribute(attr, itemData.o.v);\r\n    }\r\n    if (itemData.s._mdf || this._isFirstFrame) {\r\n        var attr1 = styleData.t === 1 ? 'x1' : 'cx';\r\n        var attr2 = attr1 === 'x1' ? 'y1' : 'cy';\r\n        gfill.setAttribute(attr1, pt1[0]);\r\n        gfill.setAttribute(attr2, pt1[1]);\r\n        if (hasOpacity && !itemData.g._collapsable) {\r\n            itemData.of.setAttribute(attr1, pt1[0]);\r\n            itemData.of.setAttribute(attr2, pt1[1]);\r\n        }\r\n    }\r\n    var stops, i, len, stop;\r\n    if (itemData.g._cmdf || this._isFirstFrame) {\r\n        stops = itemData.cst;\r\n        var cValues = itemData.g.c;\r\n        len = stops.length;\r\n        for (i = 0; i < len; i += 1){\r\n            stop = stops[i];\r\n            stop.setAttribute('offset', cValues[i * 4] + '%');\r\n            stop.setAttribute('stop-color','rgb('+ cValues[i * 4 + 1] + ',' + cValues[i * 4 + 2] + ','+cValues[i * 4 + 3] + ')');\r\n        }\r\n    }\r\n    if (hasOpacity && (itemData.g._omdf || this._isFirstFrame)) {\r\n        var oValues = itemData.g.o;\r\n        if(itemData.g._collapsable) {\r\n            stops = itemData.cst;\r\n        } else {\r\n            stops = itemData.ost;\r\n        }\r\n        len = stops.length;\r\n        for (i = 0; i < len; i += 1) {\r\n            stop = stops[i];\r\n            if(!itemData.g._collapsable) {\r\n                stop.setAttribute('offset', oValues[i * 2] + '%');\r\n            }\r\n            stop.setAttribute('stop-opacity', oValues[i * 2 + 1]);\r\n        }\r\n    }\r\n    if (styleData.t === 1) {\r\n        if (itemData.e._mdf  || this._isFirstFrame) {\r\n            gfill.setAttribute('x2', pt2[0]);\r\n            gfill.setAttribute('y2', pt2[1]);\r\n            if (hasOpacity && !itemData.g._collapsable) {\r\n                itemData.of.setAttribute('x2', pt2[0]);\r\n                itemData.of.setAttribute('y2', pt2[1]);\r\n            }\r\n        }\r\n    } else {\r\n        var rad;\r\n        if (itemData.s._mdf || itemData.e._mdf || this._isFirstFrame) {\r\n            rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\r\n            gfill.setAttribute('r', rad);\r\n            if(hasOpacity && !itemData.g._collapsable){\r\n                itemData.of.setAttribute('r', rad);\r\n            }\r\n        }\r\n        if (itemData.e._mdf || itemData.h._mdf || itemData.a._mdf || this._isFirstFrame) {\r\n            if (!rad) {\r\n                rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\r\n            }\r\n            var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);\r\n\r\n            var percent = itemData.h.v >= 1 ? 0.99 : itemData.h.v <= -1 ? -0.99: itemData.h.v;\r\n            var dist = rad * percent;\r\n            var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];\r\n            var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];\r\n            gfill.setAttribute('fx', x);\r\n            gfill.setAttribute('fy', y);\r\n            if (hasOpacity && !itemData.g._collapsable) {\r\n                itemData.of.setAttribute('fx', x);\r\n                itemData.of.setAttribute('fy', y);\r\n            }\r\n        }\r\n        //gfill.setAttribute('fy','200');\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.renderStroke = function(styleData, itemData) {\r\n    var styleElem = itemData.style;\r\n    var d = itemData.d;\r\n    if (d && (d._mdf || this._isFirstFrame)) {\r\n        styleElem.pElem.setAttribute('stroke-dasharray', d.dashStr);\r\n        styleElem.pElem.setAttribute('stroke-dashoffset', d.dashoffset[0]);\r\n    }\r\n    if(itemData.c && (itemData.c._mdf || this._isFirstFrame)){\r\n        styleElem.pElem.setAttribute('stroke','rgb(' + bm_floor(itemData.c.v[0]) + ',' + bm_floor(itemData.c.v[1]) + ',' + bm_floor(itemData.c.v[2]) + ')');\r\n    }\r\n    if(itemData.o._mdf || this._isFirstFrame){\r\n        styleElem.pElem.setAttribute('stroke-opacity', itemData.o.v);\r\n    }\r\n    if(itemData.w._mdf || this._isFirstFrame){\r\n        styleElem.pElem.setAttribute('stroke-width', itemData.w.v);\r\n        if(styleElem.msElem){\r\n            styleElem.msElem.setAttribute('stroke-width', itemData.w.v);\r\n        }\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.destroy = function(){\r\n    this.destroyBaseElement();\r\n    this.shapeData = null;\r\n    this.itemsData = null;\r\n};\r\n\r\nfunction SVGTintFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','linearRGB');\r\n    feColorMatrix.setAttribute('values','0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f1');\r\n    filter.appendChild(feColorMatrix);\r\n    feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n    feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f2');\r\n    filter.appendChild(feColorMatrix);\r\n    this.matrixFilter = feColorMatrix;\r\n    if(filterManager.effectElements[2].p.v !== 100 || filterManager.effectElements[2].p.k){\r\n        var feMerge = createNS('feMerge');\r\n        filter.appendChild(feMerge);\r\n        var feMergeNode;\r\n        feMergeNode = createNS('feMergeNode');\r\n        feMergeNode.setAttribute('in','SourceGraphic');\r\n        feMerge.appendChild(feMergeNode);\r\n        feMergeNode = createNS('feMergeNode');\r\n        feMergeNode.setAttribute('in','f2');\r\n        feMerge.appendChild(feMergeNode);\r\n    }\r\n}\r\n\r\nSVGTintFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var colorBlack = this.filterManager.effectElements[0].p.v;\r\n        var colorWhite = this.filterManager.effectElements[1].p.v;\r\n        var opacity = this.filterManager.effectElements[2].p.v/100;\r\n        this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');\r\n    }\r\n};\r\nfunction SVGFillFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n    feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\r\n    filter.appendChild(feColorMatrix);\r\n    this.matrixFilter = feColorMatrix;\r\n}\r\nSVGFillFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var color = this.filterManager.effectElements[2].p.v;\r\n        var opacity = this.filterManager.effectElements[6].p.v;\r\n        this.matrixFilter.setAttribute('values','0 0 0 0 '+color[0]+' 0 0 0 0 '+color[1]+' 0 0 0 0 '+color[2]+' 0 0 0 '+opacity+' 0');\r\n    }\r\n};\r\nfunction SVGStrokeEffect(elem, filterManager){\r\n    this.initialized = false;\r\n    this.filterManager = filterManager;\r\n    this.elem = elem;\r\n    this.paths = [];\r\n}\r\n\r\nSVGStrokeEffect.prototype.initialize = function(){\r\n\r\n    var elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\r\n    var path,groupPath, i, len;\r\n    if(this.filterManager.effectElements[1].p.v === 1){\r\n        len = this.elem.maskManager.masksProperties.length;\r\n        i = 0;\r\n    } else {\r\n        i = this.filterManager.effectElements[0].p.v - 1;\r\n        len = i + 1;\r\n    }\r\n    groupPath = createNS('g'); \r\n    groupPath.setAttribute('fill','none');\r\n    groupPath.setAttribute('stroke-linecap','round');\r\n    groupPath.setAttribute('stroke-dashoffset',1);\r\n    for(i;i<len;i+=1){\r\n        path = createNS('path');\r\n        groupPath.appendChild(path);\r\n        this.paths.push({p:path,m:i});\r\n    }\r\n    if(this.filterManager.effectElements[10].p.v === 3){\r\n        var mask = createNS('mask');\r\n        var id = 'stms_' + randomString(10);\r\n        mask.setAttribute('id',id);\r\n        mask.setAttribute('mask-type','alpha');\r\n        mask.appendChild(groupPath);\r\n        this.elem.globalData.defs.appendChild(mask);\r\n        var g = createNS('g');\r\n        g.setAttribute('mask','url(' + locationHref + '#'+id+')');\r\n        if(elemChildren[0]){\r\n            g.appendChild(elemChildren[0]);\r\n        }\r\n        this.elem.layerElement.appendChild(g);\r\n        this.masker = mask;\r\n        groupPath.setAttribute('stroke','#fff');\r\n    } else if(this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2){\r\n        if(this.filterManager.effectElements[10].p.v === 2){\r\n            elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\r\n            while(elemChildren.length){\r\n                this.elem.layerElement.removeChild(elemChildren[0]);\r\n            }\r\n        }\r\n        this.elem.layerElement.appendChild(groupPath);\r\n        this.elem.layerElement.removeAttribute('mask');\r\n        groupPath.setAttribute('stroke','#fff');\r\n    }\r\n    this.initialized = true;\r\n    this.pathMasker = groupPath;\r\n};\r\n\r\nSVGStrokeEffect.prototype.renderFrame = function(forceRender){\r\n    if(!this.initialized){\r\n        this.initialize();\r\n    }\r\n    var i, len = this.paths.length;\r\n    var mask, path;\r\n    for(i=0;i<len;i+=1){\r\n        mask = this.elem.maskManager.viewData[this.paths[i].m];\r\n        path = this.paths[i].p;\r\n        if(forceRender || this.filterManager._mdf || mask.prop._mdf){\r\n            path.setAttribute('d',mask.lastPath);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[9].p._mdf || this.filterManager.effectElements[4].p._mdf || this.filterManager.effectElements[7].p._mdf || this.filterManager.effectElements[8].p._mdf || mask.prop._mdf){\r\n            var dasharrayValue;\r\n            if(this.filterManager.effectElements[7].p.v !== 0 || this.filterManager.effectElements[8].p.v !== 100){\r\n                var s = Math.min(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)/100;\r\n                var e = Math.max(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)/100;\r\n                var l = path.getTotalLength();\r\n                dasharrayValue = '0 0 0 ' + l*s + ' ';\r\n                var lineLength = l*(e-s);\r\n                var segment = 1+this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100;\r\n                var units = Math.floor(lineLength/segment);\r\n                var j;\r\n                for(j=0;j<units;j+=1){\r\n                    dasharrayValue += '1 ' + this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100 + ' ';\r\n                }\r\n                dasharrayValue += '0 ' + l*10 + ' 0 0';\r\n            } else {\r\n                dasharrayValue = '1 ' + this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100;\r\n            }\r\n            path.setAttribute('stroke-dasharray',dasharrayValue);\r\n        }\r\n    }\r\n    if(forceRender || this.filterManager.effectElements[4].p._mdf){\r\n        this.pathMasker.setAttribute('stroke-width',this.filterManager.effectElements[4].p.v*2);\r\n    }\r\n    \r\n    if(forceRender || this.filterManager.effectElements[6].p._mdf){\r\n        this.pathMasker.setAttribute('opacity',this.filterManager.effectElements[6].p.v);\r\n    }\r\n    if(this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2){\r\n        if(forceRender || this.filterManager.effectElements[3].p._mdf){\r\n            var color = this.filterManager.effectElements[3].p.v;\r\n            this.pathMasker.setAttribute('stroke','rgb('+bm_floor(color[0]*255)+','+bm_floor(color[1]*255)+','+bm_floor(color[2]*255)+')');\r\n        }\r\n    }\r\n};\r\nfunction SVGTritoneFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','linearRGB');\r\n    feColorMatrix.setAttribute('values','0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f1');\r\n    filter.appendChild(feColorMatrix);\r\n    var feComponentTransfer = createNS('feComponentTransfer');\r\n    feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n    filter.appendChild(feComponentTransfer);\r\n    this.matrixFilter = feComponentTransfer;\r\n    var feFuncR = createNS('feFuncR');\r\n    feFuncR.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncR);\r\n    this.feFuncR = feFuncR;\r\n    var feFuncG = createNS('feFuncG');\r\n    feFuncG.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncG);\r\n    this.feFuncG = feFuncG;\r\n    var feFuncB = createNS('feFuncB');\r\n    feFuncB.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncB);\r\n    this.feFuncB = feFuncB;\r\n}\r\n\r\nSVGTritoneFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var color1 = this.filterManager.effectElements[0].p.v;\r\n        var color2 = this.filterManager.effectElements[1].p.v;\r\n        var color3 = this.filterManager.effectElements[2].p.v;\r\n        var tableR = color3[0] + ' ' + color2[0] + ' ' + color1[0];\r\n        var tableG = color3[1] + ' ' + color2[1] + ' ' + color1[1];\r\n        var tableB = color3[2] + ' ' + color2[2] + ' ' + color1[2];\r\n        this.feFuncR.setAttribute('tableValues', tableR);\r\n        this.feFuncG.setAttribute('tableValues', tableG);\r\n        this.feFuncB.setAttribute('tableValues', tableB);\r\n        //var opacity = this.filterManager.effectElements[2].p.v/100;\r\n        //this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');\r\n    }\r\n};\r\nfunction SVGProLevelsFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var effectElements = this.filterManager.effectElements;\r\n    var feComponentTransfer = createNS('feComponentTransfer');\r\n    var feFuncR, feFuncG, feFuncB;\r\n    \r\n    if(effectElements[10].p.k || effectElements[10].p.v !== 0 || effectElements[11].p.k || effectElements[11].p.v !== 1 || effectElements[12].p.k || effectElements[12].p.v !== 1 || effectElements[13].p.k || effectElements[13].p.v !== 0 || effectElements[14].p.k || effectElements[14].p.v !== 1){\r\n        this.feFuncR = this.createFeFunc('feFuncR', feComponentTransfer);\r\n    }\r\n    if(effectElements[17].p.k || effectElements[17].p.v !== 0 || effectElements[18].p.k || effectElements[18].p.v !== 1 || effectElements[19].p.k || effectElements[19].p.v !== 1 || effectElements[20].p.k || effectElements[20].p.v !== 0 || effectElements[21].p.k || effectElements[21].p.v !== 1){\r\n        this.feFuncG = this.createFeFunc('feFuncG', feComponentTransfer);\r\n    }\r\n    if(effectElements[24].p.k || effectElements[24].p.v !== 0 || effectElements[25].p.k || effectElements[25].p.v !== 1 || effectElements[26].p.k || effectElements[26].p.v !== 1 || effectElements[27].p.k || effectElements[27].p.v !== 0 || effectElements[28].p.k || effectElements[28].p.v !== 1){\r\n        this.feFuncB = this.createFeFunc('feFuncB', feComponentTransfer);\r\n    }\r\n    if(effectElements[31].p.k || effectElements[31].p.v !== 0 || effectElements[32].p.k || effectElements[32].p.v !== 1 || effectElements[33].p.k || effectElements[33].p.v !== 1 || effectElements[34].p.k || effectElements[34].p.v !== 0 || effectElements[35].p.k || effectElements[35].p.v !== 1){\r\n        this.feFuncA = this.createFeFunc('feFuncA', feComponentTransfer);\r\n    }\r\n    \r\n    if(this.feFuncR || this.feFuncG || this.feFuncB || this.feFuncA){\r\n        feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n        filter.appendChild(feComponentTransfer);\r\n        feComponentTransfer = createNS('feComponentTransfer');\r\n    }\r\n\r\n    if(effectElements[3].p.k || effectElements[3].p.v !== 0 || effectElements[4].p.k || effectElements[4].p.v !== 1 || effectElements[5].p.k || effectElements[5].p.v !== 1 || effectElements[6].p.k || effectElements[6].p.v !== 0 || effectElements[7].p.k || effectElements[7].p.v !== 1){\r\n\r\n        feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n        filter.appendChild(feComponentTransfer);\r\n        this.feFuncRComposed = this.createFeFunc('feFuncR', feComponentTransfer);\r\n        this.feFuncGComposed = this.createFeFunc('feFuncG', feComponentTransfer);\r\n        this.feFuncBComposed = this.createFeFunc('feFuncB', feComponentTransfer);\r\n    }\r\n}\r\n\r\nSVGProLevelsFilter.prototype.createFeFunc = function(type, feComponentTransfer) {\r\n    var feFunc = createNS(type);\r\n    feFunc.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFunc);\r\n    return feFunc;\r\n};\r\n\r\nSVGProLevelsFilter.prototype.getTableValue = function(inputBlack, inputWhite, gamma, outputBlack, outputWhite) {\r\n    var cnt = 0;\r\n    var segments = 256;\r\n    var perc;\r\n    var min = Math.min(inputBlack, inputWhite);\r\n    var max = Math.max(inputBlack, inputWhite);\r\n    var table = Array.call(null,{length:segments});\r\n    var colorValue;\r\n    var pos = 0;\r\n    var outputDelta = outputWhite - outputBlack; \r\n    var inputDelta = inputWhite - inputBlack; \r\n    while(cnt <= 256) {\r\n        perc = cnt/256;\r\n        if(perc <= min){\r\n            colorValue = inputDelta < 0 ? outputWhite : outputBlack;\r\n        } else if(perc >= max){\r\n            colorValue = inputDelta < 0 ? outputBlack : outputWhite;\r\n        } else {\r\n            colorValue = (outputBlack + outputDelta * Math.pow((perc - inputBlack) / inputDelta, 1 / gamma));\r\n        }\r\n        table[pos++] = colorValue;\r\n        cnt += 256/(segments-1);\r\n    }\r\n    return table.join(' ');\r\n};\r\n\r\nSVGProLevelsFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var val, cnt, perc, bezier;\r\n        var effectElements = this.filterManager.effectElements;\r\n        if(this.feFuncRComposed && (forceRender || effectElements[3].p._mdf || effectElements[4].p._mdf || effectElements[5].p._mdf || effectElements[6].p._mdf || effectElements[7].p._mdf)){\r\n            val = this.getTableValue(effectElements[3].p.v,effectElements[4].p.v,effectElements[5].p.v,effectElements[6].p.v,effectElements[7].p.v);\r\n            this.feFuncRComposed.setAttribute('tableValues',val);\r\n            this.feFuncGComposed.setAttribute('tableValues',val);\r\n            this.feFuncBComposed.setAttribute('tableValues',val);\r\n        }\r\n\r\n\r\n        if(this.feFuncR && (forceRender || effectElements[10].p._mdf || effectElements[11].p._mdf || effectElements[12].p._mdf || effectElements[13].p._mdf || effectElements[14].p._mdf)){\r\n            val = this.getTableValue(effectElements[10].p.v,effectElements[11].p.v,effectElements[12].p.v,effectElements[13].p.v,effectElements[14].p.v);\r\n            this.feFuncR.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncG && (forceRender || effectElements[17].p._mdf || effectElements[18].p._mdf || effectElements[19].p._mdf || effectElements[20].p._mdf || effectElements[21].p._mdf)){\r\n            val = this.getTableValue(effectElements[17].p.v,effectElements[18].p.v,effectElements[19].p.v,effectElements[20].p.v,effectElements[21].p.v);\r\n            this.feFuncG.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncB && (forceRender || effectElements[24].p._mdf || effectElements[25].p._mdf || effectElements[26].p._mdf || effectElements[27].p._mdf || effectElements[28].p._mdf)){\r\n            val = this.getTableValue(effectElements[24].p.v,effectElements[25].p.v,effectElements[26].p.v,effectElements[27].p.v,effectElements[28].p.v);\r\n            this.feFuncB.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncA && (forceRender || effectElements[31].p._mdf || effectElements[32].p._mdf || effectElements[33].p._mdf || effectElements[34].p._mdf || effectElements[35].p._mdf)){\r\n            val = this.getTableValue(effectElements[31].p.v,effectElements[32].p.v,effectElements[33].p.v,effectElements[34].p.v,effectElements[35].p.v);\r\n            this.feFuncA.setAttribute('tableValues',val);\r\n        }\r\n        \r\n    }\r\n};\r\nfunction SVGDropShadowEffect(filter, filterManager){\r\n    filter.setAttribute('x','-100%');\r\n    filter.setAttribute('y','-100%');\r\n    filter.setAttribute('width','400%');\r\n    filter.setAttribute('height','400%');\r\n    this.filterManager = filterManager;\r\n\r\n    var feGaussianBlur = createNS('feGaussianBlur');\r\n    feGaussianBlur.setAttribute('in','SourceAlpha');\r\n    feGaussianBlur.setAttribute('result','drop_shadow_1');\r\n    feGaussianBlur.setAttribute('stdDeviation','0');\r\n    this.feGaussianBlur = feGaussianBlur;\r\n    filter.appendChild(feGaussianBlur);\r\n\r\n    var feOffset = createNS('feOffset');\r\n    feOffset.setAttribute('dx','25');\r\n    feOffset.setAttribute('dy','0');\r\n    feOffset.setAttribute('in','drop_shadow_1');\r\n    feOffset.setAttribute('result','drop_shadow_2');\r\n    this.feOffset = feOffset;\r\n    filter.appendChild(feOffset);\r\n    var feFlood = createNS('feFlood');\r\n    feFlood.setAttribute('flood-color','#00ff00');\r\n    feFlood.setAttribute('flood-opacity','1');\r\n    feFlood.setAttribute('result','drop_shadow_3');\r\n    this.feFlood = feFlood;\r\n    filter.appendChild(feFlood);\r\n\r\n    var feComposite = createNS('feComposite');\r\n    feComposite.setAttribute('in','drop_shadow_3');\r\n    feComposite.setAttribute('in2','drop_shadow_2');\r\n    feComposite.setAttribute('operator','in');\r\n    feComposite.setAttribute('result','drop_shadow_4');\r\n    filter.appendChild(feComposite);\r\n\r\n\r\n    var feMerge = createNS('feMerge');\r\n    filter.appendChild(feMerge);\r\n    var feMergeNode;\r\n    feMergeNode = createNS('feMergeNode');\r\n    feMerge.appendChild(feMergeNode);\r\n    feMergeNode = createNS('feMergeNode');\r\n    feMergeNode.setAttribute('in','SourceGraphic');\r\n    this.feMergeNode = feMergeNode;\r\n    this.feMerge = feMerge;\r\n    this.originalNodeAdded = false;\r\n    feMerge.appendChild(feMergeNode);\r\n}\r\n\r\nSVGDropShadowEffect.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        if(forceRender || this.filterManager.effectElements[4].p._mdf){\r\n            this.feGaussianBlur.setAttribute('stdDeviation', this.filterManager.effectElements[4].p.v / 4);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[0].p._mdf){\r\n            var col = this.filterManager.effectElements[0].p.v;\r\n            this.feFlood.setAttribute('flood-color',rgbToHex(Math.round(col[0]*255),Math.round(col[1]*255),Math.round(col[2]*255)));\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[1].p._mdf){\r\n            this.feFlood.setAttribute('flood-opacity',this.filterManager.effectElements[1].p.v/255);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[2].p._mdf || this.filterManager.effectElements[3].p._mdf){\r\n            var distance = this.filterManager.effectElements[3].p.v;\r\n            var angle = (this.filterManager.effectElements[2].p.v - 90) * degToRads;\r\n            var x = distance * Math.cos(angle);\r\n            var y = distance * Math.sin(angle);\r\n            this.feOffset.setAttribute('dx', x);\r\n            this.feOffset.setAttribute('dy', y);\r\n        }\r\n        /*if(forceRender || this.filterManager.effectElements[5].p._mdf){\r\n            if(this.filterManager.effectElements[5].p.v === 1 && this.originalNodeAdded) {\r\n                this.feMerge.removeChild(this.feMergeNode);\r\n                this.originalNodeAdded = false;\r\n            } else if(this.filterManager.effectElements[5].p.v === 0 && !this.originalNodeAdded) {\r\n                this.feMerge.appendChild(this.feMergeNode);\r\n                this.originalNodeAdded = true;\r\n            }\r\n        }*/\r\n    }\r\n};\r\nvar _svgMatteSymbols = [];\r\nvar _svgMatteMaskCounter = 0;\r\n\r\nfunction SVGMatte3Effect(filterElem, filterManager, elem){\r\n    this.initialized = false;\r\n    this.filterManager = filterManager;\r\n    this.filterElem = filterElem;\r\n    this.elem = elem;\r\n    elem.matteElement = createNS('g');\r\n    elem.matteElement.appendChild(elem.layerElement);\r\n    elem.matteElement.appendChild(elem.transformedElement);\r\n    elem.baseElement = elem.matteElement;\r\n}\r\n\r\nSVGMatte3Effect.prototype.findSymbol = function(mask) {\r\n    var i = 0, len = _svgMatteSymbols.length;\r\n    while(i < len) {\r\n        if(_svgMatteSymbols[i] === mask) {\r\n            return _svgMatteSymbols[i];\r\n        }\r\n        i += 1;\r\n    }\r\n    return null;\r\n};\r\n\r\nSVGMatte3Effect.prototype.replaceInParent = function(mask, symbolId) {\r\n    var parentNode = mask.layerElement.parentNode;\r\n    if(!parentNode) {\r\n        return;\r\n    }\r\n    var children = parentNode.children;\r\n    var i = 0, len = children.length;\r\n    while (i < len) {\r\n        if (children[i] === mask.layerElement) {\r\n            break;\r\n        }\r\n        i += 1;\r\n    }\r\n    var nextChild;\r\n    if (i <= len - 2) {\r\n        nextChild = children[i + 1];\r\n    }\r\n    var useElem = createNS('use');\r\n    useElem.setAttribute('href', '#' + symbolId);\r\n    if(nextChild) {\r\n        parentNode.insertBefore(useElem, nextChild);\r\n    } else {\r\n        parentNode.appendChild(useElem);\r\n    }\r\n};\r\n\r\nSVGMatte3Effect.prototype.setElementAsMask = function(elem, mask) {\r\n    if(!this.findSymbol(mask)) {\r\n        var symbolId = 'matte_' + randomString(5) + '_' + _svgMatteMaskCounter++;\r\n        var masker = createNS('mask');\r\n        masker.setAttribute('id', mask.layerId);\r\n        masker.setAttribute('mask-type', 'alpha');\r\n        _svgMatteSymbols.push(mask);\r\n        var defs = elem.globalData.defs;\r\n        defs.appendChild(masker);\r\n        var symbol = createNS('symbol');\r\n        symbol.setAttribute('id', symbolId);\r\n        this.replaceInParent(mask, symbolId);\r\n        symbol.appendChild(mask.layerElement);\r\n        defs.appendChild(symbol);\r\n        useElem = createNS('use');\r\n        useElem.setAttribute('href', '#' + symbolId);\r\n        masker.appendChild(useElem);\r\n        mask.data.hd = false;\r\n        mask.show();\r\n    }\r\n    elem.setMatte(mask.layerId);\r\n};\r\n\r\nSVGMatte3Effect.prototype.initialize = function() {\r\n    var ind = this.filterManager.effectElements[0].p.v;\r\n    var i = 0, len = this.elem.comp.elements.length;\r\n    while (i < len) {\r\n    \tif (this.elem.comp.elements[i].data.ind === ind) {\r\n    \t\tthis.setElementAsMask(this.elem, this.elem.comp.elements[i]);\r\n    \t}\r\n    \ti += 1;\r\n    }\r\n    this.initialized = true;\r\n};\r\n\r\nSVGMatte3Effect.prototype.renderFrame = function() {\r\n\tif(!this.initialized) {\r\n\t\tthis.initialize();\r\n\t}\r\n};\r\nfunction SVGEffects(elem){\r\n    var i, len = elem.data.ef ? elem.data.ef.length : 0;\r\n    var filId = randomString(10);\r\n    var fil = filtersFactory.createFilter(filId);\r\n    var count = 0;\r\n    this.filters = [];\r\n    var filterManager;\r\n    for(i=0;i<len;i+=1){\r\n        filterManager = null;\r\n        if(elem.data.ef[i].ty === 20){\r\n            count += 1;\r\n            filterManager = new SVGTintFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 21){\r\n            count += 1;\r\n            filterManager = new SVGFillFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 22){\r\n            filterManager = new SVGStrokeEffect(elem, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 23){\r\n            count += 1;\r\n            filterManager = new SVGTritoneFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 24){\r\n            count += 1;\r\n            filterManager = new SVGProLevelsFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 25){\r\n            count += 1;\r\n            filterManager = new SVGDropShadowEffect(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 28){\r\n            //count += 1;\r\n            filterManager = new SVGMatte3Effect(fil, elem.effectsManager.effectElements[i], elem);\r\n        }\r\n        if(filterManager) {\r\n            this.filters.push(filterManager);\r\n        }\r\n    }\r\n    if(count){\r\n        elem.globalData.defs.appendChild(fil);\r\n        elem.layerElement.setAttribute('filter','url(' + locationHref + '#'+filId+')');\r\n    }\r\n}\r\n\r\nSVGEffects.prototype.renderFrame = function(_isFirstFrame){\r\n    var i, len = this.filters.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.filters[i].renderFrame(_isFirstFrame);\r\n    }\r\n};\r\nvar animationManager = (function(){\r\n    var moduleOb = {};\r\n    var registeredAnimations = [];\r\n    var initTime = 0;\r\n    var len = 0;\r\n    var idled = true;\r\n    var playingAnimationsNum = 0;\r\n    var _stopped = true;\r\n\r\n    function removeElement(ev){\r\n        var i = 0;\r\n        var animItem = ev.target;\r\n        while(i<len) {\r\n            if (registeredAnimations[i].animation === animItem) {\r\n                registeredAnimations.splice(i, 1);\r\n                i -= 1;\r\n                len -= 1;\r\n                if(!animItem.isPaused){\r\n                    subtractPlayingCount();\r\n                }\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    function registerAnimation(element, animationData){\r\n        if(!element){\r\n            return null;\r\n        }\r\n        var i=0;\r\n        while(i<len){\r\n            if(registeredAnimations[i].elem == element && registeredAnimations[i].elem !== null ){\r\n                return registeredAnimations[i].animation;\r\n            }\r\n            i+=1;\r\n        }\r\n        var animItem = new AnimationItem();\r\n        setupAnimation(animItem, element);\r\n        animItem.setData(element, animationData);\r\n        return animItem;\r\n    }\r\n\r\n    function addPlayingCount(){\r\n        playingAnimationsNum += 1;\r\n        activate();\r\n    }\r\n\r\n    function subtractPlayingCount(){\r\n        playingAnimationsNum -= 1;\r\n        if(playingAnimationsNum === 0){\r\n            idled = true;\r\n        }\r\n    }\r\n\r\n    function setupAnimation(animItem, element){\r\n        animItem.addEventListener('destroy',removeElement);\r\n        animItem.addEventListener('_active',addPlayingCount);\r\n        animItem.addEventListener('_idle',subtractPlayingCount);\r\n        registeredAnimations.push({elem: element,animation:animItem});\r\n        len += 1;\r\n    }\r\n\r\n    function loadAnimation(params){\r\n        var animItem = new AnimationItem();\r\n        setupAnimation(animItem, null);\r\n        animItem.setParams(params);\r\n        return animItem;\r\n    }\r\n\r\n\r\n    function setSpeed(val,animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.setSpeed(val, animation);\r\n        }\r\n    }\r\n\r\n    function setDirection(val, animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.setDirection(val, animation);\r\n        }\r\n    }\r\n\r\n    function play(animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.play(animation);\r\n        }\r\n    }\r\n    function resume(nowTime) {\r\n        var elapsedTime = nowTime - initTime;\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.advanceTime(elapsedTime);\r\n        }\r\n        initTime = nowTime;\r\n        if(!idled) {\r\n            window.requestAnimationFrame(resume);\r\n        } else {\r\n            _stopped = true;\r\n        }\r\n    }\r\n\r\n    function first(nowTime){\r\n        initTime = nowTime;\r\n        window.requestAnimationFrame(resume);\r\n    }\r\n\r\n    function pause(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.pause(animation);\r\n        }\r\n    }\r\n\r\n    function goToAndStop(value,isFrame,animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.goToAndStop(value,isFrame,animation);\r\n        }\r\n    }\r\n\r\n    function stop(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.stop(animation);\r\n        }\r\n    }\r\n\r\n    function togglePause(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.togglePause(animation);\r\n        }\r\n    }\r\n\r\n    function destroy(animation) {\r\n        var i;\r\n        for(i=(len-1);i>=0;i-=1){\r\n            registeredAnimations[i].animation.destroy(animation);\r\n        }\r\n    }\r\n\r\n    function searchAnimations(animationData, standalone, renderer){\r\n        var animElements = [].concat([].slice.call(document.getElementsByClassName('lottie')),\r\n                  [].slice.call(document.getElementsByClassName('bodymovin')));\r\n        var i, len = animElements.length;\r\n        for(i=0;i<len;i+=1){\r\n            if(renderer){\r\n                animElements[i].setAttribute('data-bm-type',renderer);\r\n            }\r\n            registerAnimation(animElements[i], animationData);\r\n        }\r\n        if(standalone && len === 0){\r\n            if(!renderer){\r\n                renderer = 'svg';\r\n            }\r\n            var body = document.getElementsByTagName('body')[0];\r\n            body.innerHTML = '';\r\n            var div = createTag('div');\r\n            div.style.width = '100%';\r\n            div.style.height = '100%';\r\n            div.setAttribute('data-bm-type',renderer);\r\n            body.appendChild(div);\r\n            registerAnimation(div, animationData);\r\n        }\r\n    }\r\n\r\n    function resize(){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.resize();\r\n        }\r\n    }\r\n\r\n    /*function start(){\r\n        window.requestAnimationFrame(first);\r\n    }*/\r\n\r\n    function activate(){\r\n        if(idled){\r\n            idled = false;\r\n            if(_stopped) {\r\n                window.requestAnimationFrame(first);\r\n                _stopped = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    //start();\r\n\r\n    //setTimeout(start,0);\r\n\r\n    moduleOb.registerAnimation = registerAnimation;\r\n    moduleOb.loadAnimation = loadAnimation;\r\n    moduleOb.setSpeed = setSpeed;\r\n    moduleOb.setDirection = setDirection;\r\n    moduleOb.play = play;\r\n    moduleOb.pause = pause;\r\n    moduleOb.stop = stop;\r\n    moduleOb.togglePause = togglePause;\r\n    moduleOb.searchAnimations = searchAnimations;\r\n    moduleOb.resize = resize;\r\n    //moduleOb.start = start;\r\n    moduleOb.goToAndStop = goToAndStop;\r\n    moduleOb.destroy = destroy;\r\n    return moduleOb;\r\n}());\r\n\r\nvar AnimationItem = function () {\r\n    this._cbs = [];\r\n    this.name = '';\r\n    this.path = '';\r\n    this.isLoaded = false;\r\n    this.currentFrame = 0;\r\n    this.currentRawFrame = 0;\r\n    this.totalFrames = 0;\r\n    this.frameRate = 0;\r\n    this.frameMult = 0;\r\n    this.playSpeed = 1;\r\n    this.playDirection = 1;\r\n    this.pendingElements = 0;\r\n    this.playCount = 0;\r\n    this.animationData = {};\r\n    this.layers = [];\r\n    this.assets = [];\r\n    this.isPaused = true;\r\n    this.autoplay = false;\r\n    this.loop = true;\r\n    this.renderer = null;\r\n    this.animationID = randomString(10);\r\n    this.assetsPath = '';\r\n    this.timeCompleted = 0;\r\n    this.segmentPos = 0;\r\n    this.subframeEnabled = subframeEnabled;\r\n    this.segments = [];\r\n    this._idle = true;\r\n    this.projectInterface = ProjectInterface();\r\n};\r\n\r\nextendPrototype([BaseEvent], AnimationItem);\r\n\r\nAnimationItem.prototype.setParams = function(params) {\r\n    var self = this;\r\n    if(params.context){\r\n        this.context = params.context;\r\n    }\r\n    if(params.wrapper || params.container){\r\n        this.wrapper = params.wrapper || params.container;\r\n    }\r\n    var animType = params.animType ? params.animType : params.renderer ? params.renderer : 'svg';\r\n    switch(animType){\r\n        case 'canvas':\r\n            this.renderer = new CanvasRenderer(this, params.rendererSettings);\r\n            break;\r\n        case 'svg':\r\n            this.renderer = new SVGRenderer(this, params.rendererSettings);\r\n            break;\r\n        default:\r\n            this.renderer = new HybridRenderer(this, params.rendererSettings);\r\n            break;\r\n    }\r\n    this.renderer.setProjectInterface(this.projectInterface);\r\n    this.animType = animType;\r\n\r\n    if(params.loop === '' || params.loop === null){\r\n    }else if(params.loop === false){\r\n        this.loop = false;\r\n    }else if(params.loop === true){\r\n        this.loop = true;\r\n    }else{\r\n        this.loop = parseInt(params.loop);\r\n    }\r\n    this.autoplay = 'autoplay' in params ? params.autoplay : true;\r\n    this.name = params.name ? params.name :  '';\r\n    this.autoloadSegments = params.hasOwnProperty('autoloadSegments') ? params.autoloadSegments :  true;\r\n    if(params.animationData){\r\n        self.configAnimation(params.animationData);\r\n    }else if(params.path){\r\n        if(params.path.substr(-4) != 'json'){\r\n            if (params.path.substr(-1, 1) != '/') {\r\n                params.path += '/';\r\n            }\r\n            params.path += 'data.json';\r\n        }\r\n\r\n        var xhr = new XMLHttpRequest();\r\n        if(params.path.lastIndexOf('\\\\') != -1){\r\n            this.path = params.path.substr(0,params.path.lastIndexOf('\\\\')+1);\r\n        }else{\r\n            this.path = params.path.substr(0,params.path.lastIndexOf('/')+1);\r\n        }\r\n        this.assetsPath = params.assetsPath;\r\n        this.fileName = params.path.substr(params.path.lastIndexOf('/')+1);\r\n        this.fileName = this.fileName.substr(0,this.fileName.lastIndexOf('.json'));\r\n        xhr.open('GET', params.path, true);\r\n        xhr.send();\r\n        xhr.onreadystatechange = function () {\r\n            if (xhr.readyState == 4) {\r\n                if(xhr.status == 200){\r\n                    self.configAnimation(JSON.parse(xhr.responseText));\r\n                }else{\r\n                    try{\r\n                        var response = JSON.parse(xhr.responseText);\r\n                        self.configAnimation(response);\r\n                    }catch(err){\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.setData = function (wrapper, animationData) {\r\n    var params = {\r\n        wrapper: wrapper,\r\n        animationData: animationData ? (typeof animationData  === \"object\") ? animationData : JSON.parse(animationData) : null\r\n    };\r\n    var wrapperAttributes = wrapper.attributes;\r\n\r\n    params.path = wrapperAttributes.getNamedItem('data-animation-path') ? wrapperAttributes.getNamedItem('data-animation-path').value : wrapperAttributes.getNamedItem('data-bm-path') ? wrapperAttributes.getNamedItem('data-bm-path').value :  wrapperAttributes.getNamedItem('bm-path') ? wrapperAttributes.getNamedItem('bm-path').value : '';\r\n    params.animType = wrapperAttributes.getNamedItem('data-anim-type') ? wrapperAttributes.getNamedItem('data-anim-type').value : wrapperAttributes.getNamedItem('data-bm-type') ? wrapperAttributes.getNamedItem('data-bm-type').value : wrapperAttributes.getNamedItem('bm-type') ? wrapperAttributes.getNamedItem('bm-type').value :  wrapperAttributes.getNamedItem('data-bm-renderer') ? wrapperAttributes.getNamedItem('data-bm-renderer').value : wrapperAttributes.getNamedItem('bm-renderer') ? wrapperAttributes.getNamedItem('bm-renderer').value : 'canvas';\r\n\r\n    var loop = wrapperAttributes.getNamedItem('data-anim-loop') ? wrapperAttributes.getNamedItem('data-anim-loop').value :  wrapperAttributes.getNamedItem('data-bm-loop') ? wrapperAttributes.getNamedItem('data-bm-loop').value :  wrapperAttributes.getNamedItem('bm-loop') ? wrapperAttributes.getNamedItem('bm-loop').value : '';\r\n    if(loop === ''){\r\n    }else if(loop === 'false'){\r\n        params.loop = false;\r\n    }else if(loop === 'true'){\r\n        params.loop = true;\r\n    }else{\r\n        params.loop = parseInt(loop);\r\n    }\r\n    var autoplay = wrapperAttributes.getNamedItem('data-anim-autoplay') ? wrapperAttributes.getNamedItem('data-anim-autoplay').value :  wrapperAttributes.getNamedItem('data-bm-autoplay') ? wrapperAttributes.getNamedItem('data-bm-autoplay').value :  wrapperAttributes.getNamedItem('bm-autoplay') ? wrapperAttributes.getNamedItem('bm-autoplay').value : true;\r\n    params.autoplay = autoplay !== \"false\";\r\n\r\n    params.name = wrapperAttributes.getNamedItem('data-name') ? wrapperAttributes.getNamedItem('data-name').value :  wrapperAttributes.getNamedItem('data-bm-name') ? wrapperAttributes.getNamedItem('data-bm-name').value : wrapperAttributes.getNamedItem('bm-name') ? wrapperAttributes.getNamedItem('bm-name').value :  '';\r\n    var prerender = wrapperAttributes.getNamedItem('data-anim-prerender') ? wrapperAttributes.getNamedItem('data-anim-prerender').value :  wrapperAttributes.getNamedItem('data-bm-prerender') ? wrapperAttributes.getNamedItem('data-bm-prerender').value :  wrapperAttributes.getNamedItem('bm-prerender') ? wrapperAttributes.getNamedItem('bm-prerender').value : '';\r\n\r\n    if(prerender === 'false'){\r\n        params.prerender = false;\r\n    }\r\n    this.setParams(params);\r\n};\r\n\r\nAnimationItem.prototype.includeLayers = function(data) {\r\n    if(data.op > this.animationData.op){\r\n        this.animationData.op = data.op;\r\n        this.totalFrames = Math.floor(data.op - this.animationData.ip);\r\n        this.animationData.tf = this.totalFrames;\r\n    }\r\n    var layers = this.animationData.layers;\r\n    var i, len = layers.length;\r\n    var newLayers = data.layers;\r\n    var j, jLen = newLayers.length;\r\n    for(j=0;j<jLen;j+=1){\r\n        i = 0;\r\n        while(i<len){\r\n            if(layers[i].id == newLayers[j].id){\r\n                layers[i] = newLayers[j];\r\n                break;\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n    if(data.chars || data.fonts){\r\n        this.renderer.globalData.fontManager.addChars(data.chars);\r\n        this.renderer.globalData.fontManager.addFonts(data.fonts, this.renderer.globalData.defs);\r\n    }\r\n    if(data.assets){\r\n        len = data.assets.length;\r\n        for(i = 0; i < len; i += 1){\r\n            this.animationData.assets.push(data.assets[i]);\r\n        }\r\n    }\r\n    //this.totalFrames = 50;\r\n    //this.animationData.tf = 50;\r\n    this.animationData.__complete = false;\r\n    dataManager.completeData(this.animationData,this.renderer.globalData.fontManager);\r\n    this.renderer.includeLayers(data.layers);\r\n    if(expressionsPlugin){\r\n        expressionsPlugin.initExpressions(this);\r\n    }\r\n    this.renderer.renderFrame(-1);\r\n    this.loadNextSegment();\r\n};\r\n\r\nAnimationItem.prototype.loadNextSegment = function() {\r\n    var segments = this.animationData.segments;\r\n    if(!segments || segments.length === 0 || !this.autoloadSegments){\r\n        this.trigger('data_ready');\r\n        this.timeCompleted = this.animationData.tf;\r\n        return;\r\n    }\r\n    var segment = segments.shift();\r\n    this.timeCompleted = segment.time * this.frameRate;\r\n    var xhr = new XMLHttpRequest();\r\n    var self = this;\r\n    var segmentPath = this.path+this.fileName+'_' + this.segmentPos + '.json';\r\n    this.segmentPos += 1;\r\n    xhr.open('GET', segmentPath, true);\r\n    xhr.send();\r\n    xhr.onreadystatechange = function () {\r\n        if (xhr.readyState == 4) {\r\n            if(xhr.status == 200){\r\n                self.includeLayers(JSON.parse(xhr.responseText));\r\n            }else{\r\n                try{\r\n                    var response = JSON.parse(xhr.responseText);\r\n                    self.includeLayers(response);\r\n                }catch(err){\r\n                }\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\nAnimationItem.prototype.loadSegments = function() {\r\n    var segments = this.animationData.segments;\r\n    if(!segments) {\r\n        this.timeCompleted = this.animationData.tf;\r\n    }\r\n    this.loadNextSegment();\r\n};\r\n\r\nAnimationItem.prototype.configAnimation = function (animData) {\r\n    var _this = this;\r\n    if(this.renderer && this.renderer.destroyed){\r\n        return;\r\n    }\r\n    //console.log(JSON.parse(JSON.stringify(animData)));\r\n    //animData.w = Math.round(animData.w/blitter);\r\n    //animData.h = Math.round(animData.h/blitter);\r\n    this.animationData = animData;\r\n    this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip);\r\n    this.animationData.tf = this.totalFrames;\r\n    this.renderer.configAnimation(animData);\r\n    if(!animData.assets){\r\n        animData.assets = [];\r\n    }\r\n    if(animData.comps) {\r\n        animData.assets = animData.assets.concat(animData.comps);\r\n        animData.comps = null;\r\n    }\r\n    this.renderer.searchExtraCompositions(animData.assets);\r\n\r\n    this.layers = this.animationData.layers;\r\n    this.assets = this.animationData.assets;\r\n    this.frameRate = this.animationData.fr;\r\n    this.firstFrame = Math.round(this.animationData.ip);\r\n    this.frameMult = this.animationData.fr / 1000;\r\n    this.trigger('config_ready');\r\n    this.imagePreloader = new ImagePreloader();\r\n    this.imagePreloader.setAssetsPath(this.assetsPath);\r\n    this.imagePreloader.setPath(this.path);\r\n    this.imagePreloader.loadAssets(animData.assets, function(err) {\r\n        if(!err) {\r\n            _this.trigger('loaded_images');\r\n        }\r\n    });\r\n    this.loadSegments();\r\n    this.updaFrameModifier();\r\n    if(this.renderer.globalData.fontManager){\r\n        this.waitForFontsLoaded();\r\n    }else{\r\n        dataManager.completeData(this.animationData,this.renderer.globalData.fontManager);\r\n        this.checkLoaded();\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.waitForFontsLoaded = (function(){\r\n    function checkFontsLoaded(){\r\n        if(this.renderer.globalData.fontManager.loaded){\r\n            dataManager.completeData(this.animationData,this.renderer.globalData.fontManager);\r\n            //this.renderer.buildItems(this.animationData.layers);\r\n            this.checkLoaded();\r\n        }else{\r\n            setTimeout(checkFontsLoaded.bind(this),20);\r\n        }\r\n    }\r\n\r\n    return function(){\r\n        checkFontsLoaded.bind(this)();\r\n    };\r\n}());\r\n\r\nAnimationItem.prototype.addPendingElement = function () {\r\n    this.pendingElements += 1;\r\n};\r\n\r\nAnimationItem.prototype.elementLoaded = function () {\r\n    this.pendingElements--;\r\n    this.checkLoaded();\r\n};\r\n\r\nAnimationItem.prototype.checkLoaded = function () {\r\n    if (this.pendingElements === 0) {\r\n        if(expressionsPlugin){\r\n            expressionsPlugin.initExpressions(this);\r\n        }\r\n        this.renderer.initItems();\r\n        setTimeout(function(){\r\n            this.trigger('DOMLoaded');\r\n        }.bind(this),0);\r\n        this.isLoaded = true;\r\n        this.gotoFrame();\r\n        if(this.autoplay){\r\n            this.play();\r\n        }\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.resize = function () {\r\n    this.renderer.updateContainerSize();\r\n};\r\n\r\nAnimationItem.prototype.setSubframe = function(flag){\r\n    this.subframeEnabled = flag ? true : false;\r\n};\r\n\r\nAnimationItem.prototype.gotoFrame = function () {\r\n    this.currentFrame = this.subframeEnabled ? this.currentRawFrame : ~~this.currentRawFrame;\r\n\r\n    if(this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted){\r\n        this.currentFrame = this.timeCompleted;\r\n    }\r\n    //console.log(this.currentFrame)\r\n    this.trigger('enterFrame');\r\n    // console.log('gotoFrame: ', this.currentFrame )\r\n    this.renderFrame();\r\n};\r\n\r\nAnimationItem.prototype.renderFrame = function () {\r\n    if(this.isLoaded === false){\r\n        return;\r\n    }\r\n    //console.log('this.currentFrame:',this.currentFrame + this.firstFrame);\r\n    this.renderer.renderFrame(this.currentFrame + this.firstFrame);\r\n};\r\n\r\nAnimationItem.prototype.play = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === true){\r\n        this.isPaused = false;\r\n        if(this._idle){\r\n            this._idle = false;\r\n            this.trigger('_active');\r\n        }\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.pause = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === false){\r\n        this.isPaused = true;\r\n        this._idle = true;\r\n        this.trigger('_idle');\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.togglePause = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === true){\r\n        this.play();\r\n    }else{\r\n        this.pause();\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.stop = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    this.pause();\r\n    this.playCount = 0;\r\n    this.setCurrentRawFrameValue(0);\r\n};\r\n\r\nAnimationItem.prototype.goToAndStop = function (value, isFrame, name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(isFrame){\r\n        this.setCurrentRawFrameValue(value);\r\n    }else{\r\n        this.setCurrentRawFrameValue(value * this.frameModifier);\r\n    }\r\n    this.pause();\r\n};\r\n\r\nAnimationItem.prototype.goToAndPlay = function (value, isFrame, name) {\r\n    this.goToAndStop(value, isFrame, name);\r\n    this.play();\r\n};\r\n\r\nAnimationItem.prototype.advanceTime = function (value) {\r\n    if (this.isPaused === true || this.isLoaded === false) {\r\n        return;\r\n    }\r\n    var nextValue = this.currentRawFrame + value * this.frameModifier;\r\n    var _isComplete = false;\r\n    // Checking if nextValue > totalFrames - 1 for addressing non looping and looping animations.\r\n    // If animation won't loop, it should stop at totalFrames - 1. If it will loop it should complete the last frame and then loop.\r\n    if (nextValue >= this.totalFrames - 1 && this.frameModifier > 0) {\r\n        if (!this.loop || this.playCount === this.loop) {\r\n            if (!this.checkSegments(nextValue % this.totalFrames)) {\r\n                _isComplete = true;\r\n                nextValue = this.totalFrames - 1;\r\n            }\r\n        } else if (nextValue >= this.totalFrames) {\r\n            this.playCount += 1;\r\n            if (!this.checkSegments(nextValue % this.totalFrames)) {\r\n                this.setCurrentRawFrameValue(nextValue % this.totalFrames);\r\n                this.trigger('loopComplete');\r\n            }\r\n        } else {\r\n            this.setCurrentRawFrameValue(nextValue);\r\n        }\r\n    } else if(nextValue < 0) {\r\n        if (!this.checkSegments(nextValue % this.totalFrames)) {\r\n            if (this.loop && !(this.playCount-- <= 0 && this.loop !== true)) {\r\n                this.setCurrentRawFrameValue(this.totalFrames + (nextValue % this.totalFrames));\r\n                this.trigger('loopComplete');\r\n            } else {\r\n                _isComplete = true;\r\n                nextValue = 0;\r\n            }\r\n        }\r\n    } else {\r\n        this.setCurrentRawFrameValue(nextValue);\r\n    }\r\n    if (_isComplete) {\r\n        this.setCurrentRawFrameValue(nextValue);\r\n        this.pause();\r\n        this.trigger('complete');\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.adjustSegment = function(arr, offset){\r\n    this.playCount = 0;\r\n    if(arr[1] < arr[0]){\r\n        if(this.frameModifier > 0){\r\n            if(this.playSpeed < 0){\r\n                this.setSpeed(-this.playSpeed);\r\n            } else {\r\n                this.setDirection(-1);\r\n            }\r\n        }\r\n        this.timeCompleted = this.totalFrames = arr[0] - arr[1];\r\n        this.firstFrame = arr[1];\r\n        this.setCurrentRawFrameValue(this.totalFrames - 0.001 - offset);\r\n    } else if(arr[1] > arr[0]){\r\n        if(this.frameModifier < 0){\r\n            if(this.playSpeed < 0){\r\n                this.setSpeed(-this.playSpeed);\r\n            } else {\r\n                this.setDirection(1);\r\n            }\r\n        }\r\n        this.timeCompleted = this.totalFrames = arr[1] - arr[0];\r\n        this.firstFrame = arr[0];\r\n        this.setCurrentRawFrameValue(0.001 + offset);\r\n    }\r\n    this.trigger('segmentStart');\r\n};\r\nAnimationItem.prototype.setSegment = function (init,end) {\r\n    var pendingFrame = -1;\r\n    if(this.isPaused) {\r\n        if (this.currentRawFrame + this.firstFrame < init) {\r\n            pendingFrame = init;\r\n        } else if (this.currentRawFrame + this.firstFrame > end) {\r\n            pendingFrame = end - init;\r\n        }\r\n    }\r\n\r\n    this.firstFrame = init;\r\n    this.timeCompleted = this.totalFrames = end - init;\r\n    if(pendingFrame !== -1) {\r\n        this.goToAndStop(pendingFrame,true);\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.playSegments = function (arr,forceFlag) {\r\n    if(typeof arr[0] === 'object'){\r\n        var i, len = arr.length;\r\n        for(i=0;i<len;i+=1){\r\n            this.segments.push(arr[i]);\r\n        }\r\n    }else{\r\n        this.segments.push(arr);\r\n    }\r\n    if(forceFlag){\r\n        this.checkSegments(0);\r\n    }\r\n    if(this.isPaused){\r\n        this.play();\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.resetSegments = function (forceFlag) {\r\n    this.segments.length = 0;\r\n    this.segments.push([this.animationData.ip,this.animationData.op]);\r\n    //this.segments.push([this.animationData.ip*this.frameRate,Math.floor(this.animationData.op - this.animationData.ip+this.animationData.ip*this.frameRate)]);\r\n    if(forceFlag){\r\n        this.checkSegments(0);\r\n    }\r\n};\r\nAnimationItem.prototype.checkSegments = function(offset){\r\n    if(this.segments.length) {\r\n        //console.log(this.currentRawFrame % lastFrame)\r\n        this.adjustSegment(this.segments.shift(), offset);\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\nAnimationItem.prototype.remove = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    this.renderer.destroy();\r\n};\r\n\r\nAnimationItem.prototype.destroy = function (name) {\r\n    if((name && this.name != name) || (this.renderer && this.renderer.destroyed)){\r\n        return;\r\n    }\r\n    this.renderer.destroy();\r\n    this.trigger('destroy');\r\n    this._cbs = null;\r\n    this.onEnterFrame = this.onLoopComplete = this.onComplete = this.onSegmentStart = this.onDestroy = null;\r\n    this.renderer = null;\r\n};\r\n\r\nAnimationItem.prototype.setCurrentRawFrameValue = function(value){\r\n    this.currentRawFrame = value;\r\n    this.gotoFrame();\r\n};\r\n\r\nAnimationItem.prototype.setSpeed = function (val) {\r\n    this.playSpeed = val;\r\n    this.updaFrameModifier();\r\n};\r\n\r\nAnimationItem.prototype.setDirection = function (val) {\r\n    this.playDirection = val < 0 ? -1 : 1;\r\n    this.updaFrameModifier();\r\n};\r\n\r\nAnimationItem.prototype.updaFrameModifier = function () {\r\n    this.frameModifier = this.frameMult * this.playSpeed * this.playDirection;\r\n};\r\n\r\nAnimationItem.prototype.getPath = function () {\r\n    return this.path;\r\n};\r\n\r\nAnimationItem.prototype.getAssetsPath = function (assetData) {\r\n    var path = '';\r\n    if(this.assetsPath){\r\n        var imagePath = assetData.p;\r\n        if(imagePath.indexOf('images/') !== -1){\r\n            imagePath = imagePath.split('/')[1];\r\n        }\r\n        path = this.assetsPath + imagePath;\r\n    } else {\r\n        path = this.path;\r\n        path += assetData.u ? assetData.u : '';\r\n        path += assetData.p;\r\n    }\r\n    return path;\r\n};\r\n\r\nAnimationItem.prototype.getAssetData = function (id) {\r\n    var i = 0, len = this.assets.length;\r\n    while (i < len) {\r\n        if(id == this.assets[i].id){\r\n            return this.assets[i];\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.hide = function () {\r\n    this.renderer.hide();\r\n};\r\n\r\nAnimationItem.prototype.show = function () {\r\n    this.renderer.show();\r\n};\r\n\r\nAnimationItem.prototype.getAssets = function () {\r\n    return this.assets;\r\n};\r\n\r\nAnimationItem.prototype.trigger = function(name){\r\n    if(this._cbs && this._cbs[name]){\r\n        switch(name){\r\n            case 'enterFrame':\r\n                this.triggerEvent(name,new BMEnterFrameEvent(name,this.currentFrame,this.totalFrames,this.frameMult));\r\n                break;\r\n            case 'loopComplete':\r\n                this.triggerEvent(name,new BMCompleteLoopEvent(name,this.loop,this.playCount,this.frameMult));\r\n                break;\r\n            case 'complete':\r\n                this.triggerEvent(name,new BMCompleteEvent(name,this.frameMult));\r\n                break;\r\n            case 'segmentStart':\r\n                this.triggerEvent(name,new BMSegmentStartEvent(name,this.firstFrame,this.totalFrames));\r\n                break;\r\n            case 'destroy':\r\n                this.triggerEvent(name,new BMDestroyEvent(name,this));\r\n                break;\r\n            default:\r\n                this.triggerEvent(name);\r\n        }\r\n    }\r\n    if(name === 'enterFrame' && this.onEnterFrame){\r\n        this.onEnterFrame.call(this,new BMEnterFrameEvent(name,this.currentFrame,this.totalFrames,this.frameMult));\r\n    }\r\n    if(name === 'loopComplete' && this.onLoopComplete){\r\n        this.onLoopComplete.call(this,new BMCompleteLoopEvent(name,this.loop,this.playCount,this.frameMult));\r\n    }\r\n    if(name === 'complete' && this.onComplete){\r\n        this.onComplete.call(this,new BMCompleteEvent(name,this.frameMult));\r\n    }\r\n    if(name === 'segmentStart' && this.onSegmentStart){\r\n        this.onSegmentStart.call(this,new BMSegmentStartEvent(name,this.firstFrame,this.totalFrames));\r\n    }\r\n    if(name === 'destroy' && this.onDestroy){\r\n        this.onDestroy.call(this,new BMDestroyEvent(name,this));\r\n    }\r\n};\r\nfunction EffectsManager(){}\r\n    var lottiejs = {};\r\n\r\n    function setLocationHref (href) {\r\n        locationHref = href;\r\n    }\r\n    function play(animation){\r\n        animationManager.play(animation);\r\n    }\r\n\r\n    function pause(animation) {\r\n        animationManager.pause(animation);\r\n    }\r\n\r\n    function togglePause(animation) {\r\n        animationManager.togglePause(animation);\r\n    }\r\n\r\n    function setSpeed(value, animation) {\r\n        animationManager.setSpeed(value, animation);\r\n    }\r\n\r\n    function setDirection(value, animation) {\r\n        animationManager.setDirection(value, animation);\r\n    }\r\n\r\n    function stop(animation) {\r\n        animationManager.stop(animation);\r\n    }\r\n\r\n    function searchAnimations() {\r\n        if (standalone === true) {\r\n            animationManager.searchAnimations(animationData, standalone, renderer);\r\n        } else {\r\n            animationManager.searchAnimations();\r\n        }\r\n    }\r\n\r\n    function registerAnimation(elem) {\r\n        return animationManager.registerAnimation(elem);\r\n    }\r\n\r\n    function resize() {\r\n        animationManager.resize();\r\n    }\r\n\r\n    /*function start() {\r\n        animationManager.start();\r\n    }*/\r\n\r\n    function goToAndStop(val, isFrame, animation) {\r\n        animationManager.goToAndStop(val, isFrame, animation);\r\n    }\r\n\r\n    function setSubframeRendering(flag) {\r\n        subframeEnabled = flag;\r\n    }\r\n\r\n    function loadAnimation(params) {\r\n        if (standalone === true) {\r\n            params.animationData = JSON.parse(animationData);\r\n        }\r\n        return animationManager.loadAnimation(params);\r\n    }\r\n\r\n    function destroy(animation) {\r\n        return animationManager.destroy(animation);\r\n    }\r\n\r\n    function setQuality(value) {\r\n        if (typeof value === 'string') {\r\n            switch (value) {\r\n                case 'high':\r\n                    defaultCurveSegments = 200;\r\n                    break;\r\n                case 'medium':\r\n                    defaultCurveSegments = 50;\r\n                    break;\r\n                case 'low':\r\n                    defaultCurveSegments = 10;\r\n                    break;\r\n            }\r\n        } else if (!isNaN(value) && value > 1) {\r\n            defaultCurveSegments = value;\r\n        }\r\n        if (defaultCurveSegments >= 50) {\r\n            roundValues(false);\r\n        } else {\r\n            roundValues(true);\r\n        }\r\n    }\r\n\r\n    function inBrowser() {\r\n        return typeof navigator !== 'undefined';\r\n    }\r\n\r\n    function installPlugin(type, plugin) {\r\n        if (type === 'expressions') {\r\n            expressionsPlugin = plugin;\r\n        }\r\n    }\r\n\r\n    function getFactory(name) {\r\n        switch (name) {\r\n            case \"propertyFactory\":\r\n                return PropertyFactory;\r\n            case \"shapePropertyFactory\":\r\n                return ShapePropertyFactory;\r\n            case \"matrix\":\r\n                return Matrix;\r\n        }\r\n    }\r\n    lottiejs.play = play;\r\n    lottiejs.pause = pause;\r\n    lottiejs.setLocationHref = setLocationHref;\r\n    lottiejs.togglePause = togglePause;\r\n    lottiejs.setSpeed = setSpeed;\r\n    lottiejs.setDirection = setDirection;\r\n    lottiejs.stop = stop;\r\n    lottiejs.searchAnimations = searchAnimations;\r\n    lottiejs.registerAnimation = registerAnimation;\r\n    lottiejs.loadAnimation = loadAnimation;\r\n    lottiejs.setSubframeRendering = setSubframeRendering;\r\n    lottiejs.resize = resize;\r\n    //lottiejs.start = start;\r\n    lottiejs.goToAndStop = goToAndStop;\r\n    lottiejs.destroy = destroy;\r\n    lottiejs.setQuality = setQuality;\r\n    lottiejs.inBrowser = inBrowser;\r\n    lottiejs.installPlugin = installPlugin;\r\n    lottiejs.__getFactory = getFactory;\r\n    lottiejs.version = '5.1.7';\r\n\r\n    function checkReady() {\r\n        if (document.readyState === \"complete\") {\r\n            clearInterval(readyStateCheckInterval);\r\n            searchAnimations();\r\n        }\r\n    }\r\n\r\n    function getQueryVariable(variable) {\r\n        var vars = queryString.split('&');\r\n        for (var i = 0; i < vars.length; i++) {\r\n            var pair = vars[i].split('=');\r\n            if (decodeURIComponent(pair[0]) == variable) {\r\n                return decodeURIComponent(pair[1]);\r\n            }\r\n        }\r\n    }\r\n    var standalone = '__[STANDALONE]__';\r\n    var animationData = '__[ANIMATIONDATA]__';\r\n    var renderer = '';\r\n    if (standalone) {\r\n        var scripts = document.getElementsByTagName('script');\r\n        var index = scripts.length - 1;\r\n        var myScript = scripts[index] || {\r\n            src: ''\r\n        };\r\n        var queryString = myScript.src.replace(/^[^\\?]+\\??/, '');\r\n        renderer = getQueryVariable('renderer');\r\n    }\r\n    var readyStateCheckInterval = setInterval(checkReady, 100);\r\n    return lottiejs;\r\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lottie-web/build/player/lottie_light.js\n// module id = 3\n// module chunks = 0","/* globals __VUE_SSR_CONTEXT__ */\n\n// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/component-normalizer.js\n// module id = 4\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    ref: \"lavContainer\",\n    style: (_vm.style)\n  })\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-91474f0e\",\"hasScoped\":false,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"}}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/vue-lottie.vue\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}