{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///lib/vue-lottie.min.js","webpack:///webpack/bootstrap c17a85c2db775b1e822a","webpack:///./src/components/vue-lottie.vue","webpack:///./src/lib.js","webpack:///vue-lottie.vue","webpack:///./~/bodymovin/build/player/bodymovin_light.js","webpack:///./~/vue-loader/lib/component-normalizer.js","webpack:///./src/components/vue-lottie.vue?499d"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Component","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_0__components_vue_lottie__","__WEBPACK_IMPORTED_MODULE_0__components_vue_lottie___default","__WEBPACK_IMPORTED_MODULE_0_bodymovin_build_player_bodymovin_light_js__","__WEBPACK_IMPORTED_MODULE_0_bodymovin_build_player_bodymovin_light_js___default","props","data","type","required","loop","Boolean","autoplay","default","settings","height","Number","width","animation","computed","style","methods","play","pause","stop","setSpeed","val","mounted","a","loadAnimation","container","$refs","lavContainer","renderer","animationData","rendererSettings","__WEBPACK_AMD_DEFINE_RESULT__","undefined","window","ProjectInterface","roundValues","flag","bm_rnd","Math","round","roundTo2Decimals","styleUnselectableDiv","element","userSelect","MozUserSelect","webkitUserSelect","oUserSelect","BMEnterFrameEvent","t","currentTime","totalTime","direction","BMCompleteEvent","BMCompleteLoopEvent","currentLoop","totalLoops","BMSegmentStartEvent","f","firstFrame","totalFrames","BMDestroyEvent","target","_addEventListener","eventName","callback","_cbs","push","removeEventListener","bind","_removeEventListener","len","length","splice","_triggerEvent","args","randomString","chars","result","random","HSVtoRGB","h","v","r","g","b","q","arguments","floor","RGBtoHSV","max","min","addSaturationToRGB","color","offset","hsv","addBrightnessToRGB","addHueToRGB","reversePath","paths","newI","newO","newV","newPaths","init","cnt","Matrix","createElement","parent","child","params","instance","create","getType","toString","constructor","_parent","extendPrototype","source","destination","attr","ShapePath","_length","_maxLength","Array","apply","ShapeModifier","TrimModifier","RoundCornersModifier","RepeaterModifier","ShapeCollection","shapes","TextAnimatorProperty","textData","renderType","elem","mdf","_firstFrame","_hasMaskedPath","_frameId","_dynamicProperties","_textData","_renderType","_elem","_animatorsData","_pathData","_moreOptions","alignment","renderedLetters","lettersChangedFlag","LetterProps","sw","sc","fc","TextProperty","dynamicProperties","pv","kf","keysIndex","currentData","ascent","boxWidth","fStyle","fWeight","j","justifyOffset","lh","lineWidths","ls","of","tr","fillColorAnim","strokeColorAnim","strokeWidthAnim","yOffset","__complete","searchProperty","getValue","BaseRenderer","SVGRenderer","animationItem","config","layers","renderedFrame","globalData","frameNum","renderConfig","preserveAspectRatio","progressiveLoad","hideOnTransparent","viewBoxOnly","className","elements","pendingElements","destroyed","MaskElement","storedData","masksProperties","viewData","maskElement","path","jLen","rect","expansor","feMorph","x","defs","properties","count","currentMasks","layerId","maskType","maskRef","mode","inv","k","document","createElementNS","svgNS","setAttribute","comp","w","PropertyFactory","getProp","filterID","appendChild","expan","lastPath","lastOperator","filterId","lastRadius","mask","locationHref","solidPath","createLayerSolidPath","op","prop","ShapePropertyFactory","getShapeProp","invRect","drawPath","maskedElement","BaseElement","SVGBaseElement","parentContainer","placeholder","matteElement","transformedElement","isTransparent","_sizeChanged","IShapeElement","shapesData","stylesList","itemsData","prevViewData","shapeModifiers","processedElements","ITextElement","SVGTextElement","textSpans","SVGTintFilter","filter","filterManager","feColorMatrix","matrixFilter","effectElements","feMerge","feMergeNode","SVGFillFilter","SVGStrokeEffect","initialized","SVGTritoneFilter","feComponentTransfer","feFuncR","feFuncG","feFuncB","SVGProLevelsFilter","createFeFunc","feFuncA","feFuncRComposed","feFuncGComposed","feFuncBComposed","SVGDropShadowEffect","feGaussianBlur","feOffset","feFlood","feComposite","originalNodeAdded","SVGMatte3Effect","filterElem","layerElement","baseElement","SVGEffects","ef","filId","fil","filtersFactory","createFilter","filters","ty","effects","ICompElement","supports3d","completeLayers","tm","frameRate","xt","buildAllItems","IImageElement","assetData","getAssetData","refId","ISolidElement","setLocationHref","href","animationManager","togglePause","setDirection","moveFrame","searchAnimations","standalone","registerAnimation","resize","start","goToAndStop","isFrame","setSubframeRendering","subframeEnabled","JSON","parse","destroy","setQuality","defaultCurveSegments","isNaN","inBrowser","navigator","installPlugin","plugin","expressionsPlugin","getFactory","checkReady","readyState","clearInterval","readyStateCheckInterval","isSafari","test","userAgent","bm_pow","pow","bm_sqrt","sqrt","bm_floor","abs","bm_min","BMMath","propertyNames","getOwnPropertyNames","absArr","degToRads","PI","roundCorner","rgbToHex","hex","colorMap","reset","rotate","angle","mCos","cos","mSin","sin","_t","rotateX","rotateY","rotateZ","shear","sx","sy","skew","ax","ay","tan","skewFromAxis","scale","sz","setTransform","e","translate","tx","tz","transform","a2","b2","c2","d2","e2","f2","g2","h2","i2","j2","k2","l2","m2","n2","o2","p2","_identityCalculated","a1","b1","c1","d1","e1","f1","g1","h1","i1","j1","k1","l1","m1","n1","o1","p1","isIdentity","_identity","clone","matr","cloneFromProps","applyToPoint","y","z","applyToX","applyToY","applyToZ","inversePoint","pt","determinant","inversePoints","pts","retPts","applyToPointArray","dimensions","arr","point_pool","newPoint","applyToPointStringified","toArray","toCSS","cssParts","join","to2dCSS","pool","math","seedrandom","seed","options","key","entropy","shortseed","mixkey","flatten","tostring","autoseed","arc4","ARC4","prng","chunks","startdenom","significance","overflow","int32","quick","double","S","pass","is_math_call","state","copy","rngname","global","keylen","me","slice","obj","depth","typ","smear","stringseed","charCodeAt","nodecrypto","randomBytes","out","Uint8Array","crypto","msCrypto","getRandomValues","browser","plugins","Date","screen","String","fromCharCode","BezierFactory","getBezierEasing","nm","str","replace","beziers","bezEasing","BezierEasing","A","aA1","aA2","B","C","calcBezier","aT","getSlope","binarySubdivide","aX","aA","aB","mX1","mX2","currentX","currentT","SUBDIVISION_PRECISION","SUBDIVISION_MAX_ITERATIONS","newtonRaphsonIterate","aGuessT","NEWTON_ITERATIONS","currentSlope","points","_p","_mSampleValues","float32ArraySupported","Float32Array","kSplineTableSize","_precomputed","ob","kSampleStepSize","mY1","mY2","_precompute","_getTForX","_calcSampleValues","mSampleValues","intervalStart","currentSample","lastSample","dist","guessForT","initialSlope","lastTime","vendors","requestAnimationFrame","cancelAnimationFrame","currTime","getTime","timeToCall","id","setTimeout","clearTimeout","bez","pointOnLine2D","x1","y1","x2","y2","x3","y3","det1","pointOnLine3D","z1","z2","z3","diffDist","dist1","dist2","dist3","getSegmentsLength","shapeData","closed","pathV","pathO","pathI","lengths","totalLength","getBezierLength","addedLength","BezierData","segmentLength","PointData","partial","point","partialLength","getDistancePerc","perc","bezierData","segments","initPos","lengthPos","lPerc","dir","SegmentPoints","pt1","pt2","pt3","pt4","getPointInSegment","percent","t1","u1","getNewSegment","startPerc","endPerc","t0","u0","Segment","ptCoord","ptDistance","curveSegments","lastPoint","lengthData","buildBezierData","keyData","to","ti","bezierName","dataManager","comps","fontManager","layerData","kLen","completed","tt","td","hasMask","maskProps","convertPathsToAbsoluteValues","findCompLayers","completeShapes","completeText","__used","stringify","ks","it","checkVersion","minimum","animVersionString","animVersion","split","completeData","checkColors","checkText","checkChars","checkShapes","assets","singleShape","updateTextLayer","textLayer","documentData","iterateLayers","minimumVersion","pathData","__converted","iterateShapes","cl","moduleOb","FontManager","setUpNode","font","family","parentNode","fontFamily","node","innerHTML","position","left","top","fontSize","fontVariant","fontStyle","fontWeight","letterSpacing","body","offsetWidth","checkLoadedFonts","fonts","loadedCount","loaded","fOrigin","origin","Typekit","load","typekitLoaded","async","active","monoCase","sansCase","removeChild","now","initTime","maxWaitingTime","createHelper","def","fontData","tHelper","fFamily","textContent","fClass","tCanvasHelper","getContext","addFonts","list","fontArr","fPath","rel","helper","addChars","found","ch","getCharData","char","measureText","fontName","size","getFontByName","fName","Font","interpolateValue","iterationIndex","previousValue","caching","newValue","offsetTime","nextKeyData","keyframes","fnc","ind","_lastBezierData","__fnct","segmentPerc","distanceInLine","lastFrame","_lastAddedLength","_lastPoint","outX","outY","inX","inY","keyValue","sh","initP","endP","getValueAtCurrentTime","frameId","endTime","_caching","initFrame","lastIndex","renderResult","mult","lastPValue","getNoValue","ValueProperty","vel","MultiDimensionalProperty","lastValue","map","KeyframedValueProperty","st","KeyframedMultidimensionalProperty","TransformProperty","getDashProp","DashProperty","getTextSelectorProp","TextSelectorProp","positionGetter","ExpressionValue","px","py","pz","xPositionGetter","yPositionGetter","anchorGetter","orientationGetter","or","rotationGetter","rz","scaleGetter","opacityGetter","skewGetter","sk","skewAxisGetter","sa","applyToMatrix","mat","ry","rx","processKeys","autoOriented","getValueAtTime","v1","v2","atan2","setInverted","inverted","iv","autoOrient","getGradientProp","forceRender","cmdf","omdf","gradientProp","cLength","dataProps","dasharray","dashoffset","updateRange","newCharsFlag","totalChars","textProperty","divisor","_s","finalS","finalE","getMult","easer","ne","xe","tot","setPathData","setLength","doubleArrayLength","concat","setXYAt","pos","setTripleAt","vX","vY","oX","oY","iX","iY","interpolateShape","isCurrentRender","keyPropS","keyPropE","isHold","vertexValue","hasModified","interpolateShapeCurrentTime","_lastIndex","localShapeCollection","getShapeValue","resetShape","ShapeProperty","__shapeObject","shape_pool","shapeCollection_pool","newShapeCollection","addShape","KeyframedShapeProperty","newShape","dataProp","keys","RectShapeProperty","EllShapeProperty","StarShapeProperty","getConstructorFunction","getKeyframedConstructorFunction","convertEllToPath","p0","s0","s1","cPoint","convertPolygonToPath","numPts","rad","roundness","os","perimSegment","currentAng","ox","oy","convertStarToPath","longFlag","longRad","shortRad","ir","longRound","shortRound","is","longPerimSegment","shortPerimSegment","convertToPath","convertRectToPath","v0","ShapeModifiers","registerModifier","modifiers","getModifier","initModifierProperties","addShapeToModifier","shape","sValue","eValue","oValue","calculateShapeEdges","shapeLength","totalModifierLength","segmentOb","shapeSegments","shapeS","shapeE","processShapes","shapePaths","pathsData","totalShapeLength","releaseShapes","edges","newShapesData","addShapes","lastShape","pop","addPaths","addSegment","shapePath","shapeSegment","currentLengthData","segmentCount","segment","rd","processPath","cloned_path","currentV","currentI","currentO","closerV","distance","newPosPerc","index","pMatrix","rMatrix","sMatrix","tMatrix","matrix","applyTransforms","scaleX","scaleY","elemsData","_currentCopies","_elements","_groups","cont","unshift","resetElements","_processed","cloneElements","newElements","changeGroupRender","renderFlag","_render","copies","ceil","group","ix","reloadShapes","offsetModulo","roundOffset","pProps","rProps","sProps","iteration","items","itemsTransform","mProps","release","ImagePreloader","imageLoaded","loadedAssets","totalImages","imagesLoadedCb","getAssetsPath","assetsPath","imagePath","indexOf","u","loadImage","img","addEventListener","src","loadAssets","cb","totalAssets","setPath","setAssetsPath","featureSupport","createAlphaToLuminanceFilter","searchProperties","animatorData","animatorProps","fh","fs","fb","maskManager","getMaskProperty","getMeasures","xPos","yPos","animators","matrixHelper","mHelper","renderedLettersCount","letters","pathInfo","tLength","pi","currentPoint","prevPoint","currentLength","segmentInd","pointInd","tanAngle","animatorSelector","letterValue","yOff","firstLine","offf","xPathPos","yPathPos","elemOpacity","letterSw","letterSc","letterFc","letterO","initPathPos","initSegmentInd","initPointInd","currentLine","lineLength","letterM","letterP","defaultPropsArray","line","extra","an","animatorOffset","anIndexes","add","rot","atan","ps","update","updated","setCurrentData","textDocumentData","textKeys","completeTextData","newLineFlag","charData","anchorGrouping","currentSize","currentPos","lineWidth","maxLineWidth","styles","toLowerCase","trackingOffset","lastSpaceIndex","charAt","substr","currentChar","uncollapsedSpaces","letterData","based","indexes","rn","newInd","currentInd","updateDocumentData","newData","dData","pooling","releaseArray","shapePathsCollection","cloned","shapeCollection","originCollection","checkLayers","num","ip","buildItem","checkPendingElements","createItem","layer","createImage","createComp","createSolid","createShape","createText","createCamera","createBase","Error","includeLayers","newLayers","setProjectInterface","pInterface","projectInterface","initItems","buildElementParenting","parentName","hierarchy","_isParent","setHierarchy","addPendingElement","configAnimation","animData","wrapper","compSize","fr","maskId","updateContainerSize","registerComposition","initExpressions","appendElementInPos","setMatte","checkParenting","renderFrame","currentFrame","prepareFrame","newElement","getBaseElement","nextElement","insertBefore","hide","display","show","searchExtraCompositions","floatingContainer","finalMat","finalTransform","mProp","getMaskelement","pathNodes","pathString","checkMasks","isVisible","elemMdf","sr","currentFrameNum","globalToLocal","transforms","ptNew","layerInterface","LayerExpressionInterface","registerMaskInterface","effectsInterface","EffectsExpressionInterface","createEffectsInterface","registerEffectsInterface","compInterface","CompExpressionInterface","shapeInterface","ShapeExpressionInterface","createShapeInterface","textInterface","TextExpressionInterface","setBlendMode","blendModeValue","bm","EffectsManager","hidden","lastNum","matMdf","opMdf","opacity","ao","createElements","addMasks","resetHierarchy","getHierarchy","getLayerSize","sourceRectAtTime","layerElementParent","masker","gg","maskGroup","maskGrouper","alphaRect","ln","cp","clipId","cpGroup","effectsManager","parentTransform","hd","identityMatrix","lcEnum","1","2","3","ljEnum","searchProcessedElement","addProcessedElement","buildExpressionInterface","searchShapes","setGradientData","pathElement","gfill","gradientId","stops","gf","cst","setGradientOpacity","styleOb","opFill","opacityId","ost","msElem","createStyleElement","level","elementData","ld","lvl","lc","lj","ml","pElem","createGroupElement","gr","createTransformElement","createShapeElement","ownTransformers","caches","transformers","lStr","addShapeToModifiers","setElementStyles","renderModifiers","render","currentTransform","modifier","processedPos","ownStyles","ownModifiers","parentMatrix","renderShape","renderPath","renderFill","renderGradient","renderStroke","buildShapeString","shapeString","itemData","pathStringTransformed","redraw","lLen","iterations","styleData","styleElem","attr1","attr2","cValues","oValues","ang","textAnimator","buildNewText","createPathShape","shapeStr","applyTextPropertiesToMatrix","lineNumber","buildColor","colorData","emptyProp","textContainer","usesGlyphs","tSpan","tElement","justify","cachedSpansLength","setAttributeNS","time","renderLetters","textBox","getBBox","bbox","renderedLetter","textSpan","colorBlack","colorWhite","initialize","groupPath","elemChildren","children","childNodes","removeAttribute","pathMasker","dasharrayValue","getTotalLength","units","color1","color2","color3","tableR","tableG","tableB","feFunc","getTableValue","inputBlack","inputWhite","gamma","outputBlack","outputWhite","colorValue","table","outputDelta","inputDelta","col","setElementAsMask","timeRemapped","renderParent","setElements","elems","getElements","assetPath","innerElem","removeElement","ev","animItem","registeredAnimations","isPaused","subtractPlayingCount","AnimationItem","setupAnimation","setData","addPlayingCount","playingAnimationsNum","activate","idled","setParams","resume","nowTime","elapsedTime","advanceTime","first","animElements","getElementsByClassName","getElementsByTagName","div","isLoaded","currentRawFrame","frameMult","playSpeed","playDirection","playCount","prerenderFramesFlag","animationID","scaleMode","timeCompleted","segmentPos","pendingSegment","_idle","self","context","animType","CanvasRenderer","HybridRenderer","parseInt","prerender","autoloadSegments","xhr","XMLHttpRequest","lastIndexOf","fileName","open","send","onreadystatechange","status","responseText","response","err","wrapperAttributes","attributes","getNamedItem","tf","loadNextSegment","trigger","shift","segmentPath","loadSegments","_this","imagePreloader","updaFrameModifier","waitForFontsLoaded","checkLoaded","checkFontsLoaded","elementLoaded","gotoFrame","setSubframe","setCurrentRawFrameValue","frameModifier","goToAndPlay","adjustSegment","updateAnimation","setSegment","end","pendingFrame","playSegments","forceFlag","resetSegments","checkSegments","remove","onEnterFrame","onLoopComplete","onComplete","onSegmentStart","onDestroy","getPath","getAssets","triggerEvent","bodymovinjs","__getFactory","version","scripts","myScript","queryString","variable","vars","pair","decodeURIComponent","setInterval","rawScriptExports","compiledTemplate","injectStyles","scopeId","moduleIdentifier","esModule","scriptExports","staticRenderFns","_scopeId","hook","$vnode","ssrContext","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","functional","existing","beforeCreate","_vm","_h","$createElement","_self","_c","ref"],"mappings":"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","file":"lib/vue-lottie.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vue-lottie\"] = factory();\n\telse\n\t\troot[\"vue-lottie\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vue-lottie\"] = factory();\n\telse\n\t\troot[\"vue-lottie\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/vue-lottie/dist\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Component = __webpack_require__(4)(\n  /* script */\n  __webpack_require__(2),\n  /* template */\n  __webpack_require__(5),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_vue_lottie__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_vue_lottie___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__components_vue_lottie__);\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (__WEBPACK_IMPORTED_MODULE_0__components_vue_lottie___default.a);\n\n/***/ }),\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_bodymovin_build_player_bodymovin_light_js__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_bodymovin_build_player_bodymovin_light_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_bodymovin_build_player_bodymovin_light_js__);\n//\n//\n//\n//\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    props: {\n        data: {\n            type: Object,\n            required: true\n        },\n        loop: Boolean,\n        autoplay: {\n            type: Boolean,\n            default: true\n        },\n        settings: Object,\n        height: Number,\n        width: Number\n    },\n\n    data: function data() {\n        return {\n            animation: null\n        };\n    },\n\n    computed: {\n        style: function style() {\n            var style = {};\n            if (this.width) {\n                style.width = this.width + 'px';\n            }\n            if (this.height) {\n                style.height = this.height + 'px';\n            }\n            return style;\n        }\n    },\n    methods: {\n        play: function play() {\n            this.animation.play();\n        },\n        pause: function pause() {\n            this.animation.pause();\n        },\n        stop: function stop() {\n            this.animation.stop();\n        },\n        setSpeed: function setSpeed(val) {\n            this.animation.setSpeed(val);\n        }\n    },\n    mounted: function mounted() {\n        this.animation = __WEBPACK_IMPORTED_MODULE_0_bodymovin_build_player_bodymovin_light_js___default.a.loadAnimation({\n            container: this.$refs.lavContainer,\n            renderer: 'svg',\n            loop: this.loop,\n            autoplay: this.autoplay,\n            animationData: this.data,\n            rendererSettings: this.settings\n        });\n    }\n});\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;(function(root, factory) {\r\n    if (true) {\r\n        !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\r\n            return factory(root);\r\n        }.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n    } else if (typeof module === \"object\" && module.exports) {\r\n        module.exports = factory(root);\r\n    } else {\r\n        root.bodymovin = factory(root);\r\n    }\r\n}((window || {}), function(window) {\r\n    var svgNS = \"http://www.w3.org/2000/svg\";\r\n\r\nvar locationHref = '';\r\n\nvar subframeEnabled = true;\r\nvar expressionsPlugin;\r\nvar isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\r\nvar cachedColors = {};\r\nvar bm_rounder = Math.round;\r\nvar bm_rnd;\r\nvar bm_pow = Math.pow;\r\nvar bm_sqrt = Math.sqrt;\r\nvar bm_abs = Math.abs;\r\nvar bm_floor = Math.floor;\r\nvar bm_max = Math.max;\r\nvar bm_min = Math.min;\r\nvar blitter = 10;\r\n\r\nvar BMMath = {};\r\n(function(){\r\n    var propertyNames = Object.getOwnPropertyNames(Math);\r\n    var i, len = propertyNames.length;\r\n    for(i=0;i<len;i+=1){\r\n        BMMath[propertyNames[i]] = Math[propertyNames[i]];\r\n    }\r\n}());\r\n\r\nfunction ProjectInterface(){return {}};\r\n\r\nBMMath.random = Math.random;\r\nBMMath.abs = function(val){\r\n    var tOfVal = typeof val;\r\n    if(tOfVal === 'object' && val.length){\r\n        var absArr = Array.apply(null,{length:val.length});\r\n        var i, len = val.length;\r\n        for(i=0;i<len;i+=1){\r\n            absArr[i] = Math.abs(val[i]);\r\n        }\r\n        return absArr;\r\n    }\r\n    return Math.abs(val);\r\n\r\n}\r\nvar defaultCurveSegments = 150;\r\nvar degToRads = Math.PI/180;\r\nvar roundCorner = 0.5519;\r\n\r\nfunction roundValues(flag){\r\n    if(flag){\r\n        bm_rnd = Math.round;\r\n    }else{\r\n        bm_rnd = function(val){\r\n            return val;\r\n        };\r\n    }\r\n}\r\nroundValues(false);\r\n\r\nfunction roundTo2Decimals(val){\r\n    return Math.round(val*10000)/10000;\r\n}\r\n\r\nfunction roundTo3Decimals(val){\r\n    return Math.round(val*100)/100;\r\n}\r\n\r\nfunction styleDiv(element){\r\n    element.style.position = 'absolute';\r\n    element.style.top = 0;\r\n    element.style.left = 0;\r\n    element.style.display = 'block';\r\n    element.style.transformOrigin = element.style.webkitTransformOrigin = '0 0';\r\n    element.style.backfaceVisibility  = element.style.webkitBackfaceVisibility = 'visible';\r\n    element.style.transformStyle = element.style.webkitTransformStyle = element.style.mozTransformStyle = \"preserve-3d\";\r\n}\r\n\r\nfunction styleUnselectableDiv(element){\r\n    element.style.userSelect = 'none';\r\n    element.style.MozUserSelect = 'none';\r\n    element.style.webkitUserSelect = 'none';\r\n    element.style.oUserSelect = 'none';\r\n\r\n}\r\n\r\nfunction BMEnterFrameEvent(n,c,t,d){\r\n    this.type = n;\r\n    this.currentTime = c;\r\n    this.totalTime = t;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMCompleteEvent(n,d){\r\n    this.type = n;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMCompleteLoopEvent(n,c,t,d){\r\n    this.type = n;\r\n    this.currentLoop = c;\r\n    this.totalLoops = t;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMSegmentStartEvent(n,f,t){\r\n    this.type = n;\r\n    this.firstFrame = f;\r\n    this.totalFrames = t;\r\n}\r\n\r\nfunction BMDestroyEvent(n,t){\r\n    this.type = n;\r\n    this.target = t;\r\n}\r\n\r\nfunction _addEventListener(eventName, callback){\r\n\r\n    if (!this._cbs[eventName]){\r\n        this._cbs[eventName] = [];\r\n    }\r\n    this._cbs[eventName].push(callback);\r\n\r\n\treturn function() {\r\n\t\tthis.removeEventListener(eventName, callback);\r\n\t}.bind(this);\r\n}\r\n\r\nfunction _removeEventListener(eventName,callback){\r\n\r\n    if (!callback){\r\n        this._cbs[eventName] = null;\r\n    }else if(this._cbs[eventName]){\r\n        var i = 0, len = this._cbs[eventName].length;\r\n        while(i<len){\r\n            if(this._cbs[eventName][i] === callback){\r\n                this._cbs[eventName].splice(i,1);\r\n                i -=1;\r\n                len -= 1;\r\n            }\r\n            i += 1;\r\n        }\r\n        if(!this._cbs[eventName].length){\r\n            this._cbs[eventName] = null;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nfunction _triggerEvent(eventName, args){\r\n    if (this._cbs[eventName]) {\r\n        var len = this._cbs[eventName].length;\r\n        for (var i = 0; i < len; i++){\r\n            this._cbs[eventName][i](args);\r\n        }\r\n    }\r\n}\r\n\r\nfunction randomString(length, chars){\r\n    if(chars === undefined){\r\n        chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890';\r\n    }\r\n    var i;\r\n    var result = '';\r\n    for (i = length; i > 0; --i) result += chars[Math.round(Math.random() * (chars.length - 1))];\r\n    return result;\r\n}\r\n\r\nfunction HSVtoRGB(h, s, v) {\r\n    var r, g, b, i, f, p, q, t;\r\n    if (arguments.length === 1) {\r\n        s = h.s, v = h.v, h = h.h;\r\n    }\r\n    i = Math.floor(h * 6);\r\n    f = h * 6 - i;\r\n    p = v * (1 - s);\r\n    q = v * (1 - f * s);\r\n    t = v * (1 - (1 - f) * s);\r\n    switch (i % 6) {\r\n        case 0: r = v, g = t, b = p; break;\r\n        case 1: r = q, g = v, b = p; break;\r\n        case 2: r = p, g = v, b = t; break;\r\n        case 3: r = p, g = q, b = v; break;\r\n        case 4: r = t, g = p, b = v; break;\r\n        case 5: r = v, g = p, b = q; break;\r\n    }\r\n    return [ r,\r\n        g,\r\n         b ];\r\n}\r\n\r\nfunction RGBtoHSV(r, g, b) {\r\n    if (arguments.length === 1) {\r\n        g = r.g, b = r.b, r = r.r;\r\n    }\r\n    var max = Math.max(r, g, b), min = Math.min(r, g, b),\r\n        d = max - min,\r\n        h,\r\n        s = (max === 0 ? 0 : d / max),\r\n        v = max / 255;\r\n\r\n    switch (max) {\r\n        case min: h = 0; break;\r\n        case r: h = (g - b) + d * (g < b ? 6: 0); h /= 6 * d; break;\r\n        case g: h = (b - r) + d * 2; h /= 6 * d; break;\r\n        case b: h = (r - g) + d * 4; h /= 6 * d; break;\r\n    }\r\n\r\n    return [\r\n         h,\r\n         s,\r\n         v\r\n    ];\r\n}\r\n\r\nfunction addSaturationToRGB(color,offset){\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[1] += offset;\r\n    if (hsv[1] > 1) {\r\n        hsv[1] = 1;\r\n    }\r\n    else if (hsv[1] <= 0) {\r\n        hsv[1] = 0;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nfunction addBrightnessToRGB(color,offset){\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[2] += offset;\r\n    if (hsv[2] > 1) {\r\n        hsv[2] = 1;\r\n    }\r\n    else if (hsv[2] < 0) {\r\n        hsv[2] = 0;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nfunction addHueToRGB(color,offset) {\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[0] += offset/360;\r\n    if (hsv[0] > 1) {\r\n        hsv[0] -= 1;\r\n    }\r\n    else if (hsv[0] < 0) {\r\n        hsv[0] += 1;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nfunction componentToHex(c) {\r\n    var hex = c.toString(16);\r\n    return hex.length == 1 ? '0' + hex : hex;\r\n}\r\n\r\nvar rgbToHex = (function(){\r\n    var colorMap = [];\r\n    var i;\r\n    var hex;\r\n    for(i=0;i<256;i+=1){\r\n        hex = i.toString(16);\r\n        colorMap[i] = hex.length == 1 ? '0' + hex : hex;\r\n    }\r\n\r\n    return function(r, g, b) {\r\n        if(r<0){\r\n            r = 0;\r\n        }\r\n        if(g<0){\r\n            g = 0;\r\n        }\r\n        if(b<0){\r\n            b = 0;\r\n        }\r\n        return '#' + colorMap[r] + colorMap[g] + colorMap[b];\r\n    };\r\n}());\r\n\r\nfunction fillToRgba(hex,alpha){\r\n    if(!cachedColors[hex]){\r\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n        cachedColors[hex] = parseInt(result[1], 16)+','+parseInt(result[2], 16)+','+parseInt(result[3], 16);\r\n    }\r\n    return 'rgba('+cachedColors[hex]+','+alpha+')';\r\n}\r\n\r\nvar fillColorToString = (function(){\r\n\r\n    var colorMap = [];\r\n    return function(colorArr,alpha){\r\n        if(alpha !== undefined){\r\n            colorArr[3] = alpha;\r\n        }\r\n        if(!colorMap[colorArr[0]]){\r\n            colorMap[colorArr[0]] = {};\r\n        }\r\n        if(!colorMap[colorArr[0]][colorArr[1]]){\r\n            colorMap[colorArr[0]][colorArr[1]] = {};\r\n        }\r\n        if(!colorMap[colorArr[0]][colorArr[1]][colorArr[2]]){\r\n            colorMap[colorArr[0]][colorArr[1]][colorArr[2]] = {};\r\n        }\r\n        if(!colorMap[colorArr[0]][colorArr[1]][colorArr[2]][colorArr[3]]){\r\n            colorMap[colorArr[0]][colorArr[1]][colorArr[2]][colorArr[3]] = 'rgba(' + colorArr.join(',')+')';\r\n        }\r\n        return colorMap[colorArr[0]][colorArr[1]][colorArr[2]][colorArr[3]];\r\n    };\r\n}());\r\n\r\nfunction RenderedFrame(tr,o) {\r\n    this.tr = tr;\r\n    this.o = o;\r\n}\r\n\r\nfunction iterateDynamicProperties(num){\r\n    var i, len = this.dynamicProperties;\r\n    for(i=0;i<len;i+=1){\r\n        this.dynamicProperties[i].getValue(num);\r\n    }\r\n}\r\n\r\nfunction reversePath(paths){\r\n    var newI = [], newO = [], newV = [];\r\n    var i, len, newPaths = {};\r\n    var init = 0;\r\n    if (paths.c) {\r\n        newI[0] = paths.o[0];\r\n        newO[0] = paths.i[0];\r\n        newV[0] = paths.v[0];\r\n        init = 1;\r\n    }\r\n    len = paths.i.length;\r\n    var cnt = len - 1;\r\n\r\n    for (i = init; i < len; i += 1) {\r\n        newI.push(paths.o[cnt]);\r\n        newO.push(paths.i[cnt]);\r\n        newV.push(paths.v[cnt]);\r\n        cnt -= 1;\r\n    }\r\n\r\n    newPaths.i = newI;\r\n    newPaths.o = newO;\r\n    newPaths.v = newV;\r\n\r\n    return newPaths;\r\n}\n/*!\r\n Transformation Matrix v2.0\r\n (c) Epistemex 2014-2015\r\n www.epistemex.com\r\n By Ken Fyrstenberg\r\n Contributions by leeoniya.\r\n License: MIT, header required.\r\n */\r\n\r\n/**\r\n * 2D transformation matrix object initialized with identity matrix.\r\n *\r\n * The matrix can synchronize a canvas context by supplying the context\r\n * as an argument, or later apply current absolute transform to an\r\n * existing context.\r\n *\r\n * All values are handled as floating point values.\r\n *\r\n * @param {CanvasRenderingContext2D} [context] - Optional context to sync with Matrix\r\n * @prop {number} a - scale x\r\n * @prop {number} b - shear y\r\n * @prop {number} c - shear x\r\n * @prop {number} d - scale y\r\n * @prop {number} e - translate x\r\n * @prop {number} f - translate y\r\n * @prop {CanvasRenderingContext2D|null} [context=null] - set or get current canvas context\r\n * @constructor\r\n */\r\n\r\nvar Matrix = (function(){\r\n\r\n    function reset(){\r\n        this.props[0] = 1;\r\n        this.props[1] = 0;\r\n        this.props[2] = 0;\r\n        this.props[3] = 0;\r\n        this.props[4] = 0;\r\n        this.props[5] = 1;\r\n        this.props[6] = 0;\r\n        this.props[7] = 0;\r\n        this.props[8] = 0;\r\n        this.props[9] = 0;\r\n        this.props[10] = 1;\r\n        this.props[11] = 0;\r\n        this.props[12] = 0;\r\n        this.props[13] = 0;\r\n        this.props[14] = 0;\r\n        this.props[15] = 1;\r\n        return this;\r\n    }\r\n\r\n    function rotate(angle) {\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = Math.cos(angle);\r\n        var mSin = Math.sin(angle);\r\n        return this._t(mCos, -mSin,  0, 0\r\n            , mSin,  mCos, 0, 0\r\n            , 0,  0,  1, 0\r\n            , 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateX(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = Math.cos(angle);\r\n        var mSin = Math.sin(angle);\r\n        return this._t(1, 0, 0, 0\r\n            , 0, mCos, -mSin, 0\r\n            , 0, mSin,  mCos, 0\r\n            , 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateY(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = Math.cos(angle);\r\n        var mSin = Math.sin(angle);\r\n        return this._t(mCos,  0,  mSin, 0\r\n            , 0, 1, 0, 0\r\n            , -mSin,  0,  mCos, 0\r\n            , 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateZ(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = Math.cos(angle);\r\n        var mSin = Math.sin(angle);\r\n        return this._t(mCos, -mSin,  0, 0\r\n            , mSin,  mCos, 0, 0\r\n            , 0,  0,  1, 0\r\n            , 0, 0, 0, 1);\r\n    }\r\n\r\n    function shear(sx,sy){\r\n        return this._t(1, sy, sx, 1, 0, 0);\r\n    }\r\n\r\n    function skew(ax, ay){\r\n        return this.shear(Math.tan(ax), Math.tan(ay));\r\n    }\r\n\r\n    function skewFromAxis(ax, angle){\r\n        var mCos = Math.cos(angle);\r\n        var mSin = Math.sin(angle);\r\n        return this._t(mCos, mSin,  0, 0\r\n            , -mSin,  mCos, 0, 0\r\n            , 0,  0,  1, 0\r\n            , 0, 0, 0, 1)\r\n            ._t(1, 0,  0, 0\r\n            , Math.tan(ax),  1, 0, 0\r\n            , 0,  0,  1, 0\r\n            , 0, 0, 0, 1)\r\n            ._t(mCos, -mSin,  0, 0\r\n            , mSin,  mCos, 0, 0\r\n            , 0,  0,  1, 0\r\n            , 0, 0, 0, 1);\r\n        //return this._t(mCos, mSin, -mSin, mCos, 0, 0)._t(1, 0, Math.tan(ax), 1, 0, 0)._t(mCos, -mSin, mSin, mCos, 0, 0);\r\n    }\r\n\r\n    function scale(sx, sy, sz) {\r\n        sz = isNaN(sz) ? 1 : sz;\r\n        if(sx == 1 && sy == 1 && sz == 1){\r\n            return this;\r\n        }\r\n        return this._t(sx, 0, 0, 0, 0, sy, 0, 0, 0, 0, sz, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function setTransform(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {\r\n        this.props[0] = a;\r\n        this.props[1] = b;\r\n        this.props[2] = c;\r\n        this.props[3] = d;\r\n        this.props[4] = e;\r\n        this.props[5] = f;\r\n        this.props[6] = g;\r\n        this.props[7] = h;\r\n        this.props[8] = i;\r\n        this.props[9] = j;\r\n        this.props[10] = k;\r\n        this.props[11] = l;\r\n        this.props[12] = m;\r\n        this.props[13] = n;\r\n        this.props[14] = o;\r\n        this.props[15] = p;\r\n        return this;\r\n    }\r\n\r\n    function translate(tx, ty, tz) {\r\n        tz = tz || 0;\r\n        if(tx !== 0 || ty !== 0 || tz !== 0){\r\n            return this._t(1,0,0,0,0,1,0,0,0,0,1,0,tx,ty,tz,1);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function transform(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2, m2, n2, o2, p2) {\r\n\r\n        if(a2 === 1 && b2 === 0 && c2 === 0 && d2 === 0 && e2 === 0 && f2 === 1 && g2 === 0 && h2 === 0 && i2 === 0 && j2 === 0 && k2 === 1 && l2 === 0){\r\n            if(m2 !== 0 || n2 !== 0 || o2 !== 0){\r\n\r\n                this.props[12] = this.props[12] * a2 + this.props[13] * e2 + this.props[14] * i2 + this.props[15] * m2 ;\r\n                this.props[13] = this.props[12] * b2 + this.props[13] * f2 + this.props[14] * j2 + this.props[15] * n2 ;\r\n                this.props[14] = this.props[12] * c2 + this.props[13] * g2 + this.props[14] * k2 + this.props[15] * o2 ;\r\n                this.props[15] = this.props[12] * d2 + this.props[13] * h2 + this.props[14] * l2 + this.props[15] * p2 ;\r\n            }\r\n            this._identityCalculated = false;\r\n            return this;\r\n        }\r\n\r\n        var a1 = this.props[0];\r\n        var b1 = this.props[1];\r\n        var c1 = this.props[2];\r\n        var d1 = this.props[3];\r\n        var e1 = this.props[4];\r\n        var f1 = this.props[5];\r\n        var g1 = this.props[6];\r\n        var h1 = this.props[7];\r\n        var i1 = this.props[8];\r\n        var j1 = this.props[9];\r\n        var k1 = this.props[10];\r\n        var l1 = this.props[11];\r\n        var m1 = this.props[12];\r\n        var n1 = this.props[13];\r\n        var o1 = this.props[14];\r\n        var p1 = this.props[15];\r\n\r\n        /* matrix order (canvas compatible):\r\n         * ace\r\n         * bdf\r\n         * 001\r\n         */\r\n        this.props[0] = a1 * a2 + b1 * e2 + c1 * i2 + d1 * m2;\r\n        this.props[1] = a1 * b2 + b1 * f2 + c1 * j2 + d1 * n2 ;\r\n        this.props[2] = a1 * c2 + b1 * g2 + c1 * k2 + d1 * o2 ;\r\n        this.props[3] = a1 * d2 + b1 * h2 + c1 * l2 + d1 * p2 ;\r\n\r\n        this.props[4] = e1 * a2 + f1 * e2 + g1 * i2 + h1 * m2 ;\r\n        this.props[5] = e1 * b2 + f1 * f2 + g1 * j2 + h1 * n2 ;\r\n        this.props[6] = e1 * c2 + f1 * g2 + g1 * k2 + h1 * o2 ;\r\n        this.props[7] = e1 * d2 + f1 * h2 + g1 * l2 + h1 * p2 ;\r\n\r\n        this.props[8] = i1 * a2 + j1 * e2 + k1 * i2 + l1 * m2 ;\r\n        this.props[9] = i1 * b2 + j1 * f2 + k1 * j2 + l1 * n2 ;\r\n        this.props[10] = i1 * c2 + j1 * g2 + k1 * k2 + l1 * o2 ;\r\n        this.props[11] = i1 * d2 + j1 * h2 + k1 * l2 + l1 * p2 ;\r\n\r\n        this.props[12] = m1 * a2 + n1 * e2 + o1 * i2 + p1 * m2 ;\r\n        this.props[13] = m1 * b2 + n1 * f2 + o1 * j2 + p1 * n2 ;\r\n        this.props[14] = m1 * c2 + n1 * g2 + o1 * k2 + p1 * o2 ;\r\n        this.props[15] = m1 * d2 + n1 * h2 + o1 * l2 + p1 * p2 ;\r\n\r\n        this._identityCalculated = false;\r\n        return this;\r\n    }\r\n\r\n    function isIdentity() {\r\n        if(!this._identityCalculated){\r\n            this._identity = !(this.props[0] !== 1 || this.props[1] !== 0 || this.props[2] !== 0 || this.props[3] !== 0\r\n                || this.props[4] !== 0 || this.props[5] !== 1 || this.props[6] !== 0 || this.props[7] !== 0\r\n                || this.props[8] !== 0 || this.props[9] !== 0 || this.props[10] !== 1 || this.props[11] !== 0\r\n                || this.props[12] !== 0 || this.props[13] !== 0 || this.props[14] !== 0 || this.props[15] !== 1);\r\n            this._identityCalculated = true;\r\n        }\r\n        return this._identity;\r\n    }\r\n\r\n    function clone(matr){\r\n        var i;\r\n        for(i=0;i<16;i+=1){\r\n            matr.props[i] = this.props[i];\r\n        }\r\n    }\r\n\r\n    function cloneFromProps(props){\r\n        var i;\r\n        for(i=0;i<16;i+=1){\r\n            this.props[i] = props[i];\r\n        }\r\n    }\r\n\r\n    function applyToPoint(x, y, z) {\r\n\r\n        return {\r\n            x: x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],\r\n            y: x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],\r\n            z: x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]\r\n        };\r\n        /*return {\r\n         x: x * me.a + y * me.c + me.e,\r\n         y: x * me.b + y * me.d + me.f\r\n         };*/\r\n    }\r\n    function applyToX(x, y, z) {\r\n        return x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12];\r\n    }\r\n    function applyToY(x, y, z) {\r\n        return x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13];\r\n    }\r\n    function applyToZ(x, y, z) {\r\n        return x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14];\r\n    }\r\n\r\n    function inversePoint(pt) {\r\n        var determinant = this.props[0] * this.props[5] - this.props[1] * this.props[4];\r\n        var a = this.props[5]/determinant;\r\n        var b = - this.props[1]/determinant;\r\n        var c = - this.props[4]/determinant;\r\n        var d = this.props[0]/determinant;\r\n        var e = (this.props[4] * this.props[13] - this.props[5] * this.props[12])/determinant;\r\n        var f = - (this.props[0] * this.props[13] - this.props[1] * this.props[12])/determinant;\r\n        return [pt[0] * a + pt[1] * c + e, pt[0] * b + pt[1] * d + f, 0];\r\n    }\r\n\r\n    function inversePoints(pts){\r\n        var i, len = pts.length, retPts = [];\r\n        for(i=0;i<len;i+=1){\r\n            retPts[i] = inversePoint(pts[i]);\r\n        }\r\n        return retPts;\r\n    }\r\n\r\n    function applyToPointArray(x,y,z,dimensions){\r\n        if(dimensions && dimensions === 2) {\r\n            var arr = point_pool.newPoint();\r\n            arr[0] = x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12]; \r\n            arr[1] = x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13]; \r\n            return arr;    \r\n        }\r\n        return [x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]];\r\n    }\r\n    function applyToPointStringified(x, y) {\r\n        if(this.isIdentity()) {\r\n            return x + ',' + y;\r\n        }\r\n        return (bm_rnd(x * this.props[0] + y * this.props[4] + this.props[12]))+','+(bm_rnd(x * this.props[1] + y * this.props[5] + this.props[13]));\r\n    }\r\n\r\n    function toArray() {\r\n        return [this.props[0],this.props[1],this.props[2],this.props[3],this.props[4],this.props[5],this.props[6],this.props[7],this.props[8],this.props[9],this.props[10],this.props[11],this.props[12],this.props[13],this.props[14],this.props[15]];\r\n    }\r\n\r\n    function toCSS() {\r\n        if(isSafari){\r\n            return \"matrix3d(\" + roundTo2Decimals(this.props[0]) + ',' + roundTo2Decimals(this.props[1]) + ',' + roundTo2Decimals(this.props[2]) + ',' + roundTo2Decimals(this.props[3]) + ',' + roundTo2Decimals(this.props[4]) + ',' + roundTo2Decimals(this.props[5]) + ',' + roundTo2Decimals(this.props[6]) + ',' + roundTo2Decimals(this.props[7]) + ',' + roundTo2Decimals(this.props[8]) + ',' + roundTo2Decimals(this.props[9]) + ',' + roundTo2Decimals(this.props[10]) + ',' + roundTo2Decimals(this.props[11]) + ',' + roundTo2Decimals(this.props[12]) + ',' + roundTo2Decimals(this.props[13]) + ',' + roundTo2Decimals(this.props[14]) + ',' + roundTo2Decimals(this.props[15]) + ')';\r\n        } else {\r\n            this.cssParts[1] = this.props.join(',');\r\n            return this.cssParts.join('');\r\n        }\r\n    }\r\n\r\n    function to2dCSS() {\r\n        return \"matrix(\" + roundTo2Decimals(this.props[0]) + ',' + roundTo2Decimals(this.props[1]) + ',' + roundTo2Decimals(this.props[4]) + ',' + roundTo2Decimals(this.props[5]) + ',' + roundTo2Decimals(this.props[12]) + ',' + roundTo2Decimals(this.props[13]) + \")\";\r\n    }\r\n\r\n    function toString() {\r\n        return \"\" + this.toArray();\r\n    }\r\n\r\n    return function(){\r\n        this.reset = reset;\r\n        this.rotate = rotate;\r\n        this.rotateX = rotateX;\r\n        this.rotateY = rotateY;\r\n        this.rotateZ = rotateZ;\r\n        this.skew = skew;\r\n        this.skewFromAxis = skewFromAxis;\r\n        this.shear = shear;\r\n        this.scale = scale;\r\n        this.setTransform = setTransform;\r\n        this.translate = translate;\r\n        this.transform = transform;\r\n        this.applyToPoint = applyToPoint;\r\n        this.applyToX = applyToX;\r\n        this.applyToY = applyToY;\r\n        this.applyToZ = applyToZ;\r\n        this.applyToPointArray = applyToPointArray;\r\n        this.applyToPointStringified = applyToPointStringified;\r\n        this.toArray = toArray;\r\n        this.toCSS = toCSS;\r\n        this.to2dCSS = to2dCSS;\r\n        this.toString = toString;\r\n        this.clone = clone;\r\n        this.cloneFromProps = cloneFromProps;\r\n        this.inversePoints = inversePoints;\r\n        this.inversePoint = inversePoint;\r\n        this._t = this.transform;\r\n        this.isIdentity = isIdentity;\r\n        this._identity = true;\r\n        this._identityCalculated = false;\r\n\r\n        this.props = [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];\r\n\r\n        this.cssParts = ['matrix3d(','',')'];\r\n    }\r\n}());\r\n\r\nfunction Matrix() {\r\n\r\n\r\n}\r\n\n/*\r\n Copyright 2014 David Bau.\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining\r\n a copy of this software and associated documentation files (the\r\n \"Software\"), to deal in the Software without restriction, including\r\n without limitation the rights to use, copy, modify, merge, publish,\r\n distribute, sublicense, and/or sell copies of the Software, and to\r\n permit persons to whom the Software is furnished to do so, subject to\r\n the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be\r\n included in all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\n IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\n CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\n TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n */\r\n\r\n(function (pool, math) {\r\n//\r\n// The following constants are related to IEEE 754 limits.\r\n//\r\n    var global = this,\r\n        width = 256,        // each RC4 output is 0 <= x < 256\r\n        chunks = 6,         // at least six RC4 outputs for each double\r\n        digits = 52,        // there are 52 significant digits in a double\r\n        rngname = 'random', // rngname: name for Math.random and Math.seedrandom\r\n        startdenom = math.pow(width, chunks),\r\n        significance = math.pow(2, digits),\r\n        overflow = significance * 2,\r\n        mask = width - 1,\r\n        nodecrypto;         // node.js crypto module, initialized at the bottom.\r\n\r\n//\r\n// seedrandom()\r\n// This is the seedrandom function described above.\r\n//\r\n    function seedrandom(seed, options, callback) {\r\n        var key = [];\r\n        options = (options == true) ? { entropy: true } : (options || {});\r\n\r\n        // Flatten the seed string or build one from local entropy if needed.\r\n        var shortseed = mixkey(flatten(\r\n            options.entropy ? [seed, tostring(pool)] :\r\n                (seed == null) ? autoseed() : seed, 3), key);\r\n\r\n        // Use the seed to initialize an ARC4 generator.\r\n        var arc4 = new ARC4(key);\r\n\r\n        // This function returns a random double in [0, 1) that contains\r\n        // randomness in every bit of the mantissa of the IEEE 754 value.\r\n        var prng = function() {\r\n            var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\r\n                d = startdenom,                 //   and denominator d = 2 ^ 48.\r\n                x = 0;                          //   and no 'extra last byte'.\r\n            while (n < significance) {          // Fill up all significant digits by\r\n                n = (n + x) * width;              //   shifting numerator and\r\n                d *= width;                       //   denominator and generating a\r\n                x = arc4.g(1);                    //   new least-significant-byte.\r\n            }\r\n            while (n >= overflow) {             // To avoid rounding up, before adding\r\n                n /= 2;                           //   last byte, shift everything\r\n                d /= 2;                           //   right using integer math until\r\n                x >>>= 1;                         //   we have exactly the desired bits.\r\n            }\r\n            return (n + x) / d;                 // Form the number within [0, 1).\r\n        };\r\n\r\n        prng.int32 = function() { return arc4.g(4) | 0; }\r\n        prng.quick = function() { return arc4.g(4) / 0x100000000; }\r\n        prng.double = prng;\r\n\r\n        // Mix the randomness into accumulated entropy.\r\n        mixkey(tostring(arc4.S), pool);\r\n\r\n        // Calling convention: what to return as a function of prng, seed, is_math.\r\n        return (options.pass || callback ||\r\n        function(prng, seed, is_math_call, state) {\r\n            if (state) {\r\n                // Load the arc4 state from the given state if it has an S array.\r\n                if (state.S) { copy(state, arc4); }\r\n                // Only provide the .state method if requested via options.state.\r\n                prng.state = function() { return copy(arc4, {}); }\r\n            }\r\n\r\n            // If called as a method of Math (Math.seedrandom()), mutate\r\n            // Math.random because that is how seedrandom.js has worked since v1.0.\r\n            if (is_math_call) { math[rngname] = prng; return seed; }\r\n\r\n            // Otherwise, it is a newer calling convention, so return the\r\n            // prng directly.\r\n            else return prng;\r\n        })(\r\n            prng,\r\n            shortseed,\r\n            'global' in options ? options.global : (this == math),\r\n            options.state);\r\n    }\r\n    math['seed' + rngname] = seedrandom;\r\n\r\n//\r\n// ARC4\r\n//\r\n// An ARC4 implementation.  The constructor takes a key in the form of\r\n// an array of at most (width) integers that should be 0 <= x < (width).\r\n//\r\n// The g(count) method returns a pseudorandom integer that concatenates\r\n// the next (count) outputs from ARC4.  Its return value is a number x\r\n// that is in the range 0 <= x < (width ^ count).\r\n//\r\n    function ARC4(key) {\r\n        var t, keylen = key.length,\r\n            me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\r\n\r\n        // The empty key [] is treated as [0].\r\n        if (!keylen) { key = [keylen++]; }\r\n\r\n        // Set up S using the standard key scheduling algorithm.\r\n        while (i < width) {\r\n            s[i] = i++;\r\n        }\r\n        for (i = 0; i < width; i++) {\r\n            s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\r\n            s[j] = t;\r\n        }\r\n\r\n        // The \"g\" method returns the next (count) outputs as one number.\r\n        (me.g = function(count) {\r\n            // Using instance members instead of closure state nearly doubles speed.\r\n            var t, r = 0,\r\n                i = me.i, j = me.j, s = me.S;\r\n            while (count--) {\r\n                t = s[i = mask & (i + 1)];\r\n                r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\r\n            }\r\n            me.i = i; me.j = j;\r\n            return r;\r\n            // For robust unpredictability, the function call below automatically\r\n            // discards an initial batch of values.  This is called RC4-drop[256].\r\n            // See http://google.com/search?q=rsa+fluhrer+response&btnI\r\n        })(width);\r\n    }\r\n\r\n//\r\n// copy()\r\n// Copies internal state of ARC4 to or from a plain object.\r\n//\r\n    function copy(f, t) {\r\n        t.i = f.i;\r\n        t.j = f.j;\r\n        t.S = f.S.slice();\r\n        return t;\r\n    };\r\n\r\n//\r\n// flatten()\r\n// Converts an object tree to nested arrays of strings.\r\n//\r\n    function flatten(obj, depth) {\r\n        var result = [], typ = (typeof obj), prop;\r\n        if (depth && typ == 'object') {\r\n            for (prop in obj) {\r\n                try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\r\n            }\r\n        }\r\n        return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\r\n    }\r\n\r\n//\r\n// mixkey()\r\n// Mixes a string seed into a key that is an array of integers, and\r\n// returns a shortened string seed that is equivalent to the result key.\r\n//\r\n    function mixkey(seed, key) {\r\n        var stringseed = seed + '', smear, j = 0;\r\n        while (j < stringseed.length) {\r\n            key[mask & j] =\r\n                mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\r\n        }\r\n        return tostring(key);\r\n    }\r\n\r\n//\r\n// autoseed()\r\n// Returns an object for autoseeding, using window.crypto and Node crypto\r\n// module if available.\r\n//\r\n    function autoseed() {\r\n        try {\r\n            if (nodecrypto) { return tostring(nodecrypto.randomBytes(width)); }\r\n            var out = new Uint8Array(width);\r\n            (global.crypto || global.msCrypto).getRandomValues(out);\r\n            return tostring(out);\r\n        } catch (e) {\r\n            var browser = global.navigator,\r\n                plugins = browser && browser.plugins;\r\n            return [+new Date, global, plugins, global.screen, tostring(pool)];\r\n        }\r\n    }\r\n\r\n//\r\n// tostring()\r\n// Converts an array of charcodes to a string\r\n//\r\n    function tostring(a) {\r\n        return String.fromCharCode.apply(0, a);\r\n    }\r\n\r\n//\r\n// When seedrandom.js is loaded, we immediately mix a few bits\r\n// from the built-in RNG into the entropy pool.  Because we do\r\n// not want to interfere with deterministic PRNG state later,\r\n// seedrandom will not call math.random on its own again after\r\n// initialization.\r\n//\r\n    mixkey(math.random(), pool);\r\n\r\n//\r\n// Nodejs and AMD support: export the implementation as a module using\r\n// either convention.\r\n//\r\n\r\n// End anonymous scope, and pass initial values.\r\n})(\r\n    [],     // pool: entropy pool starts empty\r\n    BMMath    // math: package containing random, pow, and seedrandom\r\n);\nvar BezierFactory = (function(){\r\n    /**\r\n     * BezierEasing - use bezier curve for transition easing function\r\n     * by Gaëtan Renaudeau 2014 - 2015 – MIT License\r\n     *\r\n     * Credits: is based on Firefox's nsSMILKeySpline.cpp\r\n     * Usage:\r\n     * var spline = BezierEasing([ 0.25, 0.1, 0.25, 1.0 ])\r\n     * spline.get(x) => returns the easing value | x must be in [0, 1] range\r\n     *\r\n     */\r\n\r\n        var ob = {};\r\n    ob.getBezierEasing = getBezierEasing;\r\n    var beziers = {};\r\n\r\n    function getBezierEasing(a,b,c,d,nm){\r\n        var str = nm || ('bez_' + a+'_'+b+'_'+c+'_'+d).replace(/\\./g, 'p');\r\n        if(beziers[str]){\r\n            return beziers[str];\r\n        }\r\n        var bezEasing = new BezierEasing([a,b,c,d]);\r\n        beziers[str] = bezEasing;\r\n        return bezEasing;\r\n    }\r\n\r\n// These values are established by empiricism with tests (tradeoff: performance VS precision)\r\n    var NEWTON_ITERATIONS = 4;\r\n    var NEWTON_MIN_SLOPE = 0.001;\r\n    var SUBDIVISION_PRECISION = 0.0000001;\r\n    var SUBDIVISION_MAX_ITERATIONS = 10;\r\n\r\n    var kSplineTableSize = 11;\r\n    var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\r\n\r\n    var float32ArraySupported = typeof Float32Array === \"function\";\r\n\r\n    function A (aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }\r\n    function B (aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }\r\n    function C (aA1)      { return 3.0 * aA1; }\r\n\r\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\r\n    function calcBezier (aT, aA1, aA2) {\r\n        return ((A(aA1, aA2)*aT + B(aA1, aA2))*aT + C(aA1))*aT;\r\n    }\r\n\r\n// Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\r\n    function getSlope (aT, aA1, aA2) {\r\n        return 3.0 * A(aA1, aA2)*aT*aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\r\n    }\r\n\r\n    function binarySubdivide (aX, aA, aB, mX1, mX2) {\r\n        var currentX, currentT, i = 0;\r\n        do {\r\n            currentT = aA + (aB - aA) / 2.0;\r\n            currentX = calcBezier(currentT, mX1, mX2) - aX;\r\n            if (currentX > 0.0) {\r\n                aB = currentT;\r\n            } else {\r\n                aA = currentT;\r\n            }\r\n        } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\r\n        return currentT;\r\n    }\r\n\r\n    function newtonRaphsonIterate (aX, aGuessT, mX1, mX2) {\r\n        for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\r\n            var currentSlope = getSlope(aGuessT, mX1, mX2);\r\n            if (currentSlope === 0.0) return aGuessT;\r\n            var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\r\n            aGuessT -= currentX / currentSlope;\r\n        }\r\n        return aGuessT;\r\n    }\r\n\r\n    /**\r\n     * points is an array of [ mX1, mY1, mX2, mY2 ]\r\n     */\r\n    function BezierEasing (points) {\r\n        this._p = points;\r\n        this._mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\r\n        this._precomputed = false;\r\n\r\n        this.get = this.get.bind(this);\r\n    }\r\n\r\n    BezierEasing.prototype = {\r\n\r\n        get: function (x) {\r\n            var mX1 = this._p[0],\r\n                mY1 = this._p[1],\r\n                mX2 = this._p[2],\r\n                mY2 = this._p[3];\r\n            if (!this._precomputed) this._precompute();\r\n            if (mX1 === mY1 && mX2 === mY2) return x; // linear\r\n            // Because JavaScript number are imprecise, we should guarantee the extremes are right.\r\n            if (x === 0) return 0;\r\n            if (x === 1) return 1;\r\n            return calcBezier(this._getTForX(x), mY1, mY2);\r\n        },\r\n\r\n        // Private part\r\n\r\n        _precompute: function () {\r\n            var mX1 = this._p[0],\r\n                mY1 = this._p[1],\r\n                mX2 = this._p[2],\r\n                mY2 = this._p[3];\r\n            this._precomputed = true;\r\n            if (mX1 !== mY1 || mX2 !== mY2)\r\n                this._calcSampleValues();\r\n        },\r\n\r\n        _calcSampleValues: function () {\r\n            var mX1 = this._p[0],\r\n                mX2 = this._p[2];\r\n            for (var i = 0; i < kSplineTableSize; ++i) {\r\n                this._mSampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * getTForX chose the fastest heuristic to determine the percentage value precisely from a given X projection.\r\n         */\r\n        _getTForX: function (aX) {\r\n            var mX1 = this._p[0],\r\n                mX2 = this._p[2],\r\n                mSampleValues = this._mSampleValues;\r\n\r\n            var intervalStart = 0.0;\r\n            var currentSample = 1;\r\n            var lastSample = kSplineTableSize - 1;\r\n\r\n            for (; currentSample !== lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {\r\n                intervalStart += kSampleStepSize;\r\n            }\r\n            --currentSample;\r\n\r\n            // Interpolate to provide an initial guess for t\r\n            var dist = (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample+1] - mSampleValues[currentSample]);\r\n            var guessForT = intervalStart + dist * kSampleStepSize;\r\n\r\n            var initialSlope = getSlope(guessForT, mX1, mX2);\r\n            if (initialSlope >= NEWTON_MIN_SLOPE) {\r\n                return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\r\n            } else if (initialSlope === 0.0) {\r\n                return guessForT;\r\n            } else {\r\n                return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\r\n            }\r\n        }\r\n    };\r\n\r\n    return ob;\r\n\r\n}());\n(function () {\r\n    var lastTime = 0;\r\n    var vendors = ['ms', 'moz', 'webkit', 'o'];\r\n    for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\r\n        window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\r\n        window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\r\n    }\r\n    if(!window.requestAnimationFrame)\r\n        window.requestAnimationFrame = function (callback, element) {\r\n            var currTime = new Date().getTime();\r\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n            var id = setTimeout(function () {\r\n                    callback(currTime + timeToCall);\r\n                },\r\n                timeToCall);\r\n            lastTime = currTime + timeToCall;\r\n            return id;\r\n        };\r\n    if(!window.cancelAnimationFrame)\r\n        window.cancelAnimationFrame = function (id) {\r\n            clearTimeout(id);\r\n        };\r\n}());\r\n\nfunction createElement(parent,child,params){\r\n    if(child){\r\n        child.prototype = Object.create(parent.prototype);\r\n        child.prototype.constructor = child;\r\n        child.prototype._parent = parent.prototype;\r\n    }else{\r\n        var instance = Object.create(parent.prototype,params);\r\n        var getType = {};\r\n        if(instance && getType.toString.call(instance.init) === '[object Function]'){\r\n            instance.init();\r\n        }\r\n        return instance;\r\n    }\r\n}\r\n\r\nfunction extendPrototype(source,destination){\r\n    for (var attr in source.prototype) {\r\n        if (source.prototype.hasOwnProperty(attr)) destination.prototype[attr] = source.prototype[attr];\r\n    }\r\n}\nfunction bezFunction(){\r\n\r\n    var easingFunctions = [];\r\n    var math = Math;\r\n\r\n    function pointOnLine2D(x1,y1, x2,y2, x3,y3){\r\n        var det1 = (x1*y2) + (y1*x3) + (x2*y3) - (x3*y2) - (y3*x1) - (x2*y1);\r\n        return det1 > -0.0001 && det1 < 0.0001;\r\n    }\r\n\r\n    function pointOnLine3D(x1,y1,z1, x2,y2,z2, x3,y3,z3){\r\n        if(z1 === 0 && z2 === 0 && z3 === 0) {\r\n            return pointOnLine2D(x1,y1, x2,y2, x3,y3);\r\n        }\r\n        var dist1 = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2) + Math.pow(z2 - z1, 2));\r\n        var dist2 = Math.sqrt(Math.pow(x3 - x1, 2) + Math.pow(y3 - y1, 2) + Math.pow(z3 - z1, 2));\r\n        var dist3 = Math.sqrt(Math.pow(x3 - x2, 2) + Math.pow(y3 - y2, 2) + Math.pow(z3 - z2, 2));\r\n        var diffDist;\r\n        if(dist1 > dist2){\r\n            if(dist1 > dist3){\r\n                diffDist = dist1 - dist2 - dist3;\r\n            } else {\r\n                diffDist = dist3 - dist2 - dist1;\r\n            }\r\n        } else if(dist3 > dist2){\r\n            diffDist = dist3 - dist2 - dist1;\r\n        } else {\r\n            diffDist = dist2 - dist1 - dist3;\r\n        }\r\n        return diffDist > -0.0001 && diffDist < 0.0001;\r\n    }\r\n\r\n    /*function getEasingCurve(aa,bb,cc,dd,encodedFuncName) {\r\n        if(!encodedFuncName){\r\n            encodedFuncName = ('bez_' + aa+'_'+bb+'_'+cc+'_'+dd).replace(/\\./g, 'p');\r\n        }\r\n        if(easingFunctions[encodedFuncName]){\r\n            return easingFunctions[encodedFuncName];\r\n        }\r\n        var A0, B0, C0;\r\n        var A1, B1, C1;\r\n        easingFunctions[encodedFuncName] = function(tt) {\r\n            var x = tt;\r\n            var i = 0, z;\r\n            while (++i < 20) {\r\n                C0 = 3 * aa;\r\n                B0 = 3 * (cc - aa) - C0;\r\n                A0 = 1 - C0 - B0;\r\n                z = (x * (C0 + x * (B0 + x * A0))) - tt;\r\n                if (bm_abs(z) < 1e-3) break;\r\n                x -= z / (C0 + x * (2 * B0 + 3 * A0 * x));\r\n            }\r\n            C1 = 3 * bb;\r\n            B1 = 3 * (dd - bb) - C1;\r\n            A1 = 1 - C1 - B1;\r\n            var polyB = x * (C1 + x * (B1 + x * A1));\r\n            //return c * polyB + b;\r\n            return polyB;\r\n        };\r\n        return easingFunctions[encodedFuncName];\r\n    }*/\r\n    var getBezierLength = (function(){\r\n\r\n        function Segment(l,p){\r\n            this.l = l;\r\n            this.p = p;\r\n        }\r\n\r\n        return function(pt1,pt2,pt3,pt4){\r\n            var curveSegments = defaultCurveSegments;\r\n            var k;\r\n            var i, len;\r\n            var ptCoord,perc,addedLength = 0;\r\n            var ptDistance;\r\n            var point = [],lastPoint = [];\r\n            var lengthData = {\r\n                addedLength: 0,\r\n                segments: []\r\n            };\r\n            len = pt3.length;\r\n            for(k=0;k<curveSegments;k+=1){\r\n                perc = k/(curveSegments-1);\r\n                ptDistance = 0;\r\n                for(i=0;i<len;i+=1){\r\n                    ptCoord = bm_pow(1-perc,3)*pt1[i]+3*bm_pow(1-perc,2)*perc*pt3[i]+3*(1-perc)*bm_pow(perc,2)*pt4[i]+bm_pow(perc,3)*pt2[i];\r\n                    point[i] = ptCoord;\r\n                    if(lastPoint[i] !== null){\r\n                        ptDistance += bm_pow(point[i] - lastPoint[i],2);\r\n                    }\r\n                    lastPoint[i] = point[i];\r\n                }\r\n                if(ptDistance){\r\n                    ptDistance = bm_sqrt(ptDistance);\r\n                    addedLength += ptDistance;\r\n                }\r\n                lengthData.segments.push(new Segment(addedLength,perc));\r\n            }\r\n            lengthData.addedLength = addedLength;\r\n            return lengthData;\r\n        };\r\n    }());\r\n\r\n    function getSegmentsLength(shapeData) {\r\n        var closed = shapeData.c;\r\n        var pathV = shapeData.v;\r\n        var pathO = shapeData.o;\r\n        var pathI = shapeData.i;\r\n        var i, len = shapeData._length;\r\n        var lengths = [];\r\n        var totalLength = 0;\r\n        for(i=0;i<len-1;i+=1){\r\n            lengths[i] = getBezierLength(pathV[i],pathV[i+1],pathO[i],pathI[i+1]);\r\n            totalLength += lengths[i].addedLength;\r\n        }\r\n        if(closed){\r\n            lengths[i] = getBezierLength(pathV[i],pathV[0],pathO[i],pathI[0]);\r\n            totalLength += lengths[i].addedLength;\r\n        }\r\n        return {lengths:lengths,totalLength:totalLength};\r\n    }\r\n\r\n    function BezierData(length){\r\n        this.segmentLength = 0;\r\n        this.points = new Array(length);\r\n    }\r\n\r\n    function PointData(partial,point){\r\n        this.partialLength = partial;\r\n        this.point = point;\r\n    }\r\n\r\n    var buildBezierData = (function(){\r\n\r\n        var storedData = {};\r\n\r\n        return function (keyData){\r\n            var pt1 = keyData.s;\r\n            var pt2 = keyData.e;\r\n            var pt3 = keyData.to;\r\n            var pt4 = keyData.ti;\r\n            var bezierName = (pt1.join('_')+'_'+pt2.join('_')+'_'+pt3.join('_')+'_'+pt4.join('_')).replace(/\\./g, 'p');\r\n            if(storedData[bezierName]){\r\n                keyData.bezierData = storedData[bezierName];\r\n                return;\r\n            }\r\n        var curveSegments = defaultCurveSegments;\r\n        var k, i, len;\r\n            var ptCoord,perc,addedLength = 0;\r\n            var ptDistance;\r\n            var point,lastPoint = null;\r\n            if(pt1.length === 2 && (pt1[0] != pt2[0] || pt1[1] != pt2[1]) && pointOnLine2D(pt1[0],pt1[1],pt2[0],pt2[1],pt1[0]+pt3[0],pt1[1]+pt3[1]) && pointOnLine2D(pt1[0],pt1[1],pt2[0],pt2[1],pt2[0]+pt4[0],pt2[1]+pt4[1])){\r\n                curveSegments = 2;\r\n            }\r\n            var bezierData = new BezierData(curveSegments);\r\n            len = pt3.length;\r\n            for(k=0;k<curveSegments;k+=1){\r\n            point = new Array(len);\r\n                perc = k/(curveSegments-1);\r\n                ptDistance = 0;\r\n                for(i=0;i<len;i+=1){\r\n                ptCoord = bm_pow(1-perc,3)*pt1[i]+3*bm_pow(1-perc,2)*perc*(pt1[i] + pt3[i])+3*(1-perc)*bm_pow(perc,2)*(pt2[i] + pt4[i])+bm_pow(perc,3)*pt2[i];\r\n                point[i] = ptCoord;\r\n                    if(lastPoint !== null){\r\n                    ptDistance += bm_pow(point[i] - lastPoint[i],2);\r\n                    }\r\n                }\r\n            ptDistance = bm_sqrt(ptDistance);\r\n                addedLength += ptDistance;\r\n                bezierData.points[k] = new PointData(ptDistance,point);\r\n                lastPoint = point;\r\n            }\r\n            bezierData.segmentLength = addedLength;\r\n            keyData.bezierData = bezierData;\r\n            storedData[bezierName] = bezierData;\r\n\r\n        }\r\n    }());\r\n\r\n    function getDistancePerc(perc,bezierData){\r\n        var segments = bezierData.segments;\r\n        var len = segments.length;\r\n        var initPos = bm_floor((len-1)*perc);\r\n        var lengthPos = perc*bezierData.addedLength;\r\n        var lPerc = 0;\r\n        if(lengthPos == segments[initPos].l){\r\n            return segments[initPos].p;\r\n        }else{\r\n            var dir = segments[initPos].l > lengthPos ? -1 : 1;\r\n            var flag = true;\r\n            while(flag){\r\n                if(segments[initPos].l <= lengthPos && segments[initPos+1].l > lengthPos){\r\n                    lPerc = (lengthPos - segments[initPos].l)/(segments[initPos+1].l-segments[initPos].l);\r\n                    flag = false;\r\n                }else{\r\n                    initPos += dir;\r\n                }\r\n                if(initPos < 0 || initPos >= len - 1){\r\n                    flag = false;\r\n                }\r\n            }\r\n            return segments[initPos].p + (segments[initPos+1].p - segments[initPos].p)*lPerc;\r\n        }\r\n    }\r\n\r\n    function SegmentPoints(){\r\n        this.pt1 = new Array(2);\r\n        this.pt2 = new Array(2);\r\n        this.pt3 = new Array(2);\r\n        this.pt4 = new Array(2);\r\n    }\r\n\r\n    function getPointInSegment(pt1, pt2, pt3, pt4, percent, bezierData) {\r\n        var t1 = getDistancePerc(percent,bezierData);\r\n        var u0 = 1;\r\n        var u1 = 1 - t1;\r\n        var ptX = Math.round((u1*u1*u1* pt1[0] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[0] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[0] + t1*t1*t1* pt2[0])* 1000) / 1000;\r\n        var ptY = Math.round((u1*u1*u1* pt1[1] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[1] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[1] + t1*t1*t1* pt2[1])* 1000) / 1000;\r\n        return [ptX, ptY];\r\n    }\r\n\r\n    function getNewSegment(pt1,pt2,pt3,pt4,startPerc,endPerc, bezierData){\r\n\r\n        var pts = new SegmentPoints();\r\n        startPerc = startPerc < 0 ? 0 : startPerc > 1 ? 1 : startPerc;\r\n        var t0 = getDistancePerc(startPerc,bezierData);\r\n        endPerc = endPerc > 1 ? 1 : endPerc;\r\n        var t1 = getDistancePerc(endPerc,bezierData);\r\n        var i, len = pt1.length;\r\n        var u0 = 1 - t0;\r\n        var u1 = 1 - t1;\r\n        //Math.round(num * 100) / 100\r\n        for(i=0;i<len;i+=1){\r\n            pts.pt1[i] =  Math.round((u0*u0*u0* pt1[i] + (t0*u0*u0 + u0*t0*u0 + u0*u0*t0) * pt3[i] + (t0*t0*u0 + u0*t0*t0 + t0*u0*t0)* pt4[i] + t0*t0*t0* pt2[i])* 1000) / 1000;\r\n            pts.pt3[i] = Math.round((u0*u0*u1*pt1[i] + (t0*u0*u1 + u0*t0*u1 + u0*u0*t1)* pt3[i] + (t0*t0*u1 + u0*t0*t1 + t0*u0*t1)* pt4[i] + t0*t0*t1* pt2[i])* 1000) / 1000;\r\n            pts.pt4[i] = Math.round((u0*u1*u1* pt1[i] + (t0*u1*u1 + u0*t1*u1 + u0*u1*t1)* pt3[i] + (t0*t1*u1 + u0*t1*t1 + t0*u1*t1)* pt4[i] + t0*t1*t1* pt2[i])* 1000) / 1000;\r\n            pts.pt2[i] = Math.round((u1*u1*u1* pt1[i] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[i] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[i] + t1*t1*t1* pt2[i])* 1000) / 1000;\r\n        }\r\n        return pts;\r\n    }\r\n\r\n    return {\r\n        //getEasingCurve : getEasingCurve,\r\n        getBezierLength : getBezierLength,\r\n        getSegmentsLength : getSegmentsLength,\r\n        getNewSegment : getNewSegment,\r\n        getPointInSegment : getPointInSegment,\r\n        buildBezierData : buildBezierData,\r\n        pointOnLine2D : pointOnLine2D,\r\n        pointOnLine3D : pointOnLine3D\r\n    };\r\n}\r\n\r\nvar bez = bezFunction();\nfunction dataFunctionManager(){\r\n\r\n    //var tCanvasHelper = document.createElement('canvas').getContext('2d');\r\n\r\n    function completeLayers(layers, comps, fontManager){\r\n        var layerData;\r\n        var animArray, lastFrame;\r\n        var i, len = layers.length;\r\n        var j, jLen, k, kLen;\r\n        for(i=0;i<len;i+=1){\r\n            layerData = layers[i];\r\n            if(!('ks' in layerData) || layerData.completed){\r\n                continue;\r\n            }\r\n            layerData.completed = true;\r\n            if(layerData.tt){\r\n                layers[i-1].td = layerData.tt;\r\n            }\r\n            animArray = [];\r\n            lastFrame = -1;\r\n            if(layerData.hasMask){\r\n                var maskProps = layerData.masksProperties;\r\n                jLen = maskProps.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    if(maskProps[j].pt.k.i){\r\n                        convertPathsToAbsoluteValues(maskProps[j].pt.k);\r\n                    }else{\r\n                        kLen = maskProps[j].pt.k.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            if(maskProps[j].pt.k[k].s){\r\n                                convertPathsToAbsoluteValues(maskProps[j].pt.k[k].s[0]);\r\n                            }\r\n                            if(maskProps[j].pt.k[k].e){\r\n                                convertPathsToAbsoluteValues(maskProps[j].pt.k[k].e[0]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(layerData.ty===0){\r\n                layerData.layers = findCompLayers(layerData.refId, comps);\r\n                completeLayers(layerData.layers,comps, fontManager);\r\n            }else if(layerData.ty === 4){\r\n                completeShapes(layerData.shapes);\r\n            }else if(layerData.ty == 5){\r\n                completeText(layerData, fontManager);\r\n            }\r\n        }\r\n    }\r\n\r\n    function findCompLayers(id,comps){\r\n        var i = 0, len = comps.length;\r\n        while(i<len){\r\n            if(comps[i].id === id){\r\n                if(!comps[i].layers.__used) {\r\n                    comps[i].layers.__used = true;\r\n                    return comps[i].layers;\r\n                }\r\n                return JSON.parse(JSON.stringify(comps[i].layers));\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    function completeShapes(arr){\r\n        var i, len = arr.length;\r\n        var j, jLen;\r\n        var hasPaths = false;\r\n        for(i=len-1;i>=0;i-=1){\r\n            if(arr[i].ty == 'sh'){\r\n                if(arr[i].ks.k.i){\r\n                    convertPathsToAbsoluteValues(arr[i].ks.k);\r\n                }else{\r\n                    jLen = arr[i].ks.k.length;\r\n                    for(j=0;j<jLen;j+=1){\r\n                        if(arr[i].ks.k[j].s){\r\n                            convertPathsToAbsoluteValues(arr[i].ks.k[j].s[0]);\r\n                        }\r\n                        if(arr[i].ks.k[j].e){\r\n                            convertPathsToAbsoluteValues(arr[i].ks.k[j].e[0]);\r\n                        }\r\n                    }\r\n                }\r\n                hasPaths = true;\r\n            }else if(arr[i].ty == 'gr'){\r\n                completeShapes(arr[i].it);\r\n            }\r\n        }\r\n        /*if(hasPaths){\r\n            //mx: distance\r\n            //ss: sensitivity\r\n            //dc: decay\r\n            arr.splice(arr.length-1,0,{\r\n                \"ty\": \"ms\",\r\n                \"mx\":20,\r\n                \"ss\":10,\r\n                 \"dc\":0.001,\r\n                \"maxDist\":200\r\n            });\r\n        }*/\r\n    }\r\n\r\n    function convertPathsToAbsoluteValues(path){\r\n        var i, len = path.i.length;\r\n        for(i=0;i<len;i+=1){\r\n            path.i[i][0] += path.v[i][0];\r\n            path.i[i][1] += path.v[i][1];\r\n            path.o[i][0] += path.v[i][0];\r\n            path.o[i][1] += path.v[i][1];\r\n        }\r\n    }\r\n\r\n    function checkVersion(minimum,animVersionString){\r\n        var animVersion = animVersionString ? animVersionString.split('.') : [100,100,100];\r\n        if(minimum[0]>animVersion[0]){\r\n            return true;\r\n        } else if(animVersion[0] > minimum[0]){\r\n            return false;\r\n        }\r\n        if(minimum[1]>animVersion[1]){\r\n            return true;\r\n        } else if(animVersion[1] > minimum[1]){\r\n            return false;\r\n        }\r\n        if(minimum[2]>animVersion[2]){\r\n            return true;\r\n        } else if(animVersion[2] > minimum[2]){\r\n            return false;\r\n        }\r\n    }\r\n\r\n    var checkText = (function(){\r\n        var minimumVersion = [4,4,14];\r\n\r\n        function updateTextLayer(textLayer){\r\n            var documentData = textLayer.t.d;\r\n            textLayer.t.d = {\r\n                k: [\r\n                    {\r\n                        s:documentData,\r\n                        t:0\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var i, len = layers.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(layers[i].ty === 5){\r\n                    updateTextLayer(layers[i]);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }())\r\n\r\n    var checkChars = (function() {\r\n        var minimumVersion = [4,7,99];\r\n        return function (animationData){\r\n            if(animationData.chars && !checkVersion(minimumVersion,animationData.v)){\r\n                var i, len = animationData.chars.length, j, jLen, k, kLen;\r\n                var pathData, paths;\r\n                for(i = 0; i < len; i += 1) {\r\n                    if(animationData.chars[i].data && animationData.chars[i].data.shapes) {\r\n                        paths = animationData.chars[i].data.shapes[0].it;\r\n                        jLen = paths.length;\r\n\r\n                        for(j = 0; j < jLen; j += 1) {\r\n                            pathData = paths[j].ks.k;\r\n                            if(!pathData.__converted) {\r\n                                convertPathsToAbsoluteValues(paths[j].ks.k);\r\n                                pathData.__converted = true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }())\r\n\r\n    var checkColors = (function(){\r\n        var minimumVersion = [4,1,9];\r\n\r\n        function iterateShapes(shapes){\r\n            var i, len = shapes.length;\r\n            var j, jLen;\r\n            for(i=0;i<len;i+=1){\r\n                if(shapes[i].ty === 'gr'){\r\n                    iterateShapes(shapes[i].it);\r\n                }else if(shapes[i].ty === 'fl' || shapes[i].ty === 'st'){\r\n                    if(shapes[i].c.k && shapes[i].c.k[0].i){\r\n                        jLen = shapes[i].c.k.length;\r\n                        for(j=0;j<jLen;j+=1){\r\n                            if(shapes[i].c.k[j].s){\r\n                                shapes[i].c.k[j].s[0] /= 255;\r\n                                shapes[i].c.k[j].s[1] /= 255;\r\n                                shapes[i].c.k[j].s[2] /= 255;\r\n                                shapes[i].c.k[j].s[3] /= 255;\r\n                            }\r\n                            if(shapes[i].c.k[j].e){\r\n                                shapes[i].c.k[j].e[0] /= 255;\r\n                                shapes[i].c.k[j].e[1] /= 255;\r\n                                shapes[i].c.k[j].e[2] /= 255;\r\n                                shapes[i].c.k[j].e[3] /= 255;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        shapes[i].c.k[0] /= 255;\r\n                        shapes[i].c.k[1] /= 255;\r\n                        shapes[i].c.k[2] /= 255;\r\n                        shapes[i].c.k[3] /= 255;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var i, len = layers.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(layers[i].ty === 4){\r\n                    iterateShapes(layers[i].shapes);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }());\r\n\r\n    var checkShapes = (function(){\r\n        var minimumVersion = [4,4,18];\r\n\r\n\r\n\r\n        function completeShapes(arr){\r\n            var i, len = arr.length;\r\n            var j, jLen;\r\n            var hasPaths = false;\r\n            for(i=len-1;i>=0;i-=1){\r\n                if(arr[i].ty == 'sh'){\r\n                    if(arr[i].ks.k.i){\r\n                        arr[i].ks.k.c = arr[i].closed;\r\n                    }else{\r\n                        jLen = arr[i].ks.k.length;\r\n                        for(j=0;j<jLen;j+=1){\r\n                            if(arr[i].ks.k[j].s){\r\n                                arr[i].ks.k[j].s[0].c = arr[i].closed;\r\n                            }\r\n                            if(arr[i].ks.k[j].e){\r\n                                arr[i].ks.k[j].e[0].c = arr[i].closed;\r\n                            }\r\n                        }\r\n                    }\r\n                    hasPaths = true;\r\n                }else if(arr[i].ty == 'gr'){\r\n                    completeShapes(arr[i].it);\r\n                }\r\n            }\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var layerData;\r\n            var i, len = layers.length;\r\n            var j, jLen, k, kLen;\r\n            for(i=0;i<len;i+=1){\r\n                layerData = layers[i];\r\n                if(layerData.hasMask){\r\n                    var maskProps = layerData.masksProperties;\r\n                    jLen = maskProps.length;\r\n                    for(j=0;j<jLen;j+=1){\r\n                        if(maskProps[j].pt.k.i){\r\n                            maskProps[j].pt.k.c = maskProps[j].cl;\r\n                        }else{\r\n                            kLen = maskProps[j].pt.k.length;\r\n                            for(k=0;k<kLen;k+=1){\r\n                                if(maskProps[j].pt.k[k].s){\r\n                                    maskProps[j].pt.k[k].s[0].c = maskProps[j].cl;\r\n                                }\r\n                                if(maskProps[j].pt.k[k].e){\r\n                                    maskProps[j].pt.k[k].e[0].c = maskProps[j].cl;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if(layerData.ty === 4){\r\n                    completeShapes(layerData.shapes);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }());\r\n\r\n    /*function blitPaths(path){\r\n        var i, len = path.i.length;\r\n        for(i=0;i<len;i+=1){\r\n            path.i[i][0] /= blitter;\r\n            path.i[i][1] /= blitter;\r\n            path.o[i][0] /= blitter;\r\n            path.o[i][1] /= blitter;\r\n            path.v[i][0] /= blitter;\r\n            path.v[i][1] /= blitter;\r\n        }\r\n    }\r\n\r\n    function blitShapes(arr){\r\n        var i, len = arr.length;\r\n        var j, jLen;\r\n        var hasPaths = false;\r\n        for(i=len-1;i>=0;i-=1){\r\n            if(arr[i].ty == 'sh'){\r\n                if(arr[i].ks.k.i){\r\n                    blitPaths(arr[i].ks.k);\r\n                }else{\r\n                    jLen = arr[i].ks.k.length;\r\n                    for(j=0;j<jLen;j+=1){\r\n                        if(arr[i].ks.k[j].s){\r\n                            blitPaths(arr[i].ks.k[j].s[0]);\r\n                        }\r\n                        if(arr[i].ks.k[j].e){\r\n                            blitPaths(arr[i].ks.k[j].e[0]);\r\n                        }\r\n                    }\r\n                }\r\n                hasPaths = true;\r\n            }else if(arr[i].ty == 'gr'){\r\n                blitShapes(arr[i].it);\r\n            }else if(arr[i].ty == 'rc'){\r\n                blitProperty(arr[i].p);\r\n                blitProperty(arr[i].s);\r\n            }else if(arr[i].ty == 'st'){\r\n                blitProperty(arr[i].w);\r\n            }else if(arr[i].ty == 'tr'){\r\n                blitProperty(arr[i].p);\r\n                blitProperty(arr[i].sk);\r\n                blitProperty(arr[i].a);\r\n            }else if(arr[i].ty == 'el'){\r\n                blitProperty(arr[i].p);\r\n                blitProperty(arr[i].s);\r\n            }else if(arr[i].ty == 'rd'){\r\n                blitProperty(arr[i].r);\r\n            }else{\r\n\r\n                //console.log(arr[i].ty );\r\n            }\r\n        }\r\n    }\r\n\r\n    function blitText(data, fontManager){\r\n\r\n    }\r\n\r\n    function blitValue(val){\r\n        if(typeof(val) === 'number'){\r\n            val /= blitter;\r\n        } else {\r\n            var i = val.length-1;\r\n            while(i>=0){\r\n                val[i] /= blitter;\r\n                i-=1;\r\n            }\r\n        }\r\n        return val;\r\n    }\r\n\r\n    function blitProperty(data){\r\n        if(!data.k.length){\r\n            data.k = blitValue(data.k);\r\n        }else if(typeof(data.k[0]) === 'number'){\r\n            data.k = blitValue(data.k);\r\n        } else {\r\n            var i, len = data.k.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(data.k[i].s){\r\n                    //console.log('pre S: ', data.k[i].s);\r\n                    data.k[i].s = blitValue(data.k[i].s);\r\n                    //console.log('post S: ', data.k[i].s);\r\n                }\r\n                if(data.k[i].e){\r\n                    //console.log('pre E: ', data.k[i].e);\r\n                    data.k[i].e = blitValue(data.k[i].e);\r\n                    //console.log('post E: ', data.k[i].e);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function blitLayers(layers,comps, fontManager){\r\n        var layerData;\r\n        var animArray, lastFrame;\r\n        var i, len = layers.length;\r\n        var j, jLen, k, kLen;\r\n        for(i=0;i<len;i+=1){\r\n            layerData = layers[i];\r\n            if(!('ks' in layerData)){\r\n                continue;\r\n            }\r\n            blitProperty(layerData.ks.a);\r\n            blitProperty(layerData.ks.p);\r\n            layerData.completed = true;\r\n            if(layerData.tt){\r\n                layers[i-1].td = layerData.tt;\r\n            }\r\n            animArray = [];\r\n            lastFrame = -1;\r\n            if(layerData.hasMask){\r\n                var maskProps = layerData.masksProperties;\r\n                jLen = maskProps.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    if(maskProps[j].pt.k.i){\r\n                        blitPaths(maskProps[j].pt.k);\r\n                    }else{\r\n                        kLen = maskProps[j].pt.k.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            if(maskProps[j].pt.k[k].s){\r\n                                blitPaths(maskProps[j].pt.k[k].s[0]);\r\n                            }\r\n                            if(maskProps[j].pt.k[k].e){\r\n                                blitPaths(maskProps[j].pt.k[k].e[0]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(layerData.ty===0){\r\n                layerData.w = Math.round(layerData.w/blitter);\r\n                layerData.h = Math.round(layerData.h/blitter);\r\n                blitLayers(layerData.layers,comps, fontManager);\r\n            }else if(layerData.ty === 4){\r\n                blitShapes(layerData.shapes);\r\n            }else if(layerData.ty == 5){\r\n                blitText(layerData, fontManager);\r\n            }else if(layerData.ty == 1){\r\n                layerData.sh /= blitter;\r\n                layerData.sw /= blitter;\r\n            } else {\r\n            }\r\n        }\r\n    }\r\n\r\n    function blitAnimation(animationData,comps, fontManager){\r\n        blitLayers(animationData.layers,comps, fontManager);\r\n    }*/\r\n\r\n    function completeData(animationData, fontManager){\r\n        if(animationData.__complete){\r\n            return;\r\n        }\r\n        checkColors(animationData);\r\n        checkText(animationData);\r\n        checkChars(animationData);\r\n        checkShapes(animationData);\r\n        completeLayers(animationData.layers, animationData.assets, fontManager);\r\n        animationData.__complete = true;\r\n        //blitAnimation(animationData, animationData.assets, fontManager);\r\n    }\r\n\r\n    function completeText(data, fontManager){\r\n        if(data.t.a.length === 0 && !('m' in data.t.p)){\r\n            data.singleShape = true;\r\n        }\r\n    }\r\n\r\n    var moduleOb = {};\r\n    moduleOb.completeData = completeData;\r\n\r\n    return moduleOb;\r\n}\r\n\r\nvar dataManager = dataFunctionManager();\nvar FontManager = (function(){\r\n\r\n    var maxWaitingTime = 5000;\r\n\r\n    function setUpNode(font, family){\r\n        var parentNode = document.createElement('span');\r\n        parentNode.style.fontFamily    = family;\r\n        var node = document.createElement('span');\r\n        // Characters that vary significantly among different fonts\r\n        node.innerHTML = 'giItT1WQy@!-/#';\r\n        // Visible - so we can measure it - but not on the screen\r\n        parentNode.style.position      = 'absolute';\r\n        parentNode.style.left          = '-10000px';\r\n        parentNode.style.top           = '-10000px';\r\n        // Large font size makes even subtle changes obvious\r\n        parentNode.style.fontSize      = '300px';\r\n        // Reset any font properties\r\n        parentNode.style.fontVariant   = 'normal';\r\n        parentNode.style.fontStyle     = 'normal';\r\n        parentNode.style.fontWeight    = 'normal';\r\n        parentNode.style.letterSpacing = '0';\r\n        parentNode.appendChild(node);\r\n        document.body.appendChild(parentNode);\r\n\r\n        // Remember width with no applied web font\r\n        var width = node.offsetWidth;\r\n        node.style.fontFamily = font + ', '+family;\r\n        return {node:node, w:width, parent:parentNode};\r\n    }\r\n\r\n    function checkLoadedFonts() {\r\n        var i, len = this.fonts.length;\r\n        var node, w;\r\n        var loadedCount = len;\r\n        for(i=0;i<len; i+= 1){\r\n            if(this.fonts[i].loaded){\r\n                loadedCount -= 1;\r\n                continue;\r\n            }\r\n            if(this.fonts[i].fOrigin === 't' || this.fonts[i].origin === 2){\r\n                if(window.Typekit && window.Typekit.load && this.typekitLoaded === 0){\r\n                    this.typekitLoaded = 1;\r\n                    try{window.Typekit.load({\r\n                        async: true,\r\n                        active: function() {\r\n                            this.typekitLoaded = 2;\r\n                        }.bind(this)\r\n                    });}catch(e){}\r\n                }\r\n                if(this.typekitLoaded === 2) {\r\n                    this.fonts[i].loaded = true;\r\n                }\r\n            } else if(this.fonts[i].fOrigin === 'n' || this.fonts[i].origin === 0){\r\n                this.fonts[i].loaded = true;\r\n            } else{\r\n                node = this.fonts[i].monoCase.node;\r\n                w = this.fonts[i].monoCase.w;\r\n                if(node.offsetWidth !== w){\r\n                    loadedCount -= 1;\r\n                    this.fonts[i].loaded = true;\r\n                }else{\r\n                    node = this.fonts[i].sansCase.node;\r\n                    w = this.fonts[i].sansCase.w;\r\n                    if(node.offsetWidth !== w){\r\n                        loadedCount -= 1;\r\n                        this.fonts[i].loaded = true;\r\n                    }\r\n                }\r\n                if(this.fonts[i].loaded){\r\n                    this.fonts[i].sansCase.parent.parentNode.removeChild(this.fonts[i].sansCase.parent);\r\n                    this.fonts[i].monoCase.parent.parentNode.removeChild(this.fonts[i].monoCase.parent);\r\n                }\r\n            }\r\n        }\r\n\r\n        if(loadedCount !== 0 && Date.now() - this.initTime < maxWaitingTime){\r\n            setTimeout(checkLoadedFonts.bind(this),20);\r\n        }else{\r\n            setTimeout(function(){this.loaded = true;}.bind(this),0);\r\n\r\n        }\r\n    };\r\n\r\n    function createHelper(def, fontData){\r\n        var tHelper = document.createElementNS(svgNS,'text');\r\n        tHelper.style.fontSize = '100px';\r\n        tHelper.style.fontFamily = fontData.fFamily;\r\n        tHelper.textContent = '1';\r\n        if(fontData.fClass){\r\n            tHelper.style.fontFamily = 'inherit';\r\n            tHelper.className = fontData.fClass;\r\n        } else {\r\n            tHelper.style.fontFamily = fontData.fFamily;\r\n        }\r\n        def.appendChild(tHelper);\r\n        var tCanvasHelper = document.createElement('canvas').getContext('2d');\r\n        tCanvasHelper.font = '100px '+ fontData.fFamily;\r\n        return tCanvasHelper;\r\n    }\r\n\r\n    function addFonts(fontData, defs){\r\n        if(!fontData){\r\n            this.loaded = true;\r\n            return;\r\n        }\r\n        if(this.chars){\r\n            this.loaded = true;\r\n            this.fonts = fontData.list;\r\n            return;\r\n        }\r\n\r\n        var fontArr = fontData.list;\r\n        var i, len = fontArr.length;\r\n        for(i=0; i<len; i+= 1){\r\n            fontArr[i].loaded = false;\r\n            fontArr[i].monoCase = setUpNode(fontArr[i].fFamily,'monospace');\r\n            fontArr[i].sansCase = setUpNode(fontArr[i].fFamily,'sans-serif');\r\n            if(!fontArr[i].fPath) {\r\n                fontArr[i].loaded = true;\r\n            }else if(fontArr[i].fOrigin === 'p' || fontArr[i].origin === 3){\r\n                var s = document.createElement('style');\r\n                s.type = \"text/css\";\r\n                s.innerHTML = \"@font-face {\" + \"font-family: \"+fontArr[i].fFamily+\"; font-style: normal; src: url('\"+fontArr[i].fPath+\"');}\";\r\n                defs.appendChild(s);\r\n            } else if(fontArr[i].fOrigin === 'g' || fontArr[i].origin === 1){\r\n                //<link href='https://fonts.googleapis.com/css?family=Montserrat' rel='stylesheet' type='text/css'>\r\n                var l = document.createElement('link');\r\n                l.type = \"text/css\";\r\n                l.rel = \"stylesheet\";\r\n                l.href = fontArr[i].fPath;\r\n                defs.appendChild(l);\r\n            } else if(fontArr[i].fOrigin === 't' || fontArr[i].origin === 2){\r\n                //<link href='https://fonts.googleapis.com/css?family=Montserrat' rel='stylesheet' type='text/css'>\r\n                var sc = document.createElement('script');\r\n                sc.setAttribute('src',fontArr[i].fPath);\r\n                defs.appendChild(sc);\r\n            }\r\n            fontArr[i].helper = createHelper(defs,fontArr[i]);\r\n            this.fonts.push(fontArr[i]);\r\n        }\r\n        checkLoadedFonts.bind(this)();\r\n    }\r\n\r\n    function addChars(chars){\r\n        if(!chars){\r\n            return;\r\n        }\r\n        if(!this.chars){\r\n            this.chars = [];\r\n        }\r\n        var i, len = chars.length;\r\n        var j, jLen = this.chars.length, found;\r\n        for(i=0;i<len;i+=1){\r\n            j = 0;\r\n            found = false;\r\n            while(j<jLen){\r\n                if(this.chars[j].style === chars[i].style && this.chars[j].fFamily === chars[i].fFamily && this.chars[j].ch === chars[i].ch){\r\n                    found = true;\r\n                }\r\n                j += 1;\r\n            }\r\n            if(!found){\r\n                this.chars.push(chars[i]);\r\n                jLen += 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    function getCharData(char, style, font){\r\n        var i = 0, len = this.chars.length;\r\n        while( i < len) {\r\n            if(this.chars[i].ch === char && this.chars[i].style === style && this.chars[i].fFamily === font){\r\n                return this.chars[i];\r\n            }\r\n            i+= 1;\r\n        }\r\n    }\r\n\r\n    function measureText(char, fontName, size){\r\n        var fontData = this.getFontByName(fontName);\r\n        var tHelper = fontData.helper;\r\n        //tHelper.textContent = char;\r\n        return tHelper.measureText(char).width*size/100;\r\n        //return tHelper.getComputedTextLength()*size/100;\r\n    }\r\n\r\n    function getFontByName(name){\r\n        var i = 0, len = this.fonts.length;\r\n        while(i<len){\r\n            if(this.fonts[i].fName === name) {\r\n                return this.fonts[i];\r\n            }\r\n            i += 1;\r\n        }\r\n        return 'sans-serif';\r\n    }\r\n\r\n    var Font = function(){\r\n        this.fonts = [];\r\n        this.chars = null;\r\n        this.typekitLoaded = 0;\r\n        this.loaded = false;\r\n        this.initTime = Date.now();\r\n    };\r\n    Font.prototype.addChars = addChars;\r\n    Font.prototype.addFonts = addFonts;\r\n    Font.prototype.getCharData = getCharData;\r\n    Font.prototype.getFontByName = getFontByName;\r\n    Font.prototype.measureText = measureText;\r\n\r\n    return Font;\r\n\r\n}());\nvar PropertyFactory = (function(){\r\n\r\n    var initFrame = -999999;\r\n\r\n    function interpolateValue(frameNum, iterationIndex, previousValue, caching){\r\n        var offsetTime = this.offsetTime;\r\n        var newValue;\r\n        if(previousValue.constructor === Array) {\r\n            newValue = Array.apply(null,{length:previousValue.length})\r\n        }\r\n        var i = iterationIndex;\r\n        var len = this.keyframes.length- 1,flag = true;\r\n        var keyData, nextKeyData;\r\n\r\n        while(flag){\r\n            keyData = this.keyframes[i];\r\n            nextKeyData = this.keyframes[i+1];\r\n            if(i == len-1 && frameNum >= nextKeyData.t - offsetTime){\r\n                if(keyData.h){\r\n                    keyData = nextKeyData;\r\n                }\r\n                iterationIndex = 0;\r\n                break;\r\n            }\r\n            if((nextKeyData.t - offsetTime) > frameNum){\r\n                iterationIndex = i;\r\n                break;\r\n            }\r\n            if(i < len - 1){\r\n                i += 1;\r\n            }else{\r\n                iterationIndex = 0;\r\n                flag = false;\r\n            }\r\n        }\r\n\r\n        var k, kLen,perc,jLen, j, fnc;\r\n        if(keyData.to){\r\n\r\n            if(!keyData.bezierData){\r\n                bez.buildBezierData(keyData);\r\n            }\r\n            var bezierData = keyData.bezierData;\r\n            if(frameNum >= nextKeyData.t-offsetTime || frameNum < keyData.t-offsetTime){\r\n                var ind = frameNum >= nextKeyData.t-offsetTime ? bezierData.points.length - 1 : 0;\r\n                kLen = bezierData.points[ind].point.length;\r\n                for(k = 0; k < kLen; k += 1){\r\n                    newValue[k] = bezierData.points[ind].point[k];\r\n                }\r\n                caching._lastBezierData = null;\r\n            }else{\r\n                if(keyData.__fnct){\r\n                    fnc = keyData.__fnct;\r\n                }else{\r\n                    fnc = BezierFactory.getBezierEasing(keyData.o.x,keyData.o.y,keyData.i.x,keyData.i.y,keyData.n).get;\r\n                    keyData.__fnct = fnc;\r\n                }\r\n                perc = fnc((frameNum-(keyData.t-offsetTime))/((nextKeyData.t-offsetTime)-(keyData.t-offsetTime)));\r\n                var distanceInLine = bezierData.segmentLength*perc;\r\n\r\n                var segmentPerc;\r\n                var addedLength =  (caching.lastFrame < frameNum && caching._lastBezierData === bezierData) ? caching._lastAddedLength : 0;\r\n                j =  (caching.lastFrame < frameNum && caching._lastBezierData === bezierData) ? caching._lastPoint : 0;\r\n                flag = true;\r\n                jLen = bezierData.points.length;\r\n                while(flag){\r\n                    addedLength +=bezierData.points[j].partialLength;\r\n                    if(distanceInLine === 0 || perc === 0 || j == bezierData.points.length - 1){\r\n                        kLen = bezierData.points[j].point.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            newValue[k] = bezierData.points[j].point[k];\r\n                        }\r\n                        break;\r\n                    }else if(distanceInLine >= addedLength && distanceInLine < addedLength + bezierData.points[j+1].partialLength){\r\n                        segmentPerc = (distanceInLine-addedLength)/(bezierData.points[j+1].partialLength);\r\n                        kLen = bezierData.points[j].point.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            newValue[k] = bezierData.points[j].point[k] + (bezierData.points[j+1].point[k] - bezierData.points[j].point[k])*segmentPerc;\r\n                        }\r\n                        break;\r\n                    }\r\n                    if(j < jLen - 1){\r\n                        j += 1;\r\n                    }else{\r\n                        flag = false;\r\n                    }\r\n                }\r\n                caching._lastPoint = j;\r\n                caching._lastAddedLength = addedLength - bezierData.points[j].partialLength;\r\n                caching._lastBezierData = bezierData;\r\n            }\r\n        }else{\r\n            var outX,outY,inX,inY, keyValue;\r\n            len = keyData.s.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(keyData.h !== 1){\r\n                    if(frameNum >= nextKeyData.t-offsetTime){\r\n                        perc = 1;\r\n                    }else if(frameNum < keyData.t-offsetTime){\r\n                        perc = 0;\r\n                    }else{\r\n                        if(keyData.o.x.constructor === Array){\r\n                            if(!keyData.__fnct){\r\n                                keyData.__fnct = [];\r\n                            }\r\n                            if (!keyData.__fnct[i]) {\r\n                                outX = keyData.o.x[i] || keyData.o.x[0];\r\n                                outY = keyData.o.y[i] || keyData.o.y[0];\r\n                                inX = keyData.i.x[i] || keyData.i.x[0];\r\n                                inY = keyData.i.y[i] || keyData.i.y[0];\r\n                                fnc = BezierFactory.getBezierEasing(outX,outY,inX,inY).get;\r\n                                keyData.__fnct[i] = fnc;\r\n                            } else {\r\n                                fnc = keyData.__fnct[i];\r\n                            }\r\n                        } else {\r\n                            if (!keyData.__fnct) {\r\n                                outX = keyData.o.x;\r\n                                outY = keyData.o.y;\r\n                                inX = keyData.i.x;\r\n                                inY = keyData.i.y;\r\n                                fnc = BezierFactory.getBezierEasing(outX,outY,inX,inY).get;\r\n                                keyData.__fnct = fnc;\r\n                            } else{\r\n                                fnc = keyData.__fnct;\r\n                            }\r\n                        }\r\n                        perc = fnc((frameNum-(keyData.t-offsetTime))/((nextKeyData.t-offsetTime)-(keyData.t-offsetTime)));\r\n                    }\r\n                }\r\n                if(this.sh && keyData.h !== 1){\r\n                    var initP = keyData.s[i];\r\n                    var endP = keyData.e[i];\r\n                    if(initP-endP < -180){\r\n                        initP += 360;\r\n                    } else if(initP-endP > 180){\r\n                        initP -= 360;\r\n                    }\r\n                    keyValue = initP+(endP-initP)*perc;\r\n                } else {\r\n                    keyValue = keyData.h === 1 ? keyData.s[i] : keyData.s[i]+(keyData.e[i]-keyData.s[i])*perc;\r\n                }\r\n                if(len === 1){\r\n                    newValue = keyValue;\r\n                }else{\r\n                    newValue[i] = keyValue;\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            value: newValue,\r\n            iterationIndex: iterationIndex\r\n        }\r\n    }\r\n\r\n    function getValueAtCurrentTime(){\r\n        if(this.elem.globalData.frameId === this.frameId){\r\n            return;\r\n        }\r\n        this.mdf = false;\r\n        var frameNum = this.comp.renderedFrame - this.offsetTime;\r\n        var initTime = this.keyframes[0].t-this.offsetTime;\r\n        var endTime = this.keyframes[this.keyframes.length- 1].t-this.offsetTime;\r\n        if(!(frameNum === this._caching.lastFrame || (this._caching.lastFrame !== initFrame && ((this._caching.lastFrame >= endTime && frameNum >= endTime) || (this._caching.lastFrame < initTime && frameNum < initTime))))){\r\n            var i = this._caching.lastFrame < frameNum ? this._caching.lastIndex : 0;\r\n            var renderResult = this.interpolateValue(frameNum, i, this.pv, this._caching);\r\n            this._caching.lastIndex = renderResult.iterationIndex;\r\n            if(this.pv.constructor === Array){\r\n                i = 0;\r\n                while(i<this.v.length){\r\n                    this.pv[i] = renderResult.value[i];\r\n                    this.v[i] = this.mult ? this.pv[i] * this.mult : this.pv[i];\r\n                    if(this.lastPValue[i] !== this.pv[i]) {\r\n                        this.mdf = true;\r\n                        this.lastPValue[i] = this.pv[i];\r\n                    }\r\n                    i += 1;\r\n                }\r\n            } else {\r\n                this.pv = renderResult.value;\r\n                this.v = this.mult ? this.pv*this.mult : this.pv;\r\n                if(this.lastPValue != this.pv){\r\n                    this.mdf = true;\r\n                    this.lastPValue = this.pv;\r\n                }\r\n            }\r\n            \r\n        }\r\n        this._caching.lastFrame = frameNum;\r\n        this.frameId = this.elem.globalData.frameId;\r\n    }\r\n\r\n    function getNoValue(){}\r\n\r\n    function ValueProperty(elem,data, mult){\r\n        this.mult = mult;\r\n        this.v = mult ? data.k * mult : data.k;\r\n        this.pv = data.k;\r\n        this.mdf = false;\r\n        this.comp = elem.comp;\r\n        this.k = false;\r\n        this.kf = false;\r\n        this.vel = 0;\r\n        this.getValue = getNoValue;\r\n    }\r\n\r\n    function MultiDimensionalProperty(elem,data, mult){\r\n        this.mult = mult;\r\n        this.data = data;\r\n        this.mdf = false;\r\n        this.comp = elem.comp;\r\n        this.k = false;\r\n        this.kf = false;\r\n        this.frameId = -1;\r\n        this.v = Array.apply(null, {length:data.k.length});\r\n        this.pv = Array.apply(null, {length:data.k.length});\r\n        this.lastValue = Array.apply(null, {length:data.k.length});\r\n        var arr = Array.apply(null, {length:data.k.length});\r\n        this.vel = arr.map(function () { return 0 });\r\n        var i, len = data.k.length;\r\n        for(i = 0;i<len;i+=1){\r\n            this.v[i] = mult ? data.k[i] * mult : data.k[i];\r\n            this.pv[i] = data.k[i];\r\n        }\r\n        this.getValue = getNoValue;\r\n    }\r\n\r\n    function KeyframedValueProperty(elem, data, mult){\r\n        this.keyframes = data.k;\r\n        this.offsetTime = elem.data.st;\r\n        this.lastValue = -99999;\r\n        this.lastPValue = -99999;\r\n        this.frameId = -1;\r\n        this._caching={lastFrame:initFrame,lastIndex:0};\r\n        this.k = true;\r\n        this.kf = true;\r\n        this.data = data;\r\n        this.mult = mult;\r\n        this.elem = elem;\r\n        this.comp = elem.comp;\r\n        this.v = mult ? data.k[0].s[0]*mult : data.k[0].s[0];\r\n        this.pv = data.k[0].s[0];\r\n        this.getValue = getValueAtCurrentTime;\r\n        this.interpolateValue = interpolateValue;\r\n    }\r\n\r\n    function KeyframedMultidimensionalProperty(elem, data, mult){\r\n        var i, len = data.k.length;\r\n        var s, e,to,ti;\r\n        for(i=0;i<len-1;i+=1){\r\n            if(data.k[i].to && data.k[i].s && data.k[i].e){\r\n                s = data.k[i].s;\r\n                e = data.k[i].e;\r\n                to = data.k[i].to;\r\n                ti = data.k[i].ti;\r\n                if((s.length === 2 && !(s[0] === e[0] && s[1] === e[1]) && bez.pointOnLine2D(s[0],s[1],e[0],e[1],s[0] + to[0],s[1] + to[1]) && bez.pointOnLine2D(s[0],s[1],e[0],e[1],e[0] + ti[0],e[1] + ti[1])) || (s.length === 3 && !(s[0] === e[0] && s[1] === e[1] && s[2] === e[2]) && bez.pointOnLine3D(s[0],s[1],s[2],e[0],e[1],e[2],s[0] + to[0],s[1] + to[1],s[2] + to[2]) && bez.pointOnLine3D(s[0],s[1],s[2],e[0],e[1],e[2],e[0] + ti[0],e[1] + ti[1],e[2] + ti[2]))){\r\n                    data.k[i].to = null;\r\n                    data.k[i].ti = null;\r\n                }\r\n            }\r\n        }\r\n        this.keyframes = data.k;\r\n        this.offsetTime = elem.data.st;\r\n        this.k = true;\r\n        this.kf = true;\r\n        this.mult = mult;\r\n        this.elem = elem;\r\n        this.comp = elem.comp;\r\n        this._caching={lastFrame:initFrame,lastIndex:0};\r\n        this.getValue = getValueAtCurrentTime;\r\n        this.interpolateValue = interpolateValue;\r\n        this.frameId = -1;\r\n        this.v = Array.apply(null, {length:data.k[0].s.length});\r\n        this.pv = Array.apply(null, {length:data.k[0].s.length});\r\n        this.lastValue = Array.apply(null, {length:data.k[0].s.length});\r\n        this.lastPValue = Array.apply(null, {length:data.k[0].s.length});\r\n    }\r\n\r\n    var TransformProperty = (function() {\r\n        function positionGetter() {\r\n            if(this.p) {\r\n                return ExpressionValue(this.p);\r\n            } else {\r\n                return [this.px.v, this.py.v, this.pz ? this.pz.v : 0];\r\n            }\r\n        }\r\n        function xPositionGetter() {\r\n            return ExpressionValue(this.px);\r\n        }\r\n        function yPositionGetter() {\r\n            return ExpressionValue(this.py);\r\n        }\r\n        function zPositionGetter() {\r\n            return ExpressionValue(this.pz);\r\n        }\r\n        function anchorGetter() {\r\n            return ExpressionValue(this.a);\r\n        }\r\n        function orientationGetter() {\r\n            return ExpressionValue(this.or);\r\n        }\r\n        function rotationGetter() {\r\n            if(this.r) {\r\n                return ExpressionValue(this.r, 1/degToRads);\r\n            } else {\r\n                return ExpressionValue(this.rz, 1/degToRads);\r\n            }\r\n        }\r\n        function scaleGetter() {\r\n            return ExpressionValue(this.s, 100);\r\n        }\r\n        function opacityGetter() {\r\n            return ExpressionValue(this.o, 100);\r\n        }\r\n        function skewGetter() {\r\n            return ExpressionValue(this.sk);\r\n        }\r\n        function skewAxisGetter() {\r\n            return ExpressionValue(this.sa);\r\n        }\r\n        function applyToMatrix(mat) {\r\n            var i, len = this.dynamicProperties.length;\r\n            for(i = 0; i < len; i += 1) {\r\n                this.dynamicProperties[i].getValue();\r\n                if (this.dynamicProperties[i].mdf) {\r\n                    this.mdf = true;\r\n                }\r\n            }\r\n            if (this.a) {\r\n                mat.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n            }\r\n            if (this.s) {\r\n                mat.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n            }\r\n            if (this.r) {\r\n                mat.rotate(-this.r.v);\r\n            } else {\r\n                mat.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n            }\r\n            if (this.data.p.s) {\r\n                if (this.data.p.z) {\r\n                    mat.translate(this.px.v, this.py.v, -this.pz.v);\r\n                } else {\r\n                    mat.translate(this.px.v, this.py.v, 0);\r\n                }\r\n            } else {\r\n                mat.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);\r\n            }\r\n        }\r\n        function processKeys(){\r\n            if (this.elem.globalData.frameId === this.frameId) {\r\n                return;\r\n            }\r\n\r\n            this.mdf = false;\r\n            var i, len = this.dynamicProperties.length;\r\n\r\n            for(i = 0; i < len; i += 1) {\r\n                this.dynamicProperties[i].getValue();\r\n                if (this.dynamicProperties[i].mdf) {\r\n                    this.mdf = true;\r\n                }\r\n            }\r\n            if (this.mdf) {\r\n                this.v.reset();\r\n                if (this.a) {\r\n                    this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n                }\r\n                if(this.s) {\r\n                    this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n                }\r\n                if (this.sk) {\r\n                    this.v.skewFromAxis(-this.sk.v, this.sa.v);\r\n                }\r\n                if (this.r) {\r\n                    this.v.rotate(-this.r.v);\r\n                } else {\r\n                    this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n                }\r\n                if (this.autoOriented && this.p.keyframes && this.p.getValueAtTime) {\r\n                    var v1,v2;\r\n                    if (this.p._caching.lastFrame+this.p.offsetTime <= this.p.keyframes[0].t) {\r\n                        v1 = this.p.getValueAtTime((this.p.keyframes[0].t + 0.01) / this.elem.globalData.frameRate,0);\r\n                        v2 = this.p.getValueAtTime(this.p.keyframes[0].t / this.elem.globalData.frameRate, 0);\r\n                    } else if(this.p._caching.lastFrame+this.p.offsetTime >= this.p.keyframes[this.p.keyframes.length - 1].t) {\r\n                        v1 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t / this.elem.globalData.frameRate), 0);\r\n                        v2 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t - 0.01) / this.elem.globalData.frameRate, 0);\r\n                    } else {\r\n                        v1 = this.p.pv;\r\n                        v2 = this.p.getValueAtTime((this.p._caching.lastFrame+this.p.offsetTime - 0.01) / this.elem.globalData.frameRate, this.p.offsetTime);\r\n                    }\r\n                    this.v.rotate(-Math.atan2(v1[1] - v2[1], v1[0] - v2[0]));\r\n                }\r\n                if(this.data.p.s){\r\n                    if(this.data.p.z) {\r\n                        this.v.translate(this.px.v, this.py.v, -this.pz.v);\r\n                    } else {\r\n                        this.v.translate(this.px.v, this.py.v, 0);\r\n                    }\r\n                }else{\r\n                    this.v.translate(this.p.v[0],this.p.v[1],-this.p.v[2]);\r\n                }\r\n            }\r\n            this.frameId = this.elem.globalData.frameId;\r\n        }\r\n\r\n        function setInverted(){\r\n            this.inverted = true;\r\n            this.iv = new Matrix();\r\n            if(!this.k){\r\n                if(this.data.p.s){\r\n                    this.iv.translate(this.px.v,this.py.v,-this.pz.v);\r\n                }else{\r\n                    this.iv.translate(this.p.v[0],this.p.v[1],-this.p.v[2]);\r\n                }\r\n                if(this.r){\r\n                    this.iv.rotate(-this.r.v);\r\n                }else{\r\n                    this.iv.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v);\r\n                }\r\n                if(this.s){\r\n                    this.iv.scale(this.s.v[0],this.s.v[1],1);\r\n                }\r\n                if(this.a){\r\n                    this.iv.translate(-this.a.v[0],-this.a.v[1],this.a.v[2]);\r\n                }\r\n            }\r\n        }\r\n\r\n        function autoOrient(){\r\n            //\r\n            //var prevP = this.getValueAtTime();\r\n        }\r\n\r\n        return function TransformProperty(elem,data,arr){\r\n            this.elem = elem;\r\n            this.frameId = -1;\r\n            this.type = 'transform';\r\n            this.dynamicProperties = [];\r\n            this.mdf = false;\r\n            this.data = data;\r\n            this.getValue = processKeys;\r\n            this.applyToMatrix = applyToMatrix;\r\n            this.setInverted = setInverted;\r\n            this.autoOrient = autoOrient;\r\n            this.v = new Matrix();\r\n            if(data.p.s){\r\n                this.px = PropertyFactory.getProp(elem,data.p.x,0,0,this.dynamicProperties);\r\n                this.py = PropertyFactory.getProp(elem,data.p.y,0,0,this.dynamicProperties);\r\n                if(data.p.z){\r\n                    this.pz = PropertyFactory.getProp(elem,data.p.z,0,0,this.dynamicProperties);\r\n                }\r\n            }else{\r\n                this.p = PropertyFactory.getProp(elem,data.p,1,0,this.dynamicProperties);\r\n            }\r\n            if(data.r) {\r\n                this.r = PropertyFactory.getProp(elem, data.r, 0, degToRads, this.dynamicProperties);\r\n            } else if(data.rx) {\r\n                this.rx = PropertyFactory.getProp(elem, data.rx, 0, degToRads, this.dynamicProperties);\r\n                this.ry = PropertyFactory.getProp(elem, data.ry, 0, degToRads, this.dynamicProperties);\r\n                this.rz = PropertyFactory.getProp(elem, data.rz, 0, degToRads, this.dynamicProperties);\r\n                this.or = PropertyFactory.getProp(elem, data.or, 1, degToRads, this.dynamicProperties);\r\n                //sh Indicates it needs to be capped between -180 and 180\r\n                this.or.sh = true;\r\n            }\r\n            if(data.sk){\r\n                this.sk = PropertyFactory.getProp(elem, data.sk, 0, degToRads, this.dynamicProperties);\r\n                this.sa = PropertyFactory.getProp(elem, data.sa, 0, degToRads, this.dynamicProperties);\r\n            }\r\n            if(data.a) {\r\n                this.a = PropertyFactory.getProp(elem,data.a,1,0,this.dynamicProperties);\r\n            }\r\n            if(data.s) {\r\n                this.s = PropertyFactory.getProp(elem,data.s,1,0.01,this.dynamicProperties);\r\n            }\r\n            if(data.o){\r\n                this.o = PropertyFactory.getProp(elem,data.o,0,0.01,this.dynamicProperties);\r\n            } else {\r\n                this.o = {mdf:false,v:1};\r\n            }\r\n            if(this.dynamicProperties.length){\r\n                arr.push(this);\r\n            }else{\r\n                if(this.a){\r\n                    this.v.translate(-this.a.v[0],-this.a.v[1],this.a.v[2]);\r\n                }\r\n                if(this.s){\r\n                    this.v.scale(this.s.v[0],this.s.v[1],this.s.v[2]);\r\n                }\r\n                if(this.sk){\r\n                    this.v.skewFromAxis(-this.sk.v,this.sa.v);\r\n                }\r\n                if(this.r){\r\n                    this.v.rotate(-this.r.v);\r\n                }else{\r\n                    this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n                }\r\n                if(this.data.p.s){\r\n                    if(data.p.z) {\r\n                        this.v.translate(this.px.v, this.py.v, -this.pz.v);\r\n                    } else {\r\n                        this.v.translate(this.px.v, this.py.v, 0);\r\n                    }\r\n                }else{\r\n                    this.v.translate(this.p.v[0],this.p.v[1],-this.p.v[2]);\r\n                }\r\n            }\r\n            Object.defineProperty(this, \"position\", { get: positionGetter});\r\n            Object.defineProperty(this, \"xPosition\", { get: xPositionGetter});\r\n            Object.defineProperty(this, \"yPosition\", { get: yPositionGetter});\r\n            Object.defineProperty(this, \"orientation\", { get: orientationGetter});\r\n            Object.defineProperty(this, \"anchorPoint\", { get: anchorGetter});\r\n            Object.defineProperty(this, \"rotation\", { get: rotationGetter});\r\n            Object.defineProperty(this, \"scale\", { get: scaleGetter});\r\n            Object.defineProperty(this, \"opacity\", { get: opacityGetter});\r\n            Object.defineProperty(this, \"skew\", { get: skewGetter});\r\n            Object.defineProperty(this, \"skewAxis\", { get: skewAxisGetter});\r\n        }\r\n    }());\r\n\r\n    function getProp(elem,data,type, mult, arr) {\r\n        var p;\r\n        if(type === 2){\r\n            p = new TransformProperty(elem, data, arr);\r\n        } else if(data.a === 0){\r\n            if(type === 0) {\r\n                p = new ValueProperty(elem,data,mult);\r\n            } else {\r\n                p = new MultiDimensionalProperty(elem,data, mult);\r\n            }\r\n        } else if(data.a === 1){\r\n            if(type === 0) {\r\n                p = new KeyframedValueProperty(elem,data,mult);\r\n            } else {\r\n                p = new KeyframedMultidimensionalProperty(elem,data, mult);\r\n            }\r\n        } else if(!data.k.length){\r\n            p = new ValueProperty(elem,data, mult);\r\n        }else if(typeof(data.k[0]) === 'number'){\r\n            p = new MultiDimensionalProperty(elem,data, mult);\r\n        }else{\r\n            switch(type){\r\n                case 0:\r\n                    p = new KeyframedValueProperty(elem,data,mult);\r\n                    break;\r\n                case 1:\r\n                    p = new KeyframedMultidimensionalProperty(elem,data,mult);\r\n                    break;\r\n            }\r\n        }\r\n        if(p.k){\r\n            arr.push(p);\r\n        }\r\n        return p;\r\n    }\r\n\r\n    var getGradientProp = (function(){\r\n\r\n        function getValue(forceRender){\r\n            this.prop.getValue();\r\n            this.cmdf = false;\r\n            this.omdf = false;\r\n            if(this.prop.mdf || forceRender){\r\n                var i, len = this.data.p*4;\r\n                var mult, val;\r\n                for(i=0;i<len;i+=1){\r\n                    mult = i%4 === 0 ? 100 : 255;\r\n                    val = Math.round(this.prop.v[i]*mult);\r\n                    if(this.c[i] !== val){\r\n                        this.c[i] = val;\r\n                        this.cmdf = true;\r\n                    }\r\n                }\r\n                if(this.o.length){\r\n                    len = this.prop.v.length;\r\n                    for(i=this.data.p*4;i<len;i+=1){\r\n                        mult = i%2 === 0 ? 100 : 1;\r\n                        val = i%2 === 0 ?  Math.round(this.prop.v[i]*100):this.prop.v[i];\r\n                        if(this.o[i-this.data.p*4] !== val){\r\n                            this.o[i-this.data.p*4] = val;\r\n                            this.omdf = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        function gradientProp(elem,data,arr){\r\n            this.prop = getProp(elem,data.k,1,null,[]);\r\n            this.data = data;\r\n            this.k = this.prop.k;\r\n            this.c = Array.apply(null,{length:data.p*4});\r\n            var cLength = data.k.k[0].s ? (data.k.k[0].s.length - data.p*4) : data.k.k.length - data.p*4;\r\n            this.o = Array.apply(null,{length:cLength});\r\n            this.cmdf = false;\r\n            this.omdf = false;\r\n            this.getValue = getValue;\r\n            if(this.prop.k){\r\n                arr.push(this);\r\n            }\r\n            this.getValue(true);\r\n        }\r\n\r\n        return function getGradientProp(elem,data,arr){\r\n            return new gradientProp(elem,data,arr);\r\n        }\r\n    }());\r\n\r\n\r\n\r\n\r\n    var DashProperty = (function(){\r\n\r\n        function processKeys(forceRender){\r\n            var i = 0, len = this.dataProps.length;\r\n\r\n            if(this.elem.globalData.frameId === this.frameId && !forceRender){\r\n                return;\r\n            }\r\n            this.mdf = false;\r\n            this.frameId = this.elem.globalData.frameId;\r\n            while(i<len){\r\n                if(this.dataProps[i].p.mdf){\r\n                    this.mdf = true;\r\n                    break;\r\n                }\r\n                i+=1;\r\n            }\r\n            if(this.mdf || forceRender){\r\n                if(this.renderer === 'svg') {\r\n                    this.dasharray = '';\r\n                }\r\n                for(i=0;i<len;i+=1){\r\n                    if(this.dataProps[i].n != 'o'){\r\n                        if(this.renderer === 'svg') {\r\n                            this.dasharray += ' ' + this.dataProps[i].p.v;\r\n                        }else{\r\n                            this.dasharray[i] = this.dataProps[i].p.v;\r\n                        }\r\n                    }else{\r\n                        this.dashoffset = this.dataProps[i].p.v;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return function(elem, data,renderer, dynamicProperties){\r\n            this.elem = elem;\r\n            this.frameId = -1;\r\n            this.dataProps = new Array(data.length);\r\n            this.renderer = renderer;\r\n            this.mdf = false;\r\n            this.k = false;\r\n            if(this.renderer === 'svg'){\r\n                this.dasharray = '';\r\n            }else{\r\n\r\n                this.dasharray = new Array(data.length - 1);\r\n            }\r\n            this.dashoffset = 0;\r\n            var i, len = data.length, prop;\r\n            for(i=0;i<len;i+=1){\r\n                prop = PropertyFactory.getProp(elem,data[i].v,0, 0, dynamicProperties);\r\n                this.k = prop.k ? true : this.k;\r\n                this.dataProps[i] = {n:data[i].n,p:prop};\r\n            }\r\n            this.getValue = processKeys;\r\n            if(this.k){\r\n                dynamicProperties.push(this);\r\n            }else{\r\n                this.getValue(true);\r\n            }\r\n\r\n        }\r\n    }());\r\n\r\n    function getDashProp(elem, data,renderer, dynamicProperties) {\r\n        return new DashProperty(elem, data,renderer, dynamicProperties);\r\n    };\r\n\r\n    var TextSelectorProp = (function(){\r\n        var max = Math.max;\r\n        var min = Math.min;\r\n        var floor = Math.floor;\r\n        function updateRange(newCharsFlag){\r\n            this.mdf = newCharsFlag || false;\r\n            if(this.dynamicProperties.length){\r\n                var i, len = this.dynamicProperties.length;\r\n                for(i=0;i<len;i+=1){\r\n                    this.dynamicProperties[i].getValue();\r\n                    if(this.dynamicProperties[i].mdf){\r\n                        this.mdf = true;\r\n                    }\r\n                }\r\n            }\r\n            var totalChars = this.elem.textProperty.currentData ? this.elem.textProperty.currentData.l.length : 0;\r\n            if(newCharsFlag && this.data.r === 2) {\r\n                this.e.v = totalChars;\r\n            }\r\n            var divisor = this.data.r === 2 ? 1 : 100 / totalChars;\r\n            var o = this.o.v/divisor;\r\n            var s = this.s.v/divisor + o;\r\n            var e = (this.e.v/divisor) + o;\r\n            if(s>e){\r\n                var _s = s;\r\n                s = e;\r\n                e = _s;\r\n            }\r\n            this.finalS = s;\r\n            this.finalE = e;\r\n        }\r\n\r\n        function getMult(ind){\r\n            //var easer = bez.getEasingCurve(this.ne.v/100,0,1-this.xe.v/100,1);\r\n            var easer = BezierFactory.getBezierEasing(this.ne.v/100,0,1-this.xe.v/100,1).get;\r\n            var mult = 0;\r\n            var s = this.finalS;\r\n            var e = this.finalE;\r\n            var type = this.data.sh;\r\n            if(type == 2){\r\n                if(e === s){\r\n                    mult = ind >= e ? 1 : 0;\r\n                }else{\r\n                    mult = max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n                }\r\n                mult = easer(mult);\r\n            }else if(type == 3){\r\n                if(e === s){\r\n                    mult = ind >= e ? 0 : 1;\r\n                }else{\r\n                    mult = 1 - max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n                }\r\n\r\n                mult = easer(mult);\r\n            }else if(type == 4){\r\n                if(e === s){\r\n                    mult = 0;\r\n                }else{\r\n                    mult = max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n                    if(mult<.5){\r\n                        mult *= 2;\r\n                    }else{\r\n                        mult = 1 - 2*(mult-0.5);\r\n                    }\r\n                }\r\n                mult = easer(mult);\r\n            }else if(type == 5){\r\n                if(e === s){\r\n                    mult = 0;\r\n                }else{\r\n                    var tot = e - s;\r\n                    /*ind += 0.5;\r\n                    mult = -4/(tot*tot)*(ind*ind)+(4/tot)*ind;*/\r\n                    ind = min(max(0,ind+0.5-s),e-s);\r\n                    var x = -tot/2+ind;\r\n                    var a = tot/2;\r\n                    mult = Math.sqrt(1 - (x*x)/(a*a));\r\n                }\r\n                mult = easer(mult);\r\n            }else if(type == 6){\r\n                if(e === s){\r\n                    mult = 0;\r\n                }else{\r\n                    ind = min(max(0,ind+0.5-s),e-s);\r\n                    mult = (1+(Math.cos((Math.PI+Math.PI*2*(ind)/(e-s)))))/2;\r\n                    /*\r\n                     ind = Math.min(Math.max(s,ind),e-1);\r\n                     mult = (1+(Math.cos((Math.PI+Math.PI*2*(ind-s)/(e-1-s)))))/2;\r\n                     mult = Math.max(mult,(1/(e-1-s))/(e-1-s));*/\r\n                }\r\n                mult = easer(mult);\r\n            }else {\r\n                if(ind >= floor(s)){\r\n                    if(ind-s < 0){\r\n                        mult = 1 - (s - ind);\r\n                    }else{\r\n                        mult = max(0,min(e-ind,1));\r\n                    }\r\n                }\r\n                mult = easer(mult);\r\n            }\r\n            return mult*this.a.v;\r\n        }\r\n\r\n        return function TextSelectorProp(elem,data, arr){\r\n            this.mdf = false;\r\n            this.k = false;\r\n            this.data = data;\r\n            this.dynamicProperties = [];\r\n            this.getValue = updateRange;\r\n            this.getMult = getMult;\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.finalS = 0;\r\n            this.finalE = 0;\r\n            this.s = PropertyFactory.getProp(elem,data.s || {k:0},0,0,this.dynamicProperties);\r\n            if('e' in data){\r\n                this.e = PropertyFactory.getProp(elem,data.e,0,0,this.dynamicProperties);\r\n            }else{\r\n                this.e = {v:100};\r\n            }\r\n            this.o = PropertyFactory.getProp(elem,data.o || {k:0},0,0,this.dynamicProperties);\r\n            this.xe = PropertyFactory.getProp(elem,data.xe || {k:0},0,0,this.dynamicProperties);\r\n            this.ne = PropertyFactory.getProp(elem,data.ne || {k:0},0,0,this.dynamicProperties);\r\n            this.a = PropertyFactory.getProp(elem,data.a,0,0.01,this.dynamicProperties);\r\n            if(this.dynamicProperties.length){\r\n                arr.push(this);\r\n            }else{\r\n                this.getValue();\r\n            }\r\n        }\r\n    }());\r\n\r\n    function getTextSelectorProp(elem, data,arr) {\r\n        return new TextSelectorProp(elem, data, arr);\r\n    };\r\n\r\n    var ob = {\r\n        getProp: getProp,\r\n        getDashProp: getDashProp,\r\n        getTextSelectorProp: getTextSelectorProp,\r\n        getGradientProp: getGradientProp\r\n    };\r\n    return ob;\r\n}());\nfunction ShapePath(){\r\n\tthis.c = false;\r\n\tthis._length = 0;\r\n\tthis._maxLength = 8;\r\n\tthis.v = Array.apply(null,{length:this._maxLength});\r\n\tthis.o = Array.apply(null,{length:this._maxLength});\r\n\tthis.i = Array.apply(null,{length:this._maxLength});\r\n};\r\n\r\nShapePath.prototype.setPathData = function(closed, len) {\r\n\tthis.c = closed;\r\n\tthis.setLength(len);\r\n\tvar i = 0;\r\n\twhile(i < len){\r\n\t\tthis.v[i] = point_pool.newPoint();\r\n\t\tthis.o[i] = point_pool.newPoint();\r\n\t\tthis.i[i] = point_pool.newPoint();\r\n\t\ti += 1;\r\n\t}\r\n};\r\n\r\nShapePath.prototype.setLength = function(len) {\r\n\twhile(this._maxLength < len) {\r\n\t\tthis.doubleArrayLength();\r\n\t}\r\n\tthis._length = len;\r\n}\r\n\r\nShapePath.prototype.doubleArrayLength = function() {\r\n\tthis.v = this.v.concat(Array.apply(null,{length:this._maxLength}))\r\n\tthis.i = this.i.concat(Array.apply(null,{length:this._maxLength}))\r\n\tthis.o = this.o.concat(Array.apply(null,{length:this._maxLength}))\r\n\tthis._maxLength *= 2;\r\n};\r\n\r\nShapePath.prototype.setXYAt = function(x, y, type, pos, replace) {\r\n\tvar arr;\r\n\tthis._length = Math.max(this._length, pos + 1);\r\n\tif(this._length >= this._maxLength) {\r\n\t\tthis.doubleArrayLength();\r\n\t}\r\n\tswitch(type){\r\n\t\tcase 'v':\r\n\t\t\tarr = this.v;\r\n\t\t\tbreak;\r\n\t\tcase 'i':\r\n\t\t\tarr = this.i;\r\n\t\t\tbreak;\r\n\t\tcase 'o':\r\n\t\t\tarr = this.o;\r\n\t\t\tbreak;\r\n\t}\r\n\tif(!arr[pos] || (arr[pos] && !replace)){\r\n\t\tarr[pos] = point_pool.newPoint();\r\n\t}\r\n\tarr[pos][0] = x;\r\n\tarr[pos][1] = y;\r\n};\r\n\r\nShapePath.prototype.setTripleAt = function(vX,vY,oX,oY,iX,iY,pos, replace) {\r\n\tthis.setXYAt(vX,vY,'v',pos, replace);\r\n\tthis.setXYAt(oX,oY,'o',pos, replace);\r\n\tthis.setXYAt(iX,iY,'i',pos, replace);\r\n};\nvar ShapePropertyFactory = (function(){\r\n\r\n    var initFrame = -999999;\r\n\r\n    function interpolateShape(frameNum, iterationIndex, previousValue, isCurrentRender) {\r\n        var keyPropS,keyPropE,isHold;\r\n        if(frameNum < this.keyframes[0].t-this.offsetTime){\r\n            keyPropS = this.keyframes[0].s[0];\r\n            isHold = true;\r\n            iterationIndex = 0;\r\n        }else if(frameNum >= this.keyframes[this.keyframes.length - 1].t-this.offsetTime){\r\n            if(this.keyframes[this.keyframes.length - 2].h === 1){\r\n                keyPropS = this.keyframes[this.keyframes.length - 1].s[0];\r\n            }else{\r\n                keyPropS = this.keyframes[this.keyframes.length - 2].e[0];\r\n            }\r\n            isHold = true;\r\n        }else{\r\n            var i = iterationIndex;\r\n            var len = this.keyframes.length- 1,flag = true,keyData,nextKeyData, j, jLen, k, kLen;\r\n            while(flag){\r\n                keyData = this.keyframes[i];\r\n                nextKeyData = this.keyframes[i+1];\r\n                if((nextKeyData.t - this.offsetTime) > frameNum){\r\n                    break;\r\n                }\r\n                if(i < len - 1){\r\n                    i += 1;\r\n                }else{\r\n                    flag = false;\r\n                }\r\n            }\r\n            isHold = keyData.h === 1;\r\n            iterationIndex = i;\r\n\r\n            var perc;\r\n            if(!isHold){\r\n                if(frameNum >= nextKeyData.t-this.offsetTime){\r\n                    perc = 1;\r\n                }else if(frameNum < keyData.t-this.offsetTime){\r\n                    perc = 0;\r\n                }else{\r\n                    var fnc;\r\n                    if(keyData.__fnct){\r\n                        fnc = keyData.__fnct;\r\n                    }else{\r\n                        fnc = BezierFactory.getBezierEasing(keyData.o.x,keyData.o.y,keyData.i.x,keyData.i.y).get;\r\n                        keyData.__fnct = fnc;\r\n                    }\r\n                    perc = fnc((frameNum-(keyData.t-this.offsetTime))/((nextKeyData.t-this.offsetTime)-(keyData.t-this.offsetTime)));\r\n                }\r\n                keyPropE = keyData.e[0];\r\n            }\r\n            keyPropS = keyData.s[0];\r\n        }\r\n        jLen = previousValue._length;\r\n        kLen = keyPropS.i[0].length;\r\n        var hasModified = false;\r\n        var vertexValue;\r\n        for(j=0;j<jLen;j+=1){\r\n            for(k=0;k<kLen;k+=1){\r\n                if(isHold){\r\n                    vertexValue = keyPropS.i[j][k];\r\n                    if(previousValue.i[j][k] !== vertexValue){\r\n                        previousValue.i[j][k] = vertexValue;\r\n                        if(isCurrentRender) {\r\n                            this.pv.i[j][k] = vertexValue;\r\n                        }\r\n                        hasModified = true;\r\n                    }\r\n                    vertexValue = keyPropS.o[j][k];\r\n                    if(previousValue.o[j][k] !== vertexValue){\r\n                        previousValue.o[j][k] = vertexValue;\r\n                        if(isCurrentRender) {\r\n                            this.pv.o[j][k] = vertexValue;\r\n                        }\r\n                        hasModified = true;\r\n                    }\r\n                    vertexValue = keyPropS.v[j][k];\r\n                    if(previousValue.v[j][k] !== vertexValue){\r\n                        previousValue.v[j][k] = vertexValue;\r\n                        if(isCurrentRender) {\r\n                            this.pv.v[j][k] = vertexValue;\r\n                        }\r\n                        hasModified = true;\r\n                    }\r\n                }else{\r\n                    vertexValue = keyPropS.i[j][k]+(keyPropE.i[j][k]-keyPropS.i[j][k])*perc;\r\n                    if(previousValue.i[j][k] !== vertexValue){\r\n                        previousValue.i[j][k] = vertexValue;\r\n                        if(isCurrentRender) {\r\n                            this.pv.i[j][k] = vertexValue;\r\n                        }\r\n                        hasModified = true;\r\n                    }\r\n                    vertexValue = keyPropS.o[j][k]+(keyPropE.o[j][k]-keyPropS.o[j][k])*perc;\r\n                    if(previousValue.o[j][k] !== vertexValue){\r\n                        previousValue.o[j][k] = vertexValue;\r\n                        if(isCurrentRender) {\r\n                            this.pv.o[j][k] = vertexValue;\r\n                        }\r\n                        hasModified = true;\r\n                    }\r\n                    vertexValue = keyPropS.v[j][k]+(keyPropE.v[j][k]-keyPropS.v[j][k])*perc;\r\n                    if(previousValue.v[j][k] !== vertexValue){\r\n                        previousValue.v[j][k] = vertexValue;\r\n                        if(isCurrentRender) {\r\n                            this.pv.v[j][k] = vertexValue;\r\n                        }\r\n                        hasModified = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if(hasModified) {\r\n            previousValue.c = keyPropS.c;\r\n        }\r\n        return {\r\n            iterationIndex: iterationIndex,\r\n            hasModified: hasModified\r\n        }\r\n    }\r\n\r\n    function interpolateShapeCurrentTime(){\r\n        if(this.elem.globalData.frameId === this.frameId){\r\n            return;\r\n        }\r\n        this.mdf = false;\r\n        var frameNum = this.comp.renderedFrame - this.offsetTime;\r\n        var initTime = this.keyframes[0].t - this.offsetTime;\r\n        var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;\r\n        if(!(this.lastFrame !== initFrame && ((this.lastFrame < initTime && frameNum < initTime) || (this.lastFrame > endTime && frameNum > endTime)))){\r\n            ////\r\n            var i = this.lastFrame < frameNum ? this._lastIndex : 0;\r\n            var renderResult = this.interpolateShape(frameNum, i, this.v, true);\r\n            ////\r\n            this._lastIndex = renderResult.iterationIndex;\r\n            this.mdf = renderResult.hasModified;\r\n            if(renderResult.hasModified) {\r\n                this.paths = this.localShapeCollection;\r\n            }\r\n        }\r\n        this.lastFrame = frameNum;\r\n        this.frameId = this.elem.globalData.frameId;\r\n    }\r\n\r\n    function getShapeValue(){\r\n        return this.v;\r\n    }\r\n\r\n    function resetShape(){\r\n        this.paths = this.localShapeCollection;\r\n        if(!this.k){\r\n            this.mdf = false;\r\n        }\r\n    }\r\n\r\n    function ShapeProperty(elem, data, type){\r\n        this.__shapeObject = 1;\r\n        this.comp = elem.comp;\r\n        this.k = false;\r\n        this.mdf = false;\r\n        var pathData = type === 3 ? data.pt.k : data.ks.k;\r\n        this.v = shape_pool.clone(pathData);\r\n        this.pv = shape_pool.clone(this.v);\r\n        this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n        this.paths = this.localShapeCollection;\r\n        this.paths.addShape(this.v);\r\n        this.reset = resetShape;\r\n    }\r\n    ShapeProperty.prototype.interpolateShape = interpolateShape;\r\n    ShapeProperty.prototype.getValue = getShapeValue;\r\n\r\n    function KeyframedShapeProperty(elem,data,type){\r\n        this.__shapeObject = 1;\r\n        this.comp = elem.comp;\r\n        this.elem = elem;\r\n        this.offsetTime = elem.data.st;\r\n        this._lastIndex = 0;\r\n        this.keyframes = type === 3 ? data.pt.k : data.ks.k;\r\n        this.k = true;\r\n        this.kf = true;\r\n        var i, len = this.keyframes[0].s[0].i.length;\r\n        var jLen = this.keyframes[0].s[0].i[0].length;\r\n        this.v = shape_pool.newShape();\r\n        this.v.setPathData(this.keyframes[0].s[0].c, len);\r\n        this.pv = shape_pool.clone(this.v);\r\n        this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n        this.paths = this.localShapeCollection;\r\n        this.paths.addShape(this.v);\r\n        this.lastFrame = initFrame;\r\n        this.reset = resetShape;\r\n    }\r\n    KeyframedShapeProperty.prototype.getValue = interpolateShapeCurrentTime;\r\n    KeyframedShapeProperty.prototype.interpolateShape = interpolateShape;\r\n\r\n    var EllShapeProperty = (function(){\r\n\r\n        var cPoint = roundCorner;\r\n\r\n        function convertEllToPath(){\r\n            var p0 = this.p.v[0], p1 = this.p.v[1], s0 = this.s.v[0]/2, s1 = this.s.v[1]/2;\r\n            if(this.d !== 3){\r\n                this.v.v[0][0] = p0;\r\n                this.v.v[0][1] = p1-s1;\r\n                this.v.v[1][0] = p0 + s0;\r\n                this.v.v[1][1] = p1;\r\n                this.v.v[2][0] = p0;\r\n                this.v.v[2][1] = p1+s1;\r\n                this.v.v[3][0] = p0 - s0;\r\n                this.v.v[3][1] = p1;\r\n                this.v.i[0][0] = p0 - s0*cPoint;\r\n                this.v.i[0][1] = p1 - s1;\r\n                this.v.i[1][0] = p0 + s0;\r\n                this.v.i[1][1] = p1 - s1*cPoint;\r\n                this.v.i[2][0] = p0 + s0*cPoint;\r\n                this.v.i[2][1] = p1 + s1;\r\n                this.v.i[3][0] = p0 - s0;\r\n                this.v.i[3][1] = p1 + s1*cPoint;\r\n                this.v.o[0][0] = p0 + s0*cPoint;\r\n                this.v.o[0][1] = p1 - s1;\r\n                this.v.o[1][0] = p0 + s0;\r\n                this.v.o[1][1] = p1 + s1*cPoint;\r\n                this.v.o[2][0] = p0 - s0*cPoint;\r\n                this.v.o[2][1] = p1 + s1;\r\n                this.v.o[3][0] = p0 - s0;\r\n                this.v.o[3][1] = p1 - s1*cPoint;\r\n            }else{\r\n                this.v.v[0][0] = p0;\r\n                this.v.v[0][1] = p1-s1;\r\n                this.v.v[1][0] = p0 - s0;\r\n                this.v.v[1][1] = p1;\r\n                this.v.v[2][0] = p0;\r\n                this.v.v[2][1] = p1+s1;\r\n                this.v.v[3][0] = p0 + s0;\r\n                this.v.v[3][1] = p1;\r\n                this.v.i[0][0] = p0 + s0*cPoint;\r\n                this.v.i[0][1] = p1 - s1;\r\n                this.v.i[1][0] = p0 - s0;\r\n                this.v.i[1][1] = p1 - s1*cPoint;\r\n                this.v.i[2][0] = p0 - s0*cPoint;\r\n                this.v.i[2][1] = p1 + s1;\r\n                this.v.i[3][0] = p0 + s0;\r\n                this.v.i[3][1] = p1 + s1*cPoint;\r\n                this.v.o[0][0] = p0 - s0*cPoint;\r\n                this.v.o[0][1] = p1 - s1;\r\n                this.v.o[1][0] = p0 - s0;\r\n                this.v.o[1][1] = p1 + s1*cPoint;\r\n                this.v.o[2][0] = p0 + s0*cPoint;\r\n                this.v.o[2][1] = p1 + s1;\r\n                this.v.o[3][0] = p0 + s0;\r\n                this.v.o[3][1] = p1 - s1*cPoint;\r\n            }\r\n        }\r\n\r\n        function processKeys(frameNum){\r\n            var i, len = this.dynamicProperties.length;\r\n            if(this.elem.globalData.frameId === this.frameId){\r\n                return;\r\n            }\r\n            this.mdf = false;\r\n            this.frameId = this.elem.globalData.frameId;\r\n\r\n            for(i=0;i<len;i+=1){\r\n                this.dynamicProperties[i].getValue(frameNum);\r\n                if(this.dynamicProperties[i].mdf){\r\n                    this.mdf = true;\r\n                }\r\n            }\r\n            if(this.mdf){\r\n                this.convertEllToPath();\r\n            }\r\n        }\r\n\r\n        return function EllShapeProperty(elem,data) {\r\n            /*this.v = {\r\n                v: Array.apply(null,{length:4}),\r\n                i: Array.apply(null,{length:4}),\r\n                o: Array.apply(null,{length:4}),\r\n                c: true\r\n            };*/\r\n            this.v = shape_pool.newShape();\r\n            this.v.setPathData(true, 4);\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.paths = this.localShapeCollection;\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.d = data.d;\r\n            this.dynamicProperties = [];\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.frameId = -1;\r\n            this.mdf = false;\r\n            this.getValue = processKeys;\r\n            this.convertEllToPath = convertEllToPath;\r\n            this.reset = resetShape;\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this.dynamicProperties);\r\n            this.s = PropertyFactory.getProp(elem,data.s,1,0,this.dynamicProperties);\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.convertEllToPath();\r\n            }\r\n        }\r\n    }());\r\n\r\n    var StarShapeProperty = (function() {\r\n\r\n        function convertPolygonToPath(){\r\n            var numPts = Math.floor(this.pt.v);\r\n            var angle = Math.PI*2/numPts;\r\n            /*this.v.v.length = numPts;\r\n            this.v.i.length = numPts;\r\n            this.v.o.length = numPts;*/\r\n            var rad = this.or.v;\r\n            var roundness = this.os.v;\r\n            var perimSegment = 2*Math.PI*rad/(numPts*4);\r\n            var i, currentAng = -Math.PI/ 2;\r\n            var dir = this.data.d === 3 ? -1 : 1;\r\n            currentAng += this.r.v;\r\n            this.v._length = 0;\r\n            for(i=0;i<numPts;i+=1){\r\n                var x = rad * Math.cos(currentAng);\r\n                var y = rad * Math.sin(currentAng);\r\n                var ox = x === 0 && y === 0 ? 0 : y/Math.sqrt(x*x + y*y);\r\n                var oy = x === 0 && y === 0 ? 0 : -x/Math.sqrt(x*x + y*y);\r\n                x +=  + this.p.v[0];\r\n                y +=  + this.p.v[1];\r\n                this.v.setTripleAt(x,y,x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir,x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir, i, true);\r\n                /*this.v.v[i] = [x,y];\r\n                this.v.i[i] = [x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir];\r\n                this.v.o[i] = [x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir];*/\r\n                currentAng += angle*dir;\r\n            }\r\n            this.paths.length = 0;\r\n            this.paths[0] = this.v;\r\n        }\r\n\r\n        function convertStarToPath() {\r\n            var numPts = Math.floor(this.pt.v)*2;\r\n            var angle = Math.PI*2/numPts;\r\n            /*this.v.v.length = numPts;\r\n            this.v.i.length = numPts;\r\n            this.v.o.length = numPts;*/\r\n            var longFlag = true;\r\n            var longRad = this.or.v;\r\n            var shortRad = this.ir.v;\r\n            var longRound = this.os.v;\r\n            var shortRound = this.is.v;\r\n            var longPerimSegment = 2*Math.PI*longRad/(numPts*2);\r\n            var shortPerimSegment = 2*Math.PI*shortRad/(numPts*2);\r\n            var i, rad,roundness,perimSegment, currentAng = -Math.PI/ 2;\r\n            currentAng += this.r.v;\r\n            var dir = this.data.d === 3 ? -1 : 1;\r\n            this.v._length = 0;\r\n            for(i=0;i<numPts;i+=1){\r\n                rad = longFlag ? longRad : shortRad;\r\n                roundness = longFlag ? longRound : shortRound;\r\n                perimSegment = longFlag ? longPerimSegment : shortPerimSegment;\r\n                var x = rad * Math.cos(currentAng);\r\n                var y = rad * Math.sin(currentAng);\r\n                var ox = x === 0 && y === 0 ? 0 : y/Math.sqrt(x*x + y*y);\r\n                var oy = x === 0 && y === 0 ? 0 : -x/Math.sqrt(x*x + y*y);\r\n                x +=  + this.p.v[0];\r\n                y +=  + this.p.v[1];\r\n                this.v.setTripleAt(x,y,x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir,x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir, i, true);\r\n\r\n                /*this.v.v[i] = [x,y];\r\n                this.v.i[i] = [x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir];\r\n                this.v.o[i] = [x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir];\r\n                this.v._length = numPts;*/\r\n                longFlag = !longFlag;\r\n                currentAng += angle*dir;\r\n            }\r\n        }\r\n\r\n        function processKeys() {\r\n            if(this.elem.globalData.frameId === this.frameId){\r\n                return;\r\n            }\r\n            this.mdf = false;\r\n            this.frameId = this.elem.globalData.frameId;\r\n            var i, len = this.dynamicProperties.length;\r\n\r\n            for(i=0;i<len;i+=1){\r\n                this.dynamicProperties[i].getValue();\r\n                if(this.dynamicProperties[i].mdf){\r\n                    this.mdf = true;\r\n                }\r\n            }\r\n            if(this.mdf){\r\n                this.convertToPath();\r\n            }\r\n        }\r\n\r\n        return function StarShapeProperty(elem,data) {\r\n            /*this.v = {\r\n                v: [],\r\n                i: [],\r\n                o: [],\r\n                c: true\r\n            };*/\r\n            this.v = shape_pool.newShape();\r\n            this.v.setPathData(true, 0);\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.data = data;\r\n            this.frameId = -1;\r\n            this.d = data.d;\r\n            this.dynamicProperties = [];\r\n            this.mdf = false;\r\n            this.getValue = processKeys;\r\n            this.reset = resetShape;\r\n            if(data.sy === 1){\r\n                this.ir = PropertyFactory.getProp(elem,data.ir,0,0,this.dynamicProperties);\r\n                this.is = PropertyFactory.getProp(elem,data.is,0,0.01,this.dynamicProperties);\r\n                this.convertToPath = convertStarToPath;\r\n            } else {\r\n                this.convertToPath = convertPolygonToPath;\r\n            }\r\n            this.pt = PropertyFactory.getProp(elem,data.pt,0,0,this.dynamicProperties);\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this.dynamicProperties);\r\n            this.r = PropertyFactory.getProp(elem,data.r,0,degToRads,this.dynamicProperties);\r\n            this.or = PropertyFactory.getProp(elem,data.or,0,0,this.dynamicProperties);\r\n            this.os = PropertyFactory.getProp(elem,data.os,0,0.01,this.dynamicProperties);\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.paths = this.localShapeCollection;\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.convertToPath();\r\n            }\r\n        }\r\n    }());\r\n\r\n    var RectShapeProperty = (function() {\r\n        function processKeys(frameNum){\r\n            if(this.elem.globalData.frameId === this.frameId){\r\n                return;\r\n            }\r\n            this.mdf = false;\r\n            this.frameId = this.elem.globalData.frameId;\r\n            var i, len = this.dynamicProperties.length;\r\n\r\n            for(i=0;i<len;i+=1){\r\n                this.dynamicProperties[i].getValue(frameNum);\r\n                if(this.dynamicProperties[i].mdf){\r\n                    this.mdf = true;\r\n                }\r\n            }\r\n            if(this.mdf){\r\n                this.convertRectToPath();\r\n            }\r\n\r\n        }\r\n\r\n        function convertRectToPath(){\r\n            var p0 = this.p.v[0], p1 = this.p.v[1], v0 = this.s.v[0]/2, v1 = this.s.v[1]/2;\r\n            var round = bm_min(v0,v1,this.r.v);\r\n            var cPoint = round*(1-roundCorner);\r\n            this.v._length = 0;\r\n\r\n            if(this.d === 2 || this.d === 1) {\r\n                this.v.setTripleAt(p0+v0, p1-v1+round,p0+v0, p1-v1+round,p0+v0,p1-v1+cPoint,0, true);\r\n                this.v.setTripleAt(p0+v0, p1+v1-round,p0+v0, p1+v1-cPoint,p0+v0, p1+v1-round,1, true);\r\n                if(round!== 0){\r\n                    this.v.setTripleAt(p0+v0-round, p1+v1,p0+v0-round,p1+v1,p0+v0-cPoint,p1+v1,2, true);\r\n                    this.v.setTripleAt(p0-v0+round,p1+v1,p0-v0+cPoint,p1+v1,p0-v0+round,p1+v1,3, true);\r\n                    this.v.setTripleAt(p0-v0,p1+v1-round,p0-v0,p1+v1-round,p0-v0,p1+v1-cPoint,4, true);\r\n                    this.v.setTripleAt(p0-v0,p1-v1+round,p0-v0,p1-v1+cPoint,p0-v0,p1-v1+round,5, true);\r\n                    this.v.setTripleAt(p0-v0+round,p1-v1,p0-v0+round,p1-v1,p0-v0+cPoint,p1-v1,6, true);\r\n                    this.v.setTripleAt(p0+v0-round,p1-v1,p0+v0-cPoint,p1-v1,p0+v0-round,p1-v1,7, true);\r\n                } else {\r\n                    this.v.setTripleAt(p0-v0,p1+v1,p0-v0+cPoint,p1+v1,p0-v0,p1+v1,2);\r\n                    this.v.setTripleAt(p0-v0,p1-v1,p0-v0,p1-v1+cPoint,p0-v0,p1-v1,3);\r\n                }\r\n            }else{\r\n                this.v.setTripleAt(p0+v0,p1-v1+round,p0+v0,p1-v1+cPoint,p0+v0,p1-v1+round,0, true);\r\n                if(round!== 0){\r\n                    this.v.setTripleAt(p0+v0-round,p1-v1,p0+v0-round,p1-v1,p0+v0-cPoint,p1-v1,1, true);\r\n                    this.v.setTripleAt(p0-v0+round,p1-v1,p0-v0+cPoint,p1-v1,p0-v0+round,p1-v1,2, true);\r\n                    this.v.setTripleAt(p0-v0,p1-v1+round,p0-v0,p1-v1+round,p0-v0,p1-v1+cPoint,3, true);\r\n                    this.v.setTripleAt(p0-v0,p1+v1-round,p0-v0,p1+v1-cPoint,p0-v0,p1+v1-round,4, true);\r\n                    this.v.setTripleAt(p0-v0+round,p1+v1,p0-v0+round,p1+v1,p0-v0+cPoint,p1+v1,5, true);\r\n                    this.v.setTripleAt(p0+v0-round,p1+v1,p0+v0-cPoint,p1+v1,p0+v0-round,p1+v1,6, true);\r\n                    this.v.setTripleAt(p0+v0,p1+v1-round,p0+v0,p1+v1-round,p0+v0,p1+v1-cPoint,7, true);\r\n                } else {\r\n                    this.v.setTripleAt(p0-v0,p1-v1,p0-v0+cPoint,p1-v1,p0-v0,p1-v1,1, true);\r\n                    this.v.setTripleAt(p0-v0,p1+v1,p0-v0,p1+v1-cPoint,p0-v0,p1+v1,2, true);\r\n                    this.v.setTripleAt(p0+v0,p1+v1,p0+v0-cPoint,p1+v1,p0+v0,p1+v1,3, true);\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        return function RectShapeProperty(elem,data) {\r\n            this.v = shape_pool.newShape();\r\n            this.v.c = true;\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.paths = this.localShapeCollection;\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.frameId = -1;\r\n            this.d = data.d;\r\n            this.dynamicProperties = [];\r\n            this.mdf = false;\r\n            this.getValue = processKeys;\r\n            this.convertRectToPath = convertRectToPath;\r\n            this.reset = resetShape;\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this.dynamicProperties);\r\n            this.s = PropertyFactory.getProp(elem,data.s,1,0,this.dynamicProperties);\r\n            this.r = PropertyFactory.getProp(elem,data.r,0,0,this.dynamicProperties);\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.convertRectToPath();\r\n            }\r\n        }\r\n    }());\r\n\r\n    function getShapeProp(elem,data,type, arr){\r\n        var prop;\r\n        if(type === 3 || type === 4){\r\n            var dataProp = type === 3 ? data.pt : data.ks;\r\n            var keys = dataProp.k;\r\n            if(dataProp.a === 1 || keys.length){\r\n                prop = new KeyframedShapeProperty(elem, data, type);\r\n            }else{\r\n                prop = new ShapeProperty(elem, data, type);\r\n            }\r\n        }else if(type === 5){\r\n            prop = new RectShapeProperty(elem, data);\r\n        }else if(type === 6){\r\n            prop = new EllShapeProperty(elem, data);\r\n        }else if(type === 7){\r\n            prop = new StarShapeProperty(elem, data);\r\n        }\r\n        if(prop.k){\r\n            arr.push(prop);\r\n        }\r\n        return prop;\r\n    }\r\n\r\n    function getConstructorFunction() {\r\n        return ShapeProperty;\r\n    }\r\n\r\n    function getKeyframedConstructorFunction() {\r\n        return KeyframedShapeProperty;\r\n    }\r\n\r\n    var ob = {};\r\n    ob.getShapeProp = getShapeProp;\r\n    ob.getConstructorFunction = getConstructorFunction;\r\n    ob.getKeyframedConstructorFunction = getKeyframedConstructorFunction;\r\n    return ob;\r\n}());\nvar ShapeModifiers = (function(){\r\n    var ob = {};\r\n    var modifiers = {};\r\n    ob.registerModifier = registerModifier;\r\n    ob.getModifier = getModifier;\r\n\r\n    function registerModifier(nm,factory){\r\n        if(!modifiers[nm]){\r\n            modifiers[nm] = factory;\r\n        }\r\n    }\r\n\r\n    function getModifier(nm,elem, data, dynamicProperties){\r\n        return new modifiers[nm](elem, data, dynamicProperties);\r\n    }\r\n\r\n    return ob;\r\n}());\r\n\r\nfunction ShapeModifier(){}\r\nShapeModifier.prototype.initModifierProperties = function(){};\r\nShapeModifier.prototype.addShapeToModifier = function(){};\r\nShapeModifier.prototype.addShape = function(data){\r\n    if(!this.closed){\r\n        this.shapes.push({shape:data.sh, data: data, localShapeCollection:shapeCollection_pool.newShapeCollection()});\r\n        this.addShapeToModifier(data.sh);\r\n    }\r\n}\r\nShapeModifier.prototype.init = function(elem,data,dynamicProperties){\r\n    this.elem = elem;\r\n    this.frameId = -1;\r\n    this.shapes = [];\r\n    this.dynamicProperties = [];\r\n    this.mdf = false;\r\n    this.closed = false;\r\n    this.k = false;\r\n    this.comp = elem.comp;\r\n    this.initModifierProperties(elem,data);\r\n    if(this.dynamicProperties.length){\r\n        this.k = true;\r\n        dynamicProperties.push(this);\r\n    }else{\r\n        this.getValue(true);\r\n    }\r\n}\nfunction TrimModifier(){};\r\nextendPrototype(ShapeModifier,TrimModifier);\r\nTrimModifier.prototype.processKeys = function(forceRender){\r\n    if(this.elem.globalData.frameId === this.frameId && !forceRender){\r\n        return;\r\n    }\r\n    this.mdf = forceRender ? true : false;\r\n    this.frameId = this.elem.globalData.frameId;\r\n    var i, len = this.dynamicProperties.length;\r\n\r\n    for(i=0;i<len;i+=1){\r\n        this.dynamicProperties[i].getValue();\r\n        if(this.dynamicProperties[i].mdf){\r\n            this.mdf = true;\r\n        }\r\n    }\r\n    if(this.mdf || forceRender){\r\n        var o = (this.o.v%360)/360;\r\n        if(o < 0){\r\n            o += 1;\r\n        }\r\n        var s = this.s.v + o;\r\n        var e = this.e.v + o;\r\n        if(s == e){\r\n\r\n        }\r\n        if(s>e){\r\n            var _s = s;\r\n            s = e;\r\n            e = _s;\r\n        }\r\n        this.sValue = s;\r\n        this.eValue = e;\r\n        this.oValue = o;\r\n    }\r\n}\r\nTrimModifier.prototype.initModifierProperties = function(elem,data){\r\n    this.sValue = 0;\r\n    this.eValue = 0;\r\n    this.oValue = 0;\r\n    this.getValue = this.processKeys;\r\n    this.s = PropertyFactory.getProp(elem,data.s,0,0.01,this.dynamicProperties);\r\n    this.e = PropertyFactory.getProp(elem,data.e,0,0.01,this.dynamicProperties);\r\n    this.o = PropertyFactory.getProp(elem,data.o,0,0,this.dynamicProperties);\r\n    this.m = data.m;\r\n    if(!this.dynamicProperties.length){\r\n        this.getValue(true);\r\n    }\r\n};\r\n\r\nTrimModifier.prototype.calculateShapeEdges = function(s, e, shapeLength, addedLength, totalModifierLength) {\r\n    var segments = []\r\n    if(e <= 1){\r\n        segments.push({\r\n            s: s,\r\n            e: e\r\n        })\r\n    }else if(s >= 1){\r\n        segments.push({\r\n            s: s - 1,\r\n            e: e - 1\r\n        })\r\n    }else{\r\n        segments.push({\r\n            s: s,\r\n            e: 1\r\n        })\r\n        segments.push({\r\n            s: 0,\r\n            e: e - 1\r\n        })\r\n    }\r\n    var shapeSegments = [];\r\n    var i, len = segments.length, segmentOb;\r\n    for(i = 0; i < len; i += 1) {\r\n        segmentOb = segments[i];\r\n        if (segmentOb.e * totalModifierLength < addedLength || segmentOb.s * totalModifierLength > addedLength + shapeLength) {\r\n            \r\n        } else {\r\n            var shapeS, shapeE;\r\n            if(segmentOb.s * totalModifierLength <= addedLength) {\r\n                shapeS = 0;\r\n            } else {\r\n                shapeS = (segmentOb.s * totalModifierLength - addedLength) / shapeLength;\r\n            }\r\n            if(segmentOb.e * totalModifierLength >= addedLength + shapeLength) {\r\n                shapeE = 1;\r\n            } else {\r\n                shapeE = ((segmentOb.e * totalModifierLength - addedLength) / shapeLength);\r\n            }\r\n            shapeSegments.push([shapeS, shapeE]);\r\n        }\r\n    }\r\n    if(!shapeSegments.length){\r\n        shapeSegments.push([0,0]);\r\n    }\r\n    return shapeSegments;\r\n}\r\n\r\nTrimModifier.prototype.processShapes = function(firstFrame){\r\n    var shapePaths;\r\n    var i, len = this.shapes.length;\r\n    var j, jLen;\r\n    var s = this.sValue;\r\n    var e = this.eValue;\r\n    var pathsData,pathData, totalShapeLength, totalModifierLength = 0;\r\n\r\n    if(e === s){\r\n        for(i=0;i<len;i+=1){\r\n            this.shapes[i].localShapeCollection.releaseShapes();\r\n            this.shapes[i].shape.mdf = true;\r\n            this.shapes[i].shape.paths = this.shapes[i].localShapeCollection;\r\n        }\r\n    } else if(!((e === 1 && s === 0) || (e===0 && s === 1))){\r\n        var segments = [], shapeData, localShapeCollection;\r\n        for(i=0;i<len;i+=1){\r\n            shapeData = this.shapes[i];\r\n            if(!shapeData.shape.mdf && !this.mdf && !firstFrame && this.m !== 2){\r\n                shapeData.shape.paths = shapeData.localShapeCollection;\r\n            } else {\r\n                shapePaths = shapeData.shape.paths;\r\n                jLen = shapePaths._length;\r\n                totalShapeLength = 0;\r\n                if(!shapeData.shape.mdf && shapeData.pathsData){\r\n                    totalShapeLength = shapeData.totalShapeLength;\r\n                } else {\r\n                    pathsData = [];\r\n                    for(j=0;j<jLen;j+=1){\r\n                        pathData = bez.getSegmentsLength(shapePaths.shapes[j]);\r\n                        pathsData.push(pathData);\r\n                        totalShapeLength += pathData.totalLength;\r\n                    }\r\n                    shapeData.totalShapeLength = totalShapeLength;\r\n                    shapeData.pathsData = pathsData;\r\n                }\r\n\r\n                totalModifierLength += totalShapeLength;\r\n                shapeData.shape.mdf = true;\r\n            }\r\n        }\r\n        var shapeS = s, shapeE = e, addedLength = 0;\r\n        var j, jLen;\r\n        for(i = len - 1; i >= 0; i -= 1){\r\n            shapeData = this.shapes[i];\r\n            if (shapeData.shape.mdf) {\r\n                localShapeCollection = shapeData.localShapeCollection;\r\n                localShapeCollection.releaseShapes();\r\n                if(this.m === 2 && len > 1) {\r\n                    var edges = this.calculateShapeEdges(s, e, shapeData.totalShapeLength, addedLength, totalModifierLength);\r\n                    addedLength += shapeData.totalShapeLength;\r\n                } else {\r\n                    edges = [[shapeS, shapeE]]\r\n                }\r\n                jLen = edges.length;\r\n                for (j = 0; j < jLen; j += 1) {\r\n                    shapeS = edges[j][0];\r\n                    shapeE = edges[j][1];\r\n                    segments.length = 0;\r\n                    if(shapeE <= 1){\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * shapeS,\r\n                            e:shapeData.totalShapeLength * shapeE\r\n                        })\r\n                    }else if(shapeS >= 1){\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * (shapeS - 1),\r\n                            e:shapeData.totalShapeLength * (shapeE - 1)\r\n                        })\r\n                    }else{\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * shapeS,\r\n                            e:shapeData.totalShapeLength\r\n                        })\r\n                        segments.push({\r\n                            s:0,\r\n                            e:shapeData.totalShapeLength*(shapeE - 1)\r\n                        })\r\n                    }\r\n                    var newShapesData = this.addShapes(shapeData,segments[0]);\r\n                    if (segments[0].s !== segments[0].e) {\r\n                        var lastPos;\r\n                        if(segments.length > 1){\r\n                            if(shapeData.shape.v.c){\r\n                                var lastShape = newShapesData.pop();\r\n                                this.addPaths(newShapesData, localShapeCollection);\r\n                                newShapesData = this.addShapes(shapeData,segments[1], lastShape);\r\n                            } else {\r\n                                this.addPaths(newShapesData, localShapeCollection);\r\n                                newShapesData = this.addShapes(shapeData,segments[1]);\r\n                            }\r\n                        } \r\n                        this.addPaths(newShapesData, localShapeCollection);\r\n                    }\r\n                    \r\n                }\r\n                shapeData.shape.paths = localShapeCollection;\r\n            }\r\n        }\r\n    } else if(this.mdf){\r\n        for(i=0;i<len;i+=1){\r\n            this.shapes[i].shape.mdf = true;\r\n        }\r\n    }\r\n    if(!this.dynamicProperties.length){\r\n        this.mdf = false;\r\n    }\r\n}\r\n\r\nTrimModifier.prototype.addPaths = function(newPaths, localShapeCollection) {\r\n    var i, len = newPaths.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        localShapeCollection.addShape(newPaths[i])\r\n    }\r\n}\r\n\r\nTrimModifier.prototype.addSegment = function(pt1,pt2,pt3,pt4,shapePath,pos, newShape) {\r\n    /*console.log(pt1, 'vertex: v, at: ', pos);\r\n    console.log(pt2, 'vertex: o, at: ', pos);\r\n    console.log(pt3, 'vertex: i, at: ', pos + 1);\r\n    console.log(pt4, 'vertex: v, at: ', pos + 1);\r\n    console.log('newShape: ', newShape);*/\r\n    shapePath.setXYAt(pt2[0],pt2[1],'o',pos);\r\n    shapePath.setXYAt(pt3[0],pt3[1],'i',pos + 1);\r\n    if(newShape){\r\n        shapePath.setXYAt(pt1[0],pt1[1],'v',pos);\r\n    }\r\n    shapePath.setXYAt(pt4[0],pt4[1],'v',pos + 1);\r\n}\r\n\r\nTrimModifier.prototype.addShapes = function(shapeData, shapeSegment, shapePath){\r\n    var pathsData = shapeData.pathsData;\r\n    var shapePaths = shapeData.shape.paths.shapes;\r\n    var i, len = shapeData.shape.paths._length, j, jLen;\r\n    var addedLength = 0;\r\n    var currentLengthData,segmentCount;\r\n    var lengths;\r\n    var segment;\r\n    var shapes = [];\r\n    var initPos;\r\n    var newShape = true;\r\n    if(!shapePath){\r\n        shapePath = shape_pool.newShape();\r\n        segmentCount = 0;\r\n        initPos = 0;\r\n    } else {\r\n        segmentCount = shapePath._length;\r\n        initPos = shapePath._length;\r\n    }\r\n    shapes.push(shapePath);\r\n    for(i=0;i<len;i+=1){\r\n        lengths = pathsData[i].lengths;\r\n        shapePath.c = shapePaths[i].c;\r\n        jLen = shapePaths[i].c ? lengths.length : lengths.length + 1;\r\n        for(j=1;j<jLen;j+=1){\r\n            currentLengthData = lengths[j-1];\r\n            if(addedLength + currentLengthData.addedLength < shapeSegment.s){\r\n                addedLength += currentLengthData.addedLength;\r\n                shapePath.c = false;\r\n            } else if(addedLength > shapeSegment.e){\r\n                shapePath.c = false;\r\n                break;\r\n            } else {\r\n                if(shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + currentLengthData.addedLength){\r\n                    this.addSegment(shapePaths[i].v[j-1],shapePaths[i].o[j-1],shapePaths[i].i[j],shapePaths[i].v[j],shapePath,segmentCount,newShape);\r\n                    newShape = false;\r\n                } else {\r\n                    segment = bez.getNewSegment(shapePaths[i].v[j-1],shapePaths[i].v[j],shapePaths[i].o[j-1],shapePaths[i].i[j], (shapeSegment.s - addedLength)/currentLengthData.addedLength,(shapeSegment.e - addedLength)/currentLengthData.addedLength, lengths[j-1]);\r\n                    this.addSegment(segment.pt1,segment.pt3,segment.pt4,segment.pt2,shapePath,segmentCount,newShape);\r\n                    newShape = false;\r\n                    shapePath.c = false;\r\n                }\r\n                addedLength += currentLengthData.addedLength;\r\n                segmentCount += 1;\r\n            }\r\n        }\r\n        if(shapePaths[i].c){\r\n            currentLengthData = lengths[j-1];\r\n            if(addedLength <= shapeSegment.e){\r\n                var segmentLength = lengths[j-1].addedLength;\r\n                if(shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + segmentLength){\r\n                    this.addSegment(shapePaths[i].v[j-1],shapePaths[i].o[j-1],shapePaths[i].i[0],shapePaths[i].v[0],shapePath,segmentCount,newShape);\r\n                    newShape = false;\r\n                }else{\r\n                    segment = bez.getNewSegment(shapePaths[i].v[j-1],shapePaths[i].v[0],shapePaths[i].o[j-1],shapePaths[i].i[0], (shapeSegment.s - addedLength)/segmentLength,(shapeSegment.e - addedLength)/segmentLength, lengths[j-1]);\r\n                    this.addSegment(segment.pt1,segment.pt3,segment.pt4,segment.pt2,shapePath,segmentCount,newShape);\r\n                    newShape = false;\r\n                    shapePath.c = false;\r\n                }\r\n            } else {\r\n                shapePath.c = false;\r\n            }\r\n            addedLength += currentLengthData.addedLength;\r\n            segmentCount += 1;\r\n        }\r\n        if(shapePath._length){\r\n            shapePath.setXYAt(shapePath.v[initPos][0],shapePath.v[initPos][1],'i',initPos);\r\n            shapePath.setXYAt(shapePath.v[shapePath._length - 1][0],shapePath.v[shapePath._length - 1][1],'o',shapePath._length - 1);\r\n        }\r\n        if(addedLength > shapeSegment.e){\r\n            break;\r\n        }\r\n        if(i<len-1){\r\n            shapePath = shape_pool.newShape();\r\n            newShape = true;\r\n            shapes.push(shapePath);\r\n            segmentCount = 0;\r\n        }\r\n    }\r\n    return shapes;\r\n\r\n}\r\n\r\n\r\nShapeModifiers.registerModifier('tm',TrimModifier);\nfunction RoundCornersModifier(){};\r\nextendPrototype(ShapeModifier,RoundCornersModifier);\r\nRoundCornersModifier.prototype.processKeys = function(forceRender){\r\n    if(this.elem.globalData.frameId === this.frameId && !forceRender){\r\n        return;\r\n    }\r\n    this.mdf = forceRender ? true : false;\r\n    this.frameId = this.elem.globalData.frameId;\r\n    var i, len = this.dynamicProperties.length;\r\n\r\n    for(i=0;i<len;i+=1){\r\n        this.dynamicProperties[i].getValue();\r\n        if(this.dynamicProperties[i].mdf){\r\n            this.mdf = true;\r\n        }\r\n    }\r\n}\r\nRoundCornersModifier.prototype.initModifierProperties = function(elem,data){\r\n    this.getValue = this.processKeys;\r\n    this.rd = PropertyFactory.getProp(elem,data.r,0,null,this.dynamicProperties);\r\n    if(!this.dynamicProperties.length){\r\n        this.getValue(true);\r\n    }\r\n};\r\n\r\nRoundCornersModifier.prototype.processPath = function(path, round){\r\n    var cloned_path = shape_pool.newShape();\r\n    cloned_path.c = path.c;\r\n    var i, len = path._length;\r\n    var currentV,currentI,currentO,closerV, newV,newO,newI,distance,newPosPerc,index = 0;\r\n    var vX,vY,oX,oY,iX,iY;\r\n    for(i=0;i<len;i+=1){\r\n        currentV = path.v[i];\r\n        currentO = path.o[i];\r\n        currentI = path.i[i];\r\n        if(currentV[0]===currentO[0] && currentV[1]===currentO[1] && currentV[0]===currentI[0] && currentV[1]===currentI[1]){\r\n            if((i===0 || i === len - 1) && !path.c){\r\n                cloned_path.setTripleAt(currentV[0],currentV[1],currentO[0],currentO[1],currentI[0],currentI[1],index);\r\n                /*cloned_path.v[index] = currentV;\r\n                cloned_path.o[index] = currentO;\r\n                cloned_path.i[index] = currentI;*/\r\n                index += 1;\r\n            } else {\r\n                if(i===0){\r\n                    closerV = path.v[len-1];\r\n                } else {\r\n                    closerV = path.v[i-1];\r\n                }\r\n                distance = Math.sqrt(Math.pow(currentV[0]-closerV[0],2)+Math.pow(currentV[1]-closerV[1],2));\r\n                newPosPerc = distance ? Math.min(distance/2,round)/distance : 0;\r\n                vX = iX = currentV[0]+(closerV[0]-currentV[0])*newPosPerc;\r\n                vY = iY = currentV[1]-(currentV[1]-closerV[1])*newPosPerc;\r\n                oX = vX-(vX-currentV[0])*roundCorner;\r\n                oY = vY-(vY-currentV[1])*roundCorner;\r\n                cloned_path.setTripleAt(vX,vY,oX,oY,iX,iY,index);\r\n                index += 1;\r\n\r\n                if(i === len - 1){\r\n                    closerV = path.v[0];\r\n                } else {\r\n                    closerV = path.v[i+1];\r\n                }\r\n                distance = Math.sqrt(Math.pow(currentV[0]-closerV[0],2)+Math.pow(currentV[1]-closerV[1],2));\r\n                newPosPerc = distance ? Math.min(distance/2,round)/distance : 0;\r\n                vX = oX = currentV[0]+(closerV[0]-currentV[0])*newPosPerc;\r\n                vY = oY = currentV[1]+(closerV[1]-currentV[1])*newPosPerc;\r\n                iX = vX-(vX-currentV[0])*roundCorner;\r\n                iY = vY-(vY-currentV[1])*roundCorner;\r\n                cloned_path.setTripleAt(vX,vY,oX,oY,iX,iY,index);\r\n                index += 1;\r\n            }\r\n        } else {\r\n            cloned_path.setTripleAt(path.v[i][0],path.v[i][1],path.o[i][0],path.o[i][1],path.i[i][0],path.i[i][1],index);\r\n            index += 1;\r\n        }\r\n    }\r\n    return cloned_path;\r\n}\r\n\r\nRoundCornersModifier.prototype.processShapes = function(firstFrame){\r\n    var shapePaths;\r\n    var i, len = this.shapes.length;\r\n    var j, jLen;\r\n    var rd = this.rd.v;\r\n\r\n    if(rd !== 0){\r\n        var shapeData, newPaths, localShapeCollection;\r\n        for(i=0;i<len;i+=1){\r\n            shapeData = this.shapes[i];\r\n            newPaths = shapeData.shape.paths;\r\n            localShapeCollection = shapeData.localShapeCollection;\r\n            if(!(!shapeData.shape.mdf && !this.mdf && !firstFrame)){\r\n                localShapeCollection.releaseShapes();\r\n                shapeData.shape.mdf = true;\r\n                shapePaths = shapeData.shape.paths.shapes;\r\n                jLen = shapeData.shape.paths._length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    localShapeCollection.addShape(this.processPath(shapePaths[j],rd));\r\n                }\r\n            }\r\n            shapeData.shape.paths = shapeData.localShapeCollection;\r\n        }\r\n\r\n    }\r\n    if(!this.dynamicProperties.length){\r\n        this.mdf = false;\r\n    }\r\n}\r\n\r\n\r\nShapeModifiers.registerModifier('rd',RoundCornersModifier);\nfunction RepeaterModifier(){};\r\nRepeaterModifier.prototype.processKeys = function(forceRender){\r\n    if(this.elem.globalData.frameId === this.frameId && !forceRender){\r\n        return;\r\n    }\r\n    this.mdf = forceRender ? true : false;\r\n    var i, len = this.dynamicProperties.length;\r\n\r\n    for(i=0;i<len;i+=1){\r\n        this.dynamicProperties[i].getValue();\r\n        if(this.dynamicProperties[i].mdf){\r\n            this.mdf = true;\r\n        }\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.initModifierProperties = function(elem,data){\r\n    this.getValue = this.processKeys;\r\n    this.c = PropertyFactory.getProp(elem,data.c,0,null,this.dynamicProperties);\r\n    this.o = PropertyFactory.getProp(elem,data.o,0,null,this.dynamicProperties);\r\n    this.tr = PropertyFactory.getProp(elem,data.tr,2,null,this.dynamicProperties);\r\n    this.data = data;\r\n    if(!this.dynamicProperties.length){\r\n        this.getValue(true);\r\n    }\r\n    this.pMatrix = new Matrix();\r\n    this.rMatrix = new Matrix();\r\n    this.sMatrix = new Matrix();\r\n    this.tMatrix = new Matrix();\r\n    this.matrix = new Matrix();\r\n};\r\n\r\nRepeaterModifier.prototype.applyTransforms = function(pMatrix, rMatrix, sMatrix, transform, perc, inv){\r\n    var dir = inv ? -1 : 1;\r\n    var scaleX = transform.s.v[0] + (1 - transform.s.v[0]) * (1 - perc);\r\n    var scaleY = transform.s.v[1] + (1 - transform.s.v[1]) * (1 - perc);\r\n    pMatrix.translate(transform.p.v[0] * dir * perc, transform.p.v[1] * dir * perc, transform.p.v[2]);\r\n    rMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\r\n    rMatrix.rotate(-transform.r.v * dir * perc);\r\n    rMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\r\n    sMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\r\n    sMatrix.scale(inv ? 1/scaleX : scaleX, inv ? 1/scaleY : scaleY);\r\n    sMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\r\n}\r\n\r\nRepeaterModifier.prototype.init = function(elem, arr, pos, elemsData, dynamicProperties) {\r\n    this.elem = elem;\r\n    this.arr = arr;\r\n    this.pos = pos;\r\n    this.elemsData = elemsData;\r\n    this._currentCopies = 0;\r\n    this._elements = [];\r\n    this._groups = [];\r\n    this.dynamicProperties = [];\r\n    this.frameId = -1;\r\n    this.initModifierProperties(elem,arr[pos]);\r\n    var cont = 0;\r\n    while(pos>0){\r\n        pos -= 1;\r\n        //this._elements.unshift(arr.splice(pos,1)[0]);\r\n        this._elements.unshift(arr[pos]);\r\n        cont += 1;\r\n    }\r\n    if(this.dynamicProperties.length){\r\n        this.k = true;\r\n        dynamicProperties.push(this);\r\n    }else{\r\n        this.getValue(true);\r\n    }\r\n}\r\n\r\nRepeaterModifier.prototype.resetElements = function(elements){\r\n    var i, len = elements.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        elements[i]._processed = false;\r\n        if(elements[i].ty === 'gr'){\r\n            this.resetElements(elements[i].it);\r\n        }\r\n    }\r\n}\r\n\r\nRepeaterModifier.prototype.cloneElements = function(elements){\r\n    var i, len = elements.length;\r\n    var newElements = JSON.parse(JSON.stringify(elements));\r\n    this.resetElements(newElements);\r\n    return newElements;\r\n}\r\n\r\nRepeaterModifier.prototype.changeGroupRender = function(elements, renderFlag) {\r\n    var i, len = elements.length;\r\n    for(i = 0; i < len ; i += 1) {\r\n        elements[i]._render = renderFlag;\r\n        if(elements[i].ty === 'gr') {\r\n            this.changeGroupRender(elements[i].it, renderFlag);\r\n        }\r\n    }\r\n}\r\n\r\nRepeaterModifier.prototype.processShapes = function(firstFrame){\r\n\r\n    if(this.elem.globalData.frameId === this.frameId){\r\n        return;\r\n    }\r\n    this.frameId = this.elem.globalData.frameId;\r\n    if(!this.dynamicProperties.length && !firstFrame){\r\n        this.mdf = false;\r\n    }\r\n    if(this.mdf){\r\n        var copies = Math.ceil(this.c.v);\r\n        if(this._groups.length < copies){\r\n            while(this._groups.length < copies){\r\n                var group = {\r\n                    it:this.cloneElements(this._elements),\r\n                    ty:'gr'\r\n                }\r\n                group.it.push({\"a\":{\"a\":0,\"ix\":1,\"k\":[0,0]},\"nm\":\"Transform\",\"o\":{\"a\":0,\"ix\":7,\"k\":100},\"p\":{\"a\":0,\"ix\":2,\"k\":[0,0]},\"r\":{\"a\":0,\"ix\":6,\"k\":0},\"s\":{\"a\":0,\"ix\":3,\"k\":[100,100]},\"sa\":{\"a\":0,\"ix\":5,\"k\":0},\"sk\":{\"a\":0,\"ix\":4,\"k\":0},\"ty\":\"tr\"});\r\n                \r\n                this.arr.splice(0,0,group);\r\n                this._groups.splice(0,0,group);\r\n                this._currentCopies += 1;\r\n            }\r\n            this.elem.reloadShapes();\r\n        }\r\n        var i, cont = 0, renderFlag;\r\n        for(i = 0; i  <= this._groups.length - 1; i += 1){\r\n            renderFlag = cont < copies;\r\n            this._groups[i]._render = renderFlag;\r\n            this.changeGroupRender(this._groups[i].it, renderFlag);\r\n            cont += 1;\r\n        }\r\n        \r\n        this._currentCopies = copies;\r\n        this.elem.firstFrame = true;\r\n        ////\r\n\r\n        var offset = this.o.v;\r\n        var offsetModulo = offset%1;\r\n        var roundOffset = offset > 0 ? Math.floor(offset) : Math.ceil(offset);\r\n        var k;\r\n        var tMat = this.tr.v.props;\r\n        var pProps = this.pMatrix.props;\r\n        var rProps = this.rMatrix.props;\r\n        var sProps = this.sMatrix.props;\r\n        this.pMatrix.reset();\r\n        this.rMatrix.reset();\r\n        this.sMatrix.reset();\r\n        this.tMatrix.reset();\r\n        this.matrix.reset();\r\n        var iteration = 0;\r\n\r\n        if(offset > 0) {\r\n            while(iteration<roundOffset){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\r\n                iteration += 1;\r\n            }\r\n            if(offsetModulo){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, offsetModulo, false);\r\n                iteration += offsetModulo;\r\n            }\r\n        } else if(offset < 0) {\r\n            while(iteration>roundOffset){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, true);\r\n                iteration -= 1;\r\n            }\r\n            if(offsetModulo){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, - offsetModulo, true);\r\n                iteration -= offsetModulo;\r\n            }\r\n        }\r\n        i = this.data.m === 1 ? 0 : this._currentCopies - 1;\r\n        var dir = this.data.m === 1 ? 1 : -1;\r\n        cont = this._currentCopies;\r\n        while(cont){\r\n            if(iteration !== 0){\r\n                if((i !== 0 && dir === 1) || (i !== this._currentCopies - 1 && dir === -1)){\r\n                    this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\r\n                }\r\n                this.matrix.transform(rProps[0],rProps[1],rProps[2],rProps[3],rProps[4],rProps[5],rProps[6],rProps[7],rProps[8],rProps[9],rProps[10],rProps[11],rProps[12],rProps[13],rProps[14],rProps[15]);\r\n                this.matrix.transform(sProps[0],sProps[1],sProps[2],sProps[3],sProps[4],sProps[5],sProps[6],sProps[7],sProps[8],sProps[9],sProps[10],sProps[11],sProps[12],sProps[13],sProps[14],sProps[15]);\r\n                this.matrix.transform(pProps[0],pProps[1],pProps[2],pProps[3],pProps[4],pProps[5],pProps[6],pProps[7],pProps[8],pProps[9],pProps[10],pProps[11],pProps[12],pProps[13],pProps[14],pProps[15]);\r\n                var items = this.elemsData[i].it;\r\n                var itemsTransform = items[items.length - 1].transform.mProps.v.props;\r\n                var j, jLen = itemsTransform.length;\r\n                for(j=0;j<jLen;j+=1) {\r\n                    itemsTransform[j] = this.matrix.props[j];\r\n                }\r\n                this.matrix.reset();\r\n            } else {\r\n                this.matrix.reset();\r\n                var items = this.elemsData[i].it;\r\n                var itemsTransform = items[items.length - 1].transform.mProps.v.props;\r\n                var j, jLen = itemsTransform.length;\r\n                for(j=0;j<jLen;j+=1) {\r\n                    itemsTransform[j] = this.matrix.props[j];\r\n                }\r\n            }\r\n            iteration += 1;\r\n            cont -= 1;\r\n            i += dir;\r\n        }\r\n    }\r\n}\r\n\r\nRepeaterModifier.prototype.addShape = function(){}\r\n\r\nShapeModifiers.registerModifier('rp',RepeaterModifier);\nfunction ShapeCollection(){\r\n\tthis._length = 0;\r\n\tthis._maxLength = 4;\r\n\tthis.shapes = Array.apply(null,{length:this._maxLength});\r\n};\r\n\r\nShapeCollection.prototype.addShape = function(shapeData){\r\n\tif(this._length === this._maxLength){\r\n\t\tthis.shapes = this.shapes.concat(Array.apply(null,{length:this._maxLength}));\r\n\t\tthis._maxLength *= 2;\r\n\t}\r\n\tthis.shapes[this._length] = shapeData;\r\n\tthis._length += 1;\r\n};\r\n\r\nShapeCollection.prototype.releaseShapes = function(){\r\n\tvar i;\r\n\tfor(i = 0; i < this._length; i += 1) {\r\n\t\tshape_pool.release(this.shapes[i]);\r\n\t}\r\n\tthis._length = 0;\r\n};\nvar ImagePreloader = (function(){\r\n\r\n    var imagesLoadedCb;\r\n\r\n    function imageLoaded(){\r\n        this.loadedAssets += 1;\r\n        if(this.loadedAssets === this.totalImages){\r\n            if(imagesLoadedCb) {\r\n                imagesLoadedCb(null);\r\n            }\r\n        }\r\n    }\r\n\r\n    function getAssetsPath(assetData){\r\n        var path = '';\r\n        if(this.assetsPath){\r\n            var imagePath = assetData.p;\r\n            if(imagePath.indexOf('images/') !== -1){\r\n                imagePath = imagePath.split('/')[1];\r\n            }\r\n            path = this.assetsPath + imagePath;\r\n        } else {\r\n            path = this.path;\r\n            path += assetData.u ? assetData.u : '';\r\n            path += assetData.p;\r\n        }\r\n        return path;\r\n    }\r\n\r\n    function loadImage(path){\r\n        var img = document.createElement('img');\r\n        img.addEventListener('load', imageLoaded.bind(this), false);\r\n        img.addEventListener('error', imageLoaded.bind(this), false);\r\n        img.src = path;\r\n    }\r\n    function loadAssets(assets, cb){\r\n        imagesLoadedCb = cb;\r\n        this.totalAssets = assets.length;\r\n        var i;\r\n        for(i=0;i<this.totalAssets;i+=1){\r\n            if(!assets[i].layers){\r\n                loadImage.bind(this)(getAssetsPath.bind(this)(assets[i]));\r\n                this.totalImages += 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    function setPath(path){\r\n        this.path = path || '';\r\n    }\r\n\r\n    function setAssetsPath(path){\r\n        this.assetsPath = path || '';\r\n    }\r\n\r\n    return function ImagePreloader(){\r\n        this.loadAssets = loadAssets;\r\n        this.setAssetsPath = setAssetsPath;\r\n        this.setPath = setPath;\r\n        this.assetsPath = '';\r\n        this.path = '';\r\n        this.totalAssets = 0;\r\n        this.totalImages = 0;\r\n        this.loadedAssets = 0;\r\n    }\r\n}());\nvar featureSupport = (function(){\r\n\tvar ob = {\r\n\t\tmaskType: true\r\n\t}\r\n\tif (/MSIE 10/i.test(navigator.userAgent) || /MSIE 9/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /Edge\\/\\d./i.test(navigator.userAgent)) {\r\n\t   ob.maskType = false;\r\n\t}\r\n\treturn ob;\r\n}());\nvar filtersFactory = (function(){\r\n\tvar ob = {};\r\n\tob.createFilter = createFilter;\r\n\tob.createAlphaToLuminanceFilter = createAlphaToLuminanceFilter;\r\n\r\n\tfunction createFilter(filId){\r\n        \tvar fil = document.createElementNS(svgNS,'filter');\r\n        \tfil.setAttribute('id',filId);\r\n                fil.setAttribute('filterUnits','objectBoundingBox');\r\n                fil.setAttribute('x','0%');\r\n                fil.setAttribute('y','0%');\r\n                fil.setAttribute('width','100%');\r\n                fil.setAttribute('height','100%');\r\n                return fil;\r\n\t}\r\n\r\n\tfunction createAlphaToLuminanceFilter(){\r\n                var feColorMatrix = document.createElementNS(svgNS,'feColorMatrix');\r\n                feColorMatrix.setAttribute('type','matrix');\r\n                feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n                feColorMatrix.setAttribute('values','0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1');\r\n                return feColorMatrix;\r\n\t}\r\n\r\n\treturn ob;\r\n}())\nfunction TextAnimatorProperty(textData, renderType, elem){\r\n    this.mdf = false;\r\n    this._firstFrame = true;\r\n\tthis._hasMaskedPath = false;\r\n\tthis._frameId = -1;\r\n\tthis._dynamicProperties = [];\r\n\tthis._textData = textData;\r\n\tthis._renderType = renderType;\r\n\tthis._elem = elem;\r\n\tthis._animatorsData = Array.apply(null,{length:this._textData.a.length});\r\n\tthis._pathData = {}\r\n\tthis._moreOptions = {\r\n\t\talignment: {}\r\n\t};\r\n\tthis.renderedLetters = [];\r\n    this.lettersChangedFlag = false;\r\n\r\n}\r\n\r\nTextAnimatorProperty.prototype.searchProperties = function(dynamicProperties){\r\n    var i, len = this._textData.a.length, animatorData, animatorProps;\r\n    var getProp = PropertyFactory.getProp;\r\n    for(i=0;i<len;i+=1){\r\n        animatorProps = this._textData.a[i];\r\n        animatorData = {\r\n            a: {},\r\n            s: {}\r\n        };\r\n        if('r' in animatorProps.a) {\r\n            animatorData.a.r = getProp(this._elem,animatorProps.a.r,0,degToRads,this._dynamicProperties);\r\n        }\r\n        if('rx' in animatorProps.a) {\r\n            animatorData.a.rx = getProp(this._elem,animatorProps.a.rx,0,degToRads,this._dynamicProperties);\r\n        }\r\n        if('ry' in animatorProps.a) {\r\n            animatorData.a.ry = getProp(this._elem,animatorProps.a.ry,0,degToRads,this._dynamicProperties);\r\n        }\r\n        if('sk' in animatorProps.a) {\r\n            animatorData.a.sk = getProp(this._elem,animatorProps.a.sk,0,degToRads,this._dynamicProperties);\r\n        }\r\n        if('sa' in animatorProps.a) {\r\n            animatorData.a.sa = getProp(this._elem,animatorProps.a.sa,0,degToRads,this._dynamicProperties);\r\n        }\r\n        if('s' in animatorProps.a) {\r\n            animatorData.a.s = getProp(this._elem,animatorProps.a.s,1,0.01,this._dynamicProperties);\r\n        }\r\n        if('a' in animatorProps.a) {\r\n            animatorData.a.a = getProp(this._elem,animatorProps.a.a,1,0,this._dynamicProperties);\r\n        }\r\n        if('o' in animatorProps.a) {\r\n            animatorData.a.o = getProp(this._elem,animatorProps.a.o,0,0.01,this._dynamicProperties);\r\n        }\r\n        if('p' in animatorProps.a) {\r\n            animatorData.a.p = getProp(this._elem,animatorProps.a.p,1,0,this._dynamicProperties);\r\n        }\r\n        if('sw' in animatorProps.a) {\r\n            animatorData.a.sw = getProp(this._elem,animatorProps.a.sw,0,0,this._dynamicProperties);\r\n        }\r\n        if('sc' in animatorProps.a) {\r\n            animatorData.a.sc = getProp(this._elem,animatorProps.a.sc,1,0,this._dynamicProperties);\r\n        }\r\n        if('fc' in animatorProps.a) {\r\n            animatorData.a.fc = getProp(this._elem,animatorProps.a.fc,1,0,this._dynamicProperties);\r\n        }\r\n        if('fh' in animatorProps.a) {\r\n            animatorData.a.fh = getProp(this._elem,animatorProps.a.fh,0,0,this._dynamicProperties);\r\n        }\r\n        if('fs' in animatorProps.a) {\r\n            animatorData.a.fs = getProp(this._elem,animatorProps.a.fs,0,0.01,this._dynamicProperties);\r\n        }\r\n        if('fb' in animatorProps.a) {\r\n            animatorData.a.fb = getProp(this._elem,animatorProps.a.fb,0,0.01,this._dynamicProperties);\r\n        }\r\n        if('t' in animatorProps.a) {\r\n            animatorData.a.t = getProp(this._elem,animatorProps.a.t,0,0,this._dynamicProperties);\r\n        }\r\n        animatorData.s = PropertyFactory.getTextSelectorProp(this._elem,animatorProps.s,this._dynamicProperties);\r\n        animatorData.s.t = animatorProps.s.t;\r\n        this._animatorsData[i] = animatorData;\r\n    }\r\n    if(this._textData.p && 'm' in this._textData.p){\r\n        this._pathData = {\r\n            f: getProp(this._elem,this._textData.p.f,0,0,this._dynamicProperties),\r\n            l: getProp(this._elem,this._textData.p.l,0,0,this._dynamicProperties),\r\n            r: this._textData.p.r,\r\n            m: this._elem.maskManager.getMaskProperty(this._textData.p.m)\r\n        };\r\n        this._hasMaskedPath = true;\r\n    } else {\r\n        this._hasMaskedPath = false;\r\n    }\r\n    this._moreOptions.alignment = getProp(this._elem,this._textData.m.a,1,0,this._dynamicProperties);\r\n    if(this._dynamicProperties.length) {\r\n    \tdynamicProperties.push(this);\r\n    }\r\n}\r\n\r\nTextAnimatorProperty.prototype.getMeasures = function(documentData, lettersChangedFlag){\r\n    this.lettersChangedFlag = lettersChangedFlag;\r\n    if(!this.mdf && !this._firstFrame && !lettersChangedFlag && (!this._hasMaskedPath || !this._pathData.m.mdf)) {\r\n        return;\r\n    }\r\n    this._firstFrame = false;\r\n    var alignment = this._moreOptions.alignment.v;\r\n    var animators = this._animatorsData;\r\n    var textData = this._textData;\r\n    var matrixHelper = this.mHelper;\r\n    var renderType = this._renderType;\r\n    var renderedLettersCount = this.renderedLetters.length;\r\n    var data = this.data;\r\n    var xPos,yPos;\r\n    var i, len;\r\n    var letters = documentData.l;\r\n    if(this._hasMaskedPath) {\r\n        var mask = this._pathData.m;\r\n        if(!this._pathData.n || this._pathData.mdf){\r\n            var paths = mask.v;\r\n            if(this._pathData.r){\r\n                paths = reversePath(paths);\r\n            }\r\n            var pathInfo = {\r\n                tLength: 0,\r\n                segments: []\r\n            };\r\n            len = paths._length - 1;\r\n            var pathData;\r\n            var totalLength = 0;\r\n            for (i = 0; i < len; i += 1) {\r\n                pathData = {\r\n                    s: paths.v[i],\r\n                    e: paths.v[i + 1],\r\n                    to: [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]],\r\n                    ti: [paths.i[i + 1][0] - paths.v[i + 1][0], paths.i[i + 1][1] - paths.v[i + 1][1]]\r\n                };\r\n                bez.buildBezierData(pathData);\r\n                pathInfo.tLength += pathData.bezierData.segmentLength;\r\n                pathInfo.segments.push(pathData);\r\n                totalLength += pathData.bezierData.segmentLength;\r\n            }\r\n            i = len;\r\n            if (mask.v.c) {\r\n                pathData = {\r\n                    s: paths.v[i],\r\n                    e: paths.v[0],\r\n                    to: [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]],\r\n                    ti: [paths.i[0][0] - paths.v[0][0], paths.i[0][1] - paths.v[0][1]]\r\n                };\r\n                bez.buildBezierData(pathData);\r\n                pathInfo.tLength += pathData.bezierData.segmentLength;\r\n                pathInfo.segments.push(pathData);\r\n                totalLength += pathData.bezierData.segmentLength;\r\n            }\r\n            this._pathData.pi = pathInfo;\r\n        }\r\n        var pathInfo = this._pathData.pi;\r\n\r\n        var currentLength = this._pathData.f.v, segmentInd = 0, pointInd = 1, currentPoint, prevPoint, points;\r\n        var segmentLength = 0, flag = true;\r\n        var segments = pathInfo.segments;\r\n        if (currentLength < 0 && mask.v.c) {\r\n            if (pathInfo.tLength < Math.abs(currentLength)) {\r\n                currentLength = -Math.abs(currentLength) % pathInfo.tLength;\r\n            }\r\n            segmentInd = segments.length - 1;\r\n            points = segments[segmentInd].bezierData.points;\r\n            pointInd = points.length - 1;\r\n            while (currentLength < 0) {\r\n                currentLength += points[pointInd].partialLength;\r\n                pointInd -= 1;\r\n                if (pointInd < 0) {\r\n                    segmentInd -= 1;\r\n                    points = segments[segmentInd].bezierData.points;\r\n                    pointInd = points.length - 1;\r\n                }\r\n            }\r\n\r\n        }\r\n        points = segments[segmentInd].bezierData.points;\r\n        prevPoint = points[pointInd - 1];\r\n        currentPoint = points[pointInd];\r\n        var partialLength = currentPoint.partialLength;\r\n        var perc, tanAngle;\r\n    }\r\n\r\n\r\n    len = letters.length;\r\n    xPos = 0;\r\n    yPos = 0;\r\n    var yOff = documentData.s*1.2*.714;\r\n    var firstLine = true;\r\n    var animatorProps, animatorSelector;\r\n    var j, jLen;\r\n    var letterValue;\r\n\r\n    jLen = animators.length;\r\n    if (lettersChangedFlag) {\r\n        for (j = 0; j < jLen; j += 1) {\r\n            animatorSelector = animators[j].s;\r\n            animatorSelector.getValue(true);\r\n        }\r\n    }\r\n    var lastLetter;\r\n\r\n    var mult, ind = -1, offf, xPathPos, yPathPos;\r\n    var initPathPos = currentLength,initSegmentInd = segmentInd, initPointInd = pointInd, currentLine = -1;\r\n    var elemOpacity;\r\n    var sc,sw,fc,k;\r\n    var lineLength = 0;\r\n    var letterSw,letterSc,letterFc,letterM = '',letterP = this.defaultPropsArray,letterO;\r\n    for( i = 0; i < len; i += 1) {\r\n        matrixHelper.reset();\r\n        elemOpacity = 1;\r\n        if(letters[i].n) {\r\n            xPos = 0;\r\n            yPos += documentData.yOffset;\r\n            yPos += firstLine ? 1 : 0;\r\n            currentLength = initPathPos ;\r\n            firstLine = false;\r\n            lineLength = 0;\r\n            if(this._hasMaskedPath) {\r\n                segmentInd = initSegmentInd;\r\n                pointInd = initPointInd;\r\n                points = segments[segmentInd].bezierData.points;\r\n                prevPoint = points[pointInd - 1];\r\n                currentPoint = points[pointInd];\r\n                partialLength = currentPoint.partialLength;\r\n                segmentLength = 0;\r\n            }\r\n            letterO = letterSw = letterFc = letterM = '';\r\n            letterP = this.defaultPropsArray;\r\n        }else{\r\n            if(this._hasMaskedPath) {\r\n                if(currentLine !== letters[i].line){\r\n                    switch(documentData.j){\r\n                        case 1:\r\n                            currentLength += totalLength - documentData.lineWidths[letters[i].line];\r\n                            break;\r\n                        case 2:\r\n                            currentLength += (totalLength - documentData.lineWidths[letters[i].line])/2;\r\n                            break;\r\n                    }\r\n                    currentLine = letters[i].line;\r\n                }\r\n                if (ind !== letters[i].ind) {\r\n                    if (letters[ind]) {\r\n                        currentLength += letters[ind].extra;\r\n                    }\r\n                    currentLength += letters[i].an / 2;\r\n                    ind = letters[i].ind;\r\n                }\r\n                currentLength += alignment[0] * letters[i].an / 200;\r\n                var animatorOffset = 0;\r\n                for (j = 0; j < jLen; j += 1) {\r\n                    animatorProps = animators[j].a;\r\n                    if ('p' in animatorProps) {\r\n                        animatorSelector = animators[j].s;\r\n                        mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                        if(mult.length){\r\n                            animatorOffset += animatorProps.p.v[0] * mult[0];\r\n                        } else{\r\n                            animatorOffset += animatorProps.p.v[0] * mult;\r\n                        }\r\n\r\n                    }\r\n                    if ('a' in animatorProps) {\r\n                        animatorSelector = animators[j].s;\r\n                        mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                        if(mult.length){\r\n                            animatorOffset += animatorProps.a.v[0] * mult[0];\r\n                        } else{\r\n                            animatorOffset += animatorProps.a.v[0] * mult;\r\n                        }\r\n\r\n                    }\r\n                }\r\n                flag = true;\r\n                while (flag) {\r\n                    if (segmentLength + partialLength >= currentLength + animatorOffset || !points) {\r\n                        perc = (currentLength + animatorOffset - segmentLength) / currentPoint.partialLength;\r\n                        xPathPos = prevPoint.point[0] + (currentPoint.point[0] - prevPoint.point[0]) * perc;\r\n                        yPathPos = prevPoint.point[1] + (currentPoint.point[1] - prevPoint.point[1]) * perc;\r\n                        matrixHelper.translate(-alignment[0]*letters[i].an/200, -(alignment[1] * yOff / 100));\r\n                        flag = false;\r\n                    } else if (points) {\r\n                        segmentLength += currentPoint.partialLength;\r\n                        pointInd += 1;\r\n                        if (pointInd >= points.length) {\r\n                            pointInd = 0;\r\n                            segmentInd += 1;\r\n                            if (!segments[segmentInd]) {\r\n                                if (mask.v.c) {\r\n                                    pointInd = 0;\r\n                                    segmentInd = 0;\r\n                                    points = segments[segmentInd].bezierData.points;\r\n                                } else {\r\n                                    segmentLength -= currentPoint.partialLength;\r\n                                    points = null;\r\n                                }\r\n                            } else {\r\n                                points = segments[segmentInd].bezierData.points;\r\n                            }\r\n                        }\r\n                        if (points) {\r\n                            prevPoint = currentPoint;\r\n                            currentPoint = points[pointInd];\r\n                            partialLength = currentPoint.partialLength;\r\n                        }\r\n                    }\r\n                }\r\n                offf = letters[i].an / 2 - letters[i].add;\r\n                matrixHelper.translate(-offf, 0, 0);\r\n            } else {\r\n                offf = letters[i].an/2 - letters[i].add;\r\n                matrixHelper.translate(-offf,0,0);\r\n\r\n                // Grouping alignment\r\n                matrixHelper.translate(-alignment[0]*letters[i].an/200, -alignment[1]*yOff/100, 0);\r\n            }\r\n\r\n            lineLength += letters[i].l/2;\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if ('t' in animatorProps) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    if(this._hasMaskedPath) {\r\n                        if(mult.length) {\r\n                            currentLength += animatorProps.t*mult[0];\r\n                        } else {\r\n                            currentLength += animatorProps.t*mult;\r\n                        }\r\n                    }else{\r\n                        if(mult.length) {\r\n                            xPos += animatorProps.t.v*mult[0];\r\n                        } else {\r\n                            xPos += animatorProps.t.v*mult;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            lineLength += letters[i].l/2;\r\n            if(documentData.strokeWidthAnim) {\r\n                sw = documentData.sw || 0;\r\n            }\r\n            if(documentData.strokeColorAnim) {\r\n                if(documentData.sc){\r\n                    sc = [documentData.sc[0], documentData.sc[1], documentData.sc[2]];\r\n                }else{\r\n                    sc = [0,0,0];\r\n                }\r\n            }\r\n            if(documentData.fillColorAnim && documentData.fc) {\r\n                fc = [documentData.fc[0], documentData.fc[1], documentData.fc[2]];\r\n            }\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if ('a' in animatorProps) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n\r\n                    if(mult.length){\r\n                        matrixHelper.translate(-animatorProps.a.v[0]*mult[0], -animatorProps.a.v[1]*mult[1], animatorProps.a.v[2]*mult[2]);\r\n                    } else {\r\n                        matrixHelper.translate(-animatorProps.a.v[0]*mult, -animatorProps.a.v[1]*mult, animatorProps.a.v[2]*mult);\r\n                    }\r\n                }\r\n            }\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if ('s' in animatorProps) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    if(mult.length){\r\n                        matrixHelper.scale(1+((animatorProps.s.v[0]-1)*mult[0]),1+((animatorProps.s.v[1]-1)*mult[1]),1);\r\n                    } else {\r\n                        matrixHelper.scale(1+((animatorProps.s.v[0]-1)*mult),1+((animatorProps.s.v[1]-1)*mult),1);\r\n                    }\r\n                }\r\n            }\r\n            for(j=0;j<jLen;j+=1) {\r\n                animatorProps = animators[j].a;\r\n                animatorSelector = animators[j].s;\r\n                mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                if ('sk' in animatorProps) {\r\n                    if(mult.length) {\r\n                        matrixHelper.skewFromAxis(-animatorProps.sk.v * mult[0], animatorProps.sa.v * mult[1]);\r\n                    } else {\r\n                        matrixHelper.skewFromAxis(-animatorProps.sk.v * mult, animatorProps.sa.v * mult);\r\n                    }\r\n                }\r\n                if ('r' in animatorProps) {\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateZ(-animatorProps.r.v * mult[2]);\r\n                    } else {\r\n                        matrixHelper.rotateZ(-animatorProps.r.v * mult);\r\n                    }\r\n                }\r\n                if ('ry' in animatorProps) {\r\n\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateY(animatorProps.ry.v*mult[1]);\r\n                    }else{\r\n                        matrixHelper.rotateY(animatorProps.ry.v*mult);\r\n                    }\r\n                }\r\n                if ('rx' in animatorProps) {\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateX(animatorProps.rx.v*mult[0]);\r\n                    } else {\r\n                        matrixHelper.rotateX(animatorProps.rx.v*mult);\r\n                    }\r\n                }\r\n                if ('o' in animatorProps) {\r\n                    if(mult.length) {\r\n                        elemOpacity += ((animatorProps.o.v)*mult[0] - elemOpacity)*mult[0];\r\n                    } else {\r\n                        elemOpacity += ((animatorProps.o.v)*mult - elemOpacity)*mult;\r\n                    }\r\n                }\r\n                if (documentData.strokeWidthAnim && 'sw' in animatorProps) {\r\n                    if(mult.length) {\r\n                        sw += animatorProps.sw.v*mult[0];\r\n                    } else {\r\n                        sw += animatorProps.sw.v*mult;\r\n                    }\r\n                }\r\n                if (documentData.strokeColorAnim && 'sc' in animatorProps) {\r\n                    for(k=0;k<3;k+=1){\r\n                        if(mult.length) {\r\n                            sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k])*mult[0]\r\n                        } else {\r\n                            sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k])*mult;\r\n                        }\r\n                    }\r\n                }\r\n                if (documentData.fillColorAnim && documentData.fc) {\r\n                    if('fc' in animatorProps){\r\n                        for(k=0;k<3;k+=1){\r\n                            if(mult.length) {\r\n                                fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k])*mult[0];\r\n                            } else {\r\n                                fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k])*mult;\r\n                            }\r\n                        }\r\n                    }\r\n                    if('fh' in animatorProps){\r\n                        if(mult.length) {\r\n                            fc = addHueToRGB(fc,animatorProps.fh.v*mult[0]);\r\n                        } else {\r\n                            fc = addHueToRGB(fc,animatorProps.fh.v*mult);\r\n                        }\r\n                    }\r\n                    if('fs' in animatorProps){\r\n                        if(mult.length) {\r\n                            fc = addSaturationToRGB(fc,animatorProps.fs.v*mult[0]);\r\n                        } else {\r\n                            fc = addSaturationToRGB(fc,animatorProps.fs.v*mult);\r\n                        }\r\n                    }\r\n                    if('fb' in animatorProps){\r\n                        if(mult.length) {\r\n                            fc = addBrightnessToRGB(fc,animatorProps.fb.v*mult[0]);\r\n                        } else {\r\n                            fc = addBrightnessToRGB(fc,animatorProps.fb.v*mult);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n\r\n                if ('p' in animatorProps) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    if(this._hasMaskedPath) {\r\n                        if(mult.length) {\r\n                            matrixHelper.translate(0, animatorProps.p.v[1] * mult[0], -animatorProps.p.v[2] * mult[1]);\r\n                        } else {\r\n                            matrixHelper.translate(0, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\r\n                        }\r\n                    }else{\r\n                        if(mult.length) {\r\n                            matrixHelper.translate(animatorProps.p.v[0] * mult[0], animatorProps.p.v[1] * mult[1], -animatorProps.p.v[2] * mult[2]);\r\n                        } else {\r\n                            matrixHelper.translate(animatorProps.p.v[0] * mult, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(documentData.strokeWidthAnim){\r\n                letterSw = sw < 0 ? 0 : sw;\r\n            }\r\n            if(documentData.strokeColorAnim){\r\n                letterSc = 'rgb('+Math.round(sc[0]*255)+','+Math.round(sc[1]*255)+','+Math.round(sc[2]*255)+')';\r\n            }\r\n            if(documentData.fillColorAnim && documentData.fc){\r\n                letterFc = 'rgb('+Math.round(fc[0]*255)+','+Math.round(fc[1]*255)+','+Math.round(fc[2]*255)+')';\r\n            }\r\n\r\n            if(this._hasMaskedPath) {\r\n                matrixHelper.translate(0,-documentData.ls);\r\n\r\n                matrixHelper.translate(0, alignment[1]*yOff/100 + yPos,0);\r\n                if (textData.p.p) {\r\n                    tanAngle = (currentPoint.point[1] - prevPoint.point[1]) / (currentPoint.point[0] - prevPoint.point[0]);\r\n                    var rot = Math.atan(tanAngle) * 180 / Math.PI;\r\n                    if (currentPoint.point[0] < prevPoint.point[0]) {\r\n                        rot += 180;\r\n                    }\r\n                    matrixHelper.rotate(-rot * Math.PI / 180);\r\n                }\r\n                matrixHelper.translate(xPathPos, yPathPos, 0);\r\n                currentLength -= alignment[0]*letters[i].an/200;\r\n                if(letters[i+1] && ind !== letters[i+1].ind){\r\n                    currentLength += letters[i].an / 2;\r\n                    currentLength += documentData.tr/1000*documentData.s;\r\n                }\r\n            }else{\r\n\r\n                matrixHelper.translate(xPos,yPos,0);\r\n\r\n                if(documentData.ps){\r\n                    //matrixHelper.translate(documentData.ps[0],documentData.ps[1],0);\r\n                    matrixHelper.translate(documentData.ps[0],documentData.ps[1] + documentData.ascent,0);\r\n                }\r\n                switch(documentData.j){\r\n                    case 1:\r\n                        matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]),0,0);\r\n                        break;\r\n                    case 2:\r\n                        matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line])/2,0,0);\r\n                        break;\r\n                }\r\n                matrixHelper.translate(0,-documentData.ls);\r\n                matrixHelper.translate(offf,0,0);\r\n                matrixHelper.translate(alignment[0]*letters[i].an/200,alignment[1]*yOff/100,0);\r\n                xPos += letters[i].l + documentData.tr/1000*documentData.s;\r\n            }\r\n            if(renderType === 'html'){\r\n                letterM = matrixHelper.toCSS();\r\n            }else if(renderType === 'svg'){\r\n                letterM = matrixHelper.to2dCSS();\r\n            }else{\r\n                letterP = [matrixHelper.props[0],matrixHelper.props[1],matrixHelper.props[2],matrixHelper.props[3],matrixHelper.props[4],matrixHelper.props[5],matrixHelper.props[6],matrixHelper.props[7],matrixHelper.props[8],matrixHelper.props[9],matrixHelper.props[10],matrixHelper.props[11],matrixHelper.props[12],matrixHelper.props[13],matrixHelper.props[14],matrixHelper.props[15]];\r\n            }\r\n            letterO = elemOpacity;\r\n        }\r\n\r\n        if(renderedLettersCount <= i) {\r\n            letterValue = new LetterProps(letterO,letterSw,letterSc,letterFc,letterM,letterP);\r\n            this.renderedLetters.push(letterValue);\r\n            renderedLettersCount += 1;\r\n            this.lettersChangedFlag = true;\r\n        } else {\r\n            letterValue = this.renderedLetters[i];\r\n            this.lettersChangedFlag = letterValue.update(letterO, letterSw, letterSc, letterFc, letterM, letterP) || this.lettersChangedFlag;\r\n        }\r\n    }\r\n}\r\n\r\nTextAnimatorProperty.prototype.getValue = function(){\r\n\tif(this._elem.globalData.frameId === this._frameId){\r\n        return;\r\n    }\r\n    this._frameId = this._elem.globalData.frameId;\r\n\tvar i, len = this._dynamicProperties.length;\r\n    this.mdf = false;\r\n\tfor(i = 0; i < len; i += 1) {\r\n\t\tthis._dynamicProperties[i].getValue();\r\n        this.mdf = this._dynamicProperties[i].mdf || this.mdf;\r\n\t}\r\n}\r\n\r\nTextAnimatorProperty.prototype.mHelper = new Matrix();\r\nTextAnimatorProperty.prototype.defaultPropsArray = [];\nfunction LetterProps(o, sw, sc, fc, m, p){\r\n    this.o = o;\r\n    this.sw = sw;\r\n    this.sc = sc;\r\n    this.fc = fc;\r\n    this.m = m;\r\n    this.p = p;\r\n    this.mdf = {\r\n    \to: true,\r\n    \tsw: !!sw,\r\n    \tsc: !!sc,\r\n    \tfc: !!fc,\r\n    \tm: true,\r\n    \tp: true\r\n    };\r\n}\r\n\r\nLetterProps.prototype.update = function(o, sw, sc, fc, m, p) {\r\n\tthis.mdf.o = false;\r\n\tthis.mdf.sw = false;\r\n\tthis.mdf.sc = false;\r\n\tthis.mdf.fc = false;\r\n\tthis.mdf.m = false;\r\n\tthis.mdf.p = false;\r\n\tvar updated = false;\r\n\r\n\tif(this.o !== o) {\r\n\t\tthis.o = o;\r\n\t\tthis.mdf.o = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.sw !== sw) {\r\n\t\tthis.sw = sw;\r\n\t\tthis.mdf.sw = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.sc !== sc) {\r\n\t\tthis.sc = sc;\r\n\t\tthis.mdf.sc = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.fc !== fc) {\r\n\t\tthis.fc = fc;\r\n\t\tthis.mdf.fc = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.m !== m) {\r\n\t\tthis.m = m;\r\n\t\tthis.mdf.m = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(p.length && (this.p[0] !== p[0] || this.p[1] !== p[1] || this.p[4] !== p[4] || this.p[5] !== p[5] || this.p[12] !== p[12] || this.p[13] !== p[13])) {\r\n\t\tthis.p = p;\r\n\t\tthis.mdf.p = true;\r\n\t\tupdated = true;\r\n\t}\r\n\treturn updated;\r\n}\nfunction TextProperty(elem, data, dynamicProperties){\r\n\tthis._frameId = -99999;\r\n\tthis.pv = '';\r\n\tthis.v = '';\r\n\tthis.kf = false;\r\n\tthis.firstFrame = true;\r\n\tthis.mdf = true;\r\n\tthis.data = data;\r\n\tthis.elem = elem;\r\n\tthis.keysIndex = -1;\r\n\tthis.currentData = {\r\n\t\tascent: 0,\r\n        boxWidth: [0,0],\r\n        f: '',\r\n        fStyle: '',\r\n        fWeight: '',\r\n        fc: '',\r\n        j: '',\r\n        justifyOffset: '',\r\n        l: [],\r\n        lh: 0,\r\n        lineWidths: [],\r\n        ls: '',\r\n        of: '',\r\n        s: '',\r\n        sc: '',\r\n        sw: 0,\r\n        t: 0,\r\n        tr: 0,\r\n        fillColorAnim: false,\r\n        strokeColorAnim: false,\r\n        strokeWidthAnim: false,\r\n        yOffset: 0,\r\n        __complete: false\r\n\r\n\t}\r\n\tif(this.searchProperty()) {\r\n\t\tdynamicProperties.push(this);\r\n\t} else {\r\n\t\tthis.getValue(true);\r\n\t}\r\n}\r\n\r\nTextProperty.prototype.setCurrentData = function(data){\r\n\t\tvar currentData = this.currentData;\r\n        currentData.ascent = data.ascent;\r\n        currentData.boxWidth = data.boxWidth ? data.boxWidth : currentData.boxWidth;\r\n        currentData.f = data.f;\r\n        currentData.fStyle = data.fStyle;\r\n        currentData.fWeight = data.fWeight;\r\n        currentData.fc = data.fc;\r\n        currentData.j = data.j;\r\n        currentData.justifyOffset = data.justifyOffset;\r\n        currentData.l = data.l;\r\n        currentData.lh = data.lh;\r\n        currentData.lineWidths = data.lineWidths;\r\n        currentData.ls = data.ls;\r\n        currentData.of = data.of;\r\n        currentData.s = data.s;\r\n        currentData.sc = data.sc;\r\n        currentData.sw = data.sw;\r\n        currentData.t = data.t;\r\n        currentData.tr = data.tr;\r\n        currentData.fillColorAnim = data.fillColorAnim || currentData.fillColorAnim;\r\n        currentData.strokeColorAnim = data.strokeColorAnim || currentData.strokeColorAnim;\r\n        currentData.strokeWidthAnim = data.strokeWidthAnim || currentData.strokeWidthAnim;\r\n        currentData.yOffset = data.yOffset;\r\n        currentData.__complete = false;\r\n}\r\n\r\nTextProperty.prototype.searchProperty = function() {\r\n\tthis.kf = this.data.d.k.length > 1;\r\n\treturn this.kf;\r\n}\r\n\r\nTextProperty.prototype.getValue = function() {\r\n\tthis.mdf = false;\r\n\tvar frameId = this.elem.globalData.frameId;\r\n\tif((frameId === this._frameId || !this.kf) && !this.firstFrame) {\r\n\t\treturn;\r\n\t}\r\n\tvar textKeys = this.data.d.k, textDocumentData;\r\n    var i = 0, len = textKeys.length;\r\n    while(i <= len - 1) {\r\n        textDocumentData = textKeys[i].s;\r\n        if(i === len - 1 || textKeys[i+1].t > frameId){\r\n            break;\r\n        }\r\n        i += 1;\r\n    }\r\n    if(this.keysIndex !== i) {\r\n    \tif(!textDocumentData.__complete) {\r\n            this.completeTextData(textDocumentData);\r\n        }\r\n        this.setCurrentData(textDocumentData);\r\n        this.mdf = this.firstFrame ? false : true;\r\n        this.pv = this.v = this.currentData.t;\r\n        this.keysIndex = i;\r\n    }\r\n\tthis._frameId = frameId;\r\n}\r\n\r\nTextProperty.prototype.completeTextData = function(documentData) {\r\n    documentData.__complete = true;\r\n    var fontManager = this.elem.globalData.fontManager;\r\n    var data = this.data;\r\n    var letters = [];\r\n    var i, len;\r\n    var newLineFlag, index = 0, val;\r\n    var anchorGrouping = data.m.g;\r\n    var currentSize = 0, currentPos = 0, currentLine = 0, lineWidths = [];\r\n    var lineWidth = 0;\r\n    var maxLineWidth = 0;\r\n    var j, jLen;\r\n    var fontData = fontManager.getFontByName(documentData.f);\r\n    var charData, cLength = 0;\r\n    var styles = fontData.fStyle.split(' ');\r\n\r\n    var fWeight = 'normal', fStyle = 'normal';\r\n    len = styles.length;\r\n    var styleName;\r\n    for(i=0;i<len;i+=1){\r\n        styleName = styles[i].toLowerCase();\r\n        switch(styleName) {\r\n            case 'italic':\r\n            fStyle = 'italic';\r\n            break;\r\n            case 'bold':\r\n            fWeight = '700';\r\n            break;\r\n            case 'black':\r\n            fWeight = '900';\r\n            break;\r\n            case 'medium':\r\n            fWeight = '500';\r\n            break;\r\n            case 'regular':\r\n            case 'normal':\r\n            fWeight = '400';\r\n            case 'light':\r\n            case 'thin':\r\n            fWeight = '200';\r\n            break;\r\n        }\r\n    }\r\n    documentData.fWeight = fWeight;\r\n    documentData.fStyle = fStyle;\r\n    len = documentData.t.length;\r\n    var trackingOffset = documentData.tr/1000*documentData.s;\r\n    if(documentData.sz){\r\n        var boxWidth = documentData.sz[0];\r\n        var lastSpaceIndex = -1;\r\n        for(i=0;i<len;i+=1){\r\n            newLineFlag = false;\r\n            if(documentData.t.charAt(i) === ' '){\r\n                lastSpaceIndex = i;\r\n            }else if(documentData.t.charCodeAt(i) === 13){\r\n                lineWidth = 0;\r\n                newLineFlag = true;\r\n            }\r\n            if(fontManager.chars){\r\n                charData = fontManager.getCharData(documentData.t.charAt(i), fontData.fStyle, fontData.fFamily);\r\n                cLength = newLineFlag ? 0 : charData.w*documentData.s/100;\r\n            }else{\r\n                //tCanvasHelper.font = documentData.s + 'px '+ fontData.fFamily;\r\n                cLength = fontManager.measureText(documentData.t.charAt(i), documentData.f, documentData.s);\r\n            }\r\n            if(lineWidth + cLength > boxWidth && documentData.t.charAt(i) !== ' '){\r\n                if(lastSpaceIndex === -1){\r\n                    len += 1;\r\n                } else {\r\n                    i = lastSpaceIndex;\r\n                }\r\n                documentData.t = documentData.t.substr(0,i) + \"\\r\" + documentData.t.substr(i === lastSpaceIndex ? i + 1 : i);\r\n                lastSpaceIndex = -1;\r\n                lineWidth = 0;\r\n            }else {\r\n                lineWidth += cLength;\r\n                lineWidth += trackingOffset;\r\n            }\r\n        }\r\n        len = documentData.t.length;\r\n    }\r\n    lineWidth = - trackingOffset;\r\n    cLength = 0;\r\n    var uncollapsedSpaces = 0;\r\n    var currentChar;\r\n    for (i = 0;i < len ;i += 1) {\r\n        newLineFlag = false;\r\n        currentChar = documentData.t.charAt(i);\r\n        if(currentChar === ' '){\r\n            val = '\\u00A0';\r\n        }else if(currentChar.charCodeAt(0) === 13){\r\n            uncollapsedSpaces = 0;\r\n            lineWidths.push(lineWidth);\r\n            maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\r\n            lineWidth = - 2 * trackingOffset;\r\n            val = '';\r\n            newLineFlag = true;\r\n            currentLine += 1;\r\n        }else{\r\n            val = documentData.t.charAt(i);\r\n        }\r\n        if(fontManager.chars){\r\n            charData = fontManager.getCharData(currentChar, fontData.fStyle, fontManager.getFontByName(documentData.f).fFamily);\r\n            cLength = newLineFlag ? 0 : charData.w*documentData.s/100;\r\n        }else{\r\n            //var charWidth = fontManager.measureText(val, documentData.f, documentData.s);\r\n            //tCanvasHelper.font = documentData.s + 'px '+ fontManager.getFontByName(documentData.f).fFamily;\r\n            cLength = fontManager.measureText(val, documentData.f, documentData.s);\r\n        }\r\n\r\n        //\r\n        if(currentChar === ' '){\r\n            uncollapsedSpaces += cLength + trackingOffset;\r\n        } else {\r\n            lineWidth += cLength + trackingOffset + uncollapsedSpaces;\r\n            uncollapsedSpaces = 0;\r\n        }\r\n        letters.push({l:cLength,an:cLength,add:currentSize,n:newLineFlag, anIndexes:[], val: val, line: currentLine});\r\n        if(anchorGrouping == 2){\r\n            currentSize += cLength;\r\n            if(val == '' || val == '\\u00A0' || i == len - 1){\r\n                if(val == '' || val == '\\u00A0'){\r\n                    currentSize -= cLength;\r\n                }\r\n                while(currentPos<=i){\r\n                    letters[currentPos].an = currentSize;\r\n                    letters[currentPos].ind = index;\r\n                    letters[currentPos].extra = cLength;\r\n                    currentPos += 1;\r\n                }\r\n                index += 1;\r\n                currentSize = 0;\r\n            }\r\n        }else if(anchorGrouping == 3){\r\n            currentSize += cLength;\r\n            if(val == '' || i == len - 1){\r\n                if(val == ''){\r\n                    currentSize -= cLength;\r\n                }\r\n                while(currentPos<=i){\r\n                    letters[currentPos].an = currentSize;\r\n                    letters[currentPos].ind = index;\r\n                    letters[currentPos].extra = cLength;\r\n                    currentPos += 1;\r\n                }\r\n                currentSize = 0;\r\n                index += 1;\r\n            }\r\n        }else{\r\n            letters[index].ind = index;\r\n            letters[index].extra = 0;\r\n            index += 1;\r\n        }\r\n    }\r\n    documentData.l = letters;\r\n    maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\r\n    lineWidths.push(lineWidth);\r\n    if(documentData.sz){\r\n        documentData.boxWidth = documentData.sz[0];\r\n        documentData.justifyOffset = 0;\r\n    }else{\r\n        documentData.boxWidth = maxLineWidth;\r\n        switch(documentData.j){\r\n            case 1:\r\n                documentData.justifyOffset = - documentData.boxWidth;\r\n                break;\r\n            case 2:\r\n                documentData.justifyOffset = - documentData.boxWidth/2;\r\n                break;\r\n            default:\r\n                documentData.justifyOffset = 0;\r\n        }\r\n    }\r\n    documentData.lineWidths = lineWidths;\r\n\r\n    var animators = data.a, animatorData, letterData;\r\n    jLen = animators.length;\r\n    var based, ind, indexes = [];\r\n    for(j=0;j<jLen;j+=1){\r\n        animatorData = animators[j];\r\n        if(animatorData.a.sc){\r\n            documentData.strokeColorAnim = true;\r\n        }\r\n        if(animatorData.a.sw){\r\n            documentData.strokeWidthAnim = true;\r\n        }\r\n        if(animatorData.a.fc || animatorData.a.fh || animatorData.a.fs || animatorData.a.fb){\r\n            documentData.fillColorAnim = true;\r\n        }\r\n        ind = 0;\r\n        based = animatorData.s.b;\r\n        for(i=0;i<len;i+=1){\r\n            letterData = letters[i];\r\n            letterData.anIndexes[j] = ind;\r\n            if((based == 1 && letterData.val != '') || (based == 2 && letterData.val != '' && letterData.val != '\\u00A0') || (based == 3 && (letterData.n || letterData.val == '\\u00A0' || i == len - 1)) || (based == 4 && (letterData.n || i == len - 1))){\r\n                if(animatorData.s.rn === 1){\r\n                    indexes.push(ind);\r\n                }\r\n                ind += 1;\r\n            }\r\n        }\r\n        data.a[j].s.totalChars = ind;\r\n        var currentInd = -1, newInd;\r\n        if(animatorData.s.rn === 1){\r\n            for(i = 0; i < len; i += 1){\r\n                letterData = letters[i];\r\n                if(currentInd != letterData.anIndexes[j]){\r\n                    currentInd = letterData.anIndexes[j];\r\n                    newInd = indexes.splice(Math.floor(Math.random()*indexes.length),1)[0];\r\n                }\r\n                letterData.anIndexes[j] = newInd;\r\n            }\r\n        }\r\n    }\r\n    documentData.yOffset = documentData.lh || documentData.s*1.2;\r\n    documentData.ls = documentData.ls || 0;\r\n    documentData.ascent = fontData.ascent*documentData.s/100;\r\n}\r\n\r\nTextProperty.prototype.updateDocumentData = function(newData, index) {\r\n\tindex = index === undefined ? this.keysIndex : index;\r\n    var dData = this.data.d.k[index].s;\r\n    dData.__complete = false;\r\n    dData.t = newData.t;\r\n    this.keysIndex = -1;\r\n    this.firstFrame = true;\r\n    this.getValue();\r\n}\r\n\nvar pooling = (function(){\r\n\r\n\tfunction double(arr){\r\n\t\treturn arr.concat(Array.apply(null,{length:arr.length}))\r\n\t}\r\n\r\n\treturn {\r\n\t\tdouble: double\r\n\t}\r\n}());\nvar point_pool = (function(){\r\n\tvar ob = {\r\n\t\tnewPoint: newPoint,\r\n\t\trelease: release\r\n\t}\r\n\r\n\tvar _length = 0;\r\n\tvar _maxLength = 8;\r\n\tvar pool = Array.apply(null,{length:_maxLength});\r\n\r\n\tfunction newPoint(){\r\n\t\tvar point;\r\n\t\tif(_length){\r\n\t\t\t_length -= 1;\r\n\t\t\tpoint = pool[_length];\r\n\t\t} else {\r\n\t\t\tpoint = [0.1,0.1];\r\n\t\t}\r\n\t\treturn point;\r\n\t}\r\n\r\n\tfunction release(point) {\r\n\t\tif(_length === _maxLength) {\r\n\t\t\tpool = pooling.double(pool);\r\n\t\t\t_maxLength = _maxLength*2;\r\n\t\t}\r\n\t\tpool[_length] = point;\r\n\t\t_length += 1;\r\n\t}\r\n\r\n\r\n\treturn ob;\r\n}());\nvar shape_pool = (function(){\r\n\tvar ob = {\r\n\t\tclone: clone,\r\n\t\tnewShape: newShape,\r\n\t\trelease: release,\r\n\t\treleaseArray: releaseArray\r\n\t}\r\n\r\n\tvar _length = 0;\r\n\tvar _maxLength = 4;\r\n\tvar pool = Array.apply(null,{length:_maxLength});\r\n\r\n\tfunction newShape(){\r\n\t\tvar shapePath;\r\n\t\tif(_length){\r\n\t\t\t_length -= 1;\r\n\t\t\tshapePath = pool[_length];\r\n\t\t} else {\r\n\t\t\tshapePath = new ShapePath();\r\n\t\t}\r\n\t\treturn shapePath;\r\n\t}\r\n\r\n\tfunction release(shapePath) {\r\n\t\tif(_length === _maxLength) {\r\n\t\t\tpool = pooling.double(pool);\r\n\t\t\t_maxLength = _maxLength*2;\r\n\t\t}\r\n\t\tvar len = shapePath._length, i;\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tpoint_pool.release(shapePath.v[i]);\r\n\t\t\tpoint_pool.release(shapePath.i[i]);\r\n\t\t\tpoint_pool.release(shapePath.o[i]);\r\n\t\t\tshapePath.v[i] = null;\r\n\t\t\tshapePath.i[i] = null;\r\n\t\t\tshapePath.o[i] = null;\r\n\t\t}\r\n\t\tshapePath._length = 0;\r\n\t\tshapePath.c = false;\r\n\t\tpool[_length] = shapePath;\r\n\t\t_length += 1;\r\n\t}\r\n\r\n\tfunction releaseArray(shapePathsCollection, length) {\r\n\t\twhile(length--) {\r\n\t\t\trelease(shapePathsCollection[length]);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction clone(shape, transform) {\r\n\t\tvar i, len = shape._length === undefined ? shape.v.length : shape._length;\r\n\t\tvar cloned = newShape();\r\n\t\tcloned.setLength(len);\r\n\t\tcloned.c = shape.c;\r\n\r\n\t\tvar pt;\r\n\t\t\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tif(transform){\r\n\t\t\t\tpt = transform.applyToPointArray(shape.v[i][0],shape.v[i][1],0,2);\r\n\t\t\t\tcloned.setXYAt(pt[0],pt[1],'v',i);\r\n\t\t\t\tpoint_pool.release(pt);\r\n\t\t\t\tpt = transform.applyToPointArray(shape.o[i][0],shape.o[i][1],0,2);\r\n\t\t\t\tcloned.setXYAt(pt[0],pt[1],'o',i);\r\n\t\t\t\tpoint_pool.release(pt);\r\n\t\t\t\tpt = transform.applyToPointArray(shape.i[i][0],shape.i[i][1],0,2);\r\n\t\t\t\tcloned.setXYAt(pt[0],pt[1],'i',i);\r\n\t\t\t\tpoint_pool.release(pt);\r\n\t\t\t}else{\r\n\t\t\t\tcloned.setTripleAt(shape.v[i][0],shape.v[i][1],shape.o[i][0],shape.o[i][1],shape.i[i][0],shape.i[i][1], i);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn cloned\r\n\t}\r\n\r\n\r\n\treturn ob;\r\n}());\nvar shapeCollection_pool = (function(){\r\n\tvar ob = {\r\n\t\tnewShapeCollection: newShapeCollection,\r\n\t\trelease: release,\r\n\t\tclone: clone\r\n\t}\r\n\r\n\tvar _length = 0;\r\n\tvar _maxLength = 4;\r\n\tvar pool = Array.apply(null,{length:_maxLength});\r\n\r\n\tvar cont = 0;\r\n\r\n\tfunction newShapeCollection(){\r\n\t\tvar shapeCollection;\r\n\t\tif(_length){\r\n\t\t\t_length -= 1;\r\n\t\t\tshapeCollection = pool[_length];\r\n\t\t} else {\r\n\t\t\tshapeCollection = new ShapeCollection();\r\n\t\t}\r\n\t\treturn shapeCollection;\r\n\t}\r\n\r\n\tfunction release(shapeCollection) {\r\n\t\tvar i, len = shapeCollection._length;\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tshape_pool.release(shapeCollection.shapes[i]);\r\n\t\t}\r\n\t\tshapeCollection._length = 0;\r\n\r\n\t\tif(_length === _maxLength) {\r\n\t\t\tpool = pooling.double(pool);\r\n\t\t\t_maxLength = _maxLength*2;\r\n\t\t}\r\n\t\tpool[_length] = shapeCollection;\r\n\t\t_length += 1;\r\n\t}\r\n\r\n\tfunction clone(shapeCollection, originCollection) {\r\n\t\trelease(shapeCollection);\r\n\t\tif(_length === _maxLength) {\r\n\t\t\tpool = pooling.double(pool);\r\n\t\t\t_maxLength = _maxLength*2;\r\n\t\t}\r\n\t\tpool[_length] = shapeCollection;\r\n\t\t_length += 1;\r\n\t}\r\n\r\n\r\n\treturn ob;\r\n}());\nfunction BaseRenderer(){}\r\nBaseRenderer.prototype.checkLayers = function(num){\r\n    var i, len = this.layers.length, data;\r\n    this.completeLayers = true;\r\n    for (i = len - 1; i >= 0; i--) {\r\n        if (!this.elements[i]) {\r\n            data = this.layers[i];\r\n            if(data.ip - data.st <= (num - this.layers[i].st) && data.op - data.st > (num - this.layers[i].st))\r\n            {\r\n                this.buildItem(i);\r\n            }\r\n        }\r\n        this.completeLayers = this.elements[i] ? this.completeLayers:false;\r\n    }\r\n    this.checkPendingElements();\r\n};\r\n\r\nBaseRenderer.prototype.createItem = function(layer){\r\n    switch(layer.ty){\r\n        case 2:\r\n            return this.createImage(layer);\r\n        case 0:\r\n            return this.createComp(layer);\r\n        case 1:\r\n            return this.createSolid(layer);\r\n        case 4:\r\n            return this.createShape(layer);\r\n        case 5:\r\n            return this.createText(layer);\r\n        case 13:\r\n            return this.createCamera(layer);\r\n        case 99:\r\n            return null;\r\n    }\r\n    return this.createBase(layer);\r\n};\r\n\r\nBaseRenderer.prototype.createCamera = function(){\r\n    throw new Error('You\\'re using a 3d camera. Try the html renderer.');\r\n}\r\n\r\nBaseRenderer.prototype.buildAllItems = function(){\r\n    var i, len = this.layers.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.buildItem(i);\r\n    }\r\n    this.checkPendingElements();\r\n};\r\n\r\nBaseRenderer.prototype.includeLayers = function(newLayers){\r\n    this.completeLayers = false;\r\n    var i, len = newLayers.length;\r\n    var j, jLen = this.layers.length;\r\n    for(i=0;i<len;i+=1){\r\n        j = 0;\r\n        while(j<jLen){\r\n            if(this.layers[j].id == newLayers[i].id){\r\n                this.layers[j] = newLayers[i];\r\n                break;\r\n            }\r\n            j += 1;\r\n        }\r\n    }\r\n};\r\n\r\nBaseRenderer.prototype.setProjectInterface = function(pInterface){\r\n    this.globalData.projectInterface = pInterface;\r\n};\r\n\r\nBaseRenderer.prototype.initItems = function(){\r\n    if(!this.globalData.progressiveLoad){\r\n        this.buildAllItems();\r\n    }\r\n};\r\nBaseRenderer.prototype.buildElementParenting = function(element, parentName, hierarchy){\r\n    hierarchy = hierarchy || [];\r\n    var elements = this.elements;\r\n    var layers = this.layers;\r\n    var i=0, len = layers.length;\r\n    while(i<len){\r\n        if(layers[i].ind == parentName){\r\n            if(!elements[i] || elements[i] === true){\r\n                this.buildItem(i);\r\n                this.addPendingElement(element);\r\n            } else if(layers[i].parent !== undefined){\r\n                hierarchy.push(elements[i]);\r\n                elements[i]._isParent = true;\r\n                this.buildElementParenting(element,layers[i].parent, hierarchy);\r\n            } else {\r\n                hierarchy.push(elements[i]);\r\n                elements[i]._isParent = true;\r\n                element.setHierarchy(hierarchy);\r\n            }\r\n\r\n\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nBaseRenderer.prototype.addPendingElement = function(element){\r\n    this.pendingElements.push(element);\r\n};\nfunction SVGRenderer(animationItem, config){\r\n    this.animationItem = animationItem;\r\n    this.layers = null;\r\n    this.renderedFrame = -1;\r\n    this.globalData = {\r\n        frameNum: -1\r\n    };\r\n    this.renderConfig = {\r\n        preserveAspectRatio: (config && config.preserveAspectRatio) || 'xMidYMid meet',\r\n        progressiveLoad: (config && config.progressiveLoad) || false,\r\n        hideOnTransparent: (config && config.hideOnTransparent === false) ? false : true,\r\n        viewBoxOnly: (config && config.viewBoxOnly) || false,\r\n        className: (config && config.className) || ''\r\n    };\r\n    this.globalData.renderConfig = this.renderConfig;\r\n    this.elements = [];\r\n    this.pendingElements = [];\r\n    this.destroyed = false;\r\n\r\n}\r\n\r\nextendPrototype(BaseRenderer,SVGRenderer);\r\n\r\nSVGRenderer.prototype.createBase = function (data) {\r\n    return new SVGBaseElement(data, this.layerElement,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createShape = function (data) {\r\n    return new IShapeElement(data, this.layerElement,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createText = function (data) {\r\n    return new SVGTextElement(data, this.layerElement,this.globalData,this);\r\n\r\n};\r\n\r\nSVGRenderer.prototype.createImage = function (data) {\r\n    return new IImageElement(data, this.layerElement,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createComp = function (data) {\r\n    return new ICompElement(data, this.layerElement,this.globalData,this);\r\n\r\n};\r\n\r\nSVGRenderer.prototype.createSolid = function (data) {\r\n    return new ISolidElement(data, this.layerElement,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.configAnimation = function(animData){\r\n    this.layerElement = document.createElementNS(svgNS,'svg');\r\n    this.layerElement.setAttribute('xmlns','http://www.w3.org/2000/svg');\r\n    this.layerElement.setAttribute('viewBox','0 0 '+animData.w+' '+animData.h);\r\n    if(!this.renderConfig.viewBoxOnly) {\r\n        this.layerElement.setAttribute('width',animData.w);\r\n        this.layerElement.setAttribute('height',animData.h);\r\n        this.layerElement.style.width = '100%';\r\n        this.layerElement.style.height = '100%';\r\n    }\r\n    if(this.renderConfig.className) {\r\n        this.layerElement.setAttribute('class', this.renderConfig.className);\r\n    }\r\n    this.layerElement.setAttribute('preserveAspectRatio',this.renderConfig.preserveAspectRatio);\r\n    //this.layerElement.style.transform = 'translate3d(0,0,0)';\r\n    //this.layerElement.style.transformOrigin = this.layerElement.style.mozTransformOrigin = this.layerElement.style.webkitTransformOrigin = this.layerElement.style['-webkit-transform'] = \"0px 0px 0px\";\r\n    this.animationItem.wrapper.appendChild(this.layerElement);\r\n    //Mask animation\r\n    var defs = document.createElementNS(svgNS, 'defs');\r\n    this.globalData.defs = defs;\r\n    this.layerElement.appendChild(defs);\r\n    this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem);\r\n    this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem);\r\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\r\n    this.globalData.frameId = 0;\r\n    this.globalData.nm = animData.nm;\r\n    this.globalData.compSize = {\r\n        w: animData.w,\r\n        h: animData.h\r\n    };\r\n    this.data = animData;\r\n    this.globalData.frameRate = animData.fr;\r\n    var maskElement = document.createElementNS(svgNS, 'clipPath');\r\n    var rect = document.createElementNS(svgNS,'rect');\r\n    rect.setAttribute('width',animData.w);\r\n    rect.setAttribute('height',animData.h);\r\n    rect.setAttribute('x',0);\r\n    rect.setAttribute('y',0);\r\n    var maskId = 'animationMask_'+randomString(10);\r\n    maskElement.setAttribute('id', maskId);\r\n    maskElement.appendChild(rect);\r\n    var maskedElement = document.createElementNS(svgNS,'g');\r\n    maskedElement.setAttribute(\"clip-path\", \"url(\" + locationHref + \"#\"+maskId+\")\");\r\n    this.layerElement.appendChild(maskedElement);\r\n    defs.appendChild(maskElement);\r\n    this.layerElement = maskedElement;\r\n    this.layers = animData.layers;\r\n    this.globalData.fontManager = new FontManager();\r\n    this.globalData.fontManager.addChars(animData.chars);\r\n    this.globalData.fontManager.addFonts(animData.fonts,defs);\r\n    this.elements = Array.apply(null,{length:animData.layers.length});\r\n};\r\n\r\n\r\nSVGRenderer.prototype.destroy = function () {\r\n    this.animationItem.wrapper.innerHTML = '';\r\n    this.layerElement = null;\r\n    this.globalData.defs = null;\r\n    var i, len = this.layers ? this.layers.length : 0;\r\n    for (i = 0; i < len; i++) {\r\n        if(this.elements[i]){\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n    this.elements.length = 0;\r\n    this.destroyed = true;\r\n    this.animationItem = null;\r\n};\r\n\r\nSVGRenderer.prototype.updateContainerSize = function () {\r\n};\r\n\r\nSVGRenderer.prototype.buildItem  = function(pos){\r\n    var elements = this.elements;\r\n    if(elements[pos] || this.layers[pos].ty == 99){\r\n        return;\r\n    }\r\n    elements[pos] = true;\r\n    var element = this.createItem(this.layers[pos]);\r\n\r\n    elements[pos] = element;\r\n    if(expressionsPlugin){\r\n        if(this.layers[pos].ty === 0){\r\n            this.globalData.projectInterface.registerComposition(element);\r\n        }\r\n        element.initExpressions();\r\n    }\r\n    this.appendElementInPos(element,pos);\r\n    if(this.layers[pos].tt){\r\n        if(!this.elements[pos - 1] || this.elements[pos - 1] === true){\r\n            this.buildItem(pos - 1);\r\n            this.addPendingElement(element);\r\n        } else {\r\n            element.setMatte(elements[pos - 1].layerId);\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.checkPendingElements  = function(){\r\n    while(this.pendingElements.length){\r\n        var element = this.pendingElements.pop();\r\n        element.checkParenting();\r\n        if(element.data.tt){\r\n            var i = 0, len = this.elements.length;\r\n            while(i<len){\r\n                if(this.elements[i] === element){\r\n                    element.setMatte(this.elements[i - 1].layerId);\r\n                    break;\r\n                }\r\n                i += 1;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.renderFrame = function(num){\r\n    if(this.renderedFrame == num || this.destroyed){\r\n        return;\r\n    }\r\n    if(num === null){\r\n        num = this.renderedFrame;\r\n    }else{\r\n        this.renderedFrame = num;\r\n    }\r\n    //clearPoints();\r\n    /*console.log('-------');\r\n    console.log('FRAME ',num);*/\r\n    this.globalData.frameNum = num;\r\n    this.globalData.frameId += 1;\r\n    this.globalData.projectInterface.currentFrame = num;\r\n    var i, len = this.layers.length;\r\n    if(!this.completeLayers){\r\n        this.checkLayers(num);\r\n    }\r\n    for (i = len - 1; i >= 0; i--) {\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].prepareFrame(num - this.layers[i].st);\r\n        }\r\n    }\r\n    for (i = len - 1; i >= 0; i--) {\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].renderFrame();\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.appendElementInPos = function(element, pos){\r\n    var newElement = element.getBaseElement();\r\n    if(!newElement){\r\n        return;\r\n    }\r\n    var i = 0;\r\n    var nextElement;\r\n    while(i<pos){\r\n        if(this.elements[i] && this.elements[i]!== true && this.elements[i].getBaseElement()){\r\n            nextElement = this.elements[i].getBaseElement();\r\n        }\r\n        i += 1;\r\n    }\r\n    if(nextElement){\r\n        this.layerElement.insertBefore(newElement, nextElement);\r\n    } else {\r\n        this.layerElement.appendChild(newElement);\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.hide = function(){\r\n    this.layerElement.style.display = 'none';\r\n};\r\n\r\nSVGRenderer.prototype.show = function(){\r\n    this.layerElement.style.display = 'block';\r\n};\r\n\r\nSVGRenderer.prototype.searchExtraCompositions = function(assets){\r\n    var i, len = assets.length;\r\n    var floatingContainer = document.createElementNS(svgNS,'g');\r\n    for(i=0;i<len;i+=1){\r\n        if(assets[i].xt){\r\n            var comp = this.createComp(assets[i],floatingContainer,this.globalData.comp,null);\r\n            comp.initExpressions();\r\n            //comp.compInterface = CompExpressionInterface(comp);\r\n            //Expressions.addLayersInterface(comp.elements, this.globalData.projectInterface);\r\n            this.globalData.projectInterface.registerComposition(comp);\r\n        }\r\n    }\r\n};\r\n\nfunction MaskElement(data,element,globalData) {\r\n    this.dynamicProperties = [];\r\n    this.data = data;\r\n    this.element = element;\r\n    this.globalData = globalData;\r\n    this.storedData = [];\r\n    this.masksProperties = this.data.masksProperties;\r\n    this.viewData = Array.apply(null,{length:this.masksProperties.length});\r\n    this.maskElement = null;\r\n    this.firstFrame = true;\r\n    var defs = this.globalData.defs;\r\n    var i, len = this.masksProperties.length;\r\n\r\n\r\n    var path, properties = this.masksProperties;\r\n    var count = 0;\r\n    var currentMasks = [];\r\n    var j, jLen;\r\n    var layerId = randomString(10);\r\n    var rect, expansor, feMorph,x;\r\n    var maskType = 'clipPath', maskRef = 'clip-path';\r\n    for (i = 0; i < len; i++) {\r\n\r\n        if((properties[i].mode !== 'a' && properties[i].mode !== 'n')|| properties[i].inv || properties[i].o.k !== 100){\r\n            maskType = 'mask';\r\n            maskRef = 'mask';\r\n        }\r\n\r\n        if((properties[i].mode == 's' || properties[i].mode == 'i') && count == 0){\r\n            rect = document.createElementNS(svgNS, 'rect');\r\n            rect.setAttribute('fill', '#ffffff');\r\n            rect.setAttribute('width', this.element.comp.data.w);\r\n            rect.setAttribute('height', this.element.comp.data.h);\r\n            currentMasks.push(rect);\r\n        } else {\r\n            rect = null;\r\n        }\r\n\r\n        path = document.createElementNS(svgNS, 'path');\r\n        if(properties[i].mode == 'n') {\r\n            this.viewData[i] = {\r\n                op: PropertyFactory.getProp(this.element,properties[i].o,0,0.01,this.dynamicProperties),\r\n                prop: ShapePropertyFactory.getShapeProp(this.element,properties[i],3,this.dynamicProperties,null),\r\n                elem: path\r\n            };\r\n            defs.appendChild(path);\r\n            continue;\r\n        }\r\n        count += 1;\r\n\r\n        if(properties[i].mode == 's'){\r\n            path.setAttribute('fill', '#000000');\r\n        }else{\r\n            path.setAttribute('fill', '#ffffff');\r\n        }\r\n        path.setAttribute('clip-rule','nonzero');\r\n\r\n        if(properties[i].x.k !== 0){\r\n            maskType = 'mask';\r\n            maskRef = 'mask';\r\n            x = PropertyFactory.getProp(this.element,properties[i].x,0,null,this.dynamicProperties);\r\n            var filterID = 'fi_'+randomString(10);\r\n            expansor = document.createElementNS(svgNS,'filter');\r\n            expansor.setAttribute('id',filterID);\r\n            feMorph = document.createElementNS(svgNS,'feMorphology');\r\n            feMorph.setAttribute('operator','dilate');\r\n            feMorph.setAttribute('in','SourceGraphic');\r\n            feMorph.setAttribute('radius','0');\r\n            expansor.appendChild(feMorph);\r\n            defs.appendChild(expansor);\r\n            if(properties[i].mode == 's'){\r\n                path.setAttribute('stroke', '#000000');\r\n            }else{\r\n                path.setAttribute('stroke', '#ffffff');\r\n            }\r\n        }else{\r\n            feMorph = null;\r\n            x = null;\r\n        }\r\n\r\n\r\n        this.storedData[i] = {\r\n             elem: path,\r\n             x: x,\r\n             expan: feMorph,\r\n            lastPath: '',\r\n            lastOperator:'',\r\n            filterId:filterID,\r\n            lastRadius:0\r\n        };\r\n        if(properties[i].mode == 'i'){\r\n            jLen = currentMasks.length;\r\n            var g = document.createElementNS(svgNS,'g');\r\n            for(j=0;j<jLen;j+=1){\r\n                g.appendChild(currentMasks[j]);\r\n            }\r\n            var mask = document.createElementNS(svgNS,'mask');\r\n            mask.setAttribute('mask-type','alpha');\r\n            mask.setAttribute('id',layerId+'_'+count);\r\n            mask.appendChild(path);\r\n            defs.appendChild(mask);\r\n            g.setAttribute('mask','url(' + locationHref + '#'+layerId+'_'+count+')');\r\n\r\n            currentMasks.length = 0;\r\n            currentMasks.push(g);\r\n        }else{\r\n            currentMasks.push(path);\r\n        }\r\n        if(properties[i].inv && !this.solidPath){\r\n            this.solidPath = this.createLayerSolidPath();\r\n        }\r\n        this.viewData[i] = {\r\n            elem: path,\r\n            lastPath: '',\r\n            op: PropertyFactory.getProp(this.element,properties[i].o,0,0.01,this.dynamicProperties),\r\n            prop:ShapePropertyFactory.getShapeProp(this.element,properties[i],3,this.dynamicProperties,null)\r\n        };\r\n        if(rect){\r\n            this.viewData[i].invRect = rect;\r\n        }\r\n        if(!this.viewData[i].prop.k){\r\n            this.drawPath(properties[i],this.viewData[i].prop.v,this.viewData[i]);\r\n        }\r\n    }\r\n\r\n    this.maskElement = document.createElementNS(svgNS, maskType);\r\n\r\n    len = currentMasks.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.maskElement.appendChild(currentMasks[i]);\r\n    }\r\n\r\n    this.maskElement.setAttribute('id', layerId);\r\n    if(count > 0){\r\n        this.element.maskedElement.setAttribute(maskRef, \"url(\" + locationHref + \"#\" + layerId + \")\");\r\n    }\r\n\r\n    defs.appendChild(this.maskElement);\r\n};\r\n\r\nMaskElement.prototype.getMaskProperty = function(pos){\r\n    return this.viewData[pos].prop;\r\n};\r\n\r\nMaskElement.prototype.prepareFrame = function(){\r\n    var i, len = this.dynamicProperties.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.dynamicProperties[i].getValue();\r\n\r\n    }\r\n};\r\n\r\nMaskElement.prototype.renderFrame = function (finalMat) {\r\n    var i, len = this.masksProperties.length;\r\n    for (i = 0; i < len; i++) {\r\n        if(this.viewData[i].prop.mdf || this.firstFrame){\r\n            this.drawPath(this.masksProperties[i],this.viewData[i].prop.v,this.viewData[i]);\r\n        }\r\n        if(this.viewData[i].op.mdf || this.firstFrame){\r\n            this.viewData[i].elem.setAttribute('fill-opacity',this.viewData[i].op.v);\r\n        }\r\n        if(this.masksProperties[i].mode !== 'n'){\r\n            if(this.viewData[i].invRect && (this.element.finalTransform.mProp.mdf || this.firstFrame)){\r\n                this.viewData[i].invRect.setAttribute('x', -finalMat.props[12]);\r\n                this.viewData[i].invRect.setAttribute('y', -finalMat.props[13]);\r\n            }\r\n            if(this.storedData[i].x && (this.storedData[i].x.mdf || this.firstFrame)){\r\n                var feMorph = this.storedData[i].expan;\r\n                if(this.storedData[i].x.v < 0){\r\n                    if(this.storedData[i].lastOperator !== 'erode'){\r\n                        this.storedData[i].lastOperator = 'erode';\r\n                        this.storedData[i].elem.setAttribute('filter','url(' + locationHref + '#'+this.storedData[i].filterId+')');\r\n                    }\r\n                    feMorph.setAttribute('radius',-this.storedData[i].x.v);\r\n                }else{\r\n                    if(this.storedData[i].lastOperator !== 'dilate'){\r\n                        this.storedData[i].lastOperator = 'dilate';\r\n                        this.storedData[i].elem.setAttribute('filter',null);\r\n                    }\r\n                    this.storedData[i].elem.setAttribute('stroke-width', this.storedData[i].x.v*2);\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n    this.firstFrame = false;\r\n};\r\n\r\nMaskElement.prototype.getMaskelement = function () {\r\n    return this.maskElement;\r\n};\r\n\r\nMaskElement.prototype.createLayerSolidPath = function(){\r\n    var path = 'M0,0 ';\r\n    path += ' h' + this.globalData.compSize.w ;\r\n    path += ' v' + this.globalData.compSize.h ;\r\n    path += ' h-' + this.globalData.compSize.w ;\r\n    path += ' v-' + this.globalData.compSize.h + ' ';\r\n    return path;\r\n};\r\n\r\nMaskElement.prototype.drawPath = function(pathData,pathNodes,viewData){\r\n    var pathString = \" M\"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    var i, len;\r\n    len = pathNodes._length;\r\n    for(i=1;i<len;i+=1){\r\n        //pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[i][0]+','+pathNodes.i[i][1] + \" \"+pathNodes.v[i][0]+','+pathNodes.v[i][1];\r\n        pathString += \" C\"+bm_rnd(pathNodes.o[i-1][0])+','+bm_rnd(pathNodes.o[i-1][1]) + \" \"+bm_rnd(pathNodes.i[i][0])+','+bm_rnd(pathNodes.i[i][1]) + \" \"+bm_rnd(pathNodes.v[i][0])+','+bm_rnd(pathNodes.v[i][1]);\r\n    }\r\n        //pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[0][0]+','+pathNodes.i[0][1] + \" \"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    if(pathNodes.c && len > 1){\r\n        pathString += \" C\"+bm_rnd(pathNodes.o[i-1][0])+','+bm_rnd(pathNodes.o[i-1][1]) + \" \"+bm_rnd(pathNodes.i[0][0])+','+bm_rnd(pathNodes.i[0][1]) + \" \"+bm_rnd(pathNodes.v[0][0])+','+bm_rnd(pathNodes.v[0][1]);\r\n    }\r\n    //pathNodes.__renderedString = pathString;\r\n\r\n\r\n    if(viewData.lastPath !== pathString){\r\n        if(viewData.elem){\r\n            if(!pathNodes.c){\r\n                viewData.elem.setAttribute('d','');\r\n            }else if(pathData.inv){\r\n                viewData.elem.setAttribute('d',this.solidPath + pathString);\r\n            }else{\r\n                viewData.elem.setAttribute('d',pathString);\r\n            }\r\n        }\r\n        viewData.lastPath = pathString;\r\n    }\r\n};\r\n\r\nMaskElement.prototype.destroy = function(){\r\n    this.element = null;\r\n    this.globalData = null;\r\n    this.maskElement = null;\r\n    this.data = null;\r\n    this.masksProperties = null;\r\n};\nfunction BaseElement(){\r\n};\r\nBaseElement.prototype.checkMasks = function(){\r\n    if(!this.data.hasMask){\r\n        return false;\r\n    }\r\n    var i = 0, len = this.data.masksProperties.length;\r\n    while(i<len) {\r\n        if((this.data.masksProperties[i].mode !== 'n' && this.data.masksProperties[i].cl !== false)) {\r\n            return true;\r\n        }\r\n        i += 1;\r\n    }\r\n    return false;\r\n}\r\n\r\nBaseElement.prototype.checkParenting = function(){\r\n    if(this.data.parent !== undefined){\r\n        this.comp.buildElementParenting(this, this.data.parent);\r\n    }\r\n}\r\n\r\nBaseElement.prototype.prepareFrame = function(num){\r\n    if(this.data.ip - this.data.st <= num && this.data.op - this.data.st > num)\r\n    {\r\n        if(this.isVisible !== true){\r\n            this.elemMdf = true;\r\n            this.globalData.mdf = true;\r\n            this.isVisible = true;\r\n            this.firstFrame = true;\r\n            if(this.data.hasMask){\r\n                this.maskManager.firstFrame = true;\r\n            }\r\n        }\r\n    }else{\r\n        if(this.isVisible !== false){\r\n            this.elemMdf = true;\r\n            this.globalData.mdf = true;\r\n            this.isVisible = false;\r\n        }\r\n    }\r\n    var i, len = this.dynamicProperties.length;\r\n    for(i=0;i<len;i+=1){\r\n        if(this.isVisible || (this._isParent && this.dynamicProperties[i].type === 'transform')){\r\n            this.dynamicProperties[i].getValue();\r\n            if(this.dynamicProperties[i].mdf){\r\n                this.elemMdf = true;\r\n                this.globalData.mdf = true;\r\n            }\r\n        }\r\n    }\r\n    if(this.data.hasMask && this.isVisible){\r\n        this.maskManager.prepareFrame(num*this.data.sr);\r\n    }\r\n    \r\n    /* TODO check this\r\n    if(this.data.sy){\r\n        if(this.data.sy[0].renderedData[num]){\r\n            if(this.data.sy[0].renderedData[num].c){\r\n                this.feFlood.setAttribute('flood-color','rgb('+Math.round(this.data.sy[0].renderedData[num].c[0])+','+Math.round(this.data.sy[0].renderedData[num].c[1])+','+Math.round(this.data.sy[0].renderedData[num].c[2])+')');\r\n            }\r\n            if(this.data.sy[0].renderedData[num].s){\r\n                this.feMorph.setAttribute('radius',this.data.sy[0].renderedData[num].s);\r\n            }\r\n        }\r\n    }\r\n    */\r\n\r\n\r\n    this.currentFrameNum = num*this.data.sr;\r\n    return this.isVisible;\r\n};\r\n\r\nBaseElement.prototype.globalToLocal = function(pt){\r\n    var transforms = [];\r\n    transforms.push(this.finalTransform);\r\n    var flag = true;\r\n    var comp = this.comp;\r\n    while(flag){\r\n        if(comp.finalTransform){\r\n            if(comp.data.hasMask){\r\n                transforms.splice(0,0,comp.finalTransform);\r\n            }\r\n            comp = comp.comp;\r\n        } else {\r\n            flag = false;\r\n        }\r\n    }\r\n    var i, len = transforms.length,ptNew;\r\n    for(i=0;i<len;i+=1){\r\n        ptNew = transforms[i].mat.applyToPointArray(0,0,0);\r\n        //ptNew = transforms[i].mat.applyToPointArray(pt[0],pt[1],pt[2]);\r\n        pt = [pt[0] - ptNew[0],pt[1] - ptNew[1],0];\r\n    }\r\n    return pt;\r\n};\r\n\r\nBaseElement.prototype.initExpressions = function(){\r\n    this.layerInterface = LayerExpressionInterface(this);\r\n    //layers[i].layerInterface = LayerExpressionInterface(layers[i]);\r\n    //layers[i].layerInterface = LayerExpressionInterface(layers[i]);\r\n    if(this.data.hasMask){\r\n        this.layerInterface.registerMaskInterface(this.maskManager);\r\n    }\r\n    var effectsInterface = EffectsExpressionInterface.createEffectsInterface(this,this.layerInterface);\r\n    this.layerInterface.registerEffectsInterface(effectsInterface);\r\n\r\n    if(this.data.ty === 0 || this.data.xt){\r\n        this.compInterface = CompExpressionInterface(this);\r\n    } else if(this.data.ty === 4){\r\n        this.layerInterface.shapeInterface = ShapeExpressionInterface.createShapeInterface(this.shapesData,this.itemsData,this.layerInterface);\r\n    } else if(this.data.ty === 5){\r\n        this.layerInterface.textInterface = TextExpressionInterface(this);\r\n    }\r\n}\r\n\r\nBaseElement.prototype.setBlendMode = function(){\r\n    var blendModeValue = '';\r\n    switch(this.data.bm){\r\n        case 1:\r\n            blendModeValue = 'multiply';\r\n            break;\r\n        case 2:\r\n            blendModeValue = 'screen';\r\n            break;\r\n        case 3:\r\n            blendModeValue = 'overlay';\r\n            break;\r\n        case 4:\r\n            blendModeValue = 'darken';\r\n            break;\r\n        case 5:\r\n            blendModeValue = 'lighten';\r\n            break;\r\n        case 6:\r\n            blendModeValue = 'color-dodge';\r\n            break;\r\n        case 7:\r\n            blendModeValue = 'color-burn';\r\n            break;\r\n        case 8:\r\n            blendModeValue = 'hard-light';\r\n            break;\r\n        case 9:\r\n            blendModeValue = 'soft-light';\r\n            break;\r\n        case 10:\r\n            blendModeValue = 'difference';\r\n            break;\r\n        case 11:\r\n            blendModeValue = 'exclusion';\r\n            break;\r\n        case 12:\r\n            blendModeValue = 'hue';\r\n            break;\r\n        case 13:\r\n            blendModeValue = 'saturation';\r\n            break;\r\n        case 14:\r\n            blendModeValue = 'color';\r\n            break;\r\n        case 15:\r\n            blendModeValue = 'luminosity';\r\n            break;\r\n    }\r\n    var elem = this.baseElement || this.layerElement;\r\n\r\n    elem.style['mix-blend-mode'] = blendModeValue;\r\n}\r\n\r\nBaseElement.prototype.init = function(){\r\n    if(!this.data.sr){\r\n        this.data.sr = 1;\r\n    }\r\n    this.dynamicProperties = this.dynamicProperties || [];\r\n    if(this.data.ef){\r\n        this.effects = new EffectsManager(this.data,this,this.dynamicProperties);\r\n        //this.effect = this.effectsManager.bind(this.effectsManager);\r\n    }\r\n    //this.elemInterface = buildLayerExpressionInterface(this);\r\n    this.hidden = false;\r\n    this.firstFrame = true;\r\n    this.isVisible = false;\r\n    this._isParent = false;\r\n    this.currentFrameNum = -99999;\r\n    this.lastNum = -99999;\r\n    if(this.data.ks){\r\n        this.finalTransform = {\r\n            mProp: PropertyFactory.getProp(this,this.data.ks,2,null,this.dynamicProperties),\r\n            matMdf: false,\r\n            opMdf: false,\r\n            mat: new Matrix(),\r\n            opacity: 1\r\n        };\r\n        if(this.data.ao){\r\n            this.finalTransform.mProp.autoOriented = true;\r\n        }\r\n        this.finalTransform.op = this.finalTransform.mProp.o;\r\n        this.transform = this.finalTransform.mProp;\r\n        if(this.data.ty !== 11){\r\n            this.createElements();\r\n        }\r\n        if(this.data.hasMask){\r\n            this.addMasks(this.data);\r\n        }\r\n    }\r\n    this.elemMdf = false;\r\n};\r\nBaseElement.prototype.getType = function(){\r\n    return this.type;\r\n};\r\n\r\nBaseElement.prototype.resetHierarchy = function(){\r\n    if(!this.hierarchy){\r\n        this.hierarchy = [];\r\n    }else{\r\n        this.hierarchy.length = 0;\r\n    }\r\n};\r\n\r\nBaseElement.prototype.getHierarchy = function(){\r\n    if(!this.hierarchy){\r\n        this.hierarchy = [];\r\n    }\r\n    return this.hierarchy;\r\n};\r\n\r\nBaseElement.prototype.setHierarchy = function(hierarchy){\r\n    this.hierarchy = hierarchy;\r\n};\r\n\r\nBaseElement.prototype.getLayerSize = function(){\r\n    if(this.data.ty === 5){\r\n        return {w:this.data.textData.width,h:this.data.textData.height};\r\n    }else{\r\n        return {w:this.data.width,h:this.data.height};\r\n    }\r\n};\r\n\r\nBaseElement.prototype.hide = function(){\r\n\r\n};\r\n\r\nBaseElement.prototype.sourceRectAtTime = function(){\r\n    return {\r\n        top:0,\r\n        left:0,\r\n        width:100,\r\n        height:100\r\n    }\r\n};\r\n\r\nBaseElement.prototype.mHelper = new Matrix();\nfunction SVGBaseElement(data,parentContainer,globalData,comp, placeholder){\r\n    this.globalData = globalData;\r\n    this.comp = comp;\r\n    this.data = data;\r\n    this.matteElement = null;\r\n    this.transformedElement = null;\r\n    this.isTransparent = false;\r\n    this.parentContainer = parentContainer;\r\n    this.layerId = placeholder ? placeholder.layerId : 'ly_'+randomString(10);\r\n    this.placeholder = placeholder;\r\n    this._sizeChanged = false;\r\n    this.init();\r\n};\r\n\r\ncreateElement(BaseElement, SVGBaseElement);\r\n\r\nSVGBaseElement.prototype.createElements = function(){\r\n    this.layerElement = document.createElementNS(svgNS,'g');\r\n    this.transformedElement = this.layerElement;\r\n    if(this.data.hasMask){\r\n        this.maskedElement = this.layerElement;\r\n    }\r\n    var layerElementParent = null;\r\n    if(this.data.td){\r\n        if(this.data.td == 3 || this.data.td == 1){\r\n            var masker = document.createElementNS(svgNS,'mask');\r\n            masker.setAttribute('id',this.layerId);\r\n            masker.setAttribute('mask-type',this.data.td == 3 ? 'luminance':'alpha');\r\n            masker.appendChild(this.layerElement);\r\n            layerElementParent = masker;\r\n            this.globalData.defs.appendChild(masker);\r\n            ////// This is only for IE and Edge when mask if of type alpha\r\n            if(!featureSupport.maskType && this.data.td == 1){\r\n                masker.setAttribute('mask-type','luminance');\r\n                var filId = randomString(10);\r\n                var fil = filtersFactory.createFilter(filId);\r\n                this.globalData.defs.appendChild(fil);\r\n                fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\r\n                var gg = document.createElementNS(svgNS,'g');\r\n                gg.appendChild(this.layerElement);\r\n                layerElementParent = gg;\r\n                masker.appendChild(gg);\r\n                gg.setAttribute('filter','url(' + locationHref + '#'+filId+')');\r\n            }\r\n        }else if(this.data.td == 2){\r\n            var maskGroup = document.createElementNS(svgNS,'mask');\r\n            maskGroup.setAttribute('id',this.layerId);\r\n            maskGroup.setAttribute('mask-type','alpha');\r\n            var maskGrouper = document.createElementNS(svgNS,'g');\r\n            maskGroup.appendChild(maskGrouper);\r\n            var filId = randomString(10);\r\n            var fil = filtersFactory.createFilter(filId);\r\n            ////\r\n\r\n            var feColorMatrix = document.createElementNS(svgNS,'feColorMatrix');\r\n            feColorMatrix.setAttribute('type','matrix');\r\n            feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n            feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 -1 1');\r\n            fil.appendChild(feColorMatrix);\r\n\r\n            ////\r\n            /*var feCTr = document.createElementNS(svgNS,'feComponentTransfer');\r\n            feCTr.setAttribute('in','SourceGraphic');\r\n            fil.appendChild(feCTr);\r\n            var feFunc = document.createElementNS(svgNS,'feFuncA');\r\n            feFunc.setAttribute('type','table');\r\n            feFunc.setAttribute('tableValues','1.0 0.0');\r\n            feCTr.appendChild(feFunc);*/\r\n            this.globalData.defs.appendChild(fil);\r\n            var alphaRect = document.createElementNS(svgNS,'rect');\r\n            alphaRect.setAttribute('width',this.comp.data.w);\r\n            alphaRect.setAttribute('height',this.comp.data.h);\r\n            alphaRect.setAttribute('x','0');\r\n            alphaRect.setAttribute('y','0');\r\n            alphaRect.setAttribute('fill','#ffffff');\r\n            alphaRect.setAttribute('opacity','0');\r\n            maskGrouper.setAttribute('filter','url(' + locationHref + '#'+filId+')');\r\n            maskGrouper.appendChild(alphaRect);\r\n            maskGrouper.appendChild(this.layerElement);\r\n            layerElementParent = maskGrouper;\r\n            if(!featureSupport.maskType){\r\n                maskGroup.setAttribute('mask-type','luminance');\r\n                fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\r\n                var gg = document.createElementNS(svgNS,'g');\r\n                maskGrouper.appendChild(alphaRect);\r\n                gg.appendChild(this.layerElement);\r\n                layerElementParent = gg;\r\n                maskGrouper.appendChild(gg);\r\n            }\r\n            this.globalData.defs.appendChild(maskGroup);\r\n        }\r\n    }else if(this.data.hasMask || this.data.tt){\r\n        if(this.data.tt){\r\n            this.matteElement = document.createElementNS(svgNS,'g');\r\n            this.matteElement.appendChild(this.layerElement);\r\n            layerElementParent = this.matteElement;\r\n            this.baseElement = this.matteElement;\r\n        }else{\r\n            this.baseElement = this.layerElement;\r\n        }\r\n    }else{\r\n        this.baseElement = this.layerElement;\r\n    }\r\n    if((this.data.ln || this.data.cl) && (this.data.ty === 4 || this.data.ty === 0)){\r\n        if(this.data.ln){\r\n            this.layerElement.setAttribute('id',this.data.ln);\r\n        }\r\n        if(this.data.cl){\r\n            this.layerElement.setAttribute('class',this.data.cl);\r\n        }\r\n    }\r\n    if(this.data.ty === 0){\r\n            var cp = document.createElementNS(svgNS, 'clipPath');\r\n            var pt = document.createElementNS(svgNS,'path');\r\n            pt.setAttribute('d','M0,0 L'+this.data.w+',0'+' L'+this.data.w+','+this.data.h+' L0,'+this.data.h+'z');\r\n            var clipId = 'cp_'+randomString(8);\r\n            cp.setAttribute('id',clipId);\r\n            cp.appendChild(pt);\r\n            this.globalData.defs.appendChild(cp);\r\n        if(this.checkMasks()){\r\n            var cpGroup = document.createElementNS(svgNS,'g');\r\n            cpGroup.setAttribute('clip-path','url(' + locationHref + '#'+clipId+')');\r\n            cpGroup.appendChild(this.layerElement);\r\n            this.transformedElement = cpGroup;\r\n            if(layerElementParent){\r\n                layerElementParent.appendChild(this.transformedElement);\r\n            } else {\r\n                this.baseElement = this.transformedElement;\r\n            }\r\n        } else {\r\n            this.layerElement.setAttribute('clip-path','url(' + locationHref + '#'+clipId+')');\r\n        }\r\n        \r\n    }\r\n    if(this.data.bm !== 0){\r\n        this.setBlendMode();\r\n    }\r\n    if(this.layerElement !== this.parentContainer){\r\n        this.placeholder = null;\r\n    }\r\n    /* Todo performance killer\r\n    if(this.data.sy){\r\n        var filterID = 'st_'+randomString(10);\r\n        var c = this.data.sy[0].c.k;\r\n        var r = this.data.sy[0].s.k;\r\n        var expansor = document.createElementNS(svgNS,'filter');\r\n        expansor.setAttribute('id',filterID);\r\n        var feFlood = document.createElementNS(svgNS,'feFlood');\r\n        this.feFlood = feFlood;\r\n        if(!c[0].e){\r\n            feFlood.setAttribute('flood-color','rgb('+c[0]+','+c[1]+','+c[2]+')');\r\n        }\r\n        feFlood.setAttribute('result','base');\r\n        expansor.appendChild(feFlood);\r\n        var feMorph = document.createElementNS(svgNS,'feMorphology');\r\n        feMorph.setAttribute('operator','dilate');\r\n        feMorph.setAttribute('in','SourceGraphic');\r\n        feMorph.setAttribute('result','bigger');\r\n        this.feMorph = feMorph;\r\n        if(!r.length){\r\n            feMorph.setAttribute('radius',this.data.sy[0].s.k);\r\n        }\r\n        expansor.appendChild(feMorph);\r\n        var feColorMatrix = document.createElementNS(svgNS,'feColorMatrix');\r\n        feColorMatrix.setAttribute('result','mask');\r\n        feColorMatrix.setAttribute('in','bigger');\r\n        feColorMatrix.setAttribute('type','matrix');\r\n        feColorMatrix.setAttribute('values','0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0');\r\n        expansor.appendChild(feColorMatrix);\r\n        var feComposite = document.createElementNS(svgNS,'feComposite');\r\n        feComposite.setAttribute('result','drop');\r\n        feComposite.setAttribute('in','base');\r\n        feComposite.setAttribute('in2','mask');\r\n        feComposite.setAttribute('operator','in');\r\n        expansor.appendChild(feComposite);\r\n        var feBlend = document.createElementNS(svgNS,'feBlend');\r\n        feBlend.setAttribute('in','SourceGraphic');\r\n        feBlend.setAttribute('in2','drop');\r\n        feBlend.setAttribute('mode','normal');\r\n        expansor.appendChild(feBlend);\r\n        this.globalData.defs.appendChild(expansor);\r\n        var cont = document.createElementNS(svgNS,'g');\r\n        if(this.layerElement === this.parentContainer){\r\n            this.layerElement = cont;\r\n        }else{\r\n            cont.appendChild(this.layerElement);\r\n        }\r\n        cont.setAttribute('filter','url(#'+filterID+')');\r\n        if(this.data.td){\r\n            cont.setAttribute('data-td',this.data.td);\r\n        }\r\n        if(this.data.td == 3){\r\n            this.globalData.defs.appendChild(cont);\r\n        }else if(this.data.td == 2){\r\n            maskGrouper.appendChild(cont);\r\n        }else if(this.data.td == 1){\r\n            masker.appendChild(cont);\r\n        }else{\r\n            if(this.data.hasMask && this.data.tt){\r\n                this.matteElement.appendChild(cont);\r\n            }else{\r\n                this.appendNodeToParent(cont);\r\n            }\r\n        }\r\n    }*/\r\n    if(this.data.ef){\r\n        this.effectsManager = new SVGEffects(this);\r\n    }\r\n    this.checkParenting();\r\n};\r\n\r\n\r\nSVGBaseElement.prototype.setBlendMode = BaseElement.prototype.setBlendMode;\r\n\r\nSVGBaseElement.prototype.renderFrame = function(parentTransform){\r\n    if(this.data.ty === 3 || this.data.hd || !this.isVisible){\r\n        return false;\r\n    }\r\n\r\n    this.lastNum = this.currentFrameNum;\r\n    this.finalTransform.opMdf = this.firstFrame || this.finalTransform.op.mdf;\r\n    this.finalTransform.matMdf = this.firstFrame || this.finalTransform.mProp.mdf;\r\n    this.finalTransform.opacity = this.finalTransform.op.v;\r\n\r\n    var mat;\r\n    var finalMat = this.finalTransform.mat;\r\n\r\n    if(this.hierarchy){\r\n        var i = 0, len = this.hierarchy.length;\r\n        if(!this.finalTransform.matMdf) {\r\n            while(i < len) {\r\n                if(this.hierarchy[i].finalTransform.mProp.mdf) {\r\n                    this.finalTransform.matMdf = true;\r\n                    break;\r\n                }\r\n                i += 1;\r\n            }\r\n        }\r\n        \r\n        if(this.finalTransform.matMdf) {\r\n            mat = this.finalTransform.mProp.v.props;\r\n            finalMat.cloneFromProps(mat);\r\n            for(i=0;i<len;i+=1){\r\n                mat = this.hierarchy[i].finalTransform.mProp.v.props;\r\n                finalMat.transform(mat[0],mat[1],mat[2],mat[3],mat[4],mat[5],mat[6],mat[7],mat[8],mat[9],mat[10],mat[11],mat[12],mat[13],mat[14],mat[15]);\r\n            }\r\n        }\r\n        \r\n    }else if(this.isVisible){\r\n        finalMat = this.finalTransform.mProp.v;\r\n    }\r\n    if(this.finalTransform.matMdf && this.layerElement){\r\n        this.transformedElement.setAttribute('transform',finalMat.to2dCSS());\r\n    }\r\n    if(this.finalTransform.opMdf && this.layerElement){\r\n        if(this.finalTransform.op.v <= 0) {\r\n            if(!this.isTransparent && this.globalData.renderConfig.hideOnTransparent){\r\n                this.isTransparent = true;\r\n                this.hide();\r\n            }\r\n        } else if(this.hidden && this.isTransparent){\r\n            this.isTransparent = false;\r\n            this.show();\r\n        }\r\n        this.transformedElement.setAttribute('opacity',this.finalTransform.op.v);\r\n    }\r\n\r\n    if(this.data.hasMask){\r\n        this.maskManager.renderFrame(finalMat);\r\n    }\r\n    if(this.effectsManager){\r\n        this.effectsManager.renderFrame(this.firstFrame);\r\n    }\r\n    return this.isVisible;\r\n};\r\n\r\nSVGBaseElement.prototype.destroy = function(){\r\n    this.layerElement = null;\r\n    this.parentContainer = null;\r\n    if(this.matteElement) {\r\n        this.matteElement = null;\r\n    }\r\n    if(this.maskManager) {\r\n        this.maskManager.destroy();\r\n    }\r\n};\r\n\r\nSVGBaseElement.prototype.getBaseElement = function(){\r\n    return this.baseElement;\r\n};\r\nSVGBaseElement.prototype.addMasks = function(data){\r\n    this.maskManager = new MaskElement(data,this,this.globalData);\r\n};\r\n\r\nSVGBaseElement.prototype.setMatte = function(id){\r\n    if(!this.matteElement){\r\n        return;\r\n    }\r\n    this.matteElement.setAttribute(\"mask\", \"url(\" + locationHref + \"#\" + id + \")\");\r\n};\r\n\r\nSVGBaseElement.prototype.hide = function(){\r\n    if(!this.hidden){\r\n        this.layerElement.style.display = 'none';\r\n        this.hidden = true;\r\n    }\r\n};\r\n\r\nSVGBaseElement.prototype.show = function(){\r\n    if(this.isVisible && !this.isTransparent){\r\n        this.hidden = false;\r\n        this.layerElement.style.display = 'block';\r\n    }\r\n};\r\n\nfunction IShapeElement(data,parentContainer,globalData,comp, placeholder){\r\n    this.shapes = [];\r\n    this.shapesData = data.shapes;\r\n    this.stylesList = [];\r\n    this.itemsData = [];\r\n    this.prevViewData = [];\r\n    this.shapeModifiers = [];\r\n    this.processedElements = [];\r\n    this._parent.constructor.call(this,data,parentContainer,globalData,comp, placeholder);\r\n}\r\ncreateElement(SVGBaseElement, IShapeElement);\r\n\r\nIShapeElement.prototype.identityMatrix = new Matrix();\r\n\r\nIShapeElement.prototype.lcEnum = {\r\n    '1': 'butt',\r\n    '2': 'round',\r\n    '3': 'square'\r\n}\r\n\r\nIShapeElement.prototype.ljEnum = {\r\n    '1': 'miter',\r\n    '2': 'round',\r\n    '3': 'butt'\r\n}\r\n\r\nIShapeElement.prototype.searchProcessedElement = function(elem){\r\n    var i = this.processedElements.length;\r\n    while(i){\r\n        i -= 1;\r\n        if(this.processedElements[i].elem === elem){\r\n            return this.processedElements[i].pos;\r\n        }\r\n    }\r\n    return 0;\r\n};\r\n\r\nIShapeElement.prototype.addProcessedElement = function(elem, pos){\r\n    var i = this.processedElements.length;\r\n    while(i){\r\n        i -= 1;\r\n        if(this.processedElements[i].elem === elem){\r\n            this.processedElements[i].pos = pos;\r\n            break;\r\n        }\r\n    }\r\n    if(i === 0){\r\n        this.processedElements.push({\r\n            elem: elem,\r\n            pos: pos\r\n        })\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.buildExpressionInterface = function(){};\r\n\r\nIShapeElement.prototype.createElements = function(){\r\n    //TODO check if I can use symbol so i can set its viewBox\r\n    this._parent.createElements.call(this);\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement,this.dynamicProperties, 0, [], true);\r\n    if(!this.data.hd || this.data.td){\r\n        styleUnselectableDiv(this.layerElement);\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.setGradientData = function(pathElement,arr,data){\r\n\r\n    var gradientId = 'gr_'+randomString(10);\r\n    var gfill;\r\n    if(arr.t === 1){\r\n        gfill = document.createElementNS(svgNS,'linearGradient');\r\n    } else {\r\n        gfill = document.createElementNS(svgNS,'radialGradient');\r\n    }\r\n    gfill.setAttribute('id',gradientId);\r\n    gfill.setAttribute('spreadMethod','pad');\r\n    gfill.setAttribute('gradientUnits','userSpaceOnUse');\r\n    var stops = [];\r\n    var stop, j, jLen;\r\n    jLen = arr.g.p*4;\r\n    for(j=0;j<jLen;j+=4){\r\n        stop = document.createElementNS(svgNS,'stop');\r\n        gfill.appendChild(stop);\r\n        stops.push(stop);\r\n    }\r\n    pathElement.setAttribute( arr.ty === 'gf' ? 'fill':'stroke','url(#'+gradientId+')');\r\n    this.globalData.defs.appendChild(gfill);\r\n    data.gf = gfill;\r\n    data.cst = stops;\r\n}\r\n\r\nIShapeElement.prototype.setGradientOpacity = function(arr, data, styleOb){\r\n    if((arr.g.k.k[0].s && arr.g.k.k[0].s.length > arr.g.p*4) || arr.g.k.k.length > arr.g.p*4){\r\n        var opFill;\r\n        var stop, j, jLen;\r\n        var mask = document.createElementNS(svgNS,\"mask\");\r\n        var maskElement = document.createElementNS(svgNS, 'path');\r\n        mask.appendChild(maskElement);\r\n        var opacityId = 'op_'+randomString(10);\r\n        var maskId = 'mk_'+randomString(10);\r\n        mask.setAttribute('id',maskId);\r\n        if(arr.t === 1){\r\n            opFill = document.createElementNS(svgNS,'linearGradient');\r\n        } else {\r\n            opFill = document.createElementNS(svgNS,'radialGradient');\r\n        }\r\n        opFill.setAttribute('id',opacityId);\r\n        opFill.setAttribute('spreadMethod','pad');\r\n        opFill.setAttribute('gradientUnits','userSpaceOnUse');\r\n        jLen = arr.g.k.k[0].s ? arr.g.k.k[0].s.length : arr.g.k.k.length;\r\n        var stops = [];\r\n        for(j=arr.g.p*4;j<jLen;j+=2){\r\n            stop = document.createElementNS(svgNS,'stop');\r\n            stop.setAttribute('stop-color','rgb(255,255,255)');\r\n            //stop.setAttribute('offset',Math.round(arr.y[j][0]*100)+'%');\r\n            //stop.setAttribute('style','stop-color:rgb(255,255,255);stop-opacity:'+arr.y[j][1]);\r\n            opFill.appendChild(stop);\r\n            stops.push(stop);\r\n        }\r\n        maskElement.setAttribute( arr.ty === 'gf' ? 'fill':'stroke','url(#'+opacityId+')');\r\n        this.globalData.defs.appendChild(opFill);\r\n        this.globalData.defs.appendChild(mask);\r\n        data.of = opFill;\r\n        data.ost = stops;\r\n        styleOb.msElem = maskElement;\r\n        return maskId;\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.createStyleElement = function(data, level, dynamicProperties){\r\n    var elementData = {\r\n    };\r\n    var styleOb = {\r\n        data: data,\r\n        type: data.ty,\r\n        d: '',\r\n        ld: '',\r\n        lvl: level,\r\n        mdf: false,\r\n        closed: false\r\n    };\r\n    var pathElement = document.createElementNS(svgNS, \"path\");\r\n    elementData.o = PropertyFactory.getProp(this,data.o,0,0.01,dynamicProperties);\r\n    if(data.ty == 'st' || data.ty == 'gs') {\r\n        pathElement.setAttribute('stroke-linecap', this.lcEnum[data.lc] || 'round');\r\n        ////pathElement.style.strokeLinecap = this.lcEnum[data.lc] || 'round';\r\n        pathElement.setAttribute('stroke-linejoin',this.ljEnum[data.lj] || 'round');\r\n        ////pathElement.style.strokeLinejoin = this.ljEnum[data.lj] || 'round';\r\n        pathElement.setAttribute('fill-opacity','0');\r\n        ////pathElement.style.fillOpacity = 0;\r\n        if(data.lj == 1) {\r\n            pathElement.setAttribute('stroke-miterlimit',data.ml);\r\n            ////pathElement.style.strokeMiterlimit = data.ml;\r\n        }\r\n\r\n        elementData.w = PropertyFactory.getProp(this,data.w,0,null,dynamicProperties);\r\n        if(data.d){\r\n            var d = PropertyFactory.getDashProp(this,data.d,'svg',dynamicProperties);\r\n            if(!d.k){\r\n                pathElement.setAttribute('stroke-dasharray', d.dasharray);\r\n                ////pathElement.style.strokeDasharray = d.dasharray;\r\n                pathElement.setAttribute('stroke-dashoffset', d.dashoffset);\r\n                ////pathElement.style.strokeDashoffset = d.dashoffset;\r\n            }\r\n            elementData.d = d;\r\n        }\r\n\r\n    }\r\n    if(data.ty == 'fl' || data.ty == 'st'){\r\n        elementData.c = PropertyFactory.getProp(this,data.c,1,255,dynamicProperties);\r\n    } else {\r\n        elementData.g = PropertyFactory.getGradientProp(this,data.g,dynamicProperties);\r\n        if(data.t == 2){\r\n            elementData.h = PropertyFactory.getProp(this,data.h,0,0.01,dynamicProperties);\r\n            elementData.a = PropertyFactory.getProp(this,data.a,0,degToRads,dynamicProperties);\r\n        }\r\n        elementData.s = PropertyFactory.getProp(this,data.s,1,null,dynamicProperties);\r\n        elementData.e = PropertyFactory.getProp(this,data.e,1,null,dynamicProperties);\r\n        this.setGradientData(pathElement,data,elementData, styleOb);\r\n        var maskId = this.setGradientOpacity(data,elementData, styleOb);\r\n        if(maskId){\r\n            pathElement.setAttribute('mask','url(#'+maskId+')');\r\n        }\r\n    }\r\n    elementData.elem = pathElement;\r\n    //container.appendChild(pathElement);\r\n    if(data.r === 2) {\r\n        pathElement.setAttribute('fill-rule', 'evenodd');\r\n    }\r\n\r\n    if(data.ln){\r\n        pathElement.setAttribute('id',data.ln);\r\n    }\r\n    if(data.cl){\r\n        pathElement.setAttribute('class',data.cl);\r\n    }\r\n    styleOb.pElem = pathElement;\r\n    this.stylesList.push(styleOb);\r\n    elementData.style = styleOb;\r\n    return elementData;\r\n}\r\n\r\nIShapeElement.prototype.createGroupElement = function(data) {\r\n    var elementData = {\r\n        it: [],\r\n        prevViewData: []\r\n    };\r\n    var g = document.createElementNS(svgNS,'g');\r\n    elementData.gr = g;\r\n    if(data.ln){\r\n        elementData.gr.setAttribute('id',data.ln);\r\n    }\r\n    return elementData;\r\n}\r\n\r\nIShapeElement.prototype.createTransformElement = function(data, dynamicProperties) {\r\n    var elementData = {\r\n        transform : {\r\n            op: PropertyFactory.getProp(this,data.o,0,0.01,dynamicProperties),\r\n            mProps: PropertyFactory.getProp(this,data,2,null,dynamicProperties)\r\n        },\r\n        elements: []\r\n    };\r\n    return elementData;\r\n}\r\n\r\nIShapeElement.prototype.createShapeElement = function(data, ownTransformers, level, dynamicProperties) {\r\n    var elementData = {\r\n        elements : [],\r\n        caches:[],\r\n        styles : [],\r\n        transformers: ownTransformers,\r\n        lStr: ''\r\n    };\r\n    var ty = 4;\r\n    if(data.ty == 'rc'){\r\n        ty = 5;\r\n    }else if(data.ty == 'el'){\r\n        ty = 6;\r\n    }else if(data.ty == 'sr'){\r\n        ty = 7;\r\n    }\r\n    elementData.sh = ShapePropertyFactory.getShapeProp(this,data,ty,dynamicProperties);\r\n    elementData.lvl = level;\r\n    this.shapes.push(elementData.sh);\r\n    this.addShapeToModifiers(elementData);\r\n    return elementData;\r\n}\r\n\r\nvar cont = 0;\r\n\r\nIShapeElement.prototype.setElementStyles = function(){\r\n    var j, jLen = this.stylesList.length;\r\n    var arr = [];\r\n    for(j=0;j<jLen;j+=1){\r\n        if(!this.stylesList[j].closed){\r\n            arr.push(this.stylesList[j]);\r\n        }\r\n    }\r\n    return arr;\r\n}\r\n\r\nIShapeElement.prototype.reloadShapes = function(){\r\n    this.firstFrame = true;\r\n    var i, len = this.itemsData.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.prevViewData[i] = this.itemsData[i];\r\n    }\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement,this.dynamicProperties, 0, [], true);\r\n    var i, len = this.dynamicProperties.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.dynamicProperties[i].getValue();\r\n    }\r\n    this.renderModifiers();\r\n}\r\n\r\nIShapeElement.prototype.searchShapes = function(arr,itemsData,prevViewData,container,dynamicProperties, level, transformers, render){\r\n    var ownTransformers = [].concat(transformers);\r\n    var i, len = arr.length - 1;\r\n    var j, jLen;\r\n    var ownStyles = [], ownModifiers = [], styleOb, currentTransform, modifier, processedPos;\r\n    for(i=len;i>=0;i-=1){\r\n        processedPos = this.searchProcessedElement(arr[i]);\r\n        if(!processedPos){\r\n            arr[i]._render = render;\r\n        } else {\r\n            itemsData[i] = prevViewData[processedPos - 1];\r\n        }\r\n        if(arr[i].ty == 'fl' || arr[i].ty == 'st' || arr[i].ty == 'gf' || arr[i].ty == 'gs'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createStyleElement(arr[i], level, dynamicProperties);\r\n            } else {\r\n                itemsData[i].style.closed = false;\r\n            }\r\n            if(arr[i]._render){\r\n                container.appendChild(itemsData[i].elem);\r\n            }\r\n            ownStyles.push(itemsData[i].style);\r\n        }else if(arr[i].ty == 'gr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createGroupElement(arr[i]);\r\n            } else {\r\n                jLen = itemsData[i].it.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    itemsData[i].prevViewData[j] = itemsData[i].it[j];\r\n                }\r\n            }\r\n            this.searchShapes(arr[i].it,itemsData[i].it,itemsData[i].prevViewData,itemsData[i].gr,dynamicProperties, level + 1, ownTransformers, render);\r\n            if(arr[i]._render){\r\n                container.appendChild(itemsData[i].gr);\r\n            }\r\n        }else if(arr[i].ty == 'tr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createTransformElement(arr[i], dynamicProperties);\r\n            }\r\n            currentTransform = itemsData[i].transform;\r\n            ownTransformers.push(currentTransform);\r\n        }else if(arr[i].ty == 'sh' || arr[i].ty == 'rc' || arr[i].ty == 'el' || arr[i].ty == 'sr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createShapeElement(arr[i], ownTransformers, level, dynamicProperties);\r\n            }\r\n            itemsData[i].elements = this.setElementStyles();\r\n\r\n        }else if(arr[i].ty == 'tm' || arr[i].ty == 'rd' || arr[i].ty == 'ms'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                modifier.init(this,arr[i],dynamicProperties);\r\n                itemsData[i] = modifier;\r\n                this.shapeModifiers.push(modifier);\r\n            } else {\r\n                modifier = itemsData[i];\r\n                modifier.closed = false;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        }else if(arr[i].ty == 'rp'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                itemsData[i] = modifier;\r\n                modifier.init(this,arr,i,itemsData,dynamicProperties);\r\n                this.shapeModifiers.push(modifier);\r\n                render = false;\r\n            }else{\r\n                modifier = itemsData[i];\r\n                modifier.closed = true;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        }\r\n        this.addProcessedElement(arr[i], i + 1);\r\n    }\r\n    len = ownStyles.length;\r\n    for(i=0;i<len;i+=1){\r\n        ownStyles[i].closed = true;\r\n    }\r\n    len = ownModifiers.length;\r\n    for(i=0;i<len;i+=1){\r\n        ownModifiers[i].closed = true;\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.addShapeToModifiers = function(data) {\r\n    var i, len = this.shapeModifiers.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.shapeModifiers[i].addShape(data);\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.renderModifiers = function() {\r\n    if(!this.shapeModifiers.length){\r\n        return;\r\n    }\r\n    var i, len = this.shapes.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.shapes[i].reset();\r\n    }\r\n\r\n\r\n    len = this.shapeModifiers.length;\r\n\r\n    for(i=len-1;i>=0;i-=1){\r\n        this.shapeModifiers[i].processShapes(this.firstFrame);\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.renderFrame = function(parentMatrix){\r\n    //this.reloadShapes();\r\n    var renderParent = this._parent.renderFrame.call(this,parentMatrix);\r\n    if(renderParent===false){\r\n        this.hide();\r\n        return;\r\n    }\r\n    if(this.hidden){\r\n        this.layerElement.style.display = 'block';\r\n        this.hidden = false;\r\n    }\r\n    this.renderModifiers();\r\n    var i, len = this.stylesList.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.stylesList[i].d = '';\r\n        this.stylesList[i].mdf = false;\r\n    }\r\n    this.renderShape(this.shapesData,this.itemsData, null);\r\n\r\n    for (i = 0; i < len; i += 1) {\r\n        if (this.stylesList[i].ld === '0') {\r\n            this.stylesList[i].ld = '1';\r\n            this.stylesList[i].pElem.style.display = 'block';\r\n            //this.stylesList[i].parent.appendChild(this.stylesList[i].pElem);\r\n        }\r\n        if (this.stylesList[i].mdf || this.firstFrame) {\r\n            this.stylesList[i].pElem.setAttribute('d', this.stylesList[i].d);\r\n            if(this.stylesList[i].msElem){\r\n                this.stylesList[i].msElem.setAttribute('d', this.stylesList[i].d);\r\n            }\r\n        }\r\n    }\r\n    if (this.firstFrame) {\r\n        this.firstFrame = false;\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.hide = function(){\r\n    if(!this.hidden){\r\n        this.layerElement.style.display = 'none';\r\n        var i, len = this.stylesList.length;\r\n        for(i=len-1;i>=0;i-=1){\r\n            if(this.stylesList[i].ld !== '0'){\r\n                this.stylesList[i].ld = '0';\r\n                this.stylesList[i].pElem.style.display = 'none';\r\n                if(this.stylesList[i].pElem.parentNode){\r\n                    this.stylesList[i].parent = this.stylesList[i].pElem.parentNode;\r\n                    //this.stylesList[i].pElem.parentNode.removeChild(this.stylesList[i].pElem);\r\n                }\r\n            }\r\n        }\r\n        this.hidden = true;\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.renderShape = function(items,data, container){\r\n    var i, len = items.length - 1;\r\n    var ty;\r\n    for(i=len;i>=0;i-=1){\r\n        ty = items[i].ty;\r\n        if(ty == 'tr'){\r\n            if(this.firstFrame || data[i].transform.op.mdf && container){\r\n                container.setAttribute('opacity',data[i].transform.op.v);\r\n            }\r\n            if(this.firstFrame || data[i].transform.mProps.mdf && container){\r\n                container.setAttribute('transform',data[i].transform.mProps.v.to2dCSS());\r\n            }\r\n        }else if(ty == 'sh' || ty == 'el' || ty == 'rc' || ty == 'sr'){\r\n            this.renderPath(items[i],data[i]);\r\n        }else if(ty == 'fl'){\r\n            this.renderFill(items[i],data[i]);\r\n        }else if(ty == 'gf'){\r\n            this.renderGradient(items[i],data[i]);\r\n        }else if(ty == 'gs'){\r\n            this.renderGradient(items[i],data[i]);\r\n            this.renderStroke(items[i],data[i]);\r\n        }else if(ty == 'st'){\r\n            this.renderStroke(items[i],data[i]);\r\n        }else if(ty == 'gr'){\r\n            this.renderShape(items[i].it,data[i].it, data[i].gr);\r\n        }else if(ty == 'tm'){\r\n            //\r\n        }\r\n    }\r\n\r\n};\r\n\r\nIShapeElement.prototype.buildShapeString = function(pathNodes, length, closed, mat) {\r\n    var i, shapeString = '';\r\n    for(i = 1; i < length; i += 1) {\r\n        if (i === 1) {\r\n            shapeString += \" M\" + mat.applyToPointStringified(pathNodes.v[0][0], pathNodes.v[0][1]);\r\n        }\r\n        shapeString += \" C\" + mat.applyToPointStringified(pathNodes.o[i - 1][0], pathNodes.o[i - 1][1]) + \" \" + mat.applyToPointStringified(pathNodes.i[i][0], pathNodes.i[i][1]) + \" \" + mat.applyToPointStringified(pathNodes.v[i][0], pathNodes.v[i][1]);\r\n    }\r\n    if (length === 1) {\r\n        shapeString += \" M\" + mat.applyToPointStringified(pathNodes.v[0][0], pathNodes.v[0][1]);\r\n    }\r\n    if (closed && length) {\r\n        shapeString += \" C\" + mat.applyToPointStringified(pathNodes.o[i - 1][0], pathNodes.o[i - 1][1]) + \" \" + mat.applyToPointStringified(pathNodes.i[0][0], pathNodes.i[0][1]) + \" \" + mat.applyToPointStringified(pathNodes.v[0][0], pathNodes.v[0][1]);\r\n        shapeString += 'z';\r\n    }\r\n    return shapeString;\r\n};\r\n\r\nIShapeElement.prototype.renderPath = function(pathData,itemData){\r\n    var len, i, j, jLen,pathStringTransformed,redraw,pathNodes,l, lLen = itemData.elements.length;\r\n    var lvl = itemData.lvl;\r\n    if(!pathData._render){\r\n        return;\r\n    }\r\n    for(l=0;l<lLen;l+=1){\r\n        if(itemData.elements[l].data._render){\r\n            redraw = itemData.sh.mdf || this.firstFrame;\r\n            pathStringTransformed = 'M0 0';\r\n            var paths = itemData.sh.paths;\r\n            jLen = paths._length;\r\n            if(itemData.elements[l].lvl < lvl){\r\n                var mat = this.mHelper.reset(), props;\r\n                var iterations = lvl - itemData.elements[l].lvl;\r\n                var k = itemData.transformers.length-1;\r\n                while(iterations > 0) {\r\n                    redraw = itemData.transformers[k].mProps.mdf || redraw;\r\n                    props = itemData.transformers[k].mProps.v.props;\r\n                    mat.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\r\n                    iterations --;\r\n                    k --;\r\n                }\r\n                if(redraw){\r\n                    for(j=0;j<jLen;j+=1){\r\n                        pathNodes = paths.shapes[j];\r\n                        if(pathNodes && pathNodes._length){\r\n                            pathStringTransformed += this.buildShapeString(pathNodes, pathNodes._length, pathNodes.c, mat);\r\n                        }\r\n                    }\r\n                    itemData.caches[l] = pathStringTransformed;\r\n                } else {\r\n                    pathStringTransformed = itemData.caches[l];\r\n                }\r\n            } else {\r\n                if(redraw){\r\n                    for(j=0;j<jLen;j+=1){\r\n                        pathNodes = paths.shapes[j];\r\n                        if(pathNodes && pathNodes._length){\r\n                            pathStringTransformed += this.buildShapeString(pathNodes, pathNodes._length, pathNodes.c, this.identityMatrix);\r\n                        }\r\n                    }\r\n                    itemData.caches[l] = pathStringTransformed;\r\n                } else {\r\n                    pathStringTransformed = itemData.caches[l];\r\n                }\r\n            }\r\n            itemData.elements[l].d += pathStringTransformed;\r\n            itemData.elements[l].mdf = redraw || itemData.elements[l].mdf;\r\n        } else {\r\n            itemData.elements[l].mdf = true;\r\n        }\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.renderFill = function(styleData,itemData){\r\n    var styleElem = itemData.style;\r\n\r\n    if(itemData.c.mdf || this.firstFrame){\r\n        styleElem.pElem.setAttribute('fill','rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')');\r\n        ////styleElem.pElem.style.fill = 'rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')';\r\n    }\r\n    if(itemData.o.mdf || this.firstFrame){\r\n        styleElem.pElem.setAttribute('fill-opacity',itemData.o.v);\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.renderGradient = function(styleData,itemData){\r\n    var gfill = itemData.gf;\r\n    var opFill = itemData.of;\r\n    var pt1 = itemData.s.v,pt2 = itemData.e.v;\r\n\r\n    if(itemData.o.mdf || this.firstFrame){\r\n        var attr = styleData.ty === 'gf' ? 'fill-opacity':'stroke-opacity';\r\n        itemData.elem.setAttribute(attr,itemData.o.v);\r\n    }\r\n    //clippedElement.setAttribute('transform','matrix(1,0,0,1,-100,0)');\r\n    if(itemData.s.mdf || this.firstFrame){\r\n        var attr1 = styleData.t === 1 ? 'x1':'cx';\r\n        var attr2 = attr1 === 'x1' ? 'y1':'cy';\r\n        gfill.setAttribute(attr1,pt1[0]);\r\n        gfill.setAttribute(attr2,pt1[1]);\r\n        if(opFill){\r\n            opFill.setAttribute(attr1,pt1[0]);\r\n            opFill.setAttribute(attr2,pt1[1]);\r\n        }\r\n    }\r\n    var stops, i, len, stop;\r\n    if(itemData.g.cmdf || this.firstFrame){\r\n        stops = itemData.cst;\r\n        var cValues = itemData.g.c;\r\n        len = stops.length;\r\n        for(i=0;i<len;i+=1){\r\n            stop = stops[i];\r\n            stop.setAttribute('offset',cValues[i*4]+'%');\r\n            stop.setAttribute('stop-color','rgb('+cValues[i*4+1]+','+cValues[i*4+2]+','+cValues[i*4+3]+')');\r\n        }\r\n    }\r\n    if(opFill && (itemData.g.omdf || this.firstFrame)){\r\n        stops = itemData.ost;\r\n        var oValues = itemData.g.o;\r\n        len = stops.length;\r\n        for(i=0;i<len;i+=1){\r\n            stop = stops[i];\r\n            stop.setAttribute('offset',oValues[i*2]+'%');\r\n            stop.setAttribute('stop-opacity',oValues[i*2+1]);\r\n        }\r\n    }\r\n    if(styleData.t === 1){\r\n        if(itemData.e.mdf  || this.firstFrame){\r\n            gfill.setAttribute('x2',pt2[0]);\r\n            gfill.setAttribute('y2',pt2[1]);\r\n            if(opFill){\r\n                opFill.setAttribute('x2',pt2[0]);\r\n                opFill.setAttribute('y2',pt2[1]);\r\n            }\r\n        }\r\n    } else {\r\n        var rad;\r\n        if(itemData.s.mdf || itemData.e.mdf || this.firstFrame){\r\n            rad = Math.sqrt(Math.pow(pt1[0]-pt2[0],2)+Math.pow(pt1[1]-pt2[1],2));\r\n            gfill.setAttribute('r',rad);\r\n            if(opFill){\r\n                opFill.setAttribute('r',rad);\r\n            }\r\n        }\r\n        if(itemData.e.mdf || itemData.h.mdf || itemData.a.mdf || this.firstFrame){\r\n            if(!rad){\r\n                rad = Math.sqrt(Math.pow(pt1[0]-pt2[0],2)+Math.pow(pt1[1]-pt2[1],2));\r\n            }\r\n            var ang = Math.atan2(pt2[1]-pt1[1], pt2[0]-pt1[0]);\r\n\r\n            var percent = itemData.h.v >= 1 ? 0.99 : itemData.h.v <= -1 ? -0.99:itemData.h.v;\r\n            var dist = rad*percent;\r\n            var x = Math.cos(ang + itemData.a.v)*dist + pt1[0];\r\n            var y = Math.sin(ang + itemData.a.v)*dist + pt1[1];\r\n            gfill.setAttribute('fx',x);\r\n            gfill.setAttribute('fy',y);\r\n            if(opFill){\r\n                opFill.setAttribute('fx',x);\r\n                opFill.setAttribute('fy',y);\r\n            }\r\n        }\r\n        //gfill.setAttribute('fy','200');\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.renderStroke = function(styleData,itemData){\r\n    var styleElem = itemData.style;\r\n    //TODO fix dashes\r\n    var d = itemData.d;\r\n    var dasharray,dashoffset;\r\n    if(d && d.k && (d.mdf || this.firstFrame)){\r\n        styleElem.pElem.setAttribute('stroke-dasharray', d.dasharray);\r\n        ////styleElem.pElem.style.strokeDasharray = d.dasharray;\r\n        styleElem.pElem.setAttribute('stroke-dashoffset', d.dashoffset);\r\n        ////styleElem.pElem.style.strokeDashoffset = d.dashoffset;\r\n    }\r\n    if(itemData.c && (itemData.c.mdf || this.firstFrame)){\r\n        styleElem.pElem.setAttribute('stroke','rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')');\r\n        ////styleElem.pElem.style.stroke = 'rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')';\r\n    }\r\n    if(itemData.o.mdf || this.firstFrame){\r\n        styleElem.pElem.setAttribute('stroke-opacity',itemData.o.v);\r\n    }\r\n    if(itemData.w.mdf || this.firstFrame){\r\n        styleElem.pElem.setAttribute('stroke-width',itemData.w.v);\r\n        if(styleElem.msElem){\r\n            styleElem.msElem.setAttribute('stroke-width',itemData.w.v);\r\n        }\r\n        ////styleElem.pElem.style.strokeWidth = itemData.w.v;\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.destroy = function(){\r\n    this._parent.destroy.call(this._parent);\r\n    this.shapeData = null;\r\n    this.itemsData = null;\r\n    this.parentContainer = null;\r\n    this.placeholder = null;\r\n};\r\n\nfunction ITextElement(data, animationItem,parentContainer,globalData){\r\n}\r\nITextElement.prototype.init = function(){\r\n    this.lettersChangedFlag = true;\r\n    this.dynamicProperties = this.dynamicProperties || [];\r\n    this.textAnimator = new TextAnimatorProperty(this.data.t, this.renderType, this);\r\n    this.textProperty = new TextProperty(this, this.data.t, this.dynamicProperties);\r\n    this._parent.init.call(this);\r\n    this.textAnimator.searchProperties(this.dynamicProperties);\r\n};\r\n\r\nITextElement.prototype.prepareFrame = function(num) {\r\n    this._parent.prepareFrame.call(this, num);\r\n    if(this.textProperty.mdf || this.textProperty.firstFrame) {\r\n        this.buildNewText();\r\n        this.textProperty.firstFrame = false;\r\n    }\r\n}\r\n\r\nITextElement.prototype.createPathShape = function(matrixHelper, shapes) {\r\n    var j,jLen = shapes.length;\r\n    var k, kLen, pathNodes;\r\n    var shapeStr = '';\r\n    for(j=0;j<jLen;j+=1){\r\n        pathNodes = shapes[j].ks.k;\r\n        shapeStr += this.buildShapeString(pathNodes, pathNodes.i.length, true, matrixHelper);\r\n    }\r\n    return shapeStr;\r\n};\r\n\r\nITextElement.prototype.updateDocumentData = function(newData, index) {\r\n    this.textProperty.updateDocumentData(newData, index);\r\n}\r\n\r\nITextElement.prototype.applyTextPropertiesToMatrix = function(documentData, matrixHelper, lineNumber, xPos, yPos) {\r\n    if(documentData.ps){\r\n        matrixHelper.translate(documentData.ps[0],documentData.ps[1] + documentData.ascent,0);\r\n    }\r\n    matrixHelper.translate(0,-documentData.ls,0);\r\n    switch(documentData.j){\r\n        case 1:\r\n            matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]),0,0);\r\n            break;\r\n        case 2:\r\n            matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber] )/2,0,0);\r\n            break;\r\n    }\r\n    matrixHelper.translate(xPos, yPos, 0);\r\n}\r\n\r\nITextElement.prototype.buildColor = function(colorData) {\r\n    return 'rgb(' + Math.round(colorData[0]*255) + ',' + Math.round(colorData[1]*255) + ',' + Math.round(colorData[2]*255) + ')';\r\n}\r\n\r\nITextElement.prototype.buildShapeString = IShapeElement.prototype.buildShapeString;\r\n\r\nITextElement.prototype.emptyProp = new LetterProps();\r\n\r\nITextElement.prototype.destroy = function(){\r\n    this._parent.destroy.call(this._parent);\r\n};\nfunction SVGTextElement(data,parentContainer,globalData,comp, placeholder){\r\n    this.textSpans = [];\r\n    this.renderType = 'svg';\r\n    this._parent.constructor.call(this,data,parentContainer,globalData,comp, placeholder);\r\n}\r\ncreateElement(SVGBaseElement, SVGTextElement);\r\n\r\nextendPrototype(ITextElement, SVGTextElement);\r\n\r\nSVGTextElement.prototype.createElements = function(){\r\n\r\n    this._parent.createElements.call(this);\r\n\r\n\r\n    if(this.data.ln){\r\n        this.layerElement.setAttribute('id',this.data.ln);\r\n    }\r\n    if(this.data.cl){\r\n        this.layerElement.setAttribute('class',this.data.cl);\r\n    }\r\n    if (this.data.singleShape && !this.globalData.fontManager.chars) {\r\n        this.textContainer = document.createElementNS(svgNS,'text');\r\n    }\r\n};\r\n\r\nSVGTextElement.prototype.buildNewText = function(){\r\n    var i, len;\r\n\r\n    var documentData = this.textProperty.currentData;\r\n    this.renderedLetters = Array.apply(null,{length:documentData ? documentData.l.length : 0});\r\n    if(documentData.fc) {\r\n        this.layerElement.setAttribute('fill', this.buildColor(documentData.fc));\r\n    }else{\r\n        this.layerElement.setAttribute('fill', 'rgba(0,0,0,0)');\r\n    }\r\n    if(documentData.sc){\r\n        this.layerElement.setAttribute('stroke', this.buildColor(documentData.sc));\r\n        this.layerElement.setAttribute('stroke-width', documentData.sw);\r\n    }\r\n    this.layerElement.setAttribute('font-size', documentData.s);\r\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\r\n    if(fontData.fClass){\r\n        this.layerElement.setAttribute('class',fontData.fClass);\r\n    } else {\r\n        this.layerElement.setAttribute('font-family', fontData.fFamily);\r\n        var fWeight = documentData.fWeight, fStyle = documentData.fStyle;\r\n        this.layerElement.setAttribute('font-style', fStyle);\r\n        this.layerElement.setAttribute('font-weight', fWeight);\r\n    }\r\n\r\n    var letters = documentData.l || [];\r\n    var usesGlyphs = this.globalData.fontManager.chars;\r\n    len = letters.length;\r\n    if(!len){\r\n        return;\r\n    }\r\n    var tSpan;\r\n    var matrixHelper = this.mHelper;\r\n    var shapes, shapeStr = '', singleShape = this.data.singleShape;\r\n    var xPos = 0, yPos = 0, firstLine = true;\r\n    var trackingOffset = documentData.tr/1000*documentData.s;\r\n    if(singleShape && !usesGlyphs) {\r\n        var tElement = this.textContainer;\r\n        var justify = '';\r\n        switch(documentData.j) {\r\n            case 1:\r\n                justify = 'end';\r\n                break;\r\n            case 2:\r\n                justify = 'middle';\r\n                break;\r\n            case 2:\r\n                justify = 'start';\r\n                break;\r\n        }\r\n        tElement.setAttribute('text-anchor',justify);\r\n        tElement.setAttribute('letter-spacing',trackingOffset);\r\n        var textContent = documentData.t.split(String.fromCharCode(13));\r\n        len = textContent.length;\r\n        var yPos = documentData.ps ? documentData.ps[1] + documentData.ascent : 0;\r\n        for ( i = 0; i < len; i += 1) {\r\n            tSpan = this.textSpans[i] || document.createElementNS(svgNS,'tspan');\r\n            tSpan.textContent = textContent[i];\r\n            tSpan.setAttribute('x', 0);\r\n            tSpan.setAttribute('y', yPos);\r\n            tSpan.style.display = 'inherit';\r\n            tElement.appendChild(tSpan);\r\n            this.textSpans[i] = tSpan;\r\n            yPos += documentData.lh;\r\n        }\r\n        \r\n        this.layerElement.appendChild(tElement);\r\n    } else {\r\n        var cachedSpansLength = this.textSpans.length;\r\n        var shapeData, charData;\r\n        for (i = 0; i < len; i += 1) {\r\n            if(!usesGlyphs || !singleShape || i === 0){\r\n                tSpan = cachedSpansLength > i ? this.textSpans[i] : document.createElementNS(svgNS,usesGlyphs?'path':'text');\r\n                if (cachedSpansLength <= i) {\r\n                    tSpan.setAttribute('stroke-linecap', 'butt');\r\n                    tSpan.setAttribute('stroke-linejoin','round');\r\n                    tSpan.setAttribute('stroke-miterlimit','4');\r\n                    this.textSpans[i] = tSpan;\r\n                    this.layerElement.appendChild(tSpan);\r\n                }\r\n                tSpan.style.display = 'inherit';\r\n            }\r\n            \r\n            matrixHelper.reset();\r\n            if(usesGlyphs) {\r\n                matrixHelper.scale(documentData.s / 100, documentData.s / 100);\r\n                if (singleShape) {\r\n                    if(letters[i].n) {\r\n                        xPos = -trackingOffset;\r\n                        yPos += documentData.yOffset;\r\n                        yPos += firstLine ? 1 : 0;\r\n                        firstLine = false;\r\n                    }\r\n                    this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\r\n                    xPos += letters[i].l || 0;\r\n                    //xPos += letters[i].val === ' ' ? 0 : trackingOffset;\r\n                    xPos += trackingOffset;\r\n                }\r\n                charData = this.globalData.fontManager.getCharData(documentData.t.charAt(i), fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\r\n                shapeData = charData && charData.data || {};\r\n                shapes = shapeData.shapes ? shapeData.shapes[0].it : [];\r\n                if(!singleShape){\r\n                    tSpan.setAttribute('d',this.createPathShape(matrixHelper,shapes));\r\n                } else {\r\n                    shapeStr += this.createPathShape(matrixHelper,shapes);\r\n                }\r\n            } else {\r\n                tSpan.textContent = letters[i].val;\r\n                tSpan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\",\"preserve\");\r\n            }\r\n            //\r\n        }\r\n        if (singleShape) {\r\n            tSpan.setAttribute('d',shapeStr);\r\n        }\r\n    }\r\n    while (i < this.textSpans.length){\r\n        this.textSpans[i].style.display = 'none';\r\n        i += 1;\r\n    }\r\n    \r\n    this._sizeChanged = true;\r\n}\r\n\r\nSVGTextElement.prototype.sourceRectAtTime = function(time){\r\n    this.prepareFrame(this.comp.renderedFrame - this.data.st);\r\n    this.renderLetters();\r\n    if(this._sizeChanged){\r\n        this._sizeChanged = false;\r\n        var textBox = this.layerElement.getBBox();\r\n        this.bbox = {\r\n            top: textBox.y,\r\n            left: textBox.x,\r\n            width: textBox.width,\r\n            height: textBox.height\r\n        }\r\n    }\r\n    return this.bbox;\r\n}\r\n\r\nSVGTextElement.prototype.renderLetters = function(){\r\n\r\n    if(!this.data.singleShape){\r\n        this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\r\n        if(this.lettersChangedFlag || this.textAnimator.lettersChangedFlag){\r\n            this._sizeChanged = true;\r\n            var  i,len;\r\n            var renderedLetters = this.textAnimator.renderedLetters;\r\n\r\n            var letters = this.textProperty.currentData.l;\r\n\r\n            len = letters.length;\r\n            var renderedLetter, textSpan;\r\n            for(i=0;i<len;i+=1){\r\n                if(letters[i].n){\r\n                    continue;\r\n                }\r\n                renderedLetter = renderedLetters[i];\r\n                textSpan = this.textSpans[i];\r\n                if(renderedLetter.mdf.m) {\r\n                    textSpan.setAttribute('transform',renderedLetter.m);\r\n                }\r\n                if(renderedLetter.mdf.o) {\r\n                    textSpan.setAttribute('opacity',renderedLetter.o);\r\n                }\r\n                if(renderedLetter.mdf.sw){\r\n                    textSpan.setAttribute('stroke-width',renderedLetter.sw);\r\n                }\r\n                if(renderedLetter.mdf.sc){\r\n                    textSpan.setAttribute('stroke',renderedLetter.sc);\r\n                }\r\n                if(renderedLetter.mdf.fc){\r\n                    textSpan.setAttribute('fill',renderedLetter.fc);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nSVGTextElement.prototype.renderFrame = function(parentMatrix){\r\n\r\n    var renderParent = this._parent.renderFrame.call(this,parentMatrix);\r\n    if(renderParent===false){\r\n        this.hide();\r\n        return;\r\n    }\r\n    if(this.hidden){\r\n        this.show();\r\n    }\r\n    if(this.firstFrame) {\r\n        this.firstFrame = false;\r\n    }\r\n    this.renderLetters();\r\n}\nfunction SVGTintFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = document.createElementNS(svgNS,'feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','linearRGB');\r\n    feColorMatrix.setAttribute('values','0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f1');\r\n    filter.appendChild(feColorMatrix);\r\n    feColorMatrix = document.createElementNS(svgNS,'feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n    feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f2');\r\n    filter.appendChild(feColorMatrix);\r\n    this.matrixFilter = feColorMatrix;\r\n    if(filterManager.effectElements[2].p.v !== 100 || filterManager.effectElements[2].p.k){\r\n        var feMerge = document.createElementNS(svgNS,'feMerge');\r\n        filter.appendChild(feMerge);\r\n        var feMergeNode;\r\n        feMergeNode = document.createElementNS(svgNS,'feMergeNode');\r\n        feMergeNode.setAttribute('in','SourceGraphic');\r\n        feMerge.appendChild(feMergeNode);\r\n        feMergeNode = document.createElementNS(svgNS,'feMergeNode');\r\n        feMergeNode.setAttribute('in','f2');\r\n        feMerge.appendChild(feMergeNode);\r\n    }\r\n}\r\n\r\nSVGTintFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager.mdf){\r\n        var colorBlack = this.filterManager.effectElements[0].p.v;\r\n        var colorWhite = this.filterManager.effectElements[1].p.v;\r\n        var opacity = this.filterManager.effectElements[2].p.v/100;\r\n        this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');\r\n    }\r\n};\nfunction SVGFillFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = document.createElementNS(svgNS,'feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n    feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\r\n    filter.appendChild(feColorMatrix);\r\n    this.matrixFilter = feColorMatrix;\r\n}\r\nSVGFillFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager.mdf){\r\n        var color = this.filterManager.effectElements[2].p.v;\r\n        var opacity = this.filterManager.effectElements[6].p.v;\r\n        this.matrixFilter.setAttribute('values','0 0 0 0 '+color[0]+' 0 0 0 0 '+color[1]+' 0 0 0 0 '+color[2]+' 0 0 0 '+opacity+' 0');\r\n    }\r\n};\nfunction SVGStrokeEffect(elem, filterManager){\r\n    this.initialized = false;\r\n    this.filterManager = filterManager;\r\n    this.elem = elem;\r\n    this.paths = [];\r\n}\r\n\r\nSVGStrokeEffect.prototype.initialize = function(){\r\n\r\n    var elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\r\n    var path,groupPath, i, len;\r\n    if(this.filterManager.effectElements[1].p.v === 1){\r\n        len = this.elem.maskManager.masksProperties.length;\r\n        i = 0;\r\n    } else {\r\n        i = this.filterManager.effectElements[0].p.v - 1;\r\n        len = i + 1;\r\n    }\r\n    groupPath = document.createElementNS(svgNS,'g'); \r\n    groupPath.setAttribute('fill','none');\r\n    groupPath.setAttribute('stroke-linecap','round');\r\n    groupPath.setAttribute('stroke-dashoffset',1);\r\n    for(i;i<len;i+=1){\r\n        path = document.createElementNS(svgNS,'path');\r\n        groupPath.appendChild(path);\r\n        this.paths.push({p:path,m:i});\r\n    }\r\n    if(this.filterManager.effectElements[10].p.v === 3){\r\n        var mask = document.createElementNS(svgNS,'mask');\r\n        var id = 'stms_' + randomString(10);\r\n        mask.setAttribute('id',id);\r\n        mask.setAttribute('mask-type','alpha');\r\n        mask.appendChild(groupPath);\r\n        this.elem.globalData.defs.appendChild(mask);\r\n        var g = document.createElementNS(svgNS,'g');\r\n        g.setAttribute('mask','url(' + locationHref + '#'+id+')');\r\n        if(elemChildren[0]){\r\n            g.appendChild(elemChildren[0]);\r\n        }\r\n        this.elem.layerElement.appendChild(g);\r\n        this.masker = mask;\r\n        groupPath.setAttribute('stroke','#fff');\r\n    } else if(this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2){\r\n        if(this.filterManager.effectElements[10].p.v === 2){\r\n            var elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\r\n            while(elemChildren.length){\r\n                this.elem.layerElement.removeChild(elemChildren[0]);\r\n            }\r\n        }\r\n        this.elem.layerElement.appendChild(groupPath);\r\n        this.elem.layerElement.removeAttribute('mask');\r\n        groupPath.setAttribute('stroke','#fff');\r\n    }\r\n    this.initialized = true;\r\n    this.pathMasker = groupPath;\r\n}\r\n\r\nSVGStrokeEffect.prototype.renderFrame = function(forceRender){\r\n    if(!this.initialized){\r\n        this.initialize();\r\n    }\r\n    var i, len = this.paths.length;\r\n    var mask, path;\r\n    for(i=0;i<len;i+=1){\r\n        mask = this.elem.maskManager.viewData[this.paths[i].m];\r\n        path = this.paths[i].p;\r\n        if(forceRender || this.filterManager.mdf || mask.prop.mdf){\r\n            path.setAttribute('d',mask.lastPath);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[9].p.mdf || this.filterManager.effectElements[4].p.mdf || this.filterManager.effectElements[7].p.mdf || this.filterManager.effectElements[8].p.mdf || mask.prop.mdf){\r\n            var dasharrayValue;\r\n            if(this.filterManager.effectElements[7].p.v !== 0 || this.filterManager.effectElements[8].p.v !== 100){\r\n                var s = Math.min(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)/100;\r\n                var e = Math.max(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)/100;\r\n                var l = path.getTotalLength();\r\n                dasharrayValue = '0 0 0 ' + l*s + ' ';\r\n                var lineLength = l*(e-s);\r\n                var segment = 1+this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100;\r\n                var units = Math.floor(lineLength/segment);\r\n                var j;\r\n                for(j=0;j<units;j+=1){\r\n                    dasharrayValue += '1 ' + this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100 + ' ';\r\n                }\r\n                dasharrayValue += '0 ' + l*10 + ' 0 0';\r\n            } else {\r\n                dasharrayValue = '1 ' + this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100;\r\n            }\r\n            path.setAttribute('stroke-dasharray',dasharrayValue);\r\n        }\r\n    }\r\n    if(forceRender || this.filterManager.effectElements[4].p.mdf){\r\n        this.pathMasker.setAttribute('stroke-width',this.filterManager.effectElements[4].p.v*2);\r\n    }\r\n    \r\n    if(forceRender || this.filterManager.effectElements[6].p.mdf){\r\n        this.pathMasker.setAttribute('opacity',this.filterManager.effectElements[6].p.v);\r\n    }\r\n    if(this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2){\r\n        if(forceRender || this.filterManager.effectElements[3].p.mdf){\r\n            var color = this.filterManager.effectElements[3].p.v;\r\n            this.pathMasker.setAttribute('stroke','rgb('+bm_floor(color[0]*255)+','+bm_floor(color[1]*255)+','+bm_floor(color[2]*255)+')');\r\n        }\r\n    }\r\n};\nfunction SVGTritoneFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = document.createElementNS(svgNS,'feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','linearRGB');\r\n    feColorMatrix.setAttribute('values','0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f1');\r\n    filter.appendChild(feColorMatrix);\r\n    var feComponentTransfer = document.createElementNS(svgNS,'feComponentTransfer');\r\n    feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n    filter.appendChild(feComponentTransfer);\r\n    this.matrixFilter = feComponentTransfer;\r\n    var feFuncR = document.createElementNS(svgNS,'feFuncR');\r\n    feFuncR.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncR);\r\n    this.feFuncR = feFuncR;\r\n    var feFuncG = document.createElementNS(svgNS,'feFuncG');\r\n    feFuncG.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncG);\r\n    this.feFuncG = feFuncG;\r\n    var feFuncB = document.createElementNS(svgNS,'feFuncB');\r\n    feFuncB.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncB);\r\n    this.feFuncB = feFuncB;\r\n}\r\n\r\nSVGTritoneFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager.mdf){\r\n        var color1 = this.filterManager.effectElements[0].p.v;\r\n        var color2 = this.filterManager.effectElements[1].p.v;\r\n        var color3 = this.filterManager.effectElements[2].p.v;\r\n        var tableR = color3[0] + ' ' + color2[0] + ' ' + color1[0]\r\n        var tableG = color3[1] + ' ' + color2[1] + ' ' + color1[1]\r\n        var tableB = color3[2] + ' ' + color2[2] + ' ' + color1[2]\r\n        this.feFuncR.setAttribute('tableValues', tableR);\r\n        this.feFuncG.setAttribute('tableValues', tableG);\r\n        this.feFuncB.setAttribute('tableValues', tableB);\r\n        //var opacity = this.filterManager.effectElements[2].p.v/100;\r\n        //this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');\r\n    }\r\n};\nfunction SVGProLevelsFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var effectElements = this.filterManager.effectElements;\r\n    var feComponentTransfer = document.createElementNS(svgNS,'feComponentTransfer');\r\n    var feFuncR, feFuncG, feFuncB;\r\n    \r\n    if(effectElements[9].p.k || effectElements[9].p.v !== 0 || effectElements[10].p.k || effectElements[10].p.v !== 1 || effectElements[11].p.k || effectElements[11].p.v !== 1 || effectElements[12].p.k || effectElements[12].p.v !== 0 || effectElements[13].p.k || effectElements[13].p.v !== 1){\r\n        this.feFuncR = this.createFeFunc('feFuncR', feComponentTransfer);\r\n    }\r\n    if(effectElements[16].p.k || effectElements[16].p.v !== 0 || effectElements[17].p.k || effectElements[17].p.v !== 1 || effectElements[18].p.k || effectElements[18].p.v !== 1 || effectElements[19].p.k || effectElements[19].p.v !== 0 || effectElements[20].p.k || effectElements[20].p.v !== 1){\r\n        this.feFuncG = this.createFeFunc('feFuncG', feComponentTransfer);\r\n    }\r\n    if(effectElements[23].p.k || effectElements[23].p.v !== 0 || effectElements[24].p.k || effectElements[24].p.v !== 1 || effectElements[25].p.k || effectElements[25].p.v !== 1 || effectElements[26].p.k || effectElements[26].p.v !== 0 || effectElements[27].p.k || effectElements[27].p.v !== 1){\r\n        this.feFuncB = this.createFeFunc('feFuncB', feComponentTransfer);\r\n    }\r\n    if(effectElements[30].p.k || effectElements[30].p.v !== 0 || effectElements[31].p.k || effectElements[31].p.v !== 1 || effectElements[32].p.k || effectElements[32].p.v !== 1 || effectElements[33].p.k || effectElements[33].p.v !== 0 || effectElements[34].p.k || effectElements[34].p.v !== 1){\r\n        this.feFuncA = this.createFeFunc('feFuncA', feComponentTransfer);\r\n    }\r\n    \r\n    if(this.feFuncR || this.feFuncG || this.feFuncB || this.feFuncA){\r\n        feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n        filter.appendChild(feComponentTransfer);\r\n        feComponentTransfer = document.createElementNS(svgNS,'feComponentTransfer');\r\n    }\r\n\r\n    if(effectElements[2].p.k || effectElements[2].p.v !== 0 || effectElements[3].p.k || effectElements[3].p.v !== 1 || effectElements[4].p.k || effectElements[4].p.v !== 1 || effectElements[5].p.k || effectElements[5].p.v !== 0 || effectElements[6].p.k || effectElements[6].p.v !== 1){\r\n\r\n        feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n        filter.appendChild(feComponentTransfer);\r\n        this.feFuncRComposed = this.createFeFunc('feFuncR', feComponentTransfer);\r\n        this.feFuncGComposed = this.createFeFunc('feFuncG', feComponentTransfer);\r\n        this.feFuncBComposed = this.createFeFunc('feFuncB', feComponentTransfer);\r\n    }\r\n}\r\n\r\nSVGProLevelsFilter.prototype.createFeFunc = function(type, feComponentTransfer) {\r\n    var feFunc = document.createElementNS(svgNS,type);\r\n    feFunc.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFunc);\r\n    return feFunc;\r\n};\r\n\r\nSVGProLevelsFilter.prototype.getTableValue = function(inputBlack, inputWhite, gamma, outputBlack, outputWhite) {\r\n    var cnt = 0;\r\n    var segments = 256;\r\n    var perc;\r\n    var min = Math.min(inputBlack, inputWhite);\r\n    var max = Math.max(inputBlack, inputWhite);\r\n    var table = Array.call(null,{length:segments});\r\n    var colorValue;\r\n    var pos = 0;\r\n    var outputDelta = outputWhite - outputBlack; \r\n    var inputDelta = inputWhite - inputBlack; \r\n    while(cnt <= 256) {\r\n        perc = cnt/256;\r\n        if(perc <= min){\r\n            colorValue = inputDelta < 0 ? outputWhite : outputBlack;\r\n        } else if(perc >= max){\r\n            colorValue = inputDelta < 0 ? outputBlack : outputWhite;\r\n        } else {\r\n            colorValue = (outputBlack + outputDelta * Math.pow((perc - inputBlack) / inputDelta, 1 / gamma));\r\n        }\r\n        table[pos++] = colorValue;\r\n        cnt += 256/(segments-1);\r\n    }\r\n    return table.join(' ');\r\n};\r\n\r\nSVGProLevelsFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager.mdf){\r\n        var val, cnt, perc, bezier;\r\n        var effectElements = this.filterManager.effectElements;\r\n        if(this.feFuncRComposed && (forceRender || effectElements[2].p.mdf || effectElements[3].p.mdf || effectElements[4].p.mdf || effectElements[5].p.mdf || effectElements[6].p.mdf)){\r\n            val = this.getTableValue(effectElements[2].p.v,effectElements[3].p.v,effectElements[4].p.v,effectElements[5].p.v,effectElements[6].p.v);\r\n            this.feFuncRComposed.setAttribute('tableValues',val);\r\n            this.feFuncGComposed.setAttribute('tableValues',val);\r\n            this.feFuncBComposed.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncR && (forceRender || effectElements[9].p.mdf || effectElements[10].p.mdf || effectElements[11].p.mdf || effectElements[12].p.mdf || effectElements[13].p.mdf)){\r\n            val = this.getTableValue(effectElements[9].p.v,effectElements[10].p.v,effectElements[11].p.v,effectElements[12].p.v,effectElements[13].p.v);\r\n            this.feFuncR.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncG && (forceRender || effectElements[16].p.mdf || effectElements[17].p.mdf || effectElements[18].p.mdf || effectElements[19].p.mdf || effectElements[20].p.mdf)){\r\n            val = this.getTableValue(effectElements[16].p.v,effectElements[17].p.v,effectElements[18].p.v,effectElements[19].p.v,effectElements[20].p.v);\r\n            this.feFuncG.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncB && (forceRender || effectElements[23].p.mdf || effectElements[24].p.mdf || effectElements[25].p.mdf || effectElements[26].p.mdf || effectElements[27].p.mdf)){\r\n            val = this.getTableValue(effectElements[23].p.v,effectElements[24].p.v,effectElements[25].p.v,effectElements[26].p.v,effectElements[27].p.v);\r\n            this.feFuncB.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncA && (forceRender || effectElements[30].p.mdf || effectElements[31].p.mdf || effectElements[32].p.mdf || effectElements[33].p.mdf || effectElements[34].p.mdf)){\r\n            val = this.getTableValue(effectElements[30].p.v,effectElements[31].p.v,effectElements[32].p.v,effectElements[33].p.v,effectElements[34].p.v);\r\n            this.feFuncA.setAttribute('tableValues',val);\r\n        }\r\n        \r\n    }\r\n};\nfunction SVGDropShadowEffect(filter, filterManager){\r\n    /*<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"3\"/> <!-- stdDeviation is how much to blur -->\r\n  <feOffset dx=\"2\" dy=\"2\" result=\"offsetblur\"/> <!-- how much to offset -->\r\n  <feMerge> \r\n    <feMergeNode/> <!-- this contains the offset blurred image -->\r\n    <feMergeNode in=\"SourceGraphic\"/> <!-- this contains the element that the filter is applied to -->\r\n  </feMerge>*/\r\n  /*<feFlood flood-color=\"#3D4574\" flood-opacity=\"0.5\" result=\"offsetColor\"/>*/\r\n    filter.setAttribute('x','-100%');\r\n    filter.setAttribute('y','-100%');\r\n    filter.setAttribute('width','400%');\r\n    filter.setAttribute('height','400%');\r\n    this.filterManager = filterManager;\r\n\r\n    var feGaussianBlur = document.createElementNS(svgNS,'feGaussianBlur');\r\n    feGaussianBlur.setAttribute('in','SourceAlpha');\r\n    feGaussianBlur.setAttribute('result','drop_shadow_1');\r\n    feGaussianBlur.setAttribute('stdDeviation','0');\r\n    this.feGaussianBlur = feGaussianBlur;\r\n    filter.appendChild(feGaussianBlur);\r\n\r\n    var feOffset = document.createElementNS(svgNS,'feOffset');\r\n    feOffset.setAttribute('dx','25');\r\n    feOffset.setAttribute('dy','0');\r\n    feOffset.setAttribute('in','drop_shadow_1');\r\n    feOffset.setAttribute('result','drop_shadow_2');\r\n    this.feOffset = feOffset;\r\n    filter.appendChild(feOffset);\r\n    var feFlood = document.createElementNS(svgNS,'feFlood');\r\n    feFlood.setAttribute('flood-color','#00ff00');\r\n    feFlood.setAttribute('flood-opacity','1');\r\n    feFlood.setAttribute('result','drop_shadow_3');\r\n    this.feFlood = feFlood;\r\n    filter.appendChild(feFlood);\r\n\r\n    var feComposite = document.createElementNS(svgNS,'feComposite');\r\n    feComposite.setAttribute('in','drop_shadow_3');\r\n    feComposite.setAttribute('in2','drop_shadow_2');\r\n    feComposite.setAttribute('operator','in');\r\n    feComposite.setAttribute('result','drop_shadow_4');\r\n    filter.appendChild(feComposite);\r\n\r\n\r\n    var feMerge = document.createElementNS(svgNS,'feMerge');\r\n    filter.appendChild(feMerge);\r\n    var feMergeNode;\r\n    feMergeNode = document.createElementNS(svgNS,'feMergeNode');\r\n    feMerge.appendChild(feMergeNode);\r\n    feMergeNode = document.createElementNS(svgNS,'feMergeNode');\r\n    feMergeNode.setAttribute('in','SourceGraphic');\r\n    this.feMergeNode = feMergeNode;\r\n    this.feMerge = feMerge;\r\n    this.originalNodeAdded = false;\r\n    feMerge.appendChild(feMergeNode);\r\n}\r\n\r\nSVGDropShadowEffect.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager.mdf){\r\n        if(forceRender || this.filterManager.effectElements[4].p.mdf){\r\n            this.feGaussianBlur.setAttribute('stdDeviation', this.filterManager.effectElements[4].p.v / 4);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[0].p.mdf){\r\n            var col = this.filterManager.effectElements[0].p.v;\r\n            this.feFlood.setAttribute('flood-color',rgbToHex(Math.round(col[0]*255),Math.round(col[1]*255),Math.round(col[2]*255)));\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[1].p.mdf){\r\n            this.feFlood.setAttribute('flood-opacity',this.filterManager.effectElements[1].p.v/255);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[2].p.mdf || this.filterManager.effectElements[3].p.mdf){\r\n            var distance = this.filterManager.effectElements[3].p.v\r\n            var angle = (this.filterManager.effectElements[2].p.v - 90) * degToRads\r\n            var x = distance * Math.cos(angle)\r\n            var y = distance * Math.sin(angle)\r\n            this.feOffset.setAttribute('dx', x);\r\n            this.feOffset.setAttribute('dy', y);\r\n        }\r\n        /*if(forceRender || this.filterManager.effectElements[5].p.mdf){\r\n            if(this.filterManager.effectElements[5].p.v === 1 && this.originalNodeAdded) {\r\n                this.feMerge.removeChild(this.feMergeNode);\r\n                this.originalNodeAdded = false;\r\n            } else if(this.filterManager.effectElements[5].p.v === 0 && !this.originalNodeAdded) {\r\n                this.feMerge.appendChild(this.feMergeNode);\r\n                this.originalNodeAdded = true;\r\n            }\r\n        }*/\r\n    }\r\n};\nfunction SVGMatte3Effect(filterElem, filterManager, elem){\r\n    this.initialized = false;\r\n    this.filterManager = filterManager;\r\n    this.filterElem = filterElem;\r\n    this.elem = elem;\r\n    elem.matteElement = document.createElementNS(svgNS,'g');\r\n    elem.matteElement.appendChild(elem.layerElement);\r\n    elem.matteElement.appendChild(elem.transformedElement);\r\n    elem.baseElement = elem.matteElement;\r\n}\r\n\r\nSVGMatte3Effect.prototype.setElementAsMask = function(elem, mask) {\r\n    var masker = document.createElementNS(svgNS,'mask');\r\n    masker.setAttribute('id',mask.layerId);\r\n    masker.setAttribute('mask-type','alpha');\r\n    masker.appendChild(mask.layerElement);\r\n    elem.setMatte(mask.layerId);\r\n    mask.data.hd = false;\r\n    var defs = elem.globalData.defs;\r\n    defs.appendChild(masker);\r\n}\r\n\r\nSVGMatte3Effect.prototype.initialize = function() {\r\n    var ind = this.filterManager.effectElements[0].p.v;\r\n    var i = 0, len = this.elem.comp.elements.length;\r\n    while(i < len) {\r\n    \tif(this.elem.comp.elements[i].data.ind === ind) {\r\n    \t\tthis.setElementAsMask(this.elem, this.elem.comp.elements[i]);\r\n    \t}\r\n    \ti += 1;\r\n    }\r\n    this.initialized = true;\r\n}\r\n\r\nSVGMatte3Effect.prototype.renderFrame = function() {\r\n\tif(!this.initialized) {\r\n\t\tthis.initialize();\r\n\t}\r\n}\nfunction SVGEffects(elem){\r\n    var i, len = elem.data.ef.length;\r\n    var filId = randomString(10);\r\n    var fil = filtersFactory.createFilter(filId);\r\n    var count = 0;\r\n    this.filters = [];\r\n    var filterManager;\r\n    for(i=0;i<len;i+=1){\r\n        if(elem.data.ef[i].ty === 20){\r\n            count += 1;\r\n            filterManager = new SVGTintFilter(fil, elem.effects.effectElements[i]);\r\n            this.filters.push(filterManager);\r\n        }else if(elem.data.ef[i].ty === 21){\r\n            count += 1;\r\n            filterManager = new SVGFillFilter(fil, elem.effects.effectElements[i]);\r\n            this.filters.push(filterManager);\r\n        }else if(elem.data.ef[i].ty === 22){\r\n            filterManager = new SVGStrokeEffect(elem, elem.effects.effectElements[i]);\r\n            this.filters.push(filterManager);\r\n        }else if(elem.data.ef[i].ty === 23){\r\n            count += 1;\r\n            filterManager = new SVGTritoneFilter(fil, elem.effects.effectElements[i]);\r\n            this.filters.push(filterManager);\r\n        }else if(elem.data.ef[i].ty === 24){\r\n            count += 1;\r\n            filterManager = new SVGProLevelsFilter(fil, elem.effects.effectElements[i]);\r\n            this.filters.push(filterManager);\r\n        }else if(elem.data.ef[i].ty === 25){\r\n            count += 1;\r\n            filterManager = new SVGDropShadowEffect(fil, elem.effects.effectElements[i]);\r\n            this.filters.push(filterManager);\r\n        }else if(elem.data.ef[i].ty === 28){\r\n            //count += 1;\r\n            filterManager = new SVGMatte3Effect(fil, elem.effects.effectElements[i], elem);\r\n            this.filters.push(filterManager);\r\n        }\r\n    }\r\n    if(count){\r\n        elem.globalData.defs.appendChild(fil);\r\n        elem.layerElement.setAttribute('filter','url(' + locationHref + '#'+filId+')');\r\n    }\r\n}\r\n\r\nSVGEffects.prototype.renderFrame = function(firstFrame){\r\n    var i, len = this.filters.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.filters[i].renderFrame(firstFrame);\r\n    }\r\n};\nfunction ICompElement(data,parentContainer,globalData,comp, placeholder){\r\n    this._parent.constructor.call(this,data,parentContainer,globalData,comp, placeholder);\r\n    this.layers = data.layers;\r\n    this.supports3d = true;\r\n    this.completeLayers = false;\r\n    this.pendingElements = [];\r\n    this.elements = this.layers ? Array.apply(null,{length:this.layers.length}) : [];\r\n    if(this.data.tm){\r\n        this.tm = PropertyFactory.getProp(this,this.data.tm,0,globalData.frameRate,this.dynamicProperties);\r\n    }\r\n    if(this.data.xt){\r\n        this.layerElement = document.createElementNS(svgNS,'g');\r\n        this.buildAllItems();\r\n    } else if(!globalData.progressiveLoad){\r\n        this.buildAllItems();\r\n    }\r\n}\r\ncreateElement(SVGBaseElement, ICompElement);\r\n\r\nICompElement.prototype.hide = function(){\r\n    if(!this.hidden){\r\n        this._parent.hide.call(this);\r\n        var i,len = this.elements.length;\r\n        for( i = 0; i < len; i+=1 ){\r\n            if(this.elements[i]){\r\n                this.elements[i].hide();\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.prepareFrame = function(num){\r\n    this._parent.prepareFrame.call(this,num);\r\n    if(this.isVisible===false && !this.data.xt){\r\n        return;\r\n    }\r\n\r\n    if(this.tm){\r\n        var timeRemapped = this.tm.v;\r\n        if(timeRemapped === this.data.op){\r\n            timeRemapped = this.data.op - 1;\r\n        }\r\n        this.renderedFrame = timeRemapped;\r\n    } else {\r\n        this.renderedFrame = num/this.data.sr;\r\n    }\r\n    var i,len = this.elements.length;\r\n    if(!this.completeLayers){\r\n        this.checkLayers(this.renderedFrame);\r\n    }\r\n    for( i = 0; i < len; i+=1 ){\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].prepareFrame(this.renderedFrame - this.layers[i].st);\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.renderFrame = function(parentMatrix){\r\n    var renderParent = this._parent.renderFrame.call(this,parentMatrix);\r\n    var i,len = this.layers.length;\r\n    if(renderParent===false){\r\n        this.hide();\r\n        return;\r\n    }\r\n\r\n    if(this.hidden) {\r\n        this.show();\r\n    }\r\n    for( i = 0; i < len; i+=1 ){\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].renderFrame();\r\n        }\r\n    }\r\n    if(this.firstFrame){\r\n        this.firstFrame = false;\r\n    }\r\n};\r\n\r\nICompElement.prototype.setElements = function(elems){\r\n    this.elements = elems;\r\n};\r\n\r\nICompElement.prototype.getElements = function(){\r\n    return this.elements;\r\n};\r\n\r\nICompElement.prototype.destroy = function(){\r\n    this._parent.destroy.call(this._parent);\r\n    var i,len = this.layers.length;\r\n    for( i = 0; i < len; i+=1 ){\r\n        if(this.elements[i]){\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.checkLayers = SVGRenderer.prototype.checkLayers;\r\nICompElement.prototype.buildItem = SVGRenderer.prototype.buildItem;\r\nICompElement.prototype.buildAllItems = SVGRenderer.prototype.buildAllItems;\r\nICompElement.prototype.buildElementParenting = SVGRenderer.prototype.buildElementParenting;\r\nICompElement.prototype.createItem = SVGRenderer.prototype.createItem;\r\nICompElement.prototype.createImage = SVGRenderer.prototype.createImage;\r\nICompElement.prototype.createComp = SVGRenderer.prototype.createComp;\r\nICompElement.prototype.createSolid = SVGRenderer.prototype.createSolid;\r\nICompElement.prototype.createShape = SVGRenderer.prototype.createShape;\r\nICompElement.prototype.createText = SVGRenderer.prototype.createText;\r\nICompElement.prototype.createBase = SVGRenderer.prototype.createBase;\r\nICompElement.prototype.appendElementInPos = SVGRenderer.prototype.appendElementInPos;\r\nICompElement.prototype.checkPendingElements = SVGRenderer.prototype.checkPendingElements;\r\nICompElement.prototype.addPendingElement = SVGRenderer.prototype.addPendingElement;\nfunction IImageElement(data,parentContainer,globalData,comp,placeholder){\r\n    this.assetData = globalData.getAssetData(data.refId);\r\n    this._parent.constructor.call(this,data,parentContainer,globalData,comp,placeholder);\r\n}\r\ncreateElement(SVGBaseElement, IImageElement);\r\n\r\nIImageElement.prototype.createElements = function(){\r\n\r\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\r\n\r\n    this._parent.createElements.call(this);\r\n\r\n    this.innerElem = document.createElementNS(svgNS,'image');\r\n    this.innerElem.setAttribute('width',this.assetData.w+\"px\");\r\n    this.innerElem.setAttribute('height',this.assetData.h+\"px\");\r\n    this.innerElem.setAttribute('preserveAspectRatio','xMidYMid slice');\r\n    this.innerElem.setAttributeNS('http://www.w3.org/1999/xlink','href',assetPath);\r\n    this.maskedElement = this.innerElem;\r\n    this.layerElement.appendChild(this.innerElem);\r\n    if(this.data.ln){\r\n        this.layerElement.setAttribute('id',this.data.ln);\r\n    }\r\n    if(this.data.cl){\r\n        this.layerElement.setAttribute('class',this.data.cl);\r\n    }\r\n\r\n};\r\n\r\nIImageElement.prototype.renderFrame = function(parentMatrix){\r\n    var renderParent = this._parent.renderFrame.call(this,parentMatrix);\r\n    if(renderParent===false){\r\n        this.hide();\r\n        return;\r\n    }\r\n    if(this.hidden){\r\n        this.show();\r\n    }\r\n    if(this.firstFrame){\r\n        this.firstFrame = false;\r\n    }\r\n};\r\n\r\nIImageElement.prototype.destroy = function(){\r\n    this._parent.destroy.call(this._parent);\r\n    this.innerElem =  null;\r\n};\nfunction ISolidElement(data,parentContainer,globalData,comp, placeholder){\r\n    this._parent.constructor.call(this,data,parentContainer,globalData,comp, placeholder);\r\n}\r\ncreateElement(SVGBaseElement, ISolidElement);\r\n\r\nISolidElement.prototype.createElements = function(){\r\n    this._parent.createElements.call(this);\r\n\r\n    var rect = document.createElementNS(svgNS,'rect');\r\n    ////rect.style.width = this.data.sw;\r\n    ////rect.style.height = this.data.sh;\r\n    ////rect.style.fill = this.data.sc;\r\n    rect.setAttribute('width',this.data.sw);\r\n    rect.setAttribute('height',this.data.sh);\r\n    rect.setAttribute('fill',this.data.sc);\r\n    this.layerElement.appendChild(rect);\r\n    this.innerElem = rect;\r\n    if(this.data.ln){\r\n        this.layerElement.setAttribute('id',this.data.ln);\r\n    }\r\n    if(this.data.cl){\r\n        this.layerElement.setAttribute('class',this.data.cl);\r\n    }\r\n};\r\n\r\nISolidElement.prototype.renderFrame = IImageElement.prototype.renderFrame;\r\nISolidElement.prototype.destroy = IImageElement.prototype.destroy;\r\n\nvar animationManager = (function(){\r\n    var moduleOb = {};\r\n    var registeredAnimations = [];\r\n    var initTime = 0;\r\n    var len = 0;\r\n    var idled = true;\r\n    var playingAnimationsNum = 0;\r\n\r\n    function removeElement(ev){\r\n        var i = 0;\r\n        var animItem = ev.target;\r\n        while(i<len) {\r\n            if (registeredAnimations[i].animation === animItem) {\r\n                registeredAnimations.splice(i, 1);\r\n                i -= 1;\r\n                len -= 1;\r\n                if(!animItem.isPaused){\r\n                    subtractPlayingCount();\r\n                }\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    function registerAnimation(element, animationData){\r\n        if(!element){\r\n            return null;\r\n        }\r\n        var i=0;\r\n        while(i<len){\r\n            if(registeredAnimations[i].elem == element && registeredAnimations[i].elem !== null ){\r\n                return registeredAnimations[i].animation;\r\n            }\r\n            i+=1;\r\n        }\r\n        var animItem = new AnimationItem();\r\n        setupAnimation(animItem, element);\r\n        animItem.setData(element, animationData);\r\n        return animItem;\r\n    }\r\n\r\n    function addPlayingCount(){\r\n        playingAnimationsNum += 1;\r\n        activate();\r\n    }\r\n\r\n    function subtractPlayingCount(){\r\n        playingAnimationsNum -= 1;\r\n        if(playingAnimationsNum === 0){\r\n            idled = true;\r\n        }\r\n    }\r\n\r\n    function setupAnimation(animItem, element){\r\n        animItem.addEventListener('destroy',removeElement);\r\n        animItem.addEventListener('_active',addPlayingCount);\r\n        animItem.addEventListener('_idle',subtractPlayingCount);\r\n        registeredAnimations.push({elem: element,animation:animItem});\r\n        len += 1;\r\n    }\r\n\r\n    function loadAnimation(params){\r\n        var animItem = new AnimationItem();\r\n        setupAnimation(animItem, null);\r\n        animItem.setParams(params);\r\n        return animItem;\r\n    }\r\n\r\n\r\n    function setSpeed(val,animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.setSpeed(val, animation);\r\n        }\r\n    }\r\n\r\n    function setDirection(val, animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.setDirection(val, animation);\r\n        }\r\n    }\r\n\r\n    function play(animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.play(animation);\r\n        }\r\n    }\r\n\r\n    function moveFrame (value, animation) {\r\n        initTime = Date.now();\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.moveFrame(value,animation);\r\n        }\r\n    }\r\n\r\n    function resume(nowTime) {\r\n\r\n        var elapsedTime = nowTime - initTime;\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.advanceTime(elapsedTime);\r\n        }\r\n        initTime = nowTime;\r\n        if(!idled) {\r\n            window.requestAnimationFrame(resume);\r\n        }\r\n    }\r\n\r\n    function first(nowTime){\r\n        initTime = nowTime;\r\n        window.requestAnimationFrame(resume);\r\n    }\r\n\r\n    function pause(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.pause(animation);\r\n        }\r\n    }\r\n\r\n    function goToAndStop(value,isFrame,animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.goToAndStop(value,isFrame,animation);\r\n        }\r\n    }\r\n\r\n    function stop(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.stop(animation);\r\n        }\r\n    }\r\n\r\n    function togglePause(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.togglePause(animation);\r\n        }\r\n    }\r\n\r\n    function destroy(animation) {\r\n        var i;\r\n        for(i=(len-1);i>=0;i-=1){\r\n            registeredAnimations[i].animation.destroy(animation);\r\n        }\r\n    }\r\n\r\n    function searchAnimations(animationData, standalone, renderer){\r\n        var animElements = document.getElementsByClassName('bodymovin');\r\n        var i, len = animElements.length;\r\n        for(i=0;i<len;i+=1){\r\n            if(renderer){\r\n                animElements[i].setAttribute('data-bm-type',renderer);\r\n            }\r\n            registerAnimation(animElements[i], animationData);\r\n        }\r\n        if(standalone && len === 0){\r\n            if(!renderer){\r\n                renderer = 'svg';\r\n            }\r\n            var body = document.getElementsByTagName('body')[0];\r\n            body.innerHTML = '';\r\n            var div = document.createElement('div');\r\n            div.style.width = '100%';\r\n            div.style.height = '100%';\r\n            div.setAttribute('data-bm-type',renderer);\r\n            body.appendChild(div);\r\n            registerAnimation(div, animationData);\r\n        }\r\n    }\r\n\r\n    function resize(){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.resize();\r\n        }\r\n    }\r\n\r\n    function start(){\r\n        window.requestAnimationFrame(first);\r\n    }\r\n\r\n    function activate(){\r\n        if(idled){\r\n            idled = false;\r\n            window.requestAnimationFrame(first);\r\n        }\r\n    }\r\n\r\n    //start();\r\n\r\n    setTimeout(start,0);\r\n\r\n    moduleOb.registerAnimation = registerAnimation;\r\n    moduleOb.loadAnimation = loadAnimation;\r\n    moduleOb.setSpeed = setSpeed;\r\n    moduleOb.setDirection = setDirection;\r\n    moduleOb.play = play;\r\n    moduleOb.moveFrame = moveFrame;\r\n    moduleOb.pause = pause;\r\n    moduleOb.stop = stop;\r\n    moduleOb.togglePause = togglePause;\r\n    moduleOb.searchAnimations = searchAnimations;\r\n    moduleOb.resize = resize;\r\n    moduleOb.start = start;\r\n    moduleOb.goToAndStop = goToAndStop;\r\n    moduleOb.destroy = destroy;\r\n    return moduleOb;\r\n}());\r\n\nvar AnimationItem = function () {\r\n    this._cbs = [];\r\n    this.name = '';\r\n    this.path = '';\r\n    this.isLoaded = false;\r\n    this.currentFrame = 0;\r\n    this.currentRawFrame = 0;\r\n    this.totalFrames = 0;\r\n    this.frameRate = 0;\r\n    this.frameMult = 0;\r\n    this.playSpeed = 1;\r\n    this.playDirection = 1;\r\n    this.pendingElements = 0;\r\n    this.playCount = 0;\r\n    this.prerenderFramesFlag = true;\r\n    this.animationData = {};\r\n    this.layers = [];\r\n    this.assets = [];\r\n    this.isPaused = true;\r\n    this.autoplay = false;\r\n    this.loop = true;\r\n    this.renderer = null;\r\n    this.animationID = randomString(10);\r\n    this.scaleMode = 'fit';\r\n    this.assetsPath = '';\r\n    this.timeCompleted = 0;\r\n    this.segmentPos = 0;\r\n    this.subframeEnabled = subframeEnabled;\r\n    this.segments = [];\r\n    this.pendingSegment = false;\r\n    this._idle = true;\r\n    this.projectInterface = ProjectInterface();\r\n};\r\n\r\nAnimationItem.prototype.setParams = function(params) {\r\n    var self = this;\r\n    if(params.context){\r\n        this.context = params.context;\r\n    }\r\n    if(params.wrapper || params.container){\r\n        this.wrapper = params.wrapper || params.container;\r\n    }\r\n    var animType = params.animType ? params.animType : params.renderer ? params.renderer : 'svg';\r\n    switch(animType){\r\n        case 'canvas':\r\n            this.renderer = new CanvasRenderer(this, params.rendererSettings);\r\n            break;\r\n        case 'svg':\r\n            this.renderer = new SVGRenderer(this, params.rendererSettings);\r\n            break;\r\n        case 'hybrid':\r\n        case 'html':\r\n        default:\r\n            this.renderer = new HybridRenderer(this, params.rendererSettings);\r\n            break;\r\n    }\r\n    this.renderer.setProjectInterface(this.projectInterface);\r\n    this.animType = animType;\r\n\r\n    if(params.loop === '' || params.loop === null){\r\n    }else if(params.loop === false){\r\n        this.loop = false;\r\n    }else if(params.loop === true){\r\n        this.loop = true;\r\n    }else{\r\n        this.loop = parseInt(params.loop);\r\n    }\r\n    this.autoplay = 'autoplay' in params ? params.autoplay : true;\r\n    this.name = params.name ? params.name :  '';\r\n    this.prerenderFramesFlag = 'prerender' in params ? params.prerender : true;\r\n    this.autoloadSegments = params.hasOwnProperty('autoloadSegments') ? params.autoloadSegments :  true;\r\n    if(params.animationData){\r\n        self.configAnimation(params.animationData);\r\n    }else if(params.path){\r\n        if(params.path.substr(-4) != 'json'){\r\n            if (params.path.substr(-1, 1) != '/') {\r\n                params.path += '/';\r\n            }\r\n            params.path += 'data.json';\r\n        }\r\n\r\n        var xhr = new XMLHttpRequest();\r\n        if(params.path.lastIndexOf('\\\\') != -1){\r\n            this.path = params.path.substr(0,params.path.lastIndexOf('\\\\')+1);\r\n        }else{\r\n            this.path = params.path.substr(0,params.path.lastIndexOf('/')+1);\r\n        }\r\n        this.assetsPath = params.assetsPath;\r\n        this.fileName = params.path.substr(params.path.lastIndexOf('/')+1);\r\n        this.fileName = this.fileName.substr(0,this.fileName.lastIndexOf('.json'));\r\n        xhr.open('GET', params.path, true);\r\n        xhr.send();\r\n        xhr.onreadystatechange = function () {\r\n            if (xhr.readyState == 4) {\r\n                if(xhr.status == 200){\r\n                    self.configAnimation(JSON.parse(xhr.responseText));\r\n                }else{\r\n                    try{\r\n                        var response = JSON.parse(xhr.responseText);\r\n                        self.configAnimation(response);\r\n                    }catch(err){\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.setData = function (wrapper, animationData) {\r\n    var params = {\r\n        wrapper: wrapper,\r\n        animationData: animationData ? (typeof animationData  === \"object\") ? animationData : JSON.parse(animationData) : null\r\n    };\r\n    var wrapperAttributes = wrapper.attributes;\r\n\r\n    params.path = wrapperAttributes.getNamedItem('data-animation-path') ? wrapperAttributes.getNamedItem('data-animation-path').value : wrapperAttributes.getNamedItem('data-bm-path') ? wrapperAttributes.getNamedItem('data-bm-path').value :  wrapperAttributes.getNamedItem('bm-path') ? wrapperAttributes.getNamedItem('bm-path').value : '';\r\n    params.animType = wrapperAttributes.getNamedItem('data-anim-type') ? wrapperAttributes.getNamedItem('data-anim-type').value : wrapperAttributes.getNamedItem('data-bm-type') ? wrapperAttributes.getNamedItem('data-bm-type').value : wrapperAttributes.getNamedItem('bm-type') ? wrapperAttributes.getNamedItem('bm-type').value :  wrapperAttributes.getNamedItem('data-bm-renderer') ? wrapperAttributes.getNamedItem('data-bm-renderer').value : wrapperAttributes.getNamedItem('bm-renderer') ? wrapperAttributes.getNamedItem('bm-renderer').value : 'canvas';\r\n\r\n    var loop = wrapperAttributes.getNamedItem('data-anim-loop') ? wrapperAttributes.getNamedItem('data-anim-loop').value :  wrapperAttributes.getNamedItem('data-bm-loop') ? wrapperAttributes.getNamedItem('data-bm-loop').value :  wrapperAttributes.getNamedItem('bm-loop') ? wrapperAttributes.getNamedItem('bm-loop').value : '';\r\n    if(loop === ''){\r\n    }else if(loop === 'false'){\r\n        params.loop = false;\r\n    }else if(loop === 'true'){\r\n        params.loop = true;\r\n    }else{\r\n        params.loop = parseInt(loop);\r\n    }\r\n    var autoplay = wrapperAttributes.getNamedItem('data-anim-autoplay') ? wrapperAttributes.getNamedItem('data-anim-autoplay').value :  wrapperAttributes.getNamedItem('data-bm-autoplay') ? wrapperAttributes.getNamedItem('data-bm-autoplay').value :  wrapperAttributes.getNamedItem('bm-autoplay') ? wrapperAttributes.getNamedItem('bm-autoplay').value : true;\r\n    params.autoplay = autoplay !== \"false\";\r\n\r\n    params.name = wrapperAttributes.getNamedItem('data-name') ? wrapperAttributes.getNamedItem('data-name').value :  wrapperAttributes.getNamedItem('data-bm-name') ? wrapperAttributes.getNamedItem('data-bm-name').value : wrapperAttributes.getNamedItem('bm-name') ? wrapperAttributes.getNamedItem('bm-name').value :  '';\r\n    var prerender = wrapperAttributes.getNamedItem('data-anim-prerender') ? wrapperAttributes.getNamedItem('data-anim-prerender').value :  wrapperAttributes.getNamedItem('data-bm-prerender') ? wrapperAttributes.getNamedItem('data-bm-prerender').value :  wrapperAttributes.getNamedItem('bm-prerender') ? wrapperAttributes.getNamedItem('bm-prerender').value : '';\r\n\r\n    if(prerender === 'false'){\r\n        params.prerender = false;\r\n    }\r\n    this.setParams(params);\r\n};\r\n\r\nAnimationItem.prototype.includeLayers = function(data) {\r\n    if(data.op > this.animationData.op){\r\n        this.animationData.op = data.op;\r\n        this.totalFrames = Math.floor(data.op - this.animationData.ip);\r\n        this.animationData.tf = this.totalFrames;\r\n    }\r\n    var layers = this.animationData.layers;\r\n    var i, len = layers.length;\r\n    var newLayers = data.layers;\r\n    var j, jLen = newLayers.length;\r\n    for(j=0;j<jLen;j+=1){\r\n        i = 0;\r\n        while(i<len){\r\n            if(layers[i].id == newLayers[j].id){\r\n                layers[i] = newLayers[j];\r\n                break;\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n    if(data.chars || data.fonts){\r\n        this.renderer.globalData.fontManager.addChars(data.chars);\r\n        this.renderer.globalData.fontManager.addFonts(data.fonts, this.renderer.globalData.defs);\r\n    }\r\n    if(data.assets){\r\n        len = data.assets.length;\r\n        for(i = 0; i < len; i += 1){\r\n            this.animationData.assets.push(data.assets[i]);\r\n        }\r\n    }\r\n    //this.totalFrames = 50;\r\n    //this.animationData.tf = 50;\r\n    this.animationData.__complete = false;\r\n    dataManager.completeData(this.animationData,this.renderer.globalData.fontManager);\r\n    this.renderer.includeLayers(data.layers);\r\n    if(expressionsPlugin){\r\n        expressionsPlugin.initExpressions(this);\r\n    }\r\n    this.renderer.renderFrame(null);\r\n    this.loadNextSegment();\r\n};\r\n\r\nAnimationItem.prototype.loadNextSegment = function() {\r\n    var segments = this.animationData.segments;\r\n    if(!segments || segments.length === 0 || !this.autoloadSegments){\r\n        this.trigger('data_ready');\r\n        this.timeCompleted = this.animationData.tf;\r\n        return;\r\n    }\r\n    var segment = segments.shift();\r\n    this.timeCompleted = segment.time * this.frameRate;\r\n    var xhr = new XMLHttpRequest();\r\n    var self = this;\r\n    var segmentPath = this.path+this.fileName+'_' + this.segmentPos + '.json';\r\n    this.segmentPos += 1;\r\n    xhr.open('GET', segmentPath, true);\r\n    xhr.send();\r\n    xhr.onreadystatechange = function () {\r\n        if (xhr.readyState == 4) {\r\n            if(xhr.status == 200){\r\n                self.includeLayers(JSON.parse(xhr.responseText));\r\n            }else{\r\n                try{\r\n                    var response = JSON.parse(xhr.responseText);\r\n                    self.includeLayers(response);\r\n                }catch(err){\r\n                }\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\nAnimationItem.prototype.loadSegments = function() {\r\n    var segments = this.animationData.segments;\r\n    if(!segments) {\r\n        this.timeCompleted = this.animationData.tf;\r\n    }\r\n    this.loadNextSegment();\r\n};\r\n\r\nAnimationItem.prototype.configAnimation = function (animData) {\r\n    var _this = this;\r\n    if(this.renderer && this.renderer.destroyed){\r\n        return;\r\n    }\r\n    //console.log(JSON.parse(JSON.stringify(animData)));\r\n    //animData.w = Math.round(animData.w/blitter);\r\n    //animData.h = Math.round(animData.h/blitter);\r\n    this.animationData = animData;\r\n    this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip);\r\n    this.animationData.tf = this.totalFrames;\r\n    this.renderer.configAnimation(animData);\r\n    if(!animData.assets){\r\n        animData.assets = [];\r\n    }\r\n    if(animData.comps) {\r\n        animData.assets = animData.assets.concat(animData.comps);\r\n        animData.comps = null;\r\n    }\r\n    this.renderer.searchExtraCompositions(animData.assets);\r\n\r\n    this.layers = this.animationData.layers;\r\n    this.assets = this.animationData.assets;\r\n    this.frameRate = this.animationData.fr;\r\n    this.firstFrame = Math.round(this.animationData.ip);\r\n    this.frameMult = this.animationData.fr / 1000;\r\n    this.trigger('config_ready');\r\n    this.imagePreloader = new ImagePreloader();\r\n    this.imagePreloader.setAssetsPath(this.assetsPath);\r\n    this.imagePreloader.setPath(this.path);\r\n    this.imagePreloader.loadAssets(animData.assets, function(err) {\r\n        if(!err) {\r\n            _this.trigger('loaded_images');\r\n        }\r\n    });\r\n    this.loadSegments();\r\n    this.updaFrameModifier();\r\n    if(this.renderer.globalData.fontManager){\r\n        this.waitForFontsLoaded();\r\n    }else{\r\n        dataManager.completeData(this.animationData,this.renderer.globalData.fontManager);\r\n        this.checkLoaded();\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.waitForFontsLoaded = (function(){\r\n    function checkFontsLoaded(){\r\n        if(this.renderer.globalData.fontManager.loaded){\r\n            dataManager.completeData(this.animationData,this.renderer.globalData.fontManager);\r\n            //this.renderer.buildItems(this.animationData.layers);\r\n            this.checkLoaded();\r\n        }else{\r\n            setTimeout(checkFontsLoaded.bind(this),20);\r\n        }\r\n    }\r\n\r\n    return function(){\r\n        checkFontsLoaded.bind(this)();\r\n    }\r\n}());\r\n\r\nAnimationItem.prototype.addPendingElement = function () {\r\n    this.pendingElements += 1;\r\n}\r\n\r\nAnimationItem.prototype.elementLoaded = function () {\r\n    this.pendingElements--;\r\n    this.checkLoaded();\r\n};\r\n\r\nAnimationItem.prototype.checkLoaded = function () {\r\n    if (this.pendingElements === 0) {\r\n        if(expressionsPlugin){\r\n            expressionsPlugin.initExpressions(this);\r\n        }\r\n        this.renderer.initItems();\r\n        setTimeout(function(){\r\n            this.trigger('DOMLoaded');\r\n        }.bind(this),0);\r\n        this.isLoaded = true;\r\n        this.gotoFrame();\r\n        if(this.autoplay){\r\n            this.play();\r\n        }\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.resize = function () {\r\n    this.renderer.updateContainerSize();\r\n};\r\n\r\nAnimationItem.prototype.setSubframe = function(flag){\r\n    this.subframeEnabled = flag ? true : false;\r\n}\r\n\r\nAnimationItem.prototype.gotoFrame = function () {\r\n    if(this.subframeEnabled){\r\n        this.currentFrame = this.currentRawFrame;\r\n    }else{\r\n        this.currentFrame = Math.floor(this.currentRawFrame);\r\n    }\r\n\r\n    if(this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted){\r\n        this.currentFrame = this.timeCompleted;\r\n    }\r\n    this.trigger('enterFrame');\r\n    this.renderFrame();\r\n};\r\n\r\nAnimationItem.prototype.renderFrame = function () {\r\n    if(this.isLoaded === false){\r\n        return;\r\n    }\r\n    //console.log('this.currentFrame:',this.currentFrame + this.firstFrame);\r\n    this.renderer.renderFrame(this.currentFrame + this.firstFrame);\r\n};\r\n\r\nAnimationItem.prototype.play = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === true){\r\n        this.isPaused = false;\r\n        if(this._idle){\r\n            this._idle = false;\r\n            this.trigger('_active');\r\n        }\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.pause = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === false){\r\n        this.isPaused = true;\r\n        if(!this.pendingSegment){\r\n            this._idle = true;\r\n            this.trigger('_idle');\r\n        }\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.togglePause = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === true){\r\n        this.play();\r\n    }else{\r\n        this.pause();\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.stop = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    this.pause();\r\n    this.currentFrame = this.currentRawFrame = 0;\r\n    this.playCount = 0;\r\n    this.gotoFrame();\r\n};\r\n\r\nAnimationItem.prototype.goToAndStop = function (value, isFrame, name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(isFrame){\r\n        this.setCurrentRawFrameValue(value);\r\n    }else{\r\n        this.setCurrentRawFrameValue(value * this.frameModifier);\r\n    }\r\n    this.pause();\r\n};\r\n\r\nAnimationItem.prototype.goToAndPlay = function (value, isFrame, name) {\r\n    this.goToAndStop(value, isFrame, name);\r\n    this.play();\r\n};\r\n\r\nAnimationItem.prototype.advanceTime = function (value) {\r\n    if(this.pendingSegment){\r\n        this.pendingSegment = false;\r\n        this.adjustSegment(this.segments.shift());\r\n        if(this.isPaused){\r\n            this.play();\r\n        }\r\n        return;\r\n    }\r\n    if (this.isPaused === true || this.isLoaded === false) {\r\n        return;\r\n    }\r\n    this.setCurrentRawFrameValue(this.currentRawFrame + value * this.frameModifier);\r\n};\r\n\r\nAnimationItem.prototype.updateAnimation = function (perc) {\r\n    this.setCurrentRawFrameValue(this.totalFrames * perc);\r\n};\r\n\r\nAnimationItem.prototype.moveFrame = function (value, name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    this.setCurrentRawFrameValue(this.currentRawFrame+value);\r\n};\r\n\r\nAnimationItem.prototype.adjustSegment = function(arr){\r\n    this.playCount = 0;\r\n    if(arr[1] < arr[0]){\r\n        if(this.frameModifier > 0){\r\n            if(this.playSpeed < 0){\r\n                this.setSpeed(-this.playSpeed);\r\n            } else {\r\n                this.setDirection(-1);\r\n            }\r\n        }\r\n        this.totalFrames = arr[0] - arr[1];\r\n        this.firstFrame = arr[1];\r\n        this.setCurrentRawFrameValue(this.totalFrames - 0.01);\r\n    } else if(arr[1] > arr[0]){\r\n        if(this.frameModifier < 0){\r\n            if(this.playSpeed < 0){\r\n                this.setSpeed(-this.playSpeed);\r\n            } else {\r\n                this.setDirection(1);\r\n            }\r\n        }\r\n        this.totalFrames = arr[1] - arr[0];\r\n        this.firstFrame = arr[0];\r\n        this.setCurrentRawFrameValue(0);\r\n    }\r\n    this.trigger('segmentStart');\r\n};\r\nAnimationItem.prototype.setSegment = function (init,end) {\r\n    var pendingFrame = -1;\r\n    if(this.isPaused) {\r\n        if (this.currentRawFrame + this.firstFrame < init) {\r\n            pendingFrame = init;\r\n        } else if (this.currentRawFrame + this.firstFrame > end) {\r\n            pendingFrame = end - init - 0.01;\r\n        }\r\n    }\r\n\r\n    this.firstFrame = init;\r\n    this.totalFrames = end - init;\r\n    if(pendingFrame !== -1) {\r\n        this.goToAndStop(pendingFrame,true);\r\n    }\r\n}\r\n\r\nAnimationItem.prototype.playSegments = function (arr,forceFlag) {\r\n    if(typeof arr[0] === 'object'){\r\n        var i, len = arr.length;\r\n        for(i=0;i<len;i+=1){\r\n            this.segments.push(arr[i]);\r\n        }\r\n    }else{\r\n        this.segments.push(arr);\r\n    }\r\n    if(forceFlag){\r\n        this.adjustSegment(this.segments.shift());\r\n    }\r\n    if(this.isPaused){\r\n        this.play();\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.resetSegments = function (forceFlag) {\r\n    this.segments.length = 0;\r\n    this.segments.push([this.animationData.ip*this.frameRate,Math.floor(this.animationData.op - this.animationData.ip+this.animationData.ip*this.frameRate)]);\r\n    if(forceFlag){\r\n        this.adjustSegment(this.segments.shift());\r\n    }\r\n};\r\nAnimationItem.prototype.checkSegments = function(){\r\n    if(this.segments.length){\r\n        this.pendingSegment = true;\r\n    }\r\n}\r\n\r\nAnimationItem.prototype.remove = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    this.renderer.destroy();\r\n};\r\n\r\nAnimationItem.prototype.destroy = function (name) {\r\n    if((name && this.name != name) || (this.renderer && this.renderer.destroyed)){\r\n        return;\r\n    }\r\n    this.renderer.destroy();\r\n    this.trigger('destroy');\r\n    this._cbs = null;\r\n    this.onEnterFrame = this.onLoopComplete = this.onComplete = this.onSegmentStart = this.onDestroy = null;\r\n};\r\n\r\nAnimationItem.prototype.setCurrentRawFrameValue = function(value){\r\n    this.currentRawFrame = value;\r\n    //console.log(this.totalFrames);\r\n    if (this.currentRawFrame >= this.totalFrames) {\r\n        this.checkSegments();\r\n        if(this.loop === false){\r\n            this.currentRawFrame = this.totalFrames - 0.01;\r\n            this.gotoFrame();\r\n            this.pause();\r\n            this.trigger('complete');\r\n            return;\r\n        }else{\r\n            this.trigger('loopComplete');\r\n            this.playCount += 1;\r\n            if((this.loop !== true && this.playCount == this.loop) || this.pendingSegment){\r\n                this.currentRawFrame = this.totalFrames - 0.01;\r\n                this.gotoFrame();\r\n                this.pause();\r\n                this.trigger('complete');\r\n                return;\r\n            } else {\r\n                this.currentRawFrame = this.currentRawFrame % this.totalFrames;\r\n            }\r\n        }\r\n    } else if (this.currentRawFrame < 0) {\r\n        this.checkSegments();\r\n        this.playCount -= 1;\r\n        if(this.playCount < 0){\r\n            this.playCount = 0;\r\n        }\r\n        if(this.loop === false  || this.pendingSegment){\r\n            this.currentRawFrame = 0;\r\n            this.gotoFrame();\r\n            this.pause();\r\n            this.trigger('complete');\r\n            return;\r\n        }else{\r\n            this.trigger('loopComplete');\r\n            this.currentRawFrame = (this.totalFrames + this.currentRawFrame) % this.totalFrames;\r\n            this.gotoFrame();\r\n            return;\r\n        }\r\n    }\r\n\r\n    this.gotoFrame();\r\n};\r\n\r\nAnimationItem.prototype.setSpeed = function (val) {\r\n    this.playSpeed = val;\r\n    this.updaFrameModifier();\r\n};\r\n\r\nAnimationItem.prototype.setDirection = function (val) {\r\n    this.playDirection = val < 0 ? -1 : 1;\r\n    this.updaFrameModifier();\r\n};\r\n\r\nAnimationItem.prototype.updaFrameModifier = function () {\r\n    this.frameModifier = this.frameMult * this.playSpeed * this.playDirection;\r\n};\r\n\r\nAnimationItem.prototype.getPath = function () {\r\n    return this.path;\r\n};\r\n\r\nAnimationItem.prototype.getAssetsPath = function (assetData) {\r\n    var path = '';\r\n    if(this.assetsPath){\r\n        var imagePath = assetData.p;\r\n        if(imagePath.indexOf('images/') !== -1){\r\n            imagePath = imagePath.split('/')[1];\r\n        }\r\n        path = this.assetsPath + imagePath;\r\n    } else {\r\n        path = this.path;\r\n        path += assetData.u ? assetData.u : '';\r\n        path += assetData.p;\r\n    }\r\n    return path;\r\n};\r\n\r\nAnimationItem.prototype.getAssetData = function (id) {\r\n    var i = 0, len = this.assets.length;\r\n    while (i < len) {\r\n        if(id == this.assets[i].id){\r\n            return this.assets[i];\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.hide = function () {\r\n    this.renderer.hide();\r\n};\r\n\r\nAnimationItem.prototype.show = function () {\r\n    this.renderer.show();\r\n};\r\n\r\nAnimationItem.prototype.getAssets = function () {\r\n    return this.assets;\r\n};\r\n\r\nAnimationItem.prototype.trigger = function(name){\r\n    if(this._cbs && this._cbs[name]){\r\n        switch(name){\r\n            case 'enterFrame':\r\n                this.triggerEvent(name,new BMEnterFrameEvent(name,this.currentFrame,this.totalFrames,this.frameMult));\r\n                break;\r\n            case 'loopComplete':\r\n                this.triggerEvent(name,new BMCompleteLoopEvent(name,this.loop,this.playCount,this.frameMult));\r\n                break;\r\n            case 'complete':\r\n                this.triggerEvent(name,new BMCompleteEvent(name,this.frameMult));\r\n                break;\r\n            case 'segmentStart':\r\n                this.triggerEvent(name,new BMSegmentStartEvent(name,this.firstFrame,this.totalFrames));\r\n                break;\r\n            case 'destroy':\r\n                this.triggerEvent(name,new BMDestroyEvent(name,this));\r\n                break;\r\n            default:\r\n                this.triggerEvent(name);\r\n        }\r\n    }\r\n    if(name === 'enterFrame' && this.onEnterFrame){\r\n        this.onEnterFrame.call(this,new BMEnterFrameEvent(name,this.currentFrame,this.totalFrames,this.frameMult));\r\n    }\r\n    if(name === 'loopComplete' && this.onLoopComplete){\r\n        this.onLoopComplete.call(this,new BMCompleteLoopEvent(name,this.loop,this.playCount,this.frameMult));\r\n    }\r\n    if(name === 'complete' && this.onComplete){\r\n        this.onComplete.call(this,new BMCompleteEvent(name,this.frameMult));\r\n    }\r\n    if(name === 'segmentStart' && this.onSegmentStart){\r\n        this.onSegmentStart.call(this,new BMSegmentStartEvent(name,this.firstFrame,this.totalFrames));\r\n    }\r\n    if(name === 'destroy' && this.onDestroy){\r\n        this.onDestroy.call(this,new BMDestroyEvent(name,this));\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.addEventListener = _addEventListener;\r\nAnimationItem.prototype.removeEventListener = _removeEventListener;\r\nAnimationItem.prototype.triggerEvent = _triggerEvent;\r\n\r\n    var bodymovinjs = {};\r\n\r\n    function setLocationHref (href) {\r\n        locationHref = href;\r\n    }\r\n    function play(animation){\r\n        animationManager.play(animation);\r\n    }\r\n\r\n    function pause(animation) {\r\n        animationManager.pause(animation);\r\n    }\r\n\r\n    function togglePause(animation) {\r\n        animationManager.togglePause(animation);\r\n    }\r\n\r\n    function setSpeed(value, animation) {\r\n        animationManager.setSpeed(value, animation);\r\n    }\r\n\r\n    function setDirection(value, animation) {\r\n        animationManager.setDirection(value, animation);\r\n    }\r\n\r\n    function stop(animation) {\r\n        animationManager.stop(animation);\r\n    }\r\n\r\n    function moveFrame(value) {\r\n        animationManager.moveFrame(value);\r\n    }\r\n\r\n    function searchAnimations() {\r\n        if (standalone === true) {\r\n            animationManager.searchAnimations(animationData, standalone, renderer);\r\n        } else {\r\n            animationManager.searchAnimations();\r\n        }\r\n    }\r\n\r\n    function registerAnimation(elem) {\r\n        return animationManager.registerAnimation(elem);\r\n    }\r\n\r\n    function resize() {\r\n        animationManager.resize();\r\n    }\r\n\r\n    function start() {\r\n        animationManager.start();\r\n    }\r\n\r\n    function goToAndStop(val, isFrame, animation) {\r\n        animationManager.goToAndStop(val, isFrame, animation);\r\n    }\r\n\r\n    function setSubframeRendering(flag) {\r\n        subframeEnabled = flag;\r\n    }\r\n\r\n    function loadAnimation(params) {\r\n        if (standalone === true) {\r\n            params.animationData = JSON.parse(animationData);\r\n        }\r\n        return animationManager.loadAnimation(params);\r\n    }\r\n\r\n    function destroy(animation) {\r\n        return animationManager.destroy(animation);\r\n    }\r\n\r\n    function setQuality(value) {\r\n        if (typeof value === 'string') {\r\n            switch (value) {\r\n                case 'high':\r\n                    defaultCurveSegments = 200;\r\n                    break;\r\n                case 'medium':\r\n                    defaultCurveSegments = 50;\r\n                    break;\r\n                case 'low':\r\n                    defaultCurveSegments = 10;\r\n                    break;\r\n            }\r\n        } else if (!isNaN(value) && value > 1) {\r\n            defaultCurveSegments = value;\r\n        }\r\n        if (defaultCurveSegments >= 50) {\r\n            roundValues(false);\r\n        } else {\r\n            roundValues(true);\r\n        }\r\n    }\r\n\r\n    function inBrowser() {\r\n        return typeof navigator !== 'undefined';\r\n    }\r\n\r\n    function installPlugin(type, plugin) {\r\n        if (type === 'expressions') {\r\n            expressionsPlugin = plugin;\r\n        }\r\n    }\r\n\r\n    function getFactory(name) {\r\n        switch (name) {\r\n            case \"propertyFactory\":\r\n                return PropertyFactory;\r\n            case \"shapePropertyFactory\":\r\n                return ShapePropertyFactory;\r\n            case \"matrix\":\r\n                return Matrix;\r\n        }\r\n    }\r\n    bodymovinjs.play = play;\r\n    bodymovinjs.pause = pause;\r\n    bodymovinjs.setLocationHref = setLocationHref;\r\n    bodymovinjs.togglePause = togglePause;\r\n    bodymovinjs.setSpeed = setSpeed;\r\n    bodymovinjs.setDirection = setDirection;\r\n    bodymovinjs.stop = stop;\r\n    bodymovinjs.moveFrame = moveFrame;\r\n    bodymovinjs.searchAnimations = searchAnimations;\r\n    bodymovinjs.registerAnimation = registerAnimation;\r\n    bodymovinjs.loadAnimation = loadAnimation;\r\n    bodymovinjs.setSubframeRendering = setSubframeRendering;\r\n    bodymovinjs.resize = resize;\r\n    bodymovinjs.start = start;\r\n    bodymovinjs.goToAndStop = goToAndStop;\r\n    bodymovinjs.destroy = destroy;\r\n    bodymovinjs.setQuality = setQuality;\r\n    bodymovinjs.inBrowser = inBrowser;\r\n    bodymovinjs.installPlugin = installPlugin;\r\n    bodymovinjs.__getFactory = getFactory;\r\n    bodymovinjs.version = '4.13.0';\r\n\r\n    function checkReady() {\r\n        if (document.readyState === \"complete\") {\r\n            clearInterval(readyStateCheckInterval);\r\n            searchAnimations();\r\n        }\r\n    }\r\n\r\n    function getQueryVariable(variable) {\r\n        var vars = queryString.split('&');\r\n        for (var i = 0; i < vars.length; i++) {\r\n            var pair = vars[i].split('=');\r\n            if (decodeURIComponent(pair[0]) == variable) {\r\n                return decodeURIComponent(pair[1]);\r\n            }\r\n        }\r\n    }\r\n    var standalone = '__[STANDALONE]__';\r\n    var animationData = '__[ANIMATIONDATA]__';\r\n    var renderer = '';\r\n    if (standalone) {\r\n        var scripts = document.getElementsByTagName('script');\r\n        var index = scripts.length - 1;\r\n        var myScript = scripts[index] || {\r\n            src: ''\r\n        };\r\n        var queryString = myScript.src.replace(/^[^\\?]+\\??/, '');\r\n        renderer = getQueryVariable('renderer');\r\n    }\r\n    var readyStateCheckInterval = setInterval(checkReady, 100);\r\n    return bodymovinjs;\r\n}));\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n/* globals __VUE_SSR_CONTEXT__ */\n\n// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    ref: \"lavContainer\",\n    style: (_vm.style)\n  })\n},staticRenderFns: []}\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// lib/vue-lottie.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/vue-lottie/dist\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c17a85c2db775b1e822a","var Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./vue-lottie.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-91474f0e\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./vue-lottie.vue\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/vue-lottie.vue\n// module id = 0\n// module chunks = 0","import vueLottie from './components/vue-lottie'\n\nexport default vueLottie\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib.js","<template>\n    <div :style=\"style\" ref=\"lavContainer\"></div>\n</template>\n\n<script>\n    import bodymovin from 'bodymovin/build/player/bodymovin_light.js'\n\n    export default {\n        props: {\n            data: {\n                type: Object,\n                required: true\n            },\n            loop: Boolean,\n            autoplay: {\n                type: Boolean,\n                default: true\n            },\n            settings: Object,\n            height: Number,\n            width: Number\n        },\n\n        data () {\n            return {\n                animation: null\n            }\n        },\n        computed: {\n            style () {\n                let style = {}\n                if (this.width) {\n                    style.width = this.width + 'px'\n                }\n                if (this.height) {\n                    style.height = this.height + 'px'\n                }\n                return style\n            }\n        },\n        methods: {\n            play () {\n                this.animation.play()\n            },\n            pause () {\n                this.animation.pause()\n            },\n            stop () {\n                this.animation.stop()\n            },\n            setSpeed (val) {\n                this.animation.setSpeed(val)\n            }\n        },\n        mounted () {\n            this.animation = bodymovin.loadAnimation({\n                container: this.$refs.lavContainer,\n                renderer: 'svg',\n                loop: this.loop,\n                autoplay: this.autoplay,\n                animationData: this.data,\n                rendererSettings: this.settings\n            })\n        }\n    }\n</script>\n\n\n\n// WEBPACK FOOTER //\n// vue-lottie.vue?504864b2","(function(root, factory) {\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(function() {\r\n            return factory(root);\r\n        });\r\n    } else if (typeof module === \"object\" && module.exports) {\r\n        module.exports = factory(root);\r\n    } else {\r\n        root.bodymovin = factory(root);\r\n    }\r\n}((window || {}), function(window) {\r\n    var svgNS = \"http://www.w3.org/2000/svg\";\r\n\r\nvar locationHref = '';\r\n\nvar subframeEnabled = true;\r\nvar expressionsPlugin;\r\nvar isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\r\nvar cachedColors = {};\r\nvar bm_rounder = Math.round;\r\nvar bm_rnd;\r\nvar bm_pow = Math.pow;\r\nvar bm_sqrt = Math.sqrt;\r\nvar bm_abs = Math.abs;\r\nvar bm_floor = Math.floor;\r\nvar bm_max = Math.max;\r\nvar bm_min = Math.min;\r\nvar blitter = 10;\r\n\r\nvar BMMath = {};\r\n(function(){\r\n    var propertyNames = Object.getOwnPropertyNames(Math);\r\n    var i, len = propertyNames.length;\r\n    for(i=0;i<len;i+=1){\r\n        BMMath[propertyNames[i]] = Math[propertyNames[i]];\r\n    }\r\n}());\r\n\r\nfunction ProjectInterface(){return {}};\r\n\r\nBMMath.random = Math.random;\r\nBMMath.abs = function(val){\r\n    var tOfVal = typeof val;\r\n    if(tOfVal === 'object' && val.length){\r\n        var absArr = Array.apply(null,{length:val.length});\r\n        var i, len = val.length;\r\n        for(i=0;i<len;i+=1){\r\n            absArr[i] = Math.abs(val[i]);\r\n        }\r\n        return absArr;\r\n    }\r\n    return Math.abs(val);\r\n\r\n}\r\nvar defaultCurveSegments = 150;\r\nvar degToRads = Math.PI/180;\r\nvar roundCorner = 0.5519;\r\n\r\nfunction roundValues(flag){\r\n    if(flag){\r\n        bm_rnd = Math.round;\r\n    }else{\r\n        bm_rnd = function(val){\r\n            return val;\r\n        };\r\n    }\r\n}\r\nroundValues(false);\r\n\r\nfunction roundTo2Decimals(val){\r\n    return Math.round(val*10000)/10000;\r\n}\r\n\r\nfunction roundTo3Decimals(val){\r\n    return Math.round(val*100)/100;\r\n}\r\n\r\nfunction styleDiv(element){\r\n    element.style.position = 'absolute';\r\n    element.style.top = 0;\r\n    element.style.left = 0;\r\n    element.style.display = 'block';\r\n    element.style.transformOrigin = element.style.webkitTransformOrigin = '0 0';\r\n    element.style.backfaceVisibility  = element.style.webkitBackfaceVisibility = 'visible';\r\n    element.style.transformStyle = element.style.webkitTransformStyle = element.style.mozTransformStyle = \"preserve-3d\";\r\n}\r\n\r\nfunction styleUnselectableDiv(element){\r\n    element.style.userSelect = 'none';\r\n    element.style.MozUserSelect = 'none';\r\n    element.style.webkitUserSelect = 'none';\r\n    element.style.oUserSelect = 'none';\r\n\r\n}\r\n\r\nfunction BMEnterFrameEvent(n,c,t,d){\r\n    this.type = n;\r\n    this.currentTime = c;\r\n    this.totalTime = t;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMCompleteEvent(n,d){\r\n    this.type = n;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMCompleteLoopEvent(n,c,t,d){\r\n    this.type = n;\r\n    this.currentLoop = c;\r\n    this.totalLoops = t;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMSegmentStartEvent(n,f,t){\r\n    this.type = n;\r\n    this.firstFrame = f;\r\n    this.totalFrames = t;\r\n}\r\n\r\nfunction BMDestroyEvent(n,t){\r\n    this.type = n;\r\n    this.target = t;\r\n}\r\n\r\nfunction _addEventListener(eventName, callback){\r\n\r\n    if (!this._cbs[eventName]){\r\n        this._cbs[eventName] = [];\r\n    }\r\n    this._cbs[eventName].push(callback);\r\n\r\n\treturn function() {\r\n\t\tthis.removeEventListener(eventName, callback);\r\n\t}.bind(this);\r\n}\r\n\r\nfunction _removeEventListener(eventName,callback){\r\n\r\n    if (!callback){\r\n        this._cbs[eventName] = null;\r\n    }else if(this._cbs[eventName]){\r\n        var i = 0, len = this._cbs[eventName].length;\r\n        while(i<len){\r\n            if(this._cbs[eventName][i] === callback){\r\n                this._cbs[eventName].splice(i,1);\r\n                i -=1;\r\n                len -= 1;\r\n            }\r\n            i += 1;\r\n        }\r\n        if(!this._cbs[eventName].length){\r\n            this._cbs[eventName] = null;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nfunction _triggerEvent(eventName, args){\r\n    if (this._cbs[eventName]) {\r\n        var len = this._cbs[eventName].length;\r\n        for (var i = 0; i < len; i++){\r\n            this._cbs[eventName][i](args);\r\n        }\r\n    }\r\n}\r\n\r\nfunction randomString(length, chars){\r\n    if(chars === undefined){\r\n        chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890';\r\n    }\r\n    var i;\r\n    var result = '';\r\n    for (i = length; i > 0; --i) result += chars[Math.round(Math.random() * (chars.length - 1))];\r\n    return result;\r\n}\r\n\r\nfunction HSVtoRGB(h, s, v) {\r\n    var r, g, b, i, f, p, q, t;\r\n    if (arguments.length === 1) {\r\n        s = h.s, v = h.v, h = h.h;\r\n    }\r\n    i = Math.floor(h * 6);\r\n    f = h * 6 - i;\r\n    p = v * (1 - s);\r\n    q = v * (1 - f * s);\r\n    t = v * (1 - (1 - f) * s);\r\n    switch (i % 6) {\r\n        case 0: r = v, g = t, b = p; break;\r\n        case 1: r = q, g = v, b = p; break;\r\n        case 2: r = p, g = v, b = t; break;\r\n        case 3: r = p, g = q, b = v; break;\r\n        case 4: r = t, g = p, b = v; break;\r\n        case 5: r = v, g = p, b = q; break;\r\n    }\r\n    return [ r,\r\n        g,\r\n         b ];\r\n}\r\n\r\nfunction RGBtoHSV(r, g, b) {\r\n    if (arguments.length === 1) {\r\n        g = r.g, b = r.b, r = r.r;\r\n    }\r\n    var max = Math.max(r, g, b), min = Math.min(r, g, b),\r\n        d = max - min,\r\n        h,\r\n        s = (max === 0 ? 0 : d / max),\r\n        v = max / 255;\r\n\r\n    switch (max) {\r\n        case min: h = 0; break;\r\n        case r: h = (g - b) + d * (g < b ? 6: 0); h /= 6 * d; break;\r\n        case g: h = (b - r) + d * 2; h /= 6 * d; break;\r\n        case b: h = (r - g) + d * 4; h /= 6 * d; break;\r\n    }\r\n\r\n    return [\r\n         h,\r\n         s,\r\n         v\r\n    ];\r\n}\r\n\r\nfunction addSaturationToRGB(color,offset){\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[1] += offset;\r\n    if (hsv[1] > 1) {\r\n        hsv[1] = 1;\r\n    }\r\n    else if (hsv[1] <= 0) {\r\n        hsv[1] = 0;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nfunction addBrightnessToRGB(color,offset){\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[2] += offset;\r\n    if (hsv[2] > 1) {\r\n        hsv[2] = 1;\r\n    }\r\n    else if (hsv[2] < 0) {\r\n        hsv[2] = 0;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nfunction addHueToRGB(color,offset) {\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[0] += offset/360;\r\n    if (hsv[0] > 1) {\r\n        hsv[0] -= 1;\r\n    }\r\n    else if (hsv[0] < 0) {\r\n        hsv[0] += 1;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nfunction componentToHex(c) {\r\n    var hex = c.toString(16);\r\n    return hex.length == 1 ? '0' + hex : hex;\r\n}\r\n\r\nvar rgbToHex = (function(){\r\n    var colorMap = [];\r\n    var i;\r\n    var hex;\r\n    for(i=0;i<256;i+=1){\r\n        hex = i.toString(16);\r\n        colorMap[i] = hex.length == 1 ? '0' + hex : hex;\r\n    }\r\n\r\n    return function(r, g, b) {\r\n        if(r<0){\r\n            r = 0;\r\n        }\r\n        if(g<0){\r\n            g = 0;\r\n        }\r\n        if(b<0){\r\n            b = 0;\r\n        }\r\n        return '#' + colorMap[r] + colorMap[g] + colorMap[b];\r\n    };\r\n}());\r\n\r\nfunction fillToRgba(hex,alpha){\r\n    if(!cachedColors[hex]){\r\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n        cachedColors[hex] = parseInt(result[1], 16)+','+parseInt(result[2], 16)+','+parseInt(result[3], 16);\r\n    }\r\n    return 'rgba('+cachedColors[hex]+','+alpha+')';\r\n}\r\n\r\nvar fillColorToString = (function(){\r\n\r\n    var colorMap = [];\r\n    return function(colorArr,alpha){\r\n        if(alpha !== undefined){\r\n            colorArr[3] = alpha;\r\n        }\r\n        if(!colorMap[colorArr[0]]){\r\n            colorMap[colorArr[0]] = {};\r\n        }\r\n        if(!colorMap[colorArr[0]][colorArr[1]]){\r\n            colorMap[colorArr[0]][colorArr[1]] = {};\r\n        }\r\n        if(!colorMap[colorArr[0]][colorArr[1]][colorArr[2]]){\r\n            colorMap[colorArr[0]][colorArr[1]][colorArr[2]] = {};\r\n        }\r\n        if(!colorMap[colorArr[0]][colorArr[1]][colorArr[2]][colorArr[3]]){\r\n            colorMap[colorArr[0]][colorArr[1]][colorArr[2]][colorArr[3]] = 'rgba(' + colorArr.join(',')+')';\r\n        }\r\n        return colorMap[colorArr[0]][colorArr[1]][colorArr[2]][colorArr[3]];\r\n    };\r\n}());\r\n\r\nfunction RenderedFrame(tr,o) {\r\n    this.tr = tr;\r\n    this.o = o;\r\n}\r\n\r\nfunction iterateDynamicProperties(num){\r\n    var i, len = this.dynamicProperties;\r\n    for(i=0;i<len;i+=1){\r\n        this.dynamicProperties[i].getValue(num);\r\n    }\r\n}\r\n\r\nfunction reversePath(paths){\r\n    var newI = [], newO = [], newV = [];\r\n    var i, len, newPaths = {};\r\n    var init = 0;\r\n    if (paths.c) {\r\n        newI[0] = paths.o[0];\r\n        newO[0] = paths.i[0];\r\n        newV[0] = paths.v[0];\r\n        init = 1;\r\n    }\r\n    len = paths.i.length;\r\n    var cnt = len - 1;\r\n\r\n    for (i = init; i < len; i += 1) {\r\n        newI.push(paths.o[cnt]);\r\n        newO.push(paths.i[cnt]);\r\n        newV.push(paths.v[cnt]);\r\n        cnt -= 1;\r\n    }\r\n\r\n    newPaths.i = newI;\r\n    newPaths.o = newO;\r\n    newPaths.v = newV;\r\n\r\n    return newPaths;\r\n}\n/*!\r\n Transformation Matrix v2.0\r\n (c) Epistemex 2014-2015\r\n www.epistemex.com\r\n By Ken Fyrstenberg\r\n Contributions by leeoniya.\r\n License: MIT, header required.\r\n */\r\n\r\n/**\r\n * 2D transformation matrix object initialized with identity matrix.\r\n *\r\n * The matrix can synchronize a canvas context by supplying the context\r\n * as an argument, or later apply current absolute transform to an\r\n * existing context.\r\n *\r\n * All values are handled as floating point values.\r\n *\r\n * @param {CanvasRenderingContext2D} [context] - Optional context to sync with Matrix\r\n * @prop {number} a - scale x\r\n * @prop {number} b - shear y\r\n * @prop {number} c - shear x\r\n * @prop {number} d - scale y\r\n * @prop {number} e - translate x\r\n * @prop {number} f - translate y\r\n * @prop {CanvasRenderingContext2D|null} [context=null] - set or get current canvas context\r\n * @constructor\r\n */\r\n\r\nvar Matrix = (function(){\r\n\r\n    function reset(){\r\n        this.props[0] = 1;\r\n        this.props[1] = 0;\r\n        this.props[2] = 0;\r\n        this.props[3] = 0;\r\n        this.props[4] = 0;\r\n        this.props[5] = 1;\r\n        this.props[6] = 0;\r\n        this.props[7] = 0;\r\n        this.props[8] = 0;\r\n        this.props[9] = 0;\r\n        this.props[10] = 1;\r\n        this.props[11] = 0;\r\n        this.props[12] = 0;\r\n        this.props[13] = 0;\r\n        this.props[14] = 0;\r\n        this.props[15] = 1;\r\n        return this;\r\n    }\r\n\r\n    function rotate(angle) {\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = Math.cos(angle);\r\n        var mSin = Math.sin(angle);\r\n        return this._t(mCos, -mSin,  0, 0\r\n            , mSin,  mCos, 0, 0\r\n            , 0,  0,  1, 0\r\n            , 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateX(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = Math.cos(angle);\r\n        var mSin = Math.sin(angle);\r\n        return this._t(1, 0, 0, 0\r\n            , 0, mCos, -mSin, 0\r\n            , 0, mSin,  mCos, 0\r\n            , 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateY(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = Math.cos(angle);\r\n        var mSin = Math.sin(angle);\r\n        return this._t(mCos,  0,  mSin, 0\r\n            , 0, 1, 0, 0\r\n            , -mSin,  0,  mCos, 0\r\n            , 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateZ(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = Math.cos(angle);\r\n        var mSin = Math.sin(angle);\r\n        return this._t(mCos, -mSin,  0, 0\r\n            , mSin,  mCos, 0, 0\r\n            , 0,  0,  1, 0\r\n            , 0, 0, 0, 1);\r\n    }\r\n\r\n    function shear(sx,sy){\r\n        return this._t(1, sy, sx, 1, 0, 0);\r\n    }\r\n\r\n    function skew(ax, ay){\r\n        return this.shear(Math.tan(ax), Math.tan(ay));\r\n    }\r\n\r\n    function skewFromAxis(ax, angle){\r\n        var mCos = Math.cos(angle);\r\n        var mSin = Math.sin(angle);\r\n        return this._t(mCos, mSin,  0, 0\r\n            , -mSin,  mCos, 0, 0\r\n            , 0,  0,  1, 0\r\n            , 0, 0, 0, 1)\r\n            ._t(1, 0,  0, 0\r\n            , Math.tan(ax),  1, 0, 0\r\n            , 0,  0,  1, 0\r\n            , 0, 0, 0, 1)\r\n            ._t(mCos, -mSin,  0, 0\r\n            , mSin,  mCos, 0, 0\r\n            , 0,  0,  1, 0\r\n            , 0, 0, 0, 1);\r\n        //return this._t(mCos, mSin, -mSin, mCos, 0, 0)._t(1, 0, Math.tan(ax), 1, 0, 0)._t(mCos, -mSin, mSin, mCos, 0, 0);\r\n    }\r\n\r\n    function scale(sx, sy, sz) {\r\n        sz = isNaN(sz) ? 1 : sz;\r\n        if(sx == 1 && sy == 1 && sz == 1){\r\n            return this;\r\n        }\r\n        return this._t(sx, 0, 0, 0, 0, sy, 0, 0, 0, 0, sz, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function setTransform(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {\r\n        this.props[0] = a;\r\n        this.props[1] = b;\r\n        this.props[2] = c;\r\n        this.props[3] = d;\r\n        this.props[4] = e;\r\n        this.props[5] = f;\r\n        this.props[6] = g;\r\n        this.props[7] = h;\r\n        this.props[8] = i;\r\n        this.props[9] = j;\r\n        this.props[10] = k;\r\n        this.props[11] = l;\r\n        this.props[12] = m;\r\n        this.props[13] = n;\r\n        this.props[14] = o;\r\n        this.props[15] = p;\r\n        return this;\r\n    }\r\n\r\n    function translate(tx, ty, tz) {\r\n        tz = tz || 0;\r\n        if(tx !== 0 || ty !== 0 || tz !== 0){\r\n            return this._t(1,0,0,0,0,1,0,0,0,0,1,0,tx,ty,tz,1);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function transform(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2, m2, n2, o2, p2) {\r\n\r\n        if(a2 === 1 && b2 === 0 && c2 === 0 && d2 === 0 && e2 === 0 && f2 === 1 && g2 === 0 && h2 === 0 && i2 === 0 && j2 === 0 && k2 === 1 && l2 === 0){\r\n            if(m2 !== 0 || n2 !== 0 || o2 !== 0){\r\n\r\n                this.props[12] = this.props[12] * a2 + this.props[13] * e2 + this.props[14] * i2 + this.props[15] * m2 ;\r\n                this.props[13] = this.props[12] * b2 + this.props[13] * f2 + this.props[14] * j2 + this.props[15] * n2 ;\r\n                this.props[14] = this.props[12] * c2 + this.props[13] * g2 + this.props[14] * k2 + this.props[15] * o2 ;\r\n                this.props[15] = this.props[12] * d2 + this.props[13] * h2 + this.props[14] * l2 + this.props[15] * p2 ;\r\n            }\r\n            this._identityCalculated = false;\r\n            return this;\r\n        }\r\n\r\n        var a1 = this.props[0];\r\n        var b1 = this.props[1];\r\n        var c1 = this.props[2];\r\n        var d1 = this.props[3];\r\n        var e1 = this.props[4];\r\n        var f1 = this.props[5];\r\n        var g1 = this.props[6];\r\n        var h1 = this.props[7];\r\n        var i1 = this.props[8];\r\n        var j1 = this.props[9];\r\n        var k1 = this.props[10];\r\n        var l1 = this.props[11];\r\n        var m1 = this.props[12];\r\n        var n1 = this.props[13];\r\n        var o1 = this.props[14];\r\n        var p1 = this.props[15];\r\n\r\n        /* matrix order (canvas compatible):\r\n         * ace\r\n         * bdf\r\n         * 001\r\n         */\r\n        this.props[0] = a1 * a2 + b1 * e2 + c1 * i2 + d1 * m2;\r\n        this.props[1] = a1 * b2 + b1 * f2 + c1 * j2 + d1 * n2 ;\r\n        this.props[2] = a1 * c2 + b1 * g2 + c1 * k2 + d1 * o2 ;\r\n        this.props[3] = a1 * d2 + b1 * h2 + c1 * l2 + d1 * p2 ;\r\n\r\n        this.props[4] = e1 * a2 + f1 * e2 + g1 * i2 + h1 * m2 ;\r\n        this.props[5] = e1 * b2 + f1 * f2 + g1 * j2 + h1 * n2 ;\r\n        this.props[6] = e1 * c2 + f1 * g2 + g1 * k2 + h1 * o2 ;\r\n        this.props[7] = e1 * d2 + f1 * h2 + g1 * l2 + h1 * p2 ;\r\n\r\n        this.props[8] = i1 * a2 + j1 * e2 + k1 * i2 + l1 * m2 ;\r\n        this.props[9] = i1 * b2 + j1 * f2 + k1 * j2 + l1 * n2 ;\r\n        this.props[10] = i1 * c2 + j1 * g2 + k1 * k2 + l1 * o2 ;\r\n        this.props[11] = i1 * d2 + j1 * h2 + k1 * l2 + l1 * p2 ;\r\n\r\n        this.props[12] = m1 * a2 + n1 * e2 + o1 * i2 + p1 * m2 ;\r\n        this.props[13] = m1 * b2 + n1 * f2 + o1 * j2 + p1 * n2 ;\r\n        this.props[14] = m1 * c2 + n1 * g2 + o1 * k2 + p1 * o2 ;\r\n        this.props[15] = m1 * d2 + n1 * h2 + o1 * l2 + p1 * p2 ;\r\n\r\n        this._identityCalculated = false;\r\n        return this;\r\n    }\r\n\r\n    function isIdentity() {\r\n        if(!this._identityCalculated){\r\n            this._identity = !(this.props[0] !== 1 || this.props[1] !== 0 || this.props[2] !== 0 || this.props[3] !== 0\r\n                || this.props[4] !== 0 || this.props[5] !== 1 || this.props[6] !== 0 || this.props[7] !== 0\r\n                || this.props[8] !== 0 || this.props[9] !== 0 || this.props[10] !== 1 || this.props[11] !== 0\r\n                || this.props[12] !== 0 || this.props[13] !== 0 || this.props[14] !== 0 || this.props[15] !== 1);\r\n            this._identityCalculated = true;\r\n        }\r\n        return this._identity;\r\n    }\r\n\r\n    function clone(matr){\r\n        var i;\r\n        for(i=0;i<16;i+=1){\r\n            matr.props[i] = this.props[i];\r\n        }\r\n    }\r\n\r\n    function cloneFromProps(props){\r\n        var i;\r\n        for(i=0;i<16;i+=1){\r\n            this.props[i] = props[i];\r\n        }\r\n    }\r\n\r\n    function applyToPoint(x, y, z) {\r\n\r\n        return {\r\n            x: x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],\r\n            y: x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],\r\n            z: x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]\r\n        };\r\n        /*return {\r\n         x: x * me.a + y * me.c + me.e,\r\n         y: x * me.b + y * me.d + me.f\r\n         };*/\r\n    }\r\n    function applyToX(x, y, z) {\r\n        return x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12];\r\n    }\r\n    function applyToY(x, y, z) {\r\n        return x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13];\r\n    }\r\n    function applyToZ(x, y, z) {\r\n        return x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14];\r\n    }\r\n\r\n    function inversePoint(pt) {\r\n        var determinant = this.props[0] * this.props[5] - this.props[1] * this.props[4];\r\n        var a = this.props[5]/determinant;\r\n        var b = - this.props[1]/determinant;\r\n        var c = - this.props[4]/determinant;\r\n        var d = this.props[0]/determinant;\r\n        var e = (this.props[4] * this.props[13] - this.props[5] * this.props[12])/determinant;\r\n        var f = - (this.props[0] * this.props[13] - this.props[1] * this.props[12])/determinant;\r\n        return [pt[0] * a + pt[1] * c + e, pt[0] * b + pt[1] * d + f, 0];\r\n    }\r\n\r\n    function inversePoints(pts){\r\n        var i, len = pts.length, retPts = [];\r\n        for(i=0;i<len;i+=1){\r\n            retPts[i] = inversePoint(pts[i]);\r\n        }\r\n        return retPts;\r\n    }\r\n\r\n    function applyToPointArray(x,y,z,dimensions){\r\n        if(dimensions && dimensions === 2) {\r\n            var arr = point_pool.newPoint();\r\n            arr[0] = x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12]; \r\n            arr[1] = x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13]; \r\n            return arr;    \r\n        }\r\n        return [x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]];\r\n    }\r\n    function applyToPointStringified(x, y) {\r\n        if(this.isIdentity()) {\r\n            return x + ',' + y;\r\n        }\r\n        return (bm_rnd(x * this.props[0] + y * this.props[4] + this.props[12]))+','+(bm_rnd(x * this.props[1] + y * this.props[5] + this.props[13]));\r\n    }\r\n\r\n    function toArray() {\r\n        return [this.props[0],this.props[1],this.props[2],this.props[3],this.props[4],this.props[5],this.props[6],this.props[7],this.props[8],this.props[9],this.props[10],this.props[11],this.props[12],this.props[13],this.props[14],this.props[15]];\r\n    }\r\n\r\n    function toCSS() {\r\n        if(isSafari){\r\n            return \"matrix3d(\" + roundTo2Decimals(this.props[0]) + ',' + roundTo2Decimals(this.props[1]) + ',' + roundTo2Decimals(this.props[2]) + ',' + roundTo2Decimals(this.props[3]) + ',' + roundTo2Decimals(this.props[4]) + ',' + roundTo2Decimals(this.props[5]) + ',' + roundTo2Decimals(this.props[6]) + ',' + roundTo2Decimals(this.props[7]) + ',' + roundTo2Decimals(this.props[8]) + ',' + roundTo2Decimals(this.props[9]) + ',' + roundTo2Decimals(this.props[10]) + ',' + roundTo2Decimals(this.props[11]) + ',' + roundTo2Decimals(this.props[12]) + ',' + roundTo2Decimals(this.props[13]) + ',' + roundTo2Decimals(this.props[14]) + ',' + roundTo2Decimals(this.props[15]) + ')';\r\n        } else {\r\n            this.cssParts[1] = this.props.join(',');\r\n            return this.cssParts.join('');\r\n        }\r\n    }\r\n\r\n    function to2dCSS() {\r\n        return \"matrix(\" + roundTo2Decimals(this.props[0]) + ',' + roundTo2Decimals(this.props[1]) + ',' + roundTo2Decimals(this.props[4]) + ',' + roundTo2Decimals(this.props[5]) + ',' + roundTo2Decimals(this.props[12]) + ',' + roundTo2Decimals(this.props[13]) + \")\";\r\n    }\r\n\r\n    function toString() {\r\n        return \"\" + this.toArray();\r\n    }\r\n\r\n    return function(){\r\n        this.reset = reset;\r\n        this.rotate = rotate;\r\n        this.rotateX = rotateX;\r\n        this.rotateY = rotateY;\r\n        this.rotateZ = rotateZ;\r\n        this.skew = skew;\r\n        this.skewFromAxis = skewFromAxis;\r\n        this.shear = shear;\r\n        this.scale = scale;\r\n        this.setTransform = setTransform;\r\n        this.translate = translate;\r\n        this.transform = transform;\r\n        this.applyToPoint = applyToPoint;\r\n        this.applyToX = applyToX;\r\n        this.applyToY = applyToY;\r\n        this.applyToZ = applyToZ;\r\n        this.applyToPointArray = applyToPointArray;\r\n        this.applyToPointStringified = applyToPointStringified;\r\n        this.toArray = toArray;\r\n        this.toCSS = toCSS;\r\n        this.to2dCSS = to2dCSS;\r\n        this.toString = toString;\r\n        this.clone = clone;\r\n        this.cloneFromProps = cloneFromProps;\r\n        this.inversePoints = inversePoints;\r\n        this.inversePoint = inversePoint;\r\n        this._t = this.transform;\r\n        this.isIdentity = isIdentity;\r\n        this._identity = true;\r\n        this._identityCalculated = false;\r\n\r\n        this.props = [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];\r\n\r\n        this.cssParts = ['matrix3d(','',')'];\r\n    }\r\n}());\r\n\r\nfunction Matrix() {\r\n\r\n\r\n}\r\n\n/*\r\n Copyright 2014 David Bau.\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining\r\n a copy of this software and associated documentation files (the\r\n \"Software\"), to deal in the Software without restriction, including\r\n without limitation the rights to use, copy, modify, merge, publish,\r\n distribute, sublicense, and/or sell copies of the Software, and to\r\n permit persons to whom the Software is furnished to do so, subject to\r\n the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be\r\n included in all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\n IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\n CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\n TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n */\r\n\r\n(function (pool, math) {\r\n//\r\n// The following constants are related to IEEE 754 limits.\r\n//\r\n    var global = this,\r\n        width = 256,        // each RC4 output is 0 <= x < 256\r\n        chunks = 6,         // at least six RC4 outputs for each double\r\n        digits = 52,        // there are 52 significant digits in a double\r\n        rngname = 'random', // rngname: name for Math.random and Math.seedrandom\r\n        startdenom = math.pow(width, chunks),\r\n        significance = math.pow(2, digits),\r\n        overflow = significance * 2,\r\n        mask = width - 1,\r\n        nodecrypto;         // node.js crypto module, initialized at the bottom.\r\n\r\n//\r\n// seedrandom()\r\n// This is the seedrandom function described above.\r\n//\r\n    function seedrandom(seed, options, callback) {\r\n        var key = [];\r\n        options = (options == true) ? { entropy: true } : (options || {});\r\n\r\n        // Flatten the seed string or build one from local entropy if needed.\r\n        var shortseed = mixkey(flatten(\r\n            options.entropy ? [seed, tostring(pool)] :\r\n                (seed == null) ? autoseed() : seed, 3), key);\r\n\r\n        // Use the seed to initialize an ARC4 generator.\r\n        var arc4 = new ARC4(key);\r\n\r\n        // This function returns a random double in [0, 1) that contains\r\n        // randomness in every bit of the mantissa of the IEEE 754 value.\r\n        var prng = function() {\r\n            var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\r\n                d = startdenom,                 //   and denominator d = 2 ^ 48.\r\n                x = 0;                          //   and no 'extra last byte'.\r\n            while (n < significance) {          // Fill up all significant digits by\r\n                n = (n + x) * width;              //   shifting numerator and\r\n                d *= width;                       //   denominator and generating a\r\n                x = arc4.g(1);                    //   new least-significant-byte.\r\n            }\r\n            while (n >= overflow) {             // To avoid rounding up, before adding\r\n                n /= 2;                           //   last byte, shift everything\r\n                d /= 2;                           //   right using integer math until\r\n                x >>>= 1;                         //   we have exactly the desired bits.\r\n            }\r\n            return (n + x) / d;                 // Form the number within [0, 1).\r\n        };\r\n\r\n        prng.int32 = function() { return arc4.g(4) | 0; }\r\n        prng.quick = function() { return arc4.g(4) / 0x100000000; }\r\n        prng.double = prng;\r\n\r\n        // Mix the randomness into accumulated entropy.\r\n        mixkey(tostring(arc4.S), pool);\r\n\r\n        // Calling convention: what to return as a function of prng, seed, is_math.\r\n        return (options.pass || callback ||\r\n        function(prng, seed, is_math_call, state) {\r\n            if (state) {\r\n                // Load the arc4 state from the given state if it has an S array.\r\n                if (state.S) { copy(state, arc4); }\r\n                // Only provide the .state method if requested via options.state.\r\n                prng.state = function() { return copy(arc4, {}); }\r\n            }\r\n\r\n            // If called as a method of Math (Math.seedrandom()), mutate\r\n            // Math.random because that is how seedrandom.js has worked since v1.0.\r\n            if (is_math_call) { math[rngname] = prng; return seed; }\r\n\r\n            // Otherwise, it is a newer calling convention, so return the\r\n            // prng directly.\r\n            else return prng;\r\n        })(\r\n            prng,\r\n            shortseed,\r\n            'global' in options ? options.global : (this == math),\r\n            options.state);\r\n    }\r\n    math['seed' + rngname] = seedrandom;\r\n\r\n//\r\n// ARC4\r\n//\r\n// An ARC4 implementation.  The constructor takes a key in the form of\r\n// an array of at most (width) integers that should be 0 <= x < (width).\r\n//\r\n// The g(count) method returns a pseudorandom integer that concatenates\r\n// the next (count) outputs from ARC4.  Its return value is a number x\r\n// that is in the range 0 <= x < (width ^ count).\r\n//\r\n    function ARC4(key) {\r\n        var t, keylen = key.length,\r\n            me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\r\n\r\n        // The empty key [] is treated as [0].\r\n        if (!keylen) { key = [keylen++]; }\r\n\r\n        // Set up S using the standard key scheduling algorithm.\r\n        while (i < width) {\r\n            s[i] = i++;\r\n        }\r\n        for (i = 0; i < width; i++) {\r\n            s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\r\n            s[j] = t;\r\n        }\r\n\r\n        // The \"g\" method returns the next (count) outputs as one number.\r\n        (me.g = function(count) {\r\n            // Using instance members instead of closure state nearly doubles speed.\r\n            var t, r = 0,\r\n                i = me.i, j = me.j, s = me.S;\r\n            while (count--) {\r\n                t = s[i = mask & (i + 1)];\r\n                r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\r\n            }\r\n            me.i = i; me.j = j;\r\n            return r;\r\n            // For robust unpredictability, the function call below automatically\r\n            // discards an initial batch of values.  This is called RC4-drop[256].\r\n            // See http://google.com/search?q=rsa+fluhrer+response&btnI\r\n        })(width);\r\n    }\r\n\r\n//\r\n// copy()\r\n// Copies internal state of ARC4 to or from a plain object.\r\n//\r\n    function copy(f, t) {\r\n        t.i = f.i;\r\n        t.j = f.j;\r\n        t.S = f.S.slice();\r\n        return t;\r\n    };\r\n\r\n//\r\n// flatten()\r\n// Converts an object tree to nested arrays of strings.\r\n//\r\n    function flatten(obj, depth) {\r\n        var result = [], typ = (typeof obj), prop;\r\n        if (depth && typ == 'object') {\r\n            for (prop in obj) {\r\n                try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\r\n            }\r\n        }\r\n        return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\r\n    }\r\n\r\n//\r\n// mixkey()\r\n// Mixes a string seed into a key that is an array of integers, and\r\n// returns a shortened string seed that is equivalent to the result key.\r\n//\r\n    function mixkey(seed, key) {\r\n        var stringseed = seed + '', smear, j = 0;\r\n        while (j < stringseed.length) {\r\n            key[mask & j] =\r\n                mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\r\n        }\r\n        return tostring(key);\r\n    }\r\n\r\n//\r\n// autoseed()\r\n// Returns an object for autoseeding, using window.crypto and Node crypto\r\n// module if available.\r\n//\r\n    function autoseed() {\r\n        try {\r\n            if (nodecrypto) { return tostring(nodecrypto.randomBytes(width)); }\r\n            var out = new Uint8Array(width);\r\n            (global.crypto || global.msCrypto).getRandomValues(out);\r\n            return tostring(out);\r\n        } catch (e) {\r\n            var browser = global.navigator,\r\n                plugins = browser && browser.plugins;\r\n            return [+new Date, global, plugins, global.screen, tostring(pool)];\r\n        }\r\n    }\r\n\r\n//\r\n// tostring()\r\n// Converts an array of charcodes to a string\r\n//\r\n    function tostring(a) {\r\n        return String.fromCharCode.apply(0, a);\r\n    }\r\n\r\n//\r\n// When seedrandom.js is loaded, we immediately mix a few bits\r\n// from the built-in RNG into the entropy pool.  Because we do\r\n// not want to interfere with deterministic PRNG state later,\r\n// seedrandom will not call math.random on its own again after\r\n// initialization.\r\n//\r\n    mixkey(math.random(), pool);\r\n\r\n//\r\n// Nodejs and AMD support: export the implementation as a module using\r\n// either convention.\r\n//\r\n\r\n// End anonymous scope, and pass initial values.\r\n})(\r\n    [],     // pool: entropy pool starts empty\r\n    BMMath    // math: package containing random, pow, and seedrandom\r\n);\nvar BezierFactory = (function(){\r\n    /**\r\n     * BezierEasing - use bezier curve for transition easing function\r\n     * by Gaëtan Renaudeau 2014 - 2015 – MIT License\r\n     *\r\n     * Credits: is based on Firefox's nsSMILKeySpline.cpp\r\n     * Usage:\r\n     * var spline = BezierEasing([ 0.25, 0.1, 0.25, 1.0 ])\r\n     * spline.get(x) => returns the easing value | x must be in [0, 1] range\r\n     *\r\n     */\r\n\r\n        var ob = {};\r\n    ob.getBezierEasing = getBezierEasing;\r\n    var beziers = {};\r\n\r\n    function getBezierEasing(a,b,c,d,nm){\r\n        var str = nm || ('bez_' + a+'_'+b+'_'+c+'_'+d).replace(/\\./g, 'p');\r\n        if(beziers[str]){\r\n            return beziers[str];\r\n        }\r\n        var bezEasing = new BezierEasing([a,b,c,d]);\r\n        beziers[str] = bezEasing;\r\n        return bezEasing;\r\n    }\r\n\r\n// These values are established by empiricism with tests (tradeoff: performance VS precision)\r\n    var NEWTON_ITERATIONS = 4;\r\n    var NEWTON_MIN_SLOPE = 0.001;\r\n    var SUBDIVISION_PRECISION = 0.0000001;\r\n    var SUBDIVISION_MAX_ITERATIONS = 10;\r\n\r\n    var kSplineTableSize = 11;\r\n    var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\r\n\r\n    var float32ArraySupported = typeof Float32Array === \"function\";\r\n\r\n    function A (aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }\r\n    function B (aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }\r\n    function C (aA1)      { return 3.0 * aA1; }\r\n\r\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\r\n    function calcBezier (aT, aA1, aA2) {\r\n        return ((A(aA1, aA2)*aT + B(aA1, aA2))*aT + C(aA1))*aT;\r\n    }\r\n\r\n// Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\r\n    function getSlope (aT, aA1, aA2) {\r\n        return 3.0 * A(aA1, aA2)*aT*aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\r\n    }\r\n\r\n    function binarySubdivide (aX, aA, aB, mX1, mX2) {\r\n        var currentX, currentT, i = 0;\r\n        do {\r\n            currentT = aA + (aB - aA) / 2.0;\r\n            currentX = calcBezier(currentT, mX1, mX2) - aX;\r\n            if (currentX > 0.0) {\r\n                aB = currentT;\r\n            } else {\r\n                aA = currentT;\r\n            }\r\n        } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\r\n        return currentT;\r\n    }\r\n\r\n    function newtonRaphsonIterate (aX, aGuessT, mX1, mX2) {\r\n        for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\r\n            var currentSlope = getSlope(aGuessT, mX1, mX2);\r\n            if (currentSlope === 0.0) return aGuessT;\r\n            var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\r\n            aGuessT -= currentX / currentSlope;\r\n        }\r\n        return aGuessT;\r\n    }\r\n\r\n    /**\r\n     * points is an array of [ mX1, mY1, mX2, mY2 ]\r\n     */\r\n    function BezierEasing (points) {\r\n        this._p = points;\r\n        this._mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\r\n        this._precomputed = false;\r\n\r\n        this.get = this.get.bind(this);\r\n    }\r\n\r\n    BezierEasing.prototype = {\r\n\r\n        get: function (x) {\r\n            var mX1 = this._p[0],\r\n                mY1 = this._p[1],\r\n                mX2 = this._p[2],\r\n                mY2 = this._p[3];\r\n            if (!this._precomputed) this._precompute();\r\n            if (mX1 === mY1 && mX2 === mY2) return x; // linear\r\n            // Because JavaScript number are imprecise, we should guarantee the extremes are right.\r\n            if (x === 0) return 0;\r\n            if (x === 1) return 1;\r\n            return calcBezier(this._getTForX(x), mY1, mY2);\r\n        },\r\n\r\n        // Private part\r\n\r\n        _precompute: function () {\r\n            var mX1 = this._p[0],\r\n                mY1 = this._p[1],\r\n                mX2 = this._p[2],\r\n                mY2 = this._p[3];\r\n            this._precomputed = true;\r\n            if (mX1 !== mY1 || mX2 !== mY2)\r\n                this._calcSampleValues();\r\n        },\r\n\r\n        _calcSampleValues: function () {\r\n            var mX1 = this._p[0],\r\n                mX2 = this._p[2];\r\n            for (var i = 0; i < kSplineTableSize; ++i) {\r\n                this._mSampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * getTForX chose the fastest heuristic to determine the percentage value precisely from a given X projection.\r\n         */\r\n        _getTForX: function (aX) {\r\n            var mX1 = this._p[0],\r\n                mX2 = this._p[2],\r\n                mSampleValues = this._mSampleValues;\r\n\r\n            var intervalStart = 0.0;\r\n            var currentSample = 1;\r\n            var lastSample = kSplineTableSize - 1;\r\n\r\n            for (; currentSample !== lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {\r\n                intervalStart += kSampleStepSize;\r\n            }\r\n            --currentSample;\r\n\r\n            // Interpolate to provide an initial guess for t\r\n            var dist = (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample+1] - mSampleValues[currentSample]);\r\n            var guessForT = intervalStart + dist * kSampleStepSize;\r\n\r\n            var initialSlope = getSlope(guessForT, mX1, mX2);\r\n            if (initialSlope >= NEWTON_MIN_SLOPE) {\r\n                return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\r\n            } else if (initialSlope === 0.0) {\r\n                return guessForT;\r\n            } else {\r\n                return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\r\n            }\r\n        }\r\n    };\r\n\r\n    return ob;\r\n\r\n}());\n(function () {\r\n    var lastTime = 0;\r\n    var vendors = ['ms', 'moz', 'webkit', 'o'];\r\n    for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\r\n        window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\r\n        window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\r\n    }\r\n    if(!window.requestAnimationFrame)\r\n        window.requestAnimationFrame = function (callback, element) {\r\n            var currTime = new Date().getTime();\r\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n            var id = setTimeout(function () {\r\n                    callback(currTime + timeToCall);\r\n                },\r\n                timeToCall);\r\n            lastTime = currTime + timeToCall;\r\n            return id;\r\n        };\r\n    if(!window.cancelAnimationFrame)\r\n        window.cancelAnimationFrame = function (id) {\r\n            clearTimeout(id);\r\n        };\r\n}());\r\n\nfunction createElement(parent,child,params){\r\n    if(child){\r\n        child.prototype = Object.create(parent.prototype);\r\n        child.prototype.constructor = child;\r\n        child.prototype._parent = parent.prototype;\r\n    }else{\r\n        var instance = Object.create(parent.prototype,params);\r\n        var getType = {};\r\n        if(instance && getType.toString.call(instance.init) === '[object Function]'){\r\n            instance.init();\r\n        }\r\n        return instance;\r\n    }\r\n}\r\n\r\nfunction extendPrototype(source,destination){\r\n    for (var attr in source.prototype) {\r\n        if (source.prototype.hasOwnProperty(attr)) destination.prototype[attr] = source.prototype[attr];\r\n    }\r\n}\nfunction bezFunction(){\r\n\r\n    var easingFunctions = [];\r\n    var math = Math;\r\n\r\n    function pointOnLine2D(x1,y1, x2,y2, x3,y3){\r\n        var det1 = (x1*y2) + (y1*x3) + (x2*y3) - (x3*y2) - (y3*x1) - (x2*y1);\r\n        return det1 > -0.0001 && det1 < 0.0001;\r\n    }\r\n\r\n    function pointOnLine3D(x1,y1,z1, x2,y2,z2, x3,y3,z3){\r\n        if(z1 === 0 && z2 === 0 && z3 === 0) {\r\n            return pointOnLine2D(x1,y1, x2,y2, x3,y3);\r\n        }\r\n        var dist1 = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2) + Math.pow(z2 - z1, 2));\r\n        var dist2 = Math.sqrt(Math.pow(x3 - x1, 2) + Math.pow(y3 - y1, 2) + Math.pow(z3 - z1, 2));\r\n        var dist3 = Math.sqrt(Math.pow(x3 - x2, 2) + Math.pow(y3 - y2, 2) + Math.pow(z3 - z2, 2));\r\n        var diffDist;\r\n        if(dist1 > dist2){\r\n            if(dist1 > dist3){\r\n                diffDist = dist1 - dist2 - dist3;\r\n            } else {\r\n                diffDist = dist3 - dist2 - dist1;\r\n            }\r\n        } else if(dist3 > dist2){\r\n            diffDist = dist3 - dist2 - dist1;\r\n        } else {\r\n            diffDist = dist2 - dist1 - dist3;\r\n        }\r\n        return diffDist > -0.0001 && diffDist < 0.0001;\r\n    }\r\n\r\n    /*function getEasingCurve(aa,bb,cc,dd,encodedFuncName) {\r\n        if(!encodedFuncName){\r\n            encodedFuncName = ('bez_' + aa+'_'+bb+'_'+cc+'_'+dd).replace(/\\./g, 'p');\r\n        }\r\n        if(easingFunctions[encodedFuncName]){\r\n            return easingFunctions[encodedFuncName];\r\n        }\r\n        var A0, B0, C0;\r\n        var A1, B1, C1;\r\n        easingFunctions[encodedFuncName] = function(tt) {\r\n            var x = tt;\r\n            var i = 0, z;\r\n            while (++i < 20) {\r\n                C0 = 3 * aa;\r\n                B0 = 3 * (cc - aa) - C0;\r\n                A0 = 1 - C0 - B0;\r\n                z = (x * (C0 + x * (B0 + x * A0))) - tt;\r\n                if (bm_abs(z) < 1e-3) break;\r\n                x -= z / (C0 + x * (2 * B0 + 3 * A0 * x));\r\n            }\r\n            C1 = 3 * bb;\r\n            B1 = 3 * (dd - bb) - C1;\r\n            A1 = 1 - C1 - B1;\r\n            var polyB = x * (C1 + x * (B1 + x * A1));\r\n            //return c * polyB + b;\r\n            return polyB;\r\n        };\r\n        return easingFunctions[encodedFuncName];\r\n    }*/\r\n    var getBezierLength = (function(){\r\n\r\n        function Segment(l,p){\r\n            this.l = l;\r\n            this.p = p;\r\n        }\r\n\r\n        return function(pt1,pt2,pt3,pt4){\r\n            var curveSegments = defaultCurveSegments;\r\n            var k;\r\n            var i, len;\r\n            var ptCoord,perc,addedLength = 0;\r\n            var ptDistance;\r\n            var point = [],lastPoint = [];\r\n            var lengthData = {\r\n                addedLength: 0,\r\n                segments: []\r\n            };\r\n            len = pt3.length;\r\n            for(k=0;k<curveSegments;k+=1){\r\n                perc = k/(curveSegments-1);\r\n                ptDistance = 0;\r\n                for(i=0;i<len;i+=1){\r\n                    ptCoord = bm_pow(1-perc,3)*pt1[i]+3*bm_pow(1-perc,2)*perc*pt3[i]+3*(1-perc)*bm_pow(perc,2)*pt4[i]+bm_pow(perc,3)*pt2[i];\r\n                    point[i] = ptCoord;\r\n                    if(lastPoint[i] !== null){\r\n                        ptDistance += bm_pow(point[i] - lastPoint[i],2);\r\n                    }\r\n                    lastPoint[i] = point[i];\r\n                }\r\n                if(ptDistance){\r\n                    ptDistance = bm_sqrt(ptDistance);\r\n                    addedLength += ptDistance;\r\n                }\r\n                lengthData.segments.push(new Segment(addedLength,perc));\r\n            }\r\n            lengthData.addedLength = addedLength;\r\n            return lengthData;\r\n        };\r\n    }());\r\n\r\n    function getSegmentsLength(shapeData) {\r\n        var closed = shapeData.c;\r\n        var pathV = shapeData.v;\r\n        var pathO = shapeData.o;\r\n        var pathI = shapeData.i;\r\n        var i, len = shapeData._length;\r\n        var lengths = [];\r\n        var totalLength = 0;\r\n        for(i=0;i<len-1;i+=1){\r\n            lengths[i] = getBezierLength(pathV[i],pathV[i+1],pathO[i],pathI[i+1]);\r\n            totalLength += lengths[i].addedLength;\r\n        }\r\n        if(closed){\r\n            lengths[i] = getBezierLength(pathV[i],pathV[0],pathO[i],pathI[0]);\r\n            totalLength += lengths[i].addedLength;\r\n        }\r\n        return {lengths:lengths,totalLength:totalLength};\r\n    }\r\n\r\n    function BezierData(length){\r\n        this.segmentLength = 0;\r\n        this.points = new Array(length);\r\n    }\r\n\r\n    function PointData(partial,point){\r\n        this.partialLength = partial;\r\n        this.point = point;\r\n    }\r\n\r\n    var buildBezierData = (function(){\r\n\r\n        var storedData = {};\r\n\r\n        return function (keyData){\r\n            var pt1 = keyData.s;\r\n            var pt2 = keyData.e;\r\n            var pt3 = keyData.to;\r\n            var pt4 = keyData.ti;\r\n            var bezierName = (pt1.join('_')+'_'+pt2.join('_')+'_'+pt3.join('_')+'_'+pt4.join('_')).replace(/\\./g, 'p');\r\n            if(storedData[bezierName]){\r\n                keyData.bezierData = storedData[bezierName];\r\n                return;\r\n            }\r\n        var curveSegments = defaultCurveSegments;\r\n        var k, i, len;\r\n            var ptCoord,perc,addedLength = 0;\r\n            var ptDistance;\r\n            var point,lastPoint = null;\r\n            if(pt1.length === 2 && (pt1[0] != pt2[0] || pt1[1] != pt2[1]) && pointOnLine2D(pt1[0],pt1[1],pt2[0],pt2[1],pt1[0]+pt3[0],pt1[1]+pt3[1]) && pointOnLine2D(pt1[0],pt1[1],pt2[0],pt2[1],pt2[0]+pt4[0],pt2[1]+pt4[1])){\r\n                curveSegments = 2;\r\n            }\r\n            var bezierData = new BezierData(curveSegments);\r\n            len = pt3.length;\r\n            for(k=0;k<curveSegments;k+=1){\r\n            point = new Array(len);\r\n                perc = k/(curveSegments-1);\r\n                ptDistance = 0;\r\n                for(i=0;i<len;i+=1){\r\n                ptCoord = bm_pow(1-perc,3)*pt1[i]+3*bm_pow(1-perc,2)*perc*(pt1[i] + pt3[i])+3*(1-perc)*bm_pow(perc,2)*(pt2[i] + pt4[i])+bm_pow(perc,3)*pt2[i];\r\n                point[i] = ptCoord;\r\n                    if(lastPoint !== null){\r\n                    ptDistance += bm_pow(point[i] - lastPoint[i],2);\r\n                    }\r\n                }\r\n            ptDistance = bm_sqrt(ptDistance);\r\n                addedLength += ptDistance;\r\n                bezierData.points[k] = new PointData(ptDistance,point);\r\n                lastPoint = point;\r\n            }\r\n            bezierData.segmentLength = addedLength;\r\n            keyData.bezierData = bezierData;\r\n            storedData[bezierName] = bezierData;\r\n\r\n        }\r\n    }());\r\n\r\n    function getDistancePerc(perc,bezierData){\r\n        var segments = bezierData.segments;\r\n        var len = segments.length;\r\n        var initPos = bm_floor((len-1)*perc);\r\n        var lengthPos = perc*bezierData.addedLength;\r\n        var lPerc = 0;\r\n        if(lengthPos == segments[initPos].l){\r\n            return segments[initPos].p;\r\n        }else{\r\n            var dir = segments[initPos].l > lengthPos ? -1 : 1;\r\n            var flag = true;\r\n            while(flag){\r\n                if(segments[initPos].l <= lengthPos && segments[initPos+1].l > lengthPos){\r\n                    lPerc = (lengthPos - segments[initPos].l)/(segments[initPos+1].l-segments[initPos].l);\r\n                    flag = false;\r\n                }else{\r\n                    initPos += dir;\r\n                }\r\n                if(initPos < 0 || initPos >= len - 1){\r\n                    flag = false;\r\n                }\r\n            }\r\n            return segments[initPos].p + (segments[initPos+1].p - segments[initPos].p)*lPerc;\r\n        }\r\n    }\r\n\r\n    function SegmentPoints(){\r\n        this.pt1 = new Array(2);\r\n        this.pt2 = new Array(2);\r\n        this.pt3 = new Array(2);\r\n        this.pt4 = new Array(2);\r\n    }\r\n\r\n    function getPointInSegment(pt1, pt2, pt3, pt4, percent, bezierData) {\r\n        var t1 = getDistancePerc(percent,bezierData);\r\n        var u0 = 1;\r\n        var u1 = 1 - t1;\r\n        var ptX = Math.round((u1*u1*u1* pt1[0] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[0] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[0] + t1*t1*t1* pt2[0])* 1000) / 1000;\r\n        var ptY = Math.round((u1*u1*u1* pt1[1] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[1] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[1] + t1*t1*t1* pt2[1])* 1000) / 1000;\r\n        return [ptX, ptY];\r\n    }\r\n\r\n    function getNewSegment(pt1,pt2,pt3,pt4,startPerc,endPerc, bezierData){\r\n\r\n        var pts = new SegmentPoints();\r\n        startPerc = startPerc < 0 ? 0 : startPerc > 1 ? 1 : startPerc;\r\n        var t0 = getDistancePerc(startPerc,bezierData);\r\n        endPerc = endPerc > 1 ? 1 : endPerc;\r\n        var t1 = getDistancePerc(endPerc,bezierData);\r\n        var i, len = pt1.length;\r\n        var u0 = 1 - t0;\r\n        var u1 = 1 - t1;\r\n        //Math.round(num * 100) / 100\r\n        for(i=0;i<len;i+=1){\r\n            pts.pt1[i] =  Math.round((u0*u0*u0* pt1[i] + (t0*u0*u0 + u0*t0*u0 + u0*u0*t0) * pt3[i] + (t0*t0*u0 + u0*t0*t0 + t0*u0*t0)* pt4[i] + t0*t0*t0* pt2[i])* 1000) / 1000;\r\n            pts.pt3[i] = Math.round((u0*u0*u1*pt1[i] + (t0*u0*u1 + u0*t0*u1 + u0*u0*t1)* pt3[i] + (t0*t0*u1 + u0*t0*t1 + t0*u0*t1)* pt4[i] + t0*t0*t1* pt2[i])* 1000) / 1000;\r\n            pts.pt4[i] = Math.round((u0*u1*u1* pt1[i] + (t0*u1*u1 + u0*t1*u1 + u0*u1*t1)* pt3[i] + (t0*t1*u1 + u0*t1*t1 + t0*u1*t1)* pt4[i] + t0*t1*t1* pt2[i])* 1000) / 1000;\r\n            pts.pt2[i] = Math.round((u1*u1*u1* pt1[i] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[i] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[i] + t1*t1*t1* pt2[i])* 1000) / 1000;\r\n        }\r\n        return pts;\r\n    }\r\n\r\n    return {\r\n        //getEasingCurve : getEasingCurve,\r\n        getBezierLength : getBezierLength,\r\n        getSegmentsLength : getSegmentsLength,\r\n        getNewSegment : getNewSegment,\r\n        getPointInSegment : getPointInSegment,\r\n        buildBezierData : buildBezierData,\r\n        pointOnLine2D : pointOnLine2D,\r\n        pointOnLine3D : pointOnLine3D\r\n    };\r\n}\r\n\r\nvar bez = bezFunction();\nfunction dataFunctionManager(){\r\n\r\n    //var tCanvasHelper = document.createElement('canvas').getContext('2d');\r\n\r\n    function completeLayers(layers, comps, fontManager){\r\n        var layerData;\r\n        var animArray, lastFrame;\r\n        var i, len = layers.length;\r\n        var j, jLen, k, kLen;\r\n        for(i=0;i<len;i+=1){\r\n            layerData = layers[i];\r\n            if(!('ks' in layerData) || layerData.completed){\r\n                continue;\r\n            }\r\n            layerData.completed = true;\r\n            if(layerData.tt){\r\n                layers[i-1].td = layerData.tt;\r\n            }\r\n            animArray = [];\r\n            lastFrame = -1;\r\n            if(layerData.hasMask){\r\n                var maskProps = layerData.masksProperties;\r\n                jLen = maskProps.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    if(maskProps[j].pt.k.i){\r\n                        convertPathsToAbsoluteValues(maskProps[j].pt.k);\r\n                    }else{\r\n                        kLen = maskProps[j].pt.k.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            if(maskProps[j].pt.k[k].s){\r\n                                convertPathsToAbsoluteValues(maskProps[j].pt.k[k].s[0]);\r\n                            }\r\n                            if(maskProps[j].pt.k[k].e){\r\n                                convertPathsToAbsoluteValues(maskProps[j].pt.k[k].e[0]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(layerData.ty===0){\r\n                layerData.layers = findCompLayers(layerData.refId, comps);\r\n                completeLayers(layerData.layers,comps, fontManager);\r\n            }else if(layerData.ty === 4){\r\n                completeShapes(layerData.shapes);\r\n            }else if(layerData.ty == 5){\r\n                completeText(layerData, fontManager);\r\n            }\r\n        }\r\n    }\r\n\r\n    function findCompLayers(id,comps){\r\n        var i = 0, len = comps.length;\r\n        while(i<len){\r\n            if(comps[i].id === id){\r\n                if(!comps[i].layers.__used) {\r\n                    comps[i].layers.__used = true;\r\n                    return comps[i].layers;\r\n                }\r\n                return JSON.parse(JSON.stringify(comps[i].layers));\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    function completeShapes(arr){\r\n        var i, len = arr.length;\r\n        var j, jLen;\r\n        var hasPaths = false;\r\n        for(i=len-1;i>=0;i-=1){\r\n            if(arr[i].ty == 'sh'){\r\n                if(arr[i].ks.k.i){\r\n                    convertPathsToAbsoluteValues(arr[i].ks.k);\r\n                }else{\r\n                    jLen = arr[i].ks.k.length;\r\n                    for(j=0;j<jLen;j+=1){\r\n                        if(arr[i].ks.k[j].s){\r\n                            convertPathsToAbsoluteValues(arr[i].ks.k[j].s[0]);\r\n                        }\r\n                        if(arr[i].ks.k[j].e){\r\n                            convertPathsToAbsoluteValues(arr[i].ks.k[j].e[0]);\r\n                        }\r\n                    }\r\n                }\r\n                hasPaths = true;\r\n            }else if(arr[i].ty == 'gr'){\r\n                completeShapes(arr[i].it);\r\n            }\r\n        }\r\n        /*if(hasPaths){\r\n            //mx: distance\r\n            //ss: sensitivity\r\n            //dc: decay\r\n            arr.splice(arr.length-1,0,{\r\n                \"ty\": \"ms\",\r\n                \"mx\":20,\r\n                \"ss\":10,\r\n                 \"dc\":0.001,\r\n                \"maxDist\":200\r\n            });\r\n        }*/\r\n    }\r\n\r\n    function convertPathsToAbsoluteValues(path){\r\n        var i, len = path.i.length;\r\n        for(i=0;i<len;i+=1){\r\n            path.i[i][0] += path.v[i][0];\r\n            path.i[i][1] += path.v[i][1];\r\n            path.o[i][0] += path.v[i][0];\r\n            path.o[i][1] += path.v[i][1];\r\n        }\r\n    }\r\n\r\n    function checkVersion(minimum,animVersionString){\r\n        var animVersion = animVersionString ? animVersionString.split('.') : [100,100,100];\r\n        if(minimum[0]>animVersion[0]){\r\n            return true;\r\n        } else if(animVersion[0] > minimum[0]){\r\n            return false;\r\n        }\r\n        if(minimum[1]>animVersion[1]){\r\n            return true;\r\n        } else if(animVersion[1] > minimum[1]){\r\n            return false;\r\n        }\r\n        if(minimum[2]>animVersion[2]){\r\n            return true;\r\n        } else if(animVersion[2] > minimum[2]){\r\n            return false;\r\n        }\r\n    }\r\n\r\n    var checkText = (function(){\r\n        var minimumVersion = [4,4,14];\r\n\r\n        function updateTextLayer(textLayer){\r\n            var documentData = textLayer.t.d;\r\n            textLayer.t.d = {\r\n                k: [\r\n                    {\r\n                        s:documentData,\r\n                        t:0\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var i, len = layers.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(layers[i].ty === 5){\r\n                    updateTextLayer(layers[i]);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }())\r\n\r\n    var checkChars = (function() {\r\n        var minimumVersion = [4,7,99];\r\n        return function (animationData){\r\n            if(animationData.chars && !checkVersion(minimumVersion,animationData.v)){\r\n                var i, len = animationData.chars.length, j, jLen, k, kLen;\r\n                var pathData, paths;\r\n                for(i = 0; i < len; i += 1) {\r\n                    if(animationData.chars[i].data && animationData.chars[i].data.shapes) {\r\n                        paths = animationData.chars[i].data.shapes[0].it;\r\n                        jLen = paths.length;\r\n\r\n                        for(j = 0; j < jLen; j += 1) {\r\n                            pathData = paths[j].ks.k;\r\n                            if(!pathData.__converted) {\r\n                                convertPathsToAbsoluteValues(paths[j].ks.k);\r\n                                pathData.__converted = true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }())\r\n\r\n    var checkColors = (function(){\r\n        var minimumVersion = [4,1,9];\r\n\r\n        function iterateShapes(shapes){\r\n            var i, len = shapes.length;\r\n            var j, jLen;\r\n            for(i=0;i<len;i+=1){\r\n                if(shapes[i].ty === 'gr'){\r\n                    iterateShapes(shapes[i].it);\r\n                }else if(shapes[i].ty === 'fl' || shapes[i].ty === 'st'){\r\n                    if(shapes[i].c.k && shapes[i].c.k[0].i){\r\n                        jLen = shapes[i].c.k.length;\r\n                        for(j=0;j<jLen;j+=1){\r\n                            if(shapes[i].c.k[j].s){\r\n                                shapes[i].c.k[j].s[0] /= 255;\r\n                                shapes[i].c.k[j].s[1] /= 255;\r\n                                shapes[i].c.k[j].s[2] /= 255;\r\n                                shapes[i].c.k[j].s[3] /= 255;\r\n                            }\r\n                            if(shapes[i].c.k[j].e){\r\n                                shapes[i].c.k[j].e[0] /= 255;\r\n                                shapes[i].c.k[j].e[1] /= 255;\r\n                                shapes[i].c.k[j].e[2] /= 255;\r\n                                shapes[i].c.k[j].e[3] /= 255;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        shapes[i].c.k[0] /= 255;\r\n                        shapes[i].c.k[1] /= 255;\r\n                        shapes[i].c.k[2] /= 255;\r\n                        shapes[i].c.k[3] /= 255;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var i, len = layers.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(layers[i].ty === 4){\r\n                    iterateShapes(layers[i].shapes);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }());\r\n\r\n    var checkShapes = (function(){\r\n        var minimumVersion = [4,4,18];\r\n\r\n\r\n\r\n        function completeShapes(arr){\r\n            var i, len = arr.length;\r\n            var j, jLen;\r\n            var hasPaths = false;\r\n            for(i=len-1;i>=0;i-=1){\r\n                if(arr[i].ty == 'sh'){\r\n                    if(arr[i].ks.k.i){\r\n                        arr[i].ks.k.c = arr[i].closed;\r\n                    }else{\r\n                        jLen = arr[i].ks.k.length;\r\n                        for(j=0;j<jLen;j+=1){\r\n                            if(arr[i].ks.k[j].s){\r\n                                arr[i].ks.k[j].s[0].c = arr[i].closed;\r\n                            }\r\n                            if(arr[i].ks.k[j].e){\r\n                                arr[i].ks.k[j].e[0].c = arr[i].closed;\r\n                            }\r\n                        }\r\n                    }\r\n                    hasPaths = true;\r\n                }else if(arr[i].ty == 'gr'){\r\n                    completeShapes(arr[i].it);\r\n                }\r\n            }\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var layerData;\r\n            var i, len = layers.length;\r\n            var j, jLen, k, kLen;\r\n            for(i=0;i<len;i+=1){\r\n                layerData = layers[i];\r\n                if(layerData.hasMask){\r\n                    var maskProps = layerData.masksProperties;\r\n                    jLen = maskProps.length;\r\n                    for(j=0;j<jLen;j+=1){\r\n                        if(maskProps[j].pt.k.i){\r\n                            maskProps[j].pt.k.c = maskProps[j].cl;\r\n                        }else{\r\n                            kLen = maskProps[j].pt.k.length;\r\n                            for(k=0;k<kLen;k+=1){\r\n                                if(maskProps[j].pt.k[k].s){\r\n                                    maskProps[j].pt.k[k].s[0].c = maskProps[j].cl;\r\n                                }\r\n                                if(maskProps[j].pt.k[k].e){\r\n                                    maskProps[j].pt.k[k].e[0].c = maskProps[j].cl;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if(layerData.ty === 4){\r\n                    completeShapes(layerData.shapes);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }());\r\n\r\n    /*function blitPaths(path){\r\n        var i, len = path.i.length;\r\n        for(i=0;i<len;i+=1){\r\n            path.i[i][0] /= blitter;\r\n            path.i[i][1] /= blitter;\r\n            path.o[i][0] /= blitter;\r\n            path.o[i][1] /= blitter;\r\n            path.v[i][0] /= blitter;\r\n            path.v[i][1] /= blitter;\r\n        }\r\n    }\r\n\r\n    function blitShapes(arr){\r\n        var i, len = arr.length;\r\n        var j, jLen;\r\n        var hasPaths = false;\r\n        for(i=len-1;i>=0;i-=1){\r\n            if(arr[i].ty == 'sh'){\r\n                if(arr[i].ks.k.i){\r\n                    blitPaths(arr[i].ks.k);\r\n                }else{\r\n                    jLen = arr[i].ks.k.length;\r\n                    for(j=0;j<jLen;j+=1){\r\n                        if(arr[i].ks.k[j].s){\r\n                            blitPaths(arr[i].ks.k[j].s[0]);\r\n                        }\r\n                        if(arr[i].ks.k[j].e){\r\n                            blitPaths(arr[i].ks.k[j].e[0]);\r\n                        }\r\n                    }\r\n                }\r\n                hasPaths = true;\r\n            }else if(arr[i].ty == 'gr'){\r\n                blitShapes(arr[i].it);\r\n            }else if(arr[i].ty == 'rc'){\r\n                blitProperty(arr[i].p);\r\n                blitProperty(arr[i].s);\r\n            }else if(arr[i].ty == 'st'){\r\n                blitProperty(arr[i].w);\r\n            }else if(arr[i].ty == 'tr'){\r\n                blitProperty(arr[i].p);\r\n                blitProperty(arr[i].sk);\r\n                blitProperty(arr[i].a);\r\n            }else if(arr[i].ty == 'el'){\r\n                blitProperty(arr[i].p);\r\n                blitProperty(arr[i].s);\r\n            }else if(arr[i].ty == 'rd'){\r\n                blitProperty(arr[i].r);\r\n            }else{\r\n\r\n                //console.log(arr[i].ty );\r\n            }\r\n        }\r\n    }\r\n\r\n    function blitText(data, fontManager){\r\n\r\n    }\r\n\r\n    function blitValue(val){\r\n        if(typeof(val) === 'number'){\r\n            val /= blitter;\r\n        } else {\r\n            var i = val.length-1;\r\n            while(i>=0){\r\n                val[i] /= blitter;\r\n                i-=1;\r\n            }\r\n        }\r\n        return val;\r\n    }\r\n\r\n    function blitProperty(data){\r\n        if(!data.k.length){\r\n            data.k = blitValue(data.k);\r\n        }else if(typeof(data.k[0]) === 'number'){\r\n            data.k = blitValue(data.k);\r\n        } else {\r\n            var i, len = data.k.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(data.k[i].s){\r\n                    //console.log('pre S: ', data.k[i].s);\r\n                    data.k[i].s = blitValue(data.k[i].s);\r\n                    //console.log('post S: ', data.k[i].s);\r\n                }\r\n                if(data.k[i].e){\r\n                    //console.log('pre E: ', data.k[i].e);\r\n                    data.k[i].e = blitValue(data.k[i].e);\r\n                    //console.log('post E: ', data.k[i].e);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function blitLayers(layers,comps, fontManager){\r\n        var layerData;\r\n        var animArray, lastFrame;\r\n        var i, len = layers.length;\r\n        var j, jLen, k, kLen;\r\n        for(i=0;i<len;i+=1){\r\n            layerData = layers[i];\r\n            if(!('ks' in layerData)){\r\n                continue;\r\n            }\r\n            blitProperty(layerData.ks.a);\r\n            blitProperty(layerData.ks.p);\r\n            layerData.completed = true;\r\n            if(layerData.tt){\r\n                layers[i-1].td = layerData.tt;\r\n            }\r\n            animArray = [];\r\n            lastFrame = -1;\r\n            if(layerData.hasMask){\r\n                var maskProps = layerData.masksProperties;\r\n                jLen = maskProps.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    if(maskProps[j].pt.k.i){\r\n                        blitPaths(maskProps[j].pt.k);\r\n                    }else{\r\n                        kLen = maskProps[j].pt.k.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            if(maskProps[j].pt.k[k].s){\r\n                                blitPaths(maskProps[j].pt.k[k].s[0]);\r\n                            }\r\n                            if(maskProps[j].pt.k[k].e){\r\n                                blitPaths(maskProps[j].pt.k[k].e[0]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(layerData.ty===0){\r\n                layerData.w = Math.round(layerData.w/blitter);\r\n                layerData.h = Math.round(layerData.h/blitter);\r\n                blitLayers(layerData.layers,comps, fontManager);\r\n            }else if(layerData.ty === 4){\r\n                blitShapes(layerData.shapes);\r\n            }else if(layerData.ty == 5){\r\n                blitText(layerData, fontManager);\r\n            }else if(layerData.ty == 1){\r\n                layerData.sh /= blitter;\r\n                layerData.sw /= blitter;\r\n            } else {\r\n            }\r\n        }\r\n    }\r\n\r\n    function blitAnimation(animationData,comps, fontManager){\r\n        blitLayers(animationData.layers,comps, fontManager);\r\n    }*/\r\n\r\n    function completeData(animationData, fontManager){\r\n        if(animationData.__complete){\r\n            return;\r\n        }\r\n        checkColors(animationData);\r\n        checkText(animationData);\r\n        checkChars(animationData);\r\n        checkShapes(animationData);\r\n        completeLayers(animationData.layers, animationData.assets, fontManager);\r\n        animationData.__complete = true;\r\n        //blitAnimation(animationData, animationData.assets, fontManager);\r\n    }\r\n\r\n    function completeText(data, fontManager){\r\n        if(data.t.a.length === 0 && !('m' in data.t.p)){\r\n            data.singleShape = true;\r\n        }\r\n    }\r\n\r\n    var moduleOb = {};\r\n    moduleOb.completeData = completeData;\r\n\r\n    return moduleOb;\r\n}\r\n\r\nvar dataManager = dataFunctionManager();\nvar FontManager = (function(){\r\n\r\n    var maxWaitingTime = 5000;\r\n\r\n    function setUpNode(font, family){\r\n        var parentNode = document.createElement('span');\r\n        parentNode.style.fontFamily    = family;\r\n        var node = document.createElement('span');\r\n        // Characters that vary significantly among different fonts\r\n        node.innerHTML = 'giItT1WQy@!-/#';\r\n        // Visible - so we can measure it - but not on the screen\r\n        parentNode.style.position      = 'absolute';\r\n        parentNode.style.left          = '-10000px';\r\n        parentNode.style.top           = '-10000px';\r\n        // Large font size makes even subtle changes obvious\r\n        parentNode.style.fontSize      = '300px';\r\n        // Reset any font properties\r\n        parentNode.style.fontVariant   = 'normal';\r\n        parentNode.style.fontStyle     = 'normal';\r\n        parentNode.style.fontWeight    = 'normal';\r\n        parentNode.style.letterSpacing = '0';\r\n        parentNode.appendChild(node);\r\n        document.body.appendChild(parentNode);\r\n\r\n        // Remember width with no applied web font\r\n        var width = node.offsetWidth;\r\n        node.style.fontFamily = font + ', '+family;\r\n        return {node:node, w:width, parent:parentNode};\r\n    }\r\n\r\n    function checkLoadedFonts() {\r\n        var i, len = this.fonts.length;\r\n        var node, w;\r\n        var loadedCount = len;\r\n        for(i=0;i<len; i+= 1){\r\n            if(this.fonts[i].loaded){\r\n                loadedCount -= 1;\r\n                continue;\r\n            }\r\n            if(this.fonts[i].fOrigin === 't' || this.fonts[i].origin === 2){\r\n                if(window.Typekit && window.Typekit.load && this.typekitLoaded === 0){\r\n                    this.typekitLoaded = 1;\r\n                    try{window.Typekit.load({\r\n                        async: true,\r\n                        active: function() {\r\n                            this.typekitLoaded = 2;\r\n                        }.bind(this)\r\n                    });}catch(e){}\r\n                }\r\n                if(this.typekitLoaded === 2) {\r\n                    this.fonts[i].loaded = true;\r\n                }\r\n            } else if(this.fonts[i].fOrigin === 'n' || this.fonts[i].origin === 0){\r\n                this.fonts[i].loaded = true;\r\n            } else{\r\n                node = this.fonts[i].monoCase.node;\r\n                w = this.fonts[i].monoCase.w;\r\n                if(node.offsetWidth !== w){\r\n                    loadedCount -= 1;\r\n                    this.fonts[i].loaded = true;\r\n                }else{\r\n                    node = this.fonts[i].sansCase.node;\r\n                    w = this.fonts[i].sansCase.w;\r\n                    if(node.offsetWidth !== w){\r\n                        loadedCount -= 1;\r\n                        this.fonts[i].loaded = true;\r\n                    }\r\n                }\r\n                if(this.fonts[i].loaded){\r\n                    this.fonts[i].sansCase.parent.parentNode.removeChild(this.fonts[i].sansCase.parent);\r\n                    this.fonts[i].monoCase.parent.parentNode.removeChild(this.fonts[i].monoCase.parent);\r\n                }\r\n            }\r\n        }\r\n\r\n        if(loadedCount !== 0 && Date.now() - this.initTime < maxWaitingTime){\r\n            setTimeout(checkLoadedFonts.bind(this),20);\r\n        }else{\r\n            setTimeout(function(){this.loaded = true;}.bind(this),0);\r\n\r\n        }\r\n    };\r\n\r\n    function createHelper(def, fontData){\r\n        var tHelper = document.createElementNS(svgNS,'text');\r\n        tHelper.style.fontSize = '100px';\r\n        tHelper.style.fontFamily = fontData.fFamily;\r\n        tHelper.textContent = '1';\r\n        if(fontData.fClass){\r\n            tHelper.style.fontFamily = 'inherit';\r\n            tHelper.className = fontData.fClass;\r\n        } else {\r\n            tHelper.style.fontFamily = fontData.fFamily;\r\n        }\r\n        def.appendChild(tHelper);\r\n        var tCanvasHelper = document.createElement('canvas').getContext('2d');\r\n        tCanvasHelper.font = '100px '+ fontData.fFamily;\r\n        return tCanvasHelper;\r\n    }\r\n\r\n    function addFonts(fontData, defs){\r\n        if(!fontData){\r\n            this.loaded = true;\r\n            return;\r\n        }\r\n        if(this.chars){\r\n            this.loaded = true;\r\n            this.fonts = fontData.list;\r\n            return;\r\n        }\r\n\r\n        var fontArr = fontData.list;\r\n        var i, len = fontArr.length;\r\n        for(i=0; i<len; i+= 1){\r\n            fontArr[i].loaded = false;\r\n            fontArr[i].monoCase = setUpNode(fontArr[i].fFamily,'monospace');\r\n            fontArr[i].sansCase = setUpNode(fontArr[i].fFamily,'sans-serif');\r\n            if(!fontArr[i].fPath) {\r\n                fontArr[i].loaded = true;\r\n            }else if(fontArr[i].fOrigin === 'p' || fontArr[i].origin === 3){\r\n                var s = document.createElement('style');\r\n                s.type = \"text/css\";\r\n                s.innerHTML = \"@font-face {\" + \"font-family: \"+fontArr[i].fFamily+\"; font-style: normal; src: url('\"+fontArr[i].fPath+\"');}\";\r\n                defs.appendChild(s);\r\n            } else if(fontArr[i].fOrigin === 'g' || fontArr[i].origin === 1){\r\n                //<link href='https://fonts.googleapis.com/css?family=Montserrat' rel='stylesheet' type='text/css'>\r\n                var l = document.createElement('link');\r\n                l.type = \"text/css\";\r\n                l.rel = \"stylesheet\";\r\n                l.href = fontArr[i].fPath;\r\n                defs.appendChild(l);\r\n            } else if(fontArr[i].fOrigin === 't' || fontArr[i].origin === 2){\r\n                //<link href='https://fonts.googleapis.com/css?family=Montserrat' rel='stylesheet' type='text/css'>\r\n                var sc = document.createElement('script');\r\n                sc.setAttribute('src',fontArr[i].fPath);\r\n                defs.appendChild(sc);\r\n            }\r\n            fontArr[i].helper = createHelper(defs,fontArr[i]);\r\n            this.fonts.push(fontArr[i]);\r\n        }\r\n        checkLoadedFonts.bind(this)();\r\n    }\r\n\r\n    function addChars(chars){\r\n        if(!chars){\r\n            return;\r\n        }\r\n        if(!this.chars){\r\n            this.chars = [];\r\n        }\r\n        var i, len = chars.length;\r\n        var j, jLen = this.chars.length, found;\r\n        for(i=0;i<len;i+=1){\r\n            j = 0;\r\n            found = false;\r\n            while(j<jLen){\r\n                if(this.chars[j].style === chars[i].style && this.chars[j].fFamily === chars[i].fFamily && this.chars[j].ch === chars[i].ch){\r\n                    found = true;\r\n                }\r\n                j += 1;\r\n            }\r\n            if(!found){\r\n                this.chars.push(chars[i]);\r\n                jLen += 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    function getCharData(char, style, font){\r\n        var i = 0, len = this.chars.length;\r\n        while( i < len) {\r\n            if(this.chars[i].ch === char && this.chars[i].style === style && this.chars[i].fFamily === font){\r\n                return this.chars[i];\r\n            }\r\n            i+= 1;\r\n        }\r\n    }\r\n\r\n    function measureText(char, fontName, size){\r\n        var fontData = this.getFontByName(fontName);\r\n        var tHelper = fontData.helper;\r\n        //tHelper.textContent = char;\r\n        return tHelper.measureText(char).width*size/100;\r\n        //return tHelper.getComputedTextLength()*size/100;\r\n    }\r\n\r\n    function getFontByName(name){\r\n        var i = 0, len = this.fonts.length;\r\n        while(i<len){\r\n            if(this.fonts[i].fName === name) {\r\n                return this.fonts[i];\r\n            }\r\n            i += 1;\r\n        }\r\n        return 'sans-serif';\r\n    }\r\n\r\n    var Font = function(){\r\n        this.fonts = [];\r\n        this.chars = null;\r\n        this.typekitLoaded = 0;\r\n        this.loaded = false;\r\n        this.initTime = Date.now();\r\n    };\r\n    Font.prototype.addChars = addChars;\r\n    Font.prototype.addFonts = addFonts;\r\n    Font.prototype.getCharData = getCharData;\r\n    Font.prototype.getFontByName = getFontByName;\r\n    Font.prototype.measureText = measureText;\r\n\r\n    return Font;\r\n\r\n}());\nvar PropertyFactory = (function(){\r\n\r\n    var initFrame = -999999;\r\n\r\n    function interpolateValue(frameNum, iterationIndex, previousValue, caching){\r\n        var offsetTime = this.offsetTime;\r\n        var newValue;\r\n        if(previousValue.constructor === Array) {\r\n            newValue = Array.apply(null,{length:previousValue.length})\r\n        }\r\n        var i = iterationIndex;\r\n        var len = this.keyframes.length- 1,flag = true;\r\n        var keyData, nextKeyData;\r\n\r\n        while(flag){\r\n            keyData = this.keyframes[i];\r\n            nextKeyData = this.keyframes[i+1];\r\n            if(i == len-1 && frameNum >= nextKeyData.t - offsetTime){\r\n                if(keyData.h){\r\n                    keyData = nextKeyData;\r\n                }\r\n                iterationIndex = 0;\r\n                break;\r\n            }\r\n            if((nextKeyData.t - offsetTime) > frameNum){\r\n                iterationIndex = i;\r\n                break;\r\n            }\r\n            if(i < len - 1){\r\n                i += 1;\r\n            }else{\r\n                iterationIndex = 0;\r\n                flag = false;\r\n            }\r\n        }\r\n\r\n        var k, kLen,perc,jLen, j, fnc;\r\n        if(keyData.to){\r\n\r\n            if(!keyData.bezierData){\r\n                bez.buildBezierData(keyData);\r\n            }\r\n            var bezierData = keyData.bezierData;\r\n            if(frameNum >= nextKeyData.t-offsetTime || frameNum < keyData.t-offsetTime){\r\n                var ind = frameNum >= nextKeyData.t-offsetTime ? bezierData.points.length - 1 : 0;\r\n                kLen = bezierData.points[ind].point.length;\r\n                for(k = 0; k < kLen; k += 1){\r\n                    newValue[k] = bezierData.points[ind].point[k];\r\n                }\r\n                caching._lastBezierData = null;\r\n            }else{\r\n                if(keyData.__fnct){\r\n                    fnc = keyData.__fnct;\r\n                }else{\r\n                    fnc = BezierFactory.getBezierEasing(keyData.o.x,keyData.o.y,keyData.i.x,keyData.i.y,keyData.n).get;\r\n                    keyData.__fnct = fnc;\r\n                }\r\n                perc = fnc((frameNum-(keyData.t-offsetTime))/((nextKeyData.t-offsetTime)-(keyData.t-offsetTime)));\r\n                var distanceInLine = bezierData.segmentLength*perc;\r\n\r\n                var segmentPerc;\r\n                var addedLength =  (caching.lastFrame < frameNum && caching._lastBezierData === bezierData) ? caching._lastAddedLength : 0;\r\n                j =  (caching.lastFrame < frameNum && caching._lastBezierData === bezierData) ? caching._lastPoint : 0;\r\n                flag = true;\r\n                jLen = bezierData.points.length;\r\n                while(flag){\r\n                    addedLength +=bezierData.points[j].partialLength;\r\n                    if(distanceInLine === 0 || perc === 0 || j == bezierData.points.length - 1){\r\n                        kLen = bezierData.points[j].point.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            newValue[k] = bezierData.points[j].point[k];\r\n                        }\r\n                        break;\r\n                    }else if(distanceInLine >= addedLength && distanceInLine < addedLength + bezierData.points[j+1].partialLength){\r\n                        segmentPerc = (distanceInLine-addedLength)/(bezierData.points[j+1].partialLength);\r\n                        kLen = bezierData.points[j].point.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            newValue[k] = bezierData.points[j].point[k] + (bezierData.points[j+1].point[k] - bezierData.points[j].point[k])*segmentPerc;\r\n                        }\r\n                        break;\r\n                    }\r\n                    if(j < jLen - 1){\r\n                        j += 1;\r\n                    }else{\r\n                        flag = false;\r\n                    }\r\n                }\r\n                caching._lastPoint = j;\r\n                caching._lastAddedLength = addedLength - bezierData.points[j].partialLength;\r\n                caching._lastBezierData = bezierData;\r\n            }\r\n        }else{\r\n            var outX,outY,inX,inY, keyValue;\r\n            len = keyData.s.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(keyData.h !== 1){\r\n                    if(frameNum >= nextKeyData.t-offsetTime){\r\n                        perc = 1;\r\n                    }else if(frameNum < keyData.t-offsetTime){\r\n                        perc = 0;\r\n                    }else{\r\n                        if(keyData.o.x.constructor === Array){\r\n                            if(!keyData.__fnct){\r\n                                keyData.__fnct = [];\r\n                            }\r\n                            if (!keyData.__fnct[i]) {\r\n                                outX = keyData.o.x[i] || keyData.o.x[0];\r\n                                outY = keyData.o.y[i] || keyData.o.y[0];\r\n                                inX = keyData.i.x[i] || keyData.i.x[0];\r\n                                inY = keyData.i.y[i] || keyData.i.y[0];\r\n                                fnc = BezierFactory.getBezierEasing(outX,outY,inX,inY).get;\r\n                                keyData.__fnct[i] = fnc;\r\n                            } else {\r\n                                fnc = keyData.__fnct[i];\r\n                            }\r\n                        } else {\r\n                            if (!keyData.__fnct) {\r\n                                outX = keyData.o.x;\r\n                                outY = keyData.o.y;\r\n                                inX = keyData.i.x;\r\n                                inY = keyData.i.y;\r\n                                fnc = BezierFactory.getBezierEasing(outX,outY,inX,inY).get;\r\n                                keyData.__fnct = fnc;\r\n                            } else{\r\n                                fnc = keyData.__fnct;\r\n                            }\r\n                        }\r\n                        perc = fnc((frameNum-(keyData.t-offsetTime))/((nextKeyData.t-offsetTime)-(keyData.t-offsetTime)));\r\n                    }\r\n                }\r\n                if(this.sh && keyData.h !== 1){\r\n                    var initP = keyData.s[i];\r\n                    var endP = keyData.e[i];\r\n                    if(initP-endP < -180){\r\n                        initP += 360;\r\n                    } else if(initP-endP > 180){\r\n                        initP -= 360;\r\n                    }\r\n                    keyValue = initP+(endP-initP)*perc;\r\n                } else {\r\n                    keyValue = keyData.h === 1 ? keyData.s[i] : keyData.s[i]+(keyData.e[i]-keyData.s[i])*perc;\r\n                }\r\n                if(len === 1){\r\n                    newValue = keyValue;\r\n                }else{\r\n                    newValue[i] = keyValue;\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            value: newValue,\r\n            iterationIndex: iterationIndex\r\n        }\r\n    }\r\n\r\n    function getValueAtCurrentTime(){\r\n        if(this.elem.globalData.frameId === this.frameId){\r\n            return;\r\n        }\r\n        this.mdf = false;\r\n        var frameNum = this.comp.renderedFrame - this.offsetTime;\r\n        var initTime = this.keyframes[0].t-this.offsetTime;\r\n        var endTime = this.keyframes[this.keyframes.length- 1].t-this.offsetTime;\r\n        if(!(frameNum === this._caching.lastFrame || (this._caching.lastFrame !== initFrame && ((this._caching.lastFrame >= endTime && frameNum >= endTime) || (this._caching.lastFrame < initTime && frameNum < initTime))))){\r\n            var i = this._caching.lastFrame < frameNum ? this._caching.lastIndex : 0;\r\n            var renderResult = this.interpolateValue(frameNum, i, this.pv, this._caching);\r\n            this._caching.lastIndex = renderResult.iterationIndex;\r\n            if(this.pv.constructor === Array){\r\n                i = 0;\r\n                while(i<this.v.length){\r\n                    this.pv[i] = renderResult.value[i];\r\n                    this.v[i] = this.mult ? this.pv[i] * this.mult : this.pv[i];\r\n                    if(this.lastPValue[i] !== this.pv[i]) {\r\n                        this.mdf = true;\r\n                        this.lastPValue[i] = this.pv[i];\r\n                    }\r\n                    i += 1;\r\n                }\r\n            } else {\r\n                this.pv = renderResult.value;\r\n                this.v = this.mult ? this.pv*this.mult : this.pv;\r\n                if(this.lastPValue != this.pv){\r\n                    this.mdf = true;\r\n                    this.lastPValue = this.pv;\r\n                }\r\n            }\r\n            \r\n        }\r\n        this._caching.lastFrame = frameNum;\r\n        this.frameId = this.elem.globalData.frameId;\r\n    }\r\n\r\n    function getNoValue(){}\r\n\r\n    function ValueProperty(elem,data, mult){\r\n        this.mult = mult;\r\n        this.v = mult ? data.k * mult : data.k;\r\n        this.pv = data.k;\r\n        this.mdf = false;\r\n        this.comp = elem.comp;\r\n        this.k = false;\r\n        this.kf = false;\r\n        this.vel = 0;\r\n        this.getValue = getNoValue;\r\n    }\r\n\r\n    function MultiDimensionalProperty(elem,data, mult){\r\n        this.mult = mult;\r\n        this.data = data;\r\n        this.mdf = false;\r\n        this.comp = elem.comp;\r\n        this.k = false;\r\n        this.kf = false;\r\n        this.frameId = -1;\r\n        this.v = Array.apply(null, {length:data.k.length});\r\n        this.pv = Array.apply(null, {length:data.k.length});\r\n        this.lastValue = Array.apply(null, {length:data.k.length});\r\n        var arr = Array.apply(null, {length:data.k.length});\r\n        this.vel = arr.map(function () { return 0 });\r\n        var i, len = data.k.length;\r\n        for(i = 0;i<len;i+=1){\r\n            this.v[i] = mult ? data.k[i] * mult : data.k[i];\r\n            this.pv[i] = data.k[i];\r\n        }\r\n        this.getValue = getNoValue;\r\n    }\r\n\r\n    function KeyframedValueProperty(elem, data, mult){\r\n        this.keyframes = data.k;\r\n        this.offsetTime = elem.data.st;\r\n        this.lastValue = -99999;\r\n        this.lastPValue = -99999;\r\n        this.frameId = -1;\r\n        this._caching={lastFrame:initFrame,lastIndex:0};\r\n        this.k = true;\r\n        this.kf = true;\r\n        this.data = data;\r\n        this.mult = mult;\r\n        this.elem = elem;\r\n        this.comp = elem.comp;\r\n        this.v = mult ? data.k[0].s[0]*mult : data.k[0].s[0];\r\n        this.pv = data.k[0].s[0];\r\n        this.getValue = getValueAtCurrentTime;\r\n        this.interpolateValue = interpolateValue;\r\n    }\r\n\r\n    function KeyframedMultidimensionalProperty(elem, data, mult){\r\n        var i, len = data.k.length;\r\n        var s, e,to,ti;\r\n        for(i=0;i<len-1;i+=1){\r\n            if(data.k[i].to && data.k[i].s && data.k[i].e){\r\n                s = data.k[i].s;\r\n                e = data.k[i].e;\r\n                to = data.k[i].to;\r\n                ti = data.k[i].ti;\r\n                if((s.length === 2 && !(s[0] === e[0] && s[1] === e[1]) && bez.pointOnLine2D(s[0],s[1],e[0],e[1],s[0] + to[0],s[1] + to[1]) && bez.pointOnLine2D(s[0],s[1],e[0],e[1],e[0] + ti[0],e[1] + ti[1])) || (s.length === 3 && !(s[0] === e[0] && s[1] === e[1] && s[2] === e[2]) && bez.pointOnLine3D(s[0],s[1],s[2],e[0],e[1],e[2],s[0] + to[0],s[1] + to[1],s[2] + to[2]) && bez.pointOnLine3D(s[0],s[1],s[2],e[0],e[1],e[2],e[0] + ti[0],e[1] + ti[1],e[2] + ti[2]))){\r\n                    data.k[i].to = null;\r\n                    data.k[i].ti = null;\r\n                }\r\n            }\r\n        }\r\n        this.keyframes = data.k;\r\n        this.offsetTime = elem.data.st;\r\n        this.k = true;\r\n        this.kf = true;\r\n        this.mult = mult;\r\n        this.elem = elem;\r\n        this.comp = elem.comp;\r\n        this._caching={lastFrame:initFrame,lastIndex:0};\r\n        this.getValue = getValueAtCurrentTime;\r\n        this.interpolateValue = interpolateValue;\r\n        this.frameId = -1;\r\n        this.v = Array.apply(null, {length:data.k[0].s.length});\r\n        this.pv = Array.apply(null, {length:data.k[0].s.length});\r\n        this.lastValue = Array.apply(null, {length:data.k[0].s.length});\r\n        this.lastPValue = Array.apply(null, {length:data.k[0].s.length});\r\n    }\r\n\r\n    var TransformProperty = (function() {\r\n        function positionGetter() {\r\n            if(this.p) {\r\n                return ExpressionValue(this.p);\r\n            } else {\r\n                return [this.px.v, this.py.v, this.pz ? this.pz.v : 0];\r\n            }\r\n        }\r\n        function xPositionGetter() {\r\n            return ExpressionValue(this.px);\r\n        }\r\n        function yPositionGetter() {\r\n            return ExpressionValue(this.py);\r\n        }\r\n        function zPositionGetter() {\r\n            return ExpressionValue(this.pz);\r\n        }\r\n        function anchorGetter() {\r\n            return ExpressionValue(this.a);\r\n        }\r\n        function orientationGetter() {\r\n            return ExpressionValue(this.or);\r\n        }\r\n        function rotationGetter() {\r\n            if(this.r) {\r\n                return ExpressionValue(this.r, 1/degToRads);\r\n            } else {\r\n                return ExpressionValue(this.rz, 1/degToRads);\r\n            }\r\n        }\r\n        function scaleGetter() {\r\n            return ExpressionValue(this.s, 100);\r\n        }\r\n        function opacityGetter() {\r\n            return ExpressionValue(this.o, 100);\r\n        }\r\n        function skewGetter() {\r\n            return ExpressionValue(this.sk);\r\n        }\r\n        function skewAxisGetter() {\r\n            return ExpressionValue(this.sa);\r\n        }\r\n        function applyToMatrix(mat) {\r\n            var i, len = this.dynamicProperties.length;\r\n            for(i = 0; i < len; i += 1) {\r\n                this.dynamicProperties[i].getValue();\r\n                if (this.dynamicProperties[i].mdf) {\r\n                    this.mdf = true;\r\n                }\r\n            }\r\n            if (this.a) {\r\n                mat.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n            }\r\n            if (this.s) {\r\n                mat.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n            }\r\n            if (this.r) {\r\n                mat.rotate(-this.r.v);\r\n            } else {\r\n                mat.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n            }\r\n            if (this.data.p.s) {\r\n                if (this.data.p.z) {\r\n                    mat.translate(this.px.v, this.py.v, -this.pz.v);\r\n                } else {\r\n                    mat.translate(this.px.v, this.py.v, 0);\r\n                }\r\n            } else {\r\n                mat.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);\r\n            }\r\n        }\r\n        function processKeys(){\r\n            if (this.elem.globalData.frameId === this.frameId) {\r\n                return;\r\n            }\r\n\r\n            this.mdf = false;\r\n            var i, len = this.dynamicProperties.length;\r\n\r\n            for(i = 0; i < len; i += 1) {\r\n                this.dynamicProperties[i].getValue();\r\n                if (this.dynamicProperties[i].mdf) {\r\n                    this.mdf = true;\r\n                }\r\n            }\r\n            if (this.mdf) {\r\n                this.v.reset();\r\n                if (this.a) {\r\n                    this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n                }\r\n                if(this.s) {\r\n                    this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n                }\r\n                if (this.sk) {\r\n                    this.v.skewFromAxis(-this.sk.v, this.sa.v);\r\n                }\r\n                if (this.r) {\r\n                    this.v.rotate(-this.r.v);\r\n                } else {\r\n                    this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n                }\r\n                if (this.autoOriented && this.p.keyframes && this.p.getValueAtTime) {\r\n                    var v1,v2;\r\n                    if (this.p._caching.lastFrame+this.p.offsetTime <= this.p.keyframes[0].t) {\r\n                        v1 = this.p.getValueAtTime((this.p.keyframes[0].t + 0.01) / this.elem.globalData.frameRate,0);\r\n                        v2 = this.p.getValueAtTime(this.p.keyframes[0].t / this.elem.globalData.frameRate, 0);\r\n                    } else if(this.p._caching.lastFrame+this.p.offsetTime >= this.p.keyframes[this.p.keyframes.length - 1].t) {\r\n                        v1 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t / this.elem.globalData.frameRate), 0);\r\n                        v2 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t - 0.01) / this.elem.globalData.frameRate, 0);\r\n                    } else {\r\n                        v1 = this.p.pv;\r\n                        v2 = this.p.getValueAtTime((this.p._caching.lastFrame+this.p.offsetTime - 0.01) / this.elem.globalData.frameRate, this.p.offsetTime);\r\n                    }\r\n                    this.v.rotate(-Math.atan2(v1[1] - v2[1], v1[0] - v2[0]));\r\n                }\r\n                if(this.data.p.s){\r\n                    if(this.data.p.z) {\r\n                        this.v.translate(this.px.v, this.py.v, -this.pz.v);\r\n                    } else {\r\n                        this.v.translate(this.px.v, this.py.v, 0);\r\n                    }\r\n                }else{\r\n                    this.v.translate(this.p.v[0],this.p.v[1],-this.p.v[2]);\r\n                }\r\n            }\r\n            this.frameId = this.elem.globalData.frameId;\r\n        }\r\n\r\n        function setInverted(){\r\n            this.inverted = true;\r\n            this.iv = new Matrix();\r\n            if(!this.k){\r\n                if(this.data.p.s){\r\n                    this.iv.translate(this.px.v,this.py.v,-this.pz.v);\r\n                }else{\r\n                    this.iv.translate(this.p.v[0],this.p.v[1],-this.p.v[2]);\r\n                }\r\n                if(this.r){\r\n                    this.iv.rotate(-this.r.v);\r\n                }else{\r\n                    this.iv.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v);\r\n                }\r\n                if(this.s){\r\n                    this.iv.scale(this.s.v[0],this.s.v[1],1);\r\n                }\r\n                if(this.a){\r\n                    this.iv.translate(-this.a.v[0],-this.a.v[1],this.a.v[2]);\r\n                }\r\n            }\r\n        }\r\n\r\n        function autoOrient(){\r\n            //\r\n            //var prevP = this.getValueAtTime();\r\n        }\r\n\r\n        return function TransformProperty(elem,data,arr){\r\n            this.elem = elem;\r\n            this.frameId = -1;\r\n            this.type = 'transform';\r\n            this.dynamicProperties = [];\r\n            this.mdf = false;\r\n            this.data = data;\r\n            this.getValue = processKeys;\r\n            this.applyToMatrix = applyToMatrix;\r\n            this.setInverted = setInverted;\r\n            this.autoOrient = autoOrient;\r\n            this.v = new Matrix();\r\n            if(data.p.s){\r\n                this.px = PropertyFactory.getProp(elem,data.p.x,0,0,this.dynamicProperties);\r\n                this.py = PropertyFactory.getProp(elem,data.p.y,0,0,this.dynamicProperties);\r\n                if(data.p.z){\r\n                    this.pz = PropertyFactory.getProp(elem,data.p.z,0,0,this.dynamicProperties);\r\n                }\r\n            }else{\r\n                this.p = PropertyFactory.getProp(elem,data.p,1,0,this.dynamicProperties);\r\n            }\r\n            if(data.r) {\r\n                this.r = PropertyFactory.getProp(elem, data.r, 0, degToRads, this.dynamicProperties);\r\n            } else if(data.rx) {\r\n                this.rx = PropertyFactory.getProp(elem, data.rx, 0, degToRads, this.dynamicProperties);\r\n                this.ry = PropertyFactory.getProp(elem, data.ry, 0, degToRads, this.dynamicProperties);\r\n                this.rz = PropertyFactory.getProp(elem, data.rz, 0, degToRads, this.dynamicProperties);\r\n                this.or = PropertyFactory.getProp(elem, data.or, 1, degToRads, this.dynamicProperties);\r\n                //sh Indicates it needs to be capped between -180 and 180\r\n                this.or.sh = true;\r\n            }\r\n            if(data.sk){\r\n                this.sk = PropertyFactory.getProp(elem, data.sk, 0, degToRads, this.dynamicProperties);\r\n                this.sa = PropertyFactory.getProp(elem, data.sa, 0, degToRads, this.dynamicProperties);\r\n            }\r\n            if(data.a) {\r\n                this.a = PropertyFactory.getProp(elem,data.a,1,0,this.dynamicProperties);\r\n            }\r\n            if(data.s) {\r\n                this.s = PropertyFactory.getProp(elem,data.s,1,0.01,this.dynamicProperties);\r\n            }\r\n            if(data.o){\r\n                this.o = PropertyFactory.getProp(elem,data.o,0,0.01,this.dynamicProperties);\r\n            } else {\r\n                this.o = {mdf:false,v:1};\r\n            }\r\n            if(this.dynamicProperties.length){\r\n                arr.push(this);\r\n            }else{\r\n                if(this.a){\r\n                    this.v.translate(-this.a.v[0],-this.a.v[1],this.a.v[2]);\r\n                }\r\n                if(this.s){\r\n                    this.v.scale(this.s.v[0],this.s.v[1],this.s.v[2]);\r\n                }\r\n                if(this.sk){\r\n                    this.v.skewFromAxis(-this.sk.v,this.sa.v);\r\n                }\r\n                if(this.r){\r\n                    this.v.rotate(-this.r.v);\r\n                }else{\r\n                    this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n                }\r\n                if(this.data.p.s){\r\n                    if(data.p.z) {\r\n                        this.v.translate(this.px.v, this.py.v, -this.pz.v);\r\n                    } else {\r\n                        this.v.translate(this.px.v, this.py.v, 0);\r\n                    }\r\n                }else{\r\n                    this.v.translate(this.p.v[0],this.p.v[1],-this.p.v[2]);\r\n                }\r\n            }\r\n            Object.defineProperty(this, \"position\", { get: positionGetter});\r\n            Object.defineProperty(this, \"xPosition\", { get: xPositionGetter});\r\n            Object.defineProperty(this, \"yPosition\", { get: yPositionGetter});\r\n            Object.defineProperty(this, \"orientation\", { get: orientationGetter});\r\n            Object.defineProperty(this, \"anchorPoint\", { get: anchorGetter});\r\n            Object.defineProperty(this, \"rotation\", { get: rotationGetter});\r\n            Object.defineProperty(this, \"scale\", { get: scaleGetter});\r\n            Object.defineProperty(this, \"opacity\", { get: opacityGetter});\r\n            Object.defineProperty(this, \"skew\", { get: skewGetter});\r\n            Object.defineProperty(this, \"skewAxis\", { get: skewAxisGetter});\r\n        }\r\n    }());\r\n\r\n    function getProp(elem,data,type, mult, arr) {\r\n        var p;\r\n        if(type === 2){\r\n            p = new TransformProperty(elem, data, arr);\r\n        } else if(data.a === 0){\r\n            if(type === 0) {\r\n                p = new ValueProperty(elem,data,mult);\r\n            } else {\r\n                p = new MultiDimensionalProperty(elem,data, mult);\r\n            }\r\n        } else if(data.a === 1){\r\n            if(type === 0) {\r\n                p = new KeyframedValueProperty(elem,data,mult);\r\n            } else {\r\n                p = new KeyframedMultidimensionalProperty(elem,data, mult);\r\n            }\r\n        } else if(!data.k.length){\r\n            p = new ValueProperty(elem,data, mult);\r\n        }else if(typeof(data.k[0]) === 'number'){\r\n            p = new MultiDimensionalProperty(elem,data, mult);\r\n        }else{\r\n            switch(type){\r\n                case 0:\r\n                    p = new KeyframedValueProperty(elem,data,mult);\r\n                    break;\r\n                case 1:\r\n                    p = new KeyframedMultidimensionalProperty(elem,data,mult);\r\n                    break;\r\n            }\r\n        }\r\n        if(p.k){\r\n            arr.push(p);\r\n        }\r\n        return p;\r\n    }\r\n\r\n    var getGradientProp = (function(){\r\n\r\n        function getValue(forceRender){\r\n            this.prop.getValue();\r\n            this.cmdf = false;\r\n            this.omdf = false;\r\n            if(this.prop.mdf || forceRender){\r\n                var i, len = this.data.p*4;\r\n                var mult, val;\r\n                for(i=0;i<len;i+=1){\r\n                    mult = i%4 === 0 ? 100 : 255;\r\n                    val = Math.round(this.prop.v[i]*mult);\r\n                    if(this.c[i] !== val){\r\n                        this.c[i] = val;\r\n                        this.cmdf = true;\r\n                    }\r\n                }\r\n                if(this.o.length){\r\n                    len = this.prop.v.length;\r\n                    for(i=this.data.p*4;i<len;i+=1){\r\n                        mult = i%2 === 0 ? 100 : 1;\r\n                        val = i%2 === 0 ?  Math.round(this.prop.v[i]*100):this.prop.v[i];\r\n                        if(this.o[i-this.data.p*4] !== val){\r\n                            this.o[i-this.data.p*4] = val;\r\n                            this.omdf = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        function gradientProp(elem,data,arr){\r\n            this.prop = getProp(elem,data.k,1,null,[]);\r\n            this.data = data;\r\n            this.k = this.prop.k;\r\n            this.c = Array.apply(null,{length:data.p*4});\r\n            var cLength = data.k.k[0].s ? (data.k.k[0].s.length - data.p*4) : data.k.k.length - data.p*4;\r\n            this.o = Array.apply(null,{length:cLength});\r\n            this.cmdf = false;\r\n            this.omdf = false;\r\n            this.getValue = getValue;\r\n            if(this.prop.k){\r\n                arr.push(this);\r\n            }\r\n            this.getValue(true);\r\n        }\r\n\r\n        return function getGradientProp(elem,data,arr){\r\n            return new gradientProp(elem,data,arr);\r\n        }\r\n    }());\r\n\r\n\r\n\r\n\r\n    var DashProperty = (function(){\r\n\r\n        function processKeys(forceRender){\r\n            var i = 0, len = this.dataProps.length;\r\n\r\n            if(this.elem.globalData.frameId === this.frameId && !forceRender){\r\n                return;\r\n            }\r\n            this.mdf = false;\r\n            this.frameId = this.elem.globalData.frameId;\r\n            while(i<len){\r\n                if(this.dataProps[i].p.mdf){\r\n                    this.mdf = true;\r\n                    break;\r\n                }\r\n                i+=1;\r\n            }\r\n            if(this.mdf || forceRender){\r\n                if(this.renderer === 'svg') {\r\n                    this.dasharray = '';\r\n                }\r\n                for(i=0;i<len;i+=1){\r\n                    if(this.dataProps[i].n != 'o'){\r\n                        if(this.renderer === 'svg') {\r\n                            this.dasharray += ' ' + this.dataProps[i].p.v;\r\n                        }else{\r\n                            this.dasharray[i] = this.dataProps[i].p.v;\r\n                        }\r\n                    }else{\r\n                        this.dashoffset = this.dataProps[i].p.v;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return function(elem, data,renderer, dynamicProperties){\r\n            this.elem = elem;\r\n            this.frameId = -1;\r\n            this.dataProps = new Array(data.length);\r\n            this.renderer = renderer;\r\n            this.mdf = false;\r\n            this.k = false;\r\n            if(this.renderer === 'svg'){\r\n                this.dasharray = '';\r\n            }else{\r\n\r\n                this.dasharray = new Array(data.length - 1);\r\n            }\r\n            this.dashoffset = 0;\r\n            var i, len = data.length, prop;\r\n            for(i=0;i<len;i+=1){\r\n                prop = PropertyFactory.getProp(elem,data[i].v,0, 0, dynamicProperties);\r\n                this.k = prop.k ? true : this.k;\r\n                this.dataProps[i] = {n:data[i].n,p:prop};\r\n            }\r\n            this.getValue = processKeys;\r\n            if(this.k){\r\n                dynamicProperties.push(this);\r\n            }else{\r\n                this.getValue(true);\r\n            }\r\n\r\n        }\r\n    }());\r\n\r\n    function getDashProp(elem, data,renderer, dynamicProperties) {\r\n        return new DashProperty(elem, data,renderer, dynamicProperties);\r\n    };\r\n\r\n    var TextSelectorProp = (function(){\r\n        var max = Math.max;\r\n        var min = Math.min;\r\n        var floor = Math.floor;\r\n        function updateRange(newCharsFlag){\r\n            this.mdf = newCharsFlag || false;\r\n            if(this.dynamicProperties.length){\r\n                var i, len = this.dynamicProperties.length;\r\n                for(i=0;i<len;i+=1){\r\n                    this.dynamicProperties[i].getValue();\r\n                    if(this.dynamicProperties[i].mdf){\r\n                        this.mdf = true;\r\n                    }\r\n                }\r\n            }\r\n            var totalChars = this.elem.textProperty.currentData ? this.elem.textProperty.currentData.l.length : 0;\r\n            if(newCharsFlag && this.data.r === 2) {\r\n                this.e.v = totalChars;\r\n            }\r\n            var divisor = this.data.r === 2 ? 1 : 100 / totalChars;\r\n            var o = this.o.v/divisor;\r\n            var s = this.s.v/divisor + o;\r\n            var e = (this.e.v/divisor) + o;\r\n            if(s>e){\r\n                var _s = s;\r\n                s = e;\r\n                e = _s;\r\n            }\r\n            this.finalS = s;\r\n            this.finalE = e;\r\n        }\r\n\r\n        function getMult(ind){\r\n            //var easer = bez.getEasingCurve(this.ne.v/100,0,1-this.xe.v/100,1);\r\n            var easer = BezierFactory.getBezierEasing(this.ne.v/100,0,1-this.xe.v/100,1).get;\r\n            var mult = 0;\r\n            var s = this.finalS;\r\n            var e = this.finalE;\r\n            var type = this.data.sh;\r\n            if(type == 2){\r\n                if(e === s){\r\n                    mult = ind >= e ? 1 : 0;\r\n                }else{\r\n                    mult = max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n                }\r\n                mult = easer(mult);\r\n            }else if(type == 3){\r\n                if(e === s){\r\n                    mult = ind >= e ? 0 : 1;\r\n                }else{\r\n                    mult = 1 - max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n                }\r\n\r\n                mult = easer(mult);\r\n            }else if(type == 4){\r\n                if(e === s){\r\n                    mult = 0;\r\n                }else{\r\n                    mult = max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n                    if(mult<.5){\r\n                        mult *= 2;\r\n                    }else{\r\n                        mult = 1 - 2*(mult-0.5);\r\n                    }\r\n                }\r\n                mult = easer(mult);\r\n            }else if(type == 5){\r\n                if(e === s){\r\n                    mult = 0;\r\n                }else{\r\n                    var tot = e - s;\r\n                    /*ind += 0.5;\r\n                    mult = -4/(tot*tot)*(ind*ind)+(4/tot)*ind;*/\r\n                    ind = min(max(0,ind+0.5-s),e-s);\r\n                    var x = -tot/2+ind;\r\n                    var a = tot/2;\r\n                    mult = Math.sqrt(1 - (x*x)/(a*a));\r\n                }\r\n                mult = easer(mult);\r\n            }else if(type == 6){\r\n                if(e === s){\r\n                    mult = 0;\r\n                }else{\r\n                    ind = min(max(0,ind+0.5-s),e-s);\r\n                    mult = (1+(Math.cos((Math.PI+Math.PI*2*(ind)/(e-s)))))/2;\r\n                    /*\r\n                     ind = Math.min(Math.max(s,ind),e-1);\r\n                     mult = (1+(Math.cos((Math.PI+Math.PI*2*(ind-s)/(e-1-s)))))/2;\r\n                     mult = Math.max(mult,(1/(e-1-s))/(e-1-s));*/\r\n                }\r\n                mult = easer(mult);\r\n            }else {\r\n                if(ind >= floor(s)){\r\n                    if(ind-s < 0){\r\n                        mult = 1 - (s - ind);\r\n                    }else{\r\n                        mult = max(0,min(e-ind,1));\r\n                    }\r\n                }\r\n                mult = easer(mult);\r\n            }\r\n            return mult*this.a.v;\r\n        }\r\n\r\n        return function TextSelectorProp(elem,data, arr){\r\n            this.mdf = false;\r\n            this.k = false;\r\n            this.data = data;\r\n            this.dynamicProperties = [];\r\n            this.getValue = updateRange;\r\n            this.getMult = getMult;\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.finalS = 0;\r\n            this.finalE = 0;\r\n            this.s = PropertyFactory.getProp(elem,data.s || {k:0},0,0,this.dynamicProperties);\r\n            if('e' in data){\r\n                this.e = PropertyFactory.getProp(elem,data.e,0,0,this.dynamicProperties);\r\n            }else{\r\n                this.e = {v:100};\r\n            }\r\n            this.o = PropertyFactory.getProp(elem,data.o || {k:0},0,0,this.dynamicProperties);\r\n            this.xe = PropertyFactory.getProp(elem,data.xe || {k:0},0,0,this.dynamicProperties);\r\n            this.ne = PropertyFactory.getProp(elem,data.ne || {k:0},0,0,this.dynamicProperties);\r\n            this.a = PropertyFactory.getProp(elem,data.a,0,0.01,this.dynamicProperties);\r\n            if(this.dynamicProperties.length){\r\n                arr.push(this);\r\n            }else{\r\n                this.getValue();\r\n            }\r\n        }\r\n    }());\r\n\r\n    function getTextSelectorProp(elem, data,arr) {\r\n        return new TextSelectorProp(elem, data, arr);\r\n    };\r\n\r\n    var ob = {\r\n        getProp: getProp,\r\n        getDashProp: getDashProp,\r\n        getTextSelectorProp: getTextSelectorProp,\r\n        getGradientProp: getGradientProp\r\n    };\r\n    return ob;\r\n}());\nfunction ShapePath(){\r\n\tthis.c = false;\r\n\tthis._length = 0;\r\n\tthis._maxLength = 8;\r\n\tthis.v = Array.apply(null,{length:this._maxLength});\r\n\tthis.o = Array.apply(null,{length:this._maxLength});\r\n\tthis.i = Array.apply(null,{length:this._maxLength});\r\n};\r\n\r\nShapePath.prototype.setPathData = function(closed, len) {\r\n\tthis.c = closed;\r\n\tthis.setLength(len);\r\n\tvar i = 0;\r\n\twhile(i < len){\r\n\t\tthis.v[i] = point_pool.newPoint();\r\n\t\tthis.o[i] = point_pool.newPoint();\r\n\t\tthis.i[i] = point_pool.newPoint();\r\n\t\ti += 1;\r\n\t}\r\n};\r\n\r\nShapePath.prototype.setLength = function(len) {\r\n\twhile(this._maxLength < len) {\r\n\t\tthis.doubleArrayLength();\r\n\t}\r\n\tthis._length = len;\r\n}\r\n\r\nShapePath.prototype.doubleArrayLength = function() {\r\n\tthis.v = this.v.concat(Array.apply(null,{length:this._maxLength}))\r\n\tthis.i = this.i.concat(Array.apply(null,{length:this._maxLength}))\r\n\tthis.o = this.o.concat(Array.apply(null,{length:this._maxLength}))\r\n\tthis._maxLength *= 2;\r\n};\r\n\r\nShapePath.prototype.setXYAt = function(x, y, type, pos, replace) {\r\n\tvar arr;\r\n\tthis._length = Math.max(this._length, pos + 1);\r\n\tif(this._length >= this._maxLength) {\r\n\t\tthis.doubleArrayLength();\r\n\t}\r\n\tswitch(type){\r\n\t\tcase 'v':\r\n\t\t\tarr = this.v;\r\n\t\t\tbreak;\r\n\t\tcase 'i':\r\n\t\t\tarr = this.i;\r\n\t\t\tbreak;\r\n\t\tcase 'o':\r\n\t\t\tarr = this.o;\r\n\t\t\tbreak;\r\n\t}\r\n\tif(!arr[pos] || (arr[pos] && !replace)){\r\n\t\tarr[pos] = point_pool.newPoint();\r\n\t}\r\n\tarr[pos][0] = x;\r\n\tarr[pos][1] = y;\r\n};\r\n\r\nShapePath.prototype.setTripleAt = function(vX,vY,oX,oY,iX,iY,pos, replace) {\r\n\tthis.setXYAt(vX,vY,'v',pos, replace);\r\n\tthis.setXYAt(oX,oY,'o',pos, replace);\r\n\tthis.setXYAt(iX,iY,'i',pos, replace);\r\n};\nvar ShapePropertyFactory = (function(){\r\n\r\n    var initFrame = -999999;\r\n\r\n    function interpolateShape(frameNum, iterationIndex, previousValue, isCurrentRender) {\r\n        var keyPropS,keyPropE,isHold;\r\n        if(frameNum < this.keyframes[0].t-this.offsetTime){\r\n            keyPropS = this.keyframes[0].s[0];\r\n            isHold = true;\r\n            iterationIndex = 0;\r\n        }else if(frameNum >= this.keyframes[this.keyframes.length - 1].t-this.offsetTime){\r\n            if(this.keyframes[this.keyframes.length - 2].h === 1){\r\n                keyPropS = this.keyframes[this.keyframes.length - 1].s[0];\r\n            }else{\r\n                keyPropS = this.keyframes[this.keyframes.length - 2].e[0];\r\n            }\r\n            isHold = true;\r\n        }else{\r\n            var i = iterationIndex;\r\n            var len = this.keyframes.length- 1,flag = true,keyData,nextKeyData, j, jLen, k, kLen;\r\n            while(flag){\r\n                keyData = this.keyframes[i];\r\n                nextKeyData = this.keyframes[i+1];\r\n                if((nextKeyData.t - this.offsetTime) > frameNum){\r\n                    break;\r\n                }\r\n                if(i < len - 1){\r\n                    i += 1;\r\n                }else{\r\n                    flag = false;\r\n                }\r\n            }\r\n            isHold = keyData.h === 1;\r\n            iterationIndex = i;\r\n\r\n            var perc;\r\n            if(!isHold){\r\n                if(frameNum >= nextKeyData.t-this.offsetTime){\r\n                    perc = 1;\r\n                }else if(frameNum < keyData.t-this.offsetTime){\r\n                    perc = 0;\r\n                }else{\r\n                    var fnc;\r\n                    if(keyData.__fnct){\r\n                        fnc = keyData.__fnct;\r\n                    }else{\r\n                        fnc = BezierFactory.getBezierEasing(keyData.o.x,keyData.o.y,keyData.i.x,keyData.i.y).get;\r\n                        keyData.__fnct = fnc;\r\n                    }\r\n                    perc = fnc((frameNum-(keyData.t-this.offsetTime))/((nextKeyData.t-this.offsetTime)-(keyData.t-this.offsetTime)));\r\n                }\r\n                keyPropE = keyData.e[0];\r\n            }\r\n            keyPropS = keyData.s[0];\r\n        }\r\n        jLen = previousValue._length;\r\n        kLen = keyPropS.i[0].length;\r\n        var hasModified = false;\r\n        var vertexValue;\r\n        for(j=0;j<jLen;j+=1){\r\n            for(k=0;k<kLen;k+=1){\r\n                if(isHold){\r\n                    vertexValue = keyPropS.i[j][k];\r\n                    if(previousValue.i[j][k] !== vertexValue){\r\n                        previousValue.i[j][k] = vertexValue;\r\n                        if(isCurrentRender) {\r\n                            this.pv.i[j][k] = vertexValue;\r\n                        }\r\n                        hasModified = true;\r\n                    }\r\n                    vertexValue = keyPropS.o[j][k];\r\n                    if(previousValue.o[j][k] !== vertexValue){\r\n                        previousValue.o[j][k] = vertexValue;\r\n                        if(isCurrentRender) {\r\n                            this.pv.o[j][k] = vertexValue;\r\n                        }\r\n                        hasModified = true;\r\n                    }\r\n                    vertexValue = keyPropS.v[j][k];\r\n                    if(previousValue.v[j][k] !== vertexValue){\r\n                        previousValue.v[j][k] = vertexValue;\r\n                        if(isCurrentRender) {\r\n                            this.pv.v[j][k] = vertexValue;\r\n                        }\r\n                        hasModified = true;\r\n                    }\r\n                }else{\r\n                    vertexValue = keyPropS.i[j][k]+(keyPropE.i[j][k]-keyPropS.i[j][k])*perc;\r\n                    if(previousValue.i[j][k] !== vertexValue){\r\n                        previousValue.i[j][k] = vertexValue;\r\n                        if(isCurrentRender) {\r\n                            this.pv.i[j][k] = vertexValue;\r\n                        }\r\n                        hasModified = true;\r\n                    }\r\n                    vertexValue = keyPropS.o[j][k]+(keyPropE.o[j][k]-keyPropS.o[j][k])*perc;\r\n                    if(previousValue.o[j][k] !== vertexValue){\r\n                        previousValue.o[j][k] = vertexValue;\r\n                        if(isCurrentRender) {\r\n                            this.pv.o[j][k] = vertexValue;\r\n                        }\r\n                        hasModified = true;\r\n                    }\r\n                    vertexValue = keyPropS.v[j][k]+(keyPropE.v[j][k]-keyPropS.v[j][k])*perc;\r\n                    if(previousValue.v[j][k] !== vertexValue){\r\n                        previousValue.v[j][k] = vertexValue;\r\n                        if(isCurrentRender) {\r\n                            this.pv.v[j][k] = vertexValue;\r\n                        }\r\n                        hasModified = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if(hasModified) {\r\n            previousValue.c = keyPropS.c;\r\n        }\r\n        return {\r\n            iterationIndex: iterationIndex,\r\n            hasModified: hasModified\r\n        }\r\n    }\r\n\r\n    function interpolateShapeCurrentTime(){\r\n        if(this.elem.globalData.frameId === this.frameId){\r\n            return;\r\n        }\r\n        this.mdf = false;\r\n        var frameNum = this.comp.renderedFrame - this.offsetTime;\r\n        var initTime = this.keyframes[0].t - this.offsetTime;\r\n        var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;\r\n        if(!(this.lastFrame !== initFrame && ((this.lastFrame < initTime && frameNum < initTime) || (this.lastFrame > endTime && frameNum > endTime)))){\r\n            ////\r\n            var i = this.lastFrame < frameNum ? this._lastIndex : 0;\r\n            var renderResult = this.interpolateShape(frameNum, i, this.v, true);\r\n            ////\r\n            this._lastIndex = renderResult.iterationIndex;\r\n            this.mdf = renderResult.hasModified;\r\n            if(renderResult.hasModified) {\r\n                this.paths = this.localShapeCollection;\r\n            }\r\n        }\r\n        this.lastFrame = frameNum;\r\n        this.frameId = this.elem.globalData.frameId;\r\n    }\r\n\r\n    function getShapeValue(){\r\n        return this.v;\r\n    }\r\n\r\n    function resetShape(){\r\n        this.paths = this.localShapeCollection;\r\n        if(!this.k){\r\n            this.mdf = false;\r\n        }\r\n    }\r\n\r\n    function ShapeProperty(elem, data, type){\r\n        this.__shapeObject = 1;\r\n        this.comp = elem.comp;\r\n        this.k = false;\r\n        this.mdf = false;\r\n        var pathData = type === 3 ? data.pt.k : data.ks.k;\r\n        this.v = shape_pool.clone(pathData);\r\n        this.pv = shape_pool.clone(this.v);\r\n        this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n        this.paths = this.localShapeCollection;\r\n        this.paths.addShape(this.v);\r\n        this.reset = resetShape;\r\n    }\r\n    ShapeProperty.prototype.interpolateShape = interpolateShape;\r\n    ShapeProperty.prototype.getValue = getShapeValue;\r\n\r\n    function KeyframedShapeProperty(elem,data,type){\r\n        this.__shapeObject = 1;\r\n        this.comp = elem.comp;\r\n        this.elem = elem;\r\n        this.offsetTime = elem.data.st;\r\n        this._lastIndex = 0;\r\n        this.keyframes = type === 3 ? data.pt.k : data.ks.k;\r\n        this.k = true;\r\n        this.kf = true;\r\n        var i, len = this.keyframes[0].s[0].i.length;\r\n        var jLen = this.keyframes[0].s[0].i[0].length;\r\n        this.v = shape_pool.newShape();\r\n        this.v.setPathData(this.keyframes[0].s[0].c, len);\r\n        this.pv = shape_pool.clone(this.v);\r\n        this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n        this.paths = this.localShapeCollection;\r\n        this.paths.addShape(this.v);\r\n        this.lastFrame = initFrame;\r\n        this.reset = resetShape;\r\n    }\r\n    KeyframedShapeProperty.prototype.getValue = interpolateShapeCurrentTime;\r\n    KeyframedShapeProperty.prototype.interpolateShape = interpolateShape;\r\n\r\n    var EllShapeProperty = (function(){\r\n\r\n        var cPoint = roundCorner;\r\n\r\n        function convertEllToPath(){\r\n            var p0 = this.p.v[0], p1 = this.p.v[1], s0 = this.s.v[0]/2, s1 = this.s.v[1]/2;\r\n            if(this.d !== 3){\r\n                this.v.v[0][0] = p0;\r\n                this.v.v[0][1] = p1-s1;\r\n                this.v.v[1][0] = p0 + s0;\r\n                this.v.v[1][1] = p1;\r\n                this.v.v[2][0] = p0;\r\n                this.v.v[2][1] = p1+s1;\r\n                this.v.v[3][0] = p0 - s0;\r\n                this.v.v[3][1] = p1;\r\n                this.v.i[0][0] = p0 - s0*cPoint;\r\n                this.v.i[0][1] = p1 - s1;\r\n                this.v.i[1][0] = p0 + s0;\r\n                this.v.i[1][1] = p1 - s1*cPoint;\r\n                this.v.i[2][0] = p0 + s0*cPoint;\r\n                this.v.i[2][1] = p1 + s1;\r\n                this.v.i[3][0] = p0 - s0;\r\n                this.v.i[3][1] = p1 + s1*cPoint;\r\n                this.v.o[0][0] = p0 + s0*cPoint;\r\n                this.v.o[0][1] = p1 - s1;\r\n                this.v.o[1][0] = p0 + s0;\r\n                this.v.o[1][1] = p1 + s1*cPoint;\r\n                this.v.o[2][0] = p0 - s0*cPoint;\r\n                this.v.o[2][1] = p1 + s1;\r\n                this.v.o[3][0] = p0 - s0;\r\n                this.v.o[3][1] = p1 - s1*cPoint;\r\n            }else{\r\n                this.v.v[0][0] = p0;\r\n                this.v.v[0][1] = p1-s1;\r\n                this.v.v[1][0] = p0 - s0;\r\n                this.v.v[1][1] = p1;\r\n                this.v.v[2][0] = p0;\r\n                this.v.v[2][1] = p1+s1;\r\n                this.v.v[3][0] = p0 + s0;\r\n                this.v.v[3][1] = p1;\r\n                this.v.i[0][0] = p0 + s0*cPoint;\r\n                this.v.i[0][1] = p1 - s1;\r\n                this.v.i[1][0] = p0 - s0;\r\n                this.v.i[1][1] = p1 - s1*cPoint;\r\n                this.v.i[2][0] = p0 - s0*cPoint;\r\n                this.v.i[2][1] = p1 + s1;\r\n                this.v.i[3][0] = p0 + s0;\r\n                this.v.i[3][1] = p1 + s1*cPoint;\r\n                this.v.o[0][0] = p0 - s0*cPoint;\r\n                this.v.o[0][1] = p1 - s1;\r\n                this.v.o[1][0] = p0 - s0;\r\n                this.v.o[1][1] = p1 + s1*cPoint;\r\n                this.v.o[2][0] = p0 + s0*cPoint;\r\n                this.v.o[2][1] = p1 + s1;\r\n                this.v.o[3][0] = p0 + s0;\r\n                this.v.o[3][1] = p1 - s1*cPoint;\r\n            }\r\n        }\r\n\r\n        function processKeys(frameNum){\r\n            var i, len = this.dynamicProperties.length;\r\n            if(this.elem.globalData.frameId === this.frameId){\r\n                return;\r\n            }\r\n            this.mdf = false;\r\n            this.frameId = this.elem.globalData.frameId;\r\n\r\n            for(i=0;i<len;i+=1){\r\n                this.dynamicProperties[i].getValue(frameNum);\r\n                if(this.dynamicProperties[i].mdf){\r\n                    this.mdf = true;\r\n                }\r\n            }\r\n            if(this.mdf){\r\n                this.convertEllToPath();\r\n            }\r\n        }\r\n\r\n        return function EllShapeProperty(elem,data) {\r\n            /*this.v = {\r\n                v: Array.apply(null,{length:4}),\r\n                i: Array.apply(null,{length:4}),\r\n                o: Array.apply(null,{length:4}),\r\n                c: true\r\n            };*/\r\n            this.v = shape_pool.newShape();\r\n            this.v.setPathData(true, 4);\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.paths = this.localShapeCollection;\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.d = data.d;\r\n            this.dynamicProperties = [];\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.frameId = -1;\r\n            this.mdf = false;\r\n            this.getValue = processKeys;\r\n            this.convertEllToPath = convertEllToPath;\r\n            this.reset = resetShape;\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this.dynamicProperties);\r\n            this.s = PropertyFactory.getProp(elem,data.s,1,0,this.dynamicProperties);\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.convertEllToPath();\r\n            }\r\n        }\r\n    }());\r\n\r\n    var StarShapeProperty = (function() {\r\n\r\n        function convertPolygonToPath(){\r\n            var numPts = Math.floor(this.pt.v);\r\n            var angle = Math.PI*2/numPts;\r\n            /*this.v.v.length = numPts;\r\n            this.v.i.length = numPts;\r\n            this.v.o.length = numPts;*/\r\n            var rad = this.or.v;\r\n            var roundness = this.os.v;\r\n            var perimSegment = 2*Math.PI*rad/(numPts*4);\r\n            var i, currentAng = -Math.PI/ 2;\r\n            var dir = this.data.d === 3 ? -1 : 1;\r\n            currentAng += this.r.v;\r\n            this.v._length = 0;\r\n            for(i=0;i<numPts;i+=1){\r\n                var x = rad * Math.cos(currentAng);\r\n                var y = rad * Math.sin(currentAng);\r\n                var ox = x === 0 && y === 0 ? 0 : y/Math.sqrt(x*x + y*y);\r\n                var oy = x === 0 && y === 0 ? 0 : -x/Math.sqrt(x*x + y*y);\r\n                x +=  + this.p.v[0];\r\n                y +=  + this.p.v[1];\r\n                this.v.setTripleAt(x,y,x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir,x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir, i, true);\r\n                /*this.v.v[i] = [x,y];\r\n                this.v.i[i] = [x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir];\r\n                this.v.o[i] = [x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir];*/\r\n                currentAng += angle*dir;\r\n            }\r\n            this.paths.length = 0;\r\n            this.paths[0] = this.v;\r\n        }\r\n\r\n        function convertStarToPath() {\r\n            var numPts = Math.floor(this.pt.v)*2;\r\n            var angle = Math.PI*2/numPts;\r\n            /*this.v.v.length = numPts;\r\n            this.v.i.length = numPts;\r\n            this.v.o.length = numPts;*/\r\n            var longFlag = true;\r\n            var longRad = this.or.v;\r\n            var shortRad = this.ir.v;\r\n            var longRound = this.os.v;\r\n            var shortRound = this.is.v;\r\n            var longPerimSegment = 2*Math.PI*longRad/(numPts*2);\r\n            var shortPerimSegment = 2*Math.PI*shortRad/(numPts*2);\r\n            var i, rad,roundness,perimSegment, currentAng = -Math.PI/ 2;\r\n            currentAng += this.r.v;\r\n            var dir = this.data.d === 3 ? -1 : 1;\r\n            this.v._length = 0;\r\n            for(i=0;i<numPts;i+=1){\r\n                rad = longFlag ? longRad : shortRad;\r\n                roundness = longFlag ? longRound : shortRound;\r\n                perimSegment = longFlag ? longPerimSegment : shortPerimSegment;\r\n                var x = rad * Math.cos(currentAng);\r\n                var y = rad * Math.sin(currentAng);\r\n                var ox = x === 0 && y === 0 ? 0 : y/Math.sqrt(x*x + y*y);\r\n                var oy = x === 0 && y === 0 ? 0 : -x/Math.sqrt(x*x + y*y);\r\n                x +=  + this.p.v[0];\r\n                y +=  + this.p.v[1];\r\n                this.v.setTripleAt(x,y,x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir,x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir, i, true);\r\n\r\n                /*this.v.v[i] = [x,y];\r\n                this.v.i[i] = [x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir];\r\n                this.v.o[i] = [x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir];\r\n                this.v._length = numPts;*/\r\n                longFlag = !longFlag;\r\n                currentAng += angle*dir;\r\n            }\r\n        }\r\n\r\n        function processKeys() {\r\n            if(this.elem.globalData.frameId === this.frameId){\r\n                return;\r\n            }\r\n            this.mdf = false;\r\n            this.frameId = this.elem.globalData.frameId;\r\n            var i, len = this.dynamicProperties.length;\r\n\r\n            for(i=0;i<len;i+=1){\r\n                this.dynamicProperties[i].getValue();\r\n                if(this.dynamicProperties[i].mdf){\r\n                    this.mdf = true;\r\n                }\r\n            }\r\n            if(this.mdf){\r\n                this.convertToPath();\r\n            }\r\n        }\r\n\r\n        return function StarShapeProperty(elem,data) {\r\n            /*this.v = {\r\n                v: [],\r\n                i: [],\r\n                o: [],\r\n                c: true\r\n            };*/\r\n            this.v = shape_pool.newShape();\r\n            this.v.setPathData(true, 0);\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.data = data;\r\n            this.frameId = -1;\r\n            this.d = data.d;\r\n            this.dynamicProperties = [];\r\n            this.mdf = false;\r\n            this.getValue = processKeys;\r\n            this.reset = resetShape;\r\n            if(data.sy === 1){\r\n                this.ir = PropertyFactory.getProp(elem,data.ir,0,0,this.dynamicProperties);\r\n                this.is = PropertyFactory.getProp(elem,data.is,0,0.01,this.dynamicProperties);\r\n                this.convertToPath = convertStarToPath;\r\n            } else {\r\n                this.convertToPath = convertPolygonToPath;\r\n            }\r\n            this.pt = PropertyFactory.getProp(elem,data.pt,0,0,this.dynamicProperties);\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this.dynamicProperties);\r\n            this.r = PropertyFactory.getProp(elem,data.r,0,degToRads,this.dynamicProperties);\r\n            this.or = PropertyFactory.getProp(elem,data.or,0,0,this.dynamicProperties);\r\n            this.os = PropertyFactory.getProp(elem,data.os,0,0.01,this.dynamicProperties);\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.paths = this.localShapeCollection;\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.convertToPath();\r\n            }\r\n        }\r\n    }());\r\n\r\n    var RectShapeProperty = (function() {\r\n        function processKeys(frameNum){\r\n            if(this.elem.globalData.frameId === this.frameId){\r\n                return;\r\n            }\r\n            this.mdf = false;\r\n            this.frameId = this.elem.globalData.frameId;\r\n            var i, len = this.dynamicProperties.length;\r\n\r\n            for(i=0;i<len;i+=1){\r\n                this.dynamicProperties[i].getValue(frameNum);\r\n                if(this.dynamicProperties[i].mdf){\r\n                    this.mdf = true;\r\n                }\r\n            }\r\n            if(this.mdf){\r\n                this.convertRectToPath();\r\n            }\r\n\r\n        }\r\n\r\n        function convertRectToPath(){\r\n            var p0 = this.p.v[0], p1 = this.p.v[1], v0 = this.s.v[0]/2, v1 = this.s.v[1]/2;\r\n            var round = bm_min(v0,v1,this.r.v);\r\n            var cPoint = round*(1-roundCorner);\r\n            this.v._length = 0;\r\n\r\n            if(this.d === 2 || this.d === 1) {\r\n                this.v.setTripleAt(p0+v0, p1-v1+round,p0+v0, p1-v1+round,p0+v0,p1-v1+cPoint,0, true);\r\n                this.v.setTripleAt(p0+v0, p1+v1-round,p0+v0, p1+v1-cPoint,p0+v0, p1+v1-round,1, true);\r\n                if(round!== 0){\r\n                    this.v.setTripleAt(p0+v0-round, p1+v1,p0+v0-round,p1+v1,p0+v0-cPoint,p1+v1,2, true);\r\n                    this.v.setTripleAt(p0-v0+round,p1+v1,p0-v0+cPoint,p1+v1,p0-v0+round,p1+v1,3, true);\r\n                    this.v.setTripleAt(p0-v0,p1+v1-round,p0-v0,p1+v1-round,p0-v0,p1+v1-cPoint,4, true);\r\n                    this.v.setTripleAt(p0-v0,p1-v1+round,p0-v0,p1-v1+cPoint,p0-v0,p1-v1+round,5, true);\r\n                    this.v.setTripleAt(p0-v0+round,p1-v1,p0-v0+round,p1-v1,p0-v0+cPoint,p1-v1,6, true);\r\n                    this.v.setTripleAt(p0+v0-round,p1-v1,p0+v0-cPoint,p1-v1,p0+v0-round,p1-v1,7, true);\r\n                } else {\r\n                    this.v.setTripleAt(p0-v0,p1+v1,p0-v0+cPoint,p1+v1,p0-v0,p1+v1,2);\r\n                    this.v.setTripleAt(p0-v0,p1-v1,p0-v0,p1-v1+cPoint,p0-v0,p1-v1,3);\r\n                }\r\n            }else{\r\n                this.v.setTripleAt(p0+v0,p1-v1+round,p0+v0,p1-v1+cPoint,p0+v0,p1-v1+round,0, true);\r\n                if(round!== 0){\r\n                    this.v.setTripleAt(p0+v0-round,p1-v1,p0+v0-round,p1-v1,p0+v0-cPoint,p1-v1,1, true);\r\n                    this.v.setTripleAt(p0-v0+round,p1-v1,p0-v0+cPoint,p1-v1,p0-v0+round,p1-v1,2, true);\r\n                    this.v.setTripleAt(p0-v0,p1-v1+round,p0-v0,p1-v1+round,p0-v0,p1-v1+cPoint,3, true);\r\n                    this.v.setTripleAt(p0-v0,p1+v1-round,p0-v0,p1+v1-cPoint,p0-v0,p1+v1-round,4, true);\r\n                    this.v.setTripleAt(p0-v0+round,p1+v1,p0-v0+round,p1+v1,p0-v0+cPoint,p1+v1,5, true);\r\n                    this.v.setTripleAt(p0+v0-round,p1+v1,p0+v0-cPoint,p1+v1,p0+v0-round,p1+v1,6, true);\r\n                    this.v.setTripleAt(p0+v0,p1+v1-round,p0+v0,p1+v1-round,p0+v0,p1+v1-cPoint,7, true);\r\n                } else {\r\n                    this.v.setTripleAt(p0-v0,p1-v1,p0-v0+cPoint,p1-v1,p0-v0,p1-v1,1, true);\r\n                    this.v.setTripleAt(p0-v0,p1+v1,p0-v0,p1+v1-cPoint,p0-v0,p1+v1,2, true);\r\n                    this.v.setTripleAt(p0+v0,p1+v1,p0+v0-cPoint,p1+v1,p0+v0,p1+v1,3, true);\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        return function RectShapeProperty(elem,data) {\r\n            this.v = shape_pool.newShape();\r\n            this.v.c = true;\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.paths = this.localShapeCollection;\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.frameId = -1;\r\n            this.d = data.d;\r\n            this.dynamicProperties = [];\r\n            this.mdf = false;\r\n            this.getValue = processKeys;\r\n            this.convertRectToPath = convertRectToPath;\r\n            this.reset = resetShape;\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this.dynamicProperties);\r\n            this.s = PropertyFactory.getProp(elem,data.s,1,0,this.dynamicProperties);\r\n            this.r = PropertyFactory.getProp(elem,data.r,0,0,this.dynamicProperties);\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.convertRectToPath();\r\n            }\r\n        }\r\n    }());\r\n\r\n    function getShapeProp(elem,data,type, arr){\r\n        var prop;\r\n        if(type === 3 || type === 4){\r\n            var dataProp = type === 3 ? data.pt : data.ks;\r\n            var keys = dataProp.k;\r\n            if(dataProp.a === 1 || keys.length){\r\n                prop = new KeyframedShapeProperty(elem, data, type);\r\n            }else{\r\n                prop = new ShapeProperty(elem, data, type);\r\n            }\r\n        }else if(type === 5){\r\n            prop = new RectShapeProperty(elem, data);\r\n        }else if(type === 6){\r\n            prop = new EllShapeProperty(elem, data);\r\n        }else if(type === 7){\r\n            prop = new StarShapeProperty(elem, data);\r\n        }\r\n        if(prop.k){\r\n            arr.push(prop);\r\n        }\r\n        return prop;\r\n    }\r\n\r\n    function getConstructorFunction() {\r\n        return ShapeProperty;\r\n    }\r\n\r\n    function getKeyframedConstructorFunction() {\r\n        return KeyframedShapeProperty;\r\n    }\r\n\r\n    var ob = {};\r\n    ob.getShapeProp = getShapeProp;\r\n    ob.getConstructorFunction = getConstructorFunction;\r\n    ob.getKeyframedConstructorFunction = getKeyframedConstructorFunction;\r\n    return ob;\r\n}());\nvar ShapeModifiers = (function(){\r\n    var ob = {};\r\n    var modifiers = {};\r\n    ob.registerModifier = registerModifier;\r\n    ob.getModifier = getModifier;\r\n\r\n    function registerModifier(nm,factory){\r\n        if(!modifiers[nm]){\r\n            modifiers[nm] = factory;\r\n        }\r\n    }\r\n\r\n    function getModifier(nm,elem, data, dynamicProperties){\r\n        return new modifiers[nm](elem, data, dynamicProperties);\r\n    }\r\n\r\n    return ob;\r\n}());\r\n\r\nfunction ShapeModifier(){}\r\nShapeModifier.prototype.initModifierProperties = function(){};\r\nShapeModifier.prototype.addShapeToModifier = function(){};\r\nShapeModifier.prototype.addShape = function(data){\r\n    if(!this.closed){\r\n        this.shapes.push({shape:data.sh, data: data, localShapeCollection:shapeCollection_pool.newShapeCollection()});\r\n        this.addShapeToModifier(data.sh);\r\n    }\r\n}\r\nShapeModifier.prototype.init = function(elem,data,dynamicProperties){\r\n    this.elem = elem;\r\n    this.frameId = -1;\r\n    this.shapes = [];\r\n    this.dynamicProperties = [];\r\n    this.mdf = false;\r\n    this.closed = false;\r\n    this.k = false;\r\n    this.comp = elem.comp;\r\n    this.initModifierProperties(elem,data);\r\n    if(this.dynamicProperties.length){\r\n        this.k = true;\r\n        dynamicProperties.push(this);\r\n    }else{\r\n        this.getValue(true);\r\n    }\r\n}\nfunction TrimModifier(){};\r\nextendPrototype(ShapeModifier,TrimModifier);\r\nTrimModifier.prototype.processKeys = function(forceRender){\r\n    if(this.elem.globalData.frameId === this.frameId && !forceRender){\r\n        return;\r\n    }\r\n    this.mdf = forceRender ? true : false;\r\n    this.frameId = this.elem.globalData.frameId;\r\n    var i, len = this.dynamicProperties.length;\r\n\r\n    for(i=0;i<len;i+=1){\r\n        this.dynamicProperties[i].getValue();\r\n        if(this.dynamicProperties[i].mdf){\r\n            this.mdf = true;\r\n        }\r\n    }\r\n    if(this.mdf || forceRender){\r\n        var o = (this.o.v%360)/360;\r\n        if(o < 0){\r\n            o += 1;\r\n        }\r\n        var s = this.s.v + o;\r\n        var e = this.e.v + o;\r\n        if(s == e){\r\n\r\n        }\r\n        if(s>e){\r\n            var _s = s;\r\n            s = e;\r\n            e = _s;\r\n        }\r\n        this.sValue = s;\r\n        this.eValue = e;\r\n        this.oValue = o;\r\n    }\r\n}\r\nTrimModifier.prototype.initModifierProperties = function(elem,data){\r\n    this.sValue = 0;\r\n    this.eValue = 0;\r\n    this.oValue = 0;\r\n    this.getValue = this.processKeys;\r\n    this.s = PropertyFactory.getProp(elem,data.s,0,0.01,this.dynamicProperties);\r\n    this.e = PropertyFactory.getProp(elem,data.e,0,0.01,this.dynamicProperties);\r\n    this.o = PropertyFactory.getProp(elem,data.o,0,0,this.dynamicProperties);\r\n    this.m = data.m;\r\n    if(!this.dynamicProperties.length){\r\n        this.getValue(true);\r\n    }\r\n};\r\n\r\nTrimModifier.prototype.calculateShapeEdges = function(s, e, shapeLength, addedLength, totalModifierLength) {\r\n    var segments = []\r\n    if(e <= 1){\r\n        segments.push({\r\n            s: s,\r\n            e: e\r\n        })\r\n    }else if(s >= 1){\r\n        segments.push({\r\n            s: s - 1,\r\n            e: e - 1\r\n        })\r\n    }else{\r\n        segments.push({\r\n            s: s,\r\n            e: 1\r\n        })\r\n        segments.push({\r\n            s: 0,\r\n            e: e - 1\r\n        })\r\n    }\r\n    var shapeSegments = [];\r\n    var i, len = segments.length, segmentOb;\r\n    for(i = 0; i < len; i += 1) {\r\n        segmentOb = segments[i];\r\n        if (segmentOb.e * totalModifierLength < addedLength || segmentOb.s * totalModifierLength > addedLength + shapeLength) {\r\n            \r\n        } else {\r\n            var shapeS, shapeE;\r\n            if(segmentOb.s * totalModifierLength <= addedLength) {\r\n                shapeS = 0;\r\n            } else {\r\n                shapeS = (segmentOb.s * totalModifierLength - addedLength) / shapeLength;\r\n            }\r\n            if(segmentOb.e * totalModifierLength >= addedLength + shapeLength) {\r\n                shapeE = 1;\r\n            } else {\r\n                shapeE = ((segmentOb.e * totalModifierLength - addedLength) / shapeLength);\r\n            }\r\n            shapeSegments.push([shapeS, shapeE]);\r\n        }\r\n    }\r\n    if(!shapeSegments.length){\r\n        shapeSegments.push([0,0]);\r\n    }\r\n    return shapeSegments;\r\n}\r\n\r\nTrimModifier.prototype.processShapes = function(firstFrame){\r\n    var shapePaths;\r\n    var i, len = this.shapes.length;\r\n    var j, jLen;\r\n    var s = this.sValue;\r\n    var e = this.eValue;\r\n    var pathsData,pathData, totalShapeLength, totalModifierLength = 0;\r\n\r\n    if(e === s){\r\n        for(i=0;i<len;i+=1){\r\n            this.shapes[i].localShapeCollection.releaseShapes();\r\n            this.shapes[i].shape.mdf = true;\r\n            this.shapes[i].shape.paths = this.shapes[i].localShapeCollection;\r\n        }\r\n    } else if(!((e === 1 && s === 0) || (e===0 && s === 1))){\r\n        var segments = [], shapeData, localShapeCollection;\r\n        for(i=0;i<len;i+=1){\r\n            shapeData = this.shapes[i];\r\n            if(!shapeData.shape.mdf && !this.mdf && !firstFrame && this.m !== 2){\r\n                shapeData.shape.paths = shapeData.localShapeCollection;\r\n            } else {\r\n                shapePaths = shapeData.shape.paths;\r\n                jLen = shapePaths._length;\r\n                totalShapeLength = 0;\r\n                if(!shapeData.shape.mdf && shapeData.pathsData){\r\n                    totalShapeLength = shapeData.totalShapeLength;\r\n                } else {\r\n                    pathsData = [];\r\n                    for(j=0;j<jLen;j+=1){\r\n                        pathData = bez.getSegmentsLength(shapePaths.shapes[j]);\r\n                        pathsData.push(pathData);\r\n                        totalShapeLength += pathData.totalLength;\r\n                    }\r\n                    shapeData.totalShapeLength = totalShapeLength;\r\n                    shapeData.pathsData = pathsData;\r\n                }\r\n\r\n                totalModifierLength += totalShapeLength;\r\n                shapeData.shape.mdf = true;\r\n            }\r\n        }\r\n        var shapeS = s, shapeE = e, addedLength = 0;\r\n        var j, jLen;\r\n        for(i = len - 1; i >= 0; i -= 1){\r\n            shapeData = this.shapes[i];\r\n            if (shapeData.shape.mdf) {\r\n                localShapeCollection = shapeData.localShapeCollection;\r\n                localShapeCollection.releaseShapes();\r\n                if(this.m === 2 && len > 1) {\r\n                    var edges = this.calculateShapeEdges(s, e, shapeData.totalShapeLength, addedLength, totalModifierLength);\r\n                    addedLength += shapeData.totalShapeLength;\r\n                } else {\r\n                    edges = [[shapeS, shapeE]]\r\n                }\r\n                jLen = edges.length;\r\n                for (j = 0; j < jLen; j += 1) {\r\n                    shapeS = edges[j][0];\r\n                    shapeE = edges[j][1];\r\n                    segments.length = 0;\r\n                    if(shapeE <= 1){\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * shapeS,\r\n                            e:shapeData.totalShapeLength * shapeE\r\n                        })\r\n                    }else if(shapeS >= 1){\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * (shapeS - 1),\r\n                            e:shapeData.totalShapeLength * (shapeE - 1)\r\n                        })\r\n                    }else{\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * shapeS,\r\n                            e:shapeData.totalShapeLength\r\n                        })\r\n                        segments.push({\r\n                            s:0,\r\n                            e:shapeData.totalShapeLength*(shapeE - 1)\r\n                        })\r\n                    }\r\n                    var newShapesData = this.addShapes(shapeData,segments[0]);\r\n                    if (segments[0].s !== segments[0].e) {\r\n                        var lastPos;\r\n                        if(segments.length > 1){\r\n                            if(shapeData.shape.v.c){\r\n                                var lastShape = newShapesData.pop();\r\n                                this.addPaths(newShapesData, localShapeCollection);\r\n                                newShapesData = this.addShapes(shapeData,segments[1], lastShape);\r\n                            } else {\r\n                                this.addPaths(newShapesData, localShapeCollection);\r\n                                newShapesData = this.addShapes(shapeData,segments[1]);\r\n                            }\r\n                        } \r\n                        this.addPaths(newShapesData, localShapeCollection);\r\n                    }\r\n                    \r\n                }\r\n                shapeData.shape.paths = localShapeCollection;\r\n            }\r\n        }\r\n    } else if(this.mdf){\r\n        for(i=0;i<len;i+=1){\r\n            this.shapes[i].shape.mdf = true;\r\n        }\r\n    }\r\n    if(!this.dynamicProperties.length){\r\n        this.mdf = false;\r\n    }\r\n}\r\n\r\nTrimModifier.prototype.addPaths = function(newPaths, localShapeCollection) {\r\n    var i, len = newPaths.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        localShapeCollection.addShape(newPaths[i])\r\n    }\r\n}\r\n\r\nTrimModifier.prototype.addSegment = function(pt1,pt2,pt3,pt4,shapePath,pos, newShape) {\r\n    /*console.log(pt1, 'vertex: v, at: ', pos);\r\n    console.log(pt2, 'vertex: o, at: ', pos);\r\n    console.log(pt3, 'vertex: i, at: ', pos + 1);\r\n    console.log(pt4, 'vertex: v, at: ', pos + 1);\r\n    console.log('newShape: ', newShape);*/\r\n    shapePath.setXYAt(pt2[0],pt2[1],'o',pos);\r\n    shapePath.setXYAt(pt3[0],pt3[1],'i',pos + 1);\r\n    if(newShape){\r\n        shapePath.setXYAt(pt1[0],pt1[1],'v',pos);\r\n    }\r\n    shapePath.setXYAt(pt4[0],pt4[1],'v',pos + 1);\r\n}\r\n\r\nTrimModifier.prototype.addShapes = function(shapeData, shapeSegment, shapePath){\r\n    var pathsData = shapeData.pathsData;\r\n    var shapePaths = shapeData.shape.paths.shapes;\r\n    var i, len = shapeData.shape.paths._length, j, jLen;\r\n    var addedLength = 0;\r\n    var currentLengthData,segmentCount;\r\n    var lengths;\r\n    var segment;\r\n    var shapes = [];\r\n    var initPos;\r\n    var newShape = true;\r\n    if(!shapePath){\r\n        shapePath = shape_pool.newShape();\r\n        segmentCount = 0;\r\n        initPos = 0;\r\n    } else {\r\n        segmentCount = shapePath._length;\r\n        initPos = shapePath._length;\r\n    }\r\n    shapes.push(shapePath);\r\n    for(i=0;i<len;i+=1){\r\n        lengths = pathsData[i].lengths;\r\n        shapePath.c = shapePaths[i].c;\r\n        jLen = shapePaths[i].c ? lengths.length : lengths.length + 1;\r\n        for(j=1;j<jLen;j+=1){\r\n            currentLengthData = lengths[j-1];\r\n            if(addedLength + currentLengthData.addedLength < shapeSegment.s){\r\n                addedLength += currentLengthData.addedLength;\r\n                shapePath.c = false;\r\n            } else if(addedLength > shapeSegment.e){\r\n                shapePath.c = false;\r\n                break;\r\n            } else {\r\n                if(shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + currentLengthData.addedLength){\r\n                    this.addSegment(shapePaths[i].v[j-1],shapePaths[i].o[j-1],shapePaths[i].i[j],shapePaths[i].v[j],shapePath,segmentCount,newShape);\r\n                    newShape = false;\r\n                } else {\r\n                    segment = bez.getNewSegment(shapePaths[i].v[j-1],shapePaths[i].v[j],shapePaths[i].o[j-1],shapePaths[i].i[j], (shapeSegment.s - addedLength)/currentLengthData.addedLength,(shapeSegment.e - addedLength)/currentLengthData.addedLength, lengths[j-1]);\r\n                    this.addSegment(segment.pt1,segment.pt3,segment.pt4,segment.pt2,shapePath,segmentCount,newShape);\r\n                    newShape = false;\r\n                    shapePath.c = false;\r\n                }\r\n                addedLength += currentLengthData.addedLength;\r\n                segmentCount += 1;\r\n            }\r\n        }\r\n        if(shapePaths[i].c){\r\n            currentLengthData = lengths[j-1];\r\n            if(addedLength <= shapeSegment.e){\r\n                var segmentLength = lengths[j-1].addedLength;\r\n                if(shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + segmentLength){\r\n                    this.addSegment(shapePaths[i].v[j-1],shapePaths[i].o[j-1],shapePaths[i].i[0],shapePaths[i].v[0],shapePath,segmentCount,newShape);\r\n                    newShape = false;\r\n                }else{\r\n                    segment = bez.getNewSegment(shapePaths[i].v[j-1],shapePaths[i].v[0],shapePaths[i].o[j-1],shapePaths[i].i[0], (shapeSegment.s - addedLength)/segmentLength,(shapeSegment.e - addedLength)/segmentLength, lengths[j-1]);\r\n                    this.addSegment(segment.pt1,segment.pt3,segment.pt4,segment.pt2,shapePath,segmentCount,newShape);\r\n                    newShape = false;\r\n                    shapePath.c = false;\r\n                }\r\n            } else {\r\n                shapePath.c = false;\r\n            }\r\n            addedLength += currentLengthData.addedLength;\r\n            segmentCount += 1;\r\n        }\r\n        if(shapePath._length){\r\n            shapePath.setXYAt(shapePath.v[initPos][0],shapePath.v[initPos][1],'i',initPos);\r\n            shapePath.setXYAt(shapePath.v[shapePath._length - 1][0],shapePath.v[shapePath._length - 1][1],'o',shapePath._length - 1);\r\n        }\r\n        if(addedLength > shapeSegment.e){\r\n            break;\r\n        }\r\n        if(i<len-1){\r\n            shapePath = shape_pool.newShape();\r\n            newShape = true;\r\n            shapes.push(shapePath);\r\n            segmentCount = 0;\r\n        }\r\n    }\r\n    return shapes;\r\n\r\n}\r\n\r\n\r\nShapeModifiers.registerModifier('tm',TrimModifier);\nfunction RoundCornersModifier(){};\r\nextendPrototype(ShapeModifier,RoundCornersModifier);\r\nRoundCornersModifier.prototype.processKeys = function(forceRender){\r\n    if(this.elem.globalData.frameId === this.frameId && !forceRender){\r\n        return;\r\n    }\r\n    this.mdf = forceRender ? true : false;\r\n    this.frameId = this.elem.globalData.frameId;\r\n    var i, len = this.dynamicProperties.length;\r\n\r\n    for(i=0;i<len;i+=1){\r\n        this.dynamicProperties[i].getValue();\r\n        if(this.dynamicProperties[i].mdf){\r\n            this.mdf = true;\r\n        }\r\n    }\r\n}\r\nRoundCornersModifier.prototype.initModifierProperties = function(elem,data){\r\n    this.getValue = this.processKeys;\r\n    this.rd = PropertyFactory.getProp(elem,data.r,0,null,this.dynamicProperties);\r\n    if(!this.dynamicProperties.length){\r\n        this.getValue(true);\r\n    }\r\n};\r\n\r\nRoundCornersModifier.prototype.processPath = function(path, round){\r\n    var cloned_path = shape_pool.newShape();\r\n    cloned_path.c = path.c;\r\n    var i, len = path._length;\r\n    var currentV,currentI,currentO,closerV, newV,newO,newI,distance,newPosPerc,index = 0;\r\n    var vX,vY,oX,oY,iX,iY;\r\n    for(i=0;i<len;i+=1){\r\n        currentV = path.v[i];\r\n        currentO = path.o[i];\r\n        currentI = path.i[i];\r\n        if(currentV[0]===currentO[0] && currentV[1]===currentO[1] && currentV[0]===currentI[0] && currentV[1]===currentI[1]){\r\n            if((i===0 || i === len - 1) && !path.c){\r\n                cloned_path.setTripleAt(currentV[0],currentV[1],currentO[0],currentO[1],currentI[0],currentI[1],index);\r\n                /*cloned_path.v[index] = currentV;\r\n                cloned_path.o[index] = currentO;\r\n                cloned_path.i[index] = currentI;*/\r\n                index += 1;\r\n            } else {\r\n                if(i===0){\r\n                    closerV = path.v[len-1];\r\n                } else {\r\n                    closerV = path.v[i-1];\r\n                }\r\n                distance = Math.sqrt(Math.pow(currentV[0]-closerV[0],2)+Math.pow(currentV[1]-closerV[1],2));\r\n                newPosPerc = distance ? Math.min(distance/2,round)/distance : 0;\r\n                vX = iX = currentV[0]+(closerV[0]-currentV[0])*newPosPerc;\r\n                vY = iY = currentV[1]-(currentV[1]-closerV[1])*newPosPerc;\r\n                oX = vX-(vX-currentV[0])*roundCorner;\r\n                oY = vY-(vY-currentV[1])*roundCorner;\r\n                cloned_path.setTripleAt(vX,vY,oX,oY,iX,iY,index);\r\n                index += 1;\r\n\r\n                if(i === len - 1){\r\n                    closerV = path.v[0];\r\n                } else {\r\n                    closerV = path.v[i+1];\r\n                }\r\n                distance = Math.sqrt(Math.pow(currentV[0]-closerV[0],2)+Math.pow(currentV[1]-closerV[1],2));\r\n                newPosPerc = distance ? Math.min(distance/2,round)/distance : 0;\r\n                vX = oX = currentV[0]+(closerV[0]-currentV[0])*newPosPerc;\r\n                vY = oY = currentV[1]+(closerV[1]-currentV[1])*newPosPerc;\r\n                iX = vX-(vX-currentV[0])*roundCorner;\r\n                iY = vY-(vY-currentV[1])*roundCorner;\r\n                cloned_path.setTripleAt(vX,vY,oX,oY,iX,iY,index);\r\n                index += 1;\r\n            }\r\n        } else {\r\n            cloned_path.setTripleAt(path.v[i][0],path.v[i][1],path.o[i][0],path.o[i][1],path.i[i][0],path.i[i][1],index);\r\n            index += 1;\r\n        }\r\n    }\r\n    return cloned_path;\r\n}\r\n\r\nRoundCornersModifier.prototype.processShapes = function(firstFrame){\r\n    var shapePaths;\r\n    var i, len = this.shapes.length;\r\n    var j, jLen;\r\n    var rd = this.rd.v;\r\n\r\n    if(rd !== 0){\r\n        var shapeData, newPaths, localShapeCollection;\r\n        for(i=0;i<len;i+=1){\r\n            shapeData = this.shapes[i];\r\n            newPaths = shapeData.shape.paths;\r\n            localShapeCollection = shapeData.localShapeCollection;\r\n            if(!(!shapeData.shape.mdf && !this.mdf && !firstFrame)){\r\n                localShapeCollection.releaseShapes();\r\n                shapeData.shape.mdf = true;\r\n                shapePaths = shapeData.shape.paths.shapes;\r\n                jLen = shapeData.shape.paths._length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    localShapeCollection.addShape(this.processPath(shapePaths[j],rd));\r\n                }\r\n            }\r\n            shapeData.shape.paths = shapeData.localShapeCollection;\r\n        }\r\n\r\n    }\r\n    if(!this.dynamicProperties.length){\r\n        this.mdf = false;\r\n    }\r\n}\r\n\r\n\r\nShapeModifiers.registerModifier('rd',RoundCornersModifier);\nfunction RepeaterModifier(){};\r\nRepeaterModifier.prototype.processKeys = function(forceRender){\r\n    if(this.elem.globalData.frameId === this.frameId && !forceRender){\r\n        return;\r\n    }\r\n    this.mdf = forceRender ? true : false;\r\n    var i, len = this.dynamicProperties.length;\r\n\r\n    for(i=0;i<len;i+=1){\r\n        this.dynamicProperties[i].getValue();\r\n        if(this.dynamicProperties[i].mdf){\r\n            this.mdf = true;\r\n        }\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.initModifierProperties = function(elem,data){\r\n    this.getValue = this.processKeys;\r\n    this.c = PropertyFactory.getProp(elem,data.c,0,null,this.dynamicProperties);\r\n    this.o = PropertyFactory.getProp(elem,data.o,0,null,this.dynamicProperties);\r\n    this.tr = PropertyFactory.getProp(elem,data.tr,2,null,this.dynamicProperties);\r\n    this.data = data;\r\n    if(!this.dynamicProperties.length){\r\n        this.getValue(true);\r\n    }\r\n    this.pMatrix = new Matrix();\r\n    this.rMatrix = new Matrix();\r\n    this.sMatrix = new Matrix();\r\n    this.tMatrix = new Matrix();\r\n    this.matrix = new Matrix();\r\n};\r\n\r\nRepeaterModifier.prototype.applyTransforms = function(pMatrix, rMatrix, sMatrix, transform, perc, inv){\r\n    var dir = inv ? -1 : 1;\r\n    var scaleX = transform.s.v[0] + (1 - transform.s.v[0]) * (1 - perc);\r\n    var scaleY = transform.s.v[1] + (1 - transform.s.v[1]) * (1 - perc);\r\n    pMatrix.translate(transform.p.v[0] * dir * perc, transform.p.v[1] * dir * perc, transform.p.v[2]);\r\n    rMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\r\n    rMatrix.rotate(-transform.r.v * dir * perc);\r\n    rMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\r\n    sMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\r\n    sMatrix.scale(inv ? 1/scaleX : scaleX, inv ? 1/scaleY : scaleY);\r\n    sMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\r\n}\r\n\r\nRepeaterModifier.prototype.init = function(elem, arr, pos, elemsData, dynamicProperties) {\r\n    this.elem = elem;\r\n    this.arr = arr;\r\n    this.pos = pos;\r\n    this.elemsData = elemsData;\r\n    this._currentCopies = 0;\r\n    this._elements = [];\r\n    this._groups = [];\r\n    this.dynamicProperties = [];\r\n    this.frameId = -1;\r\n    this.initModifierProperties(elem,arr[pos]);\r\n    var cont = 0;\r\n    while(pos>0){\r\n        pos -= 1;\r\n        //this._elements.unshift(arr.splice(pos,1)[0]);\r\n        this._elements.unshift(arr[pos]);\r\n        cont += 1;\r\n    }\r\n    if(this.dynamicProperties.length){\r\n        this.k = true;\r\n        dynamicProperties.push(this);\r\n    }else{\r\n        this.getValue(true);\r\n    }\r\n}\r\n\r\nRepeaterModifier.prototype.resetElements = function(elements){\r\n    var i, len = elements.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        elements[i]._processed = false;\r\n        if(elements[i].ty === 'gr'){\r\n            this.resetElements(elements[i].it);\r\n        }\r\n    }\r\n}\r\n\r\nRepeaterModifier.prototype.cloneElements = function(elements){\r\n    var i, len = elements.length;\r\n    var newElements = JSON.parse(JSON.stringify(elements));\r\n    this.resetElements(newElements);\r\n    return newElements;\r\n}\r\n\r\nRepeaterModifier.prototype.changeGroupRender = function(elements, renderFlag) {\r\n    var i, len = elements.length;\r\n    for(i = 0; i < len ; i += 1) {\r\n        elements[i]._render = renderFlag;\r\n        if(elements[i].ty === 'gr') {\r\n            this.changeGroupRender(elements[i].it, renderFlag);\r\n        }\r\n    }\r\n}\r\n\r\nRepeaterModifier.prototype.processShapes = function(firstFrame){\r\n\r\n    if(this.elem.globalData.frameId === this.frameId){\r\n        return;\r\n    }\r\n    this.frameId = this.elem.globalData.frameId;\r\n    if(!this.dynamicProperties.length && !firstFrame){\r\n        this.mdf = false;\r\n    }\r\n    if(this.mdf){\r\n        var copies = Math.ceil(this.c.v);\r\n        if(this._groups.length < copies){\r\n            while(this._groups.length < copies){\r\n                var group = {\r\n                    it:this.cloneElements(this._elements),\r\n                    ty:'gr'\r\n                }\r\n                group.it.push({\"a\":{\"a\":0,\"ix\":1,\"k\":[0,0]},\"nm\":\"Transform\",\"o\":{\"a\":0,\"ix\":7,\"k\":100},\"p\":{\"a\":0,\"ix\":2,\"k\":[0,0]},\"r\":{\"a\":0,\"ix\":6,\"k\":0},\"s\":{\"a\":0,\"ix\":3,\"k\":[100,100]},\"sa\":{\"a\":0,\"ix\":5,\"k\":0},\"sk\":{\"a\":0,\"ix\":4,\"k\":0},\"ty\":\"tr\"});\r\n                \r\n                this.arr.splice(0,0,group);\r\n                this._groups.splice(0,0,group);\r\n                this._currentCopies += 1;\r\n            }\r\n            this.elem.reloadShapes();\r\n        }\r\n        var i, cont = 0, renderFlag;\r\n        for(i = 0; i  <= this._groups.length - 1; i += 1){\r\n            renderFlag = cont < copies;\r\n            this._groups[i]._render = renderFlag;\r\n            this.changeGroupRender(this._groups[i].it, renderFlag);\r\n            cont += 1;\r\n        }\r\n        \r\n        this._currentCopies = copies;\r\n        this.elem.firstFrame = true;\r\n        ////\r\n\r\n        var offset = this.o.v;\r\n        var offsetModulo = offset%1;\r\n        var roundOffset = offset > 0 ? Math.floor(offset) : Math.ceil(offset);\r\n        var k;\r\n        var tMat = this.tr.v.props;\r\n        var pProps = this.pMatrix.props;\r\n        var rProps = this.rMatrix.props;\r\n        var sProps = this.sMatrix.props;\r\n        this.pMatrix.reset();\r\n        this.rMatrix.reset();\r\n        this.sMatrix.reset();\r\n        this.tMatrix.reset();\r\n        this.matrix.reset();\r\n        var iteration = 0;\r\n\r\n        if(offset > 0) {\r\n            while(iteration<roundOffset){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\r\n                iteration += 1;\r\n            }\r\n            if(offsetModulo){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, offsetModulo, false);\r\n                iteration += offsetModulo;\r\n            }\r\n        } else if(offset < 0) {\r\n            while(iteration>roundOffset){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, true);\r\n                iteration -= 1;\r\n            }\r\n            if(offsetModulo){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, - offsetModulo, true);\r\n                iteration -= offsetModulo;\r\n            }\r\n        }\r\n        i = this.data.m === 1 ? 0 : this._currentCopies - 1;\r\n        var dir = this.data.m === 1 ? 1 : -1;\r\n        cont = this._currentCopies;\r\n        while(cont){\r\n            if(iteration !== 0){\r\n                if((i !== 0 && dir === 1) || (i !== this._currentCopies - 1 && dir === -1)){\r\n                    this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\r\n                }\r\n                this.matrix.transform(rProps[0],rProps[1],rProps[2],rProps[3],rProps[4],rProps[5],rProps[6],rProps[7],rProps[8],rProps[9],rProps[10],rProps[11],rProps[12],rProps[13],rProps[14],rProps[15]);\r\n                this.matrix.transform(sProps[0],sProps[1],sProps[2],sProps[3],sProps[4],sProps[5],sProps[6],sProps[7],sProps[8],sProps[9],sProps[10],sProps[11],sProps[12],sProps[13],sProps[14],sProps[15]);\r\n                this.matrix.transform(pProps[0],pProps[1],pProps[2],pProps[3],pProps[4],pProps[5],pProps[6],pProps[7],pProps[8],pProps[9],pProps[10],pProps[11],pProps[12],pProps[13],pProps[14],pProps[15]);\r\n                var items = this.elemsData[i].it;\r\n                var itemsTransform = items[items.length - 1].transform.mProps.v.props;\r\n                var j, jLen = itemsTransform.length;\r\n                for(j=0;j<jLen;j+=1) {\r\n                    itemsTransform[j] = this.matrix.props[j];\r\n                }\r\n                this.matrix.reset();\r\n            } else {\r\n                this.matrix.reset();\r\n                var items = this.elemsData[i].it;\r\n                var itemsTransform = items[items.length - 1].transform.mProps.v.props;\r\n                var j, jLen = itemsTransform.length;\r\n                for(j=0;j<jLen;j+=1) {\r\n                    itemsTransform[j] = this.matrix.props[j];\r\n                }\r\n            }\r\n            iteration += 1;\r\n            cont -= 1;\r\n            i += dir;\r\n        }\r\n    }\r\n}\r\n\r\nRepeaterModifier.prototype.addShape = function(){}\r\n\r\nShapeModifiers.registerModifier('rp',RepeaterModifier);\nfunction ShapeCollection(){\r\n\tthis._length = 0;\r\n\tthis._maxLength = 4;\r\n\tthis.shapes = Array.apply(null,{length:this._maxLength});\r\n};\r\n\r\nShapeCollection.prototype.addShape = function(shapeData){\r\n\tif(this._length === this._maxLength){\r\n\t\tthis.shapes = this.shapes.concat(Array.apply(null,{length:this._maxLength}));\r\n\t\tthis._maxLength *= 2;\r\n\t}\r\n\tthis.shapes[this._length] = shapeData;\r\n\tthis._length += 1;\r\n};\r\n\r\nShapeCollection.prototype.releaseShapes = function(){\r\n\tvar i;\r\n\tfor(i = 0; i < this._length; i += 1) {\r\n\t\tshape_pool.release(this.shapes[i]);\r\n\t}\r\n\tthis._length = 0;\r\n};\nvar ImagePreloader = (function(){\r\n\r\n    var imagesLoadedCb;\r\n\r\n    function imageLoaded(){\r\n        this.loadedAssets += 1;\r\n        if(this.loadedAssets === this.totalImages){\r\n            if(imagesLoadedCb) {\r\n                imagesLoadedCb(null);\r\n            }\r\n        }\r\n    }\r\n\r\n    function getAssetsPath(assetData){\r\n        var path = '';\r\n        if(this.assetsPath){\r\n            var imagePath = assetData.p;\r\n            if(imagePath.indexOf('images/') !== -1){\r\n                imagePath = imagePath.split('/')[1];\r\n            }\r\n            path = this.assetsPath + imagePath;\r\n        } else {\r\n            path = this.path;\r\n            path += assetData.u ? assetData.u : '';\r\n            path += assetData.p;\r\n        }\r\n        return path;\r\n    }\r\n\r\n    function loadImage(path){\r\n        var img = document.createElement('img');\r\n        img.addEventListener('load', imageLoaded.bind(this), false);\r\n        img.addEventListener('error', imageLoaded.bind(this), false);\r\n        img.src = path;\r\n    }\r\n    function loadAssets(assets, cb){\r\n        imagesLoadedCb = cb;\r\n        this.totalAssets = assets.length;\r\n        var i;\r\n        for(i=0;i<this.totalAssets;i+=1){\r\n            if(!assets[i].layers){\r\n                loadImage.bind(this)(getAssetsPath.bind(this)(assets[i]));\r\n                this.totalImages += 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    function setPath(path){\r\n        this.path = path || '';\r\n    }\r\n\r\n    function setAssetsPath(path){\r\n        this.assetsPath = path || '';\r\n    }\r\n\r\n    return function ImagePreloader(){\r\n        this.loadAssets = loadAssets;\r\n        this.setAssetsPath = setAssetsPath;\r\n        this.setPath = setPath;\r\n        this.assetsPath = '';\r\n        this.path = '';\r\n        this.totalAssets = 0;\r\n        this.totalImages = 0;\r\n        this.loadedAssets = 0;\r\n    }\r\n}());\nvar featureSupport = (function(){\r\n\tvar ob = {\r\n\t\tmaskType: true\r\n\t}\r\n\tif (/MSIE 10/i.test(navigator.userAgent) || /MSIE 9/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /Edge\\/\\d./i.test(navigator.userAgent)) {\r\n\t   ob.maskType = false;\r\n\t}\r\n\treturn ob;\r\n}());\nvar filtersFactory = (function(){\r\n\tvar ob = {};\r\n\tob.createFilter = createFilter;\r\n\tob.createAlphaToLuminanceFilter = createAlphaToLuminanceFilter;\r\n\r\n\tfunction createFilter(filId){\r\n        \tvar fil = document.createElementNS(svgNS,'filter');\r\n        \tfil.setAttribute('id',filId);\r\n                fil.setAttribute('filterUnits','objectBoundingBox');\r\n                fil.setAttribute('x','0%');\r\n                fil.setAttribute('y','0%');\r\n                fil.setAttribute('width','100%');\r\n                fil.setAttribute('height','100%');\r\n                return fil;\r\n\t}\r\n\r\n\tfunction createAlphaToLuminanceFilter(){\r\n                var feColorMatrix = document.createElementNS(svgNS,'feColorMatrix');\r\n                feColorMatrix.setAttribute('type','matrix');\r\n                feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n                feColorMatrix.setAttribute('values','0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1');\r\n                return feColorMatrix;\r\n\t}\r\n\r\n\treturn ob;\r\n}())\nfunction TextAnimatorProperty(textData, renderType, elem){\r\n    this.mdf = false;\r\n    this._firstFrame = true;\r\n\tthis._hasMaskedPath = false;\r\n\tthis._frameId = -1;\r\n\tthis._dynamicProperties = [];\r\n\tthis._textData = textData;\r\n\tthis._renderType = renderType;\r\n\tthis._elem = elem;\r\n\tthis._animatorsData = Array.apply(null,{length:this._textData.a.length});\r\n\tthis._pathData = {}\r\n\tthis._moreOptions = {\r\n\t\talignment: {}\r\n\t};\r\n\tthis.renderedLetters = [];\r\n    this.lettersChangedFlag = false;\r\n\r\n}\r\n\r\nTextAnimatorProperty.prototype.searchProperties = function(dynamicProperties){\r\n    var i, len = this._textData.a.length, animatorData, animatorProps;\r\n    var getProp = PropertyFactory.getProp;\r\n    for(i=0;i<len;i+=1){\r\n        animatorProps = this._textData.a[i];\r\n        animatorData = {\r\n            a: {},\r\n            s: {}\r\n        };\r\n        if('r' in animatorProps.a) {\r\n            animatorData.a.r = getProp(this._elem,animatorProps.a.r,0,degToRads,this._dynamicProperties);\r\n        }\r\n        if('rx' in animatorProps.a) {\r\n            animatorData.a.rx = getProp(this._elem,animatorProps.a.rx,0,degToRads,this._dynamicProperties);\r\n        }\r\n        if('ry' in animatorProps.a) {\r\n            animatorData.a.ry = getProp(this._elem,animatorProps.a.ry,0,degToRads,this._dynamicProperties);\r\n        }\r\n        if('sk' in animatorProps.a) {\r\n            animatorData.a.sk = getProp(this._elem,animatorProps.a.sk,0,degToRads,this._dynamicProperties);\r\n        }\r\n        if('sa' in animatorProps.a) {\r\n            animatorData.a.sa = getProp(this._elem,animatorProps.a.sa,0,degToRads,this._dynamicProperties);\r\n        }\r\n        if('s' in animatorProps.a) {\r\n            animatorData.a.s = getProp(this._elem,animatorProps.a.s,1,0.01,this._dynamicProperties);\r\n        }\r\n        if('a' in animatorProps.a) {\r\n            animatorData.a.a = getProp(this._elem,animatorProps.a.a,1,0,this._dynamicProperties);\r\n        }\r\n        if('o' in animatorProps.a) {\r\n            animatorData.a.o = getProp(this._elem,animatorProps.a.o,0,0.01,this._dynamicProperties);\r\n        }\r\n        if('p' in animatorProps.a) {\r\n            animatorData.a.p = getProp(this._elem,animatorProps.a.p,1,0,this._dynamicProperties);\r\n        }\r\n        if('sw' in animatorProps.a) {\r\n            animatorData.a.sw = getProp(this._elem,animatorProps.a.sw,0,0,this._dynamicProperties);\r\n        }\r\n        if('sc' in animatorProps.a) {\r\n            animatorData.a.sc = getProp(this._elem,animatorProps.a.sc,1,0,this._dynamicProperties);\r\n        }\r\n        if('fc' in animatorProps.a) {\r\n            animatorData.a.fc = getProp(this._elem,animatorProps.a.fc,1,0,this._dynamicProperties);\r\n        }\r\n        if('fh' in animatorProps.a) {\r\n            animatorData.a.fh = getProp(this._elem,animatorProps.a.fh,0,0,this._dynamicProperties);\r\n        }\r\n        if('fs' in animatorProps.a) {\r\n            animatorData.a.fs = getProp(this._elem,animatorProps.a.fs,0,0.01,this._dynamicProperties);\r\n        }\r\n        if('fb' in animatorProps.a) {\r\n            animatorData.a.fb = getProp(this._elem,animatorProps.a.fb,0,0.01,this._dynamicProperties);\r\n        }\r\n        if('t' in animatorProps.a) {\r\n            animatorData.a.t = getProp(this._elem,animatorProps.a.t,0,0,this._dynamicProperties);\r\n        }\r\n        animatorData.s = PropertyFactory.getTextSelectorProp(this._elem,animatorProps.s,this._dynamicProperties);\r\n        animatorData.s.t = animatorProps.s.t;\r\n        this._animatorsData[i] = animatorData;\r\n    }\r\n    if(this._textData.p && 'm' in this._textData.p){\r\n        this._pathData = {\r\n            f: getProp(this._elem,this._textData.p.f,0,0,this._dynamicProperties),\r\n            l: getProp(this._elem,this._textData.p.l,0,0,this._dynamicProperties),\r\n            r: this._textData.p.r,\r\n            m: this._elem.maskManager.getMaskProperty(this._textData.p.m)\r\n        };\r\n        this._hasMaskedPath = true;\r\n    } else {\r\n        this._hasMaskedPath = false;\r\n    }\r\n    this._moreOptions.alignment = getProp(this._elem,this._textData.m.a,1,0,this._dynamicProperties);\r\n    if(this._dynamicProperties.length) {\r\n    \tdynamicProperties.push(this);\r\n    }\r\n}\r\n\r\nTextAnimatorProperty.prototype.getMeasures = function(documentData, lettersChangedFlag){\r\n    this.lettersChangedFlag = lettersChangedFlag;\r\n    if(!this.mdf && !this._firstFrame && !lettersChangedFlag && (!this._hasMaskedPath || !this._pathData.m.mdf)) {\r\n        return;\r\n    }\r\n    this._firstFrame = false;\r\n    var alignment = this._moreOptions.alignment.v;\r\n    var animators = this._animatorsData;\r\n    var textData = this._textData;\r\n    var matrixHelper = this.mHelper;\r\n    var renderType = this._renderType;\r\n    var renderedLettersCount = this.renderedLetters.length;\r\n    var data = this.data;\r\n    var xPos,yPos;\r\n    var i, len;\r\n    var letters = documentData.l;\r\n    if(this._hasMaskedPath) {\r\n        var mask = this._pathData.m;\r\n        if(!this._pathData.n || this._pathData.mdf){\r\n            var paths = mask.v;\r\n            if(this._pathData.r){\r\n                paths = reversePath(paths);\r\n            }\r\n            var pathInfo = {\r\n                tLength: 0,\r\n                segments: []\r\n            };\r\n            len = paths._length - 1;\r\n            var pathData;\r\n            var totalLength = 0;\r\n            for (i = 0; i < len; i += 1) {\r\n                pathData = {\r\n                    s: paths.v[i],\r\n                    e: paths.v[i + 1],\r\n                    to: [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]],\r\n                    ti: [paths.i[i + 1][0] - paths.v[i + 1][0], paths.i[i + 1][1] - paths.v[i + 1][1]]\r\n                };\r\n                bez.buildBezierData(pathData);\r\n                pathInfo.tLength += pathData.bezierData.segmentLength;\r\n                pathInfo.segments.push(pathData);\r\n                totalLength += pathData.bezierData.segmentLength;\r\n            }\r\n            i = len;\r\n            if (mask.v.c) {\r\n                pathData = {\r\n                    s: paths.v[i],\r\n                    e: paths.v[0],\r\n                    to: [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]],\r\n                    ti: [paths.i[0][0] - paths.v[0][0], paths.i[0][1] - paths.v[0][1]]\r\n                };\r\n                bez.buildBezierData(pathData);\r\n                pathInfo.tLength += pathData.bezierData.segmentLength;\r\n                pathInfo.segments.push(pathData);\r\n                totalLength += pathData.bezierData.segmentLength;\r\n            }\r\n            this._pathData.pi = pathInfo;\r\n        }\r\n        var pathInfo = this._pathData.pi;\r\n\r\n        var currentLength = this._pathData.f.v, segmentInd = 0, pointInd = 1, currentPoint, prevPoint, points;\r\n        var segmentLength = 0, flag = true;\r\n        var segments = pathInfo.segments;\r\n        if (currentLength < 0 && mask.v.c) {\r\n            if (pathInfo.tLength < Math.abs(currentLength)) {\r\n                currentLength = -Math.abs(currentLength) % pathInfo.tLength;\r\n            }\r\n            segmentInd = segments.length - 1;\r\n            points = segments[segmentInd].bezierData.points;\r\n            pointInd = points.length - 1;\r\n            while (currentLength < 0) {\r\n                currentLength += points[pointInd].partialLength;\r\n                pointInd -= 1;\r\n                if (pointInd < 0) {\r\n                    segmentInd -= 1;\r\n                    points = segments[segmentInd].bezierData.points;\r\n                    pointInd = points.length - 1;\r\n                }\r\n            }\r\n\r\n        }\r\n        points = segments[segmentInd].bezierData.points;\r\n        prevPoint = points[pointInd - 1];\r\n        currentPoint = points[pointInd];\r\n        var partialLength = currentPoint.partialLength;\r\n        var perc, tanAngle;\r\n    }\r\n\r\n\r\n    len = letters.length;\r\n    xPos = 0;\r\n    yPos = 0;\r\n    var yOff = documentData.s*1.2*.714;\r\n    var firstLine = true;\r\n    var animatorProps, animatorSelector;\r\n    var j, jLen;\r\n    var letterValue;\r\n\r\n    jLen = animators.length;\r\n    if (lettersChangedFlag) {\r\n        for (j = 0; j < jLen; j += 1) {\r\n            animatorSelector = animators[j].s;\r\n            animatorSelector.getValue(true);\r\n        }\r\n    }\r\n    var lastLetter;\r\n\r\n    var mult, ind = -1, offf, xPathPos, yPathPos;\r\n    var initPathPos = currentLength,initSegmentInd = segmentInd, initPointInd = pointInd, currentLine = -1;\r\n    var elemOpacity;\r\n    var sc,sw,fc,k;\r\n    var lineLength = 0;\r\n    var letterSw,letterSc,letterFc,letterM = '',letterP = this.defaultPropsArray,letterO;\r\n    for( i = 0; i < len; i += 1) {\r\n        matrixHelper.reset();\r\n        elemOpacity = 1;\r\n        if(letters[i].n) {\r\n            xPos = 0;\r\n            yPos += documentData.yOffset;\r\n            yPos += firstLine ? 1 : 0;\r\n            currentLength = initPathPos ;\r\n            firstLine = false;\r\n            lineLength = 0;\r\n            if(this._hasMaskedPath) {\r\n                segmentInd = initSegmentInd;\r\n                pointInd = initPointInd;\r\n                points = segments[segmentInd].bezierData.points;\r\n                prevPoint = points[pointInd - 1];\r\n                currentPoint = points[pointInd];\r\n                partialLength = currentPoint.partialLength;\r\n                segmentLength = 0;\r\n            }\r\n            letterO = letterSw = letterFc = letterM = '';\r\n            letterP = this.defaultPropsArray;\r\n        }else{\r\n            if(this._hasMaskedPath) {\r\n                if(currentLine !== letters[i].line){\r\n                    switch(documentData.j){\r\n                        case 1:\r\n                            currentLength += totalLength - documentData.lineWidths[letters[i].line];\r\n                            break;\r\n                        case 2:\r\n                            currentLength += (totalLength - documentData.lineWidths[letters[i].line])/2;\r\n                            break;\r\n                    }\r\n                    currentLine = letters[i].line;\r\n                }\r\n                if (ind !== letters[i].ind) {\r\n                    if (letters[ind]) {\r\n                        currentLength += letters[ind].extra;\r\n                    }\r\n                    currentLength += letters[i].an / 2;\r\n                    ind = letters[i].ind;\r\n                }\r\n                currentLength += alignment[0] * letters[i].an / 200;\r\n                var animatorOffset = 0;\r\n                for (j = 0; j < jLen; j += 1) {\r\n                    animatorProps = animators[j].a;\r\n                    if ('p' in animatorProps) {\r\n                        animatorSelector = animators[j].s;\r\n                        mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                        if(mult.length){\r\n                            animatorOffset += animatorProps.p.v[0] * mult[0];\r\n                        } else{\r\n                            animatorOffset += animatorProps.p.v[0] * mult;\r\n                        }\r\n\r\n                    }\r\n                    if ('a' in animatorProps) {\r\n                        animatorSelector = animators[j].s;\r\n                        mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                        if(mult.length){\r\n                            animatorOffset += animatorProps.a.v[0] * mult[0];\r\n                        } else{\r\n                            animatorOffset += animatorProps.a.v[0] * mult;\r\n                        }\r\n\r\n                    }\r\n                }\r\n                flag = true;\r\n                while (flag) {\r\n                    if (segmentLength + partialLength >= currentLength + animatorOffset || !points) {\r\n                        perc = (currentLength + animatorOffset - segmentLength) / currentPoint.partialLength;\r\n                        xPathPos = prevPoint.point[0] + (currentPoint.point[0] - prevPoint.point[0]) * perc;\r\n                        yPathPos = prevPoint.point[1] + (currentPoint.point[1] - prevPoint.point[1]) * perc;\r\n                        matrixHelper.translate(-alignment[0]*letters[i].an/200, -(alignment[1] * yOff / 100));\r\n                        flag = false;\r\n                    } else if (points) {\r\n                        segmentLength += currentPoint.partialLength;\r\n                        pointInd += 1;\r\n                        if (pointInd >= points.length) {\r\n                            pointInd = 0;\r\n                            segmentInd += 1;\r\n                            if (!segments[segmentInd]) {\r\n                                if (mask.v.c) {\r\n                                    pointInd = 0;\r\n                                    segmentInd = 0;\r\n                                    points = segments[segmentInd].bezierData.points;\r\n                                } else {\r\n                                    segmentLength -= currentPoint.partialLength;\r\n                                    points = null;\r\n                                }\r\n                            } else {\r\n                                points = segments[segmentInd].bezierData.points;\r\n                            }\r\n                        }\r\n                        if (points) {\r\n                            prevPoint = currentPoint;\r\n                            currentPoint = points[pointInd];\r\n                            partialLength = currentPoint.partialLength;\r\n                        }\r\n                    }\r\n                }\r\n                offf = letters[i].an / 2 - letters[i].add;\r\n                matrixHelper.translate(-offf, 0, 0);\r\n            } else {\r\n                offf = letters[i].an/2 - letters[i].add;\r\n                matrixHelper.translate(-offf,0,0);\r\n\r\n                // Grouping alignment\r\n                matrixHelper.translate(-alignment[0]*letters[i].an/200, -alignment[1]*yOff/100, 0);\r\n            }\r\n\r\n            lineLength += letters[i].l/2;\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if ('t' in animatorProps) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    if(this._hasMaskedPath) {\r\n                        if(mult.length) {\r\n                            currentLength += animatorProps.t*mult[0];\r\n                        } else {\r\n                            currentLength += animatorProps.t*mult;\r\n                        }\r\n                    }else{\r\n                        if(mult.length) {\r\n                            xPos += animatorProps.t.v*mult[0];\r\n                        } else {\r\n                            xPos += animatorProps.t.v*mult;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            lineLength += letters[i].l/2;\r\n            if(documentData.strokeWidthAnim) {\r\n                sw = documentData.sw || 0;\r\n            }\r\n            if(documentData.strokeColorAnim) {\r\n                if(documentData.sc){\r\n                    sc = [documentData.sc[0], documentData.sc[1], documentData.sc[2]];\r\n                }else{\r\n                    sc = [0,0,0];\r\n                }\r\n            }\r\n            if(documentData.fillColorAnim && documentData.fc) {\r\n                fc = [documentData.fc[0], documentData.fc[1], documentData.fc[2]];\r\n            }\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if ('a' in animatorProps) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n\r\n                    if(mult.length){\r\n                        matrixHelper.translate(-animatorProps.a.v[0]*mult[0], -animatorProps.a.v[1]*mult[1], animatorProps.a.v[2]*mult[2]);\r\n                    } else {\r\n                        matrixHelper.translate(-animatorProps.a.v[0]*mult, -animatorProps.a.v[1]*mult, animatorProps.a.v[2]*mult);\r\n                    }\r\n                }\r\n            }\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if ('s' in animatorProps) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    if(mult.length){\r\n                        matrixHelper.scale(1+((animatorProps.s.v[0]-1)*mult[0]),1+((animatorProps.s.v[1]-1)*mult[1]),1);\r\n                    } else {\r\n                        matrixHelper.scale(1+((animatorProps.s.v[0]-1)*mult),1+((animatorProps.s.v[1]-1)*mult),1);\r\n                    }\r\n                }\r\n            }\r\n            for(j=0;j<jLen;j+=1) {\r\n                animatorProps = animators[j].a;\r\n                animatorSelector = animators[j].s;\r\n                mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                if ('sk' in animatorProps) {\r\n                    if(mult.length) {\r\n                        matrixHelper.skewFromAxis(-animatorProps.sk.v * mult[0], animatorProps.sa.v * mult[1]);\r\n                    } else {\r\n                        matrixHelper.skewFromAxis(-animatorProps.sk.v * mult, animatorProps.sa.v * mult);\r\n                    }\r\n                }\r\n                if ('r' in animatorProps) {\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateZ(-animatorProps.r.v * mult[2]);\r\n                    } else {\r\n                        matrixHelper.rotateZ(-animatorProps.r.v * mult);\r\n                    }\r\n                }\r\n                if ('ry' in animatorProps) {\r\n\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateY(animatorProps.ry.v*mult[1]);\r\n                    }else{\r\n                        matrixHelper.rotateY(animatorProps.ry.v*mult);\r\n                    }\r\n                }\r\n                if ('rx' in animatorProps) {\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateX(animatorProps.rx.v*mult[0]);\r\n                    } else {\r\n                        matrixHelper.rotateX(animatorProps.rx.v*mult);\r\n                    }\r\n                }\r\n                if ('o' in animatorProps) {\r\n                    if(mult.length) {\r\n                        elemOpacity += ((animatorProps.o.v)*mult[0] - elemOpacity)*mult[0];\r\n                    } else {\r\n                        elemOpacity += ((animatorProps.o.v)*mult - elemOpacity)*mult;\r\n                    }\r\n                }\r\n                if (documentData.strokeWidthAnim && 'sw' in animatorProps) {\r\n                    if(mult.length) {\r\n                        sw += animatorProps.sw.v*mult[0];\r\n                    } else {\r\n                        sw += animatorProps.sw.v*mult;\r\n                    }\r\n                }\r\n                if (documentData.strokeColorAnim && 'sc' in animatorProps) {\r\n                    for(k=0;k<3;k+=1){\r\n                        if(mult.length) {\r\n                            sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k])*mult[0]\r\n                        } else {\r\n                            sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k])*mult;\r\n                        }\r\n                    }\r\n                }\r\n                if (documentData.fillColorAnim && documentData.fc) {\r\n                    if('fc' in animatorProps){\r\n                        for(k=0;k<3;k+=1){\r\n                            if(mult.length) {\r\n                                fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k])*mult[0];\r\n                            } else {\r\n                                fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k])*mult;\r\n                            }\r\n                        }\r\n                    }\r\n                    if('fh' in animatorProps){\r\n                        if(mult.length) {\r\n                            fc = addHueToRGB(fc,animatorProps.fh.v*mult[0]);\r\n                        } else {\r\n                            fc = addHueToRGB(fc,animatorProps.fh.v*mult);\r\n                        }\r\n                    }\r\n                    if('fs' in animatorProps){\r\n                        if(mult.length) {\r\n                            fc = addSaturationToRGB(fc,animatorProps.fs.v*mult[0]);\r\n                        } else {\r\n                            fc = addSaturationToRGB(fc,animatorProps.fs.v*mult);\r\n                        }\r\n                    }\r\n                    if('fb' in animatorProps){\r\n                        if(mult.length) {\r\n                            fc = addBrightnessToRGB(fc,animatorProps.fb.v*mult[0]);\r\n                        } else {\r\n                            fc = addBrightnessToRGB(fc,animatorProps.fb.v*mult);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n\r\n                if ('p' in animatorProps) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    if(this._hasMaskedPath) {\r\n                        if(mult.length) {\r\n                            matrixHelper.translate(0, animatorProps.p.v[1] * mult[0], -animatorProps.p.v[2] * mult[1]);\r\n                        } else {\r\n                            matrixHelper.translate(0, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\r\n                        }\r\n                    }else{\r\n                        if(mult.length) {\r\n                            matrixHelper.translate(animatorProps.p.v[0] * mult[0], animatorProps.p.v[1] * mult[1], -animatorProps.p.v[2] * mult[2]);\r\n                        } else {\r\n                            matrixHelper.translate(animatorProps.p.v[0] * mult, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(documentData.strokeWidthAnim){\r\n                letterSw = sw < 0 ? 0 : sw;\r\n            }\r\n            if(documentData.strokeColorAnim){\r\n                letterSc = 'rgb('+Math.round(sc[0]*255)+','+Math.round(sc[1]*255)+','+Math.round(sc[2]*255)+')';\r\n            }\r\n            if(documentData.fillColorAnim && documentData.fc){\r\n                letterFc = 'rgb('+Math.round(fc[0]*255)+','+Math.round(fc[1]*255)+','+Math.round(fc[2]*255)+')';\r\n            }\r\n\r\n            if(this._hasMaskedPath) {\r\n                matrixHelper.translate(0,-documentData.ls);\r\n\r\n                matrixHelper.translate(0, alignment[1]*yOff/100 + yPos,0);\r\n                if (textData.p.p) {\r\n                    tanAngle = (currentPoint.point[1] - prevPoint.point[1]) / (currentPoint.point[0] - prevPoint.point[0]);\r\n                    var rot = Math.atan(tanAngle) * 180 / Math.PI;\r\n                    if (currentPoint.point[0] < prevPoint.point[0]) {\r\n                        rot += 180;\r\n                    }\r\n                    matrixHelper.rotate(-rot * Math.PI / 180);\r\n                }\r\n                matrixHelper.translate(xPathPos, yPathPos, 0);\r\n                currentLength -= alignment[0]*letters[i].an/200;\r\n                if(letters[i+1] && ind !== letters[i+1].ind){\r\n                    currentLength += letters[i].an / 2;\r\n                    currentLength += documentData.tr/1000*documentData.s;\r\n                }\r\n            }else{\r\n\r\n                matrixHelper.translate(xPos,yPos,0);\r\n\r\n                if(documentData.ps){\r\n                    //matrixHelper.translate(documentData.ps[0],documentData.ps[1],0);\r\n                    matrixHelper.translate(documentData.ps[0],documentData.ps[1] + documentData.ascent,0);\r\n                }\r\n                switch(documentData.j){\r\n                    case 1:\r\n                        matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]),0,0);\r\n                        break;\r\n                    case 2:\r\n                        matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line])/2,0,0);\r\n                        break;\r\n                }\r\n                matrixHelper.translate(0,-documentData.ls);\r\n                matrixHelper.translate(offf,0,0);\r\n                matrixHelper.translate(alignment[0]*letters[i].an/200,alignment[1]*yOff/100,0);\r\n                xPos += letters[i].l + documentData.tr/1000*documentData.s;\r\n            }\r\n            if(renderType === 'html'){\r\n                letterM = matrixHelper.toCSS();\r\n            }else if(renderType === 'svg'){\r\n                letterM = matrixHelper.to2dCSS();\r\n            }else{\r\n                letterP = [matrixHelper.props[0],matrixHelper.props[1],matrixHelper.props[2],matrixHelper.props[3],matrixHelper.props[4],matrixHelper.props[5],matrixHelper.props[6],matrixHelper.props[7],matrixHelper.props[8],matrixHelper.props[9],matrixHelper.props[10],matrixHelper.props[11],matrixHelper.props[12],matrixHelper.props[13],matrixHelper.props[14],matrixHelper.props[15]];\r\n            }\r\n            letterO = elemOpacity;\r\n        }\r\n\r\n        if(renderedLettersCount <= i) {\r\n            letterValue = new LetterProps(letterO,letterSw,letterSc,letterFc,letterM,letterP);\r\n            this.renderedLetters.push(letterValue);\r\n            renderedLettersCount += 1;\r\n            this.lettersChangedFlag = true;\r\n        } else {\r\n            letterValue = this.renderedLetters[i];\r\n            this.lettersChangedFlag = letterValue.update(letterO, letterSw, letterSc, letterFc, letterM, letterP) || this.lettersChangedFlag;\r\n        }\r\n    }\r\n}\r\n\r\nTextAnimatorProperty.prototype.getValue = function(){\r\n\tif(this._elem.globalData.frameId === this._frameId){\r\n        return;\r\n    }\r\n    this._frameId = this._elem.globalData.frameId;\r\n\tvar i, len = this._dynamicProperties.length;\r\n    this.mdf = false;\r\n\tfor(i = 0; i < len; i += 1) {\r\n\t\tthis._dynamicProperties[i].getValue();\r\n        this.mdf = this._dynamicProperties[i].mdf || this.mdf;\r\n\t}\r\n}\r\n\r\nTextAnimatorProperty.prototype.mHelper = new Matrix();\r\nTextAnimatorProperty.prototype.defaultPropsArray = [];\nfunction LetterProps(o, sw, sc, fc, m, p){\r\n    this.o = o;\r\n    this.sw = sw;\r\n    this.sc = sc;\r\n    this.fc = fc;\r\n    this.m = m;\r\n    this.p = p;\r\n    this.mdf = {\r\n    \to: true,\r\n    \tsw: !!sw,\r\n    \tsc: !!sc,\r\n    \tfc: !!fc,\r\n    \tm: true,\r\n    \tp: true\r\n    };\r\n}\r\n\r\nLetterProps.prototype.update = function(o, sw, sc, fc, m, p) {\r\n\tthis.mdf.o = false;\r\n\tthis.mdf.sw = false;\r\n\tthis.mdf.sc = false;\r\n\tthis.mdf.fc = false;\r\n\tthis.mdf.m = false;\r\n\tthis.mdf.p = false;\r\n\tvar updated = false;\r\n\r\n\tif(this.o !== o) {\r\n\t\tthis.o = o;\r\n\t\tthis.mdf.o = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.sw !== sw) {\r\n\t\tthis.sw = sw;\r\n\t\tthis.mdf.sw = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.sc !== sc) {\r\n\t\tthis.sc = sc;\r\n\t\tthis.mdf.sc = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.fc !== fc) {\r\n\t\tthis.fc = fc;\r\n\t\tthis.mdf.fc = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.m !== m) {\r\n\t\tthis.m = m;\r\n\t\tthis.mdf.m = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(p.length && (this.p[0] !== p[0] || this.p[1] !== p[1] || this.p[4] !== p[4] || this.p[5] !== p[5] || this.p[12] !== p[12] || this.p[13] !== p[13])) {\r\n\t\tthis.p = p;\r\n\t\tthis.mdf.p = true;\r\n\t\tupdated = true;\r\n\t}\r\n\treturn updated;\r\n}\nfunction TextProperty(elem, data, dynamicProperties){\r\n\tthis._frameId = -99999;\r\n\tthis.pv = '';\r\n\tthis.v = '';\r\n\tthis.kf = false;\r\n\tthis.firstFrame = true;\r\n\tthis.mdf = true;\r\n\tthis.data = data;\r\n\tthis.elem = elem;\r\n\tthis.keysIndex = -1;\r\n\tthis.currentData = {\r\n\t\tascent: 0,\r\n        boxWidth: [0,0],\r\n        f: '',\r\n        fStyle: '',\r\n        fWeight: '',\r\n        fc: '',\r\n        j: '',\r\n        justifyOffset: '',\r\n        l: [],\r\n        lh: 0,\r\n        lineWidths: [],\r\n        ls: '',\r\n        of: '',\r\n        s: '',\r\n        sc: '',\r\n        sw: 0,\r\n        t: 0,\r\n        tr: 0,\r\n        fillColorAnim: false,\r\n        strokeColorAnim: false,\r\n        strokeWidthAnim: false,\r\n        yOffset: 0,\r\n        __complete: false\r\n\r\n\t}\r\n\tif(this.searchProperty()) {\r\n\t\tdynamicProperties.push(this);\r\n\t} else {\r\n\t\tthis.getValue(true);\r\n\t}\r\n}\r\n\r\nTextProperty.prototype.setCurrentData = function(data){\r\n\t\tvar currentData = this.currentData;\r\n        currentData.ascent = data.ascent;\r\n        currentData.boxWidth = data.boxWidth ? data.boxWidth : currentData.boxWidth;\r\n        currentData.f = data.f;\r\n        currentData.fStyle = data.fStyle;\r\n        currentData.fWeight = data.fWeight;\r\n        currentData.fc = data.fc;\r\n        currentData.j = data.j;\r\n        currentData.justifyOffset = data.justifyOffset;\r\n        currentData.l = data.l;\r\n        currentData.lh = data.lh;\r\n        currentData.lineWidths = data.lineWidths;\r\n        currentData.ls = data.ls;\r\n        currentData.of = data.of;\r\n        currentData.s = data.s;\r\n        currentData.sc = data.sc;\r\n        currentData.sw = data.sw;\r\n        currentData.t = data.t;\r\n        currentData.tr = data.tr;\r\n        currentData.fillColorAnim = data.fillColorAnim || currentData.fillColorAnim;\r\n        currentData.strokeColorAnim = data.strokeColorAnim || currentData.strokeColorAnim;\r\n        currentData.strokeWidthAnim = data.strokeWidthAnim || currentData.strokeWidthAnim;\r\n        currentData.yOffset = data.yOffset;\r\n        currentData.__complete = false;\r\n}\r\n\r\nTextProperty.prototype.searchProperty = function() {\r\n\tthis.kf = this.data.d.k.length > 1;\r\n\treturn this.kf;\r\n}\r\n\r\nTextProperty.prototype.getValue = function() {\r\n\tthis.mdf = false;\r\n\tvar frameId = this.elem.globalData.frameId;\r\n\tif((frameId === this._frameId || !this.kf) && !this.firstFrame) {\r\n\t\treturn;\r\n\t}\r\n\tvar textKeys = this.data.d.k, textDocumentData;\r\n    var i = 0, len = textKeys.length;\r\n    while(i <= len - 1) {\r\n        textDocumentData = textKeys[i].s;\r\n        if(i === len - 1 || textKeys[i+1].t > frameId){\r\n            break;\r\n        }\r\n        i += 1;\r\n    }\r\n    if(this.keysIndex !== i) {\r\n    \tif(!textDocumentData.__complete) {\r\n            this.completeTextData(textDocumentData);\r\n        }\r\n        this.setCurrentData(textDocumentData);\r\n        this.mdf = this.firstFrame ? false : true;\r\n        this.pv = this.v = this.currentData.t;\r\n        this.keysIndex = i;\r\n    }\r\n\tthis._frameId = frameId;\r\n}\r\n\r\nTextProperty.prototype.completeTextData = function(documentData) {\r\n    documentData.__complete = true;\r\n    var fontManager = this.elem.globalData.fontManager;\r\n    var data = this.data;\r\n    var letters = [];\r\n    var i, len;\r\n    var newLineFlag, index = 0, val;\r\n    var anchorGrouping = data.m.g;\r\n    var currentSize = 0, currentPos = 0, currentLine = 0, lineWidths = [];\r\n    var lineWidth = 0;\r\n    var maxLineWidth = 0;\r\n    var j, jLen;\r\n    var fontData = fontManager.getFontByName(documentData.f);\r\n    var charData, cLength = 0;\r\n    var styles = fontData.fStyle.split(' ');\r\n\r\n    var fWeight = 'normal', fStyle = 'normal';\r\n    len = styles.length;\r\n    var styleName;\r\n    for(i=0;i<len;i+=1){\r\n        styleName = styles[i].toLowerCase();\r\n        switch(styleName) {\r\n            case 'italic':\r\n            fStyle = 'italic';\r\n            break;\r\n            case 'bold':\r\n            fWeight = '700';\r\n            break;\r\n            case 'black':\r\n            fWeight = '900';\r\n            break;\r\n            case 'medium':\r\n            fWeight = '500';\r\n            break;\r\n            case 'regular':\r\n            case 'normal':\r\n            fWeight = '400';\r\n            case 'light':\r\n            case 'thin':\r\n            fWeight = '200';\r\n            break;\r\n        }\r\n    }\r\n    documentData.fWeight = fWeight;\r\n    documentData.fStyle = fStyle;\r\n    len = documentData.t.length;\r\n    var trackingOffset = documentData.tr/1000*documentData.s;\r\n    if(documentData.sz){\r\n        var boxWidth = documentData.sz[0];\r\n        var lastSpaceIndex = -1;\r\n        for(i=0;i<len;i+=1){\r\n            newLineFlag = false;\r\n            if(documentData.t.charAt(i) === ' '){\r\n                lastSpaceIndex = i;\r\n            }else if(documentData.t.charCodeAt(i) === 13){\r\n                lineWidth = 0;\r\n                newLineFlag = true;\r\n            }\r\n            if(fontManager.chars){\r\n                charData = fontManager.getCharData(documentData.t.charAt(i), fontData.fStyle, fontData.fFamily);\r\n                cLength = newLineFlag ? 0 : charData.w*documentData.s/100;\r\n            }else{\r\n                //tCanvasHelper.font = documentData.s + 'px '+ fontData.fFamily;\r\n                cLength = fontManager.measureText(documentData.t.charAt(i), documentData.f, documentData.s);\r\n            }\r\n            if(lineWidth + cLength > boxWidth && documentData.t.charAt(i) !== ' '){\r\n                if(lastSpaceIndex === -1){\r\n                    len += 1;\r\n                } else {\r\n                    i = lastSpaceIndex;\r\n                }\r\n                documentData.t = documentData.t.substr(0,i) + \"\\r\" + documentData.t.substr(i === lastSpaceIndex ? i + 1 : i);\r\n                lastSpaceIndex = -1;\r\n                lineWidth = 0;\r\n            }else {\r\n                lineWidth += cLength;\r\n                lineWidth += trackingOffset;\r\n            }\r\n        }\r\n        len = documentData.t.length;\r\n    }\r\n    lineWidth = - trackingOffset;\r\n    cLength = 0;\r\n    var uncollapsedSpaces = 0;\r\n    var currentChar;\r\n    for (i = 0;i < len ;i += 1) {\r\n        newLineFlag = false;\r\n        currentChar = documentData.t.charAt(i);\r\n        if(currentChar === ' '){\r\n            val = '\\u00A0';\r\n        }else if(currentChar.charCodeAt(0) === 13){\r\n            uncollapsedSpaces = 0;\r\n            lineWidths.push(lineWidth);\r\n            maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\r\n            lineWidth = - 2 * trackingOffset;\r\n            val = '';\r\n            newLineFlag = true;\r\n            currentLine += 1;\r\n        }else{\r\n            val = documentData.t.charAt(i);\r\n        }\r\n        if(fontManager.chars){\r\n            charData = fontManager.getCharData(currentChar, fontData.fStyle, fontManager.getFontByName(documentData.f).fFamily);\r\n            cLength = newLineFlag ? 0 : charData.w*documentData.s/100;\r\n        }else{\r\n            //var charWidth = fontManager.measureText(val, documentData.f, documentData.s);\r\n            //tCanvasHelper.font = documentData.s + 'px '+ fontManager.getFontByName(documentData.f).fFamily;\r\n            cLength = fontManager.measureText(val, documentData.f, documentData.s);\r\n        }\r\n\r\n        //\r\n        if(currentChar === ' '){\r\n            uncollapsedSpaces += cLength + trackingOffset;\r\n        } else {\r\n            lineWidth += cLength + trackingOffset + uncollapsedSpaces;\r\n            uncollapsedSpaces = 0;\r\n        }\r\n        letters.push({l:cLength,an:cLength,add:currentSize,n:newLineFlag, anIndexes:[], val: val, line: currentLine});\r\n        if(anchorGrouping == 2){\r\n            currentSize += cLength;\r\n            if(val == '' || val == '\\u00A0' || i == len - 1){\r\n                if(val == '' || val == '\\u00A0'){\r\n                    currentSize -= cLength;\r\n                }\r\n                while(currentPos<=i){\r\n                    letters[currentPos].an = currentSize;\r\n                    letters[currentPos].ind = index;\r\n                    letters[currentPos].extra = cLength;\r\n                    currentPos += 1;\r\n                }\r\n                index += 1;\r\n                currentSize = 0;\r\n            }\r\n        }else if(anchorGrouping == 3){\r\n            currentSize += cLength;\r\n            if(val == '' || i == len - 1){\r\n                if(val == ''){\r\n                    currentSize -= cLength;\r\n                }\r\n                while(currentPos<=i){\r\n                    letters[currentPos].an = currentSize;\r\n                    letters[currentPos].ind = index;\r\n                    letters[currentPos].extra = cLength;\r\n                    currentPos += 1;\r\n                }\r\n                currentSize = 0;\r\n                index += 1;\r\n            }\r\n        }else{\r\n            letters[index].ind = index;\r\n            letters[index].extra = 0;\r\n            index += 1;\r\n        }\r\n    }\r\n    documentData.l = letters;\r\n    maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\r\n    lineWidths.push(lineWidth);\r\n    if(documentData.sz){\r\n        documentData.boxWidth = documentData.sz[0];\r\n        documentData.justifyOffset = 0;\r\n    }else{\r\n        documentData.boxWidth = maxLineWidth;\r\n        switch(documentData.j){\r\n            case 1:\r\n                documentData.justifyOffset = - documentData.boxWidth;\r\n                break;\r\n            case 2:\r\n                documentData.justifyOffset = - documentData.boxWidth/2;\r\n                break;\r\n            default:\r\n                documentData.justifyOffset = 0;\r\n        }\r\n    }\r\n    documentData.lineWidths = lineWidths;\r\n\r\n    var animators = data.a, animatorData, letterData;\r\n    jLen = animators.length;\r\n    var based, ind, indexes = [];\r\n    for(j=0;j<jLen;j+=1){\r\n        animatorData = animators[j];\r\n        if(animatorData.a.sc){\r\n            documentData.strokeColorAnim = true;\r\n        }\r\n        if(animatorData.a.sw){\r\n            documentData.strokeWidthAnim = true;\r\n        }\r\n        if(animatorData.a.fc || animatorData.a.fh || animatorData.a.fs || animatorData.a.fb){\r\n            documentData.fillColorAnim = true;\r\n        }\r\n        ind = 0;\r\n        based = animatorData.s.b;\r\n        for(i=0;i<len;i+=1){\r\n            letterData = letters[i];\r\n            letterData.anIndexes[j] = ind;\r\n            if((based == 1 && letterData.val != '') || (based == 2 && letterData.val != '' && letterData.val != '\\u00A0') || (based == 3 && (letterData.n || letterData.val == '\\u00A0' || i == len - 1)) || (based == 4 && (letterData.n || i == len - 1))){\r\n                if(animatorData.s.rn === 1){\r\n                    indexes.push(ind);\r\n                }\r\n                ind += 1;\r\n            }\r\n        }\r\n        data.a[j].s.totalChars = ind;\r\n        var currentInd = -1, newInd;\r\n        if(animatorData.s.rn === 1){\r\n            for(i = 0; i < len; i += 1){\r\n                letterData = letters[i];\r\n                if(currentInd != letterData.anIndexes[j]){\r\n                    currentInd = letterData.anIndexes[j];\r\n                    newInd = indexes.splice(Math.floor(Math.random()*indexes.length),1)[0];\r\n                }\r\n                letterData.anIndexes[j] = newInd;\r\n            }\r\n        }\r\n    }\r\n    documentData.yOffset = documentData.lh || documentData.s*1.2;\r\n    documentData.ls = documentData.ls || 0;\r\n    documentData.ascent = fontData.ascent*documentData.s/100;\r\n}\r\n\r\nTextProperty.prototype.updateDocumentData = function(newData, index) {\r\n\tindex = index === undefined ? this.keysIndex : index;\r\n    var dData = this.data.d.k[index].s;\r\n    dData.__complete = false;\r\n    dData.t = newData.t;\r\n    this.keysIndex = -1;\r\n    this.firstFrame = true;\r\n    this.getValue();\r\n}\r\n\nvar pooling = (function(){\r\n\r\n\tfunction double(arr){\r\n\t\treturn arr.concat(Array.apply(null,{length:arr.length}))\r\n\t}\r\n\r\n\treturn {\r\n\t\tdouble: double\r\n\t}\r\n}());\nvar point_pool = (function(){\r\n\tvar ob = {\r\n\t\tnewPoint: newPoint,\r\n\t\trelease: release\r\n\t}\r\n\r\n\tvar _length = 0;\r\n\tvar _maxLength = 8;\r\n\tvar pool = Array.apply(null,{length:_maxLength});\r\n\r\n\tfunction newPoint(){\r\n\t\tvar point;\r\n\t\tif(_length){\r\n\t\t\t_length -= 1;\r\n\t\t\tpoint = pool[_length];\r\n\t\t} else {\r\n\t\t\tpoint = [0.1,0.1];\r\n\t\t}\r\n\t\treturn point;\r\n\t}\r\n\r\n\tfunction release(point) {\r\n\t\tif(_length === _maxLength) {\r\n\t\t\tpool = pooling.double(pool);\r\n\t\t\t_maxLength = _maxLength*2;\r\n\t\t}\r\n\t\tpool[_length] = point;\r\n\t\t_length += 1;\r\n\t}\r\n\r\n\r\n\treturn ob;\r\n}());\nvar shape_pool = (function(){\r\n\tvar ob = {\r\n\t\tclone: clone,\r\n\t\tnewShape: newShape,\r\n\t\trelease: release,\r\n\t\treleaseArray: releaseArray\r\n\t}\r\n\r\n\tvar _length = 0;\r\n\tvar _maxLength = 4;\r\n\tvar pool = Array.apply(null,{length:_maxLength});\r\n\r\n\tfunction newShape(){\r\n\t\tvar shapePath;\r\n\t\tif(_length){\r\n\t\t\t_length -= 1;\r\n\t\t\tshapePath = pool[_length];\r\n\t\t} else {\r\n\t\t\tshapePath = new ShapePath();\r\n\t\t}\r\n\t\treturn shapePath;\r\n\t}\r\n\r\n\tfunction release(shapePath) {\r\n\t\tif(_length === _maxLength) {\r\n\t\t\tpool = pooling.double(pool);\r\n\t\t\t_maxLength = _maxLength*2;\r\n\t\t}\r\n\t\tvar len = shapePath._length, i;\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tpoint_pool.release(shapePath.v[i]);\r\n\t\t\tpoint_pool.release(shapePath.i[i]);\r\n\t\t\tpoint_pool.release(shapePath.o[i]);\r\n\t\t\tshapePath.v[i] = null;\r\n\t\t\tshapePath.i[i] = null;\r\n\t\t\tshapePath.o[i] = null;\r\n\t\t}\r\n\t\tshapePath._length = 0;\r\n\t\tshapePath.c = false;\r\n\t\tpool[_length] = shapePath;\r\n\t\t_length += 1;\r\n\t}\r\n\r\n\tfunction releaseArray(shapePathsCollection, length) {\r\n\t\twhile(length--) {\r\n\t\t\trelease(shapePathsCollection[length]);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction clone(shape, transform) {\r\n\t\tvar i, len = shape._length === undefined ? shape.v.length : shape._length;\r\n\t\tvar cloned = newShape();\r\n\t\tcloned.setLength(len);\r\n\t\tcloned.c = shape.c;\r\n\r\n\t\tvar pt;\r\n\t\t\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tif(transform){\r\n\t\t\t\tpt = transform.applyToPointArray(shape.v[i][0],shape.v[i][1],0,2);\r\n\t\t\t\tcloned.setXYAt(pt[0],pt[1],'v',i);\r\n\t\t\t\tpoint_pool.release(pt);\r\n\t\t\t\tpt = transform.applyToPointArray(shape.o[i][0],shape.o[i][1],0,2);\r\n\t\t\t\tcloned.setXYAt(pt[0],pt[1],'o',i);\r\n\t\t\t\tpoint_pool.release(pt);\r\n\t\t\t\tpt = transform.applyToPointArray(shape.i[i][0],shape.i[i][1],0,2);\r\n\t\t\t\tcloned.setXYAt(pt[0],pt[1],'i',i);\r\n\t\t\t\tpoint_pool.release(pt);\r\n\t\t\t}else{\r\n\t\t\t\tcloned.setTripleAt(shape.v[i][0],shape.v[i][1],shape.o[i][0],shape.o[i][1],shape.i[i][0],shape.i[i][1], i);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn cloned\r\n\t}\r\n\r\n\r\n\treturn ob;\r\n}());\nvar shapeCollection_pool = (function(){\r\n\tvar ob = {\r\n\t\tnewShapeCollection: newShapeCollection,\r\n\t\trelease: release,\r\n\t\tclone: clone\r\n\t}\r\n\r\n\tvar _length = 0;\r\n\tvar _maxLength = 4;\r\n\tvar pool = Array.apply(null,{length:_maxLength});\r\n\r\n\tvar cont = 0;\r\n\r\n\tfunction newShapeCollection(){\r\n\t\tvar shapeCollection;\r\n\t\tif(_length){\r\n\t\t\t_length -= 1;\r\n\t\t\tshapeCollection = pool[_length];\r\n\t\t} else {\r\n\t\t\tshapeCollection = new ShapeCollection();\r\n\t\t}\r\n\t\treturn shapeCollection;\r\n\t}\r\n\r\n\tfunction release(shapeCollection) {\r\n\t\tvar i, len = shapeCollection._length;\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tshape_pool.release(shapeCollection.shapes[i]);\r\n\t\t}\r\n\t\tshapeCollection._length = 0;\r\n\r\n\t\tif(_length === _maxLength) {\r\n\t\t\tpool = pooling.double(pool);\r\n\t\t\t_maxLength = _maxLength*2;\r\n\t\t}\r\n\t\tpool[_length] = shapeCollection;\r\n\t\t_length += 1;\r\n\t}\r\n\r\n\tfunction clone(shapeCollection, originCollection) {\r\n\t\trelease(shapeCollection);\r\n\t\tif(_length === _maxLength) {\r\n\t\t\tpool = pooling.double(pool);\r\n\t\t\t_maxLength = _maxLength*2;\r\n\t\t}\r\n\t\tpool[_length] = shapeCollection;\r\n\t\t_length += 1;\r\n\t}\r\n\r\n\r\n\treturn ob;\r\n}());\nfunction BaseRenderer(){}\r\nBaseRenderer.prototype.checkLayers = function(num){\r\n    var i, len = this.layers.length, data;\r\n    this.completeLayers = true;\r\n    for (i = len - 1; i >= 0; i--) {\r\n        if (!this.elements[i]) {\r\n            data = this.layers[i];\r\n            if(data.ip - data.st <= (num - this.layers[i].st) && data.op - data.st > (num - this.layers[i].st))\r\n            {\r\n                this.buildItem(i);\r\n            }\r\n        }\r\n        this.completeLayers = this.elements[i] ? this.completeLayers:false;\r\n    }\r\n    this.checkPendingElements();\r\n};\r\n\r\nBaseRenderer.prototype.createItem = function(layer){\r\n    switch(layer.ty){\r\n        case 2:\r\n            return this.createImage(layer);\r\n        case 0:\r\n            return this.createComp(layer);\r\n        case 1:\r\n            return this.createSolid(layer);\r\n        case 4:\r\n            return this.createShape(layer);\r\n        case 5:\r\n            return this.createText(layer);\r\n        case 13:\r\n            return this.createCamera(layer);\r\n        case 99:\r\n            return null;\r\n    }\r\n    return this.createBase(layer);\r\n};\r\n\r\nBaseRenderer.prototype.createCamera = function(){\r\n    throw new Error('You\\'re using a 3d camera. Try the html renderer.');\r\n}\r\n\r\nBaseRenderer.prototype.buildAllItems = function(){\r\n    var i, len = this.layers.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.buildItem(i);\r\n    }\r\n    this.checkPendingElements();\r\n};\r\n\r\nBaseRenderer.prototype.includeLayers = function(newLayers){\r\n    this.completeLayers = false;\r\n    var i, len = newLayers.length;\r\n    var j, jLen = this.layers.length;\r\n    for(i=0;i<len;i+=1){\r\n        j = 0;\r\n        while(j<jLen){\r\n            if(this.layers[j].id == newLayers[i].id){\r\n                this.layers[j] = newLayers[i];\r\n                break;\r\n            }\r\n            j += 1;\r\n        }\r\n    }\r\n};\r\n\r\nBaseRenderer.prototype.setProjectInterface = function(pInterface){\r\n    this.globalData.projectInterface = pInterface;\r\n};\r\n\r\nBaseRenderer.prototype.initItems = function(){\r\n    if(!this.globalData.progressiveLoad){\r\n        this.buildAllItems();\r\n    }\r\n};\r\nBaseRenderer.prototype.buildElementParenting = function(element, parentName, hierarchy){\r\n    hierarchy = hierarchy || [];\r\n    var elements = this.elements;\r\n    var layers = this.layers;\r\n    var i=0, len = layers.length;\r\n    while(i<len){\r\n        if(layers[i].ind == parentName){\r\n            if(!elements[i] || elements[i] === true){\r\n                this.buildItem(i);\r\n                this.addPendingElement(element);\r\n            } else if(layers[i].parent !== undefined){\r\n                hierarchy.push(elements[i]);\r\n                elements[i]._isParent = true;\r\n                this.buildElementParenting(element,layers[i].parent, hierarchy);\r\n            } else {\r\n                hierarchy.push(elements[i]);\r\n                elements[i]._isParent = true;\r\n                element.setHierarchy(hierarchy);\r\n            }\r\n\r\n\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nBaseRenderer.prototype.addPendingElement = function(element){\r\n    this.pendingElements.push(element);\r\n};\nfunction SVGRenderer(animationItem, config){\r\n    this.animationItem = animationItem;\r\n    this.layers = null;\r\n    this.renderedFrame = -1;\r\n    this.globalData = {\r\n        frameNum: -1\r\n    };\r\n    this.renderConfig = {\r\n        preserveAspectRatio: (config && config.preserveAspectRatio) || 'xMidYMid meet',\r\n        progressiveLoad: (config && config.progressiveLoad) || false,\r\n        hideOnTransparent: (config && config.hideOnTransparent === false) ? false : true,\r\n        viewBoxOnly: (config && config.viewBoxOnly) || false,\r\n        className: (config && config.className) || ''\r\n    };\r\n    this.globalData.renderConfig = this.renderConfig;\r\n    this.elements = [];\r\n    this.pendingElements = [];\r\n    this.destroyed = false;\r\n\r\n}\r\n\r\nextendPrototype(BaseRenderer,SVGRenderer);\r\n\r\nSVGRenderer.prototype.createBase = function (data) {\r\n    return new SVGBaseElement(data, this.layerElement,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createShape = function (data) {\r\n    return new IShapeElement(data, this.layerElement,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createText = function (data) {\r\n    return new SVGTextElement(data, this.layerElement,this.globalData,this);\r\n\r\n};\r\n\r\nSVGRenderer.prototype.createImage = function (data) {\r\n    return new IImageElement(data, this.layerElement,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createComp = function (data) {\r\n    return new ICompElement(data, this.layerElement,this.globalData,this);\r\n\r\n};\r\n\r\nSVGRenderer.prototype.createSolid = function (data) {\r\n    return new ISolidElement(data, this.layerElement,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.configAnimation = function(animData){\r\n    this.layerElement = document.createElementNS(svgNS,'svg');\r\n    this.layerElement.setAttribute('xmlns','http://www.w3.org/2000/svg');\r\n    this.layerElement.setAttribute('viewBox','0 0 '+animData.w+' '+animData.h);\r\n    if(!this.renderConfig.viewBoxOnly) {\r\n        this.layerElement.setAttribute('width',animData.w);\r\n        this.layerElement.setAttribute('height',animData.h);\r\n        this.layerElement.style.width = '100%';\r\n        this.layerElement.style.height = '100%';\r\n    }\r\n    if(this.renderConfig.className) {\r\n        this.layerElement.setAttribute('class', this.renderConfig.className);\r\n    }\r\n    this.layerElement.setAttribute('preserveAspectRatio',this.renderConfig.preserveAspectRatio);\r\n    //this.layerElement.style.transform = 'translate3d(0,0,0)';\r\n    //this.layerElement.style.transformOrigin = this.layerElement.style.mozTransformOrigin = this.layerElement.style.webkitTransformOrigin = this.layerElement.style['-webkit-transform'] = \"0px 0px 0px\";\r\n    this.animationItem.wrapper.appendChild(this.layerElement);\r\n    //Mask animation\r\n    var defs = document.createElementNS(svgNS, 'defs');\r\n    this.globalData.defs = defs;\r\n    this.layerElement.appendChild(defs);\r\n    this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem);\r\n    this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem);\r\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\r\n    this.globalData.frameId = 0;\r\n    this.globalData.nm = animData.nm;\r\n    this.globalData.compSize = {\r\n        w: animData.w,\r\n        h: animData.h\r\n    };\r\n    this.data = animData;\r\n    this.globalData.frameRate = animData.fr;\r\n    var maskElement = document.createElementNS(svgNS, 'clipPath');\r\n    var rect = document.createElementNS(svgNS,'rect');\r\n    rect.setAttribute('width',animData.w);\r\n    rect.setAttribute('height',animData.h);\r\n    rect.setAttribute('x',0);\r\n    rect.setAttribute('y',0);\r\n    var maskId = 'animationMask_'+randomString(10);\r\n    maskElement.setAttribute('id', maskId);\r\n    maskElement.appendChild(rect);\r\n    var maskedElement = document.createElementNS(svgNS,'g');\r\n    maskedElement.setAttribute(\"clip-path\", \"url(\" + locationHref + \"#\"+maskId+\")\");\r\n    this.layerElement.appendChild(maskedElement);\r\n    defs.appendChild(maskElement);\r\n    this.layerElement = maskedElement;\r\n    this.layers = animData.layers;\r\n    this.globalData.fontManager = new FontManager();\r\n    this.globalData.fontManager.addChars(animData.chars);\r\n    this.globalData.fontManager.addFonts(animData.fonts,defs);\r\n    this.elements = Array.apply(null,{length:animData.layers.length});\r\n};\r\n\r\n\r\nSVGRenderer.prototype.destroy = function () {\r\n    this.animationItem.wrapper.innerHTML = '';\r\n    this.layerElement = null;\r\n    this.globalData.defs = null;\r\n    var i, len = this.layers ? this.layers.length : 0;\r\n    for (i = 0; i < len; i++) {\r\n        if(this.elements[i]){\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n    this.elements.length = 0;\r\n    this.destroyed = true;\r\n    this.animationItem = null;\r\n};\r\n\r\nSVGRenderer.prototype.updateContainerSize = function () {\r\n};\r\n\r\nSVGRenderer.prototype.buildItem  = function(pos){\r\n    var elements = this.elements;\r\n    if(elements[pos] || this.layers[pos].ty == 99){\r\n        return;\r\n    }\r\n    elements[pos] = true;\r\n    var element = this.createItem(this.layers[pos]);\r\n\r\n    elements[pos] = element;\r\n    if(expressionsPlugin){\r\n        if(this.layers[pos].ty === 0){\r\n            this.globalData.projectInterface.registerComposition(element);\r\n        }\r\n        element.initExpressions();\r\n    }\r\n    this.appendElementInPos(element,pos);\r\n    if(this.layers[pos].tt){\r\n        if(!this.elements[pos - 1] || this.elements[pos - 1] === true){\r\n            this.buildItem(pos - 1);\r\n            this.addPendingElement(element);\r\n        } else {\r\n            element.setMatte(elements[pos - 1].layerId);\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.checkPendingElements  = function(){\r\n    while(this.pendingElements.length){\r\n        var element = this.pendingElements.pop();\r\n        element.checkParenting();\r\n        if(element.data.tt){\r\n            var i = 0, len = this.elements.length;\r\n            while(i<len){\r\n                if(this.elements[i] === element){\r\n                    element.setMatte(this.elements[i - 1].layerId);\r\n                    break;\r\n                }\r\n                i += 1;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.renderFrame = function(num){\r\n    if(this.renderedFrame == num || this.destroyed){\r\n        return;\r\n    }\r\n    if(num === null){\r\n        num = this.renderedFrame;\r\n    }else{\r\n        this.renderedFrame = num;\r\n    }\r\n    //clearPoints();\r\n    /*console.log('-------');\r\n    console.log('FRAME ',num);*/\r\n    this.globalData.frameNum = num;\r\n    this.globalData.frameId += 1;\r\n    this.globalData.projectInterface.currentFrame = num;\r\n    var i, len = this.layers.length;\r\n    if(!this.completeLayers){\r\n        this.checkLayers(num);\r\n    }\r\n    for (i = len - 1; i >= 0; i--) {\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].prepareFrame(num - this.layers[i].st);\r\n        }\r\n    }\r\n    for (i = len - 1; i >= 0; i--) {\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].renderFrame();\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.appendElementInPos = function(element, pos){\r\n    var newElement = element.getBaseElement();\r\n    if(!newElement){\r\n        return;\r\n    }\r\n    var i = 0;\r\n    var nextElement;\r\n    while(i<pos){\r\n        if(this.elements[i] && this.elements[i]!== true && this.elements[i].getBaseElement()){\r\n            nextElement = this.elements[i].getBaseElement();\r\n        }\r\n        i += 1;\r\n    }\r\n    if(nextElement){\r\n        this.layerElement.insertBefore(newElement, nextElement);\r\n    } else {\r\n        this.layerElement.appendChild(newElement);\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.hide = function(){\r\n    this.layerElement.style.display = 'none';\r\n};\r\n\r\nSVGRenderer.prototype.show = function(){\r\n    this.layerElement.style.display = 'block';\r\n};\r\n\r\nSVGRenderer.prototype.searchExtraCompositions = function(assets){\r\n    var i, len = assets.length;\r\n    var floatingContainer = document.createElementNS(svgNS,'g');\r\n    for(i=0;i<len;i+=1){\r\n        if(assets[i].xt){\r\n            var comp = this.createComp(assets[i],floatingContainer,this.globalData.comp,null);\r\n            comp.initExpressions();\r\n            //comp.compInterface = CompExpressionInterface(comp);\r\n            //Expressions.addLayersInterface(comp.elements, this.globalData.projectInterface);\r\n            this.globalData.projectInterface.registerComposition(comp);\r\n        }\r\n    }\r\n};\r\n\nfunction MaskElement(data,element,globalData) {\r\n    this.dynamicProperties = [];\r\n    this.data = data;\r\n    this.element = element;\r\n    this.globalData = globalData;\r\n    this.storedData = [];\r\n    this.masksProperties = this.data.masksProperties;\r\n    this.viewData = Array.apply(null,{length:this.masksProperties.length});\r\n    this.maskElement = null;\r\n    this.firstFrame = true;\r\n    var defs = this.globalData.defs;\r\n    var i, len = this.masksProperties.length;\r\n\r\n\r\n    var path, properties = this.masksProperties;\r\n    var count = 0;\r\n    var currentMasks = [];\r\n    var j, jLen;\r\n    var layerId = randomString(10);\r\n    var rect, expansor, feMorph,x;\r\n    var maskType = 'clipPath', maskRef = 'clip-path';\r\n    for (i = 0; i < len; i++) {\r\n\r\n        if((properties[i].mode !== 'a' && properties[i].mode !== 'n')|| properties[i].inv || properties[i].o.k !== 100){\r\n            maskType = 'mask';\r\n            maskRef = 'mask';\r\n        }\r\n\r\n        if((properties[i].mode == 's' || properties[i].mode == 'i') && count == 0){\r\n            rect = document.createElementNS(svgNS, 'rect');\r\n            rect.setAttribute('fill', '#ffffff');\r\n            rect.setAttribute('width', this.element.comp.data.w);\r\n            rect.setAttribute('height', this.element.comp.data.h);\r\n            currentMasks.push(rect);\r\n        } else {\r\n            rect = null;\r\n        }\r\n\r\n        path = document.createElementNS(svgNS, 'path');\r\n        if(properties[i].mode == 'n') {\r\n            this.viewData[i] = {\r\n                op: PropertyFactory.getProp(this.element,properties[i].o,0,0.01,this.dynamicProperties),\r\n                prop: ShapePropertyFactory.getShapeProp(this.element,properties[i],3,this.dynamicProperties,null),\r\n                elem: path\r\n            };\r\n            defs.appendChild(path);\r\n            continue;\r\n        }\r\n        count += 1;\r\n\r\n        if(properties[i].mode == 's'){\r\n            path.setAttribute('fill', '#000000');\r\n        }else{\r\n            path.setAttribute('fill', '#ffffff');\r\n        }\r\n        path.setAttribute('clip-rule','nonzero');\r\n\r\n        if(properties[i].x.k !== 0){\r\n            maskType = 'mask';\r\n            maskRef = 'mask';\r\n            x = PropertyFactory.getProp(this.element,properties[i].x,0,null,this.dynamicProperties);\r\n            var filterID = 'fi_'+randomString(10);\r\n            expansor = document.createElementNS(svgNS,'filter');\r\n            expansor.setAttribute('id',filterID);\r\n            feMorph = document.createElementNS(svgNS,'feMorphology');\r\n            feMorph.setAttribute('operator','dilate');\r\n            feMorph.setAttribute('in','SourceGraphic');\r\n            feMorph.setAttribute('radius','0');\r\n            expansor.appendChild(feMorph);\r\n            defs.appendChild(expansor);\r\n            if(properties[i].mode == 's'){\r\n                path.setAttribute('stroke', '#000000');\r\n            }else{\r\n                path.setAttribute('stroke', '#ffffff');\r\n            }\r\n        }else{\r\n            feMorph = null;\r\n            x = null;\r\n        }\r\n\r\n\r\n        this.storedData[i] = {\r\n             elem: path,\r\n             x: x,\r\n             expan: feMorph,\r\n            lastPath: '',\r\n            lastOperator:'',\r\n            filterId:filterID,\r\n            lastRadius:0\r\n        };\r\n        if(properties[i].mode == 'i'){\r\n            jLen = currentMasks.length;\r\n            var g = document.createElementNS(svgNS,'g');\r\n            for(j=0;j<jLen;j+=1){\r\n                g.appendChild(currentMasks[j]);\r\n            }\r\n            var mask = document.createElementNS(svgNS,'mask');\r\n            mask.setAttribute('mask-type','alpha');\r\n            mask.setAttribute('id',layerId+'_'+count);\r\n            mask.appendChild(path);\r\n            defs.appendChild(mask);\r\n            g.setAttribute('mask','url(' + locationHref + '#'+layerId+'_'+count+')');\r\n\r\n            currentMasks.length = 0;\r\n            currentMasks.push(g);\r\n        }else{\r\n            currentMasks.push(path);\r\n        }\r\n        if(properties[i].inv && !this.solidPath){\r\n            this.solidPath = this.createLayerSolidPath();\r\n        }\r\n        this.viewData[i] = {\r\n            elem: path,\r\n            lastPath: '',\r\n            op: PropertyFactory.getProp(this.element,properties[i].o,0,0.01,this.dynamicProperties),\r\n            prop:ShapePropertyFactory.getShapeProp(this.element,properties[i],3,this.dynamicProperties,null)\r\n        };\r\n        if(rect){\r\n            this.viewData[i].invRect = rect;\r\n        }\r\n        if(!this.viewData[i].prop.k){\r\n            this.drawPath(properties[i],this.viewData[i].prop.v,this.viewData[i]);\r\n        }\r\n    }\r\n\r\n    this.maskElement = document.createElementNS(svgNS, maskType);\r\n\r\n    len = currentMasks.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.maskElement.appendChild(currentMasks[i]);\r\n    }\r\n\r\n    this.maskElement.setAttribute('id', layerId);\r\n    if(count > 0){\r\n        this.element.maskedElement.setAttribute(maskRef, \"url(\" + locationHref + \"#\" + layerId + \")\");\r\n    }\r\n\r\n    defs.appendChild(this.maskElement);\r\n};\r\n\r\nMaskElement.prototype.getMaskProperty = function(pos){\r\n    return this.viewData[pos].prop;\r\n};\r\n\r\nMaskElement.prototype.prepareFrame = function(){\r\n    var i, len = this.dynamicProperties.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.dynamicProperties[i].getValue();\r\n\r\n    }\r\n};\r\n\r\nMaskElement.prototype.renderFrame = function (finalMat) {\r\n    var i, len = this.masksProperties.length;\r\n    for (i = 0; i < len; i++) {\r\n        if(this.viewData[i].prop.mdf || this.firstFrame){\r\n            this.drawPath(this.masksProperties[i],this.viewData[i].prop.v,this.viewData[i]);\r\n        }\r\n        if(this.viewData[i].op.mdf || this.firstFrame){\r\n            this.viewData[i].elem.setAttribute('fill-opacity',this.viewData[i].op.v);\r\n        }\r\n        if(this.masksProperties[i].mode !== 'n'){\r\n            if(this.viewData[i].invRect && (this.element.finalTransform.mProp.mdf || this.firstFrame)){\r\n                this.viewData[i].invRect.setAttribute('x', -finalMat.props[12]);\r\n                this.viewData[i].invRect.setAttribute('y', -finalMat.props[13]);\r\n            }\r\n            if(this.storedData[i].x && (this.storedData[i].x.mdf || this.firstFrame)){\r\n                var feMorph = this.storedData[i].expan;\r\n                if(this.storedData[i].x.v < 0){\r\n                    if(this.storedData[i].lastOperator !== 'erode'){\r\n                        this.storedData[i].lastOperator = 'erode';\r\n                        this.storedData[i].elem.setAttribute('filter','url(' + locationHref + '#'+this.storedData[i].filterId+')');\r\n                    }\r\n                    feMorph.setAttribute('radius',-this.storedData[i].x.v);\r\n                }else{\r\n                    if(this.storedData[i].lastOperator !== 'dilate'){\r\n                        this.storedData[i].lastOperator = 'dilate';\r\n                        this.storedData[i].elem.setAttribute('filter',null);\r\n                    }\r\n                    this.storedData[i].elem.setAttribute('stroke-width', this.storedData[i].x.v*2);\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n    this.firstFrame = false;\r\n};\r\n\r\nMaskElement.prototype.getMaskelement = function () {\r\n    return this.maskElement;\r\n};\r\n\r\nMaskElement.prototype.createLayerSolidPath = function(){\r\n    var path = 'M0,0 ';\r\n    path += ' h' + this.globalData.compSize.w ;\r\n    path += ' v' + this.globalData.compSize.h ;\r\n    path += ' h-' + this.globalData.compSize.w ;\r\n    path += ' v-' + this.globalData.compSize.h + ' ';\r\n    return path;\r\n};\r\n\r\nMaskElement.prototype.drawPath = function(pathData,pathNodes,viewData){\r\n    var pathString = \" M\"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    var i, len;\r\n    len = pathNodes._length;\r\n    for(i=1;i<len;i+=1){\r\n        //pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[i][0]+','+pathNodes.i[i][1] + \" \"+pathNodes.v[i][0]+','+pathNodes.v[i][1];\r\n        pathString += \" C\"+bm_rnd(pathNodes.o[i-1][0])+','+bm_rnd(pathNodes.o[i-1][1]) + \" \"+bm_rnd(pathNodes.i[i][0])+','+bm_rnd(pathNodes.i[i][1]) + \" \"+bm_rnd(pathNodes.v[i][0])+','+bm_rnd(pathNodes.v[i][1]);\r\n    }\r\n        //pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[0][0]+','+pathNodes.i[0][1] + \" \"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    if(pathNodes.c && len > 1){\r\n        pathString += \" C\"+bm_rnd(pathNodes.o[i-1][0])+','+bm_rnd(pathNodes.o[i-1][1]) + \" \"+bm_rnd(pathNodes.i[0][0])+','+bm_rnd(pathNodes.i[0][1]) + \" \"+bm_rnd(pathNodes.v[0][0])+','+bm_rnd(pathNodes.v[0][1]);\r\n    }\r\n    //pathNodes.__renderedString = pathString;\r\n\r\n\r\n    if(viewData.lastPath !== pathString){\r\n        if(viewData.elem){\r\n            if(!pathNodes.c){\r\n                viewData.elem.setAttribute('d','');\r\n            }else if(pathData.inv){\r\n                viewData.elem.setAttribute('d',this.solidPath + pathString);\r\n            }else{\r\n                viewData.elem.setAttribute('d',pathString);\r\n            }\r\n        }\r\n        viewData.lastPath = pathString;\r\n    }\r\n};\r\n\r\nMaskElement.prototype.destroy = function(){\r\n    this.element = null;\r\n    this.globalData = null;\r\n    this.maskElement = null;\r\n    this.data = null;\r\n    this.masksProperties = null;\r\n};\nfunction BaseElement(){\r\n};\r\nBaseElement.prototype.checkMasks = function(){\r\n    if(!this.data.hasMask){\r\n        return false;\r\n    }\r\n    var i = 0, len = this.data.masksProperties.length;\r\n    while(i<len) {\r\n        if((this.data.masksProperties[i].mode !== 'n' && this.data.masksProperties[i].cl !== false)) {\r\n            return true;\r\n        }\r\n        i += 1;\r\n    }\r\n    return false;\r\n}\r\n\r\nBaseElement.prototype.checkParenting = function(){\r\n    if(this.data.parent !== undefined){\r\n        this.comp.buildElementParenting(this, this.data.parent);\r\n    }\r\n}\r\n\r\nBaseElement.prototype.prepareFrame = function(num){\r\n    if(this.data.ip - this.data.st <= num && this.data.op - this.data.st > num)\r\n    {\r\n        if(this.isVisible !== true){\r\n            this.elemMdf = true;\r\n            this.globalData.mdf = true;\r\n            this.isVisible = true;\r\n            this.firstFrame = true;\r\n            if(this.data.hasMask){\r\n                this.maskManager.firstFrame = true;\r\n            }\r\n        }\r\n    }else{\r\n        if(this.isVisible !== false){\r\n            this.elemMdf = true;\r\n            this.globalData.mdf = true;\r\n            this.isVisible = false;\r\n        }\r\n    }\r\n    var i, len = this.dynamicProperties.length;\r\n    for(i=0;i<len;i+=1){\r\n        if(this.isVisible || (this._isParent && this.dynamicProperties[i].type === 'transform')){\r\n            this.dynamicProperties[i].getValue();\r\n            if(this.dynamicProperties[i].mdf){\r\n                this.elemMdf = true;\r\n                this.globalData.mdf = true;\r\n            }\r\n        }\r\n    }\r\n    if(this.data.hasMask && this.isVisible){\r\n        this.maskManager.prepareFrame(num*this.data.sr);\r\n    }\r\n    \r\n    /* TODO check this\r\n    if(this.data.sy){\r\n        if(this.data.sy[0].renderedData[num]){\r\n            if(this.data.sy[0].renderedData[num].c){\r\n                this.feFlood.setAttribute('flood-color','rgb('+Math.round(this.data.sy[0].renderedData[num].c[0])+','+Math.round(this.data.sy[0].renderedData[num].c[1])+','+Math.round(this.data.sy[0].renderedData[num].c[2])+')');\r\n            }\r\n            if(this.data.sy[0].renderedData[num].s){\r\n                this.feMorph.setAttribute('radius',this.data.sy[0].renderedData[num].s);\r\n            }\r\n        }\r\n    }\r\n    */\r\n\r\n\r\n    this.currentFrameNum = num*this.data.sr;\r\n    return this.isVisible;\r\n};\r\n\r\nBaseElement.prototype.globalToLocal = function(pt){\r\n    var transforms = [];\r\n    transforms.push(this.finalTransform);\r\n    var flag = true;\r\n    var comp = this.comp;\r\n    while(flag){\r\n        if(comp.finalTransform){\r\n            if(comp.data.hasMask){\r\n                transforms.splice(0,0,comp.finalTransform);\r\n            }\r\n            comp = comp.comp;\r\n        } else {\r\n            flag = false;\r\n        }\r\n    }\r\n    var i, len = transforms.length,ptNew;\r\n    for(i=0;i<len;i+=1){\r\n        ptNew = transforms[i].mat.applyToPointArray(0,0,0);\r\n        //ptNew = transforms[i].mat.applyToPointArray(pt[0],pt[1],pt[2]);\r\n        pt = [pt[0] - ptNew[0],pt[1] - ptNew[1],0];\r\n    }\r\n    return pt;\r\n};\r\n\r\nBaseElement.prototype.initExpressions = function(){\r\n    this.layerInterface = LayerExpressionInterface(this);\r\n    //layers[i].layerInterface = LayerExpressionInterface(layers[i]);\r\n    //layers[i].layerInterface = LayerExpressionInterface(layers[i]);\r\n    if(this.data.hasMask){\r\n        this.layerInterface.registerMaskInterface(this.maskManager);\r\n    }\r\n    var effectsInterface = EffectsExpressionInterface.createEffectsInterface(this,this.layerInterface);\r\n    this.layerInterface.registerEffectsInterface(effectsInterface);\r\n\r\n    if(this.data.ty === 0 || this.data.xt){\r\n        this.compInterface = CompExpressionInterface(this);\r\n    } else if(this.data.ty === 4){\r\n        this.layerInterface.shapeInterface = ShapeExpressionInterface.createShapeInterface(this.shapesData,this.itemsData,this.layerInterface);\r\n    } else if(this.data.ty === 5){\r\n        this.layerInterface.textInterface = TextExpressionInterface(this);\r\n    }\r\n}\r\n\r\nBaseElement.prototype.setBlendMode = function(){\r\n    var blendModeValue = '';\r\n    switch(this.data.bm){\r\n        case 1:\r\n            blendModeValue = 'multiply';\r\n            break;\r\n        case 2:\r\n            blendModeValue = 'screen';\r\n            break;\r\n        case 3:\r\n            blendModeValue = 'overlay';\r\n            break;\r\n        case 4:\r\n            blendModeValue = 'darken';\r\n            break;\r\n        case 5:\r\n            blendModeValue = 'lighten';\r\n            break;\r\n        case 6:\r\n            blendModeValue = 'color-dodge';\r\n            break;\r\n        case 7:\r\n            blendModeValue = 'color-burn';\r\n            break;\r\n        case 8:\r\n            blendModeValue = 'hard-light';\r\n            break;\r\n        case 9:\r\n            blendModeValue = 'soft-light';\r\n            break;\r\n        case 10:\r\n            blendModeValue = 'difference';\r\n            break;\r\n        case 11:\r\n            blendModeValue = 'exclusion';\r\n            break;\r\n        case 12:\r\n            blendModeValue = 'hue';\r\n            break;\r\n        case 13:\r\n            blendModeValue = 'saturation';\r\n            break;\r\n        case 14:\r\n            blendModeValue = 'color';\r\n            break;\r\n        case 15:\r\n            blendModeValue = 'luminosity';\r\n            break;\r\n    }\r\n    var elem = this.baseElement || this.layerElement;\r\n\r\n    elem.style['mix-blend-mode'] = blendModeValue;\r\n}\r\n\r\nBaseElement.prototype.init = function(){\r\n    if(!this.data.sr){\r\n        this.data.sr = 1;\r\n    }\r\n    this.dynamicProperties = this.dynamicProperties || [];\r\n    if(this.data.ef){\r\n        this.effects = new EffectsManager(this.data,this,this.dynamicProperties);\r\n        //this.effect = this.effectsManager.bind(this.effectsManager);\r\n    }\r\n    //this.elemInterface = buildLayerExpressionInterface(this);\r\n    this.hidden = false;\r\n    this.firstFrame = true;\r\n    this.isVisible = false;\r\n    this._isParent = false;\r\n    this.currentFrameNum = -99999;\r\n    this.lastNum = -99999;\r\n    if(this.data.ks){\r\n        this.finalTransform = {\r\n            mProp: PropertyFactory.getProp(this,this.data.ks,2,null,this.dynamicProperties),\r\n            matMdf: false,\r\n            opMdf: false,\r\n            mat: new Matrix(),\r\n            opacity: 1\r\n        };\r\n        if(this.data.ao){\r\n            this.finalTransform.mProp.autoOriented = true;\r\n        }\r\n        this.finalTransform.op = this.finalTransform.mProp.o;\r\n        this.transform = this.finalTransform.mProp;\r\n        if(this.data.ty !== 11){\r\n            this.createElements();\r\n        }\r\n        if(this.data.hasMask){\r\n            this.addMasks(this.data);\r\n        }\r\n    }\r\n    this.elemMdf = false;\r\n};\r\nBaseElement.prototype.getType = function(){\r\n    return this.type;\r\n};\r\n\r\nBaseElement.prototype.resetHierarchy = function(){\r\n    if(!this.hierarchy){\r\n        this.hierarchy = [];\r\n    }else{\r\n        this.hierarchy.length = 0;\r\n    }\r\n};\r\n\r\nBaseElement.prototype.getHierarchy = function(){\r\n    if(!this.hierarchy){\r\n        this.hierarchy = [];\r\n    }\r\n    return this.hierarchy;\r\n};\r\n\r\nBaseElement.prototype.setHierarchy = function(hierarchy){\r\n    this.hierarchy = hierarchy;\r\n};\r\n\r\nBaseElement.prototype.getLayerSize = function(){\r\n    if(this.data.ty === 5){\r\n        return {w:this.data.textData.width,h:this.data.textData.height};\r\n    }else{\r\n        return {w:this.data.width,h:this.data.height};\r\n    }\r\n};\r\n\r\nBaseElement.prototype.hide = function(){\r\n\r\n};\r\n\r\nBaseElement.prototype.sourceRectAtTime = function(){\r\n    return {\r\n        top:0,\r\n        left:0,\r\n        width:100,\r\n        height:100\r\n    }\r\n};\r\n\r\nBaseElement.prototype.mHelper = new Matrix();\nfunction SVGBaseElement(data,parentContainer,globalData,comp, placeholder){\r\n    this.globalData = globalData;\r\n    this.comp = comp;\r\n    this.data = data;\r\n    this.matteElement = null;\r\n    this.transformedElement = null;\r\n    this.isTransparent = false;\r\n    this.parentContainer = parentContainer;\r\n    this.layerId = placeholder ? placeholder.layerId : 'ly_'+randomString(10);\r\n    this.placeholder = placeholder;\r\n    this._sizeChanged = false;\r\n    this.init();\r\n};\r\n\r\ncreateElement(BaseElement, SVGBaseElement);\r\n\r\nSVGBaseElement.prototype.createElements = function(){\r\n    this.layerElement = document.createElementNS(svgNS,'g');\r\n    this.transformedElement = this.layerElement;\r\n    if(this.data.hasMask){\r\n        this.maskedElement = this.layerElement;\r\n    }\r\n    var layerElementParent = null;\r\n    if(this.data.td){\r\n        if(this.data.td == 3 || this.data.td == 1){\r\n            var masker = document.createElementNS(svgNS,'mask');\r\n            masker.setAttribute('id',this.layerId);\r\n            masker.setAttribute('mask-type',this.data.td == 3 ? 'luminance':'alpha');\r\n            masker.appendChild(this.layerElement);\r\n            layerElementParent = masker;\r\n            this.globalData.defs.appendChild(masker);\r\n            ////// This is only for IE and Edge when mask if of type alpha\r\n            if(!featureSupport.maskType && this.data.td == 1){\r\n                masker.setAttribute('mask-type','luminance');\r\n                var filId = randomString(10);\r\n                var fil = filtersFactory.createFilter(filId);\r\n                this.globalData.defs.appendChild(fil);\r\n                fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\r\n                var gg = document.createElementNS(svgNS,'g');\r\n                gg.appendChild(this.layerElement);\r\n                layerElementParent = gg;\r\n                masker.appendChild(gg);\r\n                gg.setAttribute('filter','url(' + locationHref + '#'+filId+')');\r\n            }\r\n        }else if(this.data.td == 2){\r\n            var maskGroup = document.createElementNS(svgNS,'mask');\r\n            maskGroup.setAttribute('id',this.layerId);\r\n            maskGroup.setAttribute('mask-type','alpha');\r\n            var maskGrouper = document.createElementNS(svgNS,'g');\r\n            maskGroup.appendChild(maskGrouper);\r\n            var filId = randomString(10);\r\n            var fil = filtersFactory.createFilter(filId);\r\n            ////\r\n\r\n            var feColorMatrix = document.createElementNS(svgNS,'feColorMatrix');\r\n            feColorMatrix.setAttribute('type','matrix');\r\n            feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n            feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 -1 1');\r\n            fil.appendChild(feColorMatrix);\r\n\r\n            ////\r\n            /*var feCTr = document.createElementNS(svgNS,'feComponentTransfer');\r\n            feCTr.setAttribute('in','SourceGraphic');\r\n            fil.appendChild(feCTr);\r\n            var feFunc = document.createElementNS(svgNS,'feFuncA');\r\n            feFunc.setAttribute('type','table');\r\n            feFunc.setAttribute('tableValues','1.0 0.0');\r\n            feCTr.appendChild(feFunc);*/\r\n            this.globalData.defs.appendChild(fil);\r\n            var alphaRect = document.createElementNS(svgNS,'rect');\r\n            alphaRect.setAttribute('width',this.comp.data.w);\r\n            alphaRect.setAttribute('height',this.comp.data.h);\r\n            alphaRect.setAttribute('x','0');\r\n            alphaRect.setAttribute('y','0');\r\n            alphaRect.setAttribute('fill','#ffffff');\r\n            alphaRect.setAttribute('opacity','0');\r\n            maskGrouper.setAttribute('filter','url(' + locationHref + '#'+filId+')');\r\n            maskGrouper.appendChild(alphaRect);\r\n            maskGrouper.appendChild(this.layerElement);\r\n            layerElementParent = maskGrouper;\r\n            if(!featureSupport.maskType){\r\n                maskGroup.setAttribute('mask-type','luminance');\r\n                fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\r\n                var gg = document.createElementNS(svgNS,'g');\r\n                maskGrouper.appendChild(alphaRect);\r\n                gg.appendChild(this.layerElement);\r\n                layerElementParent = gg;\r\n                maskGrouper.appendChild(gg);\r\n            }\r\n            this.globalData.defs.appendChild(maskGroup);\r\n        }\r\n    }else if(this.data.hasMask || this.data.tt){\r\n        if(this.data.tt){\r\n            this.matteElement = document.createElementNS(svgNS,'g');\r\n            this.matteElement.appendChild(this.layerElement);\r\n            layerElementParent = this.matteElement;\r\n            this.baseElement = this.matteElement;\r\n        }else{\r\n            this.baseElement = this.layerElement;\r\n        }\r\n    }else{\r\n        this.baseElement = this.layerElement;\r\n    }\r\n    if((this.data.ln || this.data.cl) && (this.data.ty === 4 || this.data.ty === 0)){\r\n        if(this.data.ln){\r\n            this.layerElement.setAttribute('id',this.data.ln);\r\n        }\r\n        if(this.data.cl){\r\n            this.layerElement.setAttribute('class',this.data.cl);\r\n        }\r\n    }\r\n    if(this.data.ty === 0){\r\n            var cp = document.createElementNS(svgNS, 'clipPath');\r\n            var pt = document.createElementNS(svgNS,'path');\r\n            pt.setAttribute('d','M0,0 L'+this.data.w+',0'+' L'+this.data.w+','+this.data.h+' L0,'+this.data.h+'z');\r\n            var clipId = 'cp_'+randomString(8);\r\n            cp.setAttribute('id',clipId);\r\n            cp.appendChild(pt);\r\n            this.globalData.defs.appendChild(cp);\r\n        if(this.checkMasks()){\r\n            var cpGroup = document.createElementNS(svgNS,'g');\r\n            cpGroup.setAttribute('clip-path','url(' + locationHref + '#'+clipId+')');\r\n            cpGroup.appendChild(this.layerElement);\r\n            this.transformedElement = cpGroup;\r\n            if(layerElementParent){\r\n                layerElementParent.appendChild(this.transformedElement);\r\n            } else {\r\n                this.baseElement = this.transformedElement;\r\n            }\r\n        } else {\r\n            this.layerElement.setAttribute('clip-path','url(' + locationHref + '#'+clipId+')');\r\n        }\r\n        \r\n    }\r\n    if(this.data.bm !== 0){\r\n        this.setBlendMode();\r\n    }\r\n    if(this.layerElement !== this.parentContainer){\r\n        this.placeholder = null;\r\n    }\r\n    /* Todo performance killer\r\n    if(this.data.sy){\r\n        var filterID = 'st_'+randomString(10);\r\n        var c = this.data.sy[0].c.k;\r\n        var r = this.data.sy[0].s.k;\r\n        var expansor = document.createElementNS(svgNS,'filter');\r\n        expansor.setAttribute('id',filterID);\r\n        var feFlood = document.createElementNS(svgNS,'feFlood');\r\n        this.feFlood = feFlood;\r\n        if(!c[0].e){\r\n            feFlood.setAttribute('flood-color','rgb('+c[0]+','+c[1]+','+c[2]+')');\r\n        }\r\n        feFlood.setAttribute('result','base');\r\n        expansor.appendChild(feFlood);\r\n        var feMorph = document.createElementNS(svgNS,'feMorphology');\r\n        feMorph.setAttribute('operator','dilate');\r\n        feMorph.setAttribute('in','SourceGraphic');\r\n        feMorph.setAttribute('result','bigger');\r\n        this.feMorph = feMorph;\r\n        if(!r.length){\r\n            feMorph.setAttribute('radius',this.data.sy[0].s.k);\r\n        }\r\n        expansor.appendChild(feMorph);\r\n        var feColorMatrix = document.createElementNS(svgNS,'feColorMatrix');\r\n        feColorMatrix.setAttribute('result','mask');\r\n        feColorMatrix.setAttribute('in','bigger');\r\n        feColorMatrix.setAttribute('type','matrix');\r\n        feColorMatrix.setAttribute('values','0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0');\r\n        expansor.appendChild(feColorMatrix);\r\n        var feComposite = document.createElementNS(svgNS,'feComposite');\r\n        feComposite.setAttribute('result','drop');\r\n        feComposite.setAttribute('in','base');\r\n        feComposite.setAttribute('in2','mask');\r\n        feComposite.setAttribute('operator','in');\r\n        expansor.appendChild(feComposite);\r\n        var feBlend = document.createElementNS(svgNS,'feBlend');\r\n        feBlend.setAttribute('in','SourceGraphic');\r\n        feBlend.setAttribute('in2','drop');\r\n        feBlend.setAttribute('mode','normal');\r\n        expansor.appendChild(feBlend);\r\n        this.globalData.defs.appendChild(expansor);\r\n        var cont = document.createElementNS(svgNS,'g');\r\n        if(this.layerElement === this.parentContainer){\r\n            this.layerElement = cont;\r\n        }else{\r\n            cont.appendChild(this.layerElement);\r\n        }\r\n        cont.setAttribute('filter','url(#'+filterID+')');\r\n        if(this.data.td){\r\n            cont.setAttribute('data-td',this.data.td);\r\n        }\r\n        if(this.data.td == 3){\r\n            this.globalData.defs.appendChild(cont);\r\n        }else if(this.data.td == 2){\r\n            maskGrouper.appendChild(cont);\r\n        }else if(this.data.td == 1){\r\n            masker.appendChild(cont);\r\n        }else{\r\n            if(this.data.hasMask && this.data.tt){\r\n                this.matteElement.appendChild(cont);\r\n            }else{\r\n                this.appendNodeToParent(cont);\r\n            }\r\n        }\r\n    }*/\r\n    if(this.data.ef){\r\n        this.effectsManager = new SVGEffects(this);\r\n    }\r\n    this.checkParenting();\r\n};\r\n\r\n\r\nSVGBaseElement.prototype.setBlendMode = BaseElement.prototype.setBlendMode;\r\n\r\nSVGBaseElement.prototype.renderFrame = function(parentTransform){\r\n    if(this.data.ty === 3 || this.data.hd || !this.isVisible){\r\n        return false;\r\n    }\r\n\r\n    this.lastNum = this.currentFrameNum;\r\n    this.finalTransform.opMdf = this.firstFrame || this.finalTransform.op.mdf;\r\n    this.finalTransform.matMdf = this.firstFrame || this.finalTransform.mProp.mdf;\r\n    this.finalTransform.opacity = this.finalTransform.op.v;\r\n\r\n    var mat;\r\n    var finalMat = this.finalTransform.mat;\r\n\r\n    if(this.hierarchy){\r\n        var i = 0, len = this.hierarchy.length;\r\n        if(!this.finalTransform.matMdf) {\r\n            while(i < len) {\r\n                if(this.hierarchy[i].finalTransform.mProp.mdf) {\r\n                    this.finalTransform.matMdf = true;\r\n                    break;\r\n                }\r\n                i += 1;\r\n            }\r\n        }\r\n        \r\n        if(this.finalTransform.matMdf) {\r\n            mat = this.finalTransform.mProp.v.props;\r\n            finalMat.cloneFromProps(mat);\r\n            for(i=0;i<len;i+=1){\r\n                mat = this.hierarchy[i].finalTransform.mProp.v.props;\r\n                finalMat.transform(mat[0],mat[1],mat[2],mat[3],mat[4],mat[5],mat[6],mat[7],mat[8],mat[9],mat[10],mat[11],mat[12],mat[13],mat[14],mat[15]);\r\n            }\r\n        }\r\n        \r\n    }else if(this.isVisible){\r\n        finalMat = this.finalTransform.mProp.v;\r\n    }\r\n    if(this.finalTransform.matMdf && this.layerElement){\r\n        this.transformedElement.setAttribute('transform',finalMat.to2dCSS());\r\n    }\r\n    if(this.finalTransform.opMdf && this.layerElement){\r\n        if(this.finalTransform.op.v <= 0) {\r\n            if(!this.isTransparent && this.globalData.renderConfig.hideOnTransparent){\r\n                this.isTransparent = true;\r\n                this.hide();\r\n            }\r\n        } else if(this.hidden && this.isTransparent){\r\n            this.isTransparent = false;\r\n            this.show();\r\n        }\r\n        this.transformedElement.setAttribute('opacity',this.finalTransform.op.v);\r\n    }\r\n\r\n    if(this.data.hasMask){\r\n        this.maskManager.renderFrame(finalMat);\r\n    }\r\n    if(this.effectsManager){\r\n        this.effectsManager.renderFrame(this.firstFrame);\r\n    }\r\n    return this.isVisible;\r\n};\r\n\r\nSVGBaseElement.prototype.destroy = function(){\r\n    this.layerElement = null;\r\n    this.parentContainer = null;\r\n    if(this.matteElement) {\r\n        this.matteElement = null;\r\n    }\r\n    if(this.maskManager) {\r\n        this.maskManager.destroy();\r\n    }\r\n};\r\n\r\nSVGBaseElement.prototype.getBaseElement = function(){\r\n    return this.baseElement;\r\n};\r\nSVGBaseElement.prototype.addMasks = function(data){\r\n    this.maskManager = new MaskElement(data,this,this.globalData);\r\n};\r\n\r\nSVGBaseElement.prototype.setMatte = function(id){\r\n    if(!this.matteElement){\r\n        return;\r\n    }\r\n    this.matteElement.setAttribute(\"mask\", \"url(\" + locationHref + \"#\" + id + \")\");\r\n};\r\n\r\nSVGBaseElement.prototype.hide = function(){\r\n    if(!this.hidden){\r\n        this.layerElement.style.display = 'none';\r\n        this.hidden = true;\r\n    }\r\n};\r\n\r\nSVGBaseElement.prototype.show = function(){\r\n    if(this.isVisible && !this.isTransparent){\r\n        this.hidden = false;\r\n        this.layerElement.style.display = 'block';\r\n    }\r\n};\r\n\nfunction IShapeElement(data,parentContainer,globalData,comp, placeholder){\r\n    this.shapes = [];\r\n    this.shapesData = data.shapes;\r\n    this.stylesList = [];\r\n    this.itemsData = [];\r\n    this.prevViewData = [];\r\n    this.shapeModifiers = [];\r\n    this.processedElements = [];\r\n    this._parent.constructor.call(this,data,parentContainer,globalData,comp, placeholder);\r\n}\r\ncreateElement(SVGBaseElement, IShapeElement);\r\n\r\nIShapeElement.prototype.identityMatrix = new Matrix();\r\n\r\nIShapeElement.prototype.lcEnum = {\r\n    '1': 'butt',\r\n    '2': 'round',\r\n    '3': 'square'\r\n}\r\n\r\nIShapeElement.prototype.ljEnum = {\r\n    '1': 'miter',\r\n    '2': 'round',\r\n    '3': 'butt'\r\n}\r\n\r\nIShapeElement.prototype.searchProcessedElement = function(elem){\r\n    var i = this.processedElements.length;\r\n    while(i){\r\n        i -= 1;\r\n        if(this.processedElements[i].elem === elem){\r\n            return this.processedElements[i].pos;\r\n        }\r\n    }\r\n    return 0;\r\n};\r\n\r\nIShapeElement.prototype.addProcessedElement = function(elem, pos){\r\n    var i = this.processedElements.length;\r\n    while(i){\r\n        i -= 1;\r\n        if(this.processedElements[i].elem === elem){\r\n            this.processedElements[i].pos = pos;\r\n            break;\r\n        }\r\n    }\r\n    if(i === 0){\r\n        this.processedElements.push({\r\n            elem: elem,\r\n            pos: pos\r\n        })\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.buildExpressionInterface = function(){};\r\n\r\nIShapeElement.prototype.createElements = function(){\r\n    //TODO check if I can use symbol so i can set its viewBox\r\n    this._parent.createElements.call(this);\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement,this.dynamicProperties, 0, [], true);\r\n    if(!this.data.hd || this.data.td){\r\n        styleUnselectableDiv(this.layerElement);\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.setGradientData = function(pathElement,arr,data){\r\n\r\n    var gradientId = 'gr_'+randomString(10);\r\n    var gfill;\r\n    if(arr.t === 1){\r\n        gfill = document.createElementNS(svgNS,'linearGradient');\r\n    } else {\r\n        gfill = document.createElementNS(svgNS,'radialGradient');\r\n    }\r\n    gfill.setAttribute('id',gradientId);\r\n    gfill.setAttribute('spreadMethod','pad');\r\n    gfill.setAttribute('gradientUnits','userSpaceOnUse');\r\n    var stops = [];\r\n    var stop, j, jLen;\r\n    jLen = arr.g.p*4;\r\n    for(j=0;j<jLen;j+=4){\r\n        stop = document.createElementNS(svgNS,'stop');\r\n        gfill.appendChild(stop);\r\n        stops.push(stop);\r\n    }\r\n    pathElement.setAttribute( arr.ty === 'gf' ? 'fill':'stroke','url(#'+gradientId+')');\r\n    this.globalData.defs.appendChild(gfill);\r\n    data.gf = gfill;\r\n    data.cst = stops;\r\n}\r\n\r\nIShapeElement.prototype.setGradientOpacity = function(arr, data, styleOb){\r\n    if((arr.g.k.k[0].s && arr.g.k.k[0].s.length > arr.g.p*4) || arr.g.k.k.length > arr.g.p*4){\r\n        var opFill;\r\n        var stop, j, jLen;\r\n        var mask = document.createElementNS(svgNS,\"mask\");\r\n        var maskElement = document.createElementNS(svgNS, 'path');\r\n        mask.appendChild(maskElement);\r\n        var opacityId = 'op_'+randomString(10);\r\n        var maskId = 'mk_'+randomString(10);\r\n        mask.setAttribute('id',maskId);\r\n        if(arr.t === 1){\r\n            opFill = document.createElementNS(svgNS,'linearGradient');\r\n        } else {\r\n            opFill = document.createElementNS(svgNS,'radialGradient');\r\n        }\r\n        opFill.setAttribute('id',opacityId);\r\n        opFill.setAttribute('spreadMethod','pad');\r\n        opFill.setAttribute('gradientUnits','userSpaceOnUse');\r\n        jLen = arr.g.k.k[0].s ? arr.g.k.k[0].s.length : arr.g.k.k.length;\r\n        var stops = [];\r\n        for(j=arr.g.p*4;j<jLen;j+=2){\r\n            stop = document.createElementNS(svgNS,'stop');\r\n            stop.setAttribute('stop-color','rgb(255,255,255)');\r\n            //stop.setAttribute('offset',Math.round(arr.y[j][0]*100)+'%');\r\n            //stop.setAttribute('style','stop-color:rgb(255,255,255);stop-opacity:'+arr.y[j][1]);\r\n            opFill.appendChild(stop);\r\n            stops.push(stop);\r\n        }\r\n        maskElement.setAttribute( arr.ty === 'gf' ? 'fill':'stroke','url(#'+opacityId+')');\r\n        this.globalData.defs.appendChild(opFill);\r\n        this.globalData.defs.appendChild(mask);\r\n        data.of = opFill;\r\n        data.ost = stops;\r\n        styleOb.msElem = maskElement;\r\n        return maskId;\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.createStyleElement = function(data, level, dynamicProperties){\r\n    var elementData = {\r\n    };\r\n    var styleOb = {\r\n        data: data,\r\n        type: data.ty,\r\n        d: '',\r\n        ld: '',\r\n        lvl: level,\r\n        mdf: false,\r\n        closed: false\r\n    };\r\n    var pathElement = document.createElementNS(svgNS, \"path\");\r\n    elementData.o = PropertyFactory.getProp(this,data.o,0,0.01,dynamicProperties);\r\n    if(data.ty == 'st' || data.ty == 'gs') {\r\n        pathElement.setAttribute('stroke-linecap', this.lcEnum[data.lc] || 'round');\r\n        ////pathElement.style.strokeLinecap = this.lcEnum[data.lc] || 'round';\r\n        pathElement.setAttribute('stroke-linejoin',this.ljEnum[data.lj] || 'round');\r\n        ////pathElement.style.strokeLinejoin = this.ljEnum[data.lj] || 'round';\r\n        pathElement.setAttribute('fill-opacity','0');\r\n        ////pathElement.style.fillOpacity = 0;\r\n        if(data.lj == 1) {\r\n            pathElement.setAttribute('stroke-miterlimit',data.ml);\r\n            ////pathElement.style.strokeMiterlimit = data.ml;\r\n        }\r\n\r\n        elementData.w = PropertyFactory.getProp(this,data.w,0,null,dynamicProperties);\r\n        if(data.d){\r\n            var d = PropertyFactory.getDashProp(this,data.d,'svg',dynamicProperties);\r\n            if(!d.k){\r\n                pathElement.setAttribute('stroke-dasharray', d.dasharray);\r\n                ////pathElement.style.strokeDasharray = d.dasharray;\r\n                pathElement.setAttribute('stroke-dashoffset', d.dashoffset);\r\n                ////pathElement.style.strokeDashoffset = d.dashoffset;\r\n            }\r\n            elementData.d = d;\r\n        }\r\n\r\n    }\r\n    if(data.ty == 'fl' || data.ty == 'st'){\r\n        elementData.c = PropertyFactory.getProp(this,data.c,1,255,dynamicProperties);\r\n    } else {\r\n        elementData.g = PropertyFactory.getGradientProp(this,data.g,dynamicProperties);\r\n        if(data.t == 2){\r\n            elementData.h = PropertyFactory.getProp(this,data.h,0,0.01,dynamicProperties);\r\n            elementData.a = PropertyFactory.getProp(this,data.a,0,degToRads,dynamicProperties);\r\n        }\r\n        elementData.s = PropertyFactory.getProp(this,data.s,1,null,dynamicProperties);\r\n        elementData.e = PropertyFactory.getProp(this,data.e,1,null,dynamicProperties);\r\n        this.setGradientData(pathElement,data,elementData, styleOb);\r\n        var maskId = this.setGradientOpacity(data,elementData, styleOb);\r\n        if(maskId){\r\n            pathElement.setAttribute('mask','url(#'+maskId+')');\r\n        }\r\n    }\r\n    elementData.elem = pathElement;\r\n    //container.appendChild(pathElement);\r\n    if(data.r === 2) {\r\n        pathElement.setAttribute('fill-rule', 'evenodd');\r\n    }\r\n\r\n    if(data.ln){\r\n        pathElement.setAttribute('id',data.ln);\r\n    }\r\n    if(data.cl){\r\n        pathElement.setAttribute('class',data.cl);\r\n    }\r\n    styleOb.pElem = pathElement;\r\n    this.stylesList.push(styleOb);\r\n    elementData.style = styleOb;\r\n    return elementData;\r\n}\r\n\r\nIShapeElement.prototype.createGroupElement = function(data) {\r\n    var elementData = {\r\n        it: [],\r\n        prevViewData: []\r\n    };\r\n    var g = document.createElementNS(svgNS,'g');\r\n    elementData.gr = g;\r\n    if(data.ln){\r\n        elementData.gr.setAttribute('id',data.ln);\r\n    }\r\n    return elementData;\r\n}\r\n\r\nIShapeElement.prototype.createTransformElement = function(data, dynamicProperties) {\r\n    var elementData = {\r\n        transform : {\r\n            op: PropertyFactory.getProp(this,data.o,0,0.01,dynamicProperties),\r\n            mProps: PropertyFactory.getProp(this,data,2,null,dynamicProperties)\r\n        },\r\n        elements: []\r\n    };\r\n    return elementData;\r\n}\r\n\r\nIShapeElement.prototype.createShapeElement = function(data, ownTransformers, level, dynamicProperties) {\r\n    var elementData = {\r\n        elements : [],\r\n        caches:[],\r\n        styles : [],\r\n        transformers: ownTransformers,\r\n        lStr: ''\r\n    };\r\n    var ty = 4;\r\n    if(data.ty == 'rc'){\r\n        ty = 5;\r\n    }else if(data.ty == 'el'){\r\n        ty = 6;\r\n    }else if(data.ty == 'sr'){\r\n        ty = 7;\r\n    }\r\n    elementData.sh = ShapePropertyFactory.getShapeProp(this,data,ty,dynamicProperties);\r\n    elementData.lvl = level;\r\n    this.shapes.push(elementData.sh);\r\n    this.addShapeToModifiers(elementData);\r\n    return elementData;\r\n}\r\n\r\nvar cont = 0;\r\n\r\nIShapeElement.prototype.setElementStyles = function(){\r\n    var j, jLen = this.stylesList.length;\r\n    var arr = [];\r\n    for(j=0;j<jLen;j+=1){\r\n        if(!this.stylesList[j].closed){\r\n            arr.push(this.stylesList[j]);\r\n        }\r\n    }\r\n    return arr;\r\n}\r\n\r\nIShapeElement.prototype.reloadShapes = function(){\r\n    this.firstFrame = true;\r\n    var i, len = this.itemsData.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.prevViewData[i] = this.itemsData[i];\r\n    }\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement,this.dynamicProperties, 0, [], true);\r\n    var i, len = this.dynamicProperties.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.dynamicProperties[i].getValue();\r\n    }\r\n    this.renderModifiers();\r\n}\r\n\r\nIShapeElement.prototype.searchShapes = function(arr,itemsData,prevViewData,container,dynamicProperties, level, transformers, render){\r\n    var ownTransformers = [].concat(transformers);\r\n    var i, len = arr.length - 1;\r\n    var j, jLen;\r\n    var ownStyles = [], ownModifiers = [], styleOb, currentTransform, modifier, processedPos;\r\n    for(i=len;i>=0;i-=1){\r\n        processedPos = this.searchProcessedElement(arr[i]);\r\n        if(!processedPos){\r\n            arr[i]._render = render;\r\n        } else {\r\n            itemsData[i] = prevViewData[processedPos - 1];\r\n        }\r\n        if(arr[i].ty == 'fl' || arr[i].ty == 'st' || arr[i].ty == 'gf' || arr[i].ty == 'gs'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createStyleElement(arr[i], level, dynamicProperties);\r\n            } else {\r\n                itemsData[i].style.closed = false;\r\n            }\r\n            if(arr[i]._render){\r\n                container.appendChild(itemsData[i].elem);\r\n            }\r\n            ownStyles.push(itemsData[i].style);\r\n        }else if(arr[i].ty == 'gr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createGroupElement(arr[i]);\r\n            } else {\r\n                jLen = itemsData[i].it.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    itemsData[i].prevViewData[j] = itemsData[i].it[j];\r\n                }\r\n            }\r\n            this.searchShapes(arr[i].it,itemsData[i].it,itemsData[i].prevViewData,itemsData[i].gr,dynamicProperties, level + 1, ownTransformers, render);\r\n            if(arr[i]._render){\r\n                container.appendChild(itemsData[i].gr);\r\n            }\r\n        }else if(arr[i].ty == 'tr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createTransformElement(arr[i], dynamicProperties);\r\n            }\r\n            currentTransform = itemsData[i].transform;\r\n            ownTransformers.push(currentTransform);\r\n        }else if(arr[i].ty == 'sh' || arr[i].ty == 'rc' || arr[i].ty == 'el' || arr[i].ty == 'sr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createShapeElement(arr[i], ownTransformers, level, dynamicProperties);\r\n            }\r\n            itemsData[i].elements = this.setElementStyles();\r\n\r\n        }else if(arr[i].ty == 'tm' || arr[i].ty == 'rd' || arr[i].ty == 'ms'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                modifier.init(this,arr[i],dynamicProperties);\r\n                itemsData[i] = modifier;\r\n                this.shapeModifiers.push(modifier);\r\n            } else {\r\n                modifier = itemsData[i];\r\n                modifier.closed = false;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        }else if(arr[i].ty == 'rp'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                itemsData[i] = modifier;\r\n                modifier.init(this,arr,i,itemsData,dynamicProperties);\r\n                this.shapeModifiers.push(modifier);\r\n                render = false;\r\n            }else{\r\n                modifier = itemsData[i];\r\n                modifier.closed = true;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        }\r\n        this.addProcessedElement(arr[i], i + 1);\r\n    }\r\n    len = ownStyles.length;\r\n    for(i=0;i<len;i+=1){\r\n        ownStyles[i].closed = true;\r\n    }\r\n    len = ownModifiers.length;\r\n    for(i=0;i<len;i+=1){\r\n        ownModifiers[i].closed = true;\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.addShapeToModifiers = function(data) {\r\n    var i, len = this.shapeModifiers.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.shapeModifiers[i].addShape(data);\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.renderModifiers = function() {\r\n    if(!this.shapeModifiers.length){\r\n        return;\r\n    }\r\n    var i, len = this.shapes.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.shapes[i].reset();\r\n    }\r\n\r\n\r\n    len = this.shapeModifiers.length;\r\n\r\n    for(i=len-1;i>=0;i-=1){\r\n        this.shapeModifiers[i].processShapes(this.firstFrame);\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.renderFrame = function(parentMatrix){\r\n    //this.reloadShapes();\r\n    var renderParent = this._parent.renderFrame.call(this,parentMatrix);\r\n    if(renderParent===false){\r\n        this.hide();\r\n        return;\r\n    }\r\n    if(this.hidden){\r\n        this.layerElement.style.display = 'block';\r\n        this.hidden = false;\r\n    }\r\n    this.renderModifiers();\r\n    var i, len = this.stylesList.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.stylesList[i].d = '';\r\n        this.stylesList[i].mdf = false;\r\n    }\r\n    this.renderShape(this.shapesData,this.itemsData, null);\r\n\r\n    for (i = 0; i < len; i += 1) {\r\n        if (this.stylesList[i].ld === '0') {\r\n            this.stylesList[i].ld = '1';\r\n            this.stylesList[i].pElem.style.display = 'block';\r\n            //this.stylesList[i].parent.appendChild(this.stylesList[i].pElem);\r\n        }\r\n        if (this.stylesList[i].mdf || this.firstFrame) {\r\n            this.stylesList[i].pElem.setAttribute('d', this.stylesList[i].d);\r\n            if(this.stylesList[i].msElem){\r\n                this.stylesList[i].msElem.setAttribute('d', this.stylesList[i].d);\r\n            }\r\n        }\r\n    }\r\n    if (this.firstFrame) {\r\n        this.firstFrame = false;\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.hide = function(){\r\n    if(!this.hidden){\r\n        this.layerElement.style.display = 'none';\r\n        var i, len = this.stylesList.length;\r\n        for(i=len-1;i>=0;i-=1){\r\n            if(this.stylesList[i].ld !== '0'){\r\n                this.stylesList[i].ld = '0';\r\n                this.stylesList[i].pElem.style.display = 'none';\r\n                if(this.stylesList[i].pElem.parentNode){\r\n                    this.stylesList[i].parent = this.stylesList[i].pElem.parentNode;\r\n                    //this.stylesList[i].pElem.parentNode.removeChild(this.stylesList[i].pElem);\r\n                }\r\n            }\r\n        }\r\n        this.hidden = true;\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.renderShape = function(items,data, container){\r\n    var i, len = items.length - 1;\r\n    var ty;\r\n    for(i=len;i>=0;i-=1){\r\n        ty = items[i].ty;\r\n        if(ty == 'tr'){\r\n            if(this.firstFrame || data[i].transform.op.mdf && container){\r\n                container.setAttribute('opacity',data[i].transform.op.v);\r\n            }\r\n            if(this.firstFrame || data[i].transform.mProps.mdf && container){\r\n                container.setAttribute('transform',data[i].transform.mProps.v.to2dCSS());\r\n            }\r\n        }else if(ty == 'sh' || ty == 'el' || ty == 'rc' || ty == 'sr'){\r\n            this.renderPath(items[i],data[i]);\r\n        }else if(ty == 'fl'){\r\n            this.renderFill(items[i],data[i]);\r\n        }else if(ty == 'gf'){\r\n            this.renderGradient(items[i],data[i]);\r\n        }else if(ty == 'gs'){\r\n            this.renderGradient(items[i],data[i]);\r\n            this.renderStroke(items[i],data[i]);\r\n        }else if(ty == 'st'){\r\n            this.renderStroke(items[i],data[i]);\r\n        }else if(ty == 'gr'){\r\n            this.renderShape(items[i].it,data[i].it, data[i].gr);\r\n        }else if(ty == 'tm'){\r\n            //\r\n        }\r\n    }\r\n\r\n};\r\n\r\nIShapeElement.prototype.buildShapeString = function(pathNodes, length, closed, mat) {\r\n    var i, shapeString = '';\r\n    for(i = 1; i < length; i += 1) {\r\n        if (i === 1) {\r\n            shapeString += \" M\" + mat.applyToPointStringified(pathNodes.v[0][0], pathNodes.v[0][1]);\r\n        }\r\n        shapeString += \" C\" + mat.applyToPointStringified(pathNodes.o[i - 1][0], pathNodes.o[i - 1][1]) + \" \" + mat.applyToPointStringified(pathNodes.i[i][0], pathNodes.i[i][1]) + \" \" + mat.applyToPointStringified(pathNodes.v[i][0], pathNodes.v[i][1]);\r\n    }\r\n    if (length === 1) {\r\n        shapeString += \" M\" + mat.applyToPointStringified(pathNodes.v[0][0], pathNodes.v[0][1]);\r\n    }\r\n    if (closed && length) {\r\n        shapeString += \" C\" + mat.applyToPointStringified(pathNodes.o[i - 1][0], pathNodes.o[i - 1][1]) + \" \" + mat.applyToPointStringified(pathNodes.i[0][0], pathNodes.i[0][1]) + \" \" + mat.applyToPointStringified(pathNodes.v[0][0], pathNodes.v[0][1]);\r\n        shapeString += 'z';\r\n    }\r\n    return shapeString;\r\n};\r\n\r\nIShapeElement.prototype.renderPath = function(pathData,itemData){\r\n    var len, i, j, jLen,pathStringTransformed,redraw,pathNodes,l, lLen = itemData.elements.length;\r\n    var lvl = itemData.lvl;\r\n    if(!pathData._render){\r\n        return;\r\n    }\r\n    for(l=0;l<lLen;l+=1){\r\n        if(itemData.elements[l].data._render){\r\n            redraw = itemData.sh.mdf || this.firstFrame;\r\n            pathStringTransformed = 'M0 0';\r\n            var paths = itemData.sh.paths;\r\n            jLen = paths._length;\r\n            if(itemData.elements[l].lvl < lvl){\r\n                var mat = this.mHelper.reset(), props;\r\n                var iterations = lvl - itemData.elements[l].lvl;\r\n                var k = itemData.transformers.length-1;\r\n                while(iterations > 0) {\r\n                    redraw = itemData.transformers[k].mProps.mdf || redraw;\r\n                    props = itemData.transformers[k].mProps.v.props;\r\n                    mat.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\r\n                    iterations --;\r\n                    k --;\r\n                }\r\n                if(redraw){\r\n                    for(j=0;j<jLen;j+=1){\r\n                        pathNodes = paths.shapes[j];\r\n                        if(pathNodes && pathNodes._length){\r\n                            pathStringTransformed += this.buildShapeString(pathNodes, pathNodes._length, pathNodes.c, mat);\r\n                        }\r\n                    }\r\n                    itemData.caches[l] = pathStringTransformed;\r\n                } else {\r\n                    pathStringTransformed = itemData.caches[l];\r\n                }\r\n            } else {\r\n                if(redraw){\r\n                    for(j=0;j<jLen;j+=1){\r\n                        pathNodes = paths.shapes[j];\r\n                        if(pathNodes && pathNodes._length){\r\n                            pathStringTransformed += this.buildShapeString(pathNodes, pathNodes._length, pathNodes.c, this.identityMatrix);\r\n                        }\r\n                    }\r\n                    itemData.caches[l] = pathStringTransformed;\r\n                } else {\r\n                    pathStringTransformed = itemData.caches[l];\r\n                }\r\n            }\r\n            itemData.elements[l].d += pathStringTransformed;\r\n            itemData.elements[l].mdf = redraw || itemData.elements[l].mdf;\r\n        } else {\r\n            itemData.elements[l].mdf = true;\r\n        }\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.renderFill = function(styleData,itemData){\r\n    var styleElem = itemData.style;\r\n\r\n    if(itemData.c.mdf || this.firstFrame){\r\n        styleElem.pElem.setAttribute('fill','rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')');\r\n        ////styleElem.pElem.style.fill = 'rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')';\r\n    }\r\n    if(itemData.o.mdf || this.firstFrame){\r\n        styleElem.pElem.setAttribute('fill-opacity',itemData.o.v);\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.renderGradient = function(styleData,itemData){\r\n    var gfill = itemData.gf;\r\n    var opFill = itemData.of;\r\n    var pt1 = itemData.s.v,pt2 = itemData.e.v;\r\n\r\n    if(itemData.o.mdf || this.firstFrame){\r\n        var attr = styleData.ty === 'gf' ? 'fill-opacity':'stroke-opacity';\r\n        itemData.elem.setAttribute(attr,itemData.o.v);\r\n    }\r\n    //clippedElement.setAttribute('transform','matrix(1,0,0,1,-100,0)');\r\n    if(itemData.s.mdf || this.firstFrame){\r\n        var attr1 = styleData.t === 1 ? 'x1':'cx';\r\n        var attr2 = attr1 === 'x1' ? 'y1':'cy';\r\n        gfill.setAttribute(attr1,pt1[0]);\r\n        gfill.setAttribute(attr2,pt1[1]);\r\n        if(opFill){\r\n            opFill.setAttribute(attr1,pt1[0]);\r\n            opFill.setAttribute(attr2,pt1[1]);\r\n        }\r\n    }\r\n    var stops, i, len, stop;\r\n    if(itemData.g.cmdf || this.firstFrame){\r\n        stops = itemData.cst;\r\n        var cValues = itemData.g.c;\r\n        len = stops.length;\r\n        for(i=0;i<len;i+=1){\r\n            stop = stops[i];\r\n            stop.setAttribute('offset',cValues[i*4]+'%');\r\n            stop.setAttribute('stop-color','rgb('+cValues[i*4+1]+','+cValues[i*4+2]+','+cValues[i*4+3]+')');\r\n        }\r\n    }\r\n    if(opFill && (itemData.g.omdf || this.firstFrame)){\r\n        stops = itemData.ost;\r\n        var oValues = itemData.g.o;\r\n        len = stops.length;\r\n        for(i=0;i<len;i+=1){\r\n            stop = stops[i];\r\n            stop.setAttribute('offset',oValues[i*2]+'%');\r\n            stop.setAttribute('stop-opacity',oValues[i*2+1]);\r\n        }\r\n    }\r\n    if(styleData.t === 1){\r\n        if(itemData.e.mdf  || this.firstFrame){\r\n            gfill.setAttribute('x2',pt2[0]);\r\n            gfill.setAttribute('y2',pt2[1]);\r\n            if(opFill){\r\n                opFill.setAttribute('x2',pt2[0]);\r\n                opFill.setAttribute('y2',pt2[1]);\r\n            }\r\n        }\r\n    } else {\r\n        var rad;\r\n        if(itemData.s.mdf || itemData.e.mdf || this.firstFrame){\r\n            rad = Math.sqrt(Math.pow(pt1[0]-pt2[0],2)+Math.pow(pt1[1]-pt2[1],2));\r\n            gfill.setAttribute('r',rad);\r\n            if(opFill){\r\n                opFill.setAttribute('r',rad);\r\n            }\r\n        }\r\n        if(itemData.e.mdf || itemData.h.mdf || itemData.a.mdf || this.firstFrame){\r\n            if(!rad){\r\n                rad = Math.sqrt(Math.pow(pt1[0]-pt2[0],2)+Math.pow(pt1[1]-pt2[1],2));\r\n            }\r\n            var ang = Math.atan2(pt2[1]-pt1[1], pt2[0]-pt1[0]);\r\n\r\n            var percent = itemData.h.v >= 1 ? 0.99 : itemData.h.v <= -1 ? -0.99:itemData.h.v;\r\n            var dist = rad*percent;\r\n            var x = Math.cos(ang + itemData.a.v)*dist + pt1[0];\r\n            var y = Math.sin(ang + itemData.a.v)*dist + pt1[1];\r\n            gfill.setAttribute('fx',x);\r\n            gfill.setAttribute('fy',y);\r\n            if(opFill){\r\n                opFill.setAttribute('fx',x);\r\n                opFill.setAttribute('fy',y);\r\n            }\r\n        }\r\n        //gfill.setAttribute('fy','200');\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.renderStroke = function(styleData,itemData){\r\n    var styleElem = itemData.style;\r\n    //TODO fix dashes\r\n    var d = itemData.d;\r\n    var dasharray,dashoffset;\r\n    if(d && d.k && (d.mdf || this.firstFrame)){\r\n        styleElem.pElem.setAttribute('stroke-dasharray', d.dasharray);\r\n        ////styleElem.pElem.style.strokeDasharray = d.dasharray;\r\n        styleElem.pElem.setAttribute('stroke-dashoffset', d.dashoffset);\r\n        ////styleElem.pElem.style.strokeDashoffset = d.dashoffset;\r\n    }\r\n    if(itemData.c && (itemData.c.mdf || this.firstFrame)){\r\n        styleElem.pElem.setAttribute('stroke','rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')');\r\n        ////styleElem.pElem.style.stroke = 'rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')';\r\n    }\r\n    if(itemData.o.mdf || this.firstFrame){\r\n        styleElem.pElem.setAttribute('stroke-opacity',itemData.o.v);\r\n    }\r\n    if(itemData.w.mdf || this.firstFrame){\r\n        styleElem.pElem.setAttribute('stroke-width',itemData.w.v);\r\n        if(styleElem.msElem){\r\n            styleElem.msElem.setAttribute('stroke-width',itemData.w.v);\r\n        }\r\n        ////styleElem.pElem.style.strokeWidth = itemData.w.v;\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.destroy = function(){\r\n    this._parent.destroy.call(this._parent);\r\n    this.shapeData = null;\r\n    this.itemsData = null;\r\n    this.parentContainer = null;\r\n    this.placeholder = null;\r\n};\r\n\nfunction ITextElement(data, animationItem,parentContainer,globalData){\r\n}\r\nITextElement.prototype.init = function(){\r\n    this.lettersChangedFlag = true;\r\n    this.dynamicProperties = this.dynamicProperties || [];\r\n    this.textAnimator = new TextAnimatorProperty(this.data.t, this.renderType, this);\r\n    this.textProperty = new TextProperty(this, this.data.t, this.dynamicProperties);\r\n    this._parent.init.call(this);\r\n    this.textAnimator.searchProperties(this.dynamicProperties);\r\n};\r\n\r\nITextElement.prototype.prepareFrame = function(num) {\r\n    this._parent.prepareFrame.call(this, num);\r\n    if(this.textProperty.mdf || this.textProperty.firstFrame) {\r\n        this.buildNewText();\r\n        this.textProperty.firstFrame = false;\r\n    }\r\n}\r\n\r\nITextElement.prototype.createPathShape = function(matrixHelper, shapes) {\r\n    var j,jLen = shapes.length;\r\n    var k, kLen, pathNodes;\r\n    var shapeStr = '';\r\n    for(j=0;j<jLen;j+=1){\r\n        pathNodes = shapes[j].ks.k;\r\n        shapeStr += this.buildShapeString(pathNodes, pathNodes.i.length, true, matrixHelper);\r\n    }\r\n    return shapeStr;\r\n};\r\n\r\nITextElement.prototype.updateDocumentData = function(newData, index) {\r\n    this.textProperty.updateDocumentData(newData, index);\r\n}\r\n\r\nITextElement.prototype.applyTextPropertiesToMatrix = function(documentData, matrixHelper, lineNumber, xPos, yPos) {\r\n    if(documentData.ps){\r\n        matrixHelper.translate(documentData.ps[0],documentData.ps[1] + documentData.ascent,0);\r\n    }\r\n    matrixHelper.translate(0,-documentData.ls,0);\r\n    switch(documentData.j){\r\n        case 1:\r\n            matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]),0,0);\r\n            break;\r\n        case 2:\r\n            matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber] )/2,0,0);\r\n            break;\r\n    }\r\n    matrixHelper.translate(xPos, yPos, 0);\r\n}\r\n\r\nITextElement.prototype.buildColor = function(colorData) {\r\n    return 'rgb(' + Math.round(colorData[0]*255) + ',' + Math.round(colorData[1]*255) + ',' + Math.round(colorData[2]*255) + ')';\r\n}\r\n\r\nITextElement.prototype.buildShapeString = IShapeElement.prototype.buildShapeString;\r\n\r\nITextElement.prototype.emptyProp = new LetterProps();\r\n\r\nITextElement.prototype.destroy = function(){\r\n    this._parent.destroy.call(this._parent);\r\n};\nfunction SVGTextElement(data,parentContainer,globalData,comp, placeholder){\r\n    this.textSpans = [];\r\n    this.renderType = 'svg';\r\n    this._parent.constructor.call(this,data,parentContainer,globalData,comp, placeholder);\r\n}\r\ncreateElement(SVGBaseElement, SVGTextElement);\r\n\r\nextendPrototype(ITextElement, SVGTextElement);\r\n\r\nSVGTextElement.prototype.createElements = function(){\r\n\r\n    this._parent.createElements.call(this);\r\n\r\n\r\n    if(this.data.ln){\r\n        this.layerElement.setAttribute('id',this.data.ln);\r\n    }\r\n    if(this.data.cl){\r\n        this.layerElement.setAttribute('class',this.data.cl);\r\n    }\r\n    if (this.data.singleShape && !this.globalData.fontManager.chars) {\r\n        this.textContainer = document.createElementNS(svgNS,'text');\r\n    }\r\n};\r\n\r\nSVGTextElement.prototype.buildNewText = function(){\r\n    var i, len;\r\n\r\n    var documentData = this.textProperty.currentData;\r\n    this.renderedLetters = Array.apply(null,{length:documentData ? documentData.l.length : 0});\r\n    if(documentData.fc) {\r\n        this.layerElement.setAttribute('fill', this.buildColor(documentData.fc));\r\n    }else{\r\n        this.layerElement.setAttribute('fill', 'rgba(0,0,0,0)');\r\n    }\r\n    if(documentData.sc){\r\n        this.layerElement.setAttribute('stroke', this.buildColor(documentData.sc));\r\n        this.layerElement.setAttribute('stroke-width', documentData.sw);\r\n    }\r\n    this.layerElement.setAttribute('font-size', documentData.s);\r\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\r\n    if(fontData.fClass){\r\n        this.layerElement.setAttribute('class',fontData.fClass);\r\n    } else {\r\n        this.layerElement.setAttribute('font-family', fontData.fFamily);\r\n        var fWeight = documentData.fWeight, fStyle = documentData.fStyle;\r\n        this.layerElement.setAttribute('font-style', fStyle);\r\n        this.layerElement.setAttribute('font-weight', fWeight);\r\n    }\r\n\r\n    var letters = documentData.l || [];\r\n    var usesGlyphs = this.globalData.fontManager.chars;\r\n    len = letters.length;\r\n    if(!len){\r\n        return;\r\n    }\r\n    var tSpan;\r\n    var matrixHelper = this.mHelper;\r\n    var shapes, shapeStr = '', singleShape = this.data.singleShape;\r\n    var xPos = 0, yPos = 0, firstLine = true;\r\n    var trackingOffset = documentData.tr/1000*documentData.s;\r\n    if(singleShape && !usesGlyphs) {\r\n        var tElement = this.textContainer;\r\n        var justify = '';\r\n        switch(documentData.j) {\r\n            case 1:\r\n                justify = 'end';\r\n                break;\r\n            case 2:\r\n                justify = 'middle';\r\n                break;\r\n            case 2:\r\n                justify = 'start';\r\n                break;\r\n        }\r\n        tElement.setAttribute('text-anchor',justify);\r\n        tElement.setAttribute('letter-spacing',trackingOffset);\r\n        var textContent = documentData.t.split(String.fromCharCode(13));\r\n        len = textContent.length;\r\n        var yPos = documentData.ps ? documentData.ps[1] + documentData.ascent : 0;\r\n        for ( i = 0; i < len; i += 1) {\r\n            tSpan = this.textSpans[i] || document.createElementNS(svgNS,'tspan');\r\n            tSpan.textContent = textContent[i];\r\n            tSpan.setAttribute('x', 0);\r\n            tSpan.setAttribute('y', yPos);\r\n            tSpan.style.display = 'inherit';\r\n            tElement.appendChild(tSpan);\r\n            this.textSpans[i] = tSpan;\r\n            yPos += documentData.lh;\r\n        }\r\n        \r\n        this.layerElement.appendChild(tElement);\r\n    } else {\r\n        var cachedSpansLength = this.textSpans.length;\r\n        var shapeData, charData;\r\n        for (i = 0; i < len; i += 1) {\r\n            if(!usesGlyphs || !singleShape || i === 0){\r\n                tSpan = cachedSpansLength > i ? this.textSpans[i] : document.createElementNS(svgNS,usesGlyphs?'path':'text');\r\n                if (cachedSpansLength <= i) {\r\n                    tSpan.setAttribute('stroke-linecap', 'butt');\r\n                    tSpan.setAttribute('stroke-linejoin','round');\r\n                    tSpan.setAttribute('stroke-miterlimit','4');\r\n                    this.textSpans[i] = tSpan;\r\n                    this.layerElement.appendChild(tSpan);\r\n                }\r\n                tSpan.style.display = 'inherit';\r\n            }\r\n            \r\n            matrixHelper.reset();\r\n            if(usesGlyphs) {\r\n                matrixHelper.scale(documentData.s / 100, documentData.s / 100);\r\n                if (singleShape) {\r\n                    if(letters[i].n) {\r\n                        xPos = -trackingOffset;\r\n                        yPos += documentData.yOffset;\r\n                        yPos += firstLine ? 1 : 0;\r\n                        firstLine = false;\r\n                    }\r\n                    this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\r\n                    xPos += letters[i].l || 0;\r\n                    //xPos += letters[i].val === ' ' ? 0 : trackingOffset;\r\n                    xPos += trackingOffset;\r\n                }\r\n                charData = this.globalData.fontManager.getCharData(documentData.t.charAt(i), fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\r\n                shapeData = charData && charData.data || {};\r\n                shapes = shapeData.shapes ? shapeData.shapes[0].it : [];\r\n                if(!singleShape){\r\n                    tSpan.setAttribute('d',this.createPathShape(matrixHelper,shapes));\r\n                } else {\r\n                    shapeStr += this.createPathShape(matrixHelper,shapes);\r\n                }\r\n            } else {\r\n                tSpan.textContent = letters[i].val;\r\n                tSpan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\",\"preserve\");\r\n            }\r\n            //\r\n        }\r\n        if (singleShape) {\r\n            tSpan.setAttribute('d',shapeStr);\r\n        }\r\n    }\r\n    while (i < this.textSpans.length){\r\n        this.textSpans[i].style.display = 'none';\r\n        i += 1;\r\n    }\r\n    \r\n    this._sizeChanged = true;\r\n}\r\n\r\nSVGTextElement.prototype.sourceRectAtTime = function(time){\r\n    this.prepareFrame(this.comp.renderedFrame - this.data.st);\r\n    this.renderLetters();\r\n    if(this._sizeChanged){\r\n        this._sizeChanged = false;\r\n        var textBox = this.layerElement.getBBox();\r\n        this.bbox = {\r\n            top: textBox.y,\r\n            left: textBox.x,\r\n            width: textBox.width,\r\n            height: textBox.height\r\n        }\r\n    }\r\n    return this.bbox;\r\n}\r\n\r\nSVGTextElement.prototype.renderLetters = function(){\r\n\r\n    if(!this.data.singleShape){\r\n        this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\r\n        if(this.lettersChangedFlag || this.textAnimator.lettersChangedFlag){\r\n            this._sizeChanged = true;\r\n            var  i,len;\r\n            var renderedLetters = this.textAnimator.renderedLetters;\r\n\r\n            var letters = this.textProperty.currentData.l;\r\n\r\n            len = letters.length;\r\n            var renderedLetter, textSpan;\r\n            for(i=0;i<len;i+=1){\r\n                if(letters[i].n){\r\n                    continue;\r\n                }\r\n                renderedLetter = renderedLetters[i];\r\n                textSpan = this.textSpans[i];\r\n                if(renderedLetter.mdf.m) {\r\n                    textSpan.setAttribute('transform',renderedLetter.m);\r\n                }\r\n                if(renderedLetter.mdf.o) {\r\n                    textSpan.setAttribute('opacity',renderedLetter.o);\r\n                }\r\n                if(renderedLetter.mdf.sw){\r\n                    textSpan.setAttribute('stroke-width',renderedLetter.sw);\r\n                }\r\n                if(renderedLetter.mdf.sc){\r\n                    textSpan.setAttribute('stroke',renderedLetter.sc);\r\n                }\r\n                if(renderedLetter.mdf.fc){\r\n                    textSpan.setAttribute('fill',renderedLetter.fc);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nSVGTextElement.prototype.renderFrame = function(parentMatrix){\r\n\r\n    var renderParent = this._parent.renderFrame.call(this,parentMatrix);\r\n    if(renderParent===false){\r\n        this.hide();\r\n        return;\r\n    }\r\n    if(this.hidden){\r\n        this.show();\r\n    }\r\n    if(this.firstFrame) {\r\n        this.firstFrame = false;\r\n    }\r\n    this.renderLetters();\r\n}\nfunction SVGTintFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = document.createElementNS(svgNS,'feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','linearRGB');\r\n    feColorMatrix.setAttribute('values','0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f1');\r\n    filter.appendChild(feColorMatrix);\r\n    feColorMatrix = document.createElementNS(svgNS,'feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n    feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f2');\r\n    filter.appendChild(feColorMatrix);\r\n    this.matrixFilter = feColorMatrix;\r\n    if(filterManager.effectElements[2].p.v !== 100 || filterManager.effectElements[2].p.k){\r\n        var feMerge = document.createElementNS(svgNS,'feMerge');\r\n        filter.appendChild(feMerge);\r\n        var feMergeNode;\r\n        feMergeNode = document.createElementNS(svgNS,'feMergeNode');\r\n        feMergeNode.setAttribute('in','SourceGraphic');\r\n        feMerge.appendChild(feMergeNode);\r\n        feMergeNode = document.createElementNS(svgNS,'feMergeNode');\r\n        feMergeNode.setAttribute('in','f2');\r\n        feMerge.appendChild(feMergeNode);\r\n    }\r\n}\r\n\r\nSVGTintFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager.mdf){\r\n        var colorBlack = this.filterManager.effectElements[0].p.v;\r\n        var colorWhite = this.filterManager.effectElements[1].p.v;\r\n        var opacity = this.filterManager.effectElements[2].p.v/100;\r\n        this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');\r\n    }\r\n};\nfunction SVGFillFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = document.createElementNS(svgNS,'feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n    feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\r\n    filter.appendChild(feColorMatrix);\r\n    this.matrixFilter = feColorMatrix;\r\n}\r\nSVGFillFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager.mdf){\r\n        var color = this.filterManager.effectElements[2].p.v;\r\n        var opacity = this.filterManager.effectElements[6].p.v;\r\n        this.matrixFilter.setAttribute('values','0 0 0 0 '+color[0]+' 0 0 0 0 '+color[1]+' 0 0 0 0 '+color[2]+' 0 0 0 '+opacity+' 0');\r\n    }\r\n};\nfunction SVGStrokeEffect(elem, filterManager){\r\n    this.initialized = false;\r\n    this.filterManager = filterManager;\r\n    this.elem = elem;\r\n    this.paths = [];\r\n}\r\n\r\nSVGStrokeEffect.prototype.initialize = function(){\r\n\r\n    var elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\r\n    var path,groupPath, i, len;\r\n    if(this.filterManager.effectElements[1].p.v === 1){\r\n        len = this.elem.maskManager.masksProperties.length;\r\n        i = 0;\r\n    } else {\r\n        i = this.filterManager.effectElements[0].p.v - 1;\r\n        len = i + 1;\r\n    }\r\n    groupPath = document.createElementNS(svgNS,'g'); \r\n    groupPath.setAttribute('fill','none');\r\n    groupPath.setAttribute('stroke-linecap','round');\r\n    groupPath.setAttribute('stroke-dashoffset',1);\r\n    for(i;i<len;i+=1){\r\n        path = document.createElementNS(svgNS,'path');\r\n        groupPath.appendChild(path);\r\n        this.paths.push({p:path,m:i});\r\n    }\r\n    if(this.filterManager.effectElements[10].p.v === 3){\r\n        var mask = document.createElementNS(svgNS,'mask');\r\n        var id = 'stms_' + randomString(10);\r\n        mask.setAttribute('id',id);\r\n        mask.setAttribute('mask-type','alpha');\r\n        mask.appendChild(groupPath);\r\n        this.elem.globalData.defs.appendChild(mask);\r\n        var g = document.createElementNS(svgNS,'g');\r\n        g.setAttribute('mask','url(' + locationHref + '#'+id+')');\r\n        if(elemChildren[0]){\r\n            g.appendChild(elemChildren[0]);\r\n        }\r\n        this.elem.layerElement.appendChild(g);\r\n        this.masker = mask;\r\n        groupPath.setAttribute('stroke','#fff');\r\n    } else if(this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2){\r\n        if(this.filterManager.effectElements[10].p.v === 2){\r\n            var elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\r\n            while(elemChildren.length){\r\n                this.elem.layerElement.removeChild(elemChildren[0]);\r\n            }\r\n        }\r\n        this.elem.layerElement.appendChild(groupPath);\r\n        this.elem.layerElement.removeAttribute('mask');\r\n        groupPath.setAttribute('stroke','#fff');\r\n    }\r\n    this.initialized = true;\r\n    this.pathMasker = groupPath;\r\n}\r\n\r\nSVGStrokeEffect.prototype.renderFrame = function(forceRender){\r\n    if(!this.initialized){\r\n        this.initialize();\r\n    }\r\n    var i, len = this.paths.length;\r\n    var mask, path;\r\n    for(i=0;i<len;i+=1){\r\n        mask = this.elem.maskManager.viewData[this.paths[i].m];\r\n        path = this.paths[i].p;\r\n        if(forceRender || this.filterManager.mdf || mask.prop.mdf){\r\n            path.setAttribute('d',mask.lastPath);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[9].p.mdf || this.filterManager.effectElements[4].p.mdf || this.filterManager.effectElements[7].p.mdf || this.filterManager.effectElements[8].p.mdf || mask.prop.mdf){\r\n            var dasharrayValue;\r\n            if(this.filterManager.effectElements[7].p.v !== 0 || this.filterManager.effectElements[8].p.v !== 100){\r\n                var s = Math.min(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)/100;\r\n                var e = Math.max(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)/100;\r\n                var l = path.getTotalLength();\r\n                dasharrayValue = '0 0 0 ' + l*s + ' ';\r\n                var lineLength = l*(e-s);\r\n                var segment = 1+this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100;\r\n                var units = Math.floor(lineLength/segment);\r\n                var j;\r\n                for(j=0;j<units;j+=1){\r\n                    dasharrayValue += '1 ' + this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100 + ' ';\r\n                }\r\n                dasharrayValue += '0 ' + l*10 + ' 0 0';\r\n            } else {\r\n                dasharrayValue = '1 ' + this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100;\r\n            }\r\n            path.setAttribute('stroke-dasharray',dasharrayValue);\r\n        }\r\n    }\r\n    if(forceRender || this.filterManager.effectElements[4].p.mdf){\r\n        this.pathMasker.setAttribute('stroke-width',this.filterManager.effectElements[4].p.v*2);\r\n    }\r\n    \r\n    if(forceRender || this.filterManager.effectElements[6].p.mdf){\r\n        this.pathMasker.setAttribute('opacity',this.filterManager.effectElements[6].p.v);\r\n    }\r\n    if(this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2){\r\n        if(forceRender || this.filterManager.effectElements[3].p.mdf){\r\n            var color = this.filterManager.effectElements[3].p.v;\r\n            this.pathMasker.setAttribute('stroke','rgb('+bm_floor(color[0]*255)+','+bm_floor(color[1]*255)+','+bm_floor(color[2]*255)+')');\r\n        }\r\n    }\r\n};\nfunction SVGTritoneFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = document.createElementNS(svgNS,'feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','linearRGB');\r\n    feColorMatrix.setAttribute('values','0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f1');\r\n    filter.appendChild(feColorMatrix);\r\n    var feComponentTransfer = document.createElementNS(svgNS,'feComponentTransfer');\r\n    feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n    filter.appendChild(feComponentTransfer);\r\n    this.matrixFilter = feComponentTransfer;\r\n    var feFuncR = document.createElementNS(svgNS,'feFuncR');\r\n    feFuncR.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncR);\r\n    this.feFuncR = feFuncR;\r\n    var feFuncG = document.createElementNS(svgNS,'feFuncG');\r\n    feFuncG.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncG);\r\n    this.feFuncG = feFuncG;\r\n    var feFuncB = document.createElementNS(svgNS,'feFuncB');\r\n    feFuncB.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncB);\r\n    this.feFuncB = feFuncB;\r\n}\r\n\r\nSVGTritoneFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager.mdf){\r\n        var color1 = this.filterManager.effectElements[0].p.v;\r\n        var color2 = this.filterManager.effectElements[1].p.v;\r\n        var color3 = this.filterManager.effectElements[2].p.v;\r\n        var tableR = color3[0] + ' ' + color2[0] + ' ' + color1[0]\r\n        var tableG = color3[1] + ' ' + color2[1] + ' ' + color1[1]\r\n        var tableB = color3[2] + ' ' + color2[2] + ' ' + color1[2]\r\n        this.feFuncR.setAttribute('tableValues', tableR);\r\n        this.feFuncG.setAttribute('tableValues', tableG);\r\n        this.feFuncB.setAttribute('tableValues', tableB);\r\n        //var opacity = this.filterManager.effectElements[2].p.v/100;\r\n        //this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');\r\n    }\r\n};\nfunction SVGProLevelsFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var effectElements = this.filterManager.effectElements;\r\n    var feComponentTransfer = document.createElementNS(svgNS,'feComponentTransfer');\r\n    var feFuncR, feFuncG, feFuncB;\r\n    \r\n    if(effectElements[9].p.k || effectElements[9].p.v !== 0 || effectElements[10].p.k || effectElements[10].p.v !== 1 || effectElements[11].p.k || effectElements[11].p.v !== 1 || effectElements[12].p.k || effectElements[12].p.v !== 0 || effectElements[13].p.k || effectElements[13].p.v !== 1){\r\n        this.feFuncR = this.createFeFunc('feFuncR', feComponentTransfer);\r\n    }\r\n    if(effectElements[16].p.k || effectElements[16].p.v !== 0 || effectElements[17].p.k || effectElements[17].p.v !== 1 || effectElements[18].p.k || effectElements[18].p.v !== 1 || effectElements[19].p.k || effectElements[19].p.v !== 0 || effectElements[20].p.k || effectElements[20].p.v !== 1){\r\n        this.feFuncG = this.createFeFunc('feFuncG', feComponentTransfer);\r\n    }\r\n    if(effectElements[23].p.k || effectElements[23].p.v !== 0 || effectElements[24].p.k || effectElements[24].p.v !== 1 || effectElements[25].p.k || effectElements[25].p.v !== 1 || effectElements[26].p.k || effectElements[26].p.v !== 0 || effectElements[27].p.k || effectElements[27].p.v !== 1){\r\n        this.feFuncB = this.createFeFunc('feFuncB', feComponentTransfer);\r\n    }\r\n    if(effectElements[30].p.k || effectElements[30].p.v !== 0 || effectElements[31].p.k || effectElements[31].p.v !== 1 || effectElements[32].p.k || effectElements[32].p.v !== 1 || effectElements[33].p.k || effectElements[33].p.v !== 0 || effectElements[34].p.k || effectElements[34].p.v !== 1){\r\n        this.feFuncA = this.createFeFunc('feFuncA', feComponentTransfer);\r\n    }\r\n    \r\n    if(this.feFuncR || this.feFuncG || this.feFuncB || this.feFuncA){\r\n        feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n        filter.appendChild(feComponentTransfer);\r\n        feComponentTransfer = document.createElementNS(svgNS,'feComponentTransfer');\r\n    }\r\n\r\n    if(effectElements[2].p.k || effectElements[2].p.v !== 0 || effectElements[3].p.k || effectElements[3].p.v !== 1 || effectElements[4].p.k || effectElements[4].p.v !== 1 || effectElements[5].p.k || effectElements[5].p.v !== 0 || effectElements[6].p.k || effectElements[6].p.v !== 1){\r\n\r\n        feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n        filter.appendChild(feComponentTransfer);\r\n        this.feFuncRComposed = this.createFeFunc('feFuncR', feComponentTransfer);\r\n        this.feFuncGComposed = this.createFeFunc('feFuncG', feComponentTransfer);\r\n        this.feFuncBComposed = this.createFeFunc('feFuncB', feComponentTransfer);\r\n    }\r\n}\r\n\r\nSVGProLevelsFilter.prototype.createFeFunc = function(type, feComponentTransfer) {\r\n    var feFunc = document.createElementNS(svgNS,type);\r\n    feFunc.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFunc);\r\n    return feFunc;\r\n};\r\n\r\nSVGProLevelsFilter.prototype.getTableValue = function(inputBlack, inputWhite, gamma, outputBlack, outputWhite) {\r\n    var cnt = 0;\r\n    var segments = 256;\r\n    var perc;\r\n    var min = Math.min(inputBlack, inputWhite);\r\n    var max = Math.max(inputBlack, inputWhite);\r\n    var table = Array.call(null,{length:segments});\r\n    var colorValue;\r\n    var pos = 0;\r\n    var outputDelta = outputWhite - outputBlack; \r\n    var inputDelta = inputWhite - inputBlack; \r\n    while(cnt <= 256) {\r\n        perc = cnt/256;\r\n        if(perc <= min){\r\n            colorValue = inputDelta < 0 ? outputWhite : outputBlack;\r\n        } else if(perc >= max){\r\n            colorValue = inputDelta < 0 ? outputBlack : outputWhite;\r\n        } else {\r\n            colorValue = (outputBlack + outputDelta * Math.pow((perc - inputBlack) / inputDelta, 1 / gamma));\r\n        }\r\n        table[pos++] = colorValue;\r\n        cnt += 256/(segments-1);\r\n    }\r\n    return table.join(' ');\r\n};\r\n\r\nSVGProLevelsFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager.mdf){\r\n        var val, cnt, perc, bezier;\r\n        var effectElements = this.filterManager.effectElements;\r\n        if(this.feFuncRComposed && (forceRender || effectElements[2].p.mdf || effectElements[3].p.mdf || effectElements[4].p.mdf || effectElements[5].p.mdf || effectElements[6].p.mdf)){\r\n            val = this.getTableValue(effectElements[2].p.v,effectElements[3].p.v,effectElements[4].p.v,effectElements[5].p.v,effectElements[6].p.v);\r\n            this.feFuncRComposed.setAttribute('tableValues',val);\r\n            this.feFuncGComposed.setAttribute('tableValues',val);\r\n            this.feFuncBComposed.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncR && (forceRender || effectElements[9].p.mdf || effectElements[10].p.mdf || effectElements[11].p.mdf || effectElements[12].p.mdf || effectElements[13].p.mdf)){\r\n            val = this.getTableValue(effectElements[9].p.v,effectElements[10].p.v,effectElements[11].p.v,effectElements[12].p.v,effectElements[13].p.v);\r\n            this.feFuncR.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncG && (forceRender || effectElements[16].p.mdf || effectElements[17].p.mdf || effectElements[18].p.mdf || effectElements[19].p.mdf || effectElements[20].p.mdf)){\r\n            val = this.getTableValue(effectElements[16].p.v,effectElements[17].p.v,effectElements[18].p.v,effectElements[19].p.v,effectElements[20].p.v);\r\n            this.feFuncG.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncB && (forceRender || effectElements[23].p.mdf || effectElements[24].p.mdf || effectElements[25].p.mdf || effectElements[26].p.mdf || effectElements[27].p.mdf)){\r\n            val = this.getTableValue(effectElements[23].p.v,effectElements[24].p.v,effectElements[25].p.v,effectElements[26].p.v,effectElements[27].p.v);\r\n            this.feFuncB.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncA && (forceRender || effectElements[30].p.mdf || effectElements[31].p.mdf || effectElements[32].p.mdf || effectElements[33].p.mdf || effectElements[34].p.mdf)){\r\n            val = this.getTableValue(effectElements[30].p.v,effectElements[31].p.v,effectElements[32].p.v,effectElements[33].p.v,effectElements[34].p.v);\r\n            this.feFuncA.setAttribute('tableValues',val);\r\n        }\r\n        \r\n    }\r\n};\nfunction SVGDropShadowEffect(filter, filterManager){\r\n    /*<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"3\"/> <!-- stdDeviation is how much to blur -->\r\n  <feOffset dx=\"2\" dy=\"2\" result=\"offsetblur\"/> <!-- how much to offset -->\r\n  <feMerge> \r\n    <feMergeNode/> <!-- this contains the offset blurred image -->\r\n    <feMergeNode in=\"SourceGraphic\"/> <!-- this contains the element that the filter is applied to -->\r\n  </feMerge>*/\r\n  /*<feFlood flood-color=\"#3D4574\" flood-opacity=\"0.5\" result=\"offsetColor\"/>*/\r\n    filter.setAttribute('x','-100%');\r\n    filter.setAttribute('y','-100%');\r\n    filter.setAttribute('width','400%');\r\n    filter.setAttribute('height','400%');\r\n    this.filterManager = filterManager;\r\n\r\n    var feGaussianBlur = document.createElementNS(svgNS,'feGaussianBlur');\r\n    feGaussianBlur.setAttribute('in','SourceAlpha');\r\n    feGaussianBlur.setAttribute('result','drop_shadow_1');\r\n    feGaussianBlur.setAttribute('stdDeviation','0');\r\n    this.feGaussianBlur = feGaussianBlur;\r\n    filter.appendChild(feGaussianBlur);\r\n\r\n    var feOffset = document.createElementNS(svgNS,'feOffset');\r\n    feOffset.setAttribute('dx','25');\r\n    feOffset.setAttribute('dy','0');\r\n    feOffset.setAttribute('in','drop_shadow_1');\r\n    feOffset.setAttribute('result','drop_shadow_2');\r\n    this.feOffset = feOffset;\r\n    filter.appendChild(feOffset);\r\n    var feFlood = document.createElementNS(svgNS,'feFlood');\r\n    feFlood.setAttribute('flood-color','#00ff00');\r\n    feFlood.setAttribute('flood-opacity','1');\r\n    feFlood.setAttribute('result','drop_shadow_3');\r\n    this.feFlood = feFlood;\r\n    filter.appendChild(feFlood);\r\n\r\n    var feComposite = document.createElementNS(svgNS,'feComposite');\r\n    feComposite.setAttribute('in','drop_shadow_3');\r\n    feComposite.setAttribute('in2','drop_shadow_2');\r\n    feComposite.setAttribute('operator','in');\r\n    feComposite.setAttribute('result','drop_shadow_4');\r\n    filter.appendChild(feComposite);\r\n\r\n\r\n    var feMerge = document.createElementNS(svgNS,'feMerge');\r\n    filter.appendChild(feMerge);\r\n    var feMergeNode;\r\n    feMergeNode = document.createElementNS(svgNS,'feMergeNode');\r\n    feMerge.appendChild(feMergeNode);\r\n    feMergeNode = document.createElementNS(svgNS,'feMergeNode');\r\n    feMergeNode.setAttribute('in','SourceGraphic');\r\n    this.feMergeNode = feMergeNode;\r\n    this.feMerge = feMerge;\r\n    this.originalNodeAdded = false;\r\n    feMerge.appendChild(feMergeNode);\r\n}\r\n\r\nSVGDropShadowEffect.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager.mdf){\r\n        if(forceRender || this.filterManager.effectElements[4].p.mdf){\r\n            this.feGaussianBlur.setAttribute('stdDeviation', this.filterManager.effectElements[4].p.v / 4);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[0].p.mdf){\r\n            var col = this.filterManager.effectElements[0].p.v;\r\n            this.feFlood.setAttribute('flood-color',rgbToHex(Math.round(col[0]*255),Math.round(col[1]*255),Math.round(col[2]*255)));\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[1].p.mdf){\r\n            this.feFlood.setAttribute('flood-opacity',this.filterManager.effectElements[1].p.v/255);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[2].p.mdf || this.filterManager.effectElements[3].p.mdf){\r\n            var distance = this.filterManager.effectElements[3].p.v\r\n            var angle = (this.filterManager.effectElements[2].p.v - 90) * degToRads\r\n            var x = distance * Math.cos(angle)\r\n            var y = distance * Math.sin(angle)\r\n            this.feOffset.setAttribute('dx', x);\r\n            this.feOffset.setAttribute('dy', y);\r\n        }\r\n        /*if(forceRender || this.filterManager.effectElements[5].p.mdf){\r\n            if(this.filterManager.effectElements[5].p.v === 1 && this.originalNodeAdded) {\r\n                this.feMerge.removeChild(this.feMergeNode);\r\n                this.originalNodeAdded = false;\r\n            } else if(this.filterManager.effectElements[5].p.v === 0 && !this.originalNodeAdded) {\r\n                this.feMerge.appendChild(this.feMergeNode);\r\n                this.originalNodeAdded = true;\r\n            }\r\n        }*/\r\n    }\r\n};\nfunction SVGMatte3Effect(filterElem, filterManager, elem){\r\n    this.initialized = false;\r\n    this.filterManager = filterManager;\r\n    this.filterElem = filterElem;\r\n    this.elem = elem;\r\n    elem.matteElement = document.createElementNS(svgNS,'g');\r\n    elem.matteElement.appendChild(elem.layerElement);\r\n    elem.matteElement.appendChild(elem.transformedElement);\r\n    elem.baseElement = elem.matteElement;\r\n}\r\n\r\nSVGMatte3Effect.prototype.setElementAsMask = function(elem, mask) {\r\n    var masker = document.createElementNS(svgNS,'mask');\r\n    masker.setAttribute('id',mask.layerId);\r\n    masker.setAttribute('mask-type','alpha');\r\n    masker.appendChild(mask.layerElement);\r\n    elem.setMatte(mask.layerId);\r\n    mask.data.hd = false;\r\n    var defs = elem.globalData.defs;\r\n    defs.appendChild(masker);\r\n}\r\n\r\nSVGMatte3Effect.prototype.initialize = function() {\r\n    var ind = this.filterManager.effectElements[0].p.v;\r\n    var i = 0, len = this.elem.comp.elements.length;\r\n    while(i < len) {\r\n    \tif(this.elem.comp.elements[i].data.ind === ind) {\r\n    \t\tthis.setElementAsMask(this.elem, this.elem.comp.elements[i]);\r\n    \t}\r\n    \ti += 1;\r\n    }\r\n    this.initialized = true;\r\n}\r\n\r\nSVGMatte3Effect.prototype.renderFrame = function() {\r\n\tif(!this.initialized) {\r\n\t\tthis.initialize();\r\n\t}\r\n}\nfunction SVGEffects(elem){\r\n    var i, len = elem.data.ef.length;\r\n    var filId = randomString(10);\r\n    var fil = filtersFactory.createFilter(filId);\r\n    var count = 0;\r\n    this.filters = [];\r\n    var filterManager;\r\n    for(i=0;i<len;i+=1){\r\n        if(elem.data.ef[i].ty === 20){\r\n            count += 1;\r\n            filterManager = new SVGTintFilter(fil, elem.effects.effectElements[i]);\r\n            this.filters.push(filterManager);\r\n        }else if(elem.data.ef[i].ty === 21){\r\n            count += 1;\r\n            filterManager = new SVGFillFilter(fil, elem.effects.effectElements[i]);\r\n            this.filters.push(filterManager);\r\n        }else if(elem.data.ef[i].ty === 22){\r\n            filterManager = new SVGStrokeEffect(elem, elem.effects.effectElements[i]);\r\n            this.filters.push(filterManager);\r\n        }else if(elem.data.ef[i].ty === 23){\r\n            count += 1;\r\n            filterManager = new SVGTritoneFilter(fil, elem.effects.effectElements[i]);\r\n            this.filters.push(filterManager);\r\n        }else if(elem.data.ef[i].ty === 24){\r\n            count += 1;\r\n            filterManager = new SVGProLevelsFilter(fil, elem.effects.effectElements[i]);\r\n            this.filters.push(filterManager);\r\n        }else if(elem.data.ef[i].ty === 25){\r\n            count += 1;\r\n            filterManager = new SVGDropShadowEffect(fil, elem.effects.effectElements[i]);\r\n            this.filters.push(filterManager);\r\n        }else if(elem.data.ef[i].ty === 28){\r\n            //count += 1;\r\n            filterManager = new SVGMatte3Effect(fil, elem.effects.effectElements[i], elem);\r\n            this.filters.push(filterManager);\r\n        }\r\n    }\r\n    if(count){\r\n        elem.globalData.defs.appendChild(fil);\r\n        elem.layerElement.setAttribute('filter','url(' + locationHref + '#'+filId+')');\r\n    }\r\n}\r\n\r\nSVGEffects.prototype.renderFrame = function(firstFrame){\r\n    var i, len = this.filters.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.filters[i].renderFrame(firstFrame);\r\n    }\r\n};\nfunction ICompElement(data,parentContainer,globalData,comp, placeholder){\r\n    this._parent.constructor.call(this,data,parentContainer,globalData,comp, placeholder);\r\n    this.layers = data.layers;\r\n    this.supports3d = true;\r\n    this.completeLayers = false;\r\n    this.pendingElements = [];\r\n    this.elements = this.layers ? Array.apply(null,{length:this.layers.length}) : [];\r\n    if(this.data.tm){\r\n        this.tm = PropertyFactory.getProp(this,this.data.tm,0,globalData.frameRate,this.dynamicProperties);\r\n    }\r\n    if(this.data.xt){\r\n        this.layerElement = document.createElementNS(svgNS,'g');\r\n        this.buildAllItems();\r\n    } else if(!globalData.progressiveLoad){\r\n        this.buildAllItems();\r\n    }\r\n}\r\ncreateElement(SVGBaseElement, ICompElement);\r\n\r\nICompElement.prototype.hide = function(){\r\n    if(!this.hidden){\r\n        this._parent.hide.call(this);\r\n        var i,len = this.elements.length;\r\n        for( i = 0; i < len; i+=1 ){\r\n            if(this.elements[i]){\r\n                this.elements[i].hide();\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.prepareFrame = function(num){\r\n    this._parent.prepareFrame.call(this,num);\r\n    if(this.isVisible===false && !this.data.xt){\r\n        return;\r\n    }\r\n\r\n    if(this.tm){\r\n        var timeRemapped = this.tm.v;\r\n        if(timeRemapped === this.data.op){\r\n            timeRemapped = this.data.op - 1;\r\n        }\r\n        this.renderedFrame = timeRemapped;\r\n    } else {\r\n        this.renderedFrame = num/this.data.sr;\r\n    }\r\n    var i,len = this.elements.length;\r\n    if(!this.completeLayers){\r\n        this.checkLayers(this.renderedFrame);\r\n    }\r\n    for( i = 0; i < len; i+=1 ){\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].prepareFrame(this.renderedFrame - this.layers[i].st);\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.renderFrame = function(parentMatrix){\r\n    var renderParent = this._parent.renderFrame.call(this,parentMatrix);\r\n    var i,len = this.layers.length;\r\n    if(renderParent===false){\r\n        this.hide();\r\n        return;\r\n    }\r\n\r\n    if(this.hidden) {\r\n        this.show();\r\n    }\r\n    for( i = 0; i < len; i+=1 ){\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].renderFrame();\r\n        }\r\n    }\r\n    if(this.firstFrame){\r\n        this.firstFrame = false;\r\n    }\r\n};\r\n\r\nICompElement.prototype.setElements = function(elems){\r\n    this.elements = elems;\r\n};\r\n\r\nICompElement.prototype.getElements = function(){\r\n    return this.elements;\r\n};\r\n\r\nICompElement.prototype.destroy = function(){\r\n    this._parent.destroy.call(this._parent);\r\n    var i,len = this.layers.length;\r\n    for( i = 0; i < len; i+=1 ){\r\n        if(this.elements[i]){\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.checkLayers = SVGRenderer.prototype.checkLayers;\r\nICompElement.prototype.buildItem = SVGRenderer.prototype.buildItem;\r\nICompElement.prototype.buildAllItems = SVGRenderer.prototype.buildAllItems;\r\nICompElement.prototype.buildElementParenting = SVGRenderer.prototype.buildElementParenting;\r\nICompElement.prototype.createItem = SVGRenderer.prototype.createItem;\r\nICompElement.prototype.createImage = SVGRenderer.prototype.createImage;\r\nICompElement.prototype.createComp = SVGRenderer.prototype.createComp;\r\nICompElement.prototype.createSolid = SVGRenderer.prototype.createSolid;\r\nICompElement.prototype.createShape = SVGRenderer.prototype.createShape;\r\nICompElement.prototype.createText = SVGRenderer.prototype.createText;\r\nICompElement.prototype.createBase = SVGRenderer.prototype.createBase;\r\nICompElement.prototype.appendElementInPos = SVGRenderer.prototype.appendElementInPos;\r\nICompElement.prototype.checkPendingElements = SVGRenderer.prototype.checkPendingElements;\r\nICompElement.prototype.addPendingElement = SVGRenderer.prototype.addPendingElement;\nfunction IImageElement(data,parentContainer,globalData,comp,placeholder){\r\n    this.assetData = globalData.getAssetData(data.refId);\r\n    this._parent.constructor.call(this,data,parentContainer,globalData,comp,placeholder);\r\n}\r\ncreateElement(SVGBaseElement, IImageElement);\r\n\r\nIImageElement.prototype.createElements = function(){\r\n\r\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\r\n\r\n    this._parent.createElements.call(this);\r\n\r\n    this.innerElem = document.createElementNS(svgNS,'image');\r\n    this.innerElem.setAttribute('width',this.assetData.w+\"px\");\r\n    this.innerElem.setAttribute('height',this.assetData.h+\"px\");\r\n    this.innerElem.setAttribute('preserveAspectRatio','xMidYMid slice');\r\n    this.innerElem.setAttributeNS('http://www.w3.org/1999/xlink','href',assetPath);\r\n    this.maskedElement = this.innerElem;\r\n    this.layerElement.appendChild(this.innerElem);\r\n    if(this.data.ln){\r\n        this.layerElement.setAttribute('id',this.data.ln);\r\n    }\r\n    if(this.data.cl){\r\n        this.layerElement.setAttribute('class',this.data.cl);\r\n    }\r\n\r\n};\r\n\r\nIImageElement.prototype.renderFrame = function(parentMatrix){\r\n    var renderParent = this._parent.renderFrame.call(this,parentMatrix);\r\n    if(renderParent===false){\r\n        this.hide();\r\n        return;\r\n    }\r\n    if(this.hidden){\r\n        this.show();\r\n    }\r\n    if(this.firstFrame){\r\n        this.firstFrame = false;\r\n    }\r\n};\r\n\r\nIImageElement.prototype.destroy = function(){\r\n    this._parent.destroy.call(this._parent);\r\n    this.innerElem =  null;\r\n};\nfunction ISolidElement(data,parentContainer,globalData,comp, placeholder){\r\n    this._parent.constructor.call(this,data,parentContainer,globalData,comp, placeholder);\r\n}\r\ncreateElement(SVGBaseElement, ISolidElement);\r\n\r\nISolidElement.prototype.createElements = function(){\r\n    this._parent.createElements.call(this);\r\n\r\n    var rect = document.createElementNS(svgNS,'rect');\r\n    ////rect.style.width = this.data.sw;\r\n    ////rect.style.height = this.data.sh;\r\n    ////rect.style.fill = this.data.sc;\r\n    rect.setAttribute('width',this.data.sw);\r\n    rect.setAttribute('height',this.data.sh);\r\n    rect.setAttribute('fill',this.data.sc);\r\n    this.layerElement.appendChild(rect);\r\n    this.innerElem = rect;\r\n    if(this.data.ln){\r\n        this.layerElement.setAttribute('id',this.data.ln);\r\n    }\r\n    if(this.data.cl){\r\n        this.layerElement.setAttribute('class',this.data.cl);\r\n    }\r\n};\r\n\r\nISolidElement.prototype.renderFrame = IImageElement.prototype.renderFrame;\r\nISolidElement.prototype.destroy = IImageElement.prototype.destroy;\r\n\nvar animationManager = (function(){\r\n    var moduleOb = {};\r\n    var registeredAnimations = [];\r\n    var initTime = 0;\r\n    var len = 0;\r\n    var idled = true;\r\n    var playingAnimationsNum = 0;\r\n\r\n    function removeElement(ev){\r\n        var i = 0;\r\n        var animItem = ev.target;\r\n        while(i<len) {\r\n            if (registeredAnimations[i].animation === animItem) {\r\n                registeredAnimations.splice(i, 1);\r\n                i -= 1;\r\n                len -= 1;\r\n                if(!animItem.isPaused){\r\n                    subtractPlayingCount();\r\n                }\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    function registerAnimation(element, animationData){\r\n        if(!element){\r\n            return null;\r\n        }\r\n        var i=0;\r\n        while(i<len){\r\n            if(registeredAnimations[i].elem == element && registeredAnimations[i].elem !== null ){\r\n                return registeredAnimations[i].animation;\r\n            }\r\n            i+=1;\r\n        }\r\n        var animItem = new AnimationItem();\r\n        setupAnimation(animItem, element);\r\n        animItem.setData(element, animationData);\r\n        return animItem;\r\n    }\r\n\r\n    function addPlayingCount(){\r\n        playingAnimationsNum += 1;\r\n        activate();\r\n    }\r\n\r\n    function subtractPlayingCount(){\r\n        playingAnimationsNum -= 1;\r\n        if(playingAnimationsNum === 0){\r\n            idled = true;\r\n        }\r\n    }\r\n\r\n    function setupAnimation(animItem, element){\r\n        animItem.addEventListener('destroy',removeElement);\r\n        animItem.addEventListener('_active',addPlayingCount);\r\n        animItem.addEventListener('_idle',subtractPlayingCount);\r\n        registeredAnimations.push({elem: element,animation:animItem});\r\n        len += 1;\r\n    }\r\n\r\n    function loadAnimation(params){\r\n        var animItem = new AnimationItem();\r\n        setupAnimation(animItem, null);\r\n        animItem.setParams(params);\r\n        return animItem;\r\n    }\r\n\r\n\r\n    function setSpeed(val,animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.setSpeed(val, animation);\r\n        }\r\n    }\r\n\r\n    function setDirection(val, animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.setDirection(val, animation);\r\n        }\r\n    }\r\n\r\n    function play(animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.play(animation);\r\n        }\r\n    }\r\n\r\n    function moveFrame (value, animation) {\r\n        initTime = Date.now();\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.moveFrame(value,animation);\r\n        }\r\n    }\r\n\r\n    function resume(nowTime) {\r\n\r\n        var elapsedTime = nowTime - initTime;\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.advanceTime(elapsedTime);\r\n        }\r\n        initTime = nowTime;\r\n        if(!idled) {\r\n            window.requestAnimationFrame(resume);\r\n        }\r\n    }\r\n\r\n    function first(nowTime){\r\n        initTime = nowTime;\r\n        window.requestAnimationFrame(resume);\r\n    }\r\n\r\n    function pause(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.pause(animation);\r\n        }\r\n    }\r\n\r\n    function goToAndStop(value,isFrame,animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.goToAndStop(value,isFrame,animation);\r\n        }\r\n    }\r\n\r\n    function stop(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.stop(animation);\r\n        }\r\n    }\r\n\r\n    function togglePause(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.togglePause(animation);\r\n        }\r\n    }\r\n\r\n    function destroy(animation) {\r\n        var i;\r\n        for(i=(len-1);i>=0;i-=1){\r\n            registeredAnimations[i].animation.destroy(animation);\r\n        }\r\n    }\r\n\r\n    function searchAnimations(animationData, standalone, renderer){\r\n        var animElements = document.getElementsByClassName('bodymovin');\r\n        var i, len = animElements.length;\r\n        for(i=0;i<len;i+=1){\r\n            if(renderer){\r\n                animElements[i].setAttribute('data-bm-type',renderer);\r\n            }\r\n            registerAnimation(animElements[i], animationData);\r\n        }\r\n        if(standalone && len === 0){\r\n            if(!renderer){\r\n                renderer = 'svg';\r\n            }\r\n            var body = document.getElementsByTagName('body')[0];\r\n            body.innerHTML = '';\r\n            var div = document.createElement('div');\r\n            div.style.width = '100%';\r\n            div.style.height = '100%';\r\n            div.setAttribute('data-bm-type',renderer);\r\n            body.appendChild(div);\r\n            registerAnimation(div, animationData);\r\n        }\r\n    }\r\n\r\n    function resize(){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.resize();\r\n        }\r\n    }\r\n\r\n    function start(){\r\n        window.requestAnimationFrame(first);\r\n    }\r\n\r\n    function activate(){\r\n        if(idled){\r\n            idled = false;\r\n            window.requestAnimationFrame(first);\r\n        }\r\n    }\r\n\r\n    //start();\r\n\r\n    setTimeout(start,0);\r\n\r\n    moduleOb.registerAnimation = registerAnimation;\r\n    moduleOb.loadAnimation = loadAnimation;\r\n    moduleOb.setSpeed = setSpeed;\r\n    moduleOb.setDirection = setDirection;\r\n    moduleOb.play = play;\r\n    moduleOb.moveFrame = moveFrame;\r\n    moduleOb.pause = pause;\r\n    moduleOb.stop = stop;\r\n    moduleOb.togglePause = togglePause;\r\n    moduleOb.searchAnimations = searchAnimations;\r\n    moduleOb.resize = resize;\r\n    moduleOb.start = start;\r\n    moduleOb.goToAndStop = goToAndStop;\r\n    moduleOb.destroy = destroy;\r\n    return moduleOb;\r\n}());\r\n\nvar AnimationItem = function () {\r\n    this._cbs = [];\r\n    this.name = '';\r\n    this.path = '';\r\n    this.isLoaded = false;\r\n    this.currentFrame = 0;\r\n    this.currentRawFrame = 0;\r\n    this.totalFrames = 0;\r\n    this.frameRate = 0;\r\n    this.frameMult = 0;\r\n    this.playSpeed = 1;\r\n    this.playDirection = 1;\r\n    this.pendingElements = 0;\r\n    this.playCount = 0;\r\n    this.prerenderFramesFlag = true;\r\n    this.animationData = {};\r\n    this.layers = [];\r\n    this.assets = [];\r\n    this.isPaused = true;\r\n    this.autoplay = false;\r\n    this.loop = true;\r\n    this.renderer = null;\r\n    this.animationID = randomString(10);\r\n    this.scaleMode = 'fit';\r\n    this.assetsPath = '';\r\n    this.timeCompleted = 0;\r\n    this.segmentPos = 0;\r\n    this.subframeEnabled = subframeEnabled;\r\n    this.segments = [];\r\n    this.pendingSegment = false;\r\n    this._idle = true;\r\n    this.projectInterface = ProjectInterface();\r\n};\r\n\r\nAnimationItem.prototype.setParams = function(params) {\r\n    var self = this;\r\n    if(params.context){\r\n        this.context = params.context;\r\n    }\r\n    if(params.wrapper || params.container){\r\n        this.wrapper = params.wrapper || params.container;\r\n    }\r\n    var animType = params.animType ? params.animType : params.renderer ? params.renderer : 'svg';\r\n    switch(animType){\r\n        case 'canvas':\r\n            this.renderer = new CanvasRenderer(this, params.rendererSettings);\r\n            break;\r\n        case 'svg':\r\n            this.renderer = new SVGRenderer(this, params.rendererSettings);\r\n            break;\r\n        case 'hybrid':\r\n        case 'html':\r\n        default:\r\n            this.renderer = new HybridRenderer(this, params.rendererSettings);\r\n            break;\r\n    }\r\n    this.renderer.setProjectInterface(this.projectInterface);\r\n    this.animType = animType;\r\n\r\n    if(params.loop === '' || params.loop === null){\r\n    }else if(params.loop === false){\r\n        this.loop = false;\r\n    }else if(params.loop === true){\r\n        this.loop = true;\r\n    }else{\r\n        this.loop = parseInt(params.loop);\r\n    }\r\n    this.autoplay = 'autoplay' in params ? params.autoplay : true;\r\n    this.name = params.name ? params.name :  '';\r\n    this.prerenderFramesFlag = 'prerender' in params ? params.prerender : true;\r\n    this.autoloadSegments = params.hasOwnProperty('autoloadSegments') ? params.autoloadSegments :  true;\r\n    if(params.animationData){\r\n        self.configAnimation(params.animationData);\r\n    }else if(params.path){\r\n        if(params.path.substr(-4) != 'json'){\r\n            if (params.path.substr(-1, 1) != '/') {\r\n                params.path += '/';\r\n            }\r\n            params.path += 'data.json';\r\n        }\r\n\r\n        var xhr = new XMLHttpRequest();\r\n        if(params.path.lastIndexOf('\\\\') != -1){\r\n            this.path = params.path.substr(0,params.path.lastIndexOf('\\\\')+1);\r\n        }else{\r\n            this.path = params.path.substr(0,params.path.lastIndexOf('/')+1);\r\n        }\r\n        this.assetsPath = params.assetsPath;\r\n        this.fileName = params.path.substr(params.path.lastIndexOf('/')+1);\r\n        this.fileName = this.fileName.substr(0,this.fileName.lastIndexOf('.json'));\r\n        xhr.open('GET', params.path, true);\r\n        xhr.send();\r\n        xhr.onreadystatechange = function () {\r\n            if (xhr.readyState == 4) {\r\n                if(xhr.status == 200){\r\n                    self.configAnimation(JSON.parse(xhr.responseText));\r\n                }else{\r\n                    try{\r\n                        var response = JSON.parse(xhr.responseText);\r\n                        self.configAnimation(response);\r\n                    }catch(err){\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.setData = function (wrapper, animationData) {\r\n    var params = {\r\n        wrapper: wrapper,\r\n        animationData: animationData ? (typeof animationData  === \"object\") ? animationData : JSON.parse(animationData) : null\r\n    };\r\n    var wrapperAttributes = wrapper.attributes;\r\n\r\n    params.path = wrapperAttributes.getNamedItem('data-animation-path') ? wrapperAttributes.getNamedItem('data-animation-path').value : wrapperAttributes.getNamedItem('data-bm-path') ? wrapperAttributes.getNamedItem('data-bm-path').value :  wrapperAttributes.getNamedItem('bm-path') ? wrapperAttributes.getNamedItem('bm-path').value : '';\r\n    params.animType = wrapperAttributes.getNamedItem('data-anim-type') ? wrapperAttributes.getNamedItem('data-anim-type').value : wrapperAttributes.getNamedItem('data-bm-type') ? wrapperAttributes.getNamedItem('data-bm-type').value : wrapperAttributes.getNamedItem('bm-type') ? wrapperAttributes.getNamedItem('bm-type').value :  wrapperAttributes.getNamedItem('data-bm-renderer') ? wrapperAttributes.getNamedItem('data-bm-renderer').value : wrapperAttributes.getNamedItem('bm-renderer') ? wrapperAttributes.getNamedItem('bm-renderer').value : 'canvas';\r\n\r\n    var loop = wrapperAttributes.getNamedItem('data-anim-loop') ? wrapperAttributes.getNamedItem('data-anim-loop').value :  wrapperAttributes.getNamedItem('data-bm-loop') ? wrapperAttributes.getNamedItem('data-bm-loop').value :  wrapperAttributes.getNamedItem('bm-loop') ? wrapperAttributes.getNamedItem('bm-loop').value : '';\r\n    if(loop === ''){\r\n    }else if(loop === 'false'){\r\n        params.loop = false;\r\n    }else if(loop === 'true'){\r\n        params.loop = true;\r\n    }else{\r\n        params.loop = parseInt(loop);\r\n    }\r\n    var autoplay = wrapperAttributes.getNamedItem('data-anim-autoplay') ? wrapperAttributes.getNamedItem('data-anim-autoplay').value :  wrapperAttributes.getNamedItem('data-bm-autoplay') ? wrapperAttributes.getNamedItem('data-bm-autoplay').value :  wrapperAttributes.getNamedItem('bm-autoplay') ? wrapperAttributes.getNamedItem('bm-autoplay').value : true;\r\n    params.autoplay = autoplay !== \"false\";\r\n\r\n    params.name = wrapperAttributes.getNamedItem('data-name') ? wrapperAttributes.getNamedItem('data-name').value :  wrapperAttributes.getNamedItem('data-bm-name') ? wrapperAttributes.getNamedItem('data-bm-name').value : wrapperAttributes.getNamedItem('bm-name') ? wrapperAttributes.getNamedItem('bm-name').value :  '';\r\n    var prerender = wrapperAttributes.getNamedItem('data-anim-prerender') ? wrapperAttributes.getNamedItem('data-anim-prerender').value :  wrapperAttributes.getNamedItem('data-bm-prerender') ? wrapperAttributes.getNamedItem('data-bm-prerender').value :  wrapperAttributes.getNamedItem('bm-prerender') ? wrapperAttributes.getNamedItem('bm-prerender').value : '';\r\n\r\n    if(prerender === 'false'){\r\n        params.prerender = false;\r\n    }\r\n    this.setParams(params);\r\n};\r\n\r\nAnimationItem.prototype.includeLayers = function(data) {\r\n    if(data.op > this.animationData.op){\r\n        this.animationData.op = data.op;\r\n        this.totalFrames = Math.floor(data.op - this.animationData.ip);\r\n        this.animationData.tf = this.totalFrames;\r\n    }\r\n    var layers = this.animationData.layers;\r\n    var i, len = layers.length;\r\n    var newLayers = data.layers;\r\n    var j, jLen = newLayers.length;\r\n    for(j=0;j<jLen;j+=1){\r\n        i = 0;\r\n        while(i<len){\r\n            if(layers[i].id == newLayers[j].id){\r\n                layers[i] = newLayers[j];\r\n                break;\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n    if(data.chars || data.fonts){\r\n        this.renderer.globalData.fontManager.addChars(data.chars);\r\n        this.renderer.globalData.fontManager.addFonts(data.fonts, this.renderer.globalData.defs);\r\n    }\r\n    if(data.assets){\r\n        len = data.assets.length;\r\n        for(i = 0; i < len; i += 1){\r\n            this.animationData.assets.push(data.assets[i]);\r\n        }\r\n    }\r\n    //this.totalFrames = 50;\r\n    //this.animationData.tf = 50;\r\n    this.animationData.__complete = false;\r\n    dataManager.completeData(this.animationData,this.renderer.globalData.fontManager);\r\n    this.renderer.includeLayers(data.layers);\r\n    if(expressionsPlugin){\r\n        expressionsPlugin.initExpressions(this);\r\n    }\r\n    this.renderer.renderFrame(null);\r\n    this.loadNextSegment();\r\n};\r\n\r\nAnimationItem.prototype.loadNextSegment = function() {\r\n    var segments = this.animationData.segments;\r\n    if(!segments || segments.length === 0 || !this.autoloadSegments){\r\n        this.trigger('data_ready');\r\n        this.timeCompleted = this.animationData.tf;\r\n        return;\r\n    }\r\n    var segment = segments.shift();\r\n    this.timeCompleted = segment.time * this.frameRate;\r\n    var xhr = new XMLHttpRequest();\r\n    var self = this;\r\n    var segmentPath = this.path+this.fileName+'_' + this.segmentPos + '.json';\r\n    this.segmentPos += 1;\r\n    xhr.open('GET', segmentPath, true);\r\n    xhr.send();\r\n    xhr.onreadystatechange = function () {\r\n        if (xhr.readyState == 4) {\r\n            if(xhr.status == 200){\r\n                self.includeLayers(JSON.parse(xhr.responseText));\r\n            }else{\r\n                try{\r\n                    var response = JSON.parse(xhr.responseText);\r\n                    self.includeLayers(response);\r\n                }catch(err){\r\n                }\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\nAnimationItem.prototype.loadSegments = function() {\r\n    var segments = this.animationData.segments;\r\n    if(!segments) {\r\n        this.timeCompleted = this.animationData.tf;\r\n    }\r\n    this.loadNextSegment();\r\n};\r\n\r\nAnimationItem.prototype.configAnimation = function (animData) {\r\n    var _this = this;\r\n    if(this.renderer && this.renderer.destroyed){\r\n        return;\r\n    }\r\n    //console.log(JSON.parse(JSON.stringify(animData)));\r\n    //animData.w = Math.round(animData.w/blitter);\r\n    //animData.h = Math.round(animData.h/blitter);\r\n    this.animationData = animData;\r\n    this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip);\r\n    this.animationData.tf = this.totalFrames;\r\n    this.renderer.configAnimation(animData);\r\n    if(!animData.assets){\r\n        animData.assets = [];\r\n    }\r\n    if(animData.comps) {\r\n        animData.assets = animData.assets.concat(animData.comps);\r\n        animData.comps = null;\r\n    }\r\n    this.renderer.searchExtraCompositions(animData.assets);\r\n\r\n    this.layers = this.animationData.layers;\r\n    this.assets = this.animationData.assets;\r\n    this.frameRate = this.animationData.fr;\r\n    this.firstFrame = Math.round(this.animationData.ip);\r\n    this.frameMult = this.animationData.fr / 1000;\r\n    this.trigger('config_ready');\r\n    this.imagePreloader = new ImagePreloader();\r\n    this.imagePreloader.setAssetsPath(this.assetsPath);\r\n    this.imagePreloader.setPath(this.path);\r\n    this.imagePreloader.loadAssets(animData.assets, function(err) {\r\n        if(!err) {\r\n            _this.trigger('loaded_images');\r\n        }\r\n    });\r\n    this.loadSegments();\r\n    this.updaFrameModifier();\r\n    if(this.renderer.globalData.fontManager){\r\n        this.waitForFontsLoaded();\r\n    }else{\r\n        dataManager.completeData(this.animationData,this.renderer.globalData.fontManager);\r\n        this.checkLoaded();\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.waitForFontsLoaded = (function(){\r\n    function checkFontsLoaded(){\r\n        if(this.renderer.globalData.fontManager.loaded){\r\n            dataManager.completeData(this.animationData,this.renderer.globalData.fontManager);\r\n            //this.renderer.buildItems(this.animationData.layers);\r\n            this.checkLoaded();\r\n        }else{\r\n            setTimeout(checkFontsLoaded.bind(this),20);\r\n        }\r\n    }\r\n\r\n    return function(){\r\n        checkFontsLoaded.bind(this)();\r\n    }\r\n}());\r\n\r\nAnimationItem.prototype.addPendingElement = function () {\r\n    this.pendingElements += 1;\r\n}\r\n\r\nAnimationItem.prototype.elementLoaded = function () {\r\n    this.pendingElements--;\r\n    this.checkLoaded();\r\n};\r\n\r\nAnimationItem.prototype.checkLoaded = function () {\r\n    if (this.pendingElements === 0) {\r\n        if(expressionsPlugin){\r\n            expressionsPlugin.initExpressions(this);\r\n        }\r\n        this.renderer.initItems();\r\n        setTimeout(function(){\r\n            this.trigger('DOMLoaded');\r\n        }.bind(this),0);\r\n        this.isLoaded = true;\r\n        this.gotoFrame();\r\n        if(this.autoplay){\r\n            this.play();\r\n        }\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.resize = function () {\r\n    this.renderer.updateContainerSize();\r\n};\r\n\r\nAnimationItem.prototype.setSubframe = function(flag){\r\n    this.subframeEnabled = flag ? true : false;\r\n}\r\n\r\nAnimationItem.prototype.gotoFrame = function () {\r\n    if(this.subframeEnabled){\r\n        this.currentFrame = this.currentRawFrame;\r\n    }else{\r\n        this.currentFrame = Math.floor(this.currentRawFrame);\r\n    }\r\n\r\n    if(this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted){\r\n        this.currentFrame = this.timeCompleted;\r\n    }\r\n    this.trigger('enterFrame');\r\n    this.renderFrame();\r\n};\r\n\r\nAnimationItem.prototype.renderFrame = function () {\r\n    if(this.isLoaded === false){\r\n        return;\r\n    }\r\n    //console.log('this.currentFrame:',this.currentFrame + this.firstFrame);\r\n    this.renderer.renderFrame(this.currentFrame + this.firstFrame);\r\n};\r\n\r\nAnimationItem.prototype.play = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === true){\r\n        this.isPaused = false;\r\n        if(this._idle){\r\n            this._idle = false;\r\n            this.trigger('_active');\r\n        }\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.pause = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === false){\r\n        this.isPaused = true;\r\n        if(!this.pendingSegment){\r\n            this._idle = true;\r\n            this.trigger('_idle');\r\n        }\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.togglePause = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === true){\r\n        this.play();\r\n    }else{\r\n        this.pause();\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.stop = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    this.pause();\r\n    this.currentFrame = this.currentRawFrame = 0;\r\n    this.playCount = 0;\r\n    this.gotoFrame();\r\n};\r\n\r\nAnimationItem.prototype.goToAndStop = function (value, isFrame, name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(isFrame){\r\n        this.setCurrentRawFrameValue(value);\r\n    }else{\r\n        this.setCurrentRawFrameValue(value * this.frameModifier);\r\n    }\r\n    this.pause();\r\n};\r\n\r\nAnimationItem.prototype.goToAndPlay = function (value, isFrame, name) {\r\n    this.goToAndStop(value, isFrame, name);\r\n    this.play();\r\n};\r\n\r\nAnimationItem.prototype.advanceTime = function (value) {\r\n    if(this.pendingSegment){\r\n        this.pendingSegment = false;\r\n        this.adjustSegment(this.segments.shift());\r\n        if(this.isPaused){\r\n            this.play();\r\n        }\r\n        return;\r\n    }\r\n    if (this.isPaused === true || this.isLoaded === false) {\r\n        return;\r\n    }\r\n    this.setCurrentRawFrameValue(this.currentRawFrame + value * this.frameModifier);\r\n};\r\n\r\nAnimationItem.prototype.updateAnimation = function (perc) {\r\n    this.setCurrentRawFrameValue(this.totalFrames * perc);\r\n};\r\n\r\nAnimationItem.prototype.moveFrame = function (value, name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    this.setCurrentRawFrameValue(this.currentRawFrame+value);\r\n};\r\n\r\nAnimationItem.prototype.adjustSegment = function(arr){\r\n    this.playCount = 0;\r\n    if(arr[1] < arr[0]){\r\n        if(this.frameModifier > 0){\r\n            if(this.playSpeed < 0){\r\n                this.setSpeed(-this.playSpeed);\r\n            } else {\r\n                this.setDirection(-1);\r\n            }\r\n        }\r\n        this.totalFrames = arr[0] - arr[1];\r\n        this.firstFrame = arr[1];\r\n        this.setCurrentRawFrameValue(this.totalFrames - 0.01);\r\n    } else if(arr[1] > arr[0]){\r\n        if(this.frameModifier < 0){\r\n            if(this.playSpeed < 0){\r\n                this.setSpeed(-this.playSpeed);\r\n            } else {\r\n                this.setDirection(1);\r\n            }\r\n        }\r\n        this.totalFrames = arr[1] - arr[0];\r\n        this.firstFrame = arr[0];\r\n        this.setCurrentRawFrameValue(0);\r\n    }\r\n    this.trigger('segmentStart');\r\n};\r\nAnimationItem.prototype.setSegment = function (init,end) {\r\n    var pendingFrame = -1;\r\n    if(this.isPaused) {\r\n        if (this.currentRawFrame + this.firstFrame < init) {\r\n            pendingFrame = init;\r\n        } else if (this.currentRawFrame + this.firstFrame > end) {\r\n            pendingFrame = end - init - 0.01;\r\n        }\r\n    }\r\n\r\n    this.firstFrame = init;\r\n    this.totalFrames = end - init;\r\n    if(pendingFrame !== -1) {\r\n        this.goToAndStop(pendingFrame,true);\r\n    }\r\n}\r\n\r\nAnimationItem.prototype.playSegments = function (arr,forceFlag) {\r\n    if(typeof arr[0] === 'object'){\r\n        var i, len = arr.length;\r\n        for(i=0;i<len;i+=1){\r\n            this.segments.push(arr[i]);\r\n        }\r\n    }else{\r\n        this.segments.push(arr);\r\n    }\r\n    if(forceFlag){\r\n        this.adjustSegment(this.segments.shift());\r\n    }\r\n    if(this.isPaused){\r\n        this.play();\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.resetSegments = function (forceFlag) {\r\n    this.segments.length = 0;\r\n    this.segments.push([this.animationData.ip*this.frameRate,Math.floor(this.animationData.op - this.animationData.ip+this.animationData.ip*this.frameRate)]);\r\n    if(forceFlag){\r\n        this.adjustSegment(this.segments.shift());\r\n    }\r\n};\r\nAnimationItem.prototype.checkSegments = function(){\r\n    if(this.segments.length){\r\n        this.pendingSegment = true;\r\n    }\r\n}\r\n\r\nAnimationItem.prototype.remove = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    this.renderer.destroy();\r\n};\r\n\r\nAnimationItem.prototype.destroy = function (name) {\r\n    if((name && this.name != name) || (this.renderer && this.renderer.destroyed)){\r\n        return;\r\n    }\r\n    this.renderer.destroy();\r\n    this.trigger('destroy');\r\n    this._cbs = null;\r\n    this.onEnterFrame = this.onLoopComplete = this.onComplete = this.onSegmentStart = this.onDestroy = null;\r\n};\r\n\r\nAnimationItem.prototype.setCurrentRawFrameValue = function(value){\r\n    this.currentRawFrame = value;\r\n    //console.log(this.totalFrames);\r\n    if (this.currentRawFrame >= this.totalFrames) {\r\n        this.checkSegments();\r\n        if(this.loop === false){\r\n            this.currentRawFrame = this.totalFrames - 0.01;\r\n            this.gotoFrame();\r\n            this.pause();\r\n            this.trigger('complete');\r\n            return;\r\n        }else{\r\n            this.trigger('loopComplete');\r\n            this.playCount += 1;\r\n            if((this.loop !== true && this.playCount == this.loop) || this.pendingSegment){\r\n                this.currentRawFrame = this.totalFrames - 0.01;\r\n                this.gotoFrame();\r\n                this.pause();\r\n                this.trigger('complete');\r\n                return;\r\n            } else {\r\n                this.currentRawFrame = this.currentRawFrame % this.totalFrames;\r\n            }\r\n        }\r\n    } else if (this.currentRawFrame < 0) {\r\n        this.checkSegments();\r\n        this.playCount -= 1;\r\n        if(this.playCount < 0){\r\n            this.playCount = 0;\r\n        }\r\n        if(this.loop === false  || this.pendingSegment){\r\n            this.currentRawFrame = 0;\r\n            this.gotoFrame();\r\n            this.pause();\r\n            this.trigger('complete');\r\n            return;\r\n        }else{\r\n            this.trigger('loopComplete');\r\n            this.currentRawFrame = (this.totalFrames + this.currentRawFrame) % this.totalFrames;\r\n            this.gotoFrame();\r\n            return;\r\n        }\r\n    }\r\n\r\n    this.gotoFrame();\r\n};\r\n\r\nAnimationItem.prototype.setSpeed = function (val) {\r\n    this.playSpeed = val;\r\n    this.updaFrameModifier();\r\n};\r\n\r\nAnimationItem.prototype.setDirection = function (val) {\r\n    this.playDirection = val < 0 ? -1 : 1;\r\n    this.updaFrameModifier();\r\n};\r\n\r\nAnimationItem.prototype.updaFrameModifier = function () {\r\n    this.frameModifier = this.frameMult * this.playSpeed * this.playDirection;\r\n};\r\n\r\nAnimationItem.prototype.getPath = function () {\r\n    return this.path;\r\n};\r\n\r\nAnimationItem.prototype.getAssetsPath = function (assetData) {\r\n    var path = '';\r\n    if(this.assetsPath){\r\n        var imagePath = assetData.p;\r\n        if(imagePath.indexOf('images/') !== -1){\r\n            imagePath = imagePath.split('/')[1];\r\n        }\r\n        path = this.assetsPath + imagePath;\r\n    } else {\r\n        path = this.path;\r\n        path += assetData.u ? assetData.u : '';\r\n        path += assetData.p;\r\n    }\r\n    return path;\r\n};\r\n\r\nAnimationItem.prototype.getAssetData = function (id) {\r\n    var i = 0, len = this.assets.length;\r\n    while (i < len) {\r\n        if(id == this.assets[i].id){\r\n            return this.assets[i];\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.hide = function () {\r\n    this.renderer.hide();\r\n};\r\n\r\nAnimationItem.prototype.show = function () {\r\n    this.renderer.show();\r\n};\r\n\r\nAnimationItem.prototype.getAssets = function () {\r\n    return this.assets;\r\n};\r\n\r\nAnimationItem.prototype.trigger = function(name){\r\n    if(this._cbs && this._cbs[name]){\r\n        switch(name){\r\n            case 'enterFrame':\r\n                this.triggerEvent(name,new BMEnterFrameEvent(name,this.currentFrame,this.totalFrames,this.frameMult));\r\n                break;\r\n            case 'loopComplete':\r\n                this.triggerEvent(name,new BMCompleteLoopEvent(name,this.loop,this.playCount,this.frameMult));\r\n                break;\r\n            case 'complete':\r\n                this.triggerEvent(name,new BMCompleteEvent(name,this.frameMult));\r\n                break;\r\n            case 'segmentStart':\r\n                this.triggerEvent(name,new BMSegmentStartEvent(name,this.firstFrame,this.totalFrames));\r\n                break;\r\n            case 'destroy':\r\n                this.triggerEvent(name,new BMDestroyEvent(name,this));\r\n                break;\r\n            default:\r\n                this.triggerEvent(name);\r\n        }\r\n    }\r\n    if(name === 'enterFrame' && this.onEnterFrame){\r\n        this.onEnterFrame.call(this,new BMEnterFrameEvent(name,this.currentFrame,this.totalFrames,this.frameMult));\r\n    }\r\n    if(name === 'loopComplete' && this.onLoopComplete){\r\n        this.onLoopComplete.call(this,new BMCompleteLoopEvent(name,this.loop,this.playCount,this.frameMult));\r\n    }\r\n    if(name === 'complete' && this.onComplete){\r\n        this.onComplete.call(this,new BMCompleteEvent(name,this.frameMult));\r\n    }\r\n    if(name === 'segmentStart' && this.onSegmentStart){\r\n        this.onSegmentStart.call(this,new BMSegmentStartEvent(name,this.firstFrame,this.totalFrames));\r\n    }\r\n    if(name === 'destroy' && this.onDestroy){\r\n        this.onDestroy.call(this,new BMDestroyEvent(name,this));\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.addEventListener = _addEventListener;\r\nAnimationItem.prototype.removeEventListener = _removeEventListener;\r\nAnimationItem.prototype.triggerEvent = _triggerEvent;\r\n\r\n    var bodymovinjs = {};\r\n\r\n    function setLocationHref (href) {\r\n        locationHref = href;\r\n    }\r\n    function play(animation){\r\n        animationManager.play(animation);\r\n    }\r\n\r\n    function pause(animation) {\r\n        animationManager.pause(animation);\r\n    }\r\n\r\n    function togglePause(animation) {\r\n        animationManager.togglePause(animation);\r\n    }\r\n\r\n    function setSpeed(value, animation) {\r\n        animationManager.setSpeed(value, animation);\r\n    }\r\n\r\n    function setDirection(value, animation) {\r\n        animationManager.setDirection(value, animation);\r\n    }\r\n\r\n    function stop(animation) {\r\n        animationManager.stop(animation);\r\n    }\r\n\r\n    function moveFrame(value) {\r\n        animationManager.moveFrame(value);\r\n    }\r\n\r\n    function searchAnimations() {\r\n        if (standalone === true) {\r\n            animationManager.searchAnimations(animationData, standalone, renderer);\r\n        } else {\r\n            animationManager.searchAnimations();\r\n        }\r\n    }\r\n\r\n    function registerAnimation(elem) {\r\n        return animationManager.registerAnimation(elem);\r\n    }\r\n\r\n    function resize() {\r\n        animationManager.resize();\r\n    }\r\n\r\n    function start() {\r\n        animationManager.start();\r\n    }\r\n\r\n    function goToAndStop(val, isFrame, animation) {\r\n        animationManager.goToAndStop(val, isFrame, animation);\r\n    }\r\n\r\n    function setSubframeRendering(flag) {\r\n        subframeEnabled = flag;\r\n    }\r\n\r\n    function loadAnimation(params) {\r\n        if (standalone === true) {\r\n            params.animationData = JSON.parse(animationData);\r\n        }\r\n        return animationManager.loadAnimation(params);\r\n    }\r\n\r\n    function destroy(animation) {\r\n        return animationManager.destroy(animation);\r\n    }\r\n\r\n    function setQuality(value) {\r\n        if (typeof value === 'string') {\r\n            switch (value) {\r\n                case 'high':\r\n                    defaultCurveSegments = 200;\r\n                    break;\r\n                case 'medium':\r\n                    defaultCurveSegments = 50;\r\n                    break;\r\n                case 'low':\r\n                    defaultCurveSegments = 10;\r\n                    break;\r\n            }\r\n        } else if (!isNaN(value) && value > 1) {\r\n            defaultCurveSegments = value;\r\n        }\r\n        if (defaultCurveSegments >= 50) {\r\n            roundValues(false);\r\n        } else {\r\n            roundValues(true);\r\n        }\r\n    }\r\n\r\n    function inBrowser() {\r\n        return typeof navigator !== 'undefined';\r\n    }\r\n\r\n    function installPlugin(type, plugin) {\r\n        if (type === 'expressions') {\r\n            expressionsPlugin = plugin;\r\n        }\r\n    }\r\n\r\n    function getFactory(name) {\r\n        switch (name) {\r\n            case \"propertyFactory\":\r\n                return PropertyFactory;\r\n            case \"shapePropertyFactory\":\r\n                return ShapePropertyFactory;\r\n            case \"matrix\":\r\n                return Matrix;\r\n        }\r\n    }\r\n    bodymovinjs.play = play;\r\n    bodymovinjs.pause = pause;\r\n    bodymovinjs.setLocationHref = setLocationHref;\r\n    bodymovinjs.togglePause = togglePause;\r\n    bodymovinjs.setSpeed = setSpeed;\r\n    bodymovinjs.setDirection = setDirection;\r\n    bodymovinjs.stop = stop;\r\n    bodymovinjs.moveFrame = moveFrame;\r\n    bodymovinjs.searchAnimations = searchAnimations;\r\n    bodymovinjs.registerAnimation = registerAnimation;\r\n    bodymovinjs.loadAnimation = loadAnimation;\r\n    bodymovinjs.setSubframeRendering = setSubframeRendering;\r\n    bodymovinjs.resize = resize;\r\n    bodymovinjs.start = start;\r\n    bodymovinjs.goToAndStop = goToAndStop;\r\n    bodymovinjs.destroy = destroy;\r\n    bodymovinjs.setQuality = setQuality;\r\n    bodymovinjs.inBrowser = inBrowser;\r\n    bodymovinjs.installPlugin = installPlugin;\r\n    bodymovinjs.__getFactory = getFactory;\r\n    bodymovinjs.version = '4.13.0';\r\n\r\n    function checkReady() {\r\n        if (document.readyState === \"complete\") {\r\n            clearInterval(readyStateCheckInterval);\r\n            searchAnimations();\r\n        }\r\n    }\r\n\r\n    function getQueryVariable(variable) {\r\n        var vars = queryString.split('&');\r\n        for (var i = 0; i < vars.length; i++) {\r\n            var pair = vars[i].split('=');\r\n            if (decodeURIComponent(pair[0]) == variable) {\r\n                return decodeURIComponent(pair[1]);\r\n            }\r\n        }\r\n    }\r\n    var standalone = '__[STANDALONE]__';\r\n    var animationData = '__[ANIMATIONDATA]__';\r\n    var renderer = '';\r\n    if (standalone) {\r\n        var scripts = document.getElementsByTagName('script');\r\n        var index = scripts.length - 1;\r\n        var myScript = scripts[index] || {\r\n            src: ''\r\n        };\r\n        var queryString = myScript.src.replace(/^[^\\?]+\\??/, '');\r\n        renderer = getQueryVariable('renderer');\r\n    }\r\n    var readyStateCheckInterval = setInterval(checkReady, 100);\r\n    return bodymovinjs;\r\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bodymovin/build/player/bodymovin_light.js\n// module id = 3\n// module chunks = 0","/* globals __VUE_SSR_CONTEXT__ */\n\n// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/component-normalizer.js\n// module id = 4\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    ref: \"lavContainer\",\n    style: (_vm.style)\n  })\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-91474f0e\",\"hasScoped\":false,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"}}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/vue-lottie.vue\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}