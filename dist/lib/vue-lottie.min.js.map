{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///lib/vue-lottie.min.js","webpack:///webpack/bootstrap 00c4754b4d80a79acce7","webpack:///./src/components/vue-lottie.vue","webpack:///./src/lib.js","webpack:///vue-lottie.vue","webpack:///./~/bodymovin/build/player/bodymovin_light.js","webpack:///./~/vue-loader/lib/component-normalizer.js","webpack:///./src/components/vue-lottie.vue?499d"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Component","options","__file","esModule","keys","some","key","substr","console","error","functional","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_0__components_vue_lottie__","__WEBPACK_IMPORTED_MODULE_0__components_vue_lottie___default","__WEBPACK_IMPORTED_MODULE_0_bodymovin_build_player_bodymovin_light_js__","__WEBPACK_IMPORTED_MODULE_0_bodymovin_build_player_bodymovin_light_js___default","props","data","type","required","loop","Boolean","autoplay","default","settings","height","Number","width","animation","computed","style","methods","play","pause","stop","setSpeed","val","mounted","a","loadAnimation","container","$refs","lavContainer","renderer","animationData","rendererSettings","__WEBPACK_AMD_DEFINE_RESULT__","undefined","window","ProjectInterface","roundValues","flag","bm_rnd","Math","round","roundTo2Decimals","styleUnselectableDiv","element","userSelect","MozUserSelect","webkitUserSelect","oUserSelect","BMEnterFrameEvent","t","currentTime","totalTime","direction","BMCompleteEvent","BMCompleteLoopEvent","currentLoop","totalLoops","BMSegmentStartEvent","f","firstFrame","totalFrames","BMDestroyEvent","target","_addEventListener","eventName","callback","_cbs","push","removeEventListener","bind","_removeEventListener","len","length","splice","_triggerEvent","args","randomString","chars","result","random","HSVtoRGB","h","v","r","g","b","q","arguments","floor","RGBtoHSV","max","min","addSaturationToRGB","color","offset","hsv","addBrightnessToRGB","addHueToRGB","reversePath","paths","newI","newO","newV","newPaths","init","cnt","Matrix","createElement","parent","child","params","instance","create","getType","toString","constructor","_parent","extendPrototype","source","destination","attr","ShapePath","_length","_maxLength","Array","apply","ShapeModifier","TrimModifier","RoundCornersModifier","RepeaterModifier","ShapeCollection","shapes","TextAnimatorProperty","textData","renderType","elem","mdf","_firstFrame","_hasMaskedPath","_frameId","_dynamicProperties","_textData","_renderType","_elem","_animatorsData","_pathData","_moreOptions","alignment","renderedLetters","lettersChangedFlag","LetterProps","sw","sc","fc","TextProperty","dynamicProperties","pv","kf","keysIndex","currentData","ascent","boxWidth","fStyle","fWeight","j","justifyOffset","lh","lineWidths","ls","of","tr","fillColorAnim","strokeColorAnim","strokeWidthAnim","yOffset","__complete","searchProperty","getValue","BaseRenderer","SVGRenderer","animationItem","config","layers","renderedFrame","globalData","frameNum","renderConfig","preserveAspectRatio","progressiveLoad","hideOnTransparent","viewBoxOnly","className","elements","pendingElements","destroyed","MaskElement","storedData","masksProperties","viewData","maskElement","path","jLen","rect","expansor","feMorph","x","defs","properties","count","currentMasks","layerId","maskType","maskRef","mode","inv","k","document","createElementNS","svgNS","setAttribute","comp","w","PropertyFactory","getProp","filterID","appendChild","expan","lastPath","lastOperator","filterId","lastRadius","mask","locationHref","solidPath","createLayerSolidPath","op","prop","ShapePropertyFactory","getShapeProp","invRect","drawPath","maskedElement","BaseElement","SVGBaseElement","parentContainer","placeholder","matteElement","transformedElement","isTransparent","_sizeChanged","IShapeElement","shapesData","stylesList","itemsData","prevViewData","shapeModifiers","processedElements","ITextElement","SVGTextElement","textSpans","SVGTintFilter","filter","filterManager","feColorMatrix","matrixFilter","effectElements","feMerge","feMergeNode","SVGFillFilter","SVGStrokeEffect","initialized","SVGTritoneFilter","feComponentTransfer","feFuncR","feFuncG","feFuncB","SVGProLevelsFilter","createFeFunc","feFuncA","feFuncRComposed","feFuncGComposed","feFuncBComposed","SVGDropShadowEffect","feGaussianBlur","feOffset","feFlood","feComposite","originalNodeAdded","SVGMatte3Effect","filterElem","layerElement","baseElement","SVGEffects","ef","filId","fil","filtersFactory","createFilter","filters","ty","effects","ICompElement","supports3d","completeLayers","tm","frameRate","xt","buildAllItems","IImageElement","assetData","getAssetData","refId","ISolidElement","setLocationHref","href","animationManager","togglePause","setDirection","moveFrame","searchAnimations","standalone","registerAnimation","resize","start","goToAndStop","isFrame","setSubframeRendering","subframeEnabled","JSON","parse","destroy","setQuality","defaultCurveSegments","isNaN","inBrowser","navigator","installPlugin","plugin","expressionsPlugin","getFactory","checkReady","readyState","clearInterval","readyStateCheckInterval","isSafari","test","userAgent","bm_pow","pow","bm_sqrt","sqrt","bm_floor","abs","bm_min","BMMath","propertyNames","getOwnPropertyNames","absArr","degToRads","PI","roundCorner","rgbToHex","hex","colorMap","reset","rotate","angle","mCos","cos","mSin","sin","_t","rotateX","rotateY","rotateZ","shear","sx","sy","skew","ax","ay","tan","skewFromAxis","scale","sz","setTransform","e","translate","tx","tz","transform","a2","b2","c2","d2","e2","f2","g2","h2","i2","j2","k2","l2","m2","n2","o2","p2","_identityCalculated","a1","b1","c1","d1","e1","f1","g1","h1","i1","j1","k1","l1","m1","n1","o1","p1","isIdentity","_identity","clone","matr","cloneFromProps","applyToPoint","y","z","applyToX","applyToY","applyToZ","inversePoint","pt","determinant","inversePoints","pts","retPts","applyToPointArray","dimensions","arr","point_pool","newPoint","applyToPointStringified","toArray","toCSS","cssParts","join","to2dCSS","pool","math","seedrandom","seed","entropy","shortseed","mixkey","flatten","tostring","autoseed","arc4","ARC4","prng","chunks","startdenom","significance","overflow","int32","quick","double","S","pass","is_math_call","state","copy","rngname","global","keylen","me","slice","obj","depth","typ","smear","stringseed","charCodeAt","nodecrypto","randomBytes","out","Uint8Array","crypto","msCrypto","getRandomValues","browser","plugins","Date","screen","String","fromCharCode","BezierFactory","getBezierEasing","nm","str","replace","beziers","bezEasing","BezierEasing","A","aA1","aA2","B","C","calcBezier","aT","getSlope","binarySubdivide","aX","aA","aB","mX1","mX2","currentX","currentT","SUBDIVISION_PRECISION","SUBDIVISION_MAX_ITERATIONS","newtonRaphsonIterate","aGuessT","NEWTON_ITERATIONS","currentSlope","points","_p","_mSampleValues","float32ArraySupported","Float32Array","kSplineTableSize","_precomputed","ob","kSampleStepSize","mY1","mY2","_precompute","_getTForX","_calcSampleValues","mSampleValues","intervalStart","currentSample","lastSample","dist","guessForT","initialSlope","lastTime","vendors","requestAnimationFrame","cancelAnimationFrame","currTime","getTime","timeToCall","id","setTimeout","clearTimeout","bez","pointOnLine2D","x1","y1","x2","y2","x3","y3","det1","pointOnLine3D","z1","z2","z3","diffDist","dist1","dist2","dist3","getSegmentsLength","shapeData","closed","pathV","pathO","pathI","lengths","totalLength","getBezierLength","addedLength","BezierData","segmentLength","PointData","partial","point","partialLength","getDistancePerc","perc","bezierData","segments","initPos","lengthPos","lPerc","dir","SegmentPoints","pt1","pt2","pt3","pt4","getPointInSegment","percent","t1","u1","getNewSegment","startPerc","endPerc","t0","u0","Segment","ptCoord","ptDistance","curveSegments","lastPoint","lengthData","buildBezierData","keyData","to","ti","bezierName","dataManager","comps","fontManager","layerData","kLen","completed","tt","td","hasMask","maskProps","convertPathsToAbsoluteValues","findCompLayers","completeShapes","completeText","__used","stringify","ks","it","checkVersion","minimum","animVersionString","animVersion","split","completeData","checkColors","checkText","checkChars","checkShapes","assets","singleShape","updateTextLayer","textLayer","documentData","iterateLayers","minimumVersion","pathData","__converted","iterateShapes","cl","moduleOb","FontManager","setUpNode","font","family","parentNode","fontFamily","node","innerHTML","position","left","top","fontSize","fontVariant","fontStyle","fontWeight","letterSpacing","body","offsetWidth","checkLoadedFonts","fonts","loadedCount","loaded","fOrigin","origin","Typekit","load","typekitLoaded","async","active","monoCase","sansCase","removeChild","now","initTime","maxWaitingTime","createHelper","def","fontData","tHelper","fFamily","textContent","fClass","tCanvasHelper","getContext","addFonts","list","fontArr","fPath","rel","helper","addChars","found","ch","getCharData","char","measureText","fontName","size","getFontByName","fName","Font","interpolateValue","iterationIndex","previousValue","caching","newValue","offsetTime","nextKeyData","keyframes","fnc","ind","_lastBezierData","__fnct","segmentPerc","distanceInLine","lastFrame","_lastAddedLength","_lastPoint","outX","outY","inX","inY","keyValue","sh","initP","endP","getValueAtCurrentTime","frameId","endTime","_caching","initFrame","lastIndex","renderResult","mult","lastPValue","getNoValue","ValueProperty","vel","MultiDimensionalProperty","lastValue","map","KeyframedValueProperty","st","KeyframedMultidimensionalProperty","TransformProperty","getDashProp","DashProperty","getTextSelectorProp","TextSelectorProp","positionGetter","ExpressionValue","px","py","pz","xPositionGetter","yPositionGetter","anchorGetter","orientationGetter","or","rotationGetter","rz","scaleGetter","opacityGetter","skewGetter","sk","skewAxisGetter","sa","applyToMatrix","mat","ry","rx","processKeys","autoOriented","getValueAtTime","v1","v2","atan2","setInverted","inverted","iv","autoOrient","getGradientProp","forceRender","cmdf","omdf","gradientProp","cLength","dataProps","dasharray","dashoffset","updateRange","newCharsFlag","totalChars","textProperty","divisor","_s","finalS","finalE","getMult","easer","ne","xe","tot","setPathData","setLength","doubleArrayLength","concat","setXYAt","pos","setTripleAt","vX","vY","oX","oY","iX","iY","interpolateShape","isCurrentRender","keyPropS","keyPropE","isHold","vertexValue","hasModified","interpolateShapeCurrentTime","_lastIndex","localShapeCollection","getShapeValue","resetShape","ShapeProperty","__shapeObject","shape_pool","shapeCollection_pool","newShapeCollection","addShape","KeyframedShapeProperty","newShape","dataProp","RectShapeProperty","EllShapeProperty","StarShapeProperty","getConstructorFunction","getKeyframedConstructorFunction","convertEllToPath","p0","s0","s1","cPoint","convertPolygonToPath","numPts","rad","roundness","os","perimSegment","currentAng","ox","oy","convertStarToPath","longFlag","longRad","shortRad","ir","longRound","shortRound","is","longPerimSegment","shortPerimSegment","convertToPath","convertRectToPath","v0","ShapeModifiers","registerModifier","modifiers","getModifier","initModifierProperties","addShapeToModifier","shape","sValue","eValue","oValue","calculateShapeEdges","shapeLength","totalModifierLength","segmentOb","shapeSegments","shapeS","shapeE","processShapes","shapePaths","pathsData","totalShapeLength","releaseShapes","edges","newShapesData","addShapes","lastShape","pop","addPaths","addSegment","shapePath","shapeSegment","currentLengthData","segmentCount","segment","rd","processPath","cloned_path","currentV","currentI","currentO","closerV","distance","newPosPerc","index","pMatrix","rMatrix","sMatrix","tMatrix","matrix","applyTransforms","scaleX","scaleY","elemsData","_currentCopies","_elements","_groups","cont","unshift","resetElements","_processed","cloneElements","newElements","changeGroupRender","renderFlag","_render","copies","ceil","group","ix","reloadShapes","offsetModulo","roundOffset","pProps","rProps","sProps","iteration","items","itemsTransform","mProps","release","ImagePreloader","imageLoaded","loadedAssets","totalImages","imagesLoadedCb","getAssetsPath","assetsPath","imagePath","indexOf","u","loadImage","img","addEventListener","src","loadAssets","cb","totalAssets","setPath","setAssetsPath","featureSupport","createAlphaToLuminanceFilter","searchProperties","animatorData","animatorProps","fh","fs","fb","maskManager","getMaskProperty","getMeasures","xPos","yPos","animators","matrixHelper","mHelper","renderedLettersCount","letters","pathInfo","tLength","pi","currentPoint","prevPoint","currentLength","segmentInd","pointInd","tanAngle","animatorSelector","letterValue","yOff","firstLine","offf","xPathPos","yPathPos","elemOpacity","letterSw","letterSc","letterFc","letterO","initPathPos","initSegmentInd","initPointInd","currentLine","lineLength","letterM","letterP","defaultPropsArray","line","extra","an","animatorOffset","anIndexes","add","rot","atan","ps","update","updated","setCurrentData","textDocumentData","textKeys","completeTextData","newLineFlag","charData","anchorGrouping","currentSize","currentPos","lineWidth","maxLineWidth","styles","toLowerCase","trackingOffset","lastSpaceIndex","charAt","currentChar","uncollapsedSpaces","letterData","based","indexes","rn","newInd","currentInd","updateDocumentData","newData","dData","pooling","releaseArray","shapePathsCollection","cloned","shapeCollection","originCollection","checkLayers","num","ip","buildItem","checkPendingElements","createItem","layer","createImage","createComp","createSolid","createShape","createText","createCamera","createBase","Error","includeLayers","newLayers","setProjectInterface","pInterface","projectInterface","initItems","buildElementParenting","parentName","hierarchy","_isParent","setHierarchy","addPendingElement","configAnimation","animData","wrapper","compSize","fr","maskId","updateContainerSize","registerComposition","initExpressions","appendElementInPos","setMatte","checkParenting","renderFrame","currentFrame","prepareFrame","newElement","getBaseElement","nextElement","insertBefore","hide","display","show","searchExtraCompositions","floatingContainer","finalMat","finalTransform","mProp","getMaskelement","pathNodes","pathString","checkMasks","isVisible","elemMdf","sr","currentFrameNum","globalToLocal","transforms","ptNew","layerInterface","LayerExpressionInterface","registerMaskInterface","effectsInterface","EffectsExpressionInterface","createEffectsInterface","registerEffectsInterface","compInterface","CompExpressionInterface","shapeInterface","ShapeExpressionInterface","createShapeInterface","textInterface","TextExpressionInterface","setBlendMode","blendModeValue","bm","EffectsManager","hidden","lastNum","matMdf","opMdf","opacity","ao","createElements","addMasks","resetHierarchy","getHierarchy","getLayerSize","sourceRectAtTime","layerElementParent","masker","gg","maskGroup","maskGrouper","alphaRect","ln","cp","clipId","cpGroup","effectsManager","parentTransform","hd","identityMatrix","lcEnum","1","2","3","ljEnum","searchProcessedElement","addProcessedElement","buildExpressionInterface","searchShapes","setGradientData","pathElement","gfill","gradientId","stops","gf","cst","setGradientOpacity","styleOb","opFill","opacityId","ost","msElem","createStyleElement","level","elementData","ld","lvl","lc","lj","ml","pElem","createGroupElement","gr","createTransformElement","createShapeElement","ownTransformers","caches","transformers","lStr","addShapeToModifiers","setElementStyles","renderModifiers","render","currentTransform","modifier","processedPos","ownStyles","ownModifiers","parentMatrix","renderShape","renderPath","renderFill","renderGradient","renderStroke","buildShapeString","shapeString","itemData","pathStringTransformed","redraw","lLen","iterations","styleData","styleElem","attr1","attr2","cValues","oValues","ang","textAnimator","buildNewText","createPathShape","shapeStr","applyTextPropertiesToMatrix","lineNumber","buildColor","colorData","emptyProp","textContainer","usesGlyphs","tSpan","tElement","justify","cachedSpansLength","setAttributeNS","time","renderLetters","textBox","getBBox","bbox","renderedLetter","textSpan","colorBlack","colorWhite","initialize","groupPath","elemChildren","children","childNodes","removeAttribute","pathMasker","dasharrayValue","getTotalLength","units","color1","color2","color3","tableR","tableG","tableB","feFunc","getTableValue","inputBlack","inputWhite","gamma","outputBlack","outputWhite","colorValue","table","outputDelta","inputDelta","col","setElementAsMask","timeRemapped","renderParent","setElements","elems","getElements","assetPath","innerElem","removeElement","ev","animItem","registeredAnimations","isPaused","subtractPlayingCount","AnimationItem","setupAnimation","setData","addPlayingCount","playingAnimationsNum","activate","idled","setParams","resume","nowTime","elapsedTime","advanceTime","first","animElements","getElementsByClassName","getElementsByTagName","div","isLoaded","currentRawFrame","frameMult","playSpeed","playDirection","playCount","prerenderFramesFlag","animationID","scaleMode","timeCompleted","segmentPos","pendingSegment","_idle","self","context","animType","CanvasRenderer","HybridRenderer","parseInt","prerender","autoloadSegments","xhr","XMLHttpRequest","lastIndexOf","fileName","open","send","onreadystatechange","status","responseText","response","err","wrapperAttributes","attributes","getNamedItem","tf","loadNextSegment","trigger","shift","segmentPath","loadSegments","_this","imagePreloader","updaFrameModifier","waitForFontsLoaded","checkLoaded","checkFontsLoaded","elementLoaded","gotoFrame","setSubframe","setCurrentRawFrameValue","frameModifier","goToAndPlay","adjustSegment","updateAnimation","setSegment","end","pendingFrame","playSegments","forceFlag","resetSegments","checkSegments","remove","onEnterFrame","onLoopComplete","onComplete","onSegmentStart","onDestroy","getPath","getAssets","triggerEvent","bodymovinjs","__getFactory","version","scripts","myScript","queryString","variable","vars","pair","decodeURIComponent","setInterval","rawScriptExports","compiledTemplate","injectStyles","scopeId","moduleIdentifier","scriptExports","staticRenderFns","_scopeId","hook","$vnode","ssrContext","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","existing","beforeCreate","_vm","_h","$createElement","_self","_c","ref","_withStripped"],"mappings":"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","file":"lib/vue-lottie.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vue-lottie\"] = factory();\n\telse\n\t\troot[\"vue-lottie\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vue-lottie\"] = factory();\n\telse\n\t\troot[\"vue-lottie\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar disposed = false\nvar Component = __webpack_require__(4)(\n  /* script */\n  __webpack_require__(2),\n  /* template */\n  __webpack_require__(5),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\nComponent.options.__file = \"/Users/sergeysavin/Documents/Projects/vue-lottie/src/components/vue-lottie.vue\"\nif (Component.esModule && Object.keys(Component.esModule).some(function (key) {return key !== \"default\" && key.substr(0, 2) !== \"__\"})) {console.error(\"named exports are not supported in *.vue files.\")}\nif (Component.options.functional) {console.error(\"[vue-loader] vue-lottie.vue: functional components are not supported with templates, they should use render functions.\")}\n\n/* hot reload */\nif (false) {(function () {\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), false)\n  if (!hotAPI.compatible) return\n  module.hot.accept()\n  if (!module.hot.data) {\n    hotAPI.createRecord(\"data-v-91474f0e\", Component.options)\n  } else {\n    hotAPI.reload(\"data-v-91474f0e\", Component.options)\n  }\n  module.hot.dispose(function (data) {\n    disposed = true\n  })\n})()}\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_vue_lottie__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_vue_lottie___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__components_vue_lottie__);\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (__WEBPACK_IMPORTED_MODULE_0__components_vue_lottie___default.a);\n\n/***/ }),\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_bodymovin_build_player_bodymovin_light_js__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_bodymovin_build_player_bodymovin_light_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_bodymovin_build_player_bodymovin_light_js__);\n//\n//\n//\n//\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    props: {\n        data: {\n            type: Object,\n            required: true\n        },\n        loop: Boolean,\n        autoplay: {\n            type: Boolean,\n            default: true\n        },\n        settings: Object,\n        height: Number,\n        width: Number\n    },\n\n    data: function data() {\n        return {\n            animation: null\n        };\n    },\n\n    computed: {\n        style: function style() {\n            var style = {};\n            if (this.width) {\n                style.width = this.width + 'px';\n            }\n            if (this.height) {\n                style.height = this.height + 'px';\n            }\n            return style;\n        }\n    },\n    methods: {\n        play: function play() {\n            this.animation.play();\n        },\n        pause: function pause() {\n            this.animation.pause();\n        },\n        stop: function stop() {\n            this.animation.stop();\n        },\n        setSpeed: function setSpeed(val) {\n            this.animation.setSpeed(val);\n        }\n    },\n    mounted: function mounted() {\n        this.animation = __WEBPACK_IMPORTED_MODULE_0_bodymovin_build_player_bodymovin_light_js___default.a.loadAnimation({\n            container: this.$refs.lavContainer,\n            renderer: 'svg',\n            loop: this.loop,\n            autoplay: this.autoplay,\n            animationData: this.data,\n            rendererSettings: this.settings\n        });\n    }\n});\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;(function(root, factory) {\r\n    if (true) {\r\n        !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\r\n            return factory(root);\r\n        }.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n    } else if (typeof module === \"object\" && module.exports) {\r\n        module.exports = factory(root);\r\n    } else {\r\n        root.bodymovin = factory(root);\r\n    }\r\n}((window || {}), function(window) {\r\n    var svgNS = \"http://www.w3.org/2000/svg\";\r\n\r\nvar locationHref = '';\r\n\nvar subframeEnabled = true;\r\nvar expressionsPlugin;\r\nvar isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\r\nvar cachedColors = {};\r\nvar bm_rounder = Math.round;\r\nvar bm_rnd;\r\nvar bm_pow = Math.pow;\r\nvar bm_sqrt = Math.sqrt;\r\nvar bm_abs = Math.abs;\r\nvar bm_floor = Math.floor;\r\nvar bm_max = Math.max;\r\nvar bm_min = Math.min;\r\nvar blitter = 10;\r\n\r\nvar BMMath = {};\r\n(function(){\r\n    var propertyNames = Object.getOwnPropertyNames(Math);\r\n    var i, len = propertyNames.length;\r\n    for(i=0;i<len;i+=1){\r\n        BMMath[propertyNames[i]] = Math[propertyNames[i]];\r\n    }\r\n}());\r\n\r\nfunction ProjectInterface(){return {}};\r\n\r\nBMMath.random = Math.random;\r\nBMMath.abs = function(val){\r\n    var tOfVal = typeof val;\r\n    if(tOfVal === 'object' && val.length){\r\n        var absArr = Array.apply(null,{length:val.length});\r\n        var i, len = val.length;\r\n        for(i=0;i<len;i+=1){\r\n            absArr[i] = Math.abs(val[i]);\r\n        }\r\n        return absArr;\r\n    }\r\n    return Math.abs(val);\r\n\r\n}\r\nvar defaultCurveSegments = 150;\r\nvar degToRads = Math.PI/180;\r\nvar roundCorner = 0.5519;\r\n\r\nfunction roundValues(flag){\r\n    if(flag){\r\n        bm_rnd = Math.round;\r\n    }else{\r\n        bm_rnd = function(val){\r\n            return val;\r\n        };\r\n    }\r\n}\r\nroundValues(false);\r\n\r\nfunction roundTo2Decimals(val){\r\n    return Math.round(val*10000)/10000;\r\n}\r\n\r\nfunction roundTo3Decimals(val){\r\n    return Math.round(val*100)/100;\r\n}\r\n\r\nfunction styleDiv(element){\r\n    element.style.position = 'absolute';\r\n    element.style.top = 0;\r\n    element.style.left = 0;\r\n    element.style.display = 'block';\r\n    element.style.transformOrigin = element.style.webkitTransformOrigin = '0 0';\r\n    element.style.backfaceVisibility  = element.style.webkitBackfaceVisibility = 'visible';\r\n    element.style.transformStyle = element.style.webkitTransformStyle = element.style.mozTransformStyle = \"preserve-3d\";\r\n}\r\n\r\nfunction styleUnselectableDiv(element){\r\n    element.style.userSelect = 'none';\r\n    element.style.MozUserSelect = 'none';\r\n    element.style.webkitUserSelect = 'none';\r\n    element.style.oUserSelect = 'none';\r\n\r\n}\r\n\r\nfunction BMEnterFrameEvent(n,c,t,d){\r\n    this.type = n;\r\n    this.currentTime = c;\r\n    this.totalTime = t;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMCompleteEvent(n,d){\r\n    this.type = n;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMCompleteLoopEvent(n,c,t,d){\r\n    this.type = n;\r\n    this.currentLoop = c;\r\n    this.totalLoops = t;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMSegmentStartEvent(n,f,t){\r\n    this.type = n;\r\n    this.firstFrame = f;\r\n    this.totalFrames = t;\r\n}\r\n\r\nfunction BMDestroyEvent(n,t){\r\n    this.type = n;\r\n    this.target = t;\r\n}\r\n\r\nfunction _addEventListener(eventName, callback){\r\n\r\n    if (!this._cbs[eventName]){\r\n        this._cbs[eventName] = [];\r\n    }\r\n    this._cbs[eventName].push(callback);\r\n\r\n\treturn function() {\r\n\t\tthis.removeEventListener(eventName, callback);\r\n\t}.bind(this);\r\n}\r\n\r\nfunction _removeEventListener(eventName,callback){\r\n\r\n    if (!callback){\r\n        this._cbs[eventName] = null;\r\n    }else if(this._cbs[eventName]){\r\n        var i = 0, len = this._cbs[eventName].length;\r\n        while(i<len){\r\n            if(this._cbs[eventName][i] === callback){\r\n                this._cbs[eventName].splice(i,1);\r\n                i -=1;\r\n                len -= 1;\r\n            }\r\n            i += 1;\r\n        }\r\n        if(!this._cbs[eventName].length){\r\n            this._cbs[eventName] = null;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nfunction _triggerEvent(eventName, args){\r\n    if (this._cbs[eventName]) {\r\n        var len = this._cbs[eventName].length;\r\n        for (var i = 0; i < len; i++){\r\n            this._cbs[eventName][i](args);\r\n        }\r\n    }\r\n}\r\n\r\nfunction randomString(length, chars){\r\n    if(chars === undefined){\r\n        chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890';\r\n    }\r\n    var i;\r\n    var result = '';\r\n    for (i = length; i > 0; --i) result += chars[Math.round(Math.random() * (chars.length - 1))];\r\n    return result;\r\n}\r\n\r\nfunction HSVtoRGB(h, s, v) {\r\n    var r, g, b, i, f, p, q, t;\r\n    if (arguments.length === 1) {\r\n        s = h.s, v = h.v, h = h.h;\r\n    }\r\n    i = Math.floor(h * 6);\r\n    f = h * 6 - i;\r\n    p = v * (1 - s);\r\n    q = v * (1 - f * s);\r\n    t = v * (1 - (1 - f) * s);\r\n    switch (i % 6) {\r\n        case 0: r = v, g = t, b = p; break;\r\n        case 1: r = q, g = v, b = p; break;\r\n        case 2: r = p, g = v, b = t; break;\r\n        case 3: r = p, g = q, b = v; break;\r\n        case 4: r = t, g = p, b = v; break;\r\n        case 5: r = v, g = p, b = q; break;\r\n    }\r\n    return [ r,\r\n        g,\r\n         b ];\r\n}\r\n\r\nfunction RGBtoHSV(r, g, b) {\r\n    if (arguments.length === 1) {\r\n        g = r.g, b = r.b, r = r.r;\r\n    }\r\n    var max = Math.max(r, g, b), min = Math.min(r, g, b),\r\n        d = max - min,\r\n        h,\r\n        s = (max === 0 ? 0 : d / max),\r\n        v = max / 255;\r\n\r\n    switch (max) {\r\n        case min: h = 0; break;\r\n        case r: h = (g - b) + d * (g < b ? 6: 0); h /= 6 * d; break;\r\n        case g: h = (b - r) + d * 2; h /= 6 * d; break;\r\n        case b: h = (r - g) + d * 4; h /= 6 * d; break;\r\n    }\r\n\r\n    return [\r\n         h,\r\n         s,\r\n         v\r\n    ];\r\n}\r\n\r\nfunction addSaturationToRGB(color,offset){\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[1] += offset;\r\n    if (hsv[1] > 1) {\r\n        hsv[1] = 1;\r\n    }\r\n    else if (hsv[1] <= 0) {\r\n        hsv[1] = 0;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nfunction addBrightnessToRGB(color,offset){\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[2] += offset;\r\n    if (hsv[2] > 1) {\r\n        hsv[2] = 1;\r\n    }\r\n    else if (hsv[2] < 0) {\r\n        hsv[2] = 0;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nfunction addHueToRGB(color,offset) {\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[0] += offset/360;\r\n    if (hsv[0] > 1) {\r\n        hsv[0] -= 1;\r\n    }\r\n    else if (hsv[0] < 0) {\r\n        hsv[0] += 1;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nfunction componentToHex(c) {\r\n    var hex = c.toString(16);\r\n    return hex.length == 1 ? '0' + hex : hex;\r\n}\r\n\r\nvar rgbToHex = (function(){\r\n    var colorMap = [];\r\n    var i;\r\n    var hex;\r\n    for(i=0;i<256;i+=1){\r\n        hex = i.toString(16);\r\n        colorMap[i] = hex.length == 1 ? '0' + hex : hex;\r\n    }\r\n\r\n    return function(r, g, b) {\r\n        if(r<0){\r\n            r = 0;\r\n        }\r\n        if(g<0){\r\n            g = 0;\r\n        }\r\n        if(b<0){\r\n            b = 0;\r\n        }\r\n        return '#' + colorMap[r] + colorMap[g] + colorMap[b];\r\n    };\r\n}());\r\n\r\nfunction fillToRgba(hex,alpha){\r\n    if(!cachedColors[hex]){\r\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n        cachedColors[hex] = parseInt(result[1], 16)+','+parseInt(result[2], 16)+','+parseInt(result[3], 16);\r\n    }\r\n    return 'rgba('+cachedColors[hex]+','+alpha+')';\r\n}\r\n\r\nvar fillColorToString = (function(){\r\n\r\n    var colorMap = [];\r\n    return function(colorArr,alpha){\r\n        if(alpha !== undefined){\r\n            colorArr[3] = alpha;\r\n        }\r\n        if(!colorMap[colorArr[0]]){\r\n            colorMap[colorArr[0]] = {};\r\n        }\r\n        if(!colorMap[colorArr[0]][colorArr[1]]){\r\n            colorMap[colorArr[0]][colorArr[1]] = {};\r\n        }\r\n        if(!colorMap[colorArr[0]][colorArr[1]][colorArr[2]]){\r\n            colorMap[colorArr[0]][colorArr[1]][colorArr[2]] = {};\r\n        }\r\n        if(!colorMap[colorArr[0]][colorArr[1]][colorArr[2]][colorArr[3]]){\r\n            colorMap[colorArr[0]][colorArr[1]][colorArr[2]][colorArr[3]] = 'rgba(' + colorArr.join(',')+')';\r\n        }\r\n        return colorMap[colorArr[0]][colorArr[1]][colorArr[2]][colorArr[3]];\r\n    };\r\n}());\r\n\r\nfunction RenderedFrame(tr,o) {\r\n    this.tr = tr;\r\n    this.o = o;\r\n}\r\n\r\nfunction iterateDynamicProperties(num){\r\n    var i, len = this.dynamicProperties;\r\n    for(i=0;i<len;i+=1){\r\n        this.dynamicProperties[i].getValue(num);\r\n    }\r\n}\r\n\r\nfunction reversePath(paths){\r\n    var newI = [], newO = [], newV = [];\r\n    var i, len, newPaths = {};\r\n    var init = 0;\r\n    if (paths.c) {\r\n        newI[0] = paths.o[0];\r\n        newO[0] = paths.i[0];\r\n        newV[0] = paths.v[0];\r\n        init = 1;\r\n    }\r\n    len = paths.i.length;\r\n    var cnt = len - 1;\r\n\r\n    for (i = init; i < len; i += 1) {\r\n        newI.push(paths.o[cnt]);\r\n        newO.push(paths.i[cnt]);\r\n        newV.push(paths.v[cnt]);\r\n        cnt -= 1;\r\n    }\r\n\r\n    newPaths.i = newI;\r\n    newPaths.o = newO;\r\n    newPaths.v = newV;\r\n\r\n    return newPaths;\r\n}\n/*!\r\n Transformation Matrix v2.0\r\n (c) Epistemex 2014-2015\r\n www.epistemex.com\r\n By Ken Fyrstenberg\r\n Contributions by leeoniya.\r\n License: MIT, header required.\r\n */\r\n\r\n/**\r\n * 2D transformation matrix object initialized with identity matrix.\r\n *\r\n * The matrix can synchronize a canvas context by supplying the context\r\n * as an argument, or later apply current absolute transform to an\r\n * existing context.\r\n *\r\n * All values are handled as floating point values.\r\n *\r\n * @param {CanvasRenderingContext2D} [context] - Optional context to sync with Matrix\r\n * @prop {number} a - scale x\r\n * @prop {number} b - shear y\r\n * @prop {number} c - shear x\r\n * @prop {number} d - scale y\r\n * @prop {number} e - translate x\r\n * @prop {number} f - translate y\r\n * @prop {CanvasRenderingContext2D|null} [context=null] - set or get current canvas context\r\n * @constructor\r\n */\r\n\r\nvar Matrix = (function(){\r\n\r\n    function reset(){\r\n        this.props[0] = 1;\r\n        this.props[1] = 0;\r\n        this.props[2] = 0;\r\n        this.props[3] = 0;\r\n        this.props[4] = 0;\r\n        this.props[5] = 1;\r\n        this.props[6] = 0;\r\n        this.props[7] = 0;\r\n        this.props[8] = 0;\r\n        this.props[9] = 0;\r\n        this.props[10] = 1;\r\n        this.props[11] = 0;\r\n        this.props[12] = 0;\r\n        this.props[13] = 0;\r\n        this.props[14] = 0;\r\n        this.props[15] = 1;\r\n        return this;\r\n    }\r\n\r\n    function rotate(angle) {\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = Math.cos(angle);\r\n        var mSin = Math.sin(angle);\r\n        return this._t(mCos, -mSin,  0, 0\r\n            , mSin,  mCos, 0, 0\r\n            , 0,  0,  1, 0\r\n            , 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateX(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = Math.cos(angle);\r\n        var mSin = Math.sin(angle);\r\n        return this._t(1, 0, 0, 0\r\n            , 0, mCos, -mSin, 0\r\n            , 0, mSin,  mCos, 0\r\n            , 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateY(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = Math.cos(angle);\r\n        var mSin = Math.sin(angle);\r\n        return this._t(mCos,  0,  mSin, 0\r\n            , 0, 1, 0, 0\r\n            , -mSin,  0,  mCos, 0\r\n            , 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateZ(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = Math.cos(angle);\r\n        var mSin = Math.sin(angle);\r\n        return this._t(mCos, -mSin,  0, 0\r\n            , mSin,  mCos, 0, 0\r\n            , 0,  0,  1, 0\r\n            , 0, 0, 0, 1);\r\n    }\r\n\r\n    function shear(sx,sy){\r\n        return this._t(1, sy, sx, 1, 0, 0);\r\n    }\r\n\r\n    function skew(ax, ay){\r\n        return this.shear(Math.tan(ax), Math.tan(ay));\r\n    }\r\n\r\n    function skewFromAxis(ax, angle){\r\n        var mCos = Math.cos(angle);\r\n        var mSin = Math.sin(angle);\r\n        return this._t(mCos, mSin,  0, 0\r\n            , -mSin,  mCos, 0, 0\r\n            , 0,  0,  1, 0\r\n            , 0, 0, 0, 1)\r\n            ._t(1, 0,  0, 0\r\n            , Math.tan(ax),  1, 0, 0\r\n            , 0,  0,  1, 0\r\n            , 0, 0, 0, 1)\r\n            ._t(mCos, -mSin,  0, 0\r\n            , mSin,  mCos, 0, 0\r\n            , 0,  0,  1, 0\r\n            , 0, 0, 0, 1);\r\n        //return this._t(mCos, mSin, -mSin, mCos, 0, 0)._t(1, 0, Math.tan(ax), 1, 0, 0)._t(mCos, -mSin, mSin, mCos, 0, 0);\r\n    }\r\n\r\n    function scale(sx, sy, sz) {\r\n        sz = isNaN(sz) ? 1 : sz;\r\n        if(sx == 1 && sy == 1 && sz == 1){\r\n            return this;\r\n        }\r\n        return this._t(sx, 0, 0, 0, 0, sy, 0, 0, 0, 0, sz, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function setTransform(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {\r\n        this.props[0] = a;\r\n        this.props[1] = b;\r\n        this.props[2] = c;\r\n        this.props[3] = d;\r\n        this.props[4] = e;\r\n        this.props[5] = f;\r\n        this.props[6] = g;\r\n        this.props[7] = h;\r\n        this.props[8] = i;\r\n        this.props[9] = j;\r\n        this.props[10] = k;\r\n        this.props[11] = l;\r\n        this.props[12] = m;\r\n        this.props[13] = n;\r\n        this.props[14] = o;\r\n        this.props[15] = p;\r\n        return this;\r\n    }\r\n\r\n    function translate(tx, ty, tz) {\r\n        tz = tz || 0;\r\n        if(tx !== 0 || ty !== 0 || tz !== 0){\r\n            return this._t(1,0,0,0,0,1,0,0,0,0,1,0,tx,ty,tz,1);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function transform(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2, m2, n2, o2, p2) {\r\n\r\n        if(a2 === 1 && b2 === 0 && c2 === 0 && d2 === 0 && e2 === 0 && f2 === 1 && g2 === 0 && h2 === 0 && i2 === 0 && j2 === 0 && k2 === 1 && l2 === 0){\r\n            if(m2 !== 0 || n2 !== 0 || o2 !== 0){\r\n\r\n                this.props[12] = this.props[12] * a2 + this.props[13] * e2 + this.props[14] * i2 + this.props[15] * m2 ;\r\n                this.props[13] = this.props[12] * b2 + this.props[13] * f2 + this.props[14] * j2 + this.props[15] * n2 ;\r\n                this.props[14] = this.props[12] * c2 + this.props[13] * g2 + this.props[14] * k2 + this.props[15] * o2 ;\r\n                this.props[15] = this.props[12] * d2 + this.props[13] * h2 + this.props[14] * l2 + this.props[15] * p2 ;\r\n            }\r\n            this._identityCalculated = false;\r\n            return this;\r\n        }\r\n\r\n        var a1 = this.props[0];\r\n        var b1 = this.props[1];\r\n        var c1 = this.props[2];\r\n        var d1 = this.props[3];\r\n        var e1 = this.props[4];\r\n        var f1 = this.props[5];\r\n        var g1 = this.props[6];\r\n        var h1 = this.props[7];\r\n        var i1 = this.props[8];\r\n        var j1 = this.props[9];\r\n        var k1 = this.props[10];\r\n        var l1 = this.props[11];\r\n        var m1 = this.props[12];\r\n        var n1 = this.props[13];\r\n        var o1 = this.props[14];\r\n        var p1 = this.props[15];\r\n\r\n        /* matrix order (canvas compatible):\r\n         * ace\r\n         * bdf\r\n         * 001\r\n         */\r\n        this.props[0] = a1 * a2 + b1 * e2 + c1 * i2 + d1 * m2;\r\n        this.props[1] = a1 * b2 + b1 * f2 + c1 * j2 + d1 * n2 ;\r\n        this.props[2] = a1 * c2 + b1 * g2 + c1 * k2 + d1 * o2 ;\r\n        this.props[3] = a1 * d2 + b1 * h2 + c1 * l2 + d1 * p2 ;\r\n\r\n        this.props[4] = e1 * a2 + f1 * e2 + g1 * i2 + h1 * m2 ;\r\n        this.props[5] = e1 * b2 + f1 * f2 + g1 * j2 + h1 * n2 ;\r\n        this.props[6] = e1 * c2 + f1 * g2 + g1 * k2 + h1 * o2 ;\r\n        this.props[7] = e1 * d2 + f1 * h2 + g1 * l2 + h1 * p2 ;\r\n\r\n        this.props[8] = i1 * a2 + j1 * e2 + k1 * i2 + l1 * m2 ;\r\n        this.props[9] = i1 * b2 + j1 * f2 + k1 * j2 + l1 * n2 ;\r\n        this.props[10] = i1 * c2 + j1 * g2 + k1 * k2 + l1 * o2 ;\r\n        this.props[11] = i1 * d2 + j1 * h2 + k1 * l2 + l1 * p2 ;\r\n\r\n        this.props[12] = m1 * a2 + n1 * e2 + o1 * i2 + p1 * m2 ;\r\n        this.props[13] = m1 * b2 + n1 * f2 + o1 * j2 + p1 * n2 ;\r\n        this.props[14] = m1 * c2 + n1 * g2 + o1 * k2 + p1 * o2 ;\r\n        this.props[15] = m1 * d2 + n1 * h2 + o1 * l2 + p1 * p2 ;\r\n\r\n        this._identityCalculated = false;\r\n        return this;\r\n    }\r\n\r\n    function isIdentity() {\r\n        if(!this._identityCalculated){\r\n            this._identity = !(this.props[0] !== 1 || this.props[1] !== 0 || this.props[2] !== 0 || this.props[3] !== 0\r\n                || this.props[4] !== 0 || this.props[5] !== 1 || this.props[6] !== 0 || this.props[7] !== 0\r\n                || this.props[8] !== 0 || this.props[9] !== 0 || this.props[10] !== 1 || this.props[11] !== 0\r\n                || this.props[12] !== 0 || this.props[13] !== 0 || this.props[14] !== 0 || this.props[15] !== 1);\r\n            this._identityCalculated = true;\r\n        }\r\n        return this._identity;\r\n    }\r\n\r\n    function clone(matr){\r\n        var i;\r\n        for(i=0;i<16;i+=1){\r\n            matr.props[i] = this.props[i];\r\n        }\r\n    }\r\n\r\n    function cloneFromProps(props){\r\n        var i;\r\n        for(i=0;i<16;i+=1){\r\n            this.props[i] = props[i];\r\n        }\r\n    }\r\n\r\n    function applyToPoint(x, y, z) {\r\n\r\n        return {\r\n            x: x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],\r\n            y: x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],\r\n            z: x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]\r\n        };\r\n        /*return {\r\n         x: x * me.a + y * me.c + me.e,\r\n         y: x * me.b + y * me.d + me.f\r\n         };*/\r\n    }\r\n    function applyToX(x, y, z) {\r\n        return x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12];\r\n    }\r\n    function applyToY(x, y, z) {\r\n        return x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13];\r\n    }\r\n    function applyToZ(x, y, z) {\r\n        return x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14];\r\n    }\r\n\r\n    function inversePoint(pt) {\r\n        var determinant = this.props[0] * this.props[5] - this.props[1] * this.props[4];\r\n        var a = this.props[5]/determinant;\r\n        var b = - this.props[1]/determinant;\r\n        var c = - this.props[4]/determinant;\r\n        var d = this.props[0]/determinant;\r\n        var e = (this.props[4] * this.props[13] - this.props[5] * this.props[12])/determinant;\r\n        var f = - (this.props[0] * this.props[13] - this.props[1] * this.props[12])/determinant;\r\n        return [pt[0] * a + pt[1] * c + e, pt[0] * b + pt[1] * d + f, 0];\r\n    }\r\n\r\n    function inversePoints(pts){\r\n        var i, len = pts.length, retPts = [];\r\n        for(i=0;i<len;i+=1){\r\n            retPts[i] = inversePoint(pts[i]);\r\n        }\r\n        return retPts;\r\n    }\r\n\r\n    function applyToPointArray(x,y,z,dimensions){\r\n        if(dimensions && dimensions === 2) {\r\n            var arr = point_pool.newPoint();\r\n            arr[0] = x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12]; \r\n            arr[1] = x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13]; \r\n            return arr;    \r\n        }\r\n        return [x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]];\r\n    }\r\n    function applyToPointStringified(x, y) {\r\n        if(this.isIdentity()) {\r\n            return x + ',' + y;\r\n        }\r\n        return (bm_rnd(x * this.props[0] + y * this.props[4] + this.props[12]))+','+(bm_rnd(x * this.props[1] + y * this.props[5] + this.props[13]));\r\n    }\r\n\r\n    function toArray() {\r\n        return [this.props[0],this.props[1],this.props[2],this.props[3],this.props[4],this.props[5],this.props[6],this.props[7],this.props[8],this.props[9],this.props[10],this.props[11],this.props[12],this.props[13],this.props[14],this.props[15]];\r\n    }\r\n\r\n    function toCSS() {\r\n        if(isSafari){\r\n            return \"matrix3d(\" + roundTo2Decimals(this.props[0]) + ',' + roundTo2Decimals(this.props[1]) + ',' + roundTo2Decimals(this.props[2]) + ',' + roundTo2Decimals(this.props[3]) + ',' + roundTo2Decimals(this.props[4]) + ',' + roundTo2Decimals(this.props[5]) + ',' + roundTo2Decimals(this.props[6]) + ',' + roundTo2Decimals(this.props[7]) + ',' + roundTo2Decimals(this.props[8]) + ',' + roundTo2Decimals(this.props[9]) + ',' + roundTo2Decimals(this.props[10]) + ',' + roundTo2Decimals(this.props[11]) + ',' + roundTo2Decimals(this.props[12]) + ',' + roundTo2Decimals(this.props[13]) + ',' + roundTo2Decimals(this.props[14]) + ',' + roundTo2Decimals(this.props[15]) + ')';\r\n        } else {\r\n            this.cssParts[1] = this.props.join(',');\r\n            return this.cssParts.join('');\r\n        }\r\n    }\r\n\r\n    function to2dCSS() {\r\n        return \"matrix(\" + roundTo2Decimals(this.props[0]) + ',' + roundTo2Decimals(this.props[1]) + ',' + roundTo2Decimals(this.props[4]) + ',' + roundTo2Decimals(this.props[5]) + ',' + roundTo2Decimals(this.props[12]) + ',' + roundTo2Decimals(this.props[13]) + \")\";\r\n    }\r\n\r\n    function toString() {\r\n        return \"\" + this.toArray();\r\n    }\r\n\r\n    return function(){\r\n        this.reset = reset;\r\n        this.rotate = rotate;\r\n        this.rotateX = rotateX;\r\n        this.rotateY = rotateY;\r\n        this.rotateZ = rotateZ;\r\n        this.skew = skew;\r\n        this.skewFromAxis = skewFromAxis;\r\n        this.shear = shear;\r\n        this.scale = scale;\r\n        this.setTransform = setTransform;\r\n        this.translate = translate;\r\n        this.transform = transform;\r\n        this.applyToPoint = applyToPoint;\r\n        this.applyToX = applyToX;\r\n        this.applyToY = applyToY;\r\n        this.applyToZ = applyToZ;\r\n        this.applyToPointArray = applyToPointArray;\r\n        this.applyToPointStringified = applyToPointStringified;\r\n        this.toArray = toArray;\r\n        this.toCSS = toCSS;\r\n        this.to2dCSS = to2dCSS;\r\n        this.toString = toString;\r\n        this.clone = clone;\r\n        this.cloneFromProps = cloneFromProps;\r\n        this.inversePoints = inversePoints;\r\n        this.inversePoint = inversePoint;\r\n        this._t = this.transform;\r\n        this.isIdentity = isIdentity;\r\n        this._identity = true;\r\n        this._identityCalculated = false;\r\n\r\n        this.props = [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];\r\n\r\n        this.cssParts = ['matrix3d(','',')'];\r\n    }\r\n}());\r\n\r\nfunction Matrix() {\r\n\r\n\r\n}\r\n\n/*\r\n Copyright 2014 David Bau.\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining\r\n a copy of this software and associated documentation files (the\r\n \"Software\"), to deal in the Software without restriction, including\r\n without limitation the rights to use, copy, modify, merge, publish,\r\n distribute, sublicense, and/or sell copies of the Software, and to\r\n permit persons to whom the Software is furnished to do so, subject to\r\n the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be\r\n included in all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\n IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\n CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\n TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n */\r\n\r\n(function (pool, math) {\r\n//\r\n// The following constants are related to IEEE 754 limits.\r\n//\r\n    var global = this,\r\n        width = 256,        // each RC4 output is 0 <= x < 256\r\n        chunks = 6,         // at least six RC4 outputs for each double\r\n        digits = 52,        // there are 52 significant digits in a double\r\n        rngname = 'random', // rngname: name for Math.random and Math.seedrandom\r\n        startdenom = math.pow(width, chunks),\r\n        significance = math.pow(2, digits),\r\n        overflow = significance * 2,\r\n        mask = width - 1,\r\n        nodecrypto;         // node.js crypto module, initialized at the bottom.\r\n\r\n//\r\n// seedrandom()\r\n// This is the seedrandom function described above.\r\n//\r\n    function seedrandom(seed, options, callback) {\r\n        var key = [];\r\n        options = (options == true) ? { entropy: true } : (options || {});\r\n\r\n        // Flatten the seed string or build one from local entropy if needed.\r\n        var shortseed = mixkey(flatten(\r\n            options.entropy ? [seed, tostring(pool)] :\r\n                (seed == null) ? autoseed() : seed, 3), key);\r\n\r\n        // Use the seed to initialize an ARC4 generator.\r\n        var arc4 = new ARC4(key);\r\n\r\n        // This function returns a random double in [0, 1) that contains\r\n        // randomness in every bit of the mantissa of the IEEE 754 value.\r\n        var prng = function() {\r\n            var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\r\n                d = startdenom,                 //   and denominator d = 2 ^ 48.\r\n                x = 0;                          //   and no 'extra last byte'.\r\n            while (n < significance) {          // Fill up all significant digits by\r\n                n = (n + x) * width;              //   shifting numerator and\r\n                d *= width;                       //   denominator and generating a\r\n                x = arc4.g(1);                    //   new least-significant-byte.\r\n            }\r\n            while (n >= overflow) {             // To avoid rounding up, before adding\r\n                n /= 2;                           //   last byte, shift everything\r\n                d /= 2;                           //   right using integer math until\r\n                x >>>= 1;                         //   we have exactly the desired bits.\r\n            }\r\n            return (n + x) / d;                 // Form the number within [0, 1).\r\n        };\r\n\r\n        prng.int32 = function() { return arc4.g(4) | 0; }\r\n        prng.quick = function() { return arc4.g(4) / 0x100000000; }\r\n        prng.double = prng;\r\n\r\n        // Mix the randomness into accumulated entropy.\r\n        mixkey(tostring(arc4.S), pool);\r\n\r\n        // Calling convention: what to return as a function of prng, seed, is_math.\r\n        return (options.pass || callback ||\r\n        function(prng, seed, is_math_call, state) {\r\n            if (state) {\r\n                // Load the arc4 state from the given state if it has an S array.\r\n                if (state.S) { copy(state, arc4); }\r\n                // Only provide the .state method if requested via options.state.\r\n                prng.state = function() { return copy(arc4, {}); }\r\n            }\r\n\r\n            // If called as a method of Math (Math.seedrandom()), mutate\r\n            // Math.random because that is how seedrandom.js has worked since v1.0.\r\n            if (is_math_call) { math[rngname] = prng; return seed; }\r\n\r\n            // Otherwise, it is a newer calling convention, so return the\r\n            // prng directly.\r\n            else return prng;\r\n        })(\r\n            prng,\r\n            shortseed,\r\n            'global' in options ? options.global : (this == math),\r\n            options.state);\r\n    }\r\n    math['seed' + rngname] = seedrandom;\r\n\r\n//\r\n// ARC4\r\n//\r\n// An ARC4 implementation.  The constructor takes a key in the form of\r\n// an array of at most (width) integers that should be 0 <= x < (width).\r\n//\r\n// The g(count) method returns a pseudorandom integer that concatenates\r\n// the next (count) outputs from ARC4.  Its return value is a number x\r\n// that is in the range 0 <= x < (width ^ count).\r\n//\r\n    function ARC4(key) {\r\n        var t, keylen = key.length,\r\n            me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\r\n\r\n        // The empty key [] is treated as [0].\r\n        if (!keylen) { key = [keylen++]; }\r\n\r\n        // Set up S using the standard key scheduling algorithm.\r\n        while (i < width) {\r\n            s[i] = i++;\r\n        }\r\n        for (i = 0; i < width; i++) {\r\n            s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\r\n            s[j] = t;\r\n        }\r\n\r\n        // The \"g\" method returns the next (count) outputs as one number.\r\n        (me.g = function(count) {\r\n            // Using instance members instead of closure state nearly doubles speed.\r\n            var t, r = 0,\r\n                i = me.i, j = me.j, s = me.S;\r\n            while (count--) {\r\n                t = s[i = mask & (i + 1)];\r\n                r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\r\n            }\r\n            me.i = i; me.j = j;\r\n            return r;\r\n            // For robust unpredictability, the function call below automatically\r\n            // discards an initial batch of values.  This is called RC4-drop[256].\r\n            // See http://google.com/search?q=rsa+fluhrer+response&btnI\r\n        })(width);\r\n    }\r\n\r\n//\r\n// copy()\r\n// Copies internal state of ARC4 to or from a plain object.\r\n//\r\n    function copy(f, t) {\r\n        t.i = f.i;\r\n        t.j = f.j;\r\n        t.S = f.S.slice();\r\n        return t;\r\n    };\r\n\r\n//\r\n// flatten()\r\n// Converts an object tree to nested arrays of strings.\r\n//\r\n    function flatten(obj, depth) {\r\n        var result = [], typ = (typeof obj), prop;\r\n        if (depth && typ == 'object') {\r\n            for (prop in obj) {\r\n                try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\r\n            }\r\n        }\r\n        return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\r\n    }\r\n\r\n//\r\n// mixkey()\r\n// Mixes a string seed into a key that is an array of integers, and\r\n// returns a shortened string seed that is equivalent to the result key.\r\n//\r\n    function mixkey(seed, key) {\r\n        var stringseed = seed + '', smear, j = 0;\r\n        while (j < stringseed.length) {\r\n            key[mask & j] =\r\n                mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\r\n        }\r\n        return tostring(key);\r\n    }\r\n\r\n//\r\n// autoseed()\r\n// Returns an object for autoseeding, using window.crypto and Node crypto\r\n// module if available.\r\n//\r\n    function autoseed() {\r\n        try {\r\n            if (nodecrypto) { return tostring(nodecrypto.randomBytes(width)); }\r\n            var out = new Uint8Array(width);\r\n            (global.crypto || global.msCrypto).getRandomValues(out);\r\n            return tostring(out);\r\n        } catch (e) {\r\n            var browser = global.navigator,\r\n                plugins = browser && browser.plugins;\r\n            return [+new Date, global, plugins, global.screen, tostring(pool)];\r\n        }\r\n    }\r\n\r\n//\r\n// tostring()\r\n// Converts an array of charcodes to a string\r\n//\r\n    function tostring(a) {\r\n        return String.fromCharCode.apply(0, a);\r\n    }\r\n\r\n//\r\n// When seedrandom.js is loaded, we immediately mix a few bits\r\n// from the built-in RNG into the entropy pool.  Because we do\r\n// not want to interfere with deterministic PRNG state later,\r\n// seedrandom will not call math.random on its own again after\r\n// initialization.\r\n//\r\n    mixkey(math.random(), pool);\r\n\r\n//\r\n// Nodejs and AMD support: export the implementation as a module using\r\n// either convention.\r\n//\r\n\r\n// End anonymous scope, and pass initial values.\r\n})(\r\n    [],     // pool: entropy pool starts empty\r\n    BMMath    // math: package containing random, pow, and seedrandom\r\n);\nvar BezierFactory = (function(){\r\n    /**\r\n     * BezierEasing - use bezier curve for transition easing function\r\n     * by Gaëtan Renaudeau 2014 - 2015 – MIT License\r\n     *\r\n     * Credits: is based on Firefox's nsSMILKeySpline.cpp\r\n     * Usage:\r\n     * var spline = BezierEasing([ 0.25, 0.1, 0.25, 1.0 ])\r\n     * spline.get(x) => returns the easing value | x must be in [0, 1] range\r\n     *\r\n     */\r\n\r\n        var ob = {};\r\n    ob.getBezierEasing = getBezierEasing;\r\n    var beziers = {};\r\n\r\n    function getBezierEasing(a,b,c,d,nm){\r\n        var str = nm || ('bez_' + a+'_'+b+'_'+c+'_'+d).replace(/\\./g, 'p');\r\n        if(beziers[str]){\r\n            return beziers[str];\r\n        }\r\n        var bezEasing = new BezierEasing([a,b,c,d]);\r\n        beziers[str] = bezEasing;\r\n        return bezEasing;\r\n    }\r\n\r\n// These values are established by empiricism with tests (tradeoff: performance VS precision)\r\n    var NEWTON_ITERATIONS = 4;\r\n    var NEWTON_MIN_SLOPE = 0.001;\r\n    var SUBDIVISION_PRECISION = 0.0000001;\r\n    var SUBDIVISION_MAX_ITERATIONS = 10;\r\n\r\n    var kSplineTableSize = 11;\r\n    var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\r\n\r\n    var float32ArraySupported = typeof Float32Array === \"function\";\r\n\r\n    function A (aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }\r\n    function B (aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }\r\n    function C (aA1)      { return 3.0 * aA1; }\r\n\r\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\r\n    function calcBezier (aT, aA1, aA2) {\r\n        return ((A(aA1, aA2)*aT + B(aA1, aA2))*aT + C(aA1))*aT;\r\n    }\r\n\r\n// Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\r\n    function getSlope (aT, aA1, aA2) {\r\n        return 3.0 * A(aA1, aA2)*aT*aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\r\n    }\r\n\r\n    function binarySubdivide (aX, aA, aB, mX1, mX2) {\r\n        var currentX, currentT, i = 0;\r\n        do {\r\n            currentT = aA + (aB - aA) / 2.0;\r\n            currentX = calcBezier(currentT, mX1, mX2) - aX;\r\n            if (currentX > 0.0) {\r\n                aB = currentT;\r\n            } else {\r\n                aA = currentT;\r\n            }\r\n        } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\r\n        return currentT;\r\n    }\r\n\r\n    function newtonRaphsonIterate (aX, aGuessT, mX1, mX2) {\r\n        for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\r\n            var currentSlope = getSlope(aGuessT, mX1, mX2);\r\n            if (currentSlope === 0.0) return aGuessT;\r\n            var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\r\n            aGuessT -= currentX / currentSlope;\r\n        }\r\n        return aGuessT;\r\n    }\r\n\r\n    /**\r\n     * points is an array of [ mX1, mY1, mX2, mY2 ]\r\n     */\r\n    function BezierEasing (points) {\r\n        this._p = points;\r\n        this._mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\r\n        this._precomputed = false;\r\n\r\n        this.get = this.get.bind(this);\r\n    }\r\n\r\n    BezierEasing.prototype = {\r\n\r\n        get: function (x) {\r\n            var mX1 = this._p[0],\r\n                mY1 = this._p[1],\r\n                mX2 = this._p[2],\r\n                mY2 = this._p[3];\r\n            if (!this._precomputed) this._precompute();\r\n            if (mX1 === mY1 && mX2 === mY2) return x; // linear\r\n            // Because JavaScript number are imprecise, we should guarantee the extremes are right.\r\n            if (x === 0) return 0;\r\n            if (x === 1) return 1;\r\n            return calcBezier(this._getTForX(x), mY1, mY2);\r\n        },\r\n\r\n        // Private part\r\n\r\n        _precompute: function () {\r\n            var mX1 = this._p[0],\r\n                mY1 = this._p[1],\r\n                mX2 = this._p[2],\r\n                mY2 = this._p[3];\r\n            this._precomputed = true;\r\n            if (mX1 !== mY1 || mX2 !== mY2)\r\n                this._calcSampleValues();\r\n        },\r\n\r\n        _calcSampleValues: function () {\r\n            var mX1 = this._p[0],\r\n                mX2 = this._p[2];\r\n            for (var i = 0; i < kSplineTableSize; ++i) {\r\n                this._mSampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * getTForX chose the fastest heuristic to determine the percentage value precisely from a given X projection.\r\n         */\r\n        _getTForX: function (aX) {\r\n            var mX1 = this._p[0],\r\n                mX2 = this._p[2],\r\n                mSampleValues = this._mSampleValues;\r\n\r\n            var intervalStart = 0.0;\r\n            var currentSample = 1;\r\n            var lastSample = kSplineTableSize - 1;\r\n\r\n            for (; currentSample !== lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {\r\n                intervalStart += kSampleStepSize;\r\n            }\r\n            --currentSample;\r\n\r\n            // Interpolate to provide an initial guess for t\r\n            var dist = (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample+1] - mSampleValues[currentSample]);\r\n            var guessForT = intervalStart + dist * kSampleStepSize;\r\n\r\n            var initialSlope = getSlope(guessForT, mX1, mX2);\r\n            if (initialSlope >= NEWTON_MIN_SLOPE) {\r\n                return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\r\n            } else if (initialSlope === 0.0) {\r\n                return guessForT;\r\n            } else {\r\n                return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\r\n            }\r\n        }\r\n    };\r\n\r\n    return ob;\r\n\r\n}());\n(function () {\r\n    var lastTime = 0;\r\n    var vendors = ['ms', 'moz', 'webkit', 'o'];\r\n    for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\r\n        window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\r\n        window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\r\n    }\r\n    if(!window.requestAnimationFrame)\r\n        window.requestAnimationFrame = function (callback, element) {\r\n            var currTime = new Date().getTime();\r\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n            var id = setTimeout(function () {\r\n                    callback(currTime + timeToCall);\r\n                },\r\n                timeToCall);\r\n            lastTime = currTime + timeToCall;\r\n            return id;\r\n        };\r\n    if(!window.cancelAnimationFrame)\r\n        window.cancelAnimationFrame = function (id) {\r\n            clearTimeout(id);\r\n        };\r\n}());\r\n\nfunction createElement(parent,child,params){\r\n    if(child){\r\n        child.prototype = Object.create(parent.prototype);\r\n        child.prototype.constructor = child;\r\n        child.prototype._parent = parent.prototype;\r\n    }else{\r\n        var instance = Object.create(parent.prototype,params);\r\n        var getType = {};\r\n        if(instance && getType.toString.call(instance.init) === '[object Function]'){\r\n            instance.init();\r\n        }\r\n        return instance;\r\n    }\r\n}\r\n\r\nfunction extendPrototype(source,destination){\r\n    for (var attr in source.prototype) {\r\n        if (source.prototype.hasOwnProperty(attr)) destination.prototype[attr] = source.prototype[attr];\r\n    }\r\n}\nfunction bezFunction(){\r\n\r\n    var easingFunctions = [];\r\n    var math = Math;\r\n\r\n    function pointOnLine2D(x1,y1, x2,y2, x3,y3){\r\n        var det1 = (x1*y2) + (y1*x3) + (x2*y3) - (x3*y2) - (y3*x1) - (x2*y1);\r\n        return det1 > -0.0001 && det1 < 0.0001;\r\n    }\r\n\r\n    function pointOnLine3D(x1,y1,z1, x2,y2,z2, x3,y3,z3){\r\n        if(z1 === 0 && z2 === 0 && z3 === 0) {\r\n            return pointOnLine2D(x1,y1, x2,y2, x3,y3);\r\n        }\r\n        var dist1 = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2) + Math.pow(z2 - z1, 2));\r\n        var dist2 = Math.sqrt(Math.pow(x3 - x1, 2) + Math.pow(y3 - y1, 2) + Math.pow(z3 - z1, 2));\r\n        var dist3 = Math.sqrt(Math.pow(x3 - x2, 2) + Math.pow(y3 - y2, 2) + Math.pow(z3 - z2, 2));\r\n        var diffDist;\r\n        if(dist1 > dist2){\r\n            if(dist1 > dist3){\r\n                diffDist = dist1 - dist2 - dist3;\r\n            } else {\r\n                diffDist = dist3 - dist2 - dist1;\r\n            }\r\n        } else if(dist3 > dist2){\r\n            diffDist = dist3 - dist2 - dist1;\r\n        } else {\r\n            diffDist = dist2 - dist1 - dist3;\r\n        }\r\n        return diffDist > -0.0001 && diffDist < 0.0001;\r\n    }\r\n\r\n    /*function getEasingCurve(aa,bb,cc,dd,encodedFuncName) {\r\n        if(!encodedFuncName){\r\n            encodedFuncName = ('bez_' + aa+'_'+bb+'_'+cc+'_'+dd).replace(/\\./g, 'p');\r\n        }\r\n        if(easingFunctions[encodedFuncName]){\r\n            return easingFunctions[encodedFuncName];\r\n        }\r\n        var A0, B0, C0;\r\n        var A1, B1, C1;\r\n        easingFunctions[encodedFuncName] = function(tt) {\r\n            var x = tt;\r\n            var i = 0, z;\r\n            while (++i < 20) {\r\n                C0 = 3 * aa;\r\n                B0 = 3 * (cc - aa) - C0;\r\n                A0 = 1 - C0 - B0;\r\n                z = (x * (C0 + x * (B0 + x * A0))) - tt;\r\n                if (bm_abs(z) < 1e-3) break;\r\n                x -= z / (C0 + x * (2 * B0 + 3 * A0 * x));\r\n            }\r\n            C1 = 3 * bb;\r\n            B1 = 3 * (dd - bb) - C1;\r\n            A1 = 1 - C1 - B1;\r\n            var polyB = x * (C1 + x * (B1 + x * A1));\r\n            //return c * polyB + b;\r\n            return polyB;\r\n        };\r\n        return easingFunctions[encodedFuncName];\r\n    }*/\r\n    var getBezierLength = (function(){\r\n\r\n        function Segment(l,p){\r\n            this.l = l;\r\n            this.p = p;\r\n        }\r\n\r\n        return function(pt1,pt2,pt3,pt4){\r\n            var curveSegments = defaultCurveSegments;\r\n            var k;\r\n            var i, len;\r\n            var ptCoord,perc,addedLength = 0;\r\n            var ptDistance;\r\n            var point = [],lastPoint = [];\r\n            var lengthData = {\r\n                addedLength: 0,\r\n                segments: []\r\n            };\r\n            len = pt3.length;\r\n            for(k=0;k<curveSegments;k+=1){\r\n                perc = k/(curveSegments-1);\r\n                ptDistance = 0;\r\n                for(i=0;i<len;i+=1){\r\n                    ptCoord = bm_pow(1-perc,3)*pt1[i]+3*bm_pow(1-perc,2)*perc*pt3[i]+3*(1-perc)*bm_pow(perc,2)*pt4[i]+bm_pow(perc,3)*pt2[i];\r\n                    point[i] = ptCoord;\r\n                    if(lastPoint[i] !== null){\r\n                        ptDistance += bm_pow(point[i] - lastPoint[i],2);\r\n                    }\r\n                    lastPoint[i] = point[i];\r\n                }\r\n                if(ptDistance){\r\n                    ptDistance = bm_sqrt(ptDistance);\r\n                    addedLength += ptDistance;\r\n                }\r\n                lengthData.segments.push(new Segment(addedLength,perc));\r\n            }\r\n            lengthData.addedLength = addedLength;\r\n            return lengthData;\r\n        };\r\n    }());\r\n\r\n    function getSegmentsLength(shapeData) {\r\n        var closed = shapeData.c;\r\n        var pathV = shapeData.v;\r\n        var pathO = shapeData.o;\r\n        var pathI = shapeData.i;\r\n        var i, len = shapeData._length;\r\n        var lengths = [];\r\n        var totalLength = 0;\r\n        for(i=0;i<len-1;i+=1){\r\n            lengths[i] = getBezierLength(pathV[i],pathV[i+1],pathO[i],pathI[i+1]);\r\n            totalLength += lengths[i].addedLength;\r\n        }\r\n        if(closed){\r\n            lengths[i] = getBezierLength(pathV[i],pathV[0],pathO[i],pathI[0]);\r\n            totalLength += lengths[i].addedLength;\r\n        }\r\n        return {lengths:lengths,totalLength:totalLength};\r\n    }\r\n\r\n    function BezierData(length){\r\n        this.segmentLength = 0;\r\n        this.points = new Array(length);\r\n    }\r\n\r\n    function PointData(partial,point){\r\n        this.partialLength = partial;\r\n        this.point = point;\r\n    }\r\n\r\n    var buildBezierData = (function(){\r\n\r\n        var storedData = {};\r\n\r\n        return function (keyData){\r\n            var pt1 = keyData.s;\r\n            var pt2 = keyData.e;\r\n            var pt3 = keyData.to;\r\n            var pt4 = keyData.ti;\r\n            var bezierName = (pt1.join('_')+'_'+pt2.join('_')+'_'+pt3.join('_')+'_'+pt4.join('_')).replace(/\\./g, 'p');\r\n            if(storedData[bezierName]){\r\n                keyData.bezierData = storedData[bezierName];\r\n                return;\r\n            }\r\n        var curveSegments = defaultCurveSegments;\r\n        var k, i, len;\r\n            var ptCoord,perc,addedLength = 0;\r\n            var ptDistance;\r\n            var point,lastPoint = null;\r\n            if(pt1.length === 2 && (pt1[0] != pt2[0] || pt1[1] != pt2[1]) && pointOnLine2D(pt1[0],pt1[1],pt2[0],pt2[1],pt1[0]+pt3[0],pt1[1]+pt3[1]) && pointOnLine2D(pt1[0],pt1[1],pt2[0],pt2[1],pt2[0]+pt4[0],pt2[1]+pt4[1])){\r\n                curveSegments = 2;\r\n            }\r\n            var bezierData = new BezierData(curveSegments);\r\n            len = pt3.length;\r\n            for(k=0;k<curveSegments;k+=1){\r\n            point = new Array(len);\r\n                perc = k/(curveSegments-1);\r\n                ptDistance = 0;\r\n                for(i=0;i<len;i+=1){\r\n                ptCoord = bm_pow(1-perc,3)*pt1[i]+3*bm_pow(1-perc,2)*perc*(pt1[i] + pt3[i])+3*(1-perc)*bm_pow(perc,2)*(pt2[i] + pt4[i])+bm_pow(perc,3)*pt2[i];\r\n                point[i] = ptCoord;\r\n                    if(lastPoint !== null){\r\n                    ptDistance += bm_pow(point[i] - lastPoint[i],2);\r\n                    }\r\n                }\r\n            ptDistance = bm_sqrt(ptDistance);\r\n                addedLength += ptDistance;\r\n                bezierData.points[k] = new PointData(ptDistance,point);\r\n                lastPoint = point;\r\n            }\r\n            bezierData.segmentLength = addedLength;\r\n            keyData.bezierData = bezierData;\r\n            storedData[bezierName] = bezierData;\r\n\r\n        }\r\n    }());\r\n\r\n    function getDistancePerc(perc,bezierData){\r\n        var segments = bezierData.segments;\r\n        var len = segments.length;\r\n        var initPos = bm_floor((len-1)*perc);\r\n        var lengthPos = perc*bezierData.addedLength;\r\n        var lPerc = 0;\r\n        if(lengthPos == segments[initPos].l){\r\n            return segments[initPos].p;\r\n        }else{\r\n            var dir = segments[initPos].l > lengthPos ? -1 : 1;\r\n            var flag = true;\r\n            while(flag){\r\n                if(segments[initPos].l <= lengthPos && segments[initPos+1].l > lengthPos){\r\n                    lPerc = (lengthPos - segments[initPos].l)/(segments[initPos+1].l-segments[initPos].l);\r\n                    flag = false;\r\n                }else{\r\n                    initPos += dir;\r\n                }\r\n                if(initPos < 0 || initPos >= len - 1){\r\n                    flag = false;\r\n                }\r\n            }\r\n            return segments[initPos].p + (segments[initPos+1].p - segments[initPos].p)*lPerc;\r\n        }\r\n    }\r\n\r\n    function SegmentPoints(){\r\n        this.pt1 = new Array(2);\r\n        this.pt2 = new Array(2);\r\n        this.pt3 = new Array(2);\r\n        this.pt4 = new Array(2);\r\n    }\r\n\r\n    function getPointInSegment(pt1, pt2, pt3, pt4, percent, bezierData) {\r\n        var t1 = getDistancePerc(percent,bezierData);\r\n        var u0 = 1;\r\n        var u1 = 1 - t1;\r\n        var ptX = Math.round((u1*u1*u1* pt1[0] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[0] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[0] + t1*t1*t1* pt2[0])* 1000) / 1000;\r\n        var ptY = Math.round((u1*u1*u1* pt1[1] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[1] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[1] + t1*t1*t1* pt2[1])* 1000) / 1000;\r\n        return [ptX, ptY];\r\n    }\r\n\r\n    function getNewSegment(pt1,pt2,pt3,pt4,startPerc,endPerc, bezierData){\r\n\r\n        var pts = new SegmentPoints();\r\n        startPerc = startPerc < 0 ? 0 : startPerc > 1 ? 1 : startPerc;\r\n        var t0 = getDistancePerc(startPerc,bezierData);\r\n        endPerc = endPerc > 1 ? 1 : endPerc;\r\n        var t1 = getDistancePerc(endPerc,bezierData);\r\n        var i, len = pt1.length;\r\n        var u0 = 1 - t0;\r\n        var u1 = 1 - t1;\r\n        //Math.round(num * 100) / 100\r\n        for(i=0;i<len;i+=1){\r\n            pts.pt1[i] =  Math.round((u0*u0*u0* pt1[i] + (t0*u0*u0 + u0*t0*u0 + u0*u0*t0) * pt3[i] + (t0*t0*u0 + u0*t0*t0 + t0*u0*t0)* pt4[i] + t0*t0*t0* pt2[i])* 1000) / 1000;\r\n            pts.pt3[i] = Math.round((u0*u0*u1*pt1[i] + (t0*u0*u1 + u0*t0*u1 + u0*u0*t1)* pt3[i] + (t0*t0*u1 + u0*t0*t1 + t0*u0*t1)* pt4[i] + t0*t0*t1* pt2[i])* 1000) / 1000;\r\n            pts.pt4[i] = Math.round((u0*u1*u1* pt1[i] + (t0*u1*u1 + u0*t1*u1 + u0*u1*t1)* pt3[i] + (t0*t1*u1 + u0*t1*t1 + t0*u1*t1)* pt4[i] + t0*t1*t1* pt2[i])* 1000) / 1000;\r\n            pts.pt2[i] = Math.round((u1*u1*u1* pt1[i] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[i] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[i] + t1*t1*t1* pt2[i])* 1000) / 1000;\r\n        }\r\n        return pts;\r\n    }\r\n\r\n    return {\r\n        //getEasingCurve : getEasingCurve,\r\n        getBezierLength : getBezierLength,\r\n        getSegmentsLength : getSegmentsLength,\r\n        getNewSegment : getNewSegment,\r\n        getPointInSegment : getPointInSegment,\r\n        buildBezierData : buildBezierData,\r\n        pointOnLine2D : pointOnLine2D,\r\n        pointOnLine3D : pointOnLine3D\r\n    };\r\n}\r\n\r\nvar bez = bezFunction();\nfunction dataFunctionManager(){\r\n\r\n    //var tCanvasHelper = document.createElement('canvas').getContext('2d');\r\n\r\n    function completeLayers(layers, comps, fontManager){\r\n        var layerData;\r\n        var animArray, lastFrame;\r\n        var i, len = layers.length;\r\n        var j, jLen, k, kLen;\r\n        for(i=0;i<len;i+=1){\r\n            layerData = layers[i];\r\n            if(!('ks' in layerData) || layerData.completed){\r\n                continue;\r\n            }\r\n            layerData.completed = true;\r\n            if(layerData.tt){\r\n                layers[i-1].td = layerData.tt;\r\n            }\r\n            animArray = [];\r\n            lastFrame = -1;\r\n            if(layerData.hasMask){\r\n                var maskProps = layerData.masksProperties;\r\n                jLen = maskProps.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    if(maskProps[j].pt.k.i){\r\n                        convertPathsToAbsoluteValues(maskProps[j].pt.k);\r\n                    }else{\r\n                        kLen = maskProps[j].pt.k.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            if(maskProps[j].pt.k[k].s){\r\n                                convertPathsToAbsoluteValues(maskProps[j].pt.k[k].s[0]);\r\n                            }\r\n                            if(maskProps[j].pt.k[k].e){\r\n                                convertPathsToAbsoluteValues(maskProps[j].pt.k[k].e[0]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(layerData.ty===0){\r\n                layerData.layers = findCompLayers(layerData.refId, comps);\r\n                completeLayers(layerData.layers,comps, fontManager);\r\n            }else if(layerData.ty === 4){\r\n                completeShapes(layerData.shapes);\r\n            }else if(layerData.ty == 5){\r\n                completeText(layerData, fontManager);\r\n            }\r\n        }\r\n    }\r\n\r\n    function findCompLayers(id,comps){\r\n        var i = 0, len = comps.length;\r\n        while(i<len){\r\n            if(comps[i].id === id){\r\n                if(!comps[i].layers.__used) {\r\n                    comps[i].layers.__used = true;\r\n                    return comps[i].layers;\r\n                }\r\n                return JSON.parse(JSON.stringify(comps[i].layers));\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    function completeShapes(arr){\r\n        var i, len = arr.length;\r\n        var j, jLen;\r\n        var hasPaths = false;\r\n        for(i=len-1;i>=0;i-=1){\r\n            if(arr[i].ty == 'sh'){\r\n                if(arr[i].ks.k.i){\r\n                    convertPathsToAbsoluteValues(arr[i].ks.k);\r\n                }else{\r\n                    jLen = arr[i].ks.k.length;\r\n                    for(j=0;j<jLen;j+=1){\r\n                        if(arr[i].ks.k[j].s){\r\n                            convertPathsToAbsoluteValues(arr[i].ks.k[j].s[0]);\r\n                        }\r\n                        if(arr[i].ks.k[j].e){\r\n                            convertPathsToAbsoluteValues(arr[i].ks.k[j].e[0]);\r\n                        }\r\n                    }\r\n                }\r\n                hasPaths = true;\r\n            }else if(arr[i].ty == 'gr'){\r\n                completeShapes(arr[i].it);\r\n            }\r\n        }\r\n        /*if(hasPaths){\r\n            //mx: distance\r\n            //ss: sensitivity\r\n            //dc: decay\r\n            arr.splice(arr.length-1,0,{\r\n                \"ty\": \"ms\",\r\n                \"mx\":20,\r\n                \"ss\":10,\r\n                 \"dc\":0.001,\r\n                \"maxDist\":200\r\n            });\r\n        }*/\r\n    }\r\n\r\n    function convertPathsToAbsoluteValues(path){\r\n        var i, len = path.i.length;\r\n        for(i=0;i<len;i+=1){\r\n            path.i[i][0] += path.v[i][0];\r\n            path.i[i][1] += path.v[i][1];\r\n            path.o[i][0] += path.v[i][0];\r\n            path.o[i][1] += path.v[i][1];\r\n        }\r\n    }\r\n\r\n    function checkVersion(minimum,animVersionString){\r\n        var animVersion = animVersionString ? animVersionString.split('.') : [100,100,100];\r\n        if(minimum[0]>animVersion[0]){\r\n            return true;\r\n        } else if(animVersion[0] > minimum[0]){\r\n            return false;\r\n        }\r\n        if(minimum[1]>animVersion[1]){\r\n            return true;\r\n        } else if(animVersion[1] > minimum[1]){\r\n            return false;\r\n        }\r\n        if(minimum[2]>animVersion[2]){\r\n            return true;\r\n        } else if(animVersion[2] > minimum[2]){\r\n            return false;\r\n        }\r\n    }\r\n\r\n    var checkText = (function(){\r\n        var minimumVersion = [4,4,14];\r\n\r\n        function updateTextLayer(textLayer){\r\n            var documentData = textLayer.t.d;\r\n            textLayer.t.d = {\r\n                k: [\r\n                    {\r\n                        s:documentData,\r\n                        t:0\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var i, len = layers.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(layers[i].ty === 5){\r\n                    updateTextLayer(layers[i]);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }())\r\n\r\n    var checkChars = (function() {\r\n        var minimumVersion = [4,7,99];\r\n        return function (animationData){\r\n            if(animationData.chars && !checkVersion(minimumVersion,animationData.v)){\r\n                var i, len = animationData.chars.length, j, jLen, k, kLen;\r\n                var pathData, paths;\r\n                for(i = 0; i < len; i += 1) {\r\n                    if(animationData.chars[i].data && animationData.chars[i].data.shapes) {\r\n                        paths = animationData.chars[i].data.shapes[0].it;\r\n                        jLen = paths.length;\r\n\r\n                        for(j = 0; j < jLen; j += 1) {\r\n                            pathData = paths[j].ks.k;\r\n                            if(!pathData.__converted) {\r\n                                convertPathsToAbsoluteValues(paths[j].ks.k);\r\n                                pathData.__converted = true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }())\r\n\r\n    var checkColors = (function(){\r\n        var minimumVersion = [4,1,9];\r\n\r\n        function iterateShapes(shapes){\r\n            var i, len = shapes.length;\r\n            var j, jLen;\r\n            for(i=0;i<len;i+=1){\r\n                if(shapes[i].ty === 'gr'){\r\n                    iterateShapes(shapes[i].it);\r\n                }else if(shapes[i].ty === 'fl' || shapes[i].ty === 'st'){\r\n                    if(shapes[i].c.k && shapes[i].c.k[0].i){\r\n                        jLen = shapes[i].c.k.length;\r\n                        for(j=0;j<jLen;j+=1){\r\n                            if(shapes[i].c.k[j].s){\r\n                                shapes[i].c.k[j].s[0] /= 255;\r\n                                shapes[i].c.k[j].s[1] /= 255;\r\n                                shapes[i].c.k[j].s[2] /= 255;\r\n                                shapes[i].c.k[j].s[3] /= 255;\r\n                            }\r\n                            if(shapes[i].c.k[j].e){\r\n                                shapes[i].c.k[j].e[0] /= 255;\r\n                                shapes[i].c.k[j].e[1] /= 255;\r\n                                shapes[i].c.k[j].e[2] /= 255;\r\n                                shapes[i].c.k[j].e[3] /= 255;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        shapes[i].c.k[0] /= 255;\r\n                        shapes[i].c.k[1] /= 255;\r\n                        shapes[i].c.k[2] /= 255;\r\n                        shapes[i].c.k[3] /= 255;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var i, len = layers.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(layers[i].ty === 4){\r\n                    iterateShapes(layers[i].shapes);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }());\r\n\r\n    var checkShapes = (function(){\r\n        var minimumVersion = [4,4,18];\r\n\r\n\r\n\r\n        function completeShapes(arr){\r\n            var i, len = arr.length;\r\n            var j, jLen;\r\n            var hasPaths = false;\r\n            for(i=len-1;i>=0;i-=1){\r\n                if(arr[i].ty == 'sh'){\r\n                    if(arr[i].ks.k.i){\r\n                        arr[i].ks.k.c = arr[i].closed;\r\n                    }else{\r\n                        jLen = arr[i].ks.k.length;\r\n                        for(j=0;j<jLen;j+=1){\r\n                            if(arr[i].ks.k[j].s){\r\n                                arr[i].ks.k[j].s[0].c = arr[i].closed;\r\n                            }\r\n                            if(arr[i].ks.k[j].e){\r\n                                arr[i].ks.k[j].e[0].c = arr[i].closed;\r\n                            }\r\n                        }\r\n                    }\r\n                    hasPaths = true;\r\n                }else if(arr[i].ty == 'gr'){\r\n                    completeShapes(arr[i].it);\r\n                }\r\n            }\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var layerData;\r\n            var i, len = layers.length;\r\n            var j, jLen, k, kLen;\r\n            for(i=0;i<len;i+=1){\r\n                layerData = layers[i];\r\n                if(layerData.hasMask){\r\n                    var maskProps = layerData.masksProperties;\r\n                    jLen = maskProps.length;\r\n                    for(j=0;j<jLen;j+=1){\r\n                        if(maskProps[j].pt.k.i){\r\n                            maskProps[j].pt.k.c = maskProps[j].cl;\r\n                        }else{\r\n                            kLen = maskProps[j].pt.k.length;\r\n                            for(k=0;k<kLen;k+=1){\r\n                                if(maskProps[j].pt.k[k].s){\r\n                                    maskProps[j].pt.k[k].s[0].c = maskProps[j].cl;\r\n                                }\r\n                                if(maskProps[j].pt.k[k].e){\r\n                                    maskProps[j].pt.k[k].e[0].c = maskProps[j].cl;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if(layerData.ty === 4){\r\n                    completeShapes(layerData.shapes);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }());\r\n\r\n    /*function blitPaths(path){\r\n        var i, len = path.i.length;\r\n        for(i=0;i<len;i+=1){\r\n            path.i[i][0] /= blitter;\r\n            path.i[i][1] /= blitter;\r\n            path.o[i][0] /= blitter;\r\n            path.o[i][1] /= blitter;\r\n            path.v[i][0] /= blitter;\r\n            path.v[i][1] /= blitter;\r\n        }\r\n    }\r\n\r\n    function blitShapes(arr){\r\n        var i, len = arr.length;\r\n        var j, jLen;\r\n        var hasPaths = false;\r\n        for(i=len-1;i>=0;i-=1){\r\n            if(arr[i].ty == 'sh'){\r\n                if(arr[i].ks.k.i){\r\n                    blitPaths(arr[i].ks.k);\r\n                }else{\r\n                    jLen = arr[i].ks.k.length;\r\n                    for(j=0;j<jLen;j+=1){\r\n                        if(arr[i].ks.k[j].s){\r\n                            blitPaths(arr[i].ks.k[j].s[0]);\r\n                        }\r\n                        if(arr[i].ks.k[j].e){\r\n                            blitPaths(arr[i].ks.k[j].e[0]);\r\n                        }\r\n                    }\r\n                }\r\n                hasPaths = true;\r\n            }else if(arr[i].ty == 'gr'){\r\n                blitShapes(arr[i].it);\r\n            }else if(arr[i].ty == 'rc'){\r\n                blitProperty(arr[i].p);\r\n                blitProperty(arr[i].s);\r\n            }else if(arr[i].ty == 'st'){\r\n                blitProperty(arr[i].w);\r\n            }else if(arr[i].ty == 'tr'){\r\n                blitProperty(arr[i].p);\r\n                blitProperty(arr[i].sk);\r\n                blitProperty(arr[i].a);\r\n            }else if(arr[i].ty == 'el'){\r\n                blitProperty(arr[i].p);\r\n                blitProperty(arr[i].s);\r\n            }else if(arr[i].ty == 'rd'){\r\n                blitProperty(arr[i].r);\r\n            }else{\r\n\r\n                //console.log(arr[i].ty );\r\n            }\r\n        }\r\n    }\r\n\r\n    function blitText(data, fontManager){\r\n\r\n    }\r\n\r\n    function blitValue(val){\r\n        if(typeof(val) === 'number'){\r\n            val /= blitter;\r\n        } else {\r\n            var i = val.length-1;\r\n            while(i>=0){\r\n                val[i] /= blitter;\r\n                i-=1;\r\n            }\r\n        }\r\n        return val;\r\n    }\r\n\r\n    function blitProperty(data){\r\n        if(!data.k.length){\r\n            data.k = blitValue(data.k);\r\n        }else if(typeof(data.k[0]) === 'number'){\r\n            data.k = blitValue(data.k);\r\n        } else {\r\n            var i, len = data.k.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(data.k[i].s){\r\n                    //console.log('pre S: ', data.k[i].s);\r\n                    data.k[i].s = blitValue(data.k[i].s);\r\n                    //console.log('post S: ', data.k[i].s);\r\n                }\r\n                if(data.k[i].e){\r\n                    //console.log('pre E: ', data.k[i].e);\r\n                    data.k[i].e = blitValue(data.k[i].e);\r\n                    //console.log('post E: ', data.k[i].e);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function blitLayers(layers,comps, fontManager){\r\n        var layerData;\r\n        var animArray, lastFrame;\r\n        var i, len = layers.length;\r\n        var j, jLen, k, kLen;\r\n        for(i=0;i<len;i+=1){\r\n            layerData = layers[i];\r\n            if(!('ks' in layerData)){\r\n                continue;\r\n            }\r\n            blitProperty(layerData.ks.a);\r\n            blitProperty(layerData.ks.p);\r\n            layerData.completed = true;\r\n            if(layerData.tt){\r\n                layers[i-1].td = layerData.tt;\r\n            }\r\n            animArray = [];\r\n            lastFrame = -1;\r\n            if(layerData.hasMask){\r\n                var maskProps = layerData.masksProperties;\r\n                jLen = maskProps.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    if(maskProps[j].pt.k.i){\r\n                        blitPaths(maskProps[j].pt.k);\r\n                    }else{\r\n                        kLen = maskProps[j].pt.k.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            if(maskProps[j].pt.k[k].s){\r\n                                blitPaths(maskProps[j].pt.k[k].s[0]);\r\n                            }\r\n                            if(maskProps[j].pt.k[k].e){\r\n                                blitPaths(maskProps[j].pt.k[k].e[0]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(layerData.ty===0){\r\n                layerData.w = Math.round(layerData.w/blitter);\r\n                layerData.h = Math.round(layerData.h/blitter);\r\n                blitLayers(layerData.layers,comps, fontManager);\r\n            }else if(layerData.ty === 4){\r\n                blitShapes(layerData.shapes);\r\n            }else if(layerData.ty == 5){\r\n                blitText(layerData, fontManager);\r\n            }else if(layerData.ty == 1){\r\n                layerData.sh /= blitter;\r\n                layerData.sw /= blitter;\r\n            } else {\r\n            }\r\n        }\r\n    }\r\n\r\n    function blitAnimation(animationData,comps, fontManager){\r\n        blitLayers(animationData.layers,comps, fontManager);\r\n    }*/\r\n\r\n    function completeData(animationData, fontManager){\r\n        if(animationData.__complete){\r\n            return;\r\n        }\r\n        checkColors(animationData);\r\n        checkText(animationData);\r\n        checkChars(animationData);\r\n        checkShapes(animationData);\r\n        completeLayers(animationData.layers, animationData.assets, fontManager);\r\n        animationData.__complete = true;\r\n        //blitAnimation(animationData, animationData.assets, fontManager);\r\n    }\r\n\r\n    function completeText(data, fontManager){\r\n        if(data.t.a.length === 0 && !('m' in data.t.p)){\r\n            data.singleShape = true;\r\n        }\r\n    }\r\n\r\n    var moduleOb = {};\r\n    moduleOb.completeData = completeData;\r\n\r\n    return moduleOb;\r\n}\r\n\r\nvar dataManager = dataFunctionManager();\nvar FontManager = (function(){\r\n\r\n    var maxWaitingTime = 5000;\r\n\r\n    function setUpNode(font, family){\r\n        var parentNode = document.createElement('span');\r\n        parentNode.style.fontFamily    = family;\r\n        var node = document.createElement('span');\r\n        // Characters that vary significantly among different fonts\r\n        node.innerHTML = 'giItT1WQy@!-/#';\r\n        // Visible - so we can measure it - but not on the screen\r\n        parentNode.style.position      = 'absolute';\r\n        parentNode.style.left          = '-10000px';\r\n        parentNode.style.top           = '-10000px';\r\n        // Large font size makes even subtle changes obvious\r\n        parentNode.style.fontSize      = '300px';\r\n        // Reset any font properties\r\n        parentNode.style.fontVariant   = 'normal';\r\n        parentNode.style.fontStyle     = 'normal';\r\n        parentNode.style.fontWeight    = 'normal';\r\n        parentNode.style.letterSpacing = '0';\r\n        parentNode.appendChild(node);\r\n        document.body.appendChild(parentNode);\r\n\r\n        // Remember width with no applied web font\r\n        var width = node.offsetWidth;\r\n        node.style.fontFamily = font + ', '+family;\r\n        return {node:node, w:width, parent:parentNode};\r\n    }\r\n\r\n    function checkLoadedFonts() {\r\n        var i, len = this.fonts.length;\r\n        var node, w;\r\n        var loadedCount = len;\r\n        for(i=0;i<len; i+= 1){\r\n            if(this.fonts[i].loaded){\r\n                loadedCount -= 1;\r\n                continue;\r\n            }\r\n            if(this.fonts[i].fOrigin === 't' || this.fonts[i].origin === 2){\r\n                if(window.Typekit && window.Typekit.load && this.typekitLoaded === 0){\r\n                    this.typekitLoaded = 1;\r\n                    try{window.Typekit.load({\r\n                        async: true,\r\n                        active: function() {\r\n                            this.typekitLoaded = 2;\r\n                        }.bind(this)\r\n                    });}catch(e){}\r\n                }\r\n                if(this.typekitLoaded === 2) {\r\n                    this.fonts[i].loaded = true;\r\n                }\r\n            } else if(this.fonts[i].fOrigin === 'n' || this.fonts[i].origin === 0){\r\n                this.fonts[i].loaded = true;\r\n            } else{\r\n                node = this.fonts[i].monoCase.node;\r\n                w = this.fonts[i].monoCase.w;\r\n                if(node.offsetWidth !== w){\r\n                    loadedCount -= 1;\r\n                    this.fonts[i].loaded = true;\r\n                }else{\r\n                    node = this.fonts[i].sansCase.node;\r\n                    w = this.fonts[i].sansCase.w;\r\n                    if(node.offsetWidth !== w){\r\n                        loadedCount -= 1;\r\n                        this.fonts[i].loaded = true;\r\n                    }\r\n                }\r\n                if(this.fonts[i].loaded){\r\n                    this.fonts[i].sansCase.parent.parentNode.removeChild(this.fonts[i].sansCase.parent);\r\n                    this.fonts[i].monoCase.parent.parentNode.removeChild(this.fonts[i].monoCase.parent);\r\n                }\r\n            }\r\n        }\r\n\r\n        if(loadedCount !== 0 && Date.now() - this.initTime < maxWaitingTime){\r\n            setTimeout(checkLoadedFonts.bind(this),20);\r\n        }else{\r\n            setTimeout(function(){this.loaded = true;}.bind(this),0);\r\n\r\n        }\r\n    };\r\n\r\n    function createHelper(def, fontData){\r\n        var tHelper = document.createElementNS(svgNS,'text');\r\n        tHelper.style.fontSize = '100px';\r\n        tHelper.style.fontFamily = fontData.fFamily;\r\n        tHelper.textContent = '1';\r\n        if(fontData.fClass){\r\n            tHelper.style.fontFamily = 'inherit';\r\n            tHelper.className = fontData.fClass;\r\n        } else {\r\n            tHelper.style.fontFamily = fontData.fFamily;\r\n        }\r\n        def.appendChild(tHelper);\r\n        var tCanvasHelper = document.createElement('canvas').getContext('2d');\r\n        tCanvasHelper.font = '100px '+ fontData.fFamily;\r\n        return tCanvasHelper;\r\n    }\r\n\r\n    function addFonts(fontData, defs){\r\n        if(!fontData){\r\n            this.loaded = true;\r\n            return;\r\n        }\r\n        if(this.chars){\r\n            this.loaded = true;\r\n            this.fonts = fontData.list;\r\n            return;\r\n        }\r\n\r\n        var fontArr = fontData.list;\r\n        var i, len = fontArr.length;\r\n        for(i=0; i<len; i+= 1){\r\n            fontArr[i].loaded = false;\r\n            fontArr[i].monoCase = setUpNode(fontArr[i].fFamily,'monospace');\r\n            fontArr[i].sansCase = setUpNode(fontArr[i].fFamily,'sans-serif');\r\n            if(!fontArr[i].fPath) {\r\n                fontArr[i].loaded = true;\r\n            }else if(fontArr[i].fOrigin === 'p' || fontArr[i].origin === 3){\r\n                var s = document.createElement('style');\r\n                s.type = \"text/css\";\r\n                s.innerHTML = \"@font-face {\" + \"font-family: \"+fontArr[i].fFamily+\"; font-style: normal; src: url('\"+fontArr[i].fPath+\"');}\";\r\n                defs.appendChild(s);\r\n            } else if(fontArr[i].fOrigin === 'g' || fontArr[i].origin === 1){\r\n                //<link href='https://fonts.googleapis.com/css?family=Montserrat' rel='stylesheet' type='text/css'>\r\n                var l = document.createElement('link');\r\n                l.type = \"text/css\";\r\n                l.rel = \"stylesheet\";\r\n                l.href = fontArr[i].fPath;\r\n                defs.appendChild(l);\r\n            } else if(fontArr[i].fOrigin === 't' || fontArr[i].origin === 2){\r\n                //<link href='https://fonts.googleapis.com/css?family=Montserrat' rel='stylesheet' type='text/css'>\r\n                var sc = document.createElement('script');\r\n                sc.setAttribute('src',fontArr[i].fPath);\r\n                defs.appendChild(sc);\r\n            }\r\n            fontArr[i].helper = createHelper(defs,fontArr[i]);\r\n            this.fonts.push(fontArr[i]);\r\n        }\r\n        checkLoadedFonts.bind(this)();\r\n    }\r\n\r\n    function addChars(chars){\r\n        if(!chars){\r\n            return;\r\n        }\r\n        if(!this.chars){\r\n            this.chars = [];\r\n        }\r\n        var i, len = chars.length;\r\n        var j, jLen = this.chars.length, found;\r\n        for(i=0;i<len;i+=1){\r\n            j = 0;\r\n            found = false;\r\n            while(j<jLen){\r\n                if(this.chars[j].style === chars[i].style && this.chars[j].fFamily === chars[i].fFamily && this.chars[j].ch === chars[i].ch){\r\n                    found = true;\r\n                }\r\n                j += 1;\r\n            }\r\n            if(!found){\r\n                this.chars.push(chars[i]);\r\n                jLen += 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    function getCharData(char, style, font){\r\n        var i = 0, len = this.chars.length;\r\n        while( i < len) {\r\n            if(this.chars[i].ch === char && this.chars[i].style === style && this.chars[i].fFamily === font){\r\n                return this.chars[i];\r\n            }\r\n            i+= 1;\r\n        }\r\n    }\r\n\r\n    function measureText(char, fontName, size){\r\n        var fontData = this.getFontByName(fontName);\r\n        var tHelper = fontData.helper;\r\n        //tHelper.textContent = char;\r\n        return tHelper.measureText(char).width*size/100;\r\n        //return tHelper.getComputedTextLength()*size/100;\r\n    }\r\n\r\n    function getFontByName(name){\r\n        var i = 0, len = this.fonts.length;\r\n        while(i<len){\r\n            if(this.fonts[i].fName === name) {\r\n                return this.fonts[i];\r\n            }\r\n            i += 1;\r\n        }\r\n        return 'sans-serif';\r\n    }\r\n\r\n    var Font = function(){\r\n        this.fonts = [];\r\n        this.chars = null;\r\n        this.typekitLoaded = 0;\r\n        this.loaded = false;\r\n        this.initTime = Date.now();\r\n    };\r\n    Font.prototype.addChars = addChars;\r\n    Font.prototype.addFonts = addFonts;\r\n    Font.prototype.getCharData = getCharData;\r\n    Font.prototype.getFontByName = getFontByName;\r\n    Font.prototype.measureText = measureText;\r\n\r\n    return Font;\r\n\r\n}());\nvar PropertyFactory = (function(){\r\n\r\n    var initFrame = -999999;\r\n\r\n    function interpolateValue(frameNum, iterationIndex, previousValue, caching){\r\n        var offsetTime = this.offsetTime;\r\n        var newValue;\r\n        if(previousValue.constructor === Array) {\r\n            newValue = Array.apply(null,{length:previousValue.length})\r\n        }\r\n        var i = iterationIndex;\r\n        var len = this.keyframes.length- 1,flag = true;\r\n        var keyData, nextKeyData;\r\n\r\n        while(flag){\r\n            keyData = this.keyframes[i];\r\n            nextKeyData = this.keyframes[i+1];\r\n            if(i == len-1 && frameNum >= nextKeyData.t - offsetTime){\r\n                if(keyData.h){\r\n                    keyData = nextKeyData;\r\n                }\r\n                iterationIndex = 0;\r\n                break;\r\n            }\r\n            if((nextKeyData.t - offsetTime) > frameNum){\r\n                iterationIndex = i;\r\n                break;\r\n            }\r\n            if(i < len - 1){\r\n                i += 1;\r\n            }else{\r\n                iterationIndex = 0;\r\n                flag = false;\r\n            }\r\n        }\r\n\r\n        var k, kLen,perc,jLen, j, fnc;\r\n        if(keyData.to){\r\n\r\n            if(!keyData.bezierData){\r\n                bez.buildBezierData(keyData);\r\n            }\r\n            var bezierData = keyData.bezierData;\r\n            if(frameNum >= nextKeyData.t-offsetTime || frameNum < keyData.t-offsetTime){\r\n                var ind = frameNum >= nextKeyData.t-offsetTime ? bezierData.points.length - 1 : 0;\r\n                kLen = bezierData.points[ind].point.length;\r\n                for(k = 0; k < kLen; k += 1){\r\n                    newValue[k] = bezierData.points[ind].point[k];\r\n                }\r\n                caching._lastBezierData = null;\r\n            }else{\r\n                if(keyData.__fnct){\r\n                    fnc = keyData.__fnct;\r\n                }else{\r\n                    fnc = BezierFactory.getBezierEasing(keyData.o.x,keyData.o.y,keyData.i.x,keyData.i.y,keyData.n).get;\r\n                    keyData.__fnct = fnc;\r\n                }\r\n                perc = fnc((frameNum-(keyData.t-offsetTime))/((nextKeyData.t-offsetTime)-(keyData.t-offsetTime)));\r\n                var distanceInLine = bezierData.segmentLength*perc;\r\n\r\n                var segmentPerc;\r\n                var addedLength =  (caching.lastFrame < frameNum && caching._lastBezierData === bezierData) ? caching._lastAddedLength : 0;\r\n                j =  (caching.lastFrame < frameNum && caching._lastBezierData === bezierData) ? caching._lastPoint : 0;\r\n                flag = true;\r\n                jLen = bezierData.points.length;\r\n                while(flag){\r\n                    addedLength +=bezierData.points[j].partialLength;\r\n                    if(distanceInLine === 0 || perc === 0 || j == bezierData.points.length - 1){\r\n                        kLen = bezierData.points[j].point.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            newValue[k] = bezierData.points[j].point[k];\r\n                        }\r\n                        break;\r\n                    }else if(distanceInLine >= addedLength && distanceInLine < addedLength + bezierData.points[j+1].partialLength){\r\n                        segmentPerc = (distanceInLine-addedLength)/(bezierData.points[j+1].partialLength);\r\n                        kLen = bezierData.points[j].point.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            newValue[k] = bezierData.points[j].point[k] + (bezierData.points[j+1].point[k] - bezierData.points[j].point[k])*segmentPerc;\r\n                        }\r\n                        break;\r\n                    }\r\n                    if(j < jLen - 1){\r\n                        j += 1;\r\n                    }else{\r\n                        flag = false;\r\n                    }\r\n                }\r\n                caching._lastPoint = j;\r\n                caching._lastAddedLength = addedLength - bezierData.points[j].partialLength;\r\n                caching._lastBezierData = bezierData;\r\n            }\r\n        }else{\r\n            var outX,outY,inX,inY, keyValue;\r\n            len = keyData.s.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(keyData.h !== 1){\r\n                    if(frameNum >= nextKeyData.t-offsetTime){\r\n                        perc = 1;\r\n                    }else if(frameNum < keyData.t-offsetTime){\r\n                        perc = 0;\r\n                    }else{\r\n                        if(keyData.o.x.constructor === Array){\r\n                            if(!keyData.__fnct){\r\n                                keyData.__fnct = [];\r\n                            }\r\n                            if (!keyData.__fnct[i]) {\r\n                                outX = keyData.o.x[i] || keyData.o.x[0];\r\n                                outY = keyData.o.y[i] || keyData.o.y[0];\r\n                                inX = keyData.i.x[i] || keyData.i.x[0];\r\n                                inY = keyData.i.y[i] || keyData.i.y[0];\r\n                                fnc = BezierFactory.getBezierEasing(outX,outY,inX,inY).get;\r\n                                keyData.__fnct[i] = fnc;\r\n                            } else {\r\n                                fnc = keyData.__fnct[i];\r\n                            }\r\n                        } else {\r\n                            if (!keyData.__fnct) {\r\n                                outX = keyData.o.x;\r\n                                outY = keyData.o.y;\r\n                                inX = keyData.i.x;\r\n                                inY = keyData.i.y;\r\n                                fnc = BezierFactory.getBezierEasing(outX,outY,inX,inY).get;\r\n                                keyData.__fnct = fnc;\r\n                            } else{\r\n                                fnc = keyData.__fnct;\r\n                            }\r\n                        }\r\n                        perc = fnc((frameNum-(keyData.t-offsetTime))/((nextKeyData.t-offsetTime)-(keyData.t-offsetTime)));\r\n                    }\r\n                }\r\n                if(this.sh && keyData.h !== 1){\r\n                    var initP = keyData.s[i];\r\n                    var endP = keyData.e[i];\r\n                    if(initP-endP < -180){\r\n                        initP += 360;\r\n                    } else if(initP-endP > 180){\r\n                        initP -= 360;\r\n                    }\r\n                    keyValue = initP+(endP-initP)*perc;\r\n                } else {\r\n                    keyValue = keyData.h === 1 ? keyData.s[i] : keyData.s[i]+(keyData.e[i]-keyData.s[i])*perc;\r\n                }\r\n                if(len === 1){\r\n                    newValue = keyValue;\r\n                }else{\r\n                    newValue[i] = keyValue;\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            value: newValue,\r\n            iterationIndex: iterationIndex\r\n        }\r\n    }\r\n\r\n    function getValueAtCurrentTime(){\r\n        if(this.elem.globalData.frameId === this.frameId){\r\n            return;\r\n        }\r\n        this.mdf = false;\r\n        var frameNum = this.comp.renderedFrame - this.offsetTime;\r\n        var initTime = this.keyframes[0].t-this.offsetTime;\r\n        var endTime = this.keyframes[this.keyframes.length- 1].t-this.offsetTime;\r\n        if(!(frameNum === this._caching.lastFrame || (this._caching.lastFrame !== initFrame && ((this._caching.lastFrame >= endTime && frameNum >= endTime) || (this._caching.lastFrame < initTime && frameNum < initTime))))){\r\n            var i = this._caching.lastFrame < frameNum ? this._caching.lastIndex : 0;\r\n            var renderResult = this.interpolateValue(frameNum, i, this.pv, this._caching);\r\n            this._caching.lastIndex = renderResult.iterationIndex;\r\n            if(this.pv.constructor === Array){\r\n                i = 0;\r\n                while(i<this.v.length){\r\n                    this.pv[i] = renderResult.value[i];\r\n                    this.v[i] = this.mult ? this.pv[i] * this.mult : this.pv[i];\r\n                    if(this.lastPValue[i] !== this.pv[i]) {\r\n                        this.mdf = true;\r\n                        this.lastPValue[i] = this.pv[i];\r\n                    }\r\n                    i += 1;\r\n                }\r\n            } else {\r\n                this.pv = renderResult.value;\r\n                this.v = this.mult ? this.pv*this.mult : this.pv;\r\n                if(this.lastPValue != this.pv){\r\n                    this.mdf = true;\r\n                    this.lastPValue = this.pv;\r\n                }\r\n            }\r\n            \r\n        }\r\n        this._caching.lastFrame = frameNum;\r\n        this.frameId = this.elem.globalData.frameId;\r\n    }\r\n\r\n    function getNoValue(){}\r\n\r\n    function ValueProperty(elem,data, mult){\r\n        this.mult = mult;\r\n        this.v = mult ? data.k * mult : data.k;\r\n        this.pv = data.k;\r\n        this.mdf = false;\r\n        this.comp = elem.comp;\r\n        this.k = false;\r\n        this.kf = false;\r\n        this.vel = 0;\r\n        this.getValue = getNoValue;\r\n    }\r\n\r\n    function MultiDimensionalProperty(elem,data, mult){\r\n        this.mult = mult;\r\n        this.data = data;\r\n        this.mdf = false;\r\n        this.comp = elem.comp;\r\n        this.k = false;\r\n        this.kf = false;\r\n        this.frameId = -1;\r\n        this.v = Array.apply(null, {length:data.k.length});\r\n        this.pv = Array.apply(null, {length:data.k.length});\r\n        this.lastValue = Array.apply(null, {length:data.k.length});\r\n        var arr = Array.apply(null, {length:data.k.length});\r\n        this.vel = arr.map(function () { return 0 });\r\n        var i, len = data.k.length;\r\n        for(i = 0;i<len;i+=1){\r\n            this.v[i] = mult ? data.k[i] * mult : data.k[i];\r\n            this.pv[i] = data.k[i];\r\n        }\r\n        this.getValue = getNoValue;\r\n    }\r\n\r\n    function KeyframedValueProperty(elem, data, mult){\r\n        this.keyframes = data.k;\r\n        this.offsetTime = elem.data.st;\r\n        this.lastValue = -99999;\r\n        this.lastPValue = -99999;\r\n        this.frameId = -1;\r\n        this._caching={lastFrame:initFrame,lastIndex:0};\r\n        this.k = true;\r\n        this.kf = true;\r\n        this.data = data;\r\n        this.mult = mult;\r\n        this.elem = elem;\r\n        this.comp = elem.comp;\r\n        this.v = mult ? data.k[0].s[0]*mult : data.k[0].s[0];\r\n        this.pv = data.k[0].s[0];\r\n        this.getValue = getValueAtCurrentTime;\r\n        this.interpolateValue = interpolateValue;\r\n    }\r\n\r\n    function KeyframedMultidimensionalProperty(elem, data, mult){\r\n        var i, len = data.k.length;\r\n        var s, e,to,ti;\r\n        for(i=0;i<len-1;i+=1){\r\n            if(data.k[i].to && data.k[i].s && data.k[i].e){\r\n                s = data.k[i].s;\r\n                e = data.k[i].e;\r\n                to = data.k[i].to;\r\n                ti = data.k[i].ti;\r\n                if((s.length === 2 && !(s[0] === e[0] && s[1] === e[1]) && bez.pointOnLine2D(s[0],s[1],e[0],e[1],s[0] + to[0],s[1] + to[1]) && bez.pointOnLine2D(s[0],s[1],e[0],e[1],e[0] + ti[0],e[1] + ti[1])) || (s.length === 3 && !(s[0] === e[0] && s[1] === e[1] && s[2] === e[2]) && bez.pointOnLine3D(s[0],s[1],s[2],e[0],e[1],e[2],s[0] + to[0],s[1] + to[1],s[2] + to[2]) && bez.pointOnLine3D(s[0],s[1],s[2],e[0],e[1],e[2],e[0] + ti[0],e[1] + ti[1],e[2] + ti[2]))){\r\n                    data.k[i].to = null;\r\n                    data.k[i].ti = null;\r\n                }\r\n            }\r\n        }\r\n        this.keyframes = data.k;\r\n        this.offsetTime = elem.data.st;\r\n        this.k = true;\r\n        this.kf = true;\r\n        this.mult = mult;\r\n        this.elem = elem;\r\n        this.comp = elem.comp;\r\n        this._caching={lastFrame:initFrame,lastIndex:0};\r\n        this.getValue = getValueAtCurrentTime;\r\n        this.interpolateValue = interpolateValue;\r\n        this.frameId = -1;\r\n        this.v = Array.apply(null, {length:data.k[0].s.length});\r\n        this.pv = Array.apply(null, {length:data.k[0].s.length});\r\n        this.lastValue = Array.apply(null, {length:data.k[0].s.length});\r\n        this.lastPValue = Array.apply(null, {length:data.k[0].s.length});\r\n    }\r\n\r\n    var TransformProperty = (function() {\r\n        function positionGetter() {\r\n            if(this.p) {\r\n                return ExpressionValue(this.p);\r\n            } else {\r\n                return [this.px.v, this.py.v, this.pz ? this.pz.v : 0];\r\n            }\r\n        }\r\n        function xPositionGetter() {\r\n            return ExpressionValue(this.px);\r\n        }\r\n        function yPositionGetter() {\r\n            return ExpressionValue(this.py);\r\n        }\r\n        function zPositionGetter() {\r\n            return ExpressionValue(this.pz);\r\n        }\r\n        function anchorGetter() {\r\n            return ExpressionValue(this.a);\r\n        }\r\n        function orientationGetter() {\r\n            return ExpressionValue(this.or);\r\n        }\r\n        function rotationGetter() {\r\n            if(this.r) {\r\n                return ExpressionValue(this.r, 1/degToRads);\r\n            } else {\r\n                return ExpressionValue(this.rz, 1/degToRads);\r\n            }\r\n        }\r\n        function scaleGetter() {\r\n            return ExpressionValue(this.s, 100);\r\n        }\r\n        function opacityGetter() {\r\n            return ExpressionValue(this.o, 100);\r\n        }\r\n        function skewGetter() {\r\n            return ExpressionValue(this.sk);\r\n        }\r\n        function skewAxisGetter() {\r\n            return ExpressionValue(this.sa);\r\n        }\r\n        function applyToMatrix(mat) {\r\n            var i, len = this.dynamicProperties.length;\r\n            for(i = 0; i < len; i += 1) {\r\n                this.dynamicProperties[i].getValue();\r\n                if (this.dynamicProperties[i].mdf) {\r\n                    this.mdf = true;\r\n                }\r\n            }\r\n            if (this.a) {\r\n                mat.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n            }\r\n            if (this.s) {\r\n                mat.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n            }\r\n            if (this.r) {\r\n                mat.rotate(-this.r.v);\r\n            } else {\r\n                mat.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n            }\r\n            if (this.data.p.s) {\r\n                if (this.data.p.z) {\r\n                    mat.translate(this.px.v, this.py.v, -this.pz.v);\r\n                } else {\r\n                    mat.translate(this.px.v, this.py.v, 0);\r\n                }\r\n            } else {\r\n                mat.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);\r\n            }\r\n        }\r\n        function processKeys(){\r\n            if (this.elem.globalData.frameId === this.frameId) {\r\n                return;\r\n            }\r\n\r\n            this.mdf = false;\r\n            var i, len = this.dynamicProperties.length;\r\n\r\n            for(i = 0; i < len; i += 1) {\r\n                this.dynamicProperties[i].getValue();\r\n                if (this.dynamicProperties[i].mdf) {\r\n                    this.mdf = true;\r\n                }\r\n            }\r\n            if (this.mdf) {\r\n                this.v.reset();\r\n                if (this.a) {\r\n                    this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n                }\r\n                if(this.s) {\r\n                    this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n                }\r\n                if (this.sk) {\r\n                    this.v.skewFromAxis(-this.sk.v, this.sa.v);\r\n                }\r\n                if (this.r) {\r\n                    this.v.rotate(-this.r.v);\r\n                } else {\r\n                    this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n                }\r\n                if (this.autoOriented && this.p.keyframes && this.p.getValueAtTime) {\r\n                    var v1,v2;\r\n                    if (this.p._caching.lastFrame+this.p.offsetTime <= this.p.keyframes[0].t) {\r\n                        v1 = this.p.getValueAtTime((this.p.keyframes[0].t + 0.01) / this.elem.globalData.frameRate,0);\r\n                        v2 = this.p.getValueAtTime(this.p.keyframes[0].t / this.elem.globalData.frameRate, 0);\r\n                    } else if(this.p._caching.lastFrame+this.p.offsetTime >= this.p.keyframes[this.p.keyframes.length - 1].t) {\r\n                        v1 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t / this.elem.globalData.frameRate), 0);\r\n                        v2 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t - 0.01) / this.elem.globalData.frameRate, 0);\r\n                    } else {\r\n                        v1 = this.p.pv;\r\n                        v2 = this.p.getValueAtTime((this.p._caching.lastFrame+this.p.offsetTime - 0.01) / this.elem.globalData.frameRate, this.p.offsetTime);\r\n                    }\r\n                    this.v.rotate(-Math.atan2(v1[1] - v2[1], v1[0] - v2[0]));\r\n                }\r\n                if(this.data.p.s){\r\n                    if(this.data.p.z) {\r\n                        this.v.translate(this.px.v, this.py.v, -this.pz.v);\r\n                    } else {\r\n                        this.v.translate(this.px.v, this.py.v, 0);\r\n                    }\r\n                }else{\r\n                    this.v.translate(this.p.v[0],this.p.v[1],-this.p.v[2]);\r\n                }\r\n            }\r\n            this.frameId = this.elem.globalData.frameId;\r\n        }\r\n\r\n        function setInverted(){\r\n            this.inverted = true;\r\n            this.iv = new Matrix();\r\n            if(!this.k){\r\n                if(this.data.p.s){\r\n                    this.iv.translate(this.px.v,this.py.v,-this.pz.v);\r\n                }else{\r\n                    this.iv.translate(this.p.v[0],this.p.v[1],-this.p.v[2]);\r\n                }\r\n                if(this.r){\r\n                    this.iv.rotate(-this.r.v);\r\n                }else{\r\n                    this.iv.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v);\r\n                }\r\n                if(this.s){\r\n                    this.iv.scale(this.s.v[0],this.s.v[1],1);\r\n                }\r\n                if(this.a){\r\n                    this.iv.translate(-this.a.v[0],-this.a.v[1],this.a.v[2]);\r\n                }\r\n            }\r\n        }\r\n\r\n        function autoOrient(){\r\n            //\r\n            //var prevP = this.getValueAtTime();\r\n        }\r\n\r\n        return function TransformProperty(elem,data,arr){\r\n            this.elem = elem;\r\n            this.frameId = -1;\r\n            this.type = 'transform';\r\n            this.dynamicProperties = [];\r\n            this.mdf = false;\r\n            this.data = data;\r\n            this.getValue = processKeys;\r\n            this.applyToMatrix = applyToMatrix;\r\n            this.setInverted = setInverted;\r\n            this.autoOrient = autoOrient;\r\n            this.v = new Matrix();\r\n            if(data.p.s){\r\n                this.px = PropertyFactory.getProp(elem,data.p.x,0,0,this.dynamicProperties);\r\n                this.py = PropertyFactory.getProp(elem,data.p.y,0,0,this.dynamicProperties);\r\n                if(data.p.z){\r\n                    this.pz = PropertyFactory.getProp(elem,data.p.z,0,0,this.dynamicProperties);\r\n                }\r\n            }else{\r\n                this.p = PropertyFactory.getProp(elem,data.p,1,0,this.dynamicProperties);\r\n            }\r\n            if(data.r) {\r\n                this.r = PropertyFactory.getProp(elem, data.r, 0, degToRads, this.dynamicProperties);\r\n            } else if(data.rx) {\r\n                this.rx = PropertyFactory.getProp(elem, data.rx, 0, degToRads, this.dynamicProperties);\r\n                this.ry = PropertyFactory.getProp(elem, data.ry, 0, degToRads, this.dynamicProperties);\r\n                this.rz = PropertyFactory.getProp(elem, data.rz, 0, degToRads, this.dynamicProperties);\r\n                this.or = PropertyFactory.getProp(elem, data.or, 1, degToRads, this.dynamicProperties);\r\n                //sh Indicates it needs to be capped between -180 and 180\r\n                this.or.sh = true;\r\n            }\r\n            if(data.sk){\r\n                this.sk = PropertyFactory.getProp(elem, data.sk, 0, degToRads, this.dynamicProperties);\r\n                this.sa = PropertyFactory.getProp(elem, data.sa, 0, degToRads, this.dynamicProperties);\r\n            }\r\n            if(data.a) {\r\n                this.a = PropertyFactory.getProp(elem,data.a,1,0,this.dynamicProperties);\r\n            }\r\n            if(data.s) {\r\n                this.s = PropertyFactory.getProp(elem,data.s,1,0.01,this.dynamicProperties);\r\n            }\r\n            if(data.o){\r\n                this.o = PropertyFactory.getProp(elem,data.o,0,0.01,this.dynamicProperties);\r\n            } else {\r\n                this.o = {mdf:false,v:1};\r\n            }\r\n            if(this.dynamicProperties.length){\r\n                arr.push(this);\r\n            }else{\r\n                if(this.a){\r\n                    this.v.translate(-this.a.v[0],-this.a.v[1],this.a.v[2]);\r\n                }\r\n                if(this.s){\r\n                    this.v.scale(this.s.v[0],this.s.v[1],this.s.v[2]);\r\n                }\r\n                if(this.sk){\r\n                    this.v.skewFromAxis(-this.sk.v,this.sa.v);\r\n                }\r\n                if(this.r){\r\n                    this.v.rotate(-this.r.v);\r\n                }else{\r\n                    this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n                }\r\n                if(this.data.p.s){\r\n                    if(data.p.z) {\r\n                        this.v.translate(this.px.v, this.py.v, -this.pz.v);\r\n                    } else {\r\n                        this.v.translate(this.px.v, this.py.v, 0);\r\n                    }\r\n                }else{\r\n                    this.v.translate(this.p.v[0],this.p.v[1],-this.p.v[2]);\r\n                }\r\n            }\r\n            Object.defineProperty(this, \"position\", { get: positionGetter});\r\n            Object.defineProperty(this, \"xPosition\", { get: xPositionGetter});\r\n            Object.defineProperty(this, \"yPosition\", { get: yPositionGetter});\r\n            Object.defineProperty(this, \"orientation\", { get: orientationGetter});\r\n            Object.defineProperty(this, \"anchorPoint\", { get: anchorGetter});\r\n            Object.defineProperty(this, \"rotation\", { get: rotationGetter});\r\n            Object.defineProperty(this, \"scale\", { get: scaleGetter});\r\n            Object.defineProperty(this, \"opacity\", { get: opacityGetter});\r\n            Object.defineProperty(this, \"skew\", { get: skewGetter});\r\n            Object.defineProperty(this, \"skewAxis\", { get: skewAxisGetter});\r\n        }\r\n    }());\r\n\r\n    function getProp(elem,data,type, mult, arr) {\r\n        var p;\r\n        if(type === 2){\r\n            p = new TransformProperty(elem, data, arr);\r\n        } else if(data.a === 0){\r\n            if(type === 0) {\r\n                p = new ValueProperty(elem,data,mult);\r\n            } else {\r\n                p = new MultiDimensionalProperty(elem,data, mult);\r\n            }\r\n        } else if(data.a === 1){\r\n            if(type === 0) {\r\n                p = new KeyframedValueProperty(elem,data,mult);\r\n            } else {\r\n                p = new KeyframedMultidimensionalProperty(elem,data, mult);\r\n            }\r\n        } else if(!data.k.length){\r\n            p = new ValueProperty(elem,data, mult);\r\n        }else if(typeof(data.k[0]) === 'number'){\r\n            p = new MultiDimensionalProperty(elem,data, mult);\r\n        }else{\r\n            switch(type){\r\n                case 0:\r\n                    p = new KeyframedValueProperty(elem,data,mult);\r\n                    break;\r\n                case 1:\r\n                    p = new KeyframedMultidimensionalProperty(elem,data,mult);\r\n                    break;\r\n            }\r\n        }\r\n        if(p.k){\r\n            arr.push(p);\r\n        }\r\n        return p;\r\n    }\r\n\r\n    var getGradientProp = (function(){\r\n\r\n        function getValue(forceRender){\r\n            this.prop.getValue();\r\n            this.cmdf = false;\r\n            this.omdf = false;\r\n            if(this.prop.mdf || forceRender){\r\n                var i, len = this.data.p*4;\r\n                var mult, val;\r\n                for(i=0;i<len;i+=1){\r\n                    mult = i%4 === 0 ? 100 : 255;\r\n                    val = Math.round(this.prop.v[i]*mult);\r\n                    if(this.c[i] !== val){\r\n                        this.c[i] = val;\r\n                        this.cmdf = true;\r\n                    }\r\n                }\r\n                if(this.o.length){\r\n                    len = this.prop.v.length;\r\n                    for(i=this.data.p*4;i<len;i+=1){\r\n                        mult = i%2 === 0 ? 100 : 1;\r\n                        val = i%2 === 0 ?  Math.round(this.prop.v[i]*100):this.prop.v[i];\r\n                        if(this.o[i-this.data.p*4] !== val){\r\n                            this.o[i-this.data.p*4] = val;\r\n                            this.omdf = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        function gradientProp(elem,data,arr){\r\n            this.prop = getProp(elem,data.k,1,null,[]);\r\n            this.data = data;\r\n            this.k = this.prop.k;\r\n            this.c = Array.apply(null,{length:data.p*4});\r\n            var cLength = data.k.k[0].s ? (data.k.k[0].s.length - data.p*4) : data.k.k.length - data.p*4;\r\n            this.o = Array.apply(null,{length:cLength});\r\n            this.cmdf = false;\r\n            this.omdf = false;\r\n            this.getValue = getValue;\r\n            if(this.prop.k){\r\n                arr.push(this);\r\n            }\r\n            this.getValue(true);\r\n        }\r\n\r\n        return function getGradientProp(elem,data,arr){\r\n            return new gradientProp(elem,data,arr);\r\n        }\r\n    }());\r\n\r\n\r\n\r\n\r\n    var DashProperty = (function(){\r\n\r\n        function processKeys(forceRender){\r\n            var i = 0, len = this.dataProps.length;\r\n\r\n            if(this.elem.globalData.frameId === this.frameId && !forceRender){\r\n                return;\r\n            }\r\n            this.mdf = false;\r\n            this.frameId = this.elem.globalData.frameId;\r\n            while(i<len){\r\n                if(this.dataProps[i].p.mdf){\r\n                    this.mdf = true;\r\n                    break;\r\n                }\r\n                i+=1;\r\n            }\r\n            if(this.mdf || forceRender){\r\n                if(this.renderer === 'svg') {\r\n                    this.dasharray = '';\r\n                }\r\n                for(i=0;i<len;i+=1){\r\n                    if(this.dataProps[i].n != 'o'){\r\n                        if(this.renderer === 'svg') {\r\n                            this.dasharray += ' ' + this.dataProps[i].p.v;\r\n                        }else{\r\n                            this.dasharray[i] = this.dataProps[i].p.v;\r\n                        }\r\n                    }else{\r\n                        this.dashoffset = this.dataProps[i].p.v;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return function(elem, data,renderer, dynamicProperties){\r\n            this.elem = elem;\r\n            this.frameId = -1;\r\n            this.dataProps = new Array(data.length);\r\n            this.renderer = renderer;\r\n            this.mdf = false;\r\n            this.k = false;\r\n            if(this.renderer === 'svg'){\r\n                this.dasharray = '';\r\n            }else{\r\n\r\n                this.dasharray = new Array(data.length - 1);\r\n            }\r\n            this.dashoffset = 0;\r\n            var i, len = data.length, prop;\r\n            for(i=0;i<len;i+=1){\r\n                prop = PropertyFactory.getProp(elem,data[i].v,0, 0, dynamicProperties);\r\n                this.k = prop.k ? true : this.k;\r\n                this.dataProps[i] = {n:data[i].n,p:prop};\r\n            }\r\n            this.getValue = processKeys;\r\n            if(this.k){\r\n                dynamicProperties.push(this);\r\n            }else{\r\n                this.getValue(true);\r\n            }\r\n\r\n        }\r\n    }());\r\n\r\n    function getDashProp(elem, data,renderer, dynamicProperties) {\r\n        return new DashProperty(elem, data,renderer, dynamicProperties);\r\n    };\r\n\r\n    var TextSelectorProp = (function(){\r\n        var max = Math.max;\r\n        var min = Math.min;\r\n        var floor = Math.floor;\r\n        function updateRange(newCharsFlag){\r\n            this.mdf = newCharsFlag || false;\r\n            if(this.dynamicProperties.length){\r\n                var i, len = this.dynamicProperties.length;\r\n                for(i=0;i<len;i+=1){\r\n                    this.dynamicProperties[i].getValue();\r\n                    if(this.dynamicProperties[i].mdf){\r\n                        this.mdf = true;\r\n                    }\r\n                }\r\n            }\r\n            var totalChars = this.elem.textProperty.currentData ? this.elem.textProperty.currentData.l.length : 0;\r\n            if(newCharsFlag && this.data.r === 2) {\r\n                this.e.v = totalChars;\r\n            }\r\n            var divisor = this.data.r === 2 ? 1 : 100 / totalChars;\r\n            var o = this.o.v/divisor;\r\n            var s = this.s.v/divisor + o;\r\n            var e = (this.e.v/divisor) + o;\r\n            if(s>e){\r\n                var _s = s;\r\n                s = e;\r\n                e = _s;\r\n            }\r\n            this.finalS = s;\r\n            this.finalE = e;\r\n        }\r\n\r\n        function getMult(ind){\r\n            //var easer = bez.getEasingCurve(this.ne.v/100,0,1-this.xe.v/100,1);\r\n            var easer = BezierFactory.getBezierEasing(this.ne.v/100,0,1-this.xe.v/100,1).get;\r\n            var mult = 0;\r\n            var s = this.finalS;\r\n            var e = this.finalE;\r\n            var type = this.data.sh;\r\n            if(type == 2){\r\n                if(e === s){\r\n                    mult = ind >= e ? 1 : 0;\r\n                }else{\r\n                    mult = max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n                }\r\n                mult = easer(mult);\r\n            }else if(type == 3){\r\n                if(e === s){\r\n                    mult = ind >= e ? 0 : 1;\r\n                }else{\r\n                    mult = 1 - max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n                }\r\n\r\n                mult = easer(mult);\r\n            }else if(type == 4){\r\n                if(e === s){\r\n                    mult = 0;\r\n                }else{\r\n                    mult = max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n                    if(mult<.5){\r\n                        mult *= 2;\r\n                    }else{\r\n                        mult = 1 - 2*(mult-0.5);\r\n                    }\r\n                }\r\n                mult = easer(mult);\r\n            }else if(type == 5){\r\n                if(e === s){\r\n                    mult = 0;\r\n                }else{\r\n                    var tot = e - s;\r\n                    /*ind += 0.5;\r\n                    mult = -4/(tot*tot)*(ind*ind)+(4/tot)*ind;*/\r\n                    ind = min(max(0,ind+0.5-s),e-s);\r\n                    var x = -tot/2+ind;\r\n                    var a = tot/2;\r\n                    mult = Math.sqrt(1 - (x*x)/(a*a));\r\n                }\r\n                mult = easer(mult);\r\n            }else if(type == 6){\r\n                if(e === s){\r\n                    mult = 0;\r\n                }else{\r\n                    ind = min(max(0,ind+0.5-s),e-s);\r\n                    mult = (1+(Math.cos((Math.PI+Math.PI*2*(ind)/(e-s)))))/2;\r\n                    /*\r\n                     ind = Math.min(Math.max(s,ind),e-1);\r\n                     mult = (1+(Math.cos((Math.PI+Math.PI*2*(ind-s)/(e-1-s)))))/2;\r\n                     mult = Math.max(mult,(1/(e-1-s))/(e-1-s));*/\r\n                }\r\n                mult = easer(mult);\r\n            }else {\r\n                if(ind >= floor(s)){\r\n                    if(ind-s < 0){\r\n                        mult = 1 - (s - ind);\r\n                    }else{\r\n                        mult = max(0,min(e-ind,1));\r\n                    }\r\n                }\r\n                mult = easer(mult);\r\n            }\r\n            return mult*this.a.v;\r\n        }\r\n\r\n        return function TextSelectorProp(elem,data, arr){\r\n            this.mdf = false;\r\n            this.k = false;\r\n            this.data = data;\r\n            this.dynamicProperties = [];\r\n            this.getValue = updateRange;\r\n            this.getMult = getMult;\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.finalS = 0;\r\n            this.finalE = 0;\r\n            this.s = PropertyFactory.getProp(elem,data.s || {k:0},0,0,this.dynamicProperties);\r\n            if('e' in data){\r\n                this.e = PropertyFactory.getProp(elem,data.e,0,0,this.dynamicProperties);\r\n            }else{\r\n                this.e = {v:100};\r\n            }\r\n            this.o = PropertyFactory.getProp(elem,data.o || {k:0},0,0,this.dynamicProperties);\r\n            this.xe = PropertyFactory.getProp(elem,data.xe || {k:0},0,0,this.dynamicProperties);\r\n            this.ne = PropertyFactory.getProp(elem,data.ne || {k:0},0,0,this.dynamicProperties);\r\n            this.a = PropertyFactory.getProp(elem,data.a,0,0.01,this.dynamicProperties);\r\n            if(this.dynamicProperties.length){\r\n                arr.push(this);\r\n            }else{\r\n                this.getValue();\r\n            }\r\n        }\r\n    }());\r\n\r\n    function getTextSelectorProp(elem, data,arr) {\r\n        return new TextSelectorProp(elem, data, arr);\r\n    };\r\n\r\n    var ob = {\r\n        getProp: getProp,\r\n        getDashProp: getDashProp,\r\n        getTextSelectorProp: getTextSelectorProp,\r\n        getGradientProp: getGradientProp\r\n    };\r\n    return ob;\r\n}());\nfunction ShapePath(){\r\n\tthis.c = false;\r\n\tthis._length = 0;\r\n\tthis._maxLength = 8;\r\n\tthis.v = Array.apply(null,{length:this._maxLength});\r\n\tthis.o = Array.apply(null,{length:this._maxLength});\r\n\tthis.i = Array.apply(null,{length:this._maxLength});\r\n};\r\n\r\nShapePath.prototype.setPathData = function(closed, len) {\r\n\tthis.c = closed;\r\n\tthis.setLength(len);\r\n\tvar i = 0;\r\n\twhile(i < len){\r\n\t\tthis.v[i] = point_pool.newPoint();\r\n\t\tthis.o[i] = point_pool.newPoint();\r\n\t\tthis.i[i] = point_pool.newPoint();\r\n\t\ti += 1;\r\n\t}\r\n};\r\n\r\nShapePath.prototype.setLength = function(len) {\r\n\twhile(this._maxLength < len) {\r\n\t\tthis.doubleArrayLength();\r\n\t}\r\n\tthis._length = len;\r\n}\r\n\r\nShapePath.prototype.doubleArrayLength = function() {\r\n\tthis.v = this.v.concat(Array.apply(null,{length:this._maxLength}))\r\n\tthis.i = this.i.concat(Array.apply(null,{length:this._maxLength}))\r\n\tthis.o = this.o.concat(Array.apply(null,{length:this._maxLength}))\r\n\tthis._maxLength *= 2;\r\n};\r\n\r\nShapePath.prototype.setXYAt = function(x, y, type, pos, replace) {\r\n\tvar arr;\r\n\tthis._length = Math.max(this._length, pos + 1);\r\n\tif(this._length >= this._maxLength) {\r\n\t\tthis.doubleArrayLength();\r\n\t}\r\n\tswitch(type){\r\n\t\tcase 'v':\r\n\t\t\tarr = this.v;\r\n\t\t\tbreak;\r\n\t\tcase 'i':\r\n\t\t\tarr = this.i;\r\n\t\t\tbreak;\r\n\t\tcase 'o':\r\n\t\t\tarr = this.o;\r\n\t\t\tbreak;\r\n\t}\r\n\tif(!arr[pos] || (arr[pos] && !replace)){\r\n\t\tarr[pos] = point_pool.newPoint();\r\n\t}\r\n\tarr[pos][0] = x;\r\n\tarr[pos][1] = y;\r\n};\r\n\r\nShapePath.prototype.setTripleAt = function(vX,vY,oX,oY,iX,iY,pos, replace) {\r\n\tthis.setXYAt(vX,vY,'v',pos, replace);\r\n\tthis.setXYAt(oX,oY,'o',pos, replace);\r\n\tthis.setXYAt(iX,iY,'i',pos, replace);\r\n};\nvar ShapePropertyFactory = (function(){\r\n\r\n    var initFrame = -999999;\r\n\r\n    function interpolateShape(frameNum, iterationIndex, previousValue, isCurrentRender) {\r\n        var keyPropS,keyPropE,isHold;\r\n        if(frameNum < this.keyframes[0].t-this.offsetTime){\r\n            keyPropS = this.keyframes[0].s[0];\r\n            isHold = true;\r\n            iterationIndex = 0;\r\n        }else if(frameNum >= this.keyframes[this.keyframes.length - 1].t-this.offsetTime){\r\n            if(this.keyframes[this.keyframes.length - 2].h === 1){\r\n                keyPropS = this.keyframes[this.keyframes.length - 1].s[0];\r\n            }else{\r\n                keyPropS = this.keyframes[this.keyframes.length - 2].e[0];\r\n            }\r\n            isHold = true;\r\n        }else{\r\n            var i = iterationIndex;\r\n            var len = this.keyframes.length- 1,flag = true,keyData,nextKeyData, j, jLen, k, kLen;\r\n            while(flag){\r\n                keyData = this.keyframes[i];\r\n                nextKeyData = this.keyframes[i+1];\r\n                if((nextKeyData.t - this.offsetTime) > frameNum){\r\n                    break;\r\n                }\r\n                if(i < len - 1){\r\n                    i += 1;\r\n                }else{\r\n                    flag = false;\r\n                }\r\n            }\r\n            isHold = keyData.h === 1;\r\n            iterationIndex = i;\r\n\r\n            var perc;\r\n            if(!isHold){\r\n                if(frameNum >= nextKeyData.t-this.offsetTime){\r\n                    perc = 1;\r\n                }else if(frameNum < keyData.t-this.offsetTime){\r\n                    perc = 0;\r\n                }else{\r\n                    var fnc;\r\n                    if(keyData.__fnct){\r\n                        fnc = keyData.__fnct;\r\n                    }else{\r\n                        fnc = BezierFactory.getBezierEasing(keyData.o.x,keyData.o.y,keyData.i.x,keyData.i.y).get;\r\n                        keyData.__fnct = fnc;\r\n                    }\r\n                    perc = fnc((frameNum-(keyData.t-this.offsetTime))/((nextKeyData.t-this.offsetTime)-(keyData.t-this.offsetTime)));\r\n                }\r\n                keyPropE = keyData.e[0];\r\n            }\r\n            keyPropS = keyData.s[0];\r\n        }\r\n        jLen = previousValue._length;\r\n        kLen = keyPropS.i[0].length;\r\n        var hasModified = false;\r\n        var vertexValue;\r\n        for(j=0;j<jLen;j+=1){\r\n            for(k=0;k<kLen;k+=1){\r\n                if(isHold){\r\n                    vertexValue = keyPropS.i[j][k];\r\n                    if(previousValue.i[j][k] !== vertexValue){\r\n                        previousValue.i[j][k] = vertexValue;\r\n                        if(isCurrentRender) {\r\n                            this.pv.i[j][k] = vertexValue;\r\n                        }\r\n                        hasModified = true;\r\n                    }\r\n                    vertexValue = keyPropS.o[j][k];\r\n                    if(previousValue.o[j][k] !== vertexValue){\r\n                        previousValue.o[j][k] = vertexValue;\r\n                        if(isCurrentRender) {\r\n                            this.pv.o[j][k] = vertexValue;\r\n                        }\r\n                        hasModified = true;\r\n                    }\r\n                    vertexValue = keyPropS.v[j][k];\r\n                    if(previousValue.v[j][k] !== vertexValue){\r\n                        previousValue.v[j][k] = vertexValue;\r\n                        if(isCurrentRender) {\r\n                            this.pv.v[j][k] = vertexValue;\r\n                        }\r\n                        hasModified = true;\r\n                    }\r\n                }else{\r\n                    vertexValue = keyPropS.i[j][k]+(keyPropE.i[j][k]-keyPropS.i[j][k])*perc;\r\n                    if(previousValue.i[j][k] !== vertexValue){\r\n                        previousValue.i[j][k] = vertexValue;\r\n                        if(isCurrentRender) {\r\n                            this.pv.i[j][k] = vertexValue;\r\n                        }\r\n                        hasModified = true;\r\n                    }\r\n                    vertexValue = keyPropS.o[j][k]+(keyPropE.o[j][k]-keyPropS.o[j][k])*perc;\r\n                    if(previousValue.o[j][k] !== vertexValue){\r\n                        previousValue.o[j][k] = vertexValue;\r\n                        if(isCurrentRender) {\r\n                            this.pv.o[j][k] = vertexValue;\r\n                        }\r\n                        hasModified = true;\r\n                    }\r\n                    vertexValue = keyPropS.v[j][k]+(keyPropE.v[j][k]-keyPropS.v[j][k])*perc;\r\n                    if(previousValue.v[j][k] !== vertexValue){\r\n                        previousValue.v[j][k] = vertexValue;\r\n                        if(isCurrentRender) {\r\n                            this.pv.v[j][k] = vertexValue;\r\n                        }\r\n                        hasModified = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if(hasModified) {\r\n            previousValue.c = keyPropS.c;\r\n        }\r\n        return {\r\n            iterationIndex: iterationIndex,\r\n            hasModified: hasModified\r\n        }\r\n    }\r\n\r\n    function interpolateShapeCurrentTime(){\r\n        if(this.elem.globalData.frameId === this.frameId){\r\n            return;\r\n        }\r\n        this.mdf = false;\r\n        var frameNum = this.comp.renderedFrame - this.offsetTime;\r\n        var initTime = this.keyframes[0].t - this.offsetTime;\r\n        var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;\r\n        if(!(this.lastFrame !== initFrame && ((this.lastFrame < initTime && frameNum < initTime) || (this.lastFrame > endTime && frameNum > endTime)))){\r\n            ////\r\n            var i = this.lastFrame < frameNum ? this._lastIndex : 0;\r\n            var renderResult = this.interpolateShape(frameNum, i, this.v, true);\r\n            ////\r\n            this._lastIndex = renderResult.iterationIndex;\r\n            this.mdf = renderResult.hasModified;\r\n            if(renderResult.hasModified) {\r\n                this.paths = this.localShapeCollection;\r\n            }\r\n        }\r\n        this.lastFrame = frameNum;\r\n        this.frameId = this.elem.globalData.frameId;\r\n    }\r\n\r\n    function getShapeValue(){\r\n        return this.v;\r\n    }\r\n\r\n    function resetShape(){\r\n        this.paths = this.localShapeCollection;\r\n        if(!this.k){\r\n            this.mdf = false;\r\n        }\r\n    }\r\n\r\n    function ShapeProperty(elem, data, type){\r\n        this.__shapeObject = 1;\r\n        this.comp = elem.comp;\r\n        this.k = false;\r\n        this.mdf = false;\r\n        var pathData = type === 3 ? data.pt.k : data.ks.k;\r\n        this.v = shape_pool.clone(pathData);\r\n        this.pv = shape_pool.clone(this.v);\r\n        this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n        this.paths = this.localShapeCollection;\r\n        this.paths.addShape(this.v);\r\n        this.reset = resetShape;\r\n    }\r\n    ShapeProperty.prototype.interpolateShape = interpolateShape;\r\n    ShapeProperty.prototype.getValue = getShapeValue;\r\n\r\n    function KeyframedShapeProperty(elem,data,type){\r\n        this.__shapeObject = 1;\r\n        this.comp = elem.comp;\r\n        this.elem = elem;\r\n        this.offsetTime = elem.data.st;\r\n        this._lastIndex = 0;\r\n        this.keyframes = type === 3 ? data.pt.k : data.ks.k;\r\n        this.k = true;\r\n        this.kf = true;\r\n        var i, len = this.keyframes[0].s[0].i.length;\r\n        var jLen = this.keyframes[0].s[0].i[0].length;\r\n        this.v = shape_pool.newShape();\r\n        this.v.setPathData(this.keyframes[0].s[0].c, len);\r\n        this.pv = shape_pool.clone(this.v);\r\n        this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n        this.paths = this.localShapeCollection;\r\n        this.paths.addShape(this.v);\r\n        this.lastFrame = initFrame;\r\n        this.reset = resetShape;\r\n    }\r\n    KeyframedShapeProperty.prototype.getValue = interpolateShapeCurrentTime;\r\n    KeyframedShapeProperty.prototype.interpolateShape = interpolateShape;\r\n\r\n    var EllShapeProperty = (function(){\r\n\r\n        var cPoint = roundCorner;\r\n\r\n        function convertEllToPath(){\r\n            var p0 = this.p.v[0], p1 = this.p.v[1], s0 = this.s.v[0]/2, s1 = this.s.v[1]/2;\r\n            if(this.d !== 3){\r\n                this.v.v[0][0] = p0;\r\n                this.v.v[0][1] = p1-s1;\r\n                this.v.v[1][0] = p0 + s0;\r\n                this.v.v[1][1] = p1;\r\n                this.v.v[2][0] = p0;\r\n                this.v.v[2][1] = p1+s1;\r\n                this.v.v[3][0] = p0 - s0;\r\n                this.v.v[3][1] = p1;\r\n                this.v.i[0][0] = p0 - s0*cPoint;\r\n                this.v.i[0][1] = p1 - s1;\r\n                this.v.i[1][0] = p0 + s0;\r\n                this.v.i[1][1] = p1 - s1*cPoint;\r\n                this.v.i[2][0] = p0 + s0*cPoint;\r\n                this.v.i[2][1] = p1 + s1;\r\n                this.v.i[3][0] = p0 - s0;\r\n                this.v.i[3][1] = p1 + s1*cPoint;\r\n                this.v.o[0][0] = p0 + s0*cPoint;\r\n                this.v.o[0][1] = p1 - s1;\r\n                this.v.o[1][0] = p0 + s0;\r\n                this.v.o[1][1] = p1 + s1*cPoint;\r\n                this.v.o[2][0] = p0 - s0*cPoint;\r\n                this.v.o[2][1] = p1 + s1;\r\n                this.v.o[3][0] = p0 - s0;\r\n                this.v.o[3][1] = p1 - s1*cPoint;\r\n            }else{\r\n                this.v.v[0][0] = p0;\r\n                this.v.v[0][1] = p1-s1;\r\n                this.v.v[1][0] = p0 - s0;\r\n                this.v.v[1][1] = p1;\r\n                this.v.v[2][0] = p0;\r\n                this.v.v[2][1] = p1+s1;\r\n                this.v.v[3][0] = p0 + s0;\r\n                this.v.v[3][1] = p1;\r\n                this.v.i[0][0] = p0 + s0*cPoint;\r\n                this.v.i[0][1] = p1 - s1;\r\n                this.v.i[1][0] = p0 - s0;\r\n                this.v.i[1][1] = p1 - s1*cPoint;\r\n                this.v.i[2][0] = p0 - s0*cPoint;\r\n                this.v.i[2][1] = p1 + s1;\r\n                this.v.i[3][0] = p0 + s0;\r\n                this.v.i[3][1] = p1 + s1*cPoint;\r\n                this.v.o[0][0] = p0 - s0*cPoint;\r\n                this.v.o[0][1] = p1 - s1;\r\n                this.v.o[1][0] = p0 - s0;\r\n                this.v.o[1][1] = p1 + s1*cPoint;\r\n                this.v.o[2][0] = p0 + s0*cPoint;\r\n                this.v.o[2][1] = p1 + s1;\r\n                this.v.o[3][0] = p0 + s0;\r\n                this.v.o[3][1] = p1 - s1*cPoint;\r\n            }\r\n        }\r\n\r\n        function processKeys(frameNum){\r\n            var i, len = this.dynamicProperties.length;\r\n            if(this.elem.globalData.frameId === this.frameId){\r\n                return;\r\n            }\r\n            this.mdf = false;\r\n            this.frameId = this.elem.globalData.frameId;\r\n\r\n            for(i=0;i<len;i+=1){\r\n                this.dynamicProperties[i].getValue(frameNum);\r\n                if(this.dynamicProperties[i].mdf){\r\n                    this.mdf = true;\r\n                }\r\n            }\r\n            if(this.mdf){\r\n                this.convertEllToPath();\r\n            }\r\n        }\r\n\r\n        return function EllShapeProperty(elem,data) {\r\n            /*this.v = {\r\n                v: Array.apply(null,{length:4}),\r\n                i: Array.apply(null,{length:4}),\r\n                o: Array.apply(null,{length:4}),\r\n                c: true\r\n            };*/\r\n            this.v = shape_pool.newShape();\r\n            this.v.setPathData(true, 4);\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.paths = this.localShapeCollection;\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.d = data.d;\r\n            this.dynamicProperties = [];\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.frameId = -1;\r\n            this.mdf = false;\r\n            this.getValue = processKeys;\r\n            this.convertEllToPath = convertEllToPath;\r\n            this.reset = resetShape;\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this.dynamicProperties);\r\n            this.s = PropertyFactory.getProp(elem,data.s,1,0,this.dynamicProperties);\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.convertEllToPath();\r\n            }\r\n        }\r\n    }());\r\n\r\n    var StarShapeProperty = (function() {\r\n\r\n        function convertPolygonToPath(){\r\n            var numPts = Math.floor(this.pt.v);\r\n            var angle = Math.PI*2/numPts;\r\n            /*this.v.v.length = numPts;\r\n            this.v.i.length = numPts;\r\n            this.v.o.length = numPts;*/\r\n            var rad = this.or.v;\r\n            var roundness = this.os.v;\r\n            var perimSegment = 2*Math.PI*rad/(numPts*4);\r\n            var i, currentAng = -Math.PI/ 2;\r\n            var dir = this.data.d === 3 ? -1 : 1;\r\n            currentAng += this.r.v;\r\n            this.v._length = 0;\r\n            for(i=0;i<numPts;i+=1){\r\n                var x = rad * Math.cos(currentAng);\r\n                var y = rad * Math.sin(currentAng);\r\n                var ox = x === 0 && y === 0 ? 0 : y/Math.sqrt(x*x + y*y);\r\n                var oy = x === 0 && y === 0 ? 0 : -x/Math.sqrt(x*x + y*y);\r\n                x +=  + this.p.v[0];\r\n                y +=  + this.p.v[1];\r\n                this.v.setTripleAt(x,y,x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir,x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir, i, true);\r\n                /*this.v.v[i] = [x,y];\r\n                this.v.i[i] = [x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir];\r\n                this.v.o[i] = [x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir];*/\r\n                currentAng += angle*dir;\r\n            }\r\n            this.paths.length = 0;\r\n            this.paths[0] = this.v;\r\n        }\r\n\r\n        function convertStarToPath() {\r\n            var numPts = Math.floor(this.pt.v)*2;\r\n            var angle = Math.PI*2/numPts;\r\n            /*this.v.v.length = numPts;\r\n            this.v.i.length = numPts;\r\n            this.v.o.length = numPts;*/\r\n            var longFlag = true;\r\n            var longRad = this.or.v;\r\n            var shortRad = this.ir.v;\r\n            var longRound = this.os.v;\r\n            var shortRound = this.is.v;\r\n            var longPerimSegment = 2*Math.PI*longRad/(numPts*2);\r\n            var shortPerimSegment = 2*Math.PI*shortRad/(numPts*2);\r\n            var i, rad,roundness,perimSegment, currentAng = -Math.PI/ 2;\r\n            currentAng += this.r.v;\r\n            var dir = this.data.d === 3 ? -1 : 1;\r\n            this.v._length = 0;\r\n            for(i=0;i<numPts;i+=1){\r\n                rad = longFlag ? longRad : shortRad;\r\n                roundness = longFlag ? longRound : shortRound;\r\n                perimSegment = longFlag ? longPerimSegment : shortPerimSegment;\r\n                var x = rad * Math.cos(currentAng);\r\n                var y = rad * Math.sin(currentAng);\r\n                var ox = x === 0 && y === 0 ? 0 : y/Math.sqrt(x*x + y*y);\r\n                var oy = x === 0 && y === 0 ? 0 : -x/Math.sqrt(x*x + y*y);\r\n                x +=  + this.p.v[0];\r\n                y +=  + this.p.v[1];\r\n                this.v.setTripleAt(x,y,x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir,x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir, i, true);\r\n\r\n                /*this.v.v[i] = [x,y];\r\n                this.v.i[i] = [x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir];\r\n                this.v.o[i] = [x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir];\r\n                this.v._length = numPts;*/\r\n                longFlag = !longFlag;\r\n                currentAng += angle*dir;\r\n            }\r\n        }\r\n\r\n        function processKeys() {\r\n            if(this.elem.globalData.frameId === this.frameId){\r\n                return;\r\n            }\r\n            this.mdf = false;\r\n            this.frameId = this.elem.globalData.frameId;\r\n            var i, len = this.dynamicProperties.length;\r\n\r\n            for(i=0;i<len;i+=1){\r\n                this.dynamicProperties[i].getValue();\r\n                if(this.dynamicProperties[i].mdf){\r\n                    this.mdf = true;\r\n                }\r\n            }\r\n            if(this.mdf){\r\n                this.convertToPath();\r\n            }\r\n        }\r\n\r\n        return function StarShapeProperty(elem,data) {\r\n            /*this.v = {\r\n                v: [],\r\n                i: [],\r\n                o: [],\r\n                c: true\r\n            };*/\r\n            this.v = shape_pool.newShape();\r\n            this.v.setPathData(true, 0);\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.data = data;\r\n            this.frameId = -1;\r\n            this.d = data.d;\r\n            this.dynamicProperties = [];\r\n            this.mdf = false;\r\n            this.getValue = processKeys;\r\n            this.reset = resetShape;\r\n            if(data.sy === 1){\r\n                this.ir = PropertyFactory.getProp(elem,data.ir,0,0,this.dynamicProperties);\r\n                this.is = PropertyFactory.getProp(elem,data.is,0,0.01,this.dynamicProperties);\r\n                this.convertToPath = convertStarToPath;\r\n            } else {\r\n                this.convertToPath = convertPolygonToPath;\r\n            }\r\n            this.pt = PropertyFactory.getProp(elem,data.pt,0,0,this.dynamicProperties);\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this.dynamicProperties);\r\n            this.r = PropertyFactory.getProp(elem,data.r,0,degToRads,this.dynamicProperties);\r\n            this.or = PropertyFactory.getProp(elem,data.or,0,0,this.dynamicProperties);\r\n            this.os = PropertyFactory.getProp(elem,data.os,0,0.01,this.dynamicProperties);\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.paths = this.localShapeCollection;\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.convertToPath();\r\n            }\r\n        }\r\n    }());\r\n\r\n    var RectShapeProperty = (function() {\r\n        function processKeys(frameNum){\r\n            if(this.elem.globalData.frameId === this.frameId){\r\n                return;\r\n            }\r\n            this.mdf = false;\r\n            this.frameId = this.elem.globalData.frameId;\r\n            var i, len = this.dynamicProperties.length;\r\n\r\n            for(i=0;i<len;i+=1){\r\n                this.dynamicProperties[i].getValue(frameNum);\r\n                if(this.dynamicProperties[i].mdf){\r\n                    this.mdf = true;\r\n                }\r\n            }\r\n            if(this.mdf){\r\n                this.convertRectToPath();\r\n            }\r\n\r\n        }\r\n\r\n        function convertRectToPath(){\r\n            var p0 = this.p.v[0], p1 = this.p.v[1], v0 = this.s.v[0]/2, v1 = this.s.v[1]/2;\r\n            var round = bm_min(v0,v1,this.r.v);\r\n            var cPoint = round*(1-roundCorner);\r\n            this.v._length = 0;\r\n\r\n            if(this.d === 2 || this.d === 1) {\r\n                this.v.setTripleAt(p0+v0, p1-v1+round,p0+v0, p1-v1+round,p0+v0,p1-v1+cPoint,0, true);\r\n                this.v.setTripleAt(p0+v0, p1+v1-round,p0+v0, p1+v1-cPoint,p0+v0, p1+v1-round,1, true);\r\n                if(round!== 0){\r\n                    this.v.setTripleAt(p0+v0-round, p1+v1,p0+v0-round,p1+v1,p0+v0-cPoint,p1+v1,2, true);\r\n                    this.v.setTripleAt(p0-v0+round,p1+v1,p0-v0+cPoint,p1+v1,p0-v0+round,p1+v1,3, true);\r\n                    this.v.setTripleAt(p0-v0,p1+v1-round,p0-v0,p1+v1-round,p0-v0,p1+v1-cPoint,4, true);\r\n                    this.v.setTripleAt(p0-v0,p1-v1+round,p0-v0,p1-v1+cPoint,p0-v0,p1-v1+round,5, true);\r\n                    this.v.setTripleAt(p0-v0+round,p1-v1,p0-v0+round,p1-v1,p0-v0+cPoint,p1-v1,6, true);\r\n                    this.v.setTripleAt(p0+v0-round,p1-v1,p0+v0-cPoint,p1-v1,p0+v0-round,p1-v1,7, true);\r\n                } else {\r\n                    this.v.setTripleAt(p0-v0,p1+v1,p0-v0+cPoint,p1+v1,p0-v0,p1+v1,2);\r\n                    this.v.setTripleAt(p0-v0,p1-v1,p0-v0,p1-v1+cPoint,p0-v0,p1-v1,3);\r\n                }\r\n            }else{\r\n                this.v.setTripleAt(p0+v0,p1-v1+round,p0+v0,p1-v1+cPoint,p0+v0,p1-v1+round,0, true);\r\n                if(round!== 0){\r\n                    this.v.setTripleAt(p0+v0-round,p1-v1,p0+v0-round,p1-v1,p0+v0-cPoint,p1-v1,1, true);\r\n                    this.v.setTripleAt(p0-v0+round,p1-v1,p0-v0+cPoint,p1-v1,p0-v0+round,p1-v1,2, true);\r\n                    this.v.setTripleAt(p0-v0,p1-v1+round,p0-v0,p1-v1+round,p0-v0,p1-v1+cPoint,3, true);\r\n                    this.v.setTripleAt(p0-v0,p1+v1-round,p0-v0,p1+v1-cPoint,p0-v0,p1+v1-round,4, true);\r\n                    this.v.setTripleAt(p0-v0+round,p1+v1,p0-v0+round,p1+v1,p0-v0+cPoint,p1+v1,5, true);\r\n                    this.v.setTripleAt(p0+v0-round,p1+v1,p0+v0-cPoint,p1+v1,p0+v0-round,p1+v1,6, true);\r\n                    this.v.setTripleAt(p0+v0,p1+v1-round,p0+v0,p1+v1-round,p0+v0,p1+v1-cPoint,7, true);\r\n                } else {\r\n                    this.v.setTripleAt(p0-v0,p1-v1,p0-v0+cPoint,p1-v1,p0-v0,p1-v1,1, true);\r\n                    this.v.setTripleAt(p0-v0,p1+v1,p0-v0,p1+v1-cPoint,p0-v0,p1+v1,2, true);\r\n                    this.v.setTripleAt(p0+v0,p1+v1,p0+v0-cPoint,p1+v1,p0+v0,p1+v1,3, true);\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        return function RectShapeProperty(elem,data) {\r\n            this.v = shape_pool.newShape();\r\n            this.v.c = true;\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.paths = this.localShapeCollection;\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.frameId = -1;\r\n            this.d = data.d;\r\n            this.dynamicProperties = [];\r\n            this.mdf = false;\r\n            this.getValue = processKeys;\r\n            this.convertRectToPath = convertRectToPath;\r\n            this.reset = resetShape;\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this.dynamicProperties);\r\n            this.s = PropertyFactory.getProp(elem,data.s,1,0,this.dynamicProperties);\r\n            this.r = PropertyFactory.getProp(elem,data.r,0,0,this.dynamicProperties);\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.convertRectToPath();\r\n            }\r\n        }\r\n    }());\r\n\r\n    function getShapeProp(elem,data,type, arr){\r\n        var prop;\r\n        if(type === 3 || type === 4){\r\n            var dataProp = type === 3 ? data.pt : data.ks;\r\n            var keys = dataProp.k;\r\n            if(dataProp.a === 1 || keys.length){\r\n                prop = new KeyframedShapeProperty(elem, data, type);\r\n            }else{\r\n                prop = new ShapeProperty(elem, data, type);\r\n            }\r\n        }else if(type === 5){\r\n            prop = new RectShapeProperty(elem, data);\r\n        }else if(type === 6){\r\n            prop = new EllShapeProperty(elem, data);\r\n        }else if(type === 7){\r\n            prop = new StarShapeProperty(elem, data);\r\n        }\r\n        if(prop.k){\r\n            arr.push(prop);\r\n        }\r\n        return prop;\r\n    }\r\n\r\n    function getConstructorFunction() {\r\n        return ShapeProperty;\r\n    }\r\n\r\n    function getKeyframedConstructorFunction() {\r\n        return KeyframedShapeProperty;\r\n    }\r\n\r\n    var ob = {};\r\n    ob.getShapeProp = getShapeProp;\r\n    ob.getConstructorFunction = getConstructorFunction;\r\n    ob.getKeyframedConstructorFunction = getKeyframedConstructorFunction;\r\n    return ob;\r\n}());\nvar ShapeModifiers = (function(){\r\n    var ob = {};\r\n    var modifiers = {};\r\n    ob.registerModifier = registerModifier;\r\n    ob.getModifier = getModifier;\r\n\r\n    function registerModifier(nm,factory){\r\n        if(!modifiers[nm]){\r\n            modifiers[nm] = factory;\r\n        }\r\n    }\r\n\r\n    function getModifier(nm,elem, data, dynamicProperties){\r\n        return new modifiers[nm](elem, data, dynamicProperties);\r\n    }\r\n\r\n    return ob;\r\n}());\r\n\r\nfunction ShapeModifier(){}\r\nShapeModifier.prototype.initModifierProperties = function(){};\r\nShapeModifier.prototype.addShapeToModifier = function(){};\r\nShapeModifier.prototype.addShape = function(data){\r\n    if(!this.closed){\r\n        this.shapes.push({shape:data.sh, data: data, localShapeCollection:shapeCollection_pool.newShapeCollection()});\r\n        this.addShapeToModifier(data.sh);\r\n    }\r\n}\r\nShapeModifier.prototype.init = function(elem,data,dynamicProperties){\r\n    this.elem = elem;\r\n    this.frameId = -1;\r\n    this.shapes = [];\r\n    this.dynamicProperties = [];\r\n    this.mdf = false;\r\n    this.closed = false;\r\n    this.k = false;\r\n    this.comp = elem.comp;\r\n    this.initModifierProperties(elem,data);\r\n    if(this.dynamicProperties.length){\r\n        this.k = true;\r\n        dynamicProperties.push(this);\r\n    }else{\r\n        this.getValue(true);\r\n    }\r\n}\nfunction TrimModifier(){};\r\nextendPrototype(ShapeModifier,TrimModifier);\r\nTrimModifier.prototype.processKeys = function(forceRender){\r\n    if(this.elem.globalData.frameId === this.frameId && !forceRender){\r\n        return;\r\n    }\r\n    this.mdf = forceRender ? true : false;\r\n    this.frameId = this.elem.globalData.frameId;\r\n    var i, len = this.dynamicProperties.length;\r\n\r\n    for(i=0;i<len;i+=1){\r\n        this.dynamicProperties[i].getValue();\r\n        if(this.dynamicProperties[i].mdf){\r\n            this.mdf = true;\r\n        }\r\n    }\r\n    if(this.mdf || forceRender){\r\n        var o = (this.o.v%360)/360;\r\n        if(o < 0){\r\n            o += 1;\r\n        }\r\n        var s = this.s.v + o;\r\n        var e = this.e.v + o;\r\n        if(s == e){\r\n\r\n        }\r\n        if(s>e){\r\n            var _s = s;\r\n            s = e;\r\n            e = _s;\r\n        }\r\n        this.sValue = s;\r\n        this.eValue = e;\r\n        this.oValue = o;\r\n    }\r\n}\r\nTrimModifier.prototype.initModifierProperties = function(elem,data){\r\n    this.sValue = 0;\r\n    this.eValue = 0;\r\n    this.oValue = 0;\r\n    this.getValue = this.processKeys;\r\n    this.s = PropertyFactory.getProp(elem,data.s,0,0.01,this.dynamicProperties);\r\n    this.e = PropertyFactory.getProp(elem,data.e,0,0.01,this.dynamicProperties);\r\n    this.o = PropertyFactory.getProp(elem,data.o,0,0,this.dynamicProperties);\r\n    this.m = data.m;\r\n    if(!this.dynamicProperties.length){\r\n        this.getValue(true);\r\n    }\r\n};\r\n\r\nTrimModifier.prototype.calculateShapeEdges = function(s, e, shapeLength, addedLength, totalModifierLength) {\r\n    var segments = []\r\n    if(e <= 1){\r\n        segments.push({\r\n            s: s,\r\n            e: e\r\n        })\r\n    }else if(s >= 1){\r\n        segments.push({\r\n            s: s - 1,\r\n            e: e - 1\r\n        })\r\n    }else{\r\n        segments.push({\r\n            s: s,\r\n            e: 1\r\n        })\r\n        segments.push({\r\n            s: 0,\r\n            e: e - 1\r\n        })\r\n    }\r\n    var shapeSegments = [];\r\n    var i, len = segments.length, segmentOb;\r\n    for(i = 0; i < len; i += 1) {\r\n        segmentOb = segments[i];\r\n        if (segmentOb.e * totalModifierLength < addedLength || segmentOb.s * totalModifierLength > addedLength + shapeLength) {\r\n            \r\n        } else {\r\n            var shapeS, shapeE;\r\n            if(segmentOb.s * totalModifierLength <= addedLength) {\r\n                shapeS = 0;\r\n            } else {\r\n                shapeS = (segmentOb.s * totalModifierLength - addedLength) / shapeLength;\r\n            }\r\n            if(segmentOb.e * totalModifierLength >= addedLength + shapeLength) {\r\n                shapeE = 1;\r\n            } else {\r\n                shapeE = ((segmentOb.e * totalModifierLength - addedLength) / shapeLength);\r\n            }\r\n            shapeSegments.push([shapeS, shapeE]);\r\n        }\r\n    }\r\n    if(!shapeSegments.length){\r\n        shapeSegments.push([0,0]);\r\n    }\r\n    return shapeSegments;\r\n}\r\n\r\nTrimModifier.prototype.processShapes = function(firstFrame){\r\n    var shapePaths;\r\n    var i, len = this.shapes.length;\r\n    var j, jLen;\r\n    var s = this.sValue;\r\n    var e = this.eValue;\r\n    var pathsData,pathData, totalShapeLength, totalModifierLength = 0;\r\n\r\n    if(e === s){\r\n        for(i=0;i<len;i+=1){\r\n            this.shapes[i].localShapeCollection.releaseShapes();\r\n            this.shapes[i].shape.mdf = true;\r\n            this.shapes[i].shape.paths = this.shapes[i].localShapeCollection;\r\n        }\r\n    } else if(!((e === 1 && s === 0) || (e===0 && s === 1))){\r\n        var segments = [], shapeData, localShapeCollection;\r\n        for(i=0;i<len;i+=1){\r\n            shapeData = this.shapes[i];\r\n            if(!shapeData.shape.mdf && !this.mdf && !firstFrame && this.m !== 2){\r\n                shapeData.shape.paths = shapeData.localShapeCollection;\r\n            } else {\r\n                shapePaths = shapeData.shape.paths;\r\n                jLen = shapePaths._length;\r\n                totalShapeLength = 0;\r\n                if(!shapeData.shape.mdf && shapeData.pathsData){\r\n                    totalShapeLength = shapeData.totalShapeLength;\r\n                } else {\r\n                    pathsData = [];\r\n                    for(j=0;j<jLen;j+=1){\r\n                        pathData = bez.getSegmentsLength(shapePaths.shapes[j]);\r\n                        pathsData.push(pathData);\r\n                        totalShapeLength += pathData.totalLength;\r\n                    }\r\n                    shapeData.totalShapeLength = totalShapeLength;\r\n                    shapeData.pathsData = pathsData;\r\n                }\r\n\r\n                totalModifierLength += totalShapeLength;\r\n                shapeData.shape.mdf = true;\r\n            }\r\n        }\r\n        var shapeS = s, shapeE = e, addedLength = 0;\r\n        var j, jLen;\r\n        for(i = len - 1; i >= 0; i -= 1){\r\n            shapeData = this.shapes[i];\r\n            if (shapeData.shape.mdf) {\r\n                localShapeCollection = shapeData.localShapeCollection;\r\n                localShapeCollection.releaseShapes();\r\n                if(this.m === 2 && len > 1) {\r\n                    var edges = this.calculateShapeEdges(s, e, shapeData.totalShapeLength, addedLength, totalModifierLength);\r\n                    addedLength += shapeData.totalShapeLength;\r\n                } else {\r\n                    edges = [[shapeS, shapeE]]\r\n                }\r\n                jLen = edges.length;\r\n                for (j = 0; j < jLen; j += 1) {\r\n                    shapeS = edges[j][0];\r\n                    shapeE = edges[j][1];\r\n                    segments.length = 0;\r\n                    if(shapeE <= 1){\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * shapeS,\r\n                            e:shapeData.totalShapeLength * shapeE\r\n                        })\r\n                    }else if(shapeS >= 1){\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * (shapeS - 1),\r\n                            e:shapeData.totalShapeLength * (shapeE - 1)\r\n                        })\r\n                    }else{\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * shapeS,\r\n                            e:shapeData.totalShapeLength\r\n                        })\r\n                        segments.push({\r\n                            s:0,\r\n                            e:shapeData.totalShapeLength*(shapeE - 1)\r\n                        })\r\n                    }\r\n                    var newShapesData = this.addShapes(shapeData,segments[0]);\r\n                    if (segments[0].s !== segments[0].e) {\r\n                        var lastPos;\r\n                        if(segments.length > 1){\r\n                            if(shapeData.shape.v.c){\r\n                                var lastShape = newShapesData.pop();\r\n                                this.addPaths(newShapesData, localShapeCollection);\r\n                                newShapesData = this.addShapes(shapeData,segments[1], lastShape);\r\n                            } else {\r\n                                this.addPaths(newShapesData, localShapeCollection);\r\n                                newShapesData = this.addShapes(shapeData,segments[1]);\r\n                            }\r\n                        } \r\n                        this.addPaths(newShapesData, localShapeCollection);\r\n                    }\r\n                    \r\n                }\r\n                shapeData.shape.paths = localShapeCollection;\r\n            }\r\n        }\r\n    } else if(this.mdf){\r\n        for(i=0;i<len;i+=1){\r\n            this.shapes[i].shape.mdf = true;\r\n        }\r\n    }\r\n    if(!this.dynamicProperties.length){\r\n        this.mdf = false;\r\n    }\r\n}\r\n\r\nTrimModifier.prototype.addPaths = function(newPaths, localShapeCollection) {\r\n    var i, len = newPaths.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        localShapeCollection.addShape(newPaths[i])\r\n    }\r\n}\r\n\r\nTrimModifier.prototype.addSegment = function(pt1,pt2,pt3,pt4,shapePath,pos, newShape) {\r\n    /*console.log(pt1, 'vertex: v, at: ', pos);\r\n    console.log(pt2, 'vertex: o, at: ', pos);\r\n    console.log(pt3, 'vertex: i, at: ', pos + 1);\r\n    console.log(pt4, 'vertex: v, at: ', pos + 1);\r\n    console.log('newShape: ', newShape);*/\r\n    shapePath.setXYAt(pt2[0],pt2[1],'o',pos);\r\n    shapePath.setXYAt(pt3[0],pt3[1],'i',pos + 1);\r\n    if(newShape){\r\n        shapePath.setXYAt(pt1[0],pt1[1],'v',pos);\r\n    }\r\n    shapePath.setXYAt(pt4[0],pt4[1],'v',pos + 1);\r\n}\r\n\r\nTrimModifier.prototype.addShapes = function(shapeData, shapeSegment, shapePath){\r\n    var pathsData = shapeData.pathsData;\r\n    var shapePaths = shapeData.shape.paths.shapes;\r\n    var i, len = shapeData.shape.paths._length, j, jLen;\r\n    var addedLength = 0;\r\n    var currentLengthData,segmentCount;\r\n    var lengths;\r\n    var segment;\r\n    var shapes = [];\r\n    var initPos;\r\n    var newShape = true;\r\n    if(!shapePath){\r\n        shapePath = shape_pool.newShape();\r\n        segmentCount = 0;\r\n        initPos = 0;\r\n    } else {\r\n        segmentCount = shapePath._length;\r\n        initPos = shapePath._length;\r\n    }\r\n    shapes.push(shapePath);\r\n    for(i=0;i<len;i+=1){\r\n        lengths = pathsData[i].lengths;\r\n        shapePath.c = shapePaths[i].c;\r\n        jLen = shapePaths[i].c ? lengths.length : lengths.length + 1;\r\n        for(j=1;j<jLen;j+=1){\r\n            currentLengthData = lengths[j-1];\r\n            if(addedLength + currentLengthData.addedLength < shapeSegment.s){\r\n                addedLength += currentLengthData.addedLength;\r\n                shapePath.c = false;\r\n            } else if(addedLength > shapeSegment.e){\r\n                shapePath.c = false;\r\n                break;\r\n            } else {\r\n                if(shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + currentLengthData.addedLength){\r\n                    this.addSegment(shapePaths[i].v[j-1],shapePaths[i].o[j-1],shapePaths[i].i[j],shapePaths[i].v[j],shapePath,segmentCount,newShape);\r\n                    newShape = false;\r\n                } else {\r\n                    segment = bez.getNewSegment(shapePaths[i].v[j-1],shapePaths[i].v[j],shapePaths[i].o[j-1],shapePaths[i].i[j], (shapeSegment.s - addedLength)/currentLengthData.addedLength,(shapeSegment.e - addedLength)/currentLengthData.addedLength, lengths[j-1]);\r\n                    this.addSegment(segment.pt1,segment.pt3,segment.pt4,segment.pt2,shapePath,segmentCount,newShape);\r\n                    newShape = false;\r\n                    shapePath.c = false;\r\n                }\r\n                addedLength += currentLengthData.addedLength;\r\n                segmentCount += 1;\r\n            }\r\n        }\r\n        if(shapePaths[i].c){\r\n            currentLengthData = lengths[j-1];\r\n            if(addedLength <= shapeSegment.e){\r\n                var segmentLength = lengths[j-1].addedLength;\r\n                if(shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + segmentLength){\r\n                    this.addSegment(shapePaths[i].v[j-1],shapePaths[i].o[j-1],shapePaths[i].i[0],shapePaths[i].v[0],shapePath,segmentCount,newShape);\r\n                    newShape = false;\r\n                }else{\r\n                    segment = bez.getNewSegment(shapePaths[i].v[j-1],shapePaths[i].v[0],shapePaths[i].o[j-1],shapePaths[i].i[0], (shapeSegment.s - addedLength)/segmentLength,(shapeSegment.e - addedLength)/segmentLength, lengths[j-1]);\r\n                    this.addSegment(segment.pt1,segment.pt3,segment.pt4,segment.pt2,shapePath,segmentCount,newShape);\r\n                    newShape = false;\r\n                    shapePath.c = false;\r\n                }\r\n            } else {\r\n                shapePath.c = false;\r\n            }\r\n            addedLength += currentLengthData.addedLength;\r\n            segmentCount += 1;\r\n        }\r\n        if(shapePath._length){\r\n            shapePath.setXYAt(shapePath.v[initPos][0],shapePath.v[initPos][1],'i',initPos);\r\n            shapePath.setXYAt(shapePath.v[shapePath._length - 1][0],shapePath.v[shapePath._length - 1][1],'o',shapePath._length - 1);\r\n        }\r\n        if(addedLength > shapeSegment.e){\r\n            break;\r\n        }\r\n        if(i<len-1){\r\n            shapePath = shape_pool.newShape();\r\n            newShape = true;\r\n            shapes.push(shapePath);\r\n            segmentCount = 0;\r\n        }\r\n    }\r\n    return shapes;\r\n\r\n}\r\n\r\n\r\nShapeModifiers.registerModifier('tm',TrimModifier);\nfunction RoundCornersModifier(){};\r\nextendPrototype(ShapeModifier,RoundCornersModifier);\r\nRoundCornersModifier.prototype.processKeys = function(forceRender){\r\n    if(this.elem.globalData.frameId === this.frameId && !forceRender){\r\n        return;\r\n    }\r\n    this.mdf = forceRender ? true : false;\r\n    this.frameId = this.elem.globalData.frameId;\r\n    var i, len = this.dynamicProperties.length;\r\n\r\n    for(i=0;i<len;i+=1){\r\n        this.dynamicProperties[i].getValue();\r\n        if(this.dynamicProperties[i].mdf){\r\n            this.mdf = true;\r\n        }\r\n    }\r\n}\r\nRoundCornersModifier.prototype.initModifierProperties = function(elem,data){\r\n    this.getValue = this.processKeys;\r\n    this.rd = PropertyFactory.getProp(elem,data.r,0,null,this.dynamicProperties);\r\n    if(!this.dynamicProperties.length){\r\n        this.getValue(true);\r\n    }\r\n};\r\n\r\nRoundCornersModifier.prototype.processPath = function(path, round){\r\n    var cloned_path = shape_pool.newShape();\r\n    cloned_path.c = path.c;\r\n    var i, len = path._length;\r\n    var currentV,currentI,currentO,closerV, newV,newO,newI,distance,newPosPerc,index = 0;\r\n    var vX,vY,oX,oY,iX,iY;\r\n    for(i=0;i<len;i+=1){\r\n        currentV = path.v[i];\r\n        currentO = path.o[i];\r\n        currentI = path.i[i];\r\n        if(currentV[0]===currentO[0] && currentV[1]===currentO[1] && currentV[0]===currentI[0] && currentV[1]===currentI[1]){\r\n            if((i===0 || i === len - 1) && !path.c){\r\n                cloned_path.setTripleAt(currentV[0],currentV[1],currentO[0],currentO[1],currentI[0],currentI[1],index);\r\n                /*cloned_path.v[index] = currentV;\r\n                cloned_path.o[index] = currentO;\r\n                cloned_path.i[index] = currentI;*/\r\n                index += 1;\r\n            } else {\r\n                if(i===0){\r\n                    closerV = path.v[len-1];\r\n                } else {\r\n                    closerV = path.v[i-1];\r\n                }\r\n                distance = Math.sqrt(Math.pow(currentV[0]-closerV[0],2)+Math.pow(currentV[1]-closerV[1],2));\r\n                newPosPerc = distance ? Math.min(distance/2,round)/distance : 0;\r\n                vX = iX = currentV[0]+(closerV[0]-currentV[0])*newPosPerc;\r\n                vY = iY = currentV[1]-(currentV[1]-closerV[1])*newPosPerc;\r\n                oX = vX-(vX-currentV[0])*roundCorner;\r\n                oY = vY-(vY-currentV[1])*roundCorner;\r\n                cloned_path.setTripleAt(vX,vY,oX,oY,iX,iY,index);\r\n                index += 1;\r\n\r\n                if(i === len - 1){\r\n                    closerV = path.v[0];\r\n                } else {\r\n                    closerV = path.v[i+1];\r\n                }\r\n                distance = Math.sqrt(Math.pow(currentV[0]-closerV[0],2)+Math.pow(currentV[1]-closerV[1],2));\r\n                newPosPerc = distance ? Math.min(distance/2,round)/distance : 0;\r\n                vX = oX = currentV[0]+(closerV[0]-currentV[0])*newPosPerc;\r\n                vY = oY = currentV[1]+(closerV[1]-currentV[1])*newPosPerc;\r\n                iX = vX-(vX-currentV[0])*roundCorner;\r\n                iY = vY-(vY-currentV[1])*roundCorner;\r\n                cloned_path.setTripleAt(vX,vY,oX,oY,iX,iY,index);\r\n                index += 1;\r\n            }\r\n        } else {\r\n            cloned_path.setTripleAt(path.v[i][0],path.v[i][1],path.o[i][0],path.o[i][1],path.i[i][0],path.i[i][1],index);\r\n            index += 1;\r\n        }\r\n    }\r\n    return cloned_path;\r\n}\r\n\r\nRoundCornersModifier.prototype.processShapes = function(firstFrame){\r\n    var shapePaths;\r\n    var i, len = this.shapes.length;\r\n    var j, jLen;\r\n    var rd = this.rd.v;\r\n\r\n    if(rd !== 0){\r\n        var shapeData, newPaths, localShapeCollection;\r\n        for(i=0;i<len;i+=1){\r\n            shapeData = this.shapes[i];\r\n            newPaths = shapeData.shape.paths;\r\n            localShapeCollection = shapeData.localShapeCollection;\r\n            if(!(!shapeData.shape.mdf && !this.mdf && !firstFrame)){\r\n                localShapeCollection.releaseShapes();\r\n                shapeData.shape.mdf = true;\r\n                shapePaths = shapeData.shape.paths.shapes;\r\n                jLen = shapeData.shape.paths._length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    localShapeCollection.addShape(this.processPath(shapePaths[j],rd));\r\n                }\r\n            }\r\n            shapeData.shape.paths = shapeData.localShapeCollection;\r\n        }\r\n\r\n    }\r\n    if(!this.dynamicProperties.length){\r\n        this.mdf = false;\r\n    }\r\n}\r\n\r\n\r\nShapeModifiers.registerModifier('rd',RoundCornersModifier);\nfunction RepeaterModifier(){};\r\nRepeaterModifier.prototype.processKeys = function(forceRender){\r\n    if(this.elem.globalData.frameId === this.frameId && !forceRender){\r\n        return;\r\n    }\r\n    this.mdf = forceRender ? true : false;\r\n    var i, len = this.dynamicProperties.length;\r\n\r\n    for(i=0;i<len;i+=1){\r\n        this.dynamicProperties[i].getValue();\r\n        if(this.dynamicProperties[i].mdf){\r\n            this.mdf = true;\r\n        }\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.initModifierProperties = function(elem,data){\r\n    this.getValue = this.processKeys;\r\n    this.c = PropertyFactory.getProp(elem,data.c,0,null,this.dynamicProperties);\r\n    this.o = PropertyFactory.getProp(elem,data.o,0,null,this.dynamicProperties);\r\n    this.tr = PropertyFactory.getProp(elem,data.tr,2,null,this.dynamicProperties);\r\n    this.data = data;\r\n    if(!this.dynamicProperties.length){\r\n        this.getValue(true);\r\n    }\r\n    this.pMatrix = new Matrix();\r\n    this.rMatrix = new Matrix();\r\n    this.sMatrix = new Matrix();\r\n    this.tMatrix = new Matrix();\r\n    this.matrix = new Matrix();\r\n};\r\n\r\nRepeaterModifier.prototype.applyTransforms = function(pMatrix, rMatrix, sMatrix, transform, perc, inv){\r\n    var dir = inv ? -1 : 1;\r\n    var scaleX = transform.s.v[0] + (1 - transform.s.v[0]) * (1 - perc);\r\n    var scaleY = transform.s.v[1] + (1 - transform.s.v[1]) * (1 - perc);\r\n    pMatrix.translate(transform.p.v[0] * dir * perc, transform.p.v[1] * dir * perc, transform.p.v[2]);\r\n    rMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\r\n    rMatrix.rotate(-transform.r.v * dir * perc);\r\n    rMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\r\n    sMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\r\n    sMatrix.scale(inv ? 1/scaleX : scaleX, inv ? 1/scaleY : scaleY);\r\n    sMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\r\n}\r\n\r\nRepeaterModifier.prototype.init = function(elem, arr, pos, elemsData, dynamicProperties) {\r\n    this.elem = elem;\r\n    this.arr = arr;\r\n    this.pos = pos;\r\n    this.elemsData = elemsData;\r\n    this._currentCopies = 0;\r\n    this._elements = [];\r\n    this._groups = [];\r\n    this.dynamicProperties = [];\r\n    this.frameId = -1;\r\n    this.initModifierProperties(elem,arr[pos]);\r\n    var cont = 0;\r\n    while(pos>0){\r\n        pos -= 1;\r\n        //this._elements.unshift(arr.splice(pos,1)[0]);\r\n        this._elements.unshift(arr[pos]);\r\n        cont += 1;\r\n    }\r\n    if(this.dynamicProperties.length){\r\n        this.k = true;\r\n        dynamicProperties.push(this);\r\n    }else{\r\n        this.getValue(true);\r\n    }\r\n}\r\n\r\nRepeaterModifier.prototype.resetElements = function(elements){\r\n    var i, len = elements.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        elements[i]._processed = false;\r\n        if(elements[i].ty === 'gr'){\r\n            this.resetElements(elements[i].it);\r\n        }\r\n    }\r\n}\r\n\r\nRepeaterModifier.prototype.cloneElements = function(elements){\r\n    var i, len = elements.length;\r\n    var newElements = JSON.parse(JSON.stringify(elements));\r\n    this.resetElements(newElements);\r\n    return newElements;\r\n}\r\n\r\nRepeaterModifier.prototype.changeGroupRender = function(elements, renderFlag) {\r\n    var i, len = elements.length;\r\n    for(i = 0; i < len ; i += 1) {\r\n        elements[i]._render = renderFlag;\r\n        if(elements[i].ty === 'gr') {\r\n            this.changeGroupRender(elements[i].it, renderFlag);\r\n        }\r\n    }\r\n}\r\n\r\nRepeaterModifier.prototype.processShapes = function(firstFrame){\r\n\r\n    if(this.elem.globalData.frameId === this.frameId){\r\n        return;\r\n    }\r\n    this.frameId = this.elem.globalData.frameId;\r\n    if(!this.dynamicProperties.length && !firstFrame){\r\n        this.mdf = false;\r\n    }\r\n    if(this.mdf){\r\n        var copies = Math.ceil(this.c.v);\r\n        if(this._groups.length < copies){\r\n            while(this._groups.length < copies){\r\n                var group = {\r\n                    it:this.cloneElements(this._elements),\r\n                    ty:'gr'\r\n                }\r\n                group.it.push({\"a\":{\"a\":0,\"ix\":1,\"k\":[0,0]},\"nm\":\"Transform\",\"o\":{\"a\":0,\"ix\":7,\"k\":100},\"p\":{\"a\":0,\"ix\":2,\"k\":[0,0]},\"r\":{\"a\":0,\"ix\":6,\"k\":0},\"s\":{\"a\":0,\"ix\":3,\"k\":[100,100]},\"sa\":{\"a\":0,\"ix\":5,\"k\":0},\"sk\":{\"a\":0,\"ix\":4,\"k\":0},\"ty\":\"tr\"});\r\n                \r\n                this.arr.splice(0,0,group);\r\n                this._groups.splice(0,0,group);\r\n                this._currentCopies += 1;\r\n            }\r\n            this.elem.reloadShapes();\r\n        }\r\n        var i, cont = 0, renderFlag;\r\n        for(i = 0; i  <= this._groups.length - 1; i += 1){\r\n            renderFlag = cont < copies;\r\n            this._groups[i]._render = renderFlag;\r\n            this.changeGroupRender(this._groups[i].it, renderFlag);\r\n            cont += 1;\r\n        }\r\n        \r\n        this._currentCopies = copies;\r\n        this.elem.firstFrame = true;\r\n        ////\r\n\r\n        var offset = this.o.v;\r\n        var offsetModulo = offset%1;\r\n        var roundOffset = offset > 0 ? Math.floor(offset) : Math.ceil(offset);\r\n        var k;\r\n        var tMat = this.tr.v.props;\r\n        var pProps = this.pMatrix.props;\r\n        var rProps = this.rMatrix.props;\r\n        var sProps = this.sMatrix.props;\r\n        this.pMatrix.reset();\r\n        this.rMatrix.reset();\r\n        this.sMatrix.reset();\r\n        this.tMatrix.reset();\r\n        this.matrix.reset();\r\n        var iteration = 0;\r\n\r\n        if(offset > 0) {\r\n            while(iteration<roundOffset){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\r\n                iteration += 1;\r\n            }\r\n            if(offsetModulo){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, offsetModulo, false);\r\n                iteration += offsetModulo;\r\n            }\r\n        } else if(offset < 0) {\r\n            while(iteration>roundOffset){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, true);\r\n                iteration -= 1;\r\n            }\r\n            if(offsetModulo){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, - offsetModulo, true);\r\n                iteration -= offsetModulo;\r\n            }\r\n        }\r\n        i = this.data.m === 1 ? 0 : this._currentCopies - 1;\r\n        var dir = this.data.m === 1 ? 1 : -1;\r\n        cont = this._currentCopies;\r\n        while(cont){\r\n            if(iteration !== 0){\r\n                if((i !== 0 && dir === 1) || (i !== this._currentCopies - 1 && dir === -1)){\r\n                    this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\r\n                }\r\n                this.matrix.transform(rProps[0],rProps[1],rProps[2],rProps[3],rProps[4],rProps[5],rProps[6],rProps[7],rProps[8],rProps[9],rProps[10],rProps[11],rProps[12],rProps[13],rProps[14],rProps[15]);\r\n                this.matrix.transform(sProps[0],sProps[1],sProps[2],sProps[3],sProps[4],sProps[5],sProps[6],sProps[7],sProps[8],sProps[9],sProps[10],sProps[11],sProps[12],sProps[13],sProps[14],sProps[15]);\r\n                this.matrix.transform(pProps[0],pProps[1],pProps[2],pProps[3],pProps[4],pProps[5],pProps[6],pProps[7],pProps[8],pProps[9],pProps[10],pProps[11],pProps[12],pProps[13],pProps[14],pProps[15]);\r\n                var items = this.elemsData[i].it;\r\n                var itemsTransform = items[items.length - 1].transform.mProps.v.props;\r\n                var j, jLen = itemsTransform.length;\r\n                for(j=0;j<jLen;j+=1) {\r\n                    itemsTransform[j] = this.matrix.props[j];\r\n                }\r\n                this.matrix.reset();\r\n            } else {\r\n                this.matrix.reset();\r\n                var items = this.elemsData[i].it;\r\n                var itemsTransform = items[items.length - 1].transform.mProps.v.props;\r\n                var j, jLen = itemsTransform.length;\r\n                for(j=0;j<jLen;j+=1) {\r\n                    itemsTransform[j] = this.matrix.props[j];\r\n                }\r\n            }\r\n            iteration += 1;\r\n            cont -= 1;\r\n            i += dir;\r\n        }\r\n    }\r\n}\r\n\r\nRepeaterModifier.prototype.addShape = function(){}\r\n\r\nShapeModifiers.registerModifier('rp',RepeaterModifier);\nfunction ShapeCollection(){\r\n\tthis._length = 0;\r\n\tthis._maxLength = 4;\r\n\tthis.shapes = Array.apply(null,{length:this._maxLength});\r\n};\r\n\r\nShapeCollection.prototype.addShape = function(shapeData){\r\n\tif(this._length === this._maxLength){\r\n\t\tthis.shapes = this.shapes.concat(Array.apply(null,{length:this._maxLength}));\r\n\t\tthis._maxLength *= 2;\r\n\t}\r\n\tthis.shapes[this._length] = shapeData;\r\n\tthis._length += 1;\r\n};\r\n\r\nShapeCollection.prototype.releaseShapes = function(){\r\n\tvar i;\r\n\tfor(i = 0; i < this._length; i += 1) {\r\n\t\tshape_pool.release(this.shapes[i]);\r\n\t}\r\n\tthis._length = 0;\r\n};\nvar ImagePreloader = (function(){\r\n\r\n    var imagesLoadedCb;\r\n\r\n    function imageLoaded(){\r\n        this.loadedAssets += 1;\r\n        if(this.loadedAssets === this.totalImages){\r\n            if(imagesLoadedCb) {\r\n                imagesLoadedCb(null);\r\n            }\r\n        }\r\n    }\r\n\r\n    function getAssetsPath(assetData){\r\n        var path = '';\r\n        if(this.assetsPath){\r\n            var imagePath = assetData.p;\r\n            if(imagePath.indexOf('images/') !== -1){\r\n                imagePath = imagePath.split('/')[1];\r\n            }\r\n            path = this.assetsPath + imagePath;\r\n        } else {\r\n            path = this.path;\r\n            path += assetData.u ? assetData.u : '';\r\n            path += assetData.p;\r\n        }\r\n        return path;\r\n    }\r\n\r\n    function loadImage(path){\r\n        var img = document.createElement('img');\r\n        img.addEventListener('load', imageLoaded.bind(this), false);\r\n        img.addEventListener('error', imageLoaded.bind(this), false);\r\n        img.src = path;\r\n    }\r\n    function loadAssets(assets, cb){\r\n        imagesLoadedCb = cb;\r\n        this.totalAssets = assets.length;\r\n        var i;\r\n        for(i=0;i<this.totalAssets;i+=1){\r\n            if(!assets[i].layers){\r\n                loadImage.bind(this)(getAssetsPath.bind(this)(assets[i]));\r\n                this.totalImages += 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    function setPath(path){\r\n        this.path = path || '';\r\n    }\r\n\r\n    function setAssetsPath(path){\r\n        this.assetsPath = path || '';\r\n    }\r\n\r\n    return function ImagePreloader(){\r\n        this.loadAssets = loadAssets;\r\n        this.setAssetsPath = setAssetsPath;\r\n        this.setPath = setPath;\r\n        this.assetsPath = '';\r\n        this.path = '';\r\n        this.totalAssets = 0;\r\n        this.totalImages = 0;\r\n        this.loadedAssets = 0;\r\n    }\r\n}());\nvar featureSupport = (function(){\r\n\tvar ob = {\r\n\t\tmaskType: true\r\n\t}\r\n\tif (/MSIE 10/i.test(navigator.userAgent) || /MSIE 9/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /Edge\\/\\d./i.test(navigator.userAgent)) {\r\n\t   ob.maskType = false;\r\n\t}\r\n\treturn ob;\r\n}());\nvar filtersFactory = (function(){\r\n\tvar ob = {};\r\n\tob.createFilter = createFilter;\r\n\tob.createAlphaToLuminanceFilter = createAlphaToLuminanceFilter;\r\n\r\n\tfunction createFilter(filId){\r\n        \tvar fil = document.createElementNS(svgNS,'filter');\r\n        \tfil.setAttribute('id',filId);\r\n                fil.setAttribute('filterUnits','objectBoundingBox');\r\n                fil.setAttribute('x','0%');\r\n                fil.setAttribute('y','0%');\r\n                fil.setAttribute('width','100%');\r\n                fil.setAttribute('height','100%');\r\n                return fil;\r\n\t}\r\n\r\n\tfunction createAlphaToLuminanceFilter(){\r\n                var feColorMatrix = document.createElementNS(svgNS,'feColorMatrix');\r\n                feColorMatrix.setAttribute('type','matrix');\r\n                feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n                feColorMatrix.setAttribute('values','0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1');\r\n                return feColorMatrix;\r\n\t}\r\n\r\n\treturn ob;\r\n}())\nfunction TextAnimatorProperty(textData, renderType, elem){\r\n    this.mdf = false;\r\n    this._firstFrame = true;\r\n\tthis._hasMaskedPath = false;\r\n\tthis._frameId = -1;\r\n\tthis._dynamicProperties = [];\r\n\tthis._textData = textData;\r\n\tthis._renderType = renderType;\r\n\tthis._elem = elem;\r\n\tthis._animatorsData = Array.apply(null,{length:this._textData.a.length});\r\n\tthis._pathData = {}\r\n\tthis._moreOptions = {\r\n\t\talignment: {}\r\n\t};\r\n\tthis.renderedLetters = [];\r\n    this.lettersChangedFlag = false;\r\n\r\n}\r\n\r\nTextAnimatorProperty.prototype.searchProperties = function(dynamicProperties){\r\n    var i, len = this._textData.a.length, animatorData, animatorProps;\r\n    var getProp = PropertyFactory.getProp;\r\n    for(i=0;i<len;i+=1){\r\n        animatorProps = this._textData.a[i];\r\n        animatorData = {\r\n            a: {},\r\n            s: {}\r\n        };\r\n        if('r' in animatorProps.a) {\r\n            animatorData.a.r = getProp(this._elem,animatorProps.a.r,0,degToRads,this._dynamicProperties);\r\n        }\r\n        if('rx' in animatorProps.a) {\r\n            animatorData.a.rx = getProp(this._elem,animatorProps.a.rx,0,degToRads,this._dynamicProperties);\r\n        }\r\n        if('ry' in animatorProps.a) {\r\n            animatorData.a.ry = getProp(this._elem,animatorProps.a.ry,0,degToRads,this._dynamicProperties);\r\n        }\r\n        if('sk' in animatorProps.a) {\r\n            animatorData.a.sk = getProp(this._elem,animatorProps.a.sk,0,degToRads,this._dynamicProperties);\r\n        }\r\n        if('sa' in animatorProps.a) {\r\n            animatorData.a.sa = getProp(this._elem,animatorProps.a.sa,0,degToRads,this._dynamicProperties);\r\n        }\r\n        if('s' in animatorProps.a) {\r\n            animatorData.a.s = getProp(this._elem,animatorProps.a.s,1,0.01,this._dynamicProperties);\r\n        }\r\n        if('a' in animatorProps.a) {\r\n            animatorData.a.a = getProp(this._elem,animatorProps.a.a,1,0,this._dynamicProperties);\r\n        }\r\n        if('o' in animatorProps.a) {\r\n            animatorData.a.o = getProp(this._elem,animatorProps.a.o,0,0.01,this._dynamicProperties);\r\n        }\r\n        if('p' in animatorProps.a) {\r\n            animatorData.a.p = getProp(this._elem,animatorProps.a.p,1,0,this._dynamicProperties);\r\n        }\r\n        if('sw' in animatorProps.a) {\r\n            animatorData.a.sw = getProp(this._elem,animatorProps.a.sw,0,0,this._dynamicProperties);\r\n        }\r\n        if('sc' in animatorProps.a) {\r\n            animatorData.a.sc = getProp(this._elem,animatorProps.a.sc,1,0,this._dynamicProperties);\r\n        }\r\n        if('fc' in animatorProps.a) {\r\n            animatorData.a.fc = getProp(this._elem,animatorProps.a.fc,1,0,this._dynamicProperties);\r\n        }\r\n        if('fh' in animatorProps.a) {\r\n            animatorData.a.fh = getProp(this._elem,animatorProps.a.fh,0,0,this._dynamicProperties);\r\n        }\r\n        if('fs' in animatorProps.a) {\r\n            animatorData.a.fs = getProp(this._elem,animatorProps.a.fs,0,0.01,this._dynamicProperties);\r\n        }\r\n        if('fb' in animatorProps.a) {\r\n            animatorData.a.fb = getProp(this._elem,animatorProps.a.fb,0,0.01,this._dynamicProperties);\r\n        }\r\n        if('t' in animatorProps.a) {\r\n            animatorData.a.t = getProp(this._elem,animatorProps.a.t,0,0,this._dynamicProperties);\r\n        }\r\n        animatorData.s = PropertyFactory.getTextSelectorProp(this._elem,animatorProps.s,this._dynamicProperties);\r\n        animatorData.s.t = animatorProps.s.t;\r\n        this._animatorsData[i] = animatorData;\r\n    }\r\n    if(this._textData.p && 'm' in this._textData.p){\r\n        this._pathData = {\r\n            f: getProp(this._elem,this._textData.p.f,0,0,this._dynamicProperties),\r\n            l: getProp(this._elem,this._textData.p.l,0,0,this._dynamicProperties),\r\n            r: this._textData.p.r,\r\n            m: this._elem.maskManager.getMaskProperty(this._textData.p.m)\r\n        };\r\n        this._hasMaskedPath = true;\r\n    } else {\r\n        this._hasMaskedPath = false;\r\n    }\r\n    this._moreOptions.alignment = getProp(this._elem,this._textData.m.a,1,0,this._dynamicProperties);\r\n    if(this._dynamicProperties.length) {\r\n    \tdynamicProperties.push(this);\r\n    }\r\n}\r\n\r\nTextAnimatorProperty.prototype.getMeasures = function(documentData, lettersChangedFlag){\r\n    this.lettersChangedFlag = lettersChangedFlag;\r\n    if(!this.mdf && !this._firstFrame && !lettersChangedFlag && (!this._hasMaskedPath || !this._pathData.m.mdf)) {\r\n        return;\r\n    }\r\n    this._firstFrame = false;\r\n    var alignment = this._moreOptions.alignment.v;\r\n    var animators = this._animatorsData;\r\n    var textData = this._textData;\r\n    var matrixHelper = this.mHelper;\r\n    var renderType = this._renderType;\r\n    var renderedLettersCount = this.renderedLetters.length;\r\n    var data = this.data;\r\n    var xPos,yPos;\r\n    var i, len;\r\n    var letters = documentData.l;\r\n    if(this._hasMaskedPath) {\r\n        var mask = this._pathData.m;\r\n        if(!this._pathData.n || this._pathData.mdf){\r\n            var paths = mask.v;\r\n            if(this._pathData.r){\r\n                paths = reversePath(paths);\r\n            }\r\n            var pathInfo = {\r\n                tLength: 0,\r\n                segments: []\r\n            };\r\n            len = paths._length - 1;\r\n            var pathData;\r\n            var totalLength = 0;\r\n            for (i = 0; i < len; i += 1) {\r\n                pathData = {\r\n                    s: paths.v[i],\r\n                    e: paths.v[i + 1],\r\n                    to: [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]],\r\n                    ti: [paths.i[i + 1][0] - paths.v[i + 1][0], paths.i[i + 1][1] - paths.v[i + 1][1]]\r\n                };\r\n                bez.buildBezierData(pathData);\r\n                pathInfo.tLength += pathData.bezierData.segmentLength;\r\n                pathInfo.segments.push(pathData);\r\n                totalLength += pathData.bezierData.segmentLength;\r\n            }\r\n            i = len;\r\n            if (mask.v.c) {\r\n                pathData = {\r\n                    s: paths.v[i],\r\n                    e: paths.v[0],\r\n                    to: [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]],\r\n                    ti: [paths.i[0][0] - paths.v[0][0], paths.i[0][1] - paths.v[0][1]]\r\n                };\r\n                bez.buildBezierData(pathData);\r\n                pathInfo.tLength += pathData.bezierData.segmentLength;\r\n                pathInfo.segments.push(pathData);\r\n                totalLength += pathData.bezierData.segmentLength;\r\n            }\r\n            this._pathData.pi = pathInfo;\r\n        }\r\n        var pathInfo = this._pathData.pi;\r\n\r\n        var currentLength = this._pathData.f.v, segmentInd = 0, pointInd = 1, currentPoint, prevPoint, points;\r\n        var segmentLength = 0, flag = true;\r\n        var segments = pathInfo.segments;\r\n        if (currentLength < 0 && mask.v.c) {\r\n            if (pathInfo.tLength < Math.abs(currentLength)) {\r\n                currentLength = -Math.abs(currentLength) % pathInfo.tLength;\r\n            }\r\n            segmentInd = segments.length - 1;\r\n            points = segments[segmentInd].bezierData.points;\r\n            pointInd = points.length - 1;\r\n            while (currentLength < 0) {\r\n                currentLength += points[pointInd].partialLength;\r\n                pointInd -= 1;\r\n                if (pointInd < 0) {\r\n                    segmentInd -= 1;\r\n                    points = segments[segmentInd].bezierData.points;\r\n                    pointInd = points.length - 1;\r\n                }\r\n            }\r\n\r\n        }\r\n        points = segments[segmentInd].bezierData.points;\r\n        prevPoint = points[pointInd - 1];\r\n        currentPoint = points[pointInd];\r\n        var partialLength = currentPoint.partialLength;\r\n        var perc, tanAngle;\r\n    }\r\n\r\n\r\n    len = letters.length;\r\n    xPos = 0;\r\n    yPos = 0;\r\n    var yOff = documentData.s*1.2*.714;\r\n    var firstLine = true;\r\n    var animatorProps, animatorSelector;\r\n    var j, jLen;\r\n    var letterValue;\r\n\r\n    jLen = animators.length;\r\n    if (lettersChangedFlag) {\r\n        for (j = 0; j < jLen; j += 1) {\r\n            animatorSelector = animators[j].s;\r\n            animatorSelector.getValue(true);\r\n        }\r\n    }\r\n    var lastLetter;\r\n\r\n    var mult, ind = -1, offf, xPathPos, yPathPos;\r\n    var initPathPos = currentLength,initSegmentInd = segmentInd, initPointInd = pointInd, currentLine = -1;\r\n    var elemOpacity;\r\n    var sc,sw,fc,k;\r\n    var lineLength = 0;\r\n    var letterSw,letterSc,letterFc,letterM = '',letterP = this.defaultPropsArray,letterO;\r\n    for( i = 0; i < len; i += 1) {\r\n        matrixHelper.reset();\r\n        elemOpacity = 1;\r\n        if(letters[i].n) {\r\n            xPos = 0;\r\n            yPos += documentData.yOffset;\r\n            yPos += firstLine ? 1 : 0;\r\n            currentLength = initPathPos ;\r\n            firstLine = false;\r\n            lineLength = 0;\r\n            if(this._hasMaskedPath) {\r\n                segmentInd = initSegmentInd;\r\n                pointInd = initPointInd;\r\n                points = segments[segmentInd].bezierData.points;\r\n                prevPoint = points[pointInd - 1];\r\n                currentPoint = points[pointInd];\r\n                partialLength = currentPoint.partialLength;\r\n                segmentLength = 0;\r\n            }\r\n            letterO = letterSw = letterFc = letterM = '';\r\n            letterP = this.defaultPropsArray;\r\n        }else{\r\n            if(this._hasMaskedPath) {\r\n                if(currentLine !== letters[i].line){\r\n                    switch(documentData.j){\r\n                        case 1:\r\n                            currentLength += totalLength - documentData.lineWidths[letters[i].line];\r\n                            break;\r\n                        case 2:\r\n                            currentLength += (totalLength - documentData.lineWidths[letters[i].line])/2;\r\n                            break;\r\n                    }\r\n                    currentLine = letters[i].line;\r\n                }\r\n                if (ind !== letters[i].ind) {\r\n                    if (letters[ind]) {\r\n                        currentLength += letters[ind].extra;\r\n                    }\r\n                    currentLength += letters[i].an / 2;\r\n                    ind = letters[i].ind;\r\n                }\r\n                currentLength += alignment[0] * letters[i].an / 200;\r\n                var animatorOffset = 0;\r\n                for (j = 0; j < jLen; j += 1) {\r\n                    animatorProps = animators[j].a;\r\n                    if ('p' in animatorProps) {\r\n                        animatorSelector = animators[j].s;\r\n                        mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                        if(mult.length){\r\n                            animatorOffset += animatorProps.p.v[0] * mult[0];\r\n                        } else{\r\n                            animatorOffset += animatorProps.p.v[0] * mult;\r\n                        }\r\n\r\n                    }\r\n                    if ('a' in animatorProps) {\r\n                        animatorSelector = animators[j].s;\r\n                        mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                        if(mult.length){\r\n                            animatorOffset += animatorProps.a.v[0] * mult[0];\r\n                        } else{\r\n                            animatorOffset += animatorProps.a.v[0] * mult;\r\n                        }\r\n\r\n                    }\r\n                }\r\n                flag = true;\r\n                while (flag) {\r\n                    if (segmentLength + partialLength >= currentLength + animatorOffset || !points) {\r\n                        perc = (currentLength + animatorOffset - segmentLength) / currentPoint.partialLength;\r\n                        xPathPos = prevPoint.point[0] + (currentPoint.point[0] - prevPoint.point[0]) * perc;\r\n                        yPathPos = prevPoint.point[1] + (currentPoint.point[1] - prevPoint.point[1]) * perc;\r\n                        matrixHelper.translate(-alignment[0]*letters[i].an/200, -(alignment[1] * yOff / 100));\r\n                        flag = false;\r\n                    } else if (points) {\r\n                        segmentLength += currentPoint.partialLength;\r\n                        pointInd += 1;\r\n                        if (pointInd >= points.length) {\r\n                            pointInd = 0;\r\n                            segmentInd += 1;\r\n                            if (!segments[segmentInd]) {\r\n                                if (mask.v.c) {\r\n                                    pointInd = 0;\r\n                                    segmentInd = 0;\r\n                                    points = segments[segmentInd].bezierData.points;\r\n                                } else {\r\n                                    segmentLength -= currentPoint.partialLength;\r\n                                    points = null;\r\n                                }\r\n                            } else {\r\n                                points = segments[segmentInd].bezierData.points;\r\n                            }\r\n                        }\r\n                        if (points) {\r\n                            prevPoint = currentPoint;\r\n                            currentPoint = points[pointInd];\r\n                            partialLength = currentPoint.partialLength;\r\n                        }\r\n                    }\r\n                }\r\n                offf = letters[i].an / 2 - letters[i].add;\r\n                matrixHelper.translate(-offf, 0, 0);\r\n            } else {\r\n                offf = letters[i].an/2 - letters[i].add;\r\n                matrixHelper.translate(-offf,0,0);\r\n\r\n                // Grouping alignment\r\n                matrixHelper.translate(-alignment[0]*letters[i].an/200, -alignment[1]*yOff/100, 0);\r\n            }\r\n\r\n            lineLength += letters[i].l/2;\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if ('t' in animatorProps) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    if(this._hasMaskedPath) {\r\n                        if(mult.length) {\r\n                            currentLength += animatorProps.t*mult[0];\r\n                        } else {\r\n                            currentLength += animatorProps.t*mult;\r\n                        }\r\n                    }else{\r\n                        if(mult.length) {\r\n                            xPos += animatorProps.t.v*mult[0];\r\n                        } else {\r\n                            xPos += animatorProps.t.v*mult;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            lineLength += letters[i].l/2;\r\n            if(documentData.strokeWidthAnim) {\r\n                sw = documentData.sw || 0;\r\n            }\r\n            if(documentData.strokeColorAnim) {\r\n                if(documentData.sc){\r\n                    sc = [documentData.sc[0], documentData.sc[1], documentData.sc[2]];\r\n                }else{\r\n                    sc = [0,0,0];\r\n                }\r\n            }\r\n            if(documentData.fillColorAnim && documentData.fc) {\r\n                fc = [documentData.fc[0], documentData.fc[1], documentData.fc[2]];\r\n            }\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if ('a' in animatorProps) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n\r\n                    if(mult.length){\r\n                        matrixHelper.translate(-animatorProps.a.v[0]*mult[0], -animatorProps.a.v[1]*mult[1], animatorProps.a.v[2]*mult[2]);\r\n                    } else {\r\n                        matrixHelper.translate(-animatorProps.a.v[0]*mult, -animatorProps.a.v[1]*mult, animatorProps.a.v[2]*mult);\r\n                    }\r\n                }\r\n            }\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if ('s' in animatorProps) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    if(mult.length){\r\n                        matrixHelper.scale(1+((animatorProps.s.v[0]-1)*mult[0]),1+((animatorProps.s.v[1]-1)*mult[1]),1);\r\n                    } else {\r\n                        matrixHelper.scale(1+((animatorProps.s.v[0]-1)*mult),1+((animatorProps.s.v[1]-1)*mult),1);\r\n                    }\r\n                }\r\n            }\r\n            for(j=0;j<jLen;j+=1) {\r\n                animatorProps = animators[j].a;\r\n                animatorSelector = animators[j].s;\r\n                mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                if ('sk' in animatorProps) {\r\n                    if(mult.length) {\r\n                        matrixHelper.skewFromAxis(-animatorProps.sk.v * mult[0], animatorProps.sa.v * mult[1]);\r\n                    } else {\r\n                        matrixHelper.skewFromAxis(-animatorProps.sk.v * mult, animatorProps.sa.v * mult);\r\n                    }\r\n                }\r\n                if ('r' in animatorProps) {\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateZ(-animatorProps.r.v * mult[2]);\r\n                    } else {\r\n                        matrixHelper.rotateZ(-animatorProps.r.v * mult);\r\n                    }\r\n                }\r\n                if ('ry' in animatorProps) {\r\n\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateY(animatorProps.ry.v*mult[1]);\r\n                    }else{\r\n                        matrixHelper.rotateY(animatorProps.ry.v*mult);\r\n                    }\r\n                }\r\n                if ('rx' in animatorProps) {\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateX(animatorProps.rx.v*mult[0]);\r\n                    } else {\r\n                        matrixHelper.rotateX(animatorProps.rx.v*mult);\r\n                    }\r\n                }\r\n                if ('o' in animatorProps) {\r\n                    if(mult.length) {\r\n                        elemOpacity += ((animatorProps.o.v)*mult[0] - elemOpacity)*mult[0];\r\n                    } else {\r\n                        elemOpacity += ((animatorProps.o.v)*mult - elemOpacity)*mult;\r\n                    }\r\n                }\r\n                if (documentData.strokeWidthAnim && 'sw' in animatorProps) {\r\n                    if(mult.length) {\r\n                        sw += animatorProps.sw.v*mult[0];\r\n                    } else {\r\n                        sw += animatorProps.sw.v*mult;\r\n                    }\r\n                }\r\n                if (documentData.strokeColorAnim && 'sc' in animatorProps) {\r\n                    for(k=0;k<3;k+=1){\r\n                        if(mult.length) {\r\n                            sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k])*mult[0]\r\n                        } else {\r\n                            sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k])*mult;\r\n                        }\r\n                    }\r\n                }\r\n                if (documentData.fillColorAnim && documentData.fc) {\r\n                    if('fc' in animatorProps){\r\n                        for(k=0;k<3;k+=1){\r\n                            if(mult.length) {\r\n                                fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k])*mult[0];\r\n                            } else {\r\n                                fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k])*mult;\r\n                            }\r\n                        }\r\n                    }\r\n                    if('fh' in animatorProps){\r\n                        if(mult.length) {\r\n                            fc = addHueToRGB(fc,animatorProps.fh.v*mult[0]);\r\n                        } else {\r\n                            fc = addHueToRGB(fc,animatorProps.fh.v*mult);\r\n                        }\r\n                    }\r\n                    if('fs' in animatorProps){\r\n                        if(mult.length) {\r\n                            fc = addSaturationToRGB(fc,animatorProps.fs.v*mult[0]);\r\n                        } else {\r\n                            fc = addSaturationToRGB(fc,animatorProps.fs.v*mult);\r\n                        }\r\n                    }\r\n                    if('fb' in animatorProps){\r\n                        if(mult.length) {\r\n                            fc = addBrightnessToRGB(fc,animatorProps.fb.v*mult[0]);\r\n                        } else {\r\n                            fc = addBrightnessToRGB(fc,animatorProps.fb.v*mult);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n\r\n                if ('p' in animatorProps) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    if(this._hasMaskedPath) {\r\n                        if(mult.length) {\r\n                            matrixHelper.translate(0, animatorProps.p.v[1] * mult[0], -animatorProps.p.v[2] * mult[1]);\r\n                        } else {\r\n                            matrixHelper.translate(0, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\r\n                        }\r\n                    }else{\r\n                        if(mult.length) {\r\n                            matrixHelper.translate(animatorProps.p.v[0] * mult[0], animatorProps.p.v[1] * mult[1], -animatorProps.p.v[2] * mult[2]);\r\n                        } else {\r\n                            matrixHelper.translate(animatorProps.p.v[0] * mult, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(documentData.strokeWidthAnim){\r\n                letterSw = sw < 0 ? 0 : sw;\r\n            }\r\n            if(documentData.strokeColorAnim){\r\n                letterSc = 'rgb('+Math.round(sc[0]*255)+','+Math.round(sc[1]*255)+','+Math.round(sc[2]*255)+')';\r\n            }\r\n            if(documentData.fillColorAnim && documentData.fc){\r\n                letterFc = 'rgb('+Math.round(fc[0]*255)+','+Math.round(fc[1]*255)+','+Math.round(fc[2]*255)+')';\r\n            }\r\n\r\n            if(this._hasMaskedPath) {\r\n                matrixHelper.translate(0,-documentData.ls);\r\n\r\n                matrixHelper.translate(0, alignment[1]*yOff/100 + yPos,0);\r\n                if (textData.p.p) {\r\n                    tanAngle = (currentPoint.point[1] - prevPoint.point[1]) / (currentPoint.point[0] - prevPoint.point[0]);\r\n                    var rot = Math.atan(tanAngle) * 180 / Math.PI;\r\n                    if (currentPoint.point[0] < prevPoint.point[0]) {\r\n                        rot += 180;\r\n                    }\r\n                    matrixHelper.rotate(-rot * Math.PI / 180);\r\n                }\r\n                matrixHelper.translate(xPathPos, yPathPos, 0);\r\n                currentLength -= alignment[0]*letters[i].an/200;\r\n                if(letters[i+1] && ind !== letters[i+1].ind){\r\n                    currentLength += letters[i].an / 2;\r\n                    currentLength += documentData.tr/1000*documentData.s;\r\n                }\r\n            }else{\r\n\r\n                matrixHelper.translate(xPos,yPos,0);\r\n\r\n                if(documentData.ps){\r\n                    //matrixHelper.translate(documentData.ps[0],documentData.ps[1],0);\r\n                    matrixHelper.translate(documentData.ps[0],documentData.ps[1] + documentData.ascent,0);\r\n                }\r\n                switch(documentData.j){\r\n                    case 1:\r\n                        matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]),0,0);\r\n                        break;\r\n                    case 2:\r\n                        matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line])/2,0,0);\r\n                        break;\r\n                }\r\n                matrixHelper.translate(0,-documentData.ls);\r\n                matrixHelper.translate(offf,0,0);\r\n                matrixHelper.translate(alignment[0]*letters[i].an/200,alignment[1]*yOff/100,0);\r\n                xPos += letters[i].l + documentData.tr/1000*documentData.s;\r\n            }\r\n            if(renderType === 'html'){\r\n                letterM = matrixHelper.toCSS();\r\n            }else if(renderType === 'svg'){\r\n                letterM = matrixHelper.to2dCSS();\r\n            }else{\r\n                letterP = [matrixHelper.props[0],matrixHelper.props[1],matrixHelper.props[2],matrixHelper.props[3],matrixHelper.props[4],matrixHelper.props[5],matrixHelper.props[6],matrixHelper.props[7],matrixHelper.props[8],matrixHelper.props[9],matrixHelper.props[10],matrixHelper.props[11],matrixHelper.props[12],matrixHelper.props[13],matrixHelper.props[14],matrixHelper.props[15]];\r\n            }\r\n            letterO = elemOpacity;\r\n        }\r\n\r\n        if(renderedLettersCount <= i) {\r\n            letterValue = new LetterProps(letterO,letterSw,letterSc,letterFc,letterM,letterP);\r\n            this.renderedLetters.push(letterValue);\r\n            renderedLettersCount += 1;\r\n            this.lettersChangedFlag = true;\r\n        } else {\r\n            letterValue = this.renderedLetters[i];\r\n            this.lettersChangedFlag = letterValue.update(letterO, letterSw, letterSc, letterFc, letterM, letterP) || this.lettersChangedFlag;\r\n        }\r\n    }\r\n}\r\n\r\nTextAnimatorProperty.prototype.getValue = function(){\r\n\tif(this._elem.globalData.frameId === this._frameId){\r\n        return;\r\n    }\r\n    this._frameId = this._elem.globalData.frameId;\r\n\tvar i, len = this._dynamicProperties.length;\r\n    this.mdf = false;\r\n\tfor(i = 0; i < len; i += 1) {\r\n\t\tthis._dynamicProperties[i].getValue();\r\n        this.mdf = this._dynamicProperties[i].mdf || this.mdf;\r\n\t}\r\n}\r\n\r\nTextAnimatorProperty.prototype.mHelper = new Matrix();\r\nTextAnimatorProperty.prototype.defaultPropsArray = [];\nfunction LetterProps(o, sw, sc, fc, m, p){\r\n    this.o = o;\r\n    this.sw = sw;\r\n    this.sc = sc;\r\n    this.fc = fc;\r\n    this.m = m;\r\n    this.p = p;\r\n    this.mdf = {\r\n    \to: true,\r\n    \tsw: !!sw,\r\n    \tsc: !!sc,\r\n    \tfc: !!fc,\r\n    \tm: true,\r\n    \tp: true\r\n    };\r\n}\r\n\r\nLetterProps.prototype.update = function(o, sw, sc, fc, m, p) {\r\n\tthis.mdf.o = false;\r\n\tthis.mdf.sw = false;\r\n\tthis.mdf.sc = false;\r\n\tthis.mdf.fc = false;\r\n\tthis.mdf.m = false;\r\n\tthis.mdf.p = false;\r\n\tvar updated = false;\r\n\r\n\tif(this.o !== o) {\r\n\t\tthis.o = o;\r\n\t\tthis.mdf.o = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.sw !== sw) {\r\n\t\tthis.sw = sw;\r\n\t\tthis.mdf.sw = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.sc !== sc) {\r\n\t\tthis.sc = sc;\r\n\t\tthis.mdf.sc = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.fc !== fc) {\r\n\t\tthis.fc = fc;\r\n\t\tthis.mdf.fc = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.m !== m) {\r\n\t\tthis.m = m;\r\n\t\tthis.mdf.m = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(p.length && (this.p[0] !== p[0] || this.p[1] !== p[1] || this.p[4] !== p[4] || this.p[5] !== p[5] || this.p[12] !== p[12] || this.p[13] !== p[13])) {\r\n\t\tthis.p = p;\r\n\t\tthis.mdf.p = true;\r\n\t\tupdated = true;\r\n\t}\r\n\treturn updated;\r\n}\nfunction TextProperty(elem, data, dynamicProperties){\r\n\tthis._frameId = -99999;\r\n\tthis.pv = '';\r\n\tthis.v = '';\r\n\tthis.kf = false;\r\n\tthis.firstFrame = true;\r\n\tthis.mdf = true;\r\n\tthis.data = data;\r\n\tthis.elem = elem;\r\n\tthis.keysIndex = -1;\r\n\tthis.currentData = {\r\n\t\tascent: 0,\r\n        boxWidth: [0,0],\r\n        f: '',\r\n        fStyle: '',\r\n        fWeight: '',\r\n        fc: '',\r\n        j: '',\r\n        justifyOffset: '',\r\n        l: [],\r\n        lh: 0,\r\n        lineWidths: [],\r\n        ls: '',\r\n        of: '',\r\n        s: '',\r\n        sc: '',\r\n        sw: 0,\r\n        t: 0,\r\n        tr: 0,\r\n        fillColorAnim: false,\r\n        strokeColorAnim: false,\r\n        strokeWidthAnim: false,\r\n        yOffset: 0,\r\n        __complete: false\r\n\r\n\t}\r\n\tif(this.searchProperty()) {\r\n\t\tdynamicProperties.push(this);\r\n\t} else {\r\n\t\tthis.getValue(true);\r\n\t}\r\n}\r\n\r\nTextProperty.prototype.setCurrentData = function(data){\r\n\t\tvar currentData = this.currentData;\r\n        currentData.ascent = data.ascent;\r\n        currentData.boxWidth = data.boxWidth ? data.boxWidth : currentData.boxWidth;\r\n        currentData.f = data.f;\r\n        currentData.fStyle = data.fStyle;\r\n        currentData.fWeight = data.fWeight;\r\n        currentData.fc = data.fc;\r\n        currentData.j = data.j;\r\n        currentData.justifyOffset = data.justifyOffset;\r\n        currentData.l = data.l;\r\n        currentData.lh = data.lh;\r\n        currentData.lineWidths = data.lineWidths;\r\n        currentData.ls = data.ls;\r\n        currentData.of = data.of;\r\n        currentData.s = data.s;\r\n        currentData.sc = data.sc;\r\n        currentData.sw = data.sw;\r\n        currentData.t = data.t;\r\n        currentData.tr = data.tr;\r\n        currentData.fillColorAnim = data.fillColorAnim || currentData.fillColorAnim;\r\n        currentData.strokeColorAnim = data.strokeColorAnim || currentData.strokeColorAnim;\r\n        currentData.strokeWidthAnim = data.strokeWidthAnim || currentData.strokeWidthAnim;\r\n        currentData.yOffset = data.yOffset;\r\n        currentData.__complete = false;\r\n}\r\n\r\nTextProperty.prototype.searchProperty = function() {\r\n\tthis.kf = this.data.d.k.length > 1;\r\n\treturn this.kf;\r\n}\r\n\r\nTextProperty.prototype.getValue = function() {\r\n\tthis.mdf = false;\r\n\tvar frameId = this.elem.globalData.frameId;\r\n\tif((frameId === this._frameId || !this.kf) && !this.firstFrame) {\r\n\t\treturn;\r\n\t}\r\n\tvar textKeys = this.data.d.k, textDocumentData;\r\n    var i = 0, len = textKeys.length;\r\n    while(i <= len - 1) {\r\n        textDocumentData = textKeys[i].s;\r\n        if(i === len - 1 || textKeys[i+1].t > frameId){\r\n            break;\r\n        }\r\n        i += 1;\r\n    }\r\n    if(this.keysIndex !== i) {\r\n    \tif(!textDocumentData.__complete) {\r\n            this.completeTextData(textDocumentData);\r\n        }\r\n        this.setCurrentData(textDocumentData);\r\n        this.mdf = this.firstFrame ? false : true;\r\n        this.pv = this.v = this.currentData.t;\r\n        this.keysIndex = i;\r\n    }\r\n\tthis._frameId = frameId;\r\n}\r\n\r\nTextProperty.prototype.completeTextData = function(documentData) {\r\n    documentData.__complete = true;\r\n    var fontManager = this.elem.globalData.fontManager;\r\n    var data = this.data;\r\n    var letters = [];\r\n    var i, len;\r\n    var newLineFlag, index = 0, val;\r\n    var anchorGrouping = data.m.g;\r\n    var currentSize = 0, currentPos = 0, currentLine = 0, lineWidths = [];\r\n    var lineWidth = 0;\r\n    var maxLineWidth = 0;\r\n    var j, jLen;\r\n    var fontData = fontManager.getFontByName(documentData.f);\r\n    var charData, cLength = 0;\r\n    var styles = fontData.fStyle.split(' ');\r\n\r\n    var fWeight = 'normal', fStyle = 'normal';\r\n    len = styles.length;\r\n    var styleName;\r\n    for(i=0;i<len;i+=1){\r\n        styleName = styles[i].toLowerCase();\r\n        switch(styleName) {\r\n            case 'italic':\r\n            fStyle = 'italic';\r\n            break;\r\n            case 'bold':\r\n            fWeight = '700';\r\n            break;\r\n            case 'black':\r\n            fWeight = '900';\r\n            break;\r\n            case 'medium':\r\n            fWeight = '500';\r\n            break;\r\n            case 'regular':\r\n            case 'normal':\r\n            fWeight = '400';\r\n            case 'light':\r\n            case 'thin':\r\n            fWeight = '200';\r\n            break;\r\n        }\r\n    }\r\n    documentData.fWeight = fWeight;\r\n    documentData.fStyle = fStyle;\r\n    len = documentData.t.length;\r\n    var trackingOffset = documentData.tr/1000*documentData.s;\r\n    if(documentData.sz){\r\n        var boxWidth = documentData.sz[0];\r\n        var lastSpaceIndex = -1;\r\n        for(i=0;i<len;i+=1){\r\n            newLineFlag = false;\r\n            if(documentData.t.charAt(i) === ' '){\r\n                lastSpaceIndex = i;\r\n            }else if(documentData.t.charCodeAt(i) === 13){\r\n                lineWidth = 0;\r\n                newLineFlag = true;\r\n            }\r\n            if(fontManager.chars){\r\n                charData = fontManager.getCharData(documentData.t.charAt(i), fontData.fStyle, fontData.fFamily);\r\n                cLength = newLineFlag ? 0 : charData.w*documentData.s/100;\r\n            }else{\r\n                //tCanvasHelper.font = documentData.s + 'px '+ fontData.fFamily;\r\n                cLength = fontManager.measureText(documentData.t.charAt(i), documentData.f, documentData.s);\r\n            }\r\n            if(lineWidth + cLength > boxWidth && documentData.t.charAt(i) !== ' '){\r\n                if(lastSpaceIndex === -1){\r\n                    len += 1;\r\n                } else {\r\n                    i = lastSpaceIndex;\r\n                }\r\n                documentData.t = documentData.t.substr(0,i) + \"\\r\" + documentData.t.substr(i === lastSpaceIndex ? i + 1 : i);\r\n                lastSpaceIndex = -1;\r\n                lineWidth = 0;\r\n            }else {\r\n                lineWidth += cLength;\r\n                lineWidth += trackingOffset;\r\n            }\r\n        }\r\n        len = documentData.t.length;\r\n    }\r\n    lineWidth = - trackingOffset;\r\n    cLength = 0;\r\n    var uncollapsedSpaces = 0;\r\n    var currentChar;\r\n    for (i = 0;i < len ;i += 1) {\r\n        newLineFlag = false;\r\n        currentChar = documentData.t.charAt(i);\r\n        if(currentChar === ' '){\r\n            val = '\\u00A0';\r\n        }else if(currentChar.charCodeAt(0) === 13){\r\n            uncollapsedSpaces = 0;\r\n            lineWidths.push(lineWidth);\r\n            maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\r\n            lineWidth = - 2 * trackingOffset;\r\n            val = '';\r\n            newLineFlag = true;\r\n            currentLine += 1;\r\n        }else{\r\n            val = documentData.t.charAt(i);\r\n        }\r\n        if(fontManager.chars){\r\n            charData = fontManager.getCharData(currentChar, fontData.fStyle, fontManager.getFontByName(documentData.f).fFamily);\r\n            cLength = newLineFlag ? 0 : charData.w*documentData.s/100;\r\n        }else{\r\n            //var charWidth = fontManager.measureText(val, documentData.f, documentData.s);\r\n            //tCanvasHelper.font = documentData.s + 'px '+ fontManager.getFontByName(documentData.f).fFamily;\r\n            cLength = fontManager.measureText(val, documentData.f, documentData.s);\r\n        }\r\n\r\n        //\r\n        if(currentChar === ' '){\r\n            uncollapsedSpaces += cLength + trackingOffset;\r\n        } else {\r\n            lineWidth += cLength + trackingOffset + uncollapsedSpaces;\r\n            uncollapsedSpaces = 0;\r\n        }\r\n        letters.push({l:cLength,an:cLength,add:currentSize,n:newLineFlag, anIndexes:[], val: val, line: currentLine});\r\n        if(anchorGrouping == 2){\r\n            currentSize += cLength;\r\n            if(val == '' || val == '\\u00A0' || i == len - 1){\r\n                if(val == '' || val == '\\u00A0'){\r\n                    currentSize -= cLength;\r\n                }\r\n                while(currentPos<=i){\r\n                    letters[currentPos].an = currentSize;\r\n                    letters[currentPos].ind = index;\r\n                    letters[currentPos].extra = cLength;\r\n                    currentPos += 1;\r\n                }\r\n                index += 1;\r\n                currentSize = 0;\r\n            }\r\n        }else if(anchorGrouping == 3){\r\n            currentSize += cLength;\r\n            if(val == '' || i == len - 1){\r\n                if(val == ''){\r\n                    currentSize -= cLength;\r\n                }\r\n                while(currentPos<=i){\r\n                    letters[currentPos].an = currentSize;\r\n                    letters[currentPos].ind = index;\r\n                    letters[currentPos].extra = cLength;\r\n                    currentPos += 1;\r\n                }\r\n                currentSize = 0;\r\n                index += 1;\r\n            }\r\n        }else{\r\n            letters[index].ind = index;\r\n            letters[index].extra = 0;\r\n            index += 1;\r\n        }\r\n    }\r\n    documentData.l = letters;\r\n    maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\r\n    lineWidths.push(lineWidth);\r\n    if(documentData.sz){\r\n        documentData.boxWidth = documentData.sz[0];\r\n        documentData.justifyOffset = 0;\r\n    }else{\r\n        documentData.boxWidth = maxLineWidth;\r\n        switch(documentData.j){\r\n            case 1:\r\n                documentData.justifyOffset = - documentData.boxWidth;\r\n                break;\r\n            case 2:\r\n                documentData.justifyOffset = - documentData.boxWidth/2;\r\n                break;\r\n            default:\r\n                documentData.justifyOffset = 0;\r\n        }\r\n    }\r\n    documentData.lineWidths = lineWidths;\r\n\r\n    var animators = data.a, animatorData, letterData;\r\n    jLen = animators.length;\r\n    var based, ind, indexes = [];\r\n    for(j=0;j<jLen;j+=1){\r\n        animatorData = animators[j];\r\n        if(animatorData.a.sc){\r\n            documentData.strokeColorAnim = true;\r\n        }\r\n        if(animatorData.a.sw){\r\n            documentData.strokeWidthAnim = true;\r\n        }\r\n        if(animatorData.a.fc || animatorData.a.fh || animatorData.a.fs || animatorData.a.fb){\r\n            documentData.fillColorAnim = true;\r\n        }\r\n        ind = 0;\r\n        based = animatorData.s.b;\r\n        for(i=0;i<len;i+=1){\r\n            letterData = letters[i];\r\n            letterData.anIndexes[j] = ind;\r\n            if((based == 1 && letterData.val != '') || (based == 2 && letterData.val != '' && letterData.val != '\\u00A0') || (based == 3 && (letterData.n || letterData.val == '\\u00A0' || i == len - 1)) || (based == 4 && (letterData.n || i == len - 1))){\r\n                if(animatorData.s.rn === 1){\r\n                    indexes.push(ind);\r\n                }\r\n                ind += 1;\r\n            }\r\n        }\r\n        data.a[j].s.totalChars = ind;\r\n        var currentInd = -1, newInd;\r\n        if(animatorData.s.rn === 1){\r\n            for(i = 0; i < len; i += 1){\r\n                letterData = letters[i];\r\n                if(currentInd != letterData.anIndexes[j]){\r\n                    currentInd = letterData.anIndexes[j];\r\n                    newInd = indexes.splice(Math.floor(Math.random()*indexes.length),1)[0];\r\n                }\r\n                letterData.anIndexes[j] = newInd;\r\n            }\r\n        }\r\n    }\r\n    documentData.yOffset = documentData.lh || documentData.s*1.2;\r\n    documentData.ls = documentData.ls || 0;\r\n    documentData.ascent = fontData.ascent*documentData.s/100;\r\n}\r\n\r\nTextProperty.prototype.updateDocumentData = function(newData, index) {\r\n\tindex = index === undefined ? this.keysIndex : index;\r\n    var dData = this.data.d.k[index].s;\r\n    dData.__complete = false;\r\n    dData.t = newData.t;\r\n    this.keysIndex = -1;\r\n    this.firstFrame = true;\r\n    this.getValue();\r\n}\r\n\nvar pooling = (function(){\r\n\r\n\tfunction double(arr){\r\n\t\treturn arr.concat(Array.apply(null,{length:arr.length}))\r\n\t}\r\n\r\n\treturn {\r\n\t\tdouble: double\r\n\t}\r\n}());\nvar point_pool = (function(){\r\n\tvar ob = {\r\n\t\tnewPoint: newPoint,\r\n\t\trelease: release\r\n\t}\r\n\r\n\tvar _length = 0;\r\n\tvar _maxLength = 8;\r\n\tvar pool = Array.apply(null,{length:_maxLength});\r\n\r\n\tfunction newPoint(){\r\n\t\tvar point;\r\n\t\tif(_length){\r\n\t\t\t_length -= 1;\r\n\t\t\tpoint = pool[_length];\r\n\t\t} else {\r\n\t\t\tpoint = [0.1,0.1];\r\n\t\t}\r\n\t\treturn point;\r\n\t}\r\n\r\n\tfunction release(point) {\r\n\t\tif(_length === _maxLength) {\r\n\t\t\tpool = pooling.double(pool);\r\n\t\t\t_maxLength = _maxLength*2;\r\n\t\t}\r\n\t\tpool[_length] = point;\r\n\t\t_length += 1;\r\n\t}\r\n\r\n\r\n\treturn ob;\r\n}());\nvar shape_pool = (function(){\r\n\tvar ob = {\r\n\t\tclone: clone,\r\n\t\tnewShape: newShape,\r\n\t\trelease: release,\r\n\t\treleaseArray: releaseArray\r\n\t}\r\n\r\n\tvar _length = 0;\r\n\tvar _maxLength = 4;\r\n\tvar pool = Array.apply(null,{length:_maxLength});\r\n\r\n\tfunction newShape(){\r\n\t\tvar shapePath;\r\n\t\tif(_length){\r\n\t\t\t_length -= 1;\r\n\t\t\tshapePath = pool[_length];\r\n\t\t} else {\r\n\t\t\tshapePath = new ShapePath();\r\n\t\t}\r\n\t\treturn shapePath;\r\n\t}\r\n\r\n\tfunction release(shapePath) {\r\n\t\tif(_length === _maxLength) {\r\n\t\t\tpool = pooling.double(pool);\r\n\t\t\t_maxLength = _maxLength*2;\r\n\t\t}\r\n\t\tvar len = shapePath._length, i;\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tpoint_pool.release(shapePath.v[i]);\r\n\t\t\tpoint_pool.release(shapePath.i[i]);\r\n\t\t\tpoint_pool.release(shapePath.o[i]);\r\n\t\t\tshapePath.v[i] = null;\r\n\t\t\tshapePath.i[i] = null;\r\n\t\t\tshapePath.o[i] = null;\r\n\t\t}\r\n\t\tshapePath._length = 0;\r\n\t\tshapePath.c = false;\r\n\t\tpool[_length] = shapePath;\r\n\t\t_length += 1;\r\n\t}\r\n\r\n\tfunction releaseArray(shapePathsCollection, length) {\r\n\t\twhile(length--) {\r\n\t\t\trelease(shapePathsCollection[length]);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction clone(shape, transform) {\r\n\t\tvar i, len = shape._length === undefined ? shape.v.length : shape._length;\r\n\t\tvar cloned = newShape();\r\n\t\tcloned.setLength(len);\r\n\t\tcloned.c = shape.c;\r\n\r\n\t\tvar pt;\r\n\t\t\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tif(transform){\r\n\t\t\t\tpt = transform.applyToPointArray(shape.v[i][0],shape.v[i][1],0,2);\r\n\t\t\t\tcloned.setXYAt(pt[0],pt[1],'v',i);\r\n\t\t\t\tpoint_pool.release(pt);\r\n\t\t\t\tpt = transform.applyToPointArray(shape.o[i][0],shape.o[i][1],0,2);\r\n\t\t\t\tcloned.setXYAt(pt[0],pt[1],'o',i);\r\n\t\t\t\tpoint_pool.release(pt);\r\n\t\t\t\tpt = transform.applyToPointArray(shape.i[i][0],shape.i[i][1],0,2);\r\n\t\t\t\tcloned.setXYAt(pt[0],pt[1],'i',i);\r\n\t\t\t\tpoint_pool.release(pt);\r\n\t\t\t}else{\r\n\t\t\t\tcloned.setTripleAt(shape.v[i][0],shape.v[i][1],shape.o[i][0],shape.o[i][1],shape.i[i][0],shape.i[i][1], i);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn cloned\r\n\t}\r\n\r\n\r\n\treturn ob;\r\n}());\nvar shapeCollection_pool = (function(){\r\n\tvar ob = {\r\n\t\tnewShapeCollection: newShapeCollection,\r\n\t\trelease: release,\r\n\t\tclone: clone\r\n\t}\r\n\r\n\tvar _length = 0;\r\n\tvar _maxLength = 4;\r\n\tvar pool = Array.apply(null,{length:_maxLength});\r\n\r\n\tvar cont = 0;\r\n\r\n\tfunction newShapeCollection(){\r\n\t\tvar shapeCollection;\r\n\t\tif(_length){\r\n\t\t\t_length -= 1;\r\n\t\t\tshapeCollection = pool[_length];\r\n\t\t} else {\r\n\t\t\tshapeCollection = new ShapeCollection();\r\n\t\t}\r\n\t\treturn shapeCollection;\r\n\t}\r\n\r\n\tfunction release(shapeCollection) {\r\n\t\tvar i, len = shapeCollection._length;\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tshape_pool.release(shapeCollection.shapes[i]);\r\n\t\t}\r\n\t\tshapeCollection._length = 0;\r\n\r\n\t\tif(_length === _maxLength) {\r\n\t\t\tpool = pooling.double(pool);\r\n\t\t\t_maxLength = _maxLength*2;\r\n\t\t}\r\n\t\tpool[_length] = shapeCollection;\r\n\t\t_length += 1;\r\n\t}\r\n\r\n\tfunction clone(shapeCollection, originCollection) {\r\n\t\trelease(shapeCollection);\r\n\t\tif(_length === _maxLength) {\r\n\t\t\tpool = pooling.double(pool);\r\n\t\t\t_maxLength = _maxLength*2;\r\n\t\t}\r\n\t\tpool[_length] = shapeCollection;\r\n\t\t_length += 1;\r\n\t}\r\n\r\n\r\n\treturn ob;\r\n}());\nfunction BaseRenderer(){}\r\nBaseRenderer.prototype.checkLayers = function(num){\r\n    var i, len = this.layers.length, data;\r\n    this.completeLayers = true;\r\n    for (i = len - 1; i >= 0; i--) {\r\n        if (!this.elements[i]) {\r\n            data = this.layers[i];\r\n            if(data.ip - data.st <= (num - this.layers[i].st) && data.op - data.st > (num - this.layers[i].st))\r\n            {\r\n                this.buildItem(i);\r\n            }\r\n        }\r\n        this.completeLayers = this.elements[i] ? this.completeLayers:false;\r\n    }\r\n    this.checkPendingElements();\r\n};\r\n\r\nBaseRenderer.prototype.createItem = function(layer){\r\n    switch(layer.ty){\r\n        case 2:\r\n            return this.createImage(layer);\r\n        case 0:\r\n            return this.createComp(layer);\r\n        case 1:\r\n            return this.createSolid(layer);\r\n        case 4:\r\n            return this.createShape(layer);\r\n        case 5:\r\n            return this.createText(layer);\r\n        case 13:\r\n            return this.createCamera(layer);\r\n        case 99:\r\n            return null;\r\n    }\r\n    return this.createBase(layer);\r\n};\r\n\r\nBaseRenderer.prototype.createCamera = function(){\r\n    throw new Error('You\\'re using a 3d camera. Try the html renderer.');\r\n}\r\n\r\nBaseRenderer.prototype.buildAllItems = function(){\r\n    var i, len = this.layers.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.buildItem(i);\r\n    }\r\n    this.checkPendingElements();\r\n};\r\n\r\nBaseRenderer.prototype.includeLayers = function(newLayers){\r\n    this.completeLayers = false;\r\n    var i, len = newLayers.length;\r\n    var j, jLen = this.layers.length;\r\n    for(i=0;i<len;i+=1){\r\n        j = 0;\r\n        while(j<jLen){\r\n            if(this.layers[j].id == newLayers[i].id){\r\n                this.layers[j] = newLayers[i];\r\n                break;\r\n            }\r\n            j += 1;\r\n        }\r\n    }\r\n};\r\n\r\nBaseRenderer.prototype.setProjectInterface = function(pInterface){\r\n    this.globalData.projectInterface = pInterface;\r\n};\r\n\r\nBaseRenderer.prototype.initItems = function(){\r\n    if(!this.globalData.progressiveLoad){\r\n        this.buildAllItems();\r\n    }\r\n};\r\nBaseRenderer.prototype.buildElementParenting = function(element, parentName, hierarchy){\r\n    hierarchy = hierarchy || [];\r\n    var elements = this.elements;\r\n    var layers = this.layers;\r\n    var i=0, len = layers.length;\r\n    while(i<len){\r\n        if(layers[i].ind == parentName){\r\n            if(!elements[i] || elements[i] === true){\r\n                this.buildItem(i);\r\n                this.addPendingElement(element);\r\n            } else if(layers[i].parent !== undefined){\r\n                hierarchy.push(elements[i]);\r\n                elements[i]._isParent = true;\r\n                this.buildElementParenting(element,layers[i].parent, hierarchy);\r\n            } else {\r\n                hierarchy.push(elements[i]);\r\n                elements[i]._isParent = true;\r\n                element.setHierarchy(hierarchy);\r\n            }\r\n\r\n\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nBaseRenderer.prototype.addPendingElement = function(element){\r\n    this.pendingElements.push(element);\r\n};\nfunction SVGRenderer(animationItem, config){\r\n    this.animationItem = animationItem;\r\n    this.layers = null;\r\n    this.renderedFrame = -1;\r\n    this.globalData = {\r\n        frameNum: -1\r\n    };\r\n    this.renderConfig = {\r\n        preserveAspectRatio: (config && config.preserveAspectRatio) || 'xMidYMid meet',\r\n        progressiveLoad: (config && config.progressiveLoad) || false,\r\n        hideOnTransparent: (config && config.hideOnTransparent === false) ? false : true,\r\n        viewBoxOnly: (config && config.viewBoxOnly) || false,\r\n        className: (config && config.className) || ''\r\n    };\r\n    this.globalData.renderConfig = this.renderConfig;\r\n    this.elements = [];\r\n    this.pendingElements = [];\r\n    this.destroyed = false;\r\n\r\n}\r\n\r\nextendPrototype(BaseRenderer,SVGRenderer);\r\n\r\nSVGRenderer.prototype.createBase = function (data) {\r\n    return new SVGBaseElement(data, this.layerElement,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createShape = function (data) {\r\n    return new IShapeElement(data, this.layerElement,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createText = function (data) {\r\n    return new SVGTextElement(data, this.layerElement,this.globalData,this);\r\n\r\n};\r\n\r\nSVGRenderer.prototype.createImage = function (data) {\r\n    return new IImageElement(data, this.layerElement,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createComp = function (data) {\r\n    return new ICompElement(data, this.layerElement,this.globalData,this);\r\n\r\n};\r\n\r\nSVGRenderer.prototype.createSolid = function (data) {\r\n    return new ISolidElement(data, this.layerElement,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.configAnimation = function(animData){\r\n    this.layerElement = document.createElementNS(svgNS,'svg');\r\n    this.layerElement.setAttribute('xmlns','http://www.w3.org/2000/svg');\r\n    this.layerElement.setAttribute('viewBox','0 0 '+animData.w+' '+animData.h);\r\n    if(!this.renderConfig.viewBoxOnly) {\r\n        this.layerElement.setAttribute('width',animData.w);\r\n        this.layerElement.setAttribute('height',animData.h);\r\n        this.layerElement.style.width = '100%';\r\n        this.layerElement.style.height = '100%';\r\n    }\r\n    if(this.renderConfig.className) {\r\n        this.layerElement.setAttribute('class', this.renderConfig.className);\r\n    }\r\n    this.layerElement.setAttribute('preserveAspectRatio',this.renderConfig.preserveAspectRatio);\r\n    //this.layerElement.style.transform = 'translate3d(0,0,0)';\r\n    //this.layerElement.style.transformOrigin = this.layerElement.style.mozTransformOrigin = this.layerElement.style.webkitTransformOrigin = this.layerElement.style['-webkit-transform'] = \"0px 0px 0px\";\r\n    this.animationItem.wrapper.appendChild(this.layerElement);\r\n    //Mask animation\r\n    var defs = document.createElementNS(svgNS, 'defs');\r\n    this.globalData.defs = defs;\r\n    this.layerElement.appendChild(defs);\r\n    this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem);\r\n    this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem);\r\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\r\n    this.globalData.frameId = 0;\r\n    this.globalData.nm = animData.nm;\r\n    this.globalData.compSize = {\r\n        w: animData.w,\r\n        h: animData.h\r\n    };\r\n    this.data = animData;\r\n    this.globalData.frameRate = animData.fr;\r\n    var maskElement = document.createElementNS(svgNS, 'clipPath');\r\n    var rect = document.createElementNS(svgNS,'rect');\r\n    rect.setAttribute('width',animData.w);\r\n    rect.setAttribute('height',animData.h);\r\n    rect.setAttribute('x',0);\r\n    rect.setAttribute('y',0);\r\n    var maskId = 'animationMask_'+randomString(10);\r\n    maskElement.setAttribute('id', maskId);\r\n    maskElement.appendChild(rect);\r\n    var maskedElement = document.createElementNS(svgNS,'g');\r\n    maskedElement.setAttribute(\"clip-path\", \"url(\" + locationHref + \"#\"+maskId+\")\");\r\n    this.layerElement.appendChild(maskedElement);\r\n    defs.appendChild(maskElement);\r\n    this.layerElement = maskedElement;\r\n    this.layers = animData.layers;\r\n    this.globalData.fontManager = new FontManager();\r\n    this.globalData.fontManager.addChars(animData.chars);\r\n    this.globalData.fontManager.addFonts(animData.fonts,defs);\r\n    this.elements = Array.apply(null,{length:animData.layers.length});\r\n};\r\n\r\n\r\nSVGRenderer.prototype.destroy = function () {\r\n    this.animationItem.wrapper.innerHTML = '';\r\n    this.layerElement = null;\r\n    this.globalData.defs = null;\r\n    var i, len = this.layers ? this.layers.length : 0;\r\n    for (i = 0; i < len; i++) {\r\n        if(this.elements[i]){\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n    this.elements.length = 0;\r\n    this.destroyed = true;\r\n    this.animationItem = null;\r\n};\r\n\r\nSVGRenderer.prototype.updateContainerSize = function () {\r\n};\r\n\r\nSVGRenderer.prototype.buildItem  = function(pos){\r\n    var elements = this.elements;\r\n    if(elements[pos] || this.layers[pos].ty == 99){\r\n        return;\r\n    }\r\n    elements[pos] = true;\r\n    var element = this.createItem(this.layers[pos]);\r\n\r\n    elements[pos] = element;\r\n    if(expressionsPlugin){\r\n        if(this.layers[pos].ty === 0){\r\n            this.globalData.projectInterface.registerComposition(element);\r\n        }\r\n        element.initExpressions();\r\n    }\r\n    this.appendElementInPos(element,pos);\r\n    if(this.layers[pos].tt){\r\n        if(!this.elements[pos - 1] || this.elements[pos - 1] === true){\r\n            this.buildItem(pos - 1);\r\n            this.addPendingElement(element);\r\n        } else {\r\n            element.setMatte(elements[pos - 1].layerId);\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.checkPendingElements  = function(){\r\n    while(this.pendingElements.length){\r\n        var element = this.pendingElements.pop();\r\n        element.checkParenting();\r\n        if(element.data.tt){\r\n            var i = 0, len = this.elements.length;\r\n            while(i<len){\r\n                if(this.elements[i] === element){\r\n                    element.setMatte(this.elements[i - 1].layerId);\r\n                    break;\r\n                }\r\n                i += 1;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.renderFrame = function(num){\r\n    if(this.renderedFrame == num || this.destroyed){\r\n        return;\r\n    }\r\n    if(num === null){\r\n        num = this.renderedFrame;\r\n    }else{\r\n        this.renderedFrame = num;\r\n    }\r\n    //clearPoints();\r\n    /*console.log('-------');\r\n    console.log('FRAME ',num);*/\r\n    this.globalData.frameNum = num;\r\n    this.globalData.frameId += 1;\r\n    this.globalData.projectInterface.currentFrame = num;\r\n    var i, len = this.layers.length;\r\n    if(!this.completeLayers){\r\n        this.checkLayers(num);\r\n    }\r\n    for (i = len - 1; i >= 0; i--) {\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].prepareFrame(num - this.layers[i].st);\r\n        }\r\n    }\r\n    for (i = len - 1; i >= 0; i--) {\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].renderFrame();\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.appendElementInPos = function(element, pos){\r\n    var newElement = element.getBaseElement();\r\n    if(!newElement){\r\n        return;\r\n    }\r\n    var i = 0;\r\n    var nextElement;\r\n    while(i<pos){\r\n        if(this.elements[i] && this.elements[i]!== true && this.elements[i].getBaseElement()){\r\n            nextElement = this.elements[i].getBaseElement();\r\n        }\r\n        i += 1;\r\n    }\r\n    if(nextElement){\r\n        this.layerElement.insertBefore(newElement, nextElement);\r\n    } else {\r\n        this.layerElement.appendChild(newElement);\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.hide = function(){\r\n    this.layerElement.style.display = 'none';\r\n};\r\n\r\nSVGRenderer.prototype.show = function(){\r\n    this.layerElement.style.display = 'block';\r\n};\r\n\r\nSVGRenderer.prototype.searchExtraCompositions = function(assets){\r\n    var i, len = assets.length;\r\n    var floatingContainer = document.createElementNS(svgNS,'g');\r\n    for(i=0;i<len;i+=1){\r\n        if(assets[i].xt){\r\n            var comp = this.createComp(assets[i],floatingContainer,this.globalData.comp,null);\r\n            comp.initExpressions();\r\n            //comp.compInterface = CompExpressionInterface(comp);\r\n            //Expressions.addLayersInterface(comp.elements, this.globalData.projectInterface);\r\n            this.globalData.projectInterface.registerComposition(comp);\r\n        }\r\n    }\r\n};\r\n\nfunction MaskElement(data,element,globalData) {\r\n    this.dynamicProperties = [];\r\n    this.data = data;\r\n    this.element = element;\r\n    this.globalData = globalData;\r\n    this.storedData = [];\r\n    this.masksProperties = this.data.masksProperties;\r\n    this.viewData = Array.apply(null,{length:this.masksProperties.length});\r\n    this.maskElement = null;\r\n    this.firstFrame = true;\r\n    var defs = this.globalData.defs;\r\n    var i, len = this.masksProperties.length;\r\n\r\n\r\n    var path, properties = this.masksProperties;\r\n    var count = 0;\r\n    var currentMasks = [];\r\n    var j, jLen;\r\n    var layerId = randomString(10);\r\n    var rect, expansor, feMorph,x;\r\n    var maskType = 'clipPath', maskRef = 'clip-path';\r\n    for (i = 0; i < len; i++) {\r\n\r\n        if((properties[i].mode !== 'a' && properties[i].mode !== 'n')|| properties[i].inv || properties[i].o.k !== 100){\r\n            maskType = 'mask';\r\n            maskRef = 'mask';\r\n        }\r\n\r\n        if((properties[i].mode == 's' || properties[i].mode == 'i') && count == 0){\r\n            rect = document.createElementNS(svgNS, 'rect');\r\n            rect.setAttribute('fill', '#ffffff');\r\n            rect.setAttribute('width', this.element.comp.data.w);\r\n            rect.setAttribute('height', this.element.comp.data.h);\r\n            currentMasks.push(rect);\r\n        } else {\r\n            rect = null;\r\n        }\r\n\r\n        path = document.createElementNS(svgNS, 'path');\r\n        if(properties[i].mode == 'n') {\r\n            this.viewData[i] = {\r\n                op: PropertyFactory.getProp(this.element,properties[i].o,0,0.01,this.dynamicProperties),\r\n                prop: ShapePropertyFactory.getShapeProp(this.element,properties[i],3,this.dynamicProperties,null),\r\n                elem: path\r\n            };\r\n            defs.appendChild(path);\r\n            continue;\r\n        }\r\n        count += 1;\r\n\r\n        if(properties[i].mode == 's'){\r\n            path.setAttribute('fill', '#000000');\r\n        }else{\r\n            path.setAttribute('fill', '#ffffff');\r\n        }\r\n        path.setAttribute('clip-rule','nonzero');\r\n\r\n        if(properties[i].x.k !== 0){\r\n            maskType = 'mask';\r\n            maskRef = 'mask';\r\n            x = PropertyFactory.getProp(this.element,properties[i].x,0,null,this.dynamicProperties);\r\n            var filterID = 'fi_'+randomString(10);\r\n            expansor = document.createElementNS(svgNS,'filter');\r\n            expansor.setAttribute('id',filterID);\r\n            feMorph = document.createElementNS(svgNS,'feMorphology');\r\n            feMorph.setAttribute('operator','dilate');\r\n            feMorph.setAttribute('in','SourceGraphic');\r\n            feMorph.setAttribute('radius','0');\r\n            expansor.appendChild(feMorph);\r\n            defs.appendChild(expansor);\r\n            if(properties[i].mode == 's'){\r\n                path.setAttribute('stroke', '#000000');\r\n            }else{\r\n                path.setAttribute('stroke', '#ffffff');\r\n            }\r\n        }else{\r\n            feMorph = null;\r\n            x = null;\r\n        }\r\n\r\n\r\n        this.storedData[i] = {\r\n             elem: path,\r\n             x: x,\r\n             expan: feMorph,\r\n            lastPath: '',\r\n            lastOperator:'',\r\n            filterId:filterID,\r\n            lastRadius:0\r\n        };\r\n        if(properties[i].mode == 'i'){\r\n            jLen = currentMasks.length;\r\n            var g = document.createElementNS(svgNS,'g');\r\n            for(j=0;j<jLen;j+=1){\r\n                g.appendChild(currentMasks[j]);\r\n            }\r\n            var mask = document.createElementNS(svgNS,'mask');\r\n            mask.setAttribute('mask-type','alpha');\r\n            mask.setAttribute('id',layerId+'_'+count);\r\n            mask.appendChild(path);\r\n            defs.appendChild(mask);\r\n            g.setAttribute('mask','url(' + locationHref + '#'+layerId+'_'+count+')');\r\n\r\n            currentMasks.length = 0;\r\n            currentMasks.push(g);\r\n        }else{\r\n            currentMasks.push(path);\r\n        }\r\n        if(properties[i].inv && !this.solidPath){\r\n            this.solidPath = this.createLayerSolidPath();\r\n        }\r\n        this.viewData[i] = {\r\n            elem: path,\r\n            lastPath: '',\r\n            op: PropertyFactory.getProp(this.element,properties[i].o,0,0.01,this.dynamicProperties),\r\n            prop:ShapePropertyFactory.getShapeProp(this.element,properties[i],3,this.dynamicProperties,null)\r\n        };\r\n        if(rect){\r\n            this.viewData[i].invRect = rect;\r\n        }\r\n        if(!this.viewData[i].prop.k){\r\n            this.drawPath(properties[i],this.viewData[i].prop.v,this.viewData[i]);\r\n        }\r\n    }\r\n\r\n    this.maskElement = document.createElementNS(svgNS, maskType);\r\n\r\n    len = currentMasks.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.maskElement.appendChild(currentMasks[i]);\r\n    }\r\n\r\n    this.maskElement.setAttribute('id', layerId);\r\n    if(count > 0){\r\n        this.element.maskedElement.setAttribute(maskRef, \"url(\" + locationHref + \"#\" + layerId + \")\");\r\n    }\r\n\r\n    defs.appendChild(this.maskElement);\r\n};\r\n\r\nMaskElement.prototype.getMaskProperty = function(pos){\r\n    return this.viewData[pos].prop;\r\n};\r\n\r\nMaskElement.prototype.prepareFrame = function(){\r\n    var i, len = this.dynamicProperties.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.dynamicProperties[i].getValue();\r\n\r\n    }\r\n};\r\n\r\nMaskElement.prototype.renderFrame = function (finalMat) {\r\n    var i, len = this.masksProperties.length;\r\n    for (i = 0; i < len; i++) {\r\n        if(this.viewData[i].prop.mdf || this.firstFrame){\r\n            this.drawPath(this.masksProperties[i],this.viewData[i].prop.v,this.viewData[i]);\r\n        }\r\n        if(this.viewData[i].op.mdf || this.firstFrame){\r\n            this.viewData[i].elem.setAttribute('fill-opacity',this.viewData[i].op.v);\r\n        }\r\n        if(this.masksProperties[i].mode !== 'n'){\r\n            if(this.viewData[i].invRect && (this.element.finalTransform.mProp.mdf || this.firstFrame)){\r\n                this.viewData[i].invRect.setAttribute('x', -finalMat.props[12]);\r\n                this.viewData[i].invRect.setAttribute('y', -finalMat.props[13]);\r\n            }\r\n            if(this.storedData[i].x && (this.storedData[i].x.mdf || this.firstFrame)){\r\n                var feMorph = this.storedData[i].expan;\r\n                if(this.storedData[i].x.v < 0){\r\n                    if(this.storedData[i].lastOperator !== 'erode'){\r\n                        this.storedData[i].lastOperator = 'erode';\r\n                        this.storedData[i].elem.setAttribute('filter','url(' + locationHref + '#'+this.storedData[i].filterId+')');\r\n                    }\r\n                    feMorph.setAttribute('radius',-this.storedData[i].x.v);\r\n                }else{\r\n                    if(this.storedData[i].lastOperator !== 'dilate'){\r\n                        this.storedData[i].lastOperator = 'dilate';\r\n                        this.storedData[i].elem.setAttribute('filter',null);\r\n                    }\r\n                    this.storedData[i].elem.setAttribute('stroke-width', this.storedData[i].x.v*2);\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n    this.firstFrame = false;\r\n};\r\n\r\nMaskElement.prototype.getMaskelement = function () {\r\n    return this.maskElement;\r\n};\r\n\r\nMaskElement.prototype.createLayerSolidPath = function(){\r\n    var path = 'M0,0 ';\r\n    path += ' h' + this.globalData.compSize.w ;\r\n    path += ' v' + this.globalData.compSize.h ;\r\n    path += ' h-' + this.globalData.compSize.w ;\r\n    path += ' v-' + this.globalData.compSize.h + ' ';\r\n    return path;\r\n};\r\n\r\nMaskElement.prototype.drawPath = function(pathData,pathNodes,viewData){\r\n    var pathString = \" M\"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    var i, len;\r\n    len = pathNodes._length;\r\n    for(i=1;i<len;i+=1){\r\n        //pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[i][0]+','+pathNodes.i[i][1] + \" \"+pathNodes.v[i][0]+','+pathNodes.v[i][1];\r\n        pathString += \" C\"+bm_rnd(pathNodes.o[i-1][0])+','+bm_rnd(pathNodes.o[i-1][1]) + \" \"+bm_rnd(pathNodes.i[i][0])+','+bm_rnd(pathNodes.i[i][1]) + \" \"+bm_rnd(pathNodes.v[i][0])+','+bm_rnd(pathNodes.v[i][1]);\r\n    }\r\n        //pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[0][0]+','+pathNodes.i[0][1] + \" \"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    if(pathNodes.c && len > 1){\r\n        pathString += \" C\"+bm_rnd(pathNodes.o[i-1][0])+','+bm_rnd(pathNodes.o[i-1][1]) + \" \"+bm_rnd(pathNodes.i[0][0])+','+bm_rnd(pathNodes.i[0][1]) + \" \"+bm_rnd(pathNodes.v[0][0])+','+bm_rnd(pathNodes.v[0][1]);\r\n    }\r\n    //pathNodes.__renderedString = pathString;\r\n\r\n\r\n    if(viewData.lastPath !== pathString){\r\n        if(viewData.elem){\r\n            if(!pathNodes.c){\r\n                viewData.elem.setAttribute('d','');\r\n            }else if(pathData.inv){\r\n                viewData.elem.setAttribute('d',this.solidPath + pathString);\r\n            }else{\r\n                viewData.elem.setAttribute('d',pathString);\r\n            }\r\n        }\r\n        viewData.lastPath = pathString;\r\n    }\r\n};\r\n\r\nMaskElement.prototype.destroy = function(){\r\n    this.element = null;\r\n    this.globalData = null;\r\n    this.maskElement = null;\r\n    this.data = null;\r\n    this.masksProperties = null;\r\n};\nfunction BaseElement(){\r\n};\r\nBaseElement.prototype.checkMasks = function(){\r\n    if(!this.data.hasMask){\r\n        return false;\r\n    }\r\n    var i = 0, len = this.data.masksProperties.length;\r\n    while(i<len) {\r\n        if((this.data.masksProperties[i].mode !== 'n' && this.data.masksProperties[i].cl !== false)) {\r\n            return true;\r\n        }\r\n        i += 1;\r\n    }\r\n    return false;\r\n}\r\n\r\nBaseElement.prototype.checkParenting = function(){\r\n    if(this.data.parent !== undefined){\r\n        this.comp.buildElementParenting(this, this.data.parent);\r\n    }\r\n}\r\n\r\nBaseElement.prototype.prepareFrame = function(num){\r\n    if(this.data.ip - this.data.st <= num && this.data.op - this.data.st > num)\r\n    {\r\n        if(this.isVisible !== true){\r\n            this.elemMdf = true;\r\n            this.globalData.mdf = true;\r\n            this.isVisible = true;\r\n            this.firstFrame = true;\r\n            if(this.data.hasMask){\r\n                this.maskManager.firstFrame = true;\r\n            }\r\n        }\r\n    }else{\r\n        if(this.isVisible !== false){\r\n            this.elemMdf = true;\r\n            this.globalData.mdf = true;\r\n            this.isVisible = false;\r\n        }\r\n    }\r\n    var i, len = this.dynamicProperties.length;\r\n    for(i=0;i<len;i+=1){\r\n        if(this.isVisible || (this._isParent && this.dynamicProperties[i].type === 'transform')){\r\n            this.dynamicProperties[i].getValue();\r\n            if(this.dynamicProperties[i].mdf){\r\n                this.elemMdf = true;\r\n                this.globalData.mdf = true;\r\n            }\r\n        }\r\n    }\r\n    if(this.data.hasMask && this.isVisible){\r\n        this.maskManager.prepareFrame(num*this.data.sr);\r\n    }\r\n    \r\n    /* TODO check this\r\n    if(this.data.sy){\r\n        if(this.data.sy[0].renderedData[num]){\r\n            if(this.data.sy[0].renderedData[num].c){\r\n                this.feFlood.setAttribute('flood-color','rgb('+Math.round(this.data.sy[0].renderedData[num].c[0])+','+Math.round(this.data.sy[0].renderedData[num].c[1])+','+Math.round(this.data.sy[0].renderedData[num].c[2])+')');\r\n            }\r\n            if(this.data.sy[0].renderedData[num].s){\r\n                this.feMorph.setAttribute('radius',this.data.sy[0].renderedData[num].s);\r\n            }\r\n        }\r\n    }\r\n    */\r\n\r\n\r\n    this.currentFrameNum = num*this.data.sr;\r\n    return this.isVisible;\r\n};\r\n\r\nBaseElement.prototype.globalToLocal = function(pt){\r\n    var transforms = [];\r\n    transforms.push(this.finalTransform);\r\n    var flag = true;\r\n    var comp = this.comp;\r\n    while(flag){\r\n        if(comp.finalTransform){\r\n            if(comp.data.hasMask){\r\n                transforms.splice(0,0,comp.finalTransform);\r\n            }\r\n            comp = comp.comp;\r\n        } else {\r\n            flag = false;\r\n        }\r\n    }\r\n    var i, len = transforms.length,ptNew;\r\n    for(i=0;i<len;i+=1){\r\n        ptNew = transforms[i].mat.applyToPointArray(0,0,0);\r\n        //ptNew = transforms[i].mat.applyToPointArray(pt[0],pt[1],pt[2]);\r\n        pt = [pt[0] - ptNew[0],pt[1] - ptNew[1],0];\r\n    }\r\n    return pt;\r\n};\r\n\r\nBaseElement.prototype.initExpressions = function(){\r\n    this.layerInterface = LayerExpressionInterface(this);\r\n    //layers[i].layerInterface = LayerExpressionInterface(layers[i]);\r\n    //layers[i].layerInterface = LayerExpressionInterface(layers[i]);\r\n    if(this.data.hasMask){\r\n        this.layerInterface.registerMaskInterface(this.maskManager);\r\n    }\r\n    var effectsInterface = EffectsExpressionInterface.createEffectsInterface(this,this.layerInterface);\r\n    this.layerInterface.registerEffectsInterface(effectsInterface);\r\n\r\n    if(this.data.ty === 0 || this.data.xt){\r\n        this.compInterface = CompExpressionInterface(this);\r\n    } else if(this.data.ty === 4){\r\n        this.layerInterface.shapeInterface = ShapeExpressionInterface.createShapeInterface(this.shapesData,this.itemsData,this.layerInterface);\r\n    } else if(this.data.ty === 5){\r\n        this.layerInterface.textInterface = TextExpressionInterface(this);\r\n    }\r\n}\r\n\r\nBaseElement.prototype.setBlendMode = function(){\r\n    var blendModeValue = '';\r\n    switch(this.data.bm){\r\n        case 1:\r\n            blendModeValue = 'multiply';\r\n            break;\r\n        case 2:\r\n            blendModeValue = 'screen';\r\n            break;\r\n        case 3:\r\n            blendModeValue = 'overlay';\r\n            break;\r\n        case 4:\r\n            blendModeValue = 'darken';\r\n            break;\r\n        case 5:\r\n            blendModeValue = 'lighten';\r\n            break;\r\n        case 6:\r\n            blendModeValue = 'color-dodge';\r\n            break;\r\n        case 7:\r\n            blendModeValue = 'color-burn';\r\n            break;\r\n        case 8:\r\n            blendModeValue = 'hard-light';\r\n            break;\r\n        case 9:\r\n            blendModeValue = 'soft-light';\r\n            break;\r\n        case 10:\r\n            blendModeValue = 'difference';\r\n            break;\r\n        case 11:\r\n            blendModeValue = 'exclusion';\r\n            break;\r\n        case 12:\r\n            blendModeValue = 'hue';\r\n            break;\r\n        case 13:\r\n            blendModeValue = 'saturation';\r\n            break;\r\n        case 14:\r\n            blendModeValue = 'color';\r\n            break;\r\n        case 15:\r\n            blendModeValue = 'luminosity';\r\n            break;\r\n    }\r\n    var elem = this.baseElement || this.layerElement;\r\n\r\n    elem.style['mix-blend-mode'] = blendModeValue;\r\n}\r\n\r\nBaseElement.prototype.init = function(){\r\n    if(!this.data.sr){\r\n        this.data.sr = 1;\r\n    }\r\n    this.dynamicProperties = this.dynamicProperties || [];\r\n    if(this.data.ef){\r\n        this.effects = new EffectsManager(this.data,this,this.dynamicProperties);\r\n        //this.effect = this.effectsManager.bind(this.effectsManager);\r\n    }\r\n    //this.elemInterface = buildLayerExpressionInterface(this);\r\n    this.hidden = false;\r\n    this.firstFrame = true;\r\n    this.isVisible = false;\r\n    this._isParent = false;\r\n    this.currentFrameNum = -99999;\r\n    this.lastNum = -99999;\r\n    if(this.data.ks){\r\n        this.finalTransform = {\r\n            mProp: PropertyFactory.getProp(this,this.data.ks,2,null,this.dynamicProperties),\r\n            matMdf: false,\r\n            opMdf: false,\r\n            mat: new Matrix(),\r\n            opacity: 1\r\n        };\r\n        if(this.data.ao){\r\n            this.finalTransform.mProp.autoOriented = true;\r\n        }\r\n        this.finalTransform.op = this.finalTransform.mProp.o;\r\n        this.transform = this.finalTransform.mProp;\r\n        if(this.data.ty !== 11){\r\n            this.createElements();\r\n        }\r\n        if(this.data.hasMask){\r\n            this.addMasks(this.data);\r\n        }\r\n    }\r\n    this.elemMdf = false;\r\n};\r\nBaseElement.prototype.getType = function(){\r\n    return this.type;\r\n};\r\n\r\nBaseElement.prototype.resetHierarchy = function(){\r\n    if(!this.hierarchy){\r\n        this.hierarchy = [];\r\n    }else{\r\n        this.hierarchy.length = 0;\r\n    }\r\n};\r\n\r\nBaseElement.prototype.getHierarchy = function(){\r\n    if(!this.hierarchy){\r\n        this.hierarchy = [];\r\n    }\r\n    return this.hierarchy;\r\n};\r\n\r\nBaseElement.prototype.setHierarchy = function(hierarchy){\r\n    this.hierarchy = hierarchy;\r\n};\r\n\r\nBaseElement.prototype.getLayerSize = function(){\r\n    if(this.data.ty === 5){\r\n        return {w:this.data.textData.width,h:this.data.textData.height};\r\n    }else{\r\n        return {w:this.data.width,h:this.data.height};\r\n    }\r\n};\r\n\r\nBaseElement.prototype.hide = function(){\r\n\r\n};\r\n\r\nBaseElement.prototype.sourceRectAtTime = function(){\r\n    return {\r\n        top:0,\r\n        left:0,\r\n        width:100,\r\n        height:100\r\n    }\r\n};\r\n\r\nBaseElement.prototype.mHelper = new Matrix();\nfunction SVGBaseElement(data,parentContainer,globalData,comp, placeholder){\r\n    this.globalData = globalData;\r\n    this.comp = comp;\r\n    this.data = data;\r\n    this.matteElement = null;\r\n    this.transformedElement = null;\r\n    this.isTransparent = false;\r\n    this.parentContainer = parentContainer;\r\n    this.layerId = placeholder ? placeholder.layerId : 'ly_'+randomString(10);\r\n    this.placeholder = placeholder;\r\n    this._sizeChanged = false;\r\n    this.init();\r\n};\r\n\r\ncreateElement(BaseElement, SVGBaseElement);\r\n\r\nSVGBaseElement.prototype.createElements = function(){\r\n    this.layerElement = document.createElementNS(svgNS,'g');\r\n    this.transformedElement = this.layerElement;\r\n    if(this.data.hasMask){\r\n        this.maskedElement = this.layerElement;\r\n    }\r\n    var layerElementParent = null;\r\n    if(this.data.td){\r\n        if(this.data.td == 3 || this.data.td == 1){\r\n            var masker = document.createElementNS(svgNS,'mask');\r\n            masker.setAttribute('id',this.layerId);\r\n            masker.setAttribute('mask-type',this.data.td == 3 ? 'luminance':'alpha');\r\n            masker.appendChild(this.layerElement);\r\n            layerElementParent = masker;\r\n            this.globalData.defs.appendChild(masker);\r\n            ////// This is only for IE and Edge when mask if of type alpha\r\n            if(!featureSupport.maskType && this.data.td == 1){\r\n                masker.setAttribute('mask-type','luminance');\r\n                var filId = randomString(10);\r\n                var fil = filtersFactory.createFilter(filId);\r\n                this.globalData.defs.appendChild(fil);\r\n                fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\r\n                var gg = document.createElementNS(svgNS,'g');\r\n                gg.appendChild(this.layerElement);\r\n                layerElementParent = gg;\r\n                masker.appendChild(gg);\r\n                gg.setAttribute('filter','url(' + locationHref + '#'+filId+')');\r\n            }\r\n        }else if(this.data.td == 2){\r\n            var maskGroup = document.createElementNS(svgNS,'mask');\r\n            maskGroup.setAttribute('id',this.layerId);\r\n            maskGroup.setAttribute('mask-type','alpha');\r\n            var maskGrouper = document.createElementNS(svgNS,'g');\r\n            maskGroup.appendChild(maskGrouper);\r\n            var filId = randomString(10);\r\n            var fil = filtersFactory.createFilter(filId);\r\n            ////\r\n\r\n            var feColorMatrix = document.createElementNS(svgNS,'feColorMatrix');\r\n            feColorMatrix.setAttribute('type','matrix');\r\n            feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n            feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 -1 1');\r\n            fil.appendChild(feColorMatrix);\r\n\r\n            ////\r\n            /*var feCTr = document.createElementNS(svgNS,'feComponentTransfer');\r\n            feCTr.setAttribute('in','SourceGraphic');\r\n            fil.appendChild(feCTr);\r\n            var feFunc = document.createElementNS(svgNS,'feFuncA');\r\n            feFunc.setAttribute('type','table');\r\n            feFunc.setAttribute('tableValues','1.0 0.0');\r\n            feCTr.appendChild(feFunc);*/\r\n            this.globalData.defs.appendChild(fil);\r\n            var alphaRect = document.createElementNS(svgNS,'rect');\r\n            alphaRect.setAttribute('width',this.comp.data.w);\r\n            alphaRect.setAttribute('height',this.comp.data.h);\r\n            alphaRect.setAttribute('x','0');\r\n            alphaRect.setAttribute('y','0');\r\n            alphaRect.setAttribute('fill','#ffffff');\r\n            alphaRect.setAttribute('opacity','0');\r\n            maskGrouper.setAttribute('filter','url(' + locationHref + '#'+filId+')');\r\n            maskGrouper.appendChild(alphaRect);\r\n            maskGrouper.appendChild(this.layerElement);\r\n            layerElementParent = maskGrouper;\r\n            if(!featureSupport.maskType){\r\n                maskGroup.setAttribute('mask-type','luminance');\r\n                fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\r\n                var gg = document.createElementNS(svgNS,'g');\r\n                maskGrouper.appendChild(alphaRect);\r\n                gg.appendChild(this.layerElement);\r\n                layerElementParent = gg;\r\n                maskGrouper.appendChild(gg);\r\n            }\r\n            this.globalData.defs.appendChild(maskGroup);\r\n        }\r\n    }else if(this.data.hasMask || this.data.tt){\r\n        if(this.data.tt){\r\n            this.matteElement = document.createElementNS(svgNS,'g');\r\n            this.matteElement.appendChild(this.layerElement);\r\n            layerElementParent = this.matteElement;\r\n            this.baseElement = this.matteElement;\r\n        }else{\r\n            this.baseElement = this.layerElement;\r\n        }\r\n    }else{\r\n        this.baseElement = this.layerElement;\r\n    }\r\n    if((this.data.ln || this.data.cl) && (this.data.ty === 4 || this.data.ty === 0)){\r\n        if(this.data.ln){\r\n            this.layerElement.setAttribute('id',this.data.ln);\r\n        }\r\n        if(this.data.cl){\r\n            this.layerElement.setAttribute('class',this.data.cl);\r\n        }\r\n    }\r\n    if(this.data.ty === 0){\r\n            var cp = document.createElementNS(svgNS, 'clipPath');\r\n            var pt = document.createElementNS(svgNS,'path');\r\n            pt.setAttribute('d','M0,0 L'+this.data.w+',0'+' L'+this.data.w+','+this.data.h+' L0,'+this.data.h+'z');\r\n            var clipId = 'cp_'+randomString(8);\r\n            cp.setAttribute('id',clipId);\r\n            cp.appendChild(pt);\r\n            this.globalData.defs.appendChild(cp);\r\n        if(this.checkMasks()){\r\n            var cpGroup = document.createElementNS(svgNS,'g');\r\n            cpGroup.setAttribute('clip-path','url(' + locationHref + '#'+clipId+')');\r\n            cpGroup.appendChild(this.layerElement);\r\n            this.transformedElement = cpGroup;\r\n            if(layerElementParent){\r\n                layerElementParent.appendChild(this.transformedElement);\r\n            } else {\r\n                this.baseElement = this.transformedElement;\r\n            }\r\n        } else {\r\n            this.layerElement.setAttribute('clip-path','url(' + locationHref + '#'+clipId+')');\r\n        }\r\n        \r\n    }\r\n    if(this.data.bm !== 0){\r\n        this.setBlendMode();\r\n    }\r\n    if(this.layerElement !== this.parentContainer){\r\n        this.placeholder = null;\r\n    }\r\n    /* Todo performance killer\r\n    if(this.data.sy){\r\n        var filterID = 'st_'+randomString(10);\r\n        var c = this.data.sy[0].c.k;\r\n        var r = this.data.sy[0].s.k;\r\n        var expansor = document.createElementNS(svgNS,'filter');\r\n        expansor.setAttribute('id',filterID);\r\n        var feFlood = document.createElementNS(svgNS,'feFlood');\r\n        this.feFlood = feFlood;\r\n        if(!c[0].e){\r\n            feFlood.setAttribute('flood-color','rgb('+c[0]+','+c[1]+','+c[2]+')');\r\n        }\r\n        feFlood.setAttribute('result','base');\r\n        expansor.appendChild(feFlood);\r\n        var feMorph = document.createElementNS(svgNS,'feMorphology');\r\n        feMorph.setAttribute('operator','dilate');\r\n        feMorph.setAttribute('in','SourceGraphic');\r\n        feMorph.setAttribute('result','bigger');\r\n        this.feMorph = feMorph;\r\n        if(!r.length){\r\n            feMorph.setAttribute('radius',this.data.sy[0].s.k);\r\n        }\r\n        expansor.appendChild(feMorph);\r\n        var feColorMatrix = document.createElementNS(svgNS,'feColorMatrix');\r\n        feColorMatrix.setAttribute('result','mask');\r\n        feColorMatrix.setAttribute('in','bigger');\r\n        feColorMatrix.setAttribute('type','matrix');\r\n        feColorMatrix.setAttribute('values','0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0');\r\n        expansor.appendChild(feColorMatrix);\r\n        var feComposite = document.createElementNS(svgNS,'feComposite');\r\n        feComposite.setAttribute('result','drop');\r\n        feComposite.setAttribute('in','base');\r\n        feComposite.setAttribute('in2','mask');\r\n        feComposite.setAttribute('operator','in');\r\n        expansor.appendChild(feComposite);\r\n        var feBlend = document.createElementNS(svgNS,'feBlend');\r\n        feBlend.setAttribute('in','SourceGraphic');\r\n        feBlend.setAttribute('in2','drop');\r\n        feBlend.setAttribute('mode','normal');\r\n        expansor.appendChild(feBlend);\r\n        this.globalData.defs.appendChild(expansor);\r\n        var cont = document.createElementNS(svgNS,'g');\r\n        if(this.layerElement === this.parentContainer){\r\n            this.layerElement = cont;\r\n        }else{\r\n            cont.appendChild(this.layerElement);\r\n        }\r\n        cont.setAttribute('filter','url(#'+filterID+')');\r\n        if(this.data.td){\r\n            cont.setAttribute('data-td',this.data.td);\r\n        }\r\n        if(this.data.td == 3){\r\n            this.globalData.defs.appendChild(cont);\r\n        }else if(this.data.td == 2){\r\n            maskGrouper.appendChild(cont);\r\n        }else if(this.data.td == 1){\r\n            masker.appendChild(cont);\r\n        }else{\r\n            if(this.data.hasMask && this.data.tt){\r\n                this.matteElement.appendChild(cont);\r\n            }else{\r\n                this.appendNodeToParent(cont);\r\n            }\r\n        }\r\n    }*/\r\n    if(this.data.ef){\r\n        this.effectsManager = new SVGEffects(this);\r\n    }\r\n    this.checkParenting();\r\n};\r\n\r\n\r\nSVGBaseElement.prototype.setBlendMode = BaseElement.prototype.setBlendMode;\r\n\r\nSVGBaseElement.prototype.renderFrame = function(parentTransform){\r\n    if(this.data.ty === 3 || this.data.hd || !this.isVisible){\r\n        return false;\r\n    }\r\n\r\n    this.lastNum = this.currentFrameNum;\r\n    this.finalTransform.opMdf = this.firstFrame || this.finalTransform.op.mdf;\r\n    this.finalTransform.matMdf = this.firstFrame || this.finalTransform.mProp.mdf;\r\n    this.finalTransform.opacity = this.finalTransform.op.v;\r\n\r\n    var mat;\r\n    var finalMat = this.finalTransform.mat;\r\n\r\n    if(this.hierarchy){\r\n        var i = 0, len = this.hierarchy.length;\r\n        if(!this.finalTransform.matMdf) {\r\n            while(i < len) {\r\n                if(this.hierarchy[i].finalTransform.mProp.mdf) {\r\n                    this.finalTransform.matMdf = true;\r\n                    break;\r\n                }\r\n                i += 1;\r\n            }\r\n        }\r\n        \r\n        if(this.finalTransform.matMdf) {\r\n            mat = this.finalTransform.mProp.v.props;\r\n            finalMat.cloneFromProps(mat);\r\n            for(i=0;i<len;i+=1){\r\n                mat = this.hierarchy[i].finalTransform.mProp.v.props;\r\n                finalMat.transform(mat[0],mat[1],mat[2],mat[3],mat[4],mat[5],mat[6],mat[7],mat[8],mat[9],mat[10],mat[11],mat[12],mat[13],mat[14],mat[15]);\r\n            }\r\n        }\r\n        \r\n    }else if(this.isVisible){\r\n        finalMat = this.finalTransform.mProp.v;\r\n    }\r\n    if(this.finalTransform.matMdf && this.layerElement){\r\n        this.transformedElement.setAttribute('transform',finalMat.to2dCSS());\r\n    }\r\n    if(this.finalTransform.opMdf && this.layerElement){\r\n        if(this.finalTransform.op.v <= 0) {\r\n            if(!this.isTransparent && this.globalData.renderConfig.hideOnTransparent){\r\n                this.isTransparent = true;\r\n                this.hide();\r\n            }\r\n        } else if(this.hidden && this.isTransparent){\r\n            this.isTransparent = false;\r\n            this.show();\r\n        }\r\n        this.transformedElement.setAttribute('opacity',this.finalTransform.op.v);\r\n    }\r\n\r\n    if(this.data.hasMask){\r\n        this.maskManager.renderFrame(finalMat);\r\n    }\r\n    if(this.effectsManager){\r\n        this.effectsManager.renderFrame(this.firstFrame);\r\n    }\r\n    return this.isVisible;\r\n};\r\n\r\nSVGBaseElement.prototype.destroy = function(){\r\n    this.layerElement = null;\r\n    this.parentContainer = null;\r\n    if(this.matteElement) {\r\n        this.matteElement = null;\r\n    }\r\n    if(this.maskManager) {\r\n        this.maskManager.destroy();\r\n    }\r\n};\r\n\r\nSVGBaseElement.prototype.getBaseElement = function(){\r\n    return this.baseElement;\r\n};\r\nSVGBaseElement.prototype.addMasks = function(data){\r\n    this.maskManager = new MaskElement(data,this,this.globalData);\r\n};\r\n\r\nSVGBaseElement.prototype.setMatte = function(id){\r\n    if(!this.matteElement){\r\n        return;\r\n    }\r\n    this.matteElement.setAttribute(\"mask\", \"url(\" + locationHref + \"#\" + id + \")\");\r\n};\r\n\r\nSVGBaseElement.prototype.hide = function(){\r\n    if(!this.hidden){\r\n        this.layerElement.style.display = 'none';\r\n        this.hidden = true;\r\n    }\r\n};\r\n\r\nSVGBaseElement.prototype.show = function(){\r\n    if(this.isVisible && !this.isTransparent){\r\n        this.hidden = false;\r\n        this.layerElement.style.display = 'block';\r\n    }\r\n};\r\n\nfunction IShapeElement(data,parentContainer,globalData,comp, placeholder){\r\n    this.shapes = [];\r\n    this.shapesData = data.shapes;\r\n    this.stylesList = [];\r\n    this.itemsData = [];\r\n    this.prevViewData = [];\r\n    this.shapeModifiers = [];\r\n    this.processedElements = [];\r\n    this._parent.constructor.call(this,data,parentContainer,globalData,comp, placeholder);\r\n}\r\ncreateElement(SVGBaseElement, IShapeElement);\r\n\r\nIShapeElement.prototype.identityMatrix = new Matrix();\r\n\r\nIShapeElement.prototype.lcEnum = {\r\n    '1': 'butt',\r\n    '2': 'round',\r\n    '3': 'square'\r\n}\r\n\r\nIShapeElement.prototype.ljEnum = {\r\n    '1': 'miter',\r\n    '2': 'round',\r\n    '3': 'butt'\r\n}\r\n\r\nIShapeElement.prototype.searchProcessedElement = function(elem){\r\n    var i = this.processedElements.length;\r\n    while(i){\r\n        i -= 1;\r\n        if(this.processedElements[i].elem === elem){\r\n            return this.processedElements[i].pos;\r\n        }\r\n    }\r\n    return 0;\r\n};\r\n\r\nIShapeElement.prototype.addProcessedElement = function(elem, pos){\r\n    var i = this.processedElements.length;\r\n    while(i){\r\n        i -= 1;\r\n        if(this.processedElements[i].elem === elem){\r\n            this.processedElements[i].pos = pos;\r\n            break;\r\n        }\r\n    }\r\n    if(i === 0){\r\n        this.processedElements.push({\r\n            elem: elem,\r\n            pos: pos\r\n        })\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.buildExpressionInterface = function(){};\r\n\r\nIShapeElement.prototype.createElements = function(){\r\n    //TODO check if I can use symbol so i can set its viewBox\r\n    this._parent.createElements.call(this);\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement,this.dynamicProperties, 0, [], true);\r\n    if(!this.data.hd || this.data.td){\r\n        styleUnselectableDiv(this.layerElement);\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.setGradientData = function(pathElement,arr,data){\r\n\r\n    var gradientId = 'gr_'+randomString(10);\r\n    var gfill;\r\n    if(arr.t === 1){\r\n        gfill = document.createElementNS(svgNS,'linearGradient');\r\n    } else {\r\n        gfill = document.createElementNS(svgNS,'radialGradient');\r\n    }\r\n    gfill.setAttribute('id',gradientId);\r\n    gfill.setAttribute('spreadMethod','pad');\r\n    gfill.setAttribute('gradientUnits','userSpaceOnUse');\r\n    var stops = [];\r\n    var stop, j, jLen;\r\n    jLen = arr.g.p*4;\r\n    for(j=0;j<jLen;j+=4){\r\n        stop = document.createElementNS(svgNS,'stop');\r\n        gfill.appendChild(stop);\r\n        stops.push(stop);\r\n    }\r\n    pathElement.setAttribute( arr.ty === 'gf' ? 'fill':'stroke','url(#'+gradientId+')');\r\n    this.globalData.defs.appendChild(gfill);\r\n    data.gf = gfill;\r\n    data.cst = stops;\r\n}\r\n\r\nIShapeElement.prototype.setGradientOpacity = function(arr, data, styleOb){\r\n    if((arr.g.k.k[0].s && arr.g.k.k[0].s.length > arr.g.p*4) || arr.g.k.k.length > arr.g.p*4){\r\n        var opFill;\r\n        var stop, j, jLen;\r\n        var mask = document.createElementNS(svgNS,\"mask\");\r\n        var maskElement = document.createElementNS(svgNS, 'path');\r\n        mask.appendChild(maskElement);\r\n        var opacityId = 'op_'+randomString(10);\r\n        var maskId = 'mk_'+randomString(10);\r\n        mask.setAttribute('id',maskId);\r\n        if(arr.t === 1){\r\n            opFill = document.createElementNS(svgNS,'linearGradient');\r\n        } else {\r\n            opFill = document.createElementNS(svgNS,'radialGradient');\r\n        }\r\n        opFill.setAttribute('id',opacityId);\r\n        opFill.setAttribute('spreadMethod','pad');\r\n        opFill.setAttribute('gradientUnits','userSpaceOnUse');\r\n        jLen = arr.g.k.k[0].s ? arr.g.k.k[0].s.length : arr.g.k.k.length;\r\n        var stops = [];\r\n        for(j=arr.g.p*4;j<jLen;j+=2){\r\n            stop = document.createElementNS(svgNS,'stop');\r\n            stop.setAttribute('stop-color','rgb(255,255,255)');\r\n            //stop.setAttribute('offset',Math.round(arr.y[j][0]*100)+'%');\r\n            //stop.setAttribute('style','stop-color:rgb(255,255,255);stop-opacity:'+arr.y[j][1]);\r\n            opFill.appendChild(stop);\r\n            stops.push(stop);\r\n        }\r\n        maskElement.setAttribute( arr.ty === 'gf' ? 'fill':'stroke','url(#'+opacityId+')');\r\n        this.globalData.defs.appendChild(opFill);\r\n        this.globalData.defs.appendChild(mask);\r\n        data.of = opFill;\r\n        data.ost = stops;\r\n        styleOb.msElem = maskElement;\r\n        return maskId;\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.createStyleElement = function(data, level, dynamicProperties){\r\n    var elementData = {\r\n    };\r\n    var styleOb = {\r\n        data: data,\r\n        type: data.ty,\r\n        d: '',\r\n        ld: '',\r\n        lvl: level,\r\n        mdf: false,\r\n        closed: false\r\n    };\r\n    var pathElement = document.createElementNS(svgNS, \"path\");\r\n    elementData.o = PropertyFactory.getProp(this,data.o,0,0.01,dynamicProperties);\r\n    if(data.ty == 'st' || data.ty == 'gs') {\r\n        pathElement.setAttribute('stroke-linecap', this.lcEnum[data.lc] || 'round');\r\n        ////pathElement.style.strokeLinecap = this.lcEnum[data.lc] || 'round';\r\n        pathElement.setAttribute('stroke-linejoin',this.ljEnum[data.lj] || 'round');\r\n        ////pathElement.style.strokeLinejoin = this.ljEnum[data.lj] || 'round';\r\n        pathElement.setAttribute('fill-opacity','0');\r\n        ////pathElement.style.fillOpacity = 0;\r\n        if(data.lj == 1) {\r\n            pathElement.setAttribute('stroke-miterlimit',data.ml);\r\n            ////pathElement.style.strokeMiterlimit = data.ml;\r\n        }\r\n\r\n        elementData.w = PropertyFactory.getProp(this,data.w,0,null,dynamicProperties);\r\n        if(data.d){\r\n            var d = PropertyFactory.getDashProp(this,data.d,'svg',dynamicProperties);\r\n            if(!d.k){\r\n                pathElement.setAttribute('stroke-dasharray', d.dasharray);\r\n                ////pathElement.style.strokeDasharray = d.dasharray;\r\n                pathElement.setAttribute('stroke-dashoffset', d.dashoffset);\r\n                ////pathElement.style.strokeDashoffset = d.dashoffset;\r\n            }\r\n            elementData.d = d;\r\n        }\r\n\r\n    }\r\n    if(data.ty == 'fl' || data.ty == 'st'){\r\n        elementData.c = PropertyFactory.getProp(this,data.c,1,255,dynamicProperties);\r\n    } else {\r\n        elementData.g = PropertyFactory.getGradientProp(this,data.g,dynamicProperties);\r\n        if(data.t == 2){\r\n            elementData.h = PropertyFactory.getProp(this,data.h,0,0.01,dynamicProperties);\r\n            elementData.a = PropertyFactory.getProp(this,data.a,0,degToRads,dynamicProperties);\r\n        }\r\n        elementData.s = PropertyFactory.getProp(this,data.s,1,null,dynamicProperties);\r\n        elementData.e = PropertyFactory.getProp(this,data.e,1,null,dynamicProperties);\r\n        this.setGradientData(pathElement,data,elementData, styleOb);\r\n        var maskId = this.setGradientOpacity(data,elementData, styleOb);\r\n        if(maskId){\r\n            pathElement.setAttribute('mask','url(#'+maskId+')');\r\n        }\r\n    }\r\n    elementData.elem = pathElement;\r\n    //container.appendChild(pathElement);\r\n    if(data.r === 2) {\r\n        pathElement.setAttribute('fill-rule', 'evenodd');\r\n    }\r\n\r\n    if(data.ln){\r\n        pathElement.setAttribute('id',data.ln);\r\n    }\r\n    if(data.cl){\r\n        pathElement.setAttribute('class',data.cl);\r\n    }\r\n    styleOb.pElem = pathElement;\r\n    this.stylesList.push(styleOb);\r\n    elementData.style = styleOb;\r\n    return elementData;\r\n}\r\n\r\nIShapeElement.prototype.createGroupElement = function(data) {\r\n    var elementData = {\r\n        it: [],\r\n        prevViewData: []\r\n    };\r\n    var g = document.createElementNS(svgNS,'g');\r\n    elementData.gr = g;\r\n    if(data.ln){\r\n        elementData.gr.setAttribute('id',data.ln);\r\n    }\r\n    return elementData;\r\n}\r\n\r\nIShapeElement.prototype.createTransformElement = function(data, dynamicProperties) {\r\n    var elementData = {\r\n        transform : {\r\n            op: PropertyFactory.getProp(this,data.o,0,0.01,dynamicProperties),\r\n            mProps: PropertyFactory.getProp(this,data,2,null,dynamicProperties)\r\n        },\r\n        elements: []\r\n    };\r\n    return elementData;\r\n}\r\n\r\nIShapeElement.prototype.createShapeElement = function(data, ownTransformers, level, dynamicProperties) {\r\n    var elementData = {\r\n        elements : [],\r\n        caches:[],\r\n        styles : [],\r\n        transformers: ownTransformers,\r\n        lStr: ''\r\n    };\r\n    var ty = 4;\r\n    if(data.ty == 'rc'){\r\n        ty = 5;\r\n    }else if(data.ty == 'el'){\r\n        ty = 6;\r\n    }else if(data.ty == 'sr'){\r\n        ty = 7;\r\n    }\r\n    elementData.sh = ShapePropertyFactory.getShapeProp(this,data,ty,dynamicProperties);\r\n    elementData.lvl = level;\r\n    this.shapes.push(elementData.sh);\r\n    this.addShapeToModifiers(elementData);\r\n    return elementData;\r\n}\r\n\r\nvar cont = 0;\r\n\r\nIShapeElement.prototype.setElementStyles = function(){\r\n    var j, jLen = this.stylesList.length;\r\n    var arr = [];\r\n    for(j=0;j<jLen;j+=1){\r\n        if(!this.stylesList[j].closed){\r\n            arr.push(this.stylesList[j]);\r\n        }\r\n    }\r\n    return arr;\r\n}\r\n\r\nIShapeElement.prototype.reloadShapes = function(){\r\n    this.firstFrame = true;\r\n    var i, len = this.itemsData.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.prevViewData[i] = this.itemsData[i];\r\n    }\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement,this.dynamicProperties, 0, [], true);\r\n    var i, len = this.dynamicProperties.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.dynamicProperties[i].getValue();\r\n    }\r\n    this.renderModifiers();\r\n}\r\n\r\nIShapeElement.prototype.searchShapes = function(arr,itemsData,prevViewData,container,dynamicProperties, level, transformers, render){\r\n    var ownTransformers = [].concat(transformers);\r\n    var i, len = arr.length - 1;\r\n    var j, jLen;\r\n    var ownStyles = [], ownModifiers = [], styleOb, currentTransform, modifier, processedPos;\r\n    for(i=len;i>=0;i-=1){\r\n        processedPos = this.searchProcessedElement(arr[i]);\r\n        if(!processedPos){\r\n            arr[i]._render = render;\r\n        } else {\r\n            itemsData[i] = prevViewData[processedPos - 1];\r\n        }\r\n        if(arr[i].ty == 'fl' || arr[i].ty == 'st' || arr[i].ty == 'gf' || arr[i].ty == 'gs'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createStyleElement(arr[i], level, dynamicProperties);\r\n            } else {\r\n                itemsData[i].style.closed = false;\r\n            }\r\n            if(arr[i]._render){\r\n                container.appendChild(itemsData[i].elem);\r\n            }\r\n            ownStyles.push(itemsData[i].style);\r\n        }else if(arr[i].ty == 'gr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createGroupElement(arr[i]);\r\n            } else {\r\n                jLen = itemsData[i].it.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    itemsData[i].prevViewData[j] = itemsData[i].it[j];\r\n                }\r\n            }\r\n            this.searchShapes(arr[i].it,itemsData[i].it,itemsData[i].prevViewData,itemsData[i].gr,dynamicProperties, level + 1, ownTransformers, render);\r\n            if(arr[i]._render){\r\n                container.appendChild(itemsData[i].gr);\r\n            }\r\n        }else if(arr[i].ty == 'tr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createTransformElement(arr[i], dynamicProperties);\r\n            }\r\n            currentTransform = itemsData[i].transform;\r\n            ownTransformers.push(currentTransform);\r\n        }else if(arr[i].ty == 'sh' || arr[i].ty == 'rc' || arr[i].ty == 'el' || arr[i].ty == 'sr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createShapeElement(arr[i], ownTransformers, level, dynamicProperties);\r\n            }\r\n            itemsData[i].elements = this.setElementStyles();\r\n\r\n        }else if(arr[i].ty == 'tm' || arr[i].ty == 'rd' || arr[i].ty == 'ms'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                modifier.init(this,arr[i],dynamicProperties);\r\n                itemsData[i] = modifier;\r\n                this.shapeModifiers.push(modifier);\r\n            } else {\r\n                modifier = itemsData[i];\r\n                modifier.closed = false;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        }else if(arr[i].ty == 'rp'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                itemsData[i] = modifier;\r\n                modifier.init(this,arr,i,itemsData,dynamicProperties);\r\n                this.shapeModifiers.push(modifier);\r\n                render = false;\r\n            }else{\r\n                modifier = itemsData[i];\r\n                modifier.closed = true;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        }\r\n        this.addProcessedElement(arr[i], i + 1);\r\n    }\r\n    len = ownStyles.length;\r\n    for(i=0;i<len;i+=1){\r\n        ownStyles[i].closed = true;\r\n    }\r\n    len = ownModifiers.length;\r\n    for(i=0;i<len;i+=1){\r\n        ownModifiers[i].closed = true;\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.addShapeToModifiers = function(data) {\r\n    var i, len = this.shapeModifiers.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.shapeModifiers[i].addShape(data);\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.renderModifiers = function() {\r\n    if(!this.shapeModifiers.length){\r\n        return;\r\n    }\r\n    var i, len = this.shapes.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.shapes[i].reset();\r\n    }\r\n\r\n\r\n    len = this.shapeModifiers.length;\r\n\r\n    for(i=len-1;i>=0;i-=1){\r\n        this.shapeModifiers[i].processShapes(this.firstFrame);\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.renderFrame = function(parentMatrix){\r\n    //this.reloadShapes();\r\n    var renderParent = this._parent.renderFrame.call(this,parentMatrix);\r\n    if(renderParent===false){\r\n        this.hide();\r\n        return;\r\n    }\r\n    if(this.hidden){\r\n        this.layerElement.style.display = 'block';\r\n        this.hidden = false;\r\n    }\r\n    this.renderModifiers();\r\n    var i, len = this.stylesList.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.stylesList[i].d = '';\r\n        this.stylesList[i].mdf = false;\r\n    }\r\n    this.renderShape(this.shapesData,this.itemsData, null);\r\n\r\n    for (i = 0; i < len; i += 1) {\r\n        if (this.stylesList[i].ld === '0') {\r\n            this.stylesList[i].ld = '1';\r\n            this.stylesList[i].pElem.style.display = 'block';\r\n            //this.stylesList[i].parent.appendChild(this.stylesList[i].pElem);\r\n        }\r\n        if (this.stylesList[i].mdf || this.firstFrame) {\r\n            this.stylesList[i].pElem.setAttribute('d', this.stylesList[i].d);\r\n            if(this.stylesList[i].msElem){\r\n                this.stylesList[i].msElem.setAttribute('d', this.stylesList[i].d);\r\n            }\r\n        }\r\n    }\r\n    if (this.firstFrame) {\r\n        this.firstFrame = false;\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.hide = function(){\r\n    if(!this.hidden){\r\n        this.layerElement.style.display = 'none';\r\n        var i, len = this.stylesList.length;\r\n        for(i=len-1;i>=0;i-=1){\r\n            if(this.stylesList[i].ld !== '0'){\r\n                this.stylesList[i].ld = '0';\r\n                this.stylesList[i].pElem.style.display = 'none';\r\n                if(this.stylesList[i].pElem.parentNode){\r\n                    this.stylesList[i].parent = this.stylesList[i].pElem.parentNode;\r\n                    //this.stylesList[i].pElem.parentNode.removeChild(this.stylesList[i].pElem);\r\n                }\r\n            }\r\n        }\r\n        this.hidden = true;\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.renderShape = function(items,data, container){\r\n    var i, len = items.length - 1;\r\n    var ty;\r\n    for(i=len;i>=0;i-=1){\r\n        ty = items[i].ty;\r\n        if(ty == 'tr'){\r\n            if(this.firstFrame || data[i].transform.op.mdf && container){\r\n                container.setAttribute('opacity',data[i].transform.op.v);\r\n            }\r\n            if(this.firstFrame || data[i].transform.mProps.mdf && container){\r\n                container.setAttribute('transform',data[i].transform.mProps.v.to2dCSS());\r\n            }\r\n        }else if(ty == 'sh' || ty == 'el' || ty == 'rc' || ty == 'sr'){\r\n            this.renderPath(items[i],data[i]);\r\n        }else if(ty == 'fl'){\r\n            this.renderFill(items[i],data[i]);\r\n        }else if(ty == 'gf'){\r\n            this.renderGradient(items[i],data[i]);\r\n        }else if(ty == 'gs'){\r\n            this.renderGradient(items[i],data[i]);\r\n            this.renderStroke(items[i],data[i]);\r\n        }else if(ty == 'st'){\r\n            this.renderStroke(items[i],data[i]);\r\n        }else if(ty == 'gr'){\r\n            this.renderShape(items[i].it,data[i].it, data[i].gr);\r\n        }else if(ty == 'tm'){\r\n            //\r\n        }\r\n    }\r\n\r\n};\r\n\r\nIShapeElement.prototype.buildShapeString = function(pathNodes, length, closed, mat) {\r\n    var i, shapeString = '';\r\n    for(i = 1; i < length; i += 1) {\r\n        if (i === 1) {\r\n            shapeString += \" M\" + mat.applyToPointStringified(pathNodes.v[0][0], pathNodes.v[0][1]);\r\n        }\r\n        shapeString += \" C\" + mat.applyToPointStringified(pathNodes.o[i - 1][0], pathNodes.o[i - 1][1]) + \" \" + mat.applyToPointStringified(pathNodes.i[i][0], pathNodes.i[i][1]) + \" \" + mat.applyToPointStringified(pathNodes.v[i][0], pathNodes.v[i][1]);\r\n    }\r\n    if (length === 1) {\r\n        shapeString += \" M\" + mat.applyToPointStringified(pathNodes.v[0][0], pathNodes.v[0][1]);\r\n    }\r\n    if (closed && length) {\r\n        shapeString += \" C\" + mat.applyToPointStringified(pathNodes.o[i - 1][0], pathNodes.o[i - 1][1]) + \" \" + mat.applyToPointStringified(pathNodes.i[0][0], pathNodes.i[0][1]) + \" \" + mat.applyToPointStringified(pathNodes.v[0][0], pathNodes.v[0][1]);\r\n        shapeString += 'z';\r\n    }\r\n    return shapeString;\r\n};\r\n\r\nIShapeElement.prototype.renderPath = function(pathData,itemData){\r\n    var len, i, j, jLen,pathStringTransformed,redraw,pathNodes,l, lLen = itemData.elements.length;\r\n    var lvl = itemData.lvl;\r\n    if(!pathData._render){\r\n        return;\r\n    }\r\n    for(l=0;l<lLen;l+=1){\r\n        if(itemData.elements[l].data._render){\r\n            redraw = itemData.sh.mdf || this.firstFrame;\r\n            pathStringTransformed = 'M0 0';\r\n            var paths = itemData.sh.paths;\r\n            jLen = paths._length;\r\n            if(itemData.elements[l].lvl < lvl){\r\n                var mat = this.mHelper.reset(), props;\r\n                var iterations = lvl - itemData.elements[l].lvl;\r\n                var k = itemData.transformers.length-1;\r\n                while(iterations > 0) {\r\n                    redraw = itemData.transformers[k].mProps.mdf || redraw;\r\n                    props = itemData.transformers[k].mProps.v.props;\r\n                    mat.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\r\n                    iterations --;\r\n                    k --;\r\n                }\r\n                if(redraw){\r\n                    for(j=0;j<jLen;j+=1){\r\n                        pathNodes = paths.shapes[j];\r\n                        if(pathNodes && pathNodes._length){\r\n                            pathStringTransformed += this.buildShapeString(pathNodes, pathNodes._length, pathNodes.c, mat);\r\n                        }\r\n                    }\r\n                    itemData.caches[l] = pathStringTransformed;\r\n                } else {\r\n                    pathStringTransformed = itemData.caches[l];\r\n                }\r\n            } else {\r\n                if(redraw){\r\n                    for(j=0;j<jLen;j+=1){\r\n                        pathNodes = paths.shapes[j];\r\n                        if(pathNodes && pathNodes._length){\r\n                            pathStringTransformed += this.buildShapeString(pathNodes, pathNodes._length, pathNodes.c, this.identityMatrix);\r\n                        }\r\n                    }\r\n                    itemData.caches[l] = pathStringTransformed;\r\n                } else {\r\n                    pathStringTransformed = itemData.caches[l];\r\n                }\r\n            }\r\n            itemData.elements[l].d += pathStringTransformed;\r\n            itemData.elements[l].mdf = redraw || itemData.elements[l].mdf;\r\n        } else {\r\n            itemData.elements[l].mdf = true;\r\n        }\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.renderFill = function(styleData,itemData){\r\n    var styleElem = itemData.style;\r\n\r\n    if(itemData.c.mdf || this.firstFrame){\r\n        styleElem.pElem.setAttribute('fill','rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')');\r\n        ////styleElem.pElem.style.fill = 'rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')';\r\n    }\r\n    if(itemData.o.mdf || this.firstFrame){\r\n        styleElem.pElem.setAttribute('fill-opacity',itemData.o.v);\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.renderGradient = function(styleData,itemData){\r\n    var gfill = itemData.gf;\r\n    var opFill = itemData.of;\r\n    var pt1 = itemData.s.v,pt2 = itemData.e.v;\r\n\r\n    if(itemData.o.mdf || this.firstFrame){\r\n        var attr = styleData.ty === 'gf' ? 'fill-opacity':'stroke-opacity';\r\n        itemData.elem.setAttribute(attr,itemData.o.v);\r\n    }\r\n    //clippedElement.setAttribute('transform','matrix(1,0,0,1,-100,0)');\r\n    if(itemData.s.mdf || this.firstFrame){\r\n        var attr1 = styleData.t === 1 ? 'x1':'cx';\r\n        var attr2 = attr1 === 'x1' ? 'y1':'cy';\r\n        gfill.setAttribute(attr1,pt1[0]);\r\n        gfill.setAttribute(attr2,pt1[1]);\r\n        if(opFill){\r\n            opFill.setAttribute(attr1,pt1[0]);\r\n            opFill.setAttribute(attr2,pt1[1]);\r\n        }\r\n    }\r\n    var stops, i, len, stop;\r\n    if(itemData.g.cmdf || this.firstFrame){\r\n        stops = itemData.cst;\r\n        var cValues = itemData.g.c;\r\n        len = stops.length;\r\n        for(i=0;i<len;i+=1){\r\n            stop = stops[i];\r\n            stop.setAttribute('offset',cValues[i*4]+'%');\r\n            stop.setAttribute('stop-color','rgb('+cValues[i*4+1]+','+cValues[i*4+2]+','+cValues[i*4+3]+')');\r\n        }\r\n    }\r\n    if(opFill && (itemData.g.omdf || this.firstFrame)){\r\n        stops = itemData.ost;\r\n        var oValues = itemData.g.o;\r\n        len = stops.length;\r\n        for(i=0;i<len;i+=1){\r\n            stop = stops[i];\r\n            stop.setAttribute('offset',oValues[i*2]+'%');\r\n            stop.setAttribute('stop-opacity',oValues[i*2+1]);\r\n        }\r\n    }\r\n    if(styleData.t === 1){\r\n        if(itemData.e.mdf  || this.firstFrame){\r\n            gfill.setAttribute('x2',pt2[0]);\r\n            gfill.setAttribute('y2',pt2[1]);\r\n            if(opFill){\r\n                opFill.setAttribute('x2',pt2[0]);\r\n                opFill.setAttribute('y2',pt2[1]);\r\n            }\r\n        }\r\n    } else {\r\n        var rad;\r\n        if(itemData.s.mdf || itemData.e.mdf || this.firstFrame){\r\n            rad = Math.sqrt(Math.pow(pt1[0]-pt2[0],2)+Math.pow(pt1[1]-pt2[1],2));\r\n            gfill.setAttribute('r',rad);\r\n            if(opFill){\r\n                opFill.setAttribute('r',rad);\r\n            }\r\n        }\r\n        if(itemData.e.mdf || itemData.h.mdf || itemData.a.mdf || this.firstFrame){\r\n            if(!rad){\r\n                rad = Math.sqrt(Math.pow(pt1[0]-pt2[0],2)+Math.pow(pt1[1]-pt2[1],2));\r\n            }\r\n            var ang = Math.atan2(pt2[1]-pt1[1], pt2[0]-pt1[0]);\r\n\r\n            var percent = itemData.h.v >= 1 ? 0.99 : itemData.h.v <= -1 ? -0.99:itemData.h.v;\r\n            var dist = rad*percent;\r\n            var x = Math.cos(ang + itemData.a.v)*dist + pt1[0];\r\n            var y = Math.sin(ang + itemData.a.v)*dist + pt1[1];\r\n            gfill.setAttribute('fx',x);\r\n            gfill.setAttribute('fy',y);\r\n            if(opFill){\r\n                opFill.setAttribute('fx',x);\r\n                opFill.setAttribute('fy',y);\r\n            }\r\n        }\r\n        //gfill.setAttribute('fy','200');\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.renderStroke = function(styleData,itemData){\r\n    var styleElem = itemData.style;\r\n    //TODO fix dashes\r\n    var d = itemData.d;\r\n    var dasharray,dashoffset;\r\n    if(d && d.k && (d.mdf || this.firstFrame)){\r\n        styleElem.pElem.setAttribute('stroke-dasharray', d.dasharray);\r\n        ////styleElem.pElem.style.strokeDasharray = d.dasharray;\r\n        styleElem.pElem.setAttribute('stroke-dashoffset', d.dashoffset);\r\n        ////styleElem.pElem.style.strokeDashoffset = d.dashoffset;\r\n    }\r\n    if(itemData.c && (itemData.c.mdf || this.firstFrame)){\r\n        styleElem.pElem.setAttribute('stroke','rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')');\r\n        ////styleElem.pElem.style.stroke = 'rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')';\r\n    }\r\n    if(itemData.o.mdf || this.firstFrame){\r\n        styleElem.pElem.setAttribute('stroke-opacity',itemData.o.v);\r\n    }\r\n    if(itemData.w.mdf || this.firstFrame){\r\n        styleElem.pElem.setAttribute('stroke-width',itemData.w.v);\r\n        if(styleElem.msElem){\r\n            styleElem.msElem.setAttribute('stroke-width',itemData.w.v);\r\n        }\r\n        ////styleElem.pElem.style.strokeWidth = itemData.w.v;\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.destroy = function(){\r\n    this._parent.destroy.call(this._parent);\r\n    this.shapeData = null;\r\n    this.itemsData = null;\r\n    this.parentContainer = null;\r\n    this.placeholder = null;\r\n};\r\n\nfunction ITextElement(data, animationItem,parentContainer,globalData){\r\n}\r\nITextElement.prototype.init = function(){\r\n    this.lettersChangedFlag = true;\r\n    this.dynamicProperties = this.dynamicProperties || [];\r\n    this.textAnimator = new TextAnimatorProperty(this.data.t, this.renderType, this);\r\n    this.textProperty = new TextProperty(this, this.data.t, this.dynamicProperties);\r\n    this._parent.init.call(this);\r\n    this.textAnimator.searchProperties(this.dynamicProperties);\r\n};\r\n\r\nITextElement.prototype.prepareFrame = function(num) {\r\n    this._parent.prepareFrame.call(this, num);\r\n    if(this.textProperty.mdf || this.textProperty.firstFrame) {\r\n        this.buildNewText();\r\n        this.textProperty.firstFrame = false;\r\n    }\r\n}\r\n\r\nITextElement.prototype.createPathShape = function(matrixHelper, shapes) {\r\n    var j,jLen = shapes.length;\r\n    var k, kLen, pathNodes;\r\n    var shapeStr = '';\r\n    for(j=0;j<jLen;j+=1){\r\n        pathNodes = shapes[j].ks.k;\r\n        shapeStr += this.buildShapeString(pathNodes, pathNodes.i.length, true, matrixHelper);\r\n    }\r\n    return shapeStr;\r\n};\r\n\r\nITextElement.prototype.updateDocumentData = function(newData, index) {\r\n    this.textProperty.updateDocumentData(newData, index);\r\n}\r\n\r\nITextElement.prototype.applyTextPropertiesToMatrix = function(documentData, matrixHelper, lineNumber, xPos, yPos) {\r\n    if(documentData.ps){\r\n        matrixHelper.translate(documentData.ps[0],documentData.ps[1] + documentData.ascent,0);\r\n    }\r\n    matrixHelper.translate(0,-documentData.ls,0);\r\n    switch(documentData.j){\r\n        case 1:\r\n            matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]),0,0);\r\n            break;\r\n        case 2:\r\n            matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber] )/2,0,0);\r\n            break;\r\n    }\r\n    matrixHelper.translate(xPos, yPos, 0);\r\n}\r\n\r\nITextElement.prototype.buildColor = function(colorData) {\r\n    return 'rgb(' + Math.round(colorData[0]*255) + ',' + Math.round(colorData[1]*255) + ',' + Math.round(colorData[2]*255) + ')';\r\n}\r\n\r\nITextElement.prototype.buildShapeString = IShapeElement.prototype.buildShapeString;\r\n\r\nITextElement.prototype.emptyProp = new LetterProps();\r\n\r\nITextElement.prototype.destroy = function(){\r\n    this._parent.destroy.call(this._parent);\r\n};\nfunction SVGTextElement(data,parentContainer,globalData,comp, placeholder){\r\n    this.textSpans = [];\r\n    this.renderType = 'svg';\r\n    this._parent.constructor.call(this,data,parentContainer,globalData,comp, placeholder);\r\n}\r\ncreateElement(SVGBaseElement, SVGTextElement);\r\n\r\nextendPrototype(ITextElement, SVGTextElement);\r\n\r\nSVGTextElement.prototype.createElements = function(){\r\n\r\n    this._parent.createElements.call(this);\r\n\r\n\r\n    if(this.data.ln){\r\n        this.layerElement.setAttribute('id',this.data.ln);\r\n    }\r\n    if(this.data.cl){\r\n        this.layerElement.setAttribute('class',this.data.cl);\r\n    }\r\n    if (this.data.singleShape && !this.globalData.fontManager.chars) {\r\n        this.textContainer = document.createElementNS(svgNS,'text');\r\n    }\r\n};\r\n\r\nSVGTextElement.prototype.buildNewText = function(){\r\n    var i, len;\r\n\r\n    var documentData = this.textProperty.currentData;\r\n    this.renderedLetters = Array.apply(null,{length:documentData ? documentData.l.length : 0});\r\n    if(documentData.fc) {\r\n        this.layerElement.setAttribute('fill', this.buildColor(documentData.fc));\r\n    }else{\r\n        this.layerElement.setAttribute('fill', 'rgba(0,0,0,0)');\r\n    }\r\n    if(documentData.sc){\r\n        this.layerElement.setAttribute('stroke', this.buildColor(documentData.sc));\r\n        this.layerElement.setAttribute('stroke-width', documentData.sw);\r\n    }\r\n    this.layerElement.setAttribute('font-size', documentData.s);\r\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\r\n    if(fontData.fClass){\r\n        this.layerElement.setAttribute('class',fontData.fClass);\r\n    } else {\r\n        this.layerElement.setAttribute('font-family', fontData.fFamily);\r\n        var fWeight = documentData.fWeight, fStyle = documentData.fStyle;\r\n        this.layerElement.setAttribute('font-style', fStyle);\r\n        this.layerElement.setAttribute('font-weight', fWeight);\r\n    }\r\n\r\n    var letters = documentData.l || [];\r\n    var usesGlyphs = this.globalData.fontManager.chars;\r\n    len = letters.length;\r\n    if(!len){\r\n        return;\r\n    }\r\n    var tSpan;\r\n    var matrixHelper = this.mHelper;\r\n    var shapes, shapeStr = '', singleShape = this.data.singleShape;\r\n    var xPos = 0, yPos = 0, firstLine = true;\r\n    var trackingOffset = documentData.tr/1000*documentData.s;\r\n    if(singleShape && !usesGlyphs) {\r\n        var tElement = this.textContainer;\r\n        var justify = '';\r\n        switch(documentData.j) {\r\n            case 1:\r\n                justify = 'end';\r\n                break;\r\n            case 2:\r\n                justify = 'middle';\r\n                break;\r\n            case 2:\r\n                justify = 'start';\r\n                break;\r\n        }\r\n        tElement.setAttribute('text-anchor',justify);\r\n        tElement.setAttribute('letter-spacing',trackingOffset);\r\n        var textContent = documentData.t.split(String.fromCharCode(13));\r\n        len = textContent.length;\r\n        var yPos = documentData.ps ? documentData.ps[1] + documentData.ascent : 0;\r\n        for ( i = 0; i < len; i += 1) {\r\n            tSpan = this.textSpans[i] || document.createElementNS(svgNS,'tspan');\r\n            tSpan.textContent = textContent[i];\r\n            tSpan.setAttribute('x', 0);\r\n            tSpan.setAttribute('y', yPos);\r\n            tSpan.style.display = 'inherit';\r\n            tElement.appendChild(tSpan);\r\n            this.textSpans[i] = tSpan;\r\n            yPos += documentData.lh;\r\n        }\r\n        \r\n        this.layerElement.appendChild(tElement);\r\n    } else {\r\n        var cachedSpansLength = this.textSpans.length;\r\n        var shapeData, charData;\r\n        for (i = 0; i < len; i += 1) {\r\n            if(!usesGlyphs || !singleShape || i === 0){\r\n                tSpan = cachedSpansLength > i ? this.textSpans[i] : document.createElementNS(svgNS,usesGlyphs?'path':'text');\r\n                if (cachedSpansLength <= i) {\r\n                    tSpan.setAttribute('stroke-linecap', 'butt');\r\n                    tSpan.setAttribute('stroke-linejoin','round');\r\n                    tSpan.setAttribute('stroke-miterlimit','4');\r\n                    this.textSpans[i] = tSpan;\r\n                    this.layerElement.appendChild(tSpan);\r\n                }\r\n                tSpan.style.display = 'inherit';\r\n            }\r\n            \r\n            matrixHelper.reset();\r\n            if(usesGlyphs) {\r\n                matrixHelper.scale(documentData.s / 100, documentData.s / 100);\r\n                if (singleShape) {\r\n                    if(letters[i].n) {\r\n                        xPos = -trackingOffset;\r\n                        yPos += documentData.yOffset;\r\n                        yPos += firstLine ? 1 : 0;\r\n                        firstLine = false;\r\n                    }\r\n                    this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\r\n                    xPos += letters[i].l || 0;\r\n                    //xPos += letters[i].val === ' ' ? 0 : trackingOffset;\r\n                    xPos += trackingOffset;\r\n                }\r\n                charData = this.globalData.fontManager.getCharData(documentData.t.charAt(i), fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\r\n                shapeData = charData && charData.data || {};\r\n                shapes = shapeData.shapes ? shapeData.shapes[0].it : [];\r\n                if(!singleShape){\r\n                    tSpan.setAttribute('d',this.createPathShape(matrixHelper,shapes));\r\n                } else {\r\n                    shapeStr += this.createPathShape(matrixHelper,shapes);\r\n                }\r\n            } else {\r\n                tSpan.textContent = letters[i].val;\r\n                tSpan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\",\"preserve\");\r\n            }\r\n            //\r\n        }\r\n        if (singleShape) {\r\n            tSpan.setAttribute('d',shapeStr);\r\n        }\r\n    }\r\n    while (i < this.textSpans.length){\r\n        this.textSpans[i].style.display = 'none';\r\n        i += 1;\r\n    }\r\n    \r\n    this._sizeChanged = true;\r\n}\r\n\r\nSVGTextElement.prototype.sourceRectAtTime = function(time){\r\n    this.prepareFrame(this.comp.renderedFrame - this.data.st);\r\n    this.renderLetters();\r\n    if(this._sizeChanged){\r\n        this._sizeChanged = false;\r\n        var textBox = this.layerElement.getBBox();\r\n        this.bbox = {\r\n            top: textBox.y,\r\n            left: textBox.x,\r\n            width: textBox.width,\r\n            height: textBox.height\r\n        }\r\n    }\r\n    return this.bbox;\r\n}\r\n\r\nSVGTextElement.prototype.renderLetters = function(){\r\n\r\n    if(!this.data.singleShape){\r\n        this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\r\n        if(this.lettersChangedFlag || this.textAnimator.lettersChangedFlag){\r\n            this._sizeChanged = true;\r\n            var  i,len;\r\n            var renderedLetters = this.textAnimator.renderedLetters;\r\n\r\n            var letters = this.textProperty.currentData.l;\r\n\r\n            len = letters.length;\r\n            var renderedLetter, textSpan;\r\n            for(i=0;i<len;i+=1){\r\n                if(letters[i].n){\r\n                    continue;\r\n                }\r\n                renderedLetter = renderedLetters[i];\r\n                textSpan = this.textSpans[i];\r\n                if(renderedLetter.mdf.m) {\r\n                    textSpan.setAttribute('transform',renderedLetter.m);\r\n                }\r\n                if(renderedLetter.mdf.o) {\r\n                    textSpan.setAttribute('opacity',renderedLetter.o);\r\n                }\r\n                if(renderedLetter.mdf.sw){\r\n                    textSpan.setAttribute('stroke-width',renderedLetter.sw);\r\n                }\r\n                if(renderedLetter.mdf.sc){\r\n                    textSpan.setAttribute('stroke',renderedLetter.sc);\r\n                }\r\n                if(renderedLetter.mdf.fc){\r\n                    textSpan.setAttribute('fill',renderedLetter.fc);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nSVGTextElement.prototype.renderFrame = function(parentMatrix){\r\n\r\n    var renderParent = this._parent.renderFrame.call(this,parentMatrix);\r\n    if(renderParent===false){\r\n        this.hide();\r\n        return;\r\n    }\r\n    if(this.hidden){\r\n        this.show();\r\n    }\r\n    if(this.firstFrame) {\r\n        this.firstFrame = false;\r\n    }\r\n    this.renderLetters();\r\n}\nfunction SVGTintFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = document.createElementNS(svgNS,'feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','linearRGB');\r\n    feColorMatrix.setAttribute('values','0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f1');\r\n    filter.appendChild(feColorMatrix);\r\n    feColorMatrix = document.createElementNS(svgNS,'feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n    feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f2');\r\n    filter.appendChild(feColorMatrix);\r\n    this.matrixFilter = feColorMatrix;\r\n    if(filterManager.effectElements[2].p.v !== 100 || filterManager.effectElements[2].p.k){\r\n        var feMerge = document.createElementNS(svgNS,'feMerge');\r\n        filter.appendChild(feMerge);\r\n        var feMergeNode;\r\n        feMergeNode = document.createElementNS(svgNS,'feMergeNode');\r\n        feMergeNode.setAttribute('in','SourceGraphic');\r\n        feMerge.appendChild(feMergeNode);\r\n        feMergeNode = document.createElementNS(svgNS,'feMergeNode');\r\n        feMergeNode.setAttribute('in','f2');\r\n        feMerge.appendChild(feMergeNode);\r\n    }\r\n}\r\n\r\nSVGTintFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager.mdf){\r\n        var colorBlack = this.filterManager.effectElements[0].p.v;\r\n        var colorWhite = this.filterManager.effectElements[1].p.v;\r\n        var opacity = this.filterManager.effectElements[2].p.v/100;\r\n        this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');\r\n    }\r\n};\nfunction SVGFillFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = document.createElementNS(svgNS,'feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n    feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\r\n    filter.appendChild(feColorMatrix);\r\n    this.matrixFilter = feColorMatrix;\r\n}\r\nSVGFillFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager.mdf){\r\n        var color = this.filterManager.effectElements[2].p.v;\r\n        var opacity = this.filterManager.effectElements[6].p.v;\r\n        this.matrixFilter.setAttribute('values','0 0 0 0 '+color[0]+' 0 0 0 0 '+color[1]+' 0 0 0 0 '+color[2]+' 0 0 0 '+opacity+' 0');\r\n    }\r\n};\nfunction SVGStrokeEffect(elem, filterManager){\r\n    this.initialized = false;\r\n    this.filterManager = filterManager;\r\n    this.elem = elem;\r\n    this.paths = [];\r\n}\r\n\r\nSVGStrokeEffect.prototype.initialize = function(){\r\n\r\n    var elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\r\n    var path,groupPath, i, len;\r\n    if(this.filterManager.effectElements[1].p.v === 1){\r\n        len = this.elem.maskManager.masksProperties.length;\r\n        i = 0;\r\n    } else {\r\n        i = this.filterManager.effectElements[0].p.v - 1;\r\n        len = i + 1;\r\n    }\r\n    groupPath = document.createElementNS(svgNS,'g'); \r\n    groupPath.setAttribute('fill','none');\r\n    groupPath.setAttribute('stroke-linecap','round');\r\n    groupPath.setAttribute('stroke-dashoffset',1);\r\n    for(i;i<len;i+=1){\r\n        path = document.createElementNS(svgNS,'path');\r\n        groupPath.appendChild(path);\r\n        this.paths.push({p:path,m:i});\r\n    }\r\n    if(this.filterManager.effectElements[10].p.v === 3){\r\n        var mask = document.createElementNS(svgNS,'mask');\r\n        var id = 'stms_' + randomString(10);\r\n        mask.setAttribute('id',id);\r\n        mask.setAttribute('mask-type','alpha');\r\n        mask.appendChild(groupPath);\r\n        this.elem.globalData.defs.appendChild(mask);\r\n        var g = document.createElementNS(svgNS,'g');\r\n        g.setAttribute('mask','url(' + locationHref + '#'+id+')');\r\n        if(elemChildren[0]){\r\n            g.appendChild(elemChildren[0]);\r\n        }\r\n        this.elem.layerElement.appendChild(g);\r\n        this.masker = mask;\r\n        groupPath.setAttribute('stroke','#fff');\r\n    } else if(this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2){\r\n        if(this.filterManager.effectElements[10].p.v === 2){\r\n            var elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\r\n            while(elemChildren.length){\r\n                this.elem.layerElement.removeChild(elemChildren[0]);\r\n            }\r\n        }\r\n        this.elem.layerElement.appendChild(groupPath);\r\n        this.elem.layerElement.removeAttribute('mask');\r\n        groupPath.setAttribute('stroke','#fff');\r\n    }\r\n    this.initialized = true;\r\n    this.pathMasker = groupPath;\r\n}\r\n\r\nSVGStrokeEffect.prototype.renderFrame = function(forceRender){\r\n    if(!this.initialized){\r\n        this.initialize();\r\n    }\r\n    var i, len = this.paths.length;\r\n    var mask, path;\r\n    for(i=0;i<len;i+=1){\r\n        mask = this.elem.maskManager.viewData[this.paths[i].m];\r\n        path = this.paths[i].p;\r\n        if(forceRender || this.filterManager.mdf || mask.prop.mdf){\r\n            path.setAttribute('d',mask.lastPath);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[9].p.mdf || this.filterManager.effectElements[4].p.mdf || this.filterManager.effectElements[7].p.mdf || this.filterManager.effectElements[8].p.mdf || mask.prop.mdf){\r\n            var dasharrayValue;\r\n            if(this.filterManager.effectElements[7].p.v !== 0 || this.filterManager.effectElements[8].p.v !== 100){\r\n                var s = Math.min(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)/100;\r\n                var e = Math.max(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)/100;\r\n                var l = path.getTotalLength();\r\n                dasharrayValue = '0 0 0 ' + l*s + ' ';\r\n                var lineLength = l*(e-s);\r\n                var segment = 1+this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100;\r\n                var units = Math.floor(lineLength/segment);\r\n                var j;\r\n                for(j=0;j<units;j+=1){\r\n                    dasharrayValue += '1 ' + this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100 + ' ';\r\n                }\r\n                dasharrayValue += '0 ' + l*10 + ' 0 0';\r\n            } else {\r\n                dasharrayValue = '1 ' + this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100;\r\n            }\r\n            path.setAttribute('stroke-dasharray',dasharrayValue);\r\n        }\r\n    }\r\n    if(forceRender || this.filterManager.effectElements[4].p.mdf){\r\n        this.pathMasker.setAttribute('stroke-width',this.filterManager.effectElements[4].p.v*2);\r\n    }\r\n    \r\n    if(forceRender || this.filterManager.effectElements[6].p.mdf){\r\n        this.pathMasker.setAttribute('opacity',this.filterManager.effectElements[6].p.v);\r\n    }\r\n    if(this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2){\r\n        if(forceRender || this.filterManager.effectElements[3].p.mdf){\r\n            var color = this.filterManager.effectElements[3].p.v;\r\n            this.pathMasker.setAttribute('stroke','rgb('+bm_floor(color[0]*255)+','+bm_floor(color[1]*255)+','+bm_floor(color[2]*255)+')');\r\n        }\r\n    }\r\n};\nfunction SVGTritoneFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = document.createElementNS(svgNS,'feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','linearRGB');\r\n    feColorMatrix.setAttribute('values','0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f1');\r\n    filter.appendChild(feColorMatrix);\r\n    var feComponentTransfer = document.createElementNS(svgNS,'feComponentTransfer');\r\n    feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n    filter.appendChild(feComponentTransfer);\r\n    this.matrixFilter = feComponentTransfer;\r\n    var feFuncR = document.createElementNS(svgNS,'feFuncR');\r\n    feFuncR.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncR);\r\n    this.feFuncR = feFuncR;\r\n    var feFuncG = document.createElementNS(svgNS,'feFuncG');\r\n    feFuncG.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncG);\r\n    this.feFuncG = feFuncG;\r\n    var feFuncB = document.createElementNS(svgNS,'feFuncB');\r\n    feFuncB.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncB);\r\n    this.feFuncB = feFuncB;\r\n}\r\n\r\nSVGTritoneFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager.mdf){\r\n        var color1 = this.filterManager.effectElements[0].p.v;\r\n        var color2 = this.filterManager.effectElements[1].p.v;\r\n        var color3 = this.filterManager.effectElements[2].p.v;\r\n        var tableR = color3[0] + ' ' + color2[0] + ' ' + color1[0]\r\n        var tableG = color3[1] + ' ' + color2[1] + ' ' + color1[1]\r\n        var tableB = color3[2] + ' ' + color2[2] + ' ' + color1[2]\r\n        this.feFuncR.setAttribute('tableValues', tableR);\r\n        this.feFuncG.setAttribute('tableValues', tableG);\r\n        this.feFuncB.setAttribute('tableValues', tableB);\r\n        //var opacity = this.filterManager.effectElements[2].p.v/100;\r\n        //this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');\r\n    }\r\n};\nfunction SVGProLevelsFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var effectElements = this.filterManager.effectElements;\r\n    var feComponentTransfer = document.createElementNS(svgNS,'feComponentTransfer');\r\n    var feFuncR, feFuncG, feFuncB;\r\n    \r\n    if(effectElements[9].p.k || effectElements[9].p.v !== 0 || effectElements[10].p.k || effectElements[10].p.v !== 1 || effectElements[11].p.k || effectElements[11].p.v !== 1 || effectElements[12].p.k || effectElements[12].p.v !== 0 || effectElements[13].p.k || effectElements[13].p.v !== 1){\r\n        this.feFuncR = this.createFeFunc('feFuncR', feComponentTransfer);\r\n    }\r\n    if(effectElements[16].p.k || effectElements[16].p.v !== 0 || effectElements[17].p.k || effectElements[17].p.v !== 1 || effectElements[18].p.k || effectElements[18].p.v !== 1 || effectElements[19].p.k || effectElements[19].p.v !== 0 || effectElements[20].p.k || effectElements[20].p.v !== 1){\r\n        this.feFuncG = this.createFeFunc('feFuncG', feComponentTransfer);\r\n    }\r\n    if(effectElements[23].p.k || effectElements[23].p.v !== 0 || effectElements[24].p.k || effectElements[24].p.v !== 1 || effectElements[25].p.k || effectElements[25].p.v !== 1 || effectElements[26].p.k || effectElements[26].p.v !== 0 || effectElements[27].p.k || effectElements[27].p.v !== 1){\r\n        this.feFuncB = this.createFeFunc('feFuncB', feComponentTransfer);\r\n    }\r\n    if(effectElements[30].p.k || effectElements[30].p.v !== 0 || effectElements[31].p.k || effectElements[31].p.v !== 1 || effectElements[32].p.k || effectElements[32].p.v !== 1 || effectElements[33].p.k || effectElements[33].p.v !== 0 || effectElements[34].p.k || effectElements[34].p.v !== 1){\r\n        this.feFuncA = this.createFeFunc('feFuncA', feComponentTransfer);\r\n    }\r\n    \r\n    if(this.feFuncR || this.feFuncG || this.feFuncB || this.feFuncA){\r\n        feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n        filter.appendChild(feComponentTransfer);\r\n        feComponentTransfer = document.createElementNS(svgNS,'feComponentTransfer');\r\n    }\r\n\r\n    if(effectElements[2].p.k || effectElements[2].p.v !== 0 || effectElements[3].p.k || effectElements[3].p.v !== 1 || effectElements[4].p.k || effectElements[4].p.v !== 1 || effectElements[5].p.k || effectElements[5].p.v !== 0 || effectElements[6].p.k || effectElements[6].p.v !== 1){\r\n\r\n        feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n        filter.appendChild(feComponentTransfer);\r\n        this.feFuncRComposed = this.createFeFunc('feFuncR', feComponentTransfer);\r\n        this.feFuncGComposed = this.createFeFunc('feFuncG', feComponentTransfer);\r\n        this.feFuncBComposed = this.createFeFunc('feFuncB', feComponentTransfer);\r\n    }\r\n}\r\n\r\nSVGProLevelsFilter.prototype.createFeFunc = function(type, feComponentTransfer) {\r\n    var feFunc = document.createElementNS(svgNS,type);\r\n    feFunc.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFunc);\r\n    return feFunc;\r\n};\r\n\r\nSVGProLevelsFilter.prototype.getTableValue = function(inputBlack, inputWhite, gamma, outputBlack, outputWhite) {\r\n    var cnt = 0;\r\n    var segments = 256;\r\n    var perc;\r\n    var min = Math.min(inputBlack, inputWhite);\r\n    var max = Math.max(inputBlack, inputWhite);\r\n    var table = Array.call(null,{length:segments});\r\n    var colorValue;\r\n    var pos = 0;\r\n    var outputDelta = outputWhite - outputBlack; \r\n    var inputDelta = inputWhite - inputBlack; \r\n    while(cnt <= 256) {\r\n        perc = cnt/256;\r\n        if(perc <= min){\r\n            colorValue = inputDelta < 0 ? outputWhite : outputBlack;\r\n        } else if(perc >= max){\r\n            colorValue = inputDelta < 0 ? outputBlack : outputWhite;\r\n        } else {\r\n            colorValue = (outputBlack + outputDelta * Math.pow((perc - inputBlack) / inputDelta, 1 / gamma));\r\n        }\r\n        table[pos++] = colorValue;\r\n        cnt += 256/(segments-1);\r\n    }\r\n    return table.join(' ');\r\n};\r\n\r\nSVGProLevelsFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager.mdf){\r\n        var val, cnt, perc, bezier;\r\n        var effectElements = this.filterManager.effectElements;\r\n        if(this.feFuncRComposed && (forceRender || effectElements[2].p.mdf || effectElements[3].p.mdf || effectElements[4].p.mdf || effectElements[5].p.mdf || effectElements[6].p.mdf)){\r\n            val = this.getTableValue(effectElements[2].p.v,effectElements[3].p.v,effectElements[4].p.v,effectElements[5].p.v,effectElements[6].p.v);\r\n            this.feFuncRComposed.setAttribute('tableValues',val);\r\n            this.feFuncGComposed.setAttribute('tableValues',val);\r\n            this.feFuncBComposed.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncR && (forceRender || effectElements[9].p.mdf || effectElements[10].p.mdf || effectElements[11].p.mdf || effectElements[12].p.mdf || effectElements[13].p.mdf)){\r\n            val = this.getTableValue(effectElements[9].p.v,effectElements[10].p.v,effectElements[11].p.v,effectElements[12].p.v,effectElements[13].p.v);\r\n            this.feFuncR.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncG && (forceRender || effectElements[16].p.mdf || effectElements[17].p.mdf || effectElements[18].p.mdf || effectElements[19].p.mdf || effectElements[20].p.mdf)){\r\n            val = this.getTableValue(effectElements[16].p.v,effectElements[17].p.v,effectElements[18].p.v,effectElements[19].p.v,effectElements[20].p.v);\r\n            this.feFuncG.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncB && (forceRender || effectElements[23].p.mdf || effectElements[24].p.mdf || effectElements[25].p.mdf || effectElements[26].p.mdf || effectElements[27].p.mdf)){\r\n            val = this.getTableValue(effectElements[23].p.v,effectElements[24].p.v,effectElements[25].p.v,effectElements[26].p.v,effectElements[27].p.v);\r\n            this.feFuncB.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncA && (forceRender || effectElements[30].p.mdf || effectElements[31].p.mdf || effectElements[32].p.mdf || effectElements[33].p.mdf || effectElements[34].p.mdf)){\r\n            val = this.getTableValue(effectElements[30].p.v,effectElements[31].p.v,effectElements[32].p.v,effectElements[33].p.v,effectElements[34].p.v);\r\n            this.feFuncA.setAttribute('tableValues',val);\r\n        }\r\n        \r\n    }\r\n};\nfunction SVGDropShadowEffect(filter, filterManager){\r\n    /*<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"3\"/> <!-- stdDeviation is how much to blur -->\r\n  <feOffset dx=\"2\" dy=\"2\" result=\"offsetblur\"/> <!-- how much to offset -->\r\n  <feMerge> \r\n    <feMergeNode/> <!-- this contains the offset blurred image -->\r\n    <feMergeNode in=\"SourceGraphic\"/> <!-- this contains the element that the filter is applied to -->\r\n  </feMerge>*/\r\n  /*<feFlood flood-color=\"#3D4574\" flood-opacity=\"0.5\" result=\"offsetColor\"/>*/\r\n    filter.setAttribute('x','-100%');\r\n    filter.setAttribute('y','-100%');\r\n    filter.setAttribute('width','400%');\r\n    filter.setAttribute('height','400%');\r\n    this.filterManager = filterManager;\r\n\r\n    var feGaussianBlur = document.createElementNS(svgNS,'feGaussianBlur');\r\n    feGaussianBlur.setAttribute('in','SourceAlpha');\r\n    feGaussianBlur.setAttribute('result','drop_shadow_1');\r\n    feGaussianBlur.setAttribute('stdDeviation','0');\r\n    this.feGaussianBlur = feGaussianBlur;\r\n    filter.appendChild(feGaussianBlur);\r\n\r\n    var feOffset = document.createElementNS(svgNS,'feOffset');\r\n    feOffset.setAttribute('dx','25');\r\n    feOffset.setAttribute('dy','0');\r\n    feOffset.setAttribute('in','drop_shadow_1');\r\n    feOffset.setAttribute('result','drop_shadow_2');\r\n    this.feOffset = feOffset;\r\n    filter.appendChild(feOffset);\r\n    var feFlood = document.createElementNS(svgNS,'feFlood');\r\n    feFlood.setAttribute('flood-color','#00ff00');\r\n    feFlood.setAttribute('flood-opacity','1');\r\n    feFlood.setAttribute('result','drop_shadow_3');\r\n    this.feFlood = feFlood;\r\n    filter.appendChild(feFlood);\r\n\r\n    var feComposite = document.createElementNS(svgNS,'feComposite');\r\n    feComposite.setAttribute('in','drop_shadow_3');\r\n    feComposite.setAttribute('in2','drop_shadow_2');\r\n    feComposite.setAttribute('operator','in');\r\n    feComposite.setAttribute('result','drop_shadow_4');\r\n    filter.appendChild(feComposite);\r\n\r\n\r\n    var feMerge = document.createElementNS(svgNS,'feMerge');\r\n    filter.appendChild(feMerge);\r\n    var feMergeNode;\r\n    feMergeNode = document.createElementNS(svgNS,'feMergeNode');\r\n    feMerge.appendChild(feMergeNode);\r\n    feMergeNode = document.createElementNS(svgNS,'feMergeNode');\r\n    feMergeNode.setAttribute('in','SourceGraphic');\r\n    this.feMergeNode = feMergeNode;\r\n    this.feMerge = feMerge;\r\n    this.originalNodeAdded = false;\r\n    feMerge.appendChild(feMergeNode);\r\n}\r\n\r\nSVGDropShadowEffect.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager.mdf){\r\n        if(forceRender || this.filterManager.effectElements[4].p.mdf){\r\n            this.feGaussianBlur.setAttribute('stdDeviation', this.filterManager.effectElements[4].p.v / 4);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[0].p.mdf){\r\n            var col = this.filterManager.effectElements[0].p.v;\r\n            this.feFlood.setAttribute('flood-color',rgbToHex(Math.round(col[0]*255),Math.round(col[1]*255),Math.round(col[2]*255)));\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[1].p.mdf){\r\n            this.feFlood.setAttribute('flood-opacity',this.filterManager.effectElements[1].p.v/255);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[2].p.mdf || this.filterManager.effectElements[3].p.mdf){\r\n            var distance = this.filterManager.effectElements[3].p.v\r\n            var angle = (this.filterManager.effectElements[2].p.v - 90) * degToRads\r\n            var x = distance * Math.cos(angle)\r\n            var y = distance * Math.sin(angle)\r\n            this.feOffset.setAttribute('dx', x);\r\n            this.feOffset.setAttribute('dy', y);\r\n        }\r\n        /*if(forceRender || this.filterManager.effectElements[5].p.mdf){\r\n            if(this.filterManager.effectElements[5].p.v === 1 && this.originalNodeAdded) {\r\n                this.feMerge.removeChild(this.feMergeNode);\r\n                this.originalNodeAdded = false;\r\n            } else if(this.filterManager.effectElements[5].p.v === 0 && !this.originalNodeAdded) {\r\n                this.feMerge.appendChild(this.feMergeNode);\r\n                this.originalNodeAdded = true;\r\n            }\r\n        }*/\r\n    }\r\n};\nfunction SVGMatte3Effect(filterElem, filterManager, elem){\r\n    this.initialized = false;\r\n    this.filterManager = filterManager;\r\n    this.filterElem = filterElem;\r\n    this.elem = elem;\r\n    elem.matteElement = document.createElementNS(svgNS,'g');\r\n    elem.matteElement.appendChild(elem.layerElement);\r\n    elem.matteElement.appendChild(elem.transformedElement);\r\n    elem.baseElement = elem.matteElement;\r\n}\r\n\r\nSVGMatte3Effect.prototype.setElementAsMask = function(elem, mask) {\r\n    var masker = document.createElementNS(svgNS,'mask');\r\n    masker.setAttribute('id',mask.layerId);\r\n    masker.setAttribute('mask-type','alpha');\r\n    masker.appendChild(mask.layerElement);\r\n    elem.setMatte(mask.layerId);\r\n    mask.data.hd = false;\r\n    var defs = elem.globalData.defs;\r\n    defs.appendChild(masker);\r\n}\r\n\r\nSVGMatte3Effect.prototype.initialize = function() {\r\n    var ind = this.filterManager.effectElements[0].p.v;\r\n    var i = 0, len = this.elem.comp.elements.length;\r\n    while(i < len) {\r\n    \tif(this.elem.comp.elements[i].data.ind === ind) {\r\n    \t\tthis.setElementAsMask(this.elem, this.elem.comp.elements[i]);\r\n    \t}\r\n    \ti += 1;\r\n    }\r\n    this.initialized = true;\r\n}\r\n\r\nSVGMatte3Effect.prototype.renderFrame = function() {\r\n\tif(!this.initialized) {\r\n\t\tthis.initialize();\r\n\t}\r\n}\nfunction SVGEffects(elem){\r\n    var i, len = elem.data.ef.length;\r\n    var filId = randomString(10);\r\n    var fil = filtersFactory.createFilter(filId);\r\n    var count = 0;\r\n    this.filters = [];\r\n    var filterManager;\r\n    for(i=0;i<len;i+=1){\r\n        if(elem.data.ef[i].ty === 20){\r\n            count += 1;\r\n            filterManager = new SVGTintFilter(fil, elem.effects.effectElements[i]);\r\n            this.filters.push(filterManager);\r\n        }else if(elem.data.ef[i].ty === 21){\r\n            count += 1;\r\n            filterManager = new SVGFillFilter(fil, elem.effects.effectElements[i]);\r\n            this.filters.push(filterManager);\r\n        }else if(elem.data.ef[i].ty === 22){\r\n            filterManager = new SVGStrokeEffect(elem, elem.effects.effectElements[i]);\r\n            this.filters.push(filterManager);\r\n        }else if(elem.data.ef[i].ty === 23){\r\n            count += 1;\r\n            filterManager = new SVGTritoneFilter(fil, elem.effects.effectElements[i]);\r\n            this.filters.push(filterManager);\r\n        }else if(elem.data.ef[i].ty === 24){\r\n            count += 1;\r\n            filterManager = new SVGProLevelsFilter(fil, elem.effects.effectElements[i]);\r\n            this.filters.push(filterManager);\r\n        }else if(elem.data.ef[i].ty === 25){\r\n            count += 1;\r\n            filterManager = new SVGDropShadowEffect(fil, elem.effects.effectElements[i]);\r\n            this.filters.push(filterManager);\r\n        }else if(elem.data.ef[i].ty === 28){\r\n            //count += 1;\r\n            filterManager = new SVGMatte3Effect(fil, elem.effects.effectElements[i], elem);\r\n            this.filters.push(filterManager);\r\n        }\r\n    }\r\n    if(count){\r\n        elem.globalData.defs.appendChild(fil);\r\n        elem.layerElement.setAttribute('filter','url(' + locationHref + '#'+filId+')');\r\n    }\r\n}\r\n\r\nSVGEffects.prototype.renderFrame = function(firstFrame){\r\n    var i, len = this.filters.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.filters[i].renderFrame(firstFrame);\r\n    }\r\n};\nfunction ICompElement(data,parentContainer,globalData,comp, placeholder){\r\n    this._parent.constructor.call(this,data,parentContainer,globalData,comp, placeholder);\r\n    this.layers = data.layers;\r\n    this.supports3d = true;\r\n    this.completeLayers = false;\r\n    this.pendingElements = [];\r\n    this.elements = this.layers ? Array.apply(null,{length:this.layers.length}) : [];\r\n    if(this.data.tm){\r\n        this.tm = PropertyFactory.getProp(this,this.data.tm,0,globalData.frameRate,this.dynamicProperties);\r\n    }\r\n    if(this.data.xt){\r\n        this.layerElement = document.createElementNS(svgNS,'g');\r\n        this.buildAllItems();\r\n    } else if(!globalData.progressiveLoad){\r\n        this.buildAllItems();\r\n    }\r\n}\r\ncreateElement(SVGBaseElement, ICompElement);\r\n\r\nICompElement.prototype.hide = function(){\r\n    if(!this.hidden){\r\n        this._parent.hide.call(this);\r\n        var i,len = this.elements.length;\r\n        for( i = 0; i < len; i+=1 ){\r\n            if(this.elements[i]){\r\n                this.elements[i].hide();\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.prepareFrame = function(num){\r\n    this._parent.prepareFrame.call(this,num);\r\n    if(this.isVisible===false && !this.data.xt){\r\n        return;\r\n    }\r\n\r\n    if(this.tm){\r\n        var timeRemapped = this.tm.v;\r\n        if(timeRemapped === this.data.op){\r\n            timeRemapped = this.data.op - 1;\r\n        }\r\n        this.renderedFrame = timeRemapped;\r\n    } else {\r\n        this.renderedFrame = num/this.data.sr;\r\n    }\r\n    var i,len = this.elements.length;\r\n    if(!this.completeLayers){\r\n        this.checkLayers(this.renderedFrame);\r\n    }\r\n    for( i = 0; i < len; i+=1 ){\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].prepareFrame(this.renderedFrame - this.layers[i].st);\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.renderFrame = function(parentMatrix){\r\n    var renderParent = this._parent.renderFrame.call(this,parentMatrix);\r\n    var i,len = this.layers.length;\r\n    if(renderParent===false){\r\n        this.hide();\r\n        return;\r\n    }\r\n\r\n    if(this.hidden) {\r\n        this.show();\r\n    }\r\n    for( i = 0; i < len; i+=1 ){\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].renderFrame();\r\n        }\r\n    }\r\n    if(this.firstFrame){\r\n        this.firstFrame = false;\r\n    }\r\n};\r\n\r\nICompElement.prototype.setElements = function(elems){\r\n    this.elements = elems;\r\n};\r\n\r\nICompElement.prototype.getElements = function(){\r\n    return this.elements;\r\n};\r\n\r\nICompElement.prototype.destroy = function(){\r\n    this._parent.destroy.call(this._parent);\r\n    var i,len = this.layers.length;\r\n    for( i = 0; i < len; i+=1 ){\r\n        if(this.elements[i]){\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.checkLayers = SVGRenderer.prototype.checkLayers;\r\nICompElement.prototype.buildItem = SVGRenderer.prototype.buildItem;\r\nICompElement.prototype.buildAllItems = SVGRenderer.prototype.buildAllItems;\r\nICompElement.prototype.buildElementParenting = SVGRenderer.prototype.buildElementParenting;\r\nICompElement.prototype.createItem = SVGRenderer.prototype.createItem;\r\nICompElement.prototype.createImage = SVGRenderer.prototype.createImage;\r\nICompElement.prototype.createComp = SVGRenderer.prototype.createComp;\r\nICompElement.prototype.createSolid = SVGRenderer.prototype.createSolid;\r\nICompElement.prototype.createShape = SVGRenderer.prototype.createShape;\r\nICompElement.prototype.createText = SVGRenderer.prototype.createText;\r\nICompElement.prototype.createBase = SVGRenderer.prototype.createBase;\r\nICompElement.prototype.appendElementInPos = SVGRenderer.prototype.appendElementInPos;\r\nICompElement.prototype.checkPendingElements = SVGRenderer.prototype.checkPendingElements;\r\nICompElement.prototype.addPendingElement = SVGRenderer.prototype.addPendingElement;\nfunction IImageElement(data,parentContainer,globalData,comp,placeholder){\r\n    this.assetData = globalData.getAssetData(data.refId);\r\n    this._parent.constructor.call(this,data,parentContainer,globalData,comp,placeholder);\r\n}\r\ncreateElement(SVGBaseElement, IImageElement);\r\n\r\nIImageElement.prototype.createElements = function(){\r\n\r\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\r\n\r\n    this._parent.createElements.call(this);\r\n\r\n    this.innerElem = document.createElementNS(svgNS,'image');\r\n    this.innerElem.setAttribute('width',this.assetData.w+\"px\");\r\n    this.innerElem.setAttribute('height',this.assetData.h+\"px\");\r\n    this.innerElem.setAttribute('preserveAspectRatio','xMidYMid slice');\r\n    this.innerElem.setAttributeNS('http://www.w3.org/1999/xlink','href',assetPath);\r\n    this.maskedElement = this.innerElem;\r\n    this.layerElement.appendChild(this.innerElem);\r\n    if(this.data.ln){\r\n        this.layerElement.setAttribute('id',this.data.ln);\r\n    }\r\n    if(this.data.cl){\r\n        this.layerElement.setAttribute('class',this.data.cl);\r\n    }\r\n\r\n};\r\n\r\nIImageElement.prototype.renderFrame = function(parentMatrix){\r\n    var renderParent = this._parent.renderFrame.call(this,parentMatrix);\r\n    if(renderParent===false){\r\n        this.hide();\r\n        return;\r\n    }\r\n    if(this.hidden){\r\n        this.show();\r\n    }\r\n    if(this.firstFrame){\r\n        this.firstFrame = false;\r\n    }\r\n};\r\n\r\nIImageElement.prototype.destroy = function(){\r\n    this._parent.destroy.call(this._parent);\r\n    this.innerElem =  null;\r\n};\nfunction ISolidElement(data,parentContainer,globalData,comp, placeholder){\r\n    this._parent.constructor.call(this,data,parentContainer,globalData,comp, placeholder);\r\n}\r\ncreateElement(SVGBaseElement, ISolidElement);\r\n\r\nISolidElement.prototype.createElements = function(){\r\n    this._parent.createElements.call(this);\r\n\r\n    var rect = document.createElementNS(svgNS,'rect');\r\n    ////rect.style.width = this.data.sw;\r\n    ////rect.style.height = this.data.sh;\r\n    ////rect.style.fill = this.data.sc;\r\n    rect.setAttribute('width',this.data.sw);\r\n    rect.setAttribute('height',this.data.sh);\r\n    rect.setAttribute('fill',this.data.sc);\r\n    this.layerElement.appendChild(rect);\r\n    this.innerElem = rect;\r\n    if(this.data.ln){\r\n        this.layerElement.setAttribute('id',this.data.ln);\r\n    }\r\n    if(this.data.cl){\r\n        this.layerElement.setAttribute('class',this.data.cl);\r\n    }\r\n};\r\n\r\nISolidElement.prototype.renderFrame = IImageElement.prototype.renderFrame;\r\nISolidElement.prototype.destroy = IImageElement.prototype.destroy;\r\n\nvar animationManager = (function(){\r\n    var moduleOb = {};\r\n    var registeredAnimations = [];\r\n    var initTime = 0;\r\n    var len = 0;\r\n    var idled = true;\r\n    var playingAnimationsNum = 0;\r\n\r\n    function removeElement(ev){\r\n        var i = 0;\r\n        var animItem = ev.target;\r\n        while(i<len) {\r\n            if (registeredAnimations[i].animation === animItem) {\r\n                registeredAnimations.splice(i, 1);\r\n                i -= 1;\r\n                len -= 1;\r\n                if(!animItem.isPaused){\r\n                    subtractPlayingCount();\r\n                }\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    function registerAnimation(element, animationData){\r\n        if(!element){\r\n            return null;\r\n        }\r\n        var i=0;\r\n        while(i<len){\r\n            if(registeredAnimations[i].elem == element && registeredAnimations[i].elem !== null ){\r\n                return registeredAnimations[i].animation;\r\n            }\r\n            i+=1;\r\n        }\r\n        var animItem = new AnimationItem();\r\n        setupAnimation(animItem, element);\r\n        animItem.setData(element, animationData);\r\n        return animItem;\r\n    }\r\n\r\n    function addPlayingCount(){\r\n        playingAnimationsNum += 1;\r\n        activate();\r\n    }\r\n\r\n    function subtractPlayingCount(){\r\n        playingAnimationsNum -= 1;\r\n        if(playingAnimationsNum === 0){\r\n            idled = true;\r\n        }\r\n    }\r\n\r\n    function setupAnimation(animItem, element){\r\n        animItem.addEventListener('destroy',removeElement);\r\n        animItem.addEventListener('_active',addPlayingCount);\r\n        animItem.addEventListener('_idle',subtractPlayingCount);\r\n        registeredAnimations.push({elem: element,animation:animItem});\r\n        len += 1;\r\n    }\r\n\r\n    function loadAnimation(params){\r\n        var animItem = new AnimationItem();\r\n        setupAnimation(animItem, null);\r\n        animItem.setParams(params);\r\n        return animItem;\r\n    }\r\n\r\n\r\n    function setSpeed(val,animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.setSpeed(val, animation);\r\n        }\r\n    }\r\n\r\n    function setDirection(val, animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.setDirection(val, animation);\r\n        }\r\n    }\r\n\r\n    function play(animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.play(animation);\r\n        }\r\n    }\r\n\r\n    function moveFrame (value, animation) {\r\n        initTime = Date.now();\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.moveFrame(value,animation);\r\n        }\r\n    }\r\n\r\n    function resume(nowTime) {\r\n\r\n        var elapsedTime = nowTime - initTime;\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.advanceTime(elapsedTime);\r\n        }\r\n        initTime = nowTime;\r\n        if(!idled) {\r\n            window.requestAnimationFrame(resume);\r\n        }\r\n    }\r\n\r\n    function first(nowTime){\r\n        initTime = nowTime;\r\n        window.requestAnimationFrame(resume);\r\n    }\r\n\r\n    function pause(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.pause(animation);\r\n        }\r\n    }\r\n\r\n    function goToAndStop(value,isFrame,animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.goToAndStop(value,isFrame,animation);\r\n        }\r\n    }\r\n\r\n    function stop(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.stop(animation);\r\n        }\r\n    }\r\n\r\n    function togglePause(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.togglePause(animation);\r\n        }\r\n    }\r\n\r\n    function destroy(animation) {\r\n        var i;\r\n        for(i=(len-1);i>=0;i-=1){\r\n            registeredAnimations[i].animation.destroy(animation);\r\n        }\r\n    }\r\n\r\n    function searchAnimations(animationData, standalone, renderer){\r\n        var animElements = document.getElementsByClassName('bodymovin');\r\n        var i, len = animElements.length;\r\n        for(i=0;i<len;i+=1){\r\n            if(renderer){\r\n                animElements[i].setAttribute('data-bm-type',renderer);\r\n            }\r\n            registerAnimation(animElements[i], animationData);\r\n        }\r\n        if(standalone && len === 0){\r\n            if(!renderer){\r\n                renderer = 'svg';\r\n            }\r\n            var body = document.getElementsByTagName('body')[0];\r\n            body.innerHTML = '';\r\n            var div = document.createElement('div');\r\n            div.style.width = '100%';\r\n            div.style.height = '100%';\r\n            div.setAttribute('data-bm-type',renderer);\r\n            body.appendChild(div);\r\n            registerAnimation(div, animationData);\r\n        }\r\n    }\r\n\r\n    function resize(){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.resize();\r\n        }\r\n    }\r\n\r\n    function start(){\r\n        window.requestAnimationFrame(first);\r\n    }\r\n\r\n    function activate(){\r\n        if(idled){\r\n            idled = false;\r\n            window.requestAnimationFrame(first);\r\n        }\r\n    }\r\n\r\n    //start();\r\n\r\n    setTimeout(start,0);\r\n\r\n    moduleOb.registerAnimation = registerAnimation;\r\n    moduleOb.loadAnimation = loadAnimation;\r\n    moduleOb.setSpeed = setSpeed;\r\n    moduleOb.setDirection = setDirection;\r\n    moduleOb.play = play;\r\n    moduleOb.moveFrame = moveFrame;\r\n    moduleOb.pause = pause;\r\n    moduleOb.stop = stop;\r\n    moduleOb.togglePause = togglePause;\r\n    moduleOb.searchAnimations = searchAnimations;\r\n    moduleOb.resize = resize;\r\n    moduleOb.start = start;\r\n    moduleOb.goToAndStop = goToAndStop;\r\n    moduleOb.destroy = destroy;\r\n    return moduleOb;\r\n}());\r\n\nvar AnimationItem = function () {\r\n    this._cbs = [];\r\n    this.name = '';\r\n    this.path = '';\r\n    this.isLoaded = false;\r\n    this.currentFrame = 0;\r\n    this.currentRawFrame = 0;\r\n    this.totalFrames = 0;\r\n    this.frameRate = 0;\r\n    this.frameMult = 0;\r\n    this.playSpeed = 1;\r\n    this.playDirection = 1;\r\n    this.pendingElements = 0;\r\n    this.playCount = 0;\r\n    this.prerenderFramesFlag = true;\r\n    this.animationData = {};\r\n    this.layers = [];\r\n    this.assets = [];\r\n    this.isPaused = true;\r\n    this.autoplay = false;\r\n    this.loop = true;\r\n    this.renderer = null;\r\n    this.animationID = randomString(10);\r\n    this.scaleMode = 'fit';\r\n    this.assetsPath = '';\r\n    this.timeCompleted = 0;\r\n    this.segmentPos = 0;\r\n    this.subframeEnabled = subframeEnabled;\r\n    this.segments = [];\r\n    this.pendingSegment = false;\r\n    this._idle = true;\r\n    this.projectInterface = ProjectInterface();\r\n};\r\n\r\nAnimationItem.prototype.setParams = function(params) {\r\n    var self = this;\r\n    if(params.context){\r\n        this.context = params.context;\r\n    }\r\n    if(params.wrapper || params.container){\r\n        this.wrapper = params.wrapper || params.container;\r\n    }\r\n    var animType = params.animType ? params.animType : params.renderer ? params.renderer : 'svg';\r\n    switch(animType){\r\n        case 'canvas':\r\n            this.renderer = new CanvasRenderer(this, params.rendererSettings);\r\n            break;\r\n        case 'svg':\r\n            this.renderer = new SVGRenderer(this, params.rendererSettings);\r\n            break;\r\n        case 'hybrid':\r\n        case 'html':\r\n        default:\r\n            this.renderer = new HybridRenderer(this, params.rendererSettings);\r\n            break;\r\n    }\r\n    this.renderer.setProjectInterface(this.projectInterface);\r\n    this.animType = animType;\r\n\r\n    if(params.loop === '' || params.loop === null){\r\n    }else if(params.loop === false){\r\n        this.loop = false;\r\n    }else if(params.loop === true){\r\n        this.loop = true;\r\n    }else{\r\n        this.loop = parseInt(params.loop);\r\n    }\r\n    this.autoplay = 'autoplay' in params ? params.autoplay : true;\r\n    this.name = params.name ? params.name :  '';\r\n    this.prerenderFramesFlag = 'prerender' in params ? params.prerender : true;\r\n    this.autoloadSegments = params.hasOwnProperty('autoloadSegments') ? params.autoloadSegments :  true;\r\n    if(params.animationData){\r\n        self.configAnimation(params.animationData);\r\n    }else if(params.path){\r\n        if(params.path.substr(-4) != 'json'){\r\n            if (params.path.substr(-1, 1) != '/') {\r\n                params.path += '/';\r\n            }\r\n            params.path += 'data.json';\r\n        }\r\n\r\n        var xhr = new XMLHttpRequest();\r\n        if(params.path.lastIndexOf('\\\\') != -1){\r\n            this.path = params.path.substr(0,params.path.lastIndexOf('\\\\')+1);\r\n        }else{\r\n            this.path = params.path.substr(0,params.path.lastIndexOf('/')+1);\r\n        }\r\n        this.assetsPath = params.assetsPath;\r\n        this.fileName = params.path.substr(params.path.lastIndexOf('/')+1);\r\n        this.fileName = this.fileName.substr(0,this.fileName.lastIndexOf('.json'));\r\n        xhr.open('GET', params.path, true);\r\n        xhr.send();\r\n        xhr.onreadystatechange = function () {\r\n            if (xhr.readyState == 4) {\r\n                if(xhr.status == 200){\r\n                    self.configAnimation(JSON.parse(xhr.responseText));\r\n                }else{\r\n                    try{\r\n                        var response = JSON.parse(xhr.responseText);\r\n                        self.configAnimation(response);\r\n                    }catch(err){\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.setData = function (wrapper, animationData) {\r\n    var params = {\r\n        wrapper: wrapper,\r\n        animationData: animationData ? (typeof animationData  === \"object\") ? animationData : JSON.parse(animationData) : null\r\n    };\r\n    var wrapperAttributes = wrapper.attributes;\r\n\r\n    params.path = wrapperAttributes.getNamedItem('data-animation-path') ? wrapperAttributes.getNamedItem('data-animation-path').value : wrapperAttributes.getNamedItem('data-bm-path') ? wrapperAttributes.getNamedItem('data-bm-path').value :  wrapperAttributes.getNamedItem('bm-path') ? wrapperAttributes.getNamedItem('bm-path').value : '';\r\n    params.animType = wrapperAttributes.getNamedItem('data-anim-type') ? wrapperAttributes.getNamedItem('data-anim-type').value : wrapperAttributes.getNamedItem('data-bm-type') ? wrapperAttributes.getNamedItem('data-bm-type').value : wrapperAttributes.getNamedItem('bm-type') ? wrapperAttributes.getNamedItem('bm-type').value :  wrapperAttributes.getNamedItem('data-bm-renderer') ? wrapperAttributes.getNamedItem('data-bm-renderer').value : wrapperAttributes.getNamedItem('bm-renderer') ? wrapperAttributes.getNamedItem('bm-renderer').value : 'canvas';\r\n\r\n    var loop = wrapperAttributes.getNamedItem('data-anim-loop') ? wrapperAttributes.getNamedItem('data-anim-loop').value :  wrapperAttributes.getNamedItem('data-bm-loop') ? wrapperAttributes.getNamedItem('data-bm-loop').value :  wrapperAttributes.getNamedItem('bm-loop') ? wrapperAttributes.getNamedItem('bm-loop').value : '';\r\n    if(loop === ''){\r\n    }else if(loop === 'false'){\r\n        params.loop = false;\r\n    }else if(loop === 'true'){\r\n        params.loop = true;\r\n    }else{\r\n        params.loop = parseInt(loop);\r\n    }\r\n    var autoplay = wrapperAttributes.getNamedItem('data-anim-autoplay') ? wrapperAttributes.getNamedItem('data-anim-autoplay').value :  wrapperAttributes.getNamedItem('data-bm-autoplay') ? wrapperAttributes.getNamedItem('data-bm-autoplay').value :  wrapperAttributes.getNamedItem('bm-autoplay') ? wrapperAttributes.getNamedItem('bm-autoplay').value : true;\r\n    params.autoplay = autoplay !== \"false\";\r\n\r\n    params.name = wrapperAttributes.getNamedItem('data-name') ? wrapperAttributes.getNamedItem('data-name').value :  wrapperAttributes.getNamedItem('data-bm-name') ? wrapperAttributes.getNamedItem('data-bm-name').value : wrapperAttributes.getNamedItem('bm-name') ? wrapperAttributes.getNamedItem('bm-name').value :  '';\r\n    var prerender = wrapperAttributes.getNamedItem('data-anim-prerender') ? wrapperAttributes.getNamedItem('data-anim-prerender').value :  wrapperAttributes.getNamedItem('data-bm-prerender') ? wrapperAttributes.getNamedItem('data-bm-prerender').value :  wrapperAttributes.getNamedItem('bm-prerender') ? wrapperAttributes.getNamedItem('bm-prerender').value : '';\r\n\r\n    if(prerender === 'false'){\r\n        params.prerender = false;\r\n    }\r\n    this.setParams(params);\r\n};\r\n\r\nAnimationItem.prototype.includeLayers = function(data) {\r\n    if(data.op > this.animationData.op){\r\n        this.animationData.op = data.op;\r\n        this.totalFrames = Math.floor(data.op - this.animationData.ip);\r\n        this.animationData.tf = this.totalFrames;\r\n    }\r\n    var layers = this.animationData.layers;\r\n    var i, len = layers.length;\r\n    var newLayers = data.layers;\r\n    var j, jLen = newLayers.length;\r\n    for(j=0;j<jLen;j+=1){\r\n        i = 0;\r\n        while(i<len){\r\n            if(layers[i].id == newLayers[j].id){\r\n                layers[i] = newLayers[j];\r\n                break;\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n    if(data.chars || data.fonts){\r\n        this.renderer.globalData.fontManager.addChars(data.chars);\r\n        this.renderer.globalData.fontManager.addFonts(data.fonts, this.renderer.globalData.defs);\r\n    }\r\n    if(data.assets){\r\n        len = data.assets.length;\r\n        for(i = 0; i < len; i += 1){\r\n            this.animationData.assets.push(data.assets[i]);\r\n        }\r\n    }\r\n    //this.totalFrames = 50;\r\n    //this.animationData.tf = 50;\r\n    this.animationData.__complete = false;\r\n    dataManager.completeData(this.animationData,this.renderer.globalData.fontManager);\r\n    this.renderer.includeLayers(data.layers);\r\n    if(expressionsPlugin){\r\n        expressionsPlugin.initExpressions(this);\r\n    }\r\n    this.renderer.renderFrame(null);\r\n    this.loadNextSegment();\r\n};\r\n\r\nAnimationItem.prototype.loadNextSegment = function() {\r\n    var segments = this.animationData.segments;\r\n    if(!segments || segments.length === 0 || !this.autoloadSegments){\r\n        this.trigger('data_ready');\r\n        this.timeCompleted = this.animationData.tf;\r\n        return;\r\n    }\r\n    var segment = segments.shift();\r\n    this.timeCompleted = segment.time * this.frameRate;\r\n    var xhr = new XMLHttpRequest();\r\n    var self = this;\r\n    var segmentPath = this.path+this.fileName+'_' + this.segmentPos + '.json';\r\n    this.segmentPos += 1;\r\n    xhr.open('GET', segmentPath, true);\r\n    xhr.send();\r\n    xhr.onreadystatechange = function () {\r\n        if (xhr.readyState == 4) {\r\n            if(xhr.status == 200){\r\n                self.includeLayers(JSON.parse(xhr.responseText));\r\n            }else{\r\n                try{\r\n                    var response = JSON.parse(xhr.responseText);\r\n                    self.includeLayers(response);\r\n                }catch(err){\r\n                }\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\nAnimationItem.prototype.loadSegments = function() {\r\n    var segments = this.animationData.segments;\r\n    if(!segments) {\r\n        this.timeCompleted = this.animationData.tf;\r\n    }\r\n    this.loadNextSegment();\r\n};\r\n\r\nAnimationItem.prototype.configAnimation = function (animData) {\r\n    var _this = this;\r\n    if(this.renderer && this.renderer.destroyed){\r\n        return;\r\n    }\r\n    //console.log(JSON.parse(JSON.stringify(animData)));\r\n    //animData.w = Math.round(animData.w/blitter);\r\n    //animData.h = Math.round(animData.h/blitter);\r\n    this.animationData = animData;\r\n    this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip);\r\n    this.animationData.tf = this.totalFrames;\r\n    this.renderer.configAnimation(animData);\r\n    if(!animData.assets){\r\n        animData.assets = [];\r\n    }\r\n    if(animData.comps) {\r\n        animData.assets = animData.assets.concat(animData.comps);\r\n        animData.comps = null;\r\n    }\r\n    this.renderer.searchExtraCompositions(animData.assets);\r\n\r\n    this.layers = this.animationData.layers;\r\n    this.assets = this.animationData.assets;\r\n    this.frameRate = this.animationData.fr;\r\n    this.firstFrame = Math.round(this.animationData.ip);\r\n    this.frameMult = this.animationData.fr / 1000;\r\n    this.trigger('config_ready');\r\n    this.imagePreloader = new ImagePreloader();\r\n    this.imagePreloader.setAssetsPath(this.assetsPath);\r\n    this.imagePreloader.setPath(this.path);\r\n    this.imagePreloader.loadAssets(animData.assets, function(err) {\r\n        if(!err) {\r\n            _this.trigger('loaded_images');\r\n        }\r\n    });\r\n    this.loadSegments();\r\n    this.updaFrameModifier();\r\n    if(this.renderer.globalData.fontManager){\r\n        this.waitForFontsLoaded();\r\n    }else{\r\n        dataManager.completeData(this.animationData,this.renderer.globalData.fontManager);\r\n        this.checkLoaded();\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.waitForFontsLoaded = (function(){\r\n    function checkFontsLoaded(){\r\n        if(this.renderer.globalData.fontManager.loaded){\r\n            dataManager.completeData(this.animationData,this.renderer.globalData.fontManager);\r\n            //this.renderer.buildItems(this.animationData.layers);\r\n            this.checkLoaded();\r\n        }else{\r\n            setTimeout(checkFontsLoaded.bind(this),20);\r\n        }\r\n    }\r\n\r\n    return function(){\r\n        checkFontsLoaded.bind(this)();\r\n    }\r\n}());\r\n\r\nAnimationItem.prototype.addPendingElement = function () {\r\n    this.pendingElements += 1;\r\n}\r\n\r\nAnimationItem.prototype.elementLoaded = function () {\r\n    this.pendingElements--;\r\n    this.checkLoaded();\r\n};\r\n\r\nAnimationItem.prototype.checkLoaded = function () {\r\n    if (this.pendingElements === 0) {\r\n        if(expressionsPlugin){\r\n            expressionsPlugin.initExpressions(this);\r\n        }\r\n        this.renderer.initItems();\r\n        setTimeout(function(){\r\n            this.trigger('DOMLoaded');\r\n        }.bind(this),0);\r\n        this.isLoaded = true;\r\n        this.gotoFrame();\r\n        if(this.autoplay){\r\n            this.play();\r\n        }\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.resize = function () {\r\n    this.renderer.updateContainerSize();\r\n};\r\n\r\nAnimationItem.prototype.setSubframe = function(flag){\r\n    this.subframeEnabled = flag ? true : false;\r\n}\r\n\r\nAnimationItem.prototype.gotoFrame = function () {\r\n    if(this.subframeEnabled){\r\n        this.currentFrame = this.currentRawFrame;\r\n    }else{\r\n        this.currentFrame = Math.floor(this.currentRawFrame);\r\n    }\r\n\r\n    if(this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted){\r\n        this.currentFrame = this.timeCompleted;\r\n    }\r\n    this.trigger('enterFrame');\r\n    this.renderFrame();\r\n};\r\n\r\nAnimationItem.prototype.renderFrame = function () {\r\n    if(this.isLoaded === false){\r\n        return;\r\n    }\r\n    //console.log('this.currentFrame:',this.currentFrame + this.firstFrame);\r\n    this.renderer.renderFrame(this.currentFrame + this.firstFrame);\r\n};\r\n\r\nAnimationItem.prototype.play = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === true){\r\n        this.isPaused = false;\r\n        if(this._idle){\r\n            this._idle = false;\r\n            this.trigger('_active');\r\n        }\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.pause = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === false){\r\n        this.isPaused = true;\r\n        if(!this.pendingSegment){\r\n            this._idle = true;\r\n            this.trigger('_idle');\r\n        }\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.togglePause = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === true){\r\n        this.play();\r\n    }else{\r\n        this.pause();\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.stop = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    this.pause();\r\n    this.currentFrame = this.currentRawFrame = 0;\r\n    this.playCount = 0;\r\n    this.gotoFrame();\r\n};\r\n\r\nAnimationItem.prototype.goToAndStop = function (value, isFrame, name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(isFrame){\r\n        this.setCurrentRawFrameValue(value);\r\n    }else{\r\n        this.setCurrentRawFrameValue(value * this.frameModifier);\r\n    }\r\n    this.pause();\r\n};\r\n\r\nAnimationItem.prototype.goToAndPlay = function (value, isFrame, name) {\r\n    this.goToAndStop(value, isFrame, name);\r\n    this.play();\r\n};\r\n\r\nAnimationItem.prototype.advanceTime = function (value) {\r\n    if(this.pendingSegment){\r\n        this.pendingSegment = false;\r\n        this.adjustSegment(this.segments.shift());\r\n        if(this.isPaused){\r\n            this.play();\r\n        }\r\n        return;\r\n    }\r\n    if (this.isPaused === true || this.isLoaded === false) {\r\n        return;\r\n    }\r\n    this.setCurrentRawFrameValue(this.currentRawFrame + value * this.frameModifier);\r\n};\r\n\r\nAnimationItem.prototype.updateAnimation = function (perc) {\r\n    this.setCurrentRawFrameValue(this.totalFrames * perc);\r\n};\r\n\r\nAnimationItem.prototype.moveFrame = function (value, name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    this.setCurrentRawFrameValue(this.currentRawFrame+value);\r\n};\r\n\r\nAnimationItem.prototype.adjustSegment = function(arr){\r\n    this.playCount = 0;\r\n    if(arr[1] < arr[0]){\r\n        if(this.frameModifier > 0){\r\n            if(this.playSpeed < 0){\r\n                this.setSpeed(-this.playSpeed);\r\n            } else {\r\n                this.setDirection(-1);\r\n            }\r\n        }\r\n        this.totalFrames = arr[0] - arr[1];\r\n        this.firstFrame = arr[1];\r\n        this.setCurrentRawFrameValue(this.totalFrames - 0.01);\r\n    } else if(arr[1] > arr[0]){\r\n        if(this.frameModifier < 0){\r\n            if(this.playSpeed < 0){\r\n                this.setSpeed(-this.playSpeed);\r\n            } else {\r\n                this.setDirection(1);\r\n            }\r\n        }\r\n        this.totalFrames = arr[1] - arr[0];\r\n        this.firstFrame = arr[0];\r\n        this.setCurrentRawFrameValue(0);\r\n    }\r\n    this.trigger('segmentStart');\r\n};\r\nAnimationItem.prototype.setSegment = function (init,end) {\r\n    var pendingFrame = -1;\r\n    if(this.isPaused) {\r\n        if (this.currentRawFrame + this.firstFrame < init) {\r\n            pendingFrame = init;\r\n        } else if (this.currentRawFrame + this.firstFrame > end) {\r\n            pendingFrame = end - init - 0.01;\r\n        }\r\n    }\r\n\r\n    this.firstFrame = init;\r\n    this.totalFrames = end - init;\r\n    if(pendingFrame !== -1) {\r\n        this.goToAndStop(pendingFrame,true);\r\n    }\r\n}\r\n\r\nAnimationItem.prototype.playSegments = function (arr,forceFlag) {\r\n    if(typeof arr[0] === 'object'){\r\n        var i, len = arr.length;\r\n        for(i=0;i<len;i+=1){\r\n            this.segments.push(arr[i]);\r\n        }\r\n    }else{\r\n        this.segments.push(arr);\r\n    }\r\n    if(forceFlag){\r\n        this.adjustSegment(this.segments.shift());\r\n    }\r\n    if(this.isPaused){\r\n        this.play();\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.resetSegments = function (forceFlag) {\r\n    this.segments.length = 0;\r\n    this.segments.push([this.animationData.ip*this.frameRate,Math.floor(this.animationData.op - this.animationData.ip+this.animationData.ip*this.frameRate)]);\r\n    if(forceFlag){\r\n        this.adjustSegment(this.segments.shift());\r\n    }\r\n};\r\nAnimationItem.prototype.checkSegments = function(){\r\n    if(this.segments.length){\r\n        this.pendingSegment = true;\r\n    }\r\n}\r\n\r\nAnimationItem.prototype.remove = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    this.renderer.destroy();\r\n};\r\n\r\nAnimationItem.prototype.destroy = function (name) {\r\n    if((name && this.name != name) || (this.renderer && this.renderer.destroyed)){\r\n        return;\r\n    }\r\n    this.renderer.destroy();\r\n    this.trigger('destroy');\r\n    this._cbs = null;\r\n    this.onEnterFrame = this.onLoopComplete = this.onComplete = this.onSegmentStart = this.onDestroy = null;\r\n};\r\n\r\nAnimationItem.prototype.setCurrentRawFrameValue = function(value){\r\n    this.currentRawFrame = value;\r\n    //console.log(this.totalFrames);\r\n    if (this.currentRawFrame >= this.totalFrames) {\r\n        this.checkSegments();\r\n        if(this.loop === false){\r\n            this.currentRawFrame = this.totalFrames - 0.01;\r\n            this.gotoFrame();\r\n            this.pause();\r\n            this.trigger('complete');\r\n            return;\r\n        }else{\r\n            this.trigger('loopComplete');\r\n            this.playCount += 1;\r\n            if((this.loop !== true && this.playCount == this.loop) || this.pendingSegment){\r\n                this.currentRawFrame = this.totalFrames - 0.01;\r\n                this.gotoFrame();\r\n                this.pause();\r\n                this.trigger('complete');\r\n                return;\r\n            } else {\r\n                this.currentRawFrame = this.currentRawFrame % this.totalFrames;\r\n            }\r\n        }\r\n    } else if (this.currentRawFrame < 0) {\r\n        this.checkSegments();\r\n        this.playCount -= 1;\r\n        if(this.playCount < 0){\r\n            this.playCount = 0;\r\n        }\r\n        if(this.loop === false  || this.pendingSegment){\r\n            this.currentRawFrame = 0;\r\n            this.gotoFrame();\r\n            this.pause();\r\n            this.trigger('complete');\r\n            return;\r\n        }else{\r\n            this.trigger('loopComplete');\r\n            this.currentRawFrame = (this.totalFrames + this.currentRawFrame) % this.totalFrames;\r\n            this.gotoFrame();\r\n            return;\r\n        }\r\n    }\r\n\r\n    this.gotoFrame();\r\n};\r\n\r\nAnimationItem.prototype.setSpeed = function (val) {\r\n    this.playSpeed = val;\r\n    this.updaFrameModifier();\r\n};\r\n\r\nAnimationItem.prototype.setDirection = function (val) {\r\n    this.playDirection = val < 0 ? -1 : 1;\r\n    this.updaFrameModifier();\r\n};\r\n\r\nAnimationItem.prototype.updaFrameModifier = function () {\r\n    this.frameModifier = this.frameMult * this.playSpeed * this.playDirection;\r\n};\r\n\r\nAnimationItem.prototype.getPath = function () {\r\n    return this.path;\r\n};\r\n\r\nAnimationItem.prototype.getAssetsPath = function (assetData) {\r\n    var path = '';\r\n    if(this.assetsPath){\r\n        var imagePath = assetData.p;\r\n        if(imagePath.indexOf('images/') !== -1){\r\n            imagePath = imagePath.split('/')[1];\r\n        }\r\n        path = this.assetsPath + imagePath;\r\n    } else {\r\n        path = this.path;\r\n        path += assetData.u ? assetData.u : '';\r\n        path += assetData.p;\r\n    }\r\n    return path;\r\n};\r\n\r\nAnimationItem.prototype.getAssetData = function (id) {\r\n    var i = 0, len = this.assets.length;\r\n    while (i < len) {\r\n        if(id == this.assets[i].id){\r\n            return this.assets[i];\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.hide = function () {\r\n    this.renderer.hide();\r\n};\r\n\r\nAnimationItem.prototype.show = function () {\r\n    this.renderer.show();\r\n};\r\n\r\nAnimationItem.prototype.getAssets = function () {\r\n    return this.assets;\r\n};\r\n\r\nAnimationItem.prototype.trigger = function(name){\r\n    if(this._cbs && this._cbs[name]){\r\n        switch(name){\r\n            case 'enterFrame':\r\n                this.triggerEvent(name,new BMEnterFrameEvent(name,this.currentFrame,this.totalFrames,this.frameMult));\r\n                break;\r\n            case 'loopComplete':\r\n                this.triggerEvent(name,new BMCompleteLoopEvent(name,this.loop,this.playCount,this.frameMult));\r\n                break;\r\n            case 'complete':\r\n                this.triggerEvent(name,new BMCompleteEvent(name,this.frameMult));\r\n                break;\r\n            case 'segmentStart':\r\n                this.triggerEvent(name,new BMSegmentStartEvent(name,this.firstFrame,this.totalFrames));\r\n                break;\r\n            case 'destroy':\r\n                this.triggerEvent(name,new BMDestroyEvent(name,this));\r\n                break;\r\n            default:\r\n                this.triggerEvent(name);\r\n        }\r\n    }\r\n    if(name === 'enterFrame' && this.onEnterFrame){\r\n        this.onEnterFrame.call(this,new BMEnterFrameEvent(name,this.currentFrame,this.totalFrames,this.frameMult));\r\n    }\r\n    if(name === 'loopComplete' && this.onLoopComplete){\r\n        this.onLoopComplete.call(this,new BMCompleteLoopEvent(name,this.loop,this.playCount,this.frameMult));\r\n    }\r\n    if(name === 'complete' && this.onComplete){\r\n        this.onComplete.call(this,new BMCompleteEvent(name,this.frameMult));\r\n    }\r\n    if(name === 'segmentStart' && this.onSegmentStart){\r\n        this.onSegmentStart.call(this,new BMSegmentStartEvent(name,this.firstFrame,this.totalFrames));\r\n    }\r\n    if(name === 'destroy' && this.onDestroy){\r\n        this.onDestroy.call(this,new BMDestroyEvent(name,this));\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.addEventListener = _addEventListener;\r\nAnimationItem.prototype.removeEventListener = _removeEventListener;\r\nAnimationItem.prototype.triggerEvent = _triggerEvent;\r\n\r\n    var bodymovinjs = {};\r\n\r\n    function setLocationHref (href) {\r\n        locationHref = href;\r\n    }\r\n    function play(animation){\r\n        animationManager.play(animation);\r\n    }\r\n\r\n    function pause(animation) {\r\n        animationManager.pause(animation);\r\n    }\r\n\r\n    function togglePause(animation) {\r\n        animationManager.togglePause(animation);\r\n    }\r\n\r\n    function setSpeed(value, animation) {\r\n        animationManager.setSpeed(value, animation);\r\n    }\r\n\r\n    function setDirection(value, animation) {\r\n        animationManager.setDirection(value, animation);\r\n    }\r\n\r\n    function stop(animation) {\r\n        animationManager.stop(animation);\r\n    }\r\n\r\n    function moveFrame(value) {\r\n        animationManager.moveFrame(value);\r\n    }\r\n\r\n    function searchAnimations() {\r\n        if (standalone === true) {\r\n            animationManager.searchAnimations(animationData, standalone, renderer);\r\n        } else {\r\n            animationManager.searchAnimations();\r\n        }\r\n    }\r\n\r\n    function registerAnimation(elem) {\r\n        return animationManager.registerAnimation(elem);\r\n    }\r\n\r\n    function resize() {\r\n        animationManager.resize();\r\n    }\r\n\r\n    function start() {\r\n        animationManager.start();\r\n    }\r\n\r\n    function goToAndStop(val, isFrame, animation) {\r\n        animationManager.goToAndStop(val, isFrame, animation);\r\n    }\r\n\r\n    function setSubframeRendering(flag) {\r\n        subframeEnabled = flag;\r\n    }\r\n\r\n    function loadAnimation(params) {\r\n        if (standalone === true) {\r\n            params.animationData = JSON.parse(animationData);\r\n        }\r\n        return animationManager.loadAnimation(params);\r\n    }\r\n\r\n    function destroy(animation) {\r\n        return animationManager.destroy(animation);\r\n    }\r\n\r\n    function setQuality(value) {\r\n        if (typeof value === 'string') {\r\n            switch (value) {\r\n                case 'high':\r\n                    defaultCurveSegments = 200;\r\n                    break;\r\n                case 'medium':\r\n                    defaultCurveSegments = 50;\r\n                    break;\r\n                case 'low':\r\n                    defaultCurveSegments = 10;\r\n                    break;\r\n            }\r\n        } else if (!isNaN(value) && value > 1) {\r\n            defaultCurveSegments = value;\r\n        }\r\n        if (defaultCurveSegments >= 50) {\r\n            roundValues(false);\r\n        } else {\r\n            roundValues(true);\r\n        }\r\n    }\r\n\r\n    function inBrowser() {\r\n        return typeof navigator !== 'undefined';\r\n    }\r\n\r\n    function installPlugin(type, plugin) {\r\n        if (type === 'expressions') {\r\n            expressionsPlugin = plugin;\r\n        }\r\n    }\r\n\r\n    function getFactory(name) {\r\n        switch (name) {\r\n            case \"propertyFactory\":\r\n                return PropertyFactory;\r\n            case \"shapePropertyFactory\":\r\n                return ShapePropertyFactory;\r\n            case \"matrix\":\r\n                return Matrix;\r\n        }\r\n    }\r\n    bodymovinjs.play = play;\r\n    bodymovinjs.pause = pause;\r\n    bodymovinjs.setLocationHref = setLocationHref;\r\n    bodymovinjs.togglePause = togglePause;\r\n    bodymovinjs.setSpeed = setSpeed;\r\n    bodymovinjs.setDirection = setDirection;\r\n    bodymovinjs.stop = stop;\r\n    bodymovinjs.moveFrame = moveFrame;\r\n    bodymovinjs.searchAnimations = searchAnimations;\r\n    bodymovinjs.registerAnimation = registerAnimation;\r\n    bodymovinjs.loadAnimation = loadAnimation;\r\n    bodymovinjs.setSubframeRendering = setSubframeRendering;\r\n    bodymovinjs.resize = resize;\r\n    bodymovinjs.start = start;\r\n    bodymovinjs.goToAndStop = goToAndStop;\r\n    bodymovinjs.destroy = destroy;\r\n    bodymovinjs.setQuality = setQuality;\r\n    bodymovinjs.inBrowser = inBrowser;\r\n    bodymovinjs.installPlugin = installPlugin;\r\n    bodymovinjs.__getFactory = getFactory;\r\n    bodymovinjs.version = '4.13.0';\r\n\r\n    function checkReady() {\r\n        if (document.readyState === \"complete\") {\r\n            clearInterval(readyStateCheckInterval);\r\n            searchAnimations();\r\n        }\r\n    }\r\n\r\n    function getQueryVariable(variable) {\r\n        var vars = queryString.split('&');\r\n        for (var i = 0; i < vars.length; i++) {\r\n            var pair = vars[i].split('=');\r\n            if (decodeURIComponent(pair[0]) == variable) {\r\n                return decodeURIComponent(pair[1]);\r\n            }\r\n        }\r\n    }\r\n    var standalone = '__[STANDALONE]__';\r\n    var animationData = '__[ANIMATIONDATA]__';\r\n    var renderer = '';\r\n    if (standalone) {\r\n        var scripts = document.getElementsByTagName('script');\r\n        var index = scripts.length - 1;\r\n        var myScript = scripts[index] || {\r\n            src: ''\r\n        };\r\n        var queryString = myScript.src.replace(/^[^\\?]+\\??/, '');\r\n        renderer = getQueryVariable('renderer');\r\n    }\r\n    var readyStateCheckInterval = setInterval(checkReady, 100);\r\n    return bodymovinjs;\r\n}));\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n/* globals __VUE_SSR_CONTEXT__ */\n\n// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    ref: \"lavContainer\",\n    style: (_vm.style)\n  })\n},staticRenderFns: []}\nmodule.exports.render._withStripped = true\nif (false) {\n  module.hot.accept()\n  if (module.hot.data) {\n     require(\"vue-hot-reload-api\").rerender(\"data-v-91474f0e\", module.exports)\n  }\n}\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// lib/vue-lottie.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 00c4754b4d80a79acce7","var disposed = false\nvar Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./vue-lottie.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-91474f0e\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":\\\"src\\\",\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./vue-lottie.vue\"),\n  /* styles */\n  null,\n  /* scopeId */\n  null,\n  /* moduleIdentifier (server only) */\n  null\n)\nComponent.options.__file = \"/Users/sergeysavin/Documents/Projects/vue-lottie/src/components/vue-lottie.vue\"\nif (Component.esModule && Object.keys(Component.esModule).some(function (key) {return key !== \"default\" && key.substr(0, 2) !== \"__\"})) {console.error(\"named exports are not supported in *.vue files.\")}\nif (Component.options.functional) {console.error(\"[vue-loader] vue-lottie.vue: functional components are not supported with templates, they should use render functions.\")}\n\n/* hot reload */\nif (module.hot) {(function () {\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), false)\n  if (!hotAPI.compatible) return\n  module.hot.accept()\n  if (!module.hot.data) {\n    hotAPI.createRecord(\"data-v-91474f0e\", Component.options)\n  } else {\n    hotAPI.reload(\"data-v-91474f0e\", Component.options)\n  }\n  module.hot.dispose(function (data) {\n    disposed = true\n  })\n})()}\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/vue-lottie.vue\n// module id = 0\n// module chunks = 0","import vueLottie from './components/vue-lottie'\n\nexport default vueLottie\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib.js","<template>\n    <div :style=\"style\" ref=\"lavContainer\"></div>\n</template>\n\n<script>\n    import bodymovin from 'bodymovin/build/player/bodymovin_light.js'\n\n    export default {\n        props: {\n            data: {\n                type: Object,\n                required: true\n            },\n            loop: Boolean,\n            autoplay: {\n                type: Boolean,\n                default: true\n            },\n            settings: Object,\n            height: Number,\n            width: Number\n        },\n\n        data () {\n            return {\n                animation: null\n            }\n        },\n        computed: {\n            style () {\n                let style = {}\n                if (this.width) {\n                    style.width = this.width + 'px'\n                }\n                if (this.height) {\n                    style.height = this.height + 'px'\n                }\n                return style\n            }\n        },\n        methods: {\n            play () {\n                this.animation.play()\n            },\n            pause () {\n                this.animation.pause()\n            },\n            stop () {\n                this.animation.stop()\n            },\n            setSpeed (val) {\n                this.animation.setSpeed(val)\n            }\n        },\n        mounted () {\n            this.animation = bodymovin.loadAnimation({\n                container: this.$refs.lavContainer,\n                renderer: 'svg',\n                loop: this.loop,\n                autoplay: this.autoplay,\n                animationData: this.data,\n                rendererSettings: this.settings\n            })\n        }\n    }\n</script>\n\n\n\n// WEBPACK FOOTER //\n// vue-lottie.vue?504864b2","(function(root, factory) {\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(function() {\r\n            return factory(root);\r\n        });\r\n    } else if (typeof module === \"object\" && module.exports) {\r\n        module.exports = factory(root);\r\n    } else {\r\n        root.bodymovin = factory(root);\r\n    }\r\n}((window || {}), function(window) {\r\n    var svgNS = \"http://www.w3.org/2000/svg\";\r\n\r\nvar locationHref = '';\r\n\nvar subframeEnabled = true;\r\nvar expressionsPlugin;\r\nvar isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\r\nvar cachedColors = {};\r\nvar bm_rounder = Math.round;\r\nvar bm_rnd;\r\nvar bm_pow = Math.pow;\r\nvar bm_sqrt = Math.sqrt;\r\nvar bm_abs = Math.abs;\r\nvar bm_floor = Math.floor;\r\nvar bm_max = Math.max;\r\nvar bm_min = Math.min;\r\nvar blitter = 10;\r\n\r\nvar BMMath = {};\r\n(function(){\r\n    var propertyNames = Object.getOwnPropertyNames(Math);\r\n    var i, len = propertyNames.length;\r\n    for(i=0;i<len;i+=1){\r\n        BMMath[propertyNames[i]] = Math[propertyNames[i]];\r\n    }\r\n}());\r\n\r\nfunction ProjectInterface(){return {}};\r\n\r\nBMMath.random = Math.random;\r\nBMMath.abs = function(val){\r\n    var tOfVal = typeof val;\r\n    if(tOfVal === 'object' && val.length){\r\n        var absArr = Array.apply(null,{length:val.length});\r\n        var i, len = val.length;\r\n        for(i=0;i<len;i+=1){\r\n            absArr[i] = Math.abs(val[i]);\r\n        }\r\n        return absArr;\r\n    }\r\n    return Math.abs(val);\r\n\r\n}\r\nvar defaultCurveSegments = 150;\r\nvar degToRads = Math.PI/180;\r\nvar roundCorner = 0.5519;\r\n\r\nfunction roundValues(flag){\r\n    if(flag){\r\n        bm_rnd = Math.round;\r\n    }else{\r\n        bm_rnd = function(val){\r\n            return val;\r\n        };\r\n    }\r\n}\r\nroundValues(false);\r\n\r\nfunction roundTo2Decimals(val){\r\n    return Math.round(val*10000)/10000;\r\n}\r\n\r\nfunction roundTo3Decimals(val){\r\n    return Math.round(val*100)/100;\r\n}\r\n\r\nfunction styleDiv(element){\r\n    element.style.position = 'absolute';\r\n    element.style.top = 0;\r\n    element.style.left = 0;\r\n    element.style.display = 'block';\r\n    element.style.transformOrigin = element.style.webkitTransformOrigin = '0 0';\r\n    element.style.backfaceVisibility  = element.style.webkitBackfaceVisibility = 'visible';\r\n    element.style.transformStyle = element.style.webkitTransformStyle = element.style.mozTransformStyle = \"preserve-3d\";\r\n}\r\n\r\nfunction styleUnselectableDiv(element){\r\n    element.style.userSelect = 'none';\r\n    element.style.MozUserSelect = 'none';\r\n    element.style.webkitUserSelect = 'none';\r\n    element.style.oUserSelect = 'none';\r\n\r\n}\r\n\r\nfunction BMEnterFrameEvent(n,c,t,d){\r\n    this.type = n;\r\n    this.currentTime = c;\r\n    this.totalTime = t;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMCompleteEvent(n,d){\r\n    this.type = n;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMCompleteLoopEvent(n,c,t,d){\r\n    this.type = n;\r\n    this.currentLoop = c;\r\n    this.totalLoops = t;\r\n    this.direction = d < 0 ? -1:1;\r\n}\r\n\r\nfunction BMSegmentStartEvent(n,f,t){\r\n    this.type = n;\r\n    this.firstFrame = f;\r\n    this.totalFrames = t;\r\n}\r\n\r\nfunction BMDestroyEvent(n,t){\r\n    this.type = n;\r\n    this.target = t;\r\n}\r\n\r\nfunction _addEventListener(eventName, callback){\r\n\r\n    if (!this._cbs[eventName]){\r\n        this._cbs[eventName] = [];\r\n    }\r\n    this._cbs[eventName].push(callback);\r\n\r\n\treturn function() {\r\n\t\tthis.removeEventListener(eventName, callback);\r\n\t}.bind(this);\r\n}\r\n\r\nfunction _removeEventListener(eventName,callback){\r\n\r\n    if (!callback){\r\n        this._cbs[eventName] = null;\r\n    }else if(this._cbs[eventName]){\r\n        var i = 0, len = this._cbs[eventName].length;\r\n        while(i<len){\r\n            if(this._cbs[eventName][i] === callback){\r\n                this._cbs[eventName].splice(i,1);\r\n                i -=1;\r\n                len -= 1;\r\n            }\r\n            i += 1;\r\n        }\r\n        if(!this._cbs[eventName].length){\r\n            this._cbs[eventName] = null;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nfunction _triggerEvent(eventName, args){\r\n    if (this._cbs[eventName]) {\r\n        var len = this._cbs[eventName].length;\r\n        for (var i = 0; i < len; i++){\r\n            this._cbs[eventName][i](args);\r\n        }\r\n    }\r\n}\r\n\r\nfunction randomString(length, chars){\r\n    if(chars === undefined){\r\n        chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890';\r\n    }\r\n    var i;\r\n    var result = '';\r\n    for (i = length; i > 0; --i) result += chars[Math.round(Math.random() * (chars.length - 1))];\r\n    return result;\r\n}\r\n\r\nfunction HSVtoRGB(h, s, v) {\r\n    var r, g, b, i, f, p, q, t;\r\n    if (arguments.length === 1) {\r\n        s = h.s, v = h.v, h = h.h;\r\n    }\r\n    i = Math.floor(h * 6);\r\n    f = h * 6 - i;\r\n    p = v * (1 - s);\r\n    q = v * (1 - f * s);\r\n    t = v * (1 - (1 - f) * s);\r\n    switch (i % 6) {\r\n        case 0: r = v, g = t, b = p; break;\r\n        case 1: r = q, g = v, b = p; break;\r\n        case 2: r = p, g = v, b = t; break;\r\n        case 3: r = p, g = q, b = v; break;\r\n        case 4: r = t, g = p, b = v; break;\r\n        case 5: r = v, g = p, b = q; break;\r\n    }\r\n    return [ r,\r\n        g,\r\n         b ];\r\n}\r\n\r\nfunction RGBtoHSV(r, g, b) {\r\n    if (arguments.length === 1) {\r\n        g = r.g, b = r.b, r = r.r;\r\n    }\r\n    var max = Math.max(r, g, b), min = Math.min(r, g, b),\r\n        d = max - min,\r\n        h,\r\n        s = (max === 0 ? 0 : d / max),\r\n        v = max / 255;\r\n\r\n    switch (max) {\r\n        case min: h = 0; break;\r\n        case r: h = (g - b) + d * (g < b ? 6: 0); h /= 6 * d; break;\r\n        case g: h = (b - r) + d * 2; h /= 6 * d; break;\r\n        case b: h = (r - g) + d * 4; h /= 6 * d; break;\r\n    }\r\n\r\n    return [\r\n         h,\r\n         s,\r\n         v\r\n    ];\r\n}\r\n\r\nfunction addSaturationToRGB(color,offset){\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[1] += offset;\r\n    if (hsv[1] > 1) {\r\n        hsv[1] = 1;\r\n    }\r\n    else if (hsv[1] <= 0) {\r\n        hsv[1] = 0;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nfunction addBrightnessToRGB(color,offset){\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[2] += offset;\r\n    if (hsv[2] > 1) {\r\n        hsv[2] = 1;\r\n    }\r\n    else if (hsv[2] < 0) {\r\n        hsv[2] = 0;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nfunction addHueToRGB(color,offset) {\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[0] += offset/360;\r\n    if (hsv[0] > 1) {\r\n        hsv[0] -= 1;\r\n    }\r\n    else if (hsv[0] < 0) {\r\n        hsv[0] += 1;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nfunction componentToHex(c) {\r\n    var hex = c.toString(16);\r\n    return hex.length == 1 ? '0' + hex : hex;\r\n}\r\n\r\nvar rgbToHex = (function(){\r\n    var colorMap = [];\r\n    var i;\r\n    var hex;\r\n    for(i=0;i<256;i+=1){\r\n        hex = i.toString(16);\r\n        colorMap[i] = hex.length == 1 ? '0' + hex : hex;\r\n    }\r\n\r\n    return function(r, g, b) {\r\n        if(r<0){\r\n            r = 0;\r\n        }\r\n        if(g<0){\r\n            g = 0;\r\n        }\r\n        if(b<0){\r\n            b = 0;\r\n        }\r\n        return '#' + colorMap[r] + colorMap[g] + colorMap[b];\r\n    };\r\n}());\r\n\r\nfunction fillToRgba(hex,alpha){\r\n    if(!cachedColors[hex]){\r\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n        cachedColors[hex] = parseInt(result[1], 16)+','+parseInt(result[2], 16)+','+parseInt(result[3], 16);\r\n    }\r\n    return 'rgba('+cachedColors[hex]+','+alpha+')';\r\n}\r\n\r\nvar fillColorToString = (function(){\r\n\r\n    var colorMap = [];\r\n    return function(colorArr,alpha){\r\n        if(alpha !== undefined){\r\n            colorArr[3] = alpha;\r\n        }\r\n        if(!colorMap[colorArr[0]]){\r\n            colorMap[colorArr[0]] = {};\r\n        }\r\n        if(!colorMap[colorArr[0]][colorArr[1]]){\r\n            colorMap[colorArr[0]][colorArr[1]] = {};\r\n        }\r\n        if(!colorMap[colorArr[0]][colorArr[1]][colorArr[2]]){\r\n            colorMap[colorArr[0]][colorArr[1]][colorArr[2]] = {};\r\n        }\r\n        if(!colorMap[colorArr[0]][colorArr[1]][colorArr[2]][colorArr[3]]){\r\n            colorMap[colorArr[0]][colorArr[1]][colorArr[2]][colorArr[3]] = 'rgba(' + colorArr.join(',')+')';\r\n        }\r\n        return colorMap[colorArr[0]][colorArr[1]][colorArr[2]][colorArr[3]];\r\n    };\r\n}());\r\n\r\nfunction RenderedFrame(tr,o) {\r\n    this.tr = tr;\r\n    this.o = o;\r\n}\r\n\r\nfunction iterateDynamicProperties(num){\r\n    var i, len = this.dynamicProperties;\r\n    for(i=0;i<len;i+=1){\r\n        this.dynamicProperties[i].getValue(num);\r\n    }\r\n}\r\n\r\nfunction reversePath(paths){\r\n    var newI = [], newO = [], newV = [];\r\n    var i, len, newPaths = {};\r\n    var init = 0;\r\n    if (paths.c) {\r\n        newI[0] = paths.o[0];\r\n        newO[0] = paths.i[0];\r\n        newV[0] = paths.v[0];\r\n        init = 1;\r\n    }\r\n    len = paths.i.length;\r\n    var cnt = len - 1;\r\n\r\n    for (i = init; i < len; i += 1) {\r\n        newI.push(paths.o[cnt]);\r\n        newO.push(paths.i[cnt]);\r\n        newV.push(paths.v[cnt]);\r\n        cnt -= 1;\r\n    }\r\n\r\n    newPaths.i = newI;\r\n    newPaths.o = newO;\r\n    newPaths.v = newV;\r\n\r\n    return newPaths;\r\n}\n/*!\r\n Transformation Matrix v2.0\r\n (c) Epistemex 2014-2015\r\n www.epistemex.com\r\n By Ken Fyrstenberg\r\n Contributions by leeoniya.\r\n License: MIT, header required.\r\n */\r\n\r\n/**\r\n * 2D transformation matrix object initialized with identity matrix.\r\n *\r\n * The matrix can synchronize a canvas context by supplying the context\r\n * as an argument, or later apply current absolute transform to an\r\n * existing context.\r\n *\r\n * All values are handled as floating point values.\r\n *\r\n * @param {CanvasRenderingContext2D} [context] - Optional context to sync with Matrix\r\n * @prop {number} a - scale x\r\n * @prop {number} b - shear y\r\n * @prop {number} c - shear x\r\n * @prop {number} d - scale y\r\n * @prop {number} e - translate x\r\n * @prop {number} f - translate y\r\n * @prop {CanvasRenderingContext2D|null} [context=null] - set or get current canvas context\r\n * @constructor\r\n */\r\n\r\nvar Matrix = (function(){\r\n\r\n    function reset(){\r\n        this.props[0] = 1;\r\n        this.props[1] = 0;\r\n        this.props[2] = 0;\r\n        this.props[3] = 0;\r\n        this.props[4] = 0;\r\n        this.props[5] = 1;\r\n        this.props[6] = 0;\r\n        this.props[7] = 0;\r\n        this.props[8] = 0;\r\n        this.props[9] = 0;\r\n        this.props[10] = 1;\r\n        this.props[11] = 0;\r\n        this.props[12] = 0;\r\n        this.props[13] = 0;\r\n        this.props[14] = 0;\r\n        this.props[15] = 1;\r\n        return this;\r\n    }\r\n\r\n    function rotate(angle) {\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = Math.cos(angle);\r\n        var mSin = Math.sin(angle);\r\n        return this._t(mCos, -mSin,  0, 0\r\n            , mSin,  mCos, 0, 0\r\n            , 0,  0,  1, 0\r\n            , 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateX(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = Math.cos(angle);\r\n        var mSin = Math.sin(angle);\r\n        return this._t(1, 0, 0, 0\r\n            , 0, mCos, -mSin, 0\r\n            , 0, mSin,  mCos, 0\r\n            , 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateY(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = Math.cos(angle);\r\n        var mSin = Math.sin(angle);\r\n        return this._t(mCos,  0,  mSin, 0\r\n            , 0, 1, 0, 0\r\n            , -mSin,  0,  mCos, 0\r\n            , 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateZ(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = Math.cos(angle);\r\n        var mSin = Math.sin(angle);\r\n        return this._t(mCos, -mSin,  0, 0\r\n            , mSin,  mCos, 0, 0\r\n            , 0,  0,  1, 0\r\n            , 0, 0, 0, 1);\r\n    }\r\n\r\n    function shear(sx,sy){\r\n        return this._t(1, sy, sx, 1, 0, 0);\r\n    }\r\n\r\n    function skew(ax, ay){\r\n        return this.shear(Math.tan(ax), Math.tan(ay));\r\n    }\r\n\r\n    function skewFromAxis(ax, angle){\r\n        var mCos = Math.cos(angle);\r\n        var mSin = Math.sin(angle);\r\n        return this._t(mCos, mSin,  0, 0\r\n            , -mSin,  mCos, 0, 0\r\n            , 0,  0,  1, 0\r\n            , 0, 0, 0, 1)\r\n            ._t(1, 0,  0, 0\r\n            , Math.tan(ax),  1, 0, 0\r\n            , 0,  0,  1, 0\r\n            , 0, 0, 0, 1)\r\n            ._t(mCos, -mSin,  0, 0\r\n            , mSin,  mCos, 0, 0\r\n            , 0,  0,  1, 0\r\n            , 0, 0, 0, 1);\r\n        //return this._t(mCos, mSin, -mSin, mCos, 0, 0)._t(1, 0, Math.tan(ax), 1, 0, 0)._t(mCos, -mSin, mSin, mCos, 0, 0);\r\n    }\r\n\r\n    function scale(sx, sy, sz) {\r\n        sz = isNaN(sz) ? 1 : sz;\r\n        if(sx == 1 && sy == 1 && sz == 1){\r\n            return this;\r\n        }\r\n        return this._t(sx, 0, 0, 0, 0, sy, 0, 0, 0, 0, sz, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function setTransform(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {\r\n        this.props[0] = a;\r\n        this.props[1] = b;\r\n        this.props[2] = c;\r\n        this.props[3] = d;\r\n        this.props[4] = e;\r\n        this.props[5] = f;\r\n        this.props[6] = g;\r\n        this.props[7] = h;\r\n        this.props[8] = i;\r\n        this.props[9] = j;\r\n        this.props[10] = k;\r\n        this.props[11] = l;\r\n        this.props[12] = m;\r\n        this.props[13] = n;\r\n        this.props[14] = o;\r\n        this.props[15] = p;\r\n        return this;\r\n    }\r\n\r\n    function translate(tx, ty, tz) {\r\n        tz = tz || 0;\r\n        if(tx !== 0 || ty !== 0 || tz !== 0){\r\n            return this._t(1,0,0,0,0,1,0,0,0,0,1,0,tx,ty,tz,1);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function transform(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2, m2, n2, o2, p2) {\r\n\r\n        if(a2 === 1 && b2 === 0 && c2 === 0 && d2 === 0 && e2 === 0 && f2 === 1 && g2 === 0 && h2 === 0 && i2 === 0 && j2 === 0 && k2 === 1 && l2 === 0){\r\n            if(m2 !== 0 || n2 !== 0 || o2 !== 0){\r\n\r\n                this.props[12] = this.props[12] * a2 + this.props[13] * e2 + this.props[14] * i2 + this.props[15] * m2 ;\r\n                this.props[13] = this.props[12] * b2 + this.props[13] * f2 + this.props[14] * j2 + this.props[15] * n2 ;\r\n                this.props[14] = this.props[12] * c2 + this.props[13] * g2 + this.props[14] * k2 + this.props[15] * o2 ;\r\n                this.props[15] = this.props[12] * d2 + this.props[13] * h2 + this.props[14] * l2 + this.props[15] * p2 ;\r\n            }\r\n            this._identityCalculated = false;\r\n            return this;\r\n        }\r\n\r\n        var a1 = this.props[0];\r\n        var b1 = this.props[1];\r\n        var c1 = this.props[2];\r\n        var d1 = this.props[3];\r\n        var e1 = this.props[4];\r\n        var f1 = this.props[5];\r\n        var g1 = this.props[6];\r\n        var h1 = this.props[7];\r\n        var i1 = this.props[8];\r\n        var j1 = this.props[9];\r\n        var k1 = this.props[10];\r\n        var l1 = this.props[11];\r\n        var m1 = this.props[12];\r\n        var n1 = this.props[13];\r\n        var o1 = this.props[14];\r\n        var p1 = this.props[15];\r\n\r\n        /* matrix order (canvas compatible):\r\n         * ace\r\n         * bdf\r\n         * 001\r\n         */\r\n        this.props[0] = a1 * a2 + b1 * e2 + c1 * i2 + d1 * m2;\r\n        this.props[1] = a1 * b2 + b1 * f2 + c1 * j2 + d1 * n2 ;\r\n        this.props[2] = a1 * c2 + b1 * g2 + c1 * k2 + d1 * o2 ;\r\n        this.props[3] = a1 * d2 + b1 * h2 + c1 * l2 + d1 * p2 ;\r\n\r\n        this.props[4] = e1 * a2 + f1 * e2 + g1 * i2 + h1 * m2 ;\r\n        this.props[5] = e1 * b2 + f1 * f2 + g1 * j2 + h1 * n2 ;\r\n        this.props[6] = e1 * c2 + f1 * g2 + g1 * k2 + h1 * o2 ;\r\n        this.props[7] = e1 * d2 + f1 * h2 + g1 * l2 + h1 * p2 ;\r\n\r\n        this.props[8] = i1 * a2 + j1 * e2 + k1 * i2 + l1 * m2 ;\r\n        this.props[9] = i1 * b2 + j1 * f2 + k1 * j2 + l1 * n2 ;\r\n        this.props[10] = i1 * c2 + j1 * g2 + k1 * k2 + l1 * o2 ;\r\n        this.props[11] = i1 * d2 + j1 * h2 + k1 * l2 + l1 * p2 ;\r\n\r\n        this.props[12] = m1 * a2 + n1 * e2 + o1 * i2 + p1 * m2 ;\r\n        this.props[13] = m1 * b2 + n1 * f2 + o1 * j2 + p1 * n2 ;\r\n        this.props[14] = m1 * c2 + n1 * g2 + o1 * k2 + p1 * o2 ;\r\n        this.props[15] = m1 * d2 + n1 * h2 + o1 * l2 + p1 * p2 ;\r\n\r\n        this._identityCalculated = false;\r\n        return this;\r\n    }\r\n\r\n    function isIdentity() {\r\n        if(!this._identityCalculated){\r\n            this._identity = !(this.props[0] !== 1 || this.props[1] !== 0 || this.props[2] !== 0 || this.props[3] !== 0\r\n                || this.props[4] !== 0 || this.props[5] !== 1 || this.props[6] !== 0 || this.props[7] !== 0\r\n                || this.props[8] !== 0 || this.props[9] !== 0 || this.props[10] !== 1 || this.props[11] !== 0\r\n                || this.props[12] !== 0 || this.props[13] !== 0 || this.props[14] !== 0 || this.props[15] !== 1);\r\n            this._identityCalculated = true;\r\n        }\r\n        return this._identity;\r\n    }\r\n\r\n    function clone(matr){\r\n        var i;\r\n        for(i=0;i<16;i+=1){\r\n            matr.props[i] = this.props[i];\r\n        }\r\n    }\r\n\r\n    function cloneFromProps(props){\r\n        var i;\r\n        for(i=0;i<16;i+=1){\r\n            this.props[i] = props[i];\r\n        }\r\n    }\r\n\r\n    function applyToPoint(x, y, z) {\r\n\r\n        return {\r\n            x: x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],\r\n            y: x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],\r\n            z: x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]\r\n        };\r\n        /*return {\r\n         x: x * me.a + y * me.c + me.e,\r\n         y: x * me.b + y * me.d + me.f\r\n         };*/\r\n    }\r\n    function applyToX(x, y, z) {\r\n        return x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12];\r\n    }\r\n    function applyToY(x, y, z) {\r\n        return x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13];\r\n    }\r\n    function applyToZ(x, y, z) {\r\n        return x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14];\r\n    }\r\n\r\n    function inversePoint(pt) {\r\n        var determinant = this.props[0] * this.props[5] - this.props[1] * this.props[4];\r\n        var a = this.props[5]/determinant;\r\n        var b = - this.props[1]/determinant;\r\n        var c = - this.props[4]/determinant;\r\n        var d = this.props[0]/determinant;\r\n        var e = (this.props[4] * this.props[13] - this.props[5] * this.props[12])/determinant;\r\n        var f = - (this.props[0] * this.props[13] - this.props[1] * this.props[12])/determinant;\r\n        return [pt[0] * a + pt[1] * c + e, pt[0] * b + pt[1] * d + f, 0];\r\n    }\r\n\r\n    function inversePoints(pts){\r\n        var i, len = pts.length, retPts = [];\r\n        for(i=0;i<len;i+=1){\r\n            retPts[i] = inversePoint(pts[i]);\r\n        }\r\n        return retPts;\r\n    }\r\n\r\n    function applyToPointArray(x,y,z,dimensions){\r\n        if(dimensions && dimensions === 2) {\r\n            var arr = point_pool.newPoint();\r\n            arr[0] = x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12]; \r\n            arr[1] = x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13]; \r\n            return arr;    \r\n        }\r\n        return [x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]];\r\n    }\r\n    function applyToPointStringified(x, y) {\r\n        if(this.isIdentity()) {\r\n            return x + ',' + y;\r\n        }\r\n        return (bm_rnd(x * this.props[0] + y * this.props[4] + this.props[12]))+','+(bm_rnd(x * this.props[1] + y * this.props[5] + this.props[13]));\r\n    }\r\n\r\n    function toArray() {\r\n        return [this.props[0],this.props[1],this.props[2],this.props[3],this.props[4],this.props[5],this.props[6],this.props[7],this.props[8],this.props[9],this.props[10],this.props[11],this.props[12],this.props[13],this.props[14],this.props[15]];\r\n    }\r\n\r\n    function toCSS() {\r\n        if(isSafari){\r\n            return \"matrix3d(\" + roundTo2Decimals(this.props[0]) + ',' + roundTo2Decimals(this.props[1]) + ',' + roundTo2Decimals(this.props[2]) + ',' + roundTo2Decimals(this.props[3]) + ',' + roundTo2Decimals(this.props[4]) + ',' + roundTo2Decimals(this.props[5]) + ',' + roundTo2Decimals(this.props[6]) + ',' + roundTo2Decimals(this.props[7]) + ',' + roundTo2Decimals(this.props[8]) + ',' + roundTo2Decimals(this.props[9]) + ',' + roundTo2Decimals(this.props[10]) + ',' + roundTo2Decimals(this.props[11]) + ',' + roundTo2Decimals(this.props[12]) + ',' + roundTo2Decimals(this.props[13]) + ',' + roundTo2Decimals(this.props[14]) + ',' + roundTo2Decimals(this.props[15]) + ')';\r\n        } else {\r\n            this.cssParts[1] = this.props.join(',');\r\n            return this.cssParts.join('');\r\n        }\r\n    }\r\n\r\n    function to2dCSS() {\r\n        return \"matrix(\" + roundTo2Decimals(this.props[0]) + ',' + roundTo2Decimals(this.props[1]) + ',' + roundTo2Decimals(this.props[4]) + ',' + roundTo2Decimals(this.props[5]) + ',' + roundTo2Decimals(this.props[12]) + ',' + roundTo2Decimals(this.props[13]) + \")\";\r\n    }\r\n\r\n    function toString() {\r\n        return \"\" + this.toArray();\r\n    }\r\n\r\n    return function(){\r\n        this.reset = reset;\r\n        this.rotate = rotate;\r\n        this.rotateX = rotateX;\r\n        this.rotateY = rotateY;\r\n        this.rotateZ = rotateZ;\r\n        this.skew = skew;\r\n        this.skewFromAxis = skewFromAxis;\r\n        this.shear = shear;\r\n        this.scale = scale;\r\n        this.setTransform = setTransform;\r\n        this.translate = translate;\r\n        this.transform = transform;\r\n        this.applyToPoint = applyToPoint;\r\n        this.applyToX = applyToX;\r\n        this.applyToY = applyToY;\r\n        this.applyToZ = applyToZ;\r\n        this.applyToPointArray = applyToPointArray;\r\n        this.applyToPointStringified = applyToPointStringified;\r\n        this.toArray = toArray;\r\n        this.toCSS = toCSS;\r\n        this.to2dCSS = to2dCSS;\r\n        this.toString = toString;\r\n        this.clone = clone;\r\n        this.cloneFromProps = cloneFromProps;\r\n        this.inversePoints = inversePoints;\r\n        this.inversePoint = inversePoint;\r\n        this._t = this.transform;\r\n        this.isIdentity = isIdentity;\r\n        this._identity = true;\r\n        this._identityCalculated = false;\r\n\r\n        this.props = [1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];\r\n\r\n        this.cssParts = ['matrix3d(','',')'];\r\n    }\r\n}());\r\n\r\nfunction Matrix() {\r\n\r\n\r\n}\r\n\n/*\r\n Copyright 2014 David Bau.\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining\r\n a copy of this software and associated documentation files (the\r\n \"Software\"), to deal in the Software without restriction, including\r\n without limitation the rights to use, copy, modify, merge, publish,\r\n distribute, sublicense, and/or sell copies of the Software, and to\r\n permit persons to whom the Software is furnished to do so, subject to\r\n the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be\r\n included in all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\n IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\n CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\n TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n */\r\n\r\n(function (pool, math) {\r\n//\r\n// The following constants are related to IEEE 754 limits.\r\n//\r\n    var global = this,\r\n        width = 256,        // each RC4 output is 0 <= x < 256\r\n        chunks = 6,         // at least six RC4 outputs for each double\r\n        digits = 52,        // there are 52 significant digits in a double\r\n        rngname = 'random', // rngname: name for Math.random and Math.seedrandom\r\n        startdenom = math.pow(width, chunks),\r\n        significance = math.pow(2, digits),\r\n        overflow = significance * 2,\r\n        mask = width - 1,\r\n        nodecrypto;         // node.js crypto module, initialized at the bottom.\r\n\r\n//\r\n// seedrandom()\r\n// This is the seedrandom function described above.\r\n//\r\n    function seedrandom(seed, options, callback) {\r\n        var key = [];\r\n        options = (options == true) ? { entropy: true } : (options || {});\r\n\r\n        // Flatten the seed string or build one from local entropy if needed.\r\n        var shortseed = mixkey(flatten(\r\n            options.entropy ? [seed, tostring(pool)] :\r\n                (seed == null) ? autoseed() : seed, 3), key);\r\n\r\n        // Use the seed to initialize an ARC4 generator.\r\n        var arc4 = new ARC4(key);\r\n\r\n        // This function returns a random double in [0, 1) that contains\r\n        // randomness in every bit of the mantissa of the IEEE 754 value.\r\n        var prng = function() {\r\n            var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\r\n                d = startdenom,                 //   and denominator d = 2 ^ 48.\r\n                x = 0;                          //   and no 'extra last byte'.\r\n            while (n < significance) {          // Fill up all significant digits by\r\n                n = (n + x) * width;              //   shifting numerator and\r\n                d *= width;                       //   denominator and generating a\r\n                x = arc4.g(1);                    //   new least-significant-byte.\r\n            }\r\n            while (n >= overflow) {             // To avoid rounding up, before adding\r\n                n /= 2;                           //   last byte, shift everything\r\n                d /= 2;                           //   right using integer math until\r\n                x >>>= 1;                         //   we have exactly the desired bits.\r\n            }\r\n            return (n + x) / d;                 // Form the number within [0, 1).\r\n        };\r\n\r\n        prng.int32 = function() { return arc4.g(4) | 0; }\r\n        prng.quick = function() { return arc4.g(4) / 0x100000000; }\r\n        prng.double = prng;\r\n\r\n        // Mix the randomness into accumulated entropy.\r\n        mixkey(tostring(arc4.S), pool);\r\n\r\n        // Calling convention: what to return as a function of prng, seed, is_math.\r\n        return (options.pass || callback ||\r\n        function(prng, seed, is_math_call, state) {\r\n            if (state) {\r\n                // Load the arc4 state from the given state if it has an S array.\r\n                if (state.S) { copy(state, arc4); }\r\n                // Only provide the .state method if requested via options.state.\r\n                prng.state = function() { return copy(arc4, {}); }\r\n            }\r\n\r\n            // If called as a method of Math (Math.seedrandom()), mutate\r\n            // Math.random because that is how seedrandom.js has worked since v1.0.\r\n            if (is_math_call) { math[rngname] = prng; return seed; }\r\n\r\n            // Otherwise, it is a newer calling convention, so return the\r\n            // prng directly.\r\n            else return prng;\r\n        })(\r\n            prng,\r\n            shortseed,\r\n            'global' in options ? options.global : (this == math),\r\n            options.state);\r\n    }\r\n    math['seed' + rngname] = seedrandom;\r\n\r\n//\r\n// ARC4\r\n//\r\n// An ARC4 implementation.  The constructor takes a key in the form of\r\n// an array of at most (width) integers that should be 0 <= x < (width).\r\n//\r\n// The g(count) method returns a pseudorandom integer that concatenates\r\n// the next (count) outputs from ARC4.  Its return value is a number x\r\n// that is in the range 0 <= x < (width ^ count).\r\n//\r\n    function ARC4(key) {\r\n        var t, keylen = key.length,\r\n            me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\r\n\r\n        // The empty key [] is treated as [0].\r\n        if (!keylen) { key = [keylen++]; }\r\n\r\n        // Set up S using the standard key scheduling algorithm.\r\n        while (i < width) {\r\n            s[i] = i++;\r\n        }\r\n        for (i = 0; i < width; i++) {\r\n            s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\r\n            s[j] = t;\r\n        }\r\n\r\n        // The \"g\" method returns the next (count) outputs as one number.\r\n        (me.g = function(count) {\r\n            // Using instance members instead of closure state nearly doubles speed.\r\n            var t, r = 0,\r\n                i = me.i, j = me.j, s = me.S;\r\n            while (count--) {\r\n                t = s[i = mask & (i + 1)];\r\n                r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\r\n            }\r\n            me.i = i; me.j = j;\r\n            return r;\r\n            // For robust unpredictability, the function call below automatically\r\n            // discards an initial batch of values.  This is called RC4-drop[256].\r\n            // See http://google.com/search?q=rsa+fluhrer+response&btnI\r\n        })(width);\r\n    }\r\n\r\n//\r\n// copy()\r\n// Copies internal state of ARC4 to or from a plain object.\r\n//\r\n    function copy(f, t) {\r\n        t.i = f.i;\r\n        t.j = f.j;\r\n        t.S = f.S.slice();\r\n        return t;\r\n    };\r\n\r\n//\r\n// flatten()\r\n// Converts an object tree to nested arrays of strings.\r\n//\r\n    function flatten(obj, depth) {\r\n        var result = [], typ = (typeof obj), prop;\r\n        if (depth && typ == 'object') {\r\n            for (prop in obj) {\r\n                try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\r\n            }\r\n        }\r\n        return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\r\n    }\r\n\r\n//\r\n// mixkey()\r\n// Mixes a string seed into a key that is an array of integers, and\r\n// returns a shortened string seed that is equivalent to the result key.\r\n//\r\n    function mixkey(seed, key) {\r\n        var stringseed = seed + '', smear, j = 0;\r\n        while (j < stringseed.length) {\r\n            key[mask & j] =\r\n                mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\r\n        }\r\n        return tostring(key);\r\n    }\r\n\r\n//\r\n// autoseed()\r\n// Returns an object for autoseeding, using window.crypto and Node crypto\r\n// module if available.\r\n//\r\n    function autoseed() {\r\n        try {\r\n            if (nodecrypto) { return tostring(nodecrypto.randomBytes(width)); }\r\n            var out = new Uint8Array(width);\r\n            (global.crypto || global.msCrypto).getRandomValues(out);\r\n            return tostring(out);\r\n        } catch (e) {\r\n            var browser = global.navigator,\r\n                plugins = browser && browser.plugins;\r\n            return [+new Date, global, plugins, global.screen, tostring(pool)];\r\n        }\r\n    }\r\n\r\n//\r\n// tostring()\r\n// Converts an array of charcodes to a string\r\n//\r\n    function tostring(a) {\r\n        return String.fromCharCode.apply(0, a);\r\n    }\r\n\r\n//\r\n// When seedrandom.js is loaded, we immediately mix a few bits\r\n// from the built-in RNG into the entropy pool.  Because we do\r\n// not want to interfere with deterministic PRNG state later,\r\n// seedrandom will not call math.random on its own again after\r\n// initialization.\r\n//\r\n    mixkey(math.random(), pool);\r\n\r\n//\r\n// Nodejs and AMD support: export the implementation as a module using\r\n// either convention.\r\n//\r\n\r\n// End anonymous scope, and pass initial values.\r\n})(\r\n    [],     // pool: entropy pool starts empty\r\n    BMMath    // math: package containing random, pow, and seedrandom\r\n);\nvar BezierFactory = (function(){\r\n    /**\r\n     * BezierEasing - use bezier curve for transition easing function\r\n     * by Gaëtan Renaudeau 2014 - 2015 – MIT License\r\n     *\r\n     * Credits: is based on Firefox's nsSMILKeySpline.cpp\r\n     * Usage:\r\n     * var spline = BezierEasing([ 0.25, 0.1, 0.25, 1.0 ])\r\n     * spline.get(x) => returns the easing value | x must be in [0, 1] range\r\n     *\r\n     */\r\n\r\n        var ob = {};\r\n    ob.getBezierEasing = getBezierEasing;\r\n    var beziers = {};\r\n\r\n    function getBezierEasing(a,b,c,d,nm){\r\n        var str = nm || ('bez_' + a+'_'+b+'_'+c+'_'+d).replace(/\\./g, 'p');\r\n        if(beziers[str]){\r\n            return beziers[str];\r\n        }\r\n        var bezEasing = new BezierEasing([a,b,c,d]);\r\n        beziers[str] = bezEasing;\r\n        return bezEasing;\r\n    }\r\n\r\n// These values are established by empiricism with tests (tradeoff: performance VS precision)\r\n    var NEWTON_ITERATIONS = 4;\r\n    var NEWTON_MIN_SLOPE = 0.001;\r\n    var SUBDIVISION_PRECISION = 0.0000001;\r\n    var SUBDIVISION_MAX_ITERATIONS = 10;\r\n\r\n    var kSplineTableSize = 11;\r\n    var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\r\n\r\n    var float32ArraySupported = typeof Float32Array === \"function\";\r\n\r\n    function A (aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }\r\n    function B (aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }\r\n    function C (aA1)      { return 3.0 * aA1; }\r\n\r\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\r\n    function calcBezier (aT, aA1, aA2) {\r\n        return ((A(aA1, aA2)*aT + B(aA1, aA2))*aT + C(aA1))*aT;\r\n    }\r\n\r\n// Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\r\n    function getSlope (aT, aA1, aA2) {\r\n        return 3.0 * A(aA1, aA2)*aT*aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\r\n    }\r\n\r\n    function binarySubdivide (aX, aA, aB, mX1, mX2) {\r\n        var currentX, currentT, i = 0;\r\n        do {\r\n            currentT = aA + (aB - aA) / 2.0;\r\n            currentX = calcBezier(currentT, mX1, mX2) - aX;\r\n            if (currentX > 0.0) {\r\n                aB = currentT;\r\n            } else {\r\n                aA = currentT;\r\n            }\r\n        } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\r\n        return currentT;\r\n    }\r\n\r\n    function newtonRaphsonIterate (aX, aGuessT, mX1, mX2) {\r\n        for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\r\n            var currentSlope = getSlope(aGuessT, mX1, mX2);\r\n            if (currentSlope === 0.0) return aGuessT;\r\n            var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\r\n            aGuessT -= currentX / currentSlope;\r\n        }\r\n        return aGuessT;\r\n    }\r\n\r\n    /**\r\n     * points is an array of [ mX1, mY1, mX2, mY2 ]\r\n     */\r\n    function BezierEasing (points) {\r\n        this._p = points;\r\n        this._mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\r\n        this._precomputed = false;\r\n\r\n        this.get = this.get.bind(this);\r\n    }\r\n\r\n    BezierEasing.prototype = {\r\n\r\n        get: function (x) {\r\n            var mX1 = this._p[0],\r\n                mY1 = this._p[1],\r\n                mX2 = this._p[2],\r\n                mY2 = this._p[3];\r\n            if (!this._precomputed) this._precompute();\r\n            if (mX1 === mY1 && mX2 === mY2) return x; // linear\r\n            // Because JavaScript number are imprecise, we should guarantee the extremes are right.\r\n            if (x === 0) return 0;\r\n            if (x === 1) return 1;\r\n            return calcBezier(this._getTForX(x), mY1, mY2);\r\n        },\r\n\r\n        // Private part\r\n\r\n        _precompute: function () {\r\n            var mX1 = this._p[0],\r\n                mY1 = this._p[1],\r\n                mX2 = this._p[2],\r\n                mY2 = this._p[3];\r\n            this._precomputed = true;\r\n            if (mX1 !== mY1 || mX2 !== mY2)\r\n                this._calcSampleValues();\r\n        },\r\n\r\n        _calcSampleValues: function () {\r\n            var mX1 = this._p[0],\r\n                mX2 = this._p[2];\r\n            for (var i = 0; i < kSplineTableSize; ++i) {\r\n                this._mSampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * getTForX chose the fastest heuristic to determine the percentage value precisely from a given X projection.\r\n         */\r\n        _getTForX: function (aX) {\r\n            var mX1 = this._p[0],\r\n                mX2 = this._p[2],\r\n                mSampleValues = this._mSampleValues;\r\n\r\n            var intervalStart = 0.0;\r\n            var currentSample = 1;\r\n            var lastSample = kSplineTableSize - 1;\r\n\r\n            for (; currentSample !== lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {\r\n                intervalStart += kSampleStepSize;\r\n            }\r\n            --currentSample;\r\n\r\n            // Interpolate to provide an initial guess for t\r\n            var dist = (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample+1] - mSampleValues[currentSample]);\r\n            var guessForT = intervalStart + dist * kSampleStepSize;\r\n\r\n            var initialSlope = getSlope(guessForT, mX1, mX2);\r\n            if (initialSlope >= NEWTON_MIN_SLOPE) {\r\n                return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\r\n            } else if (initialSlope === 0.0) {\r\n                return guessForT;\r\n            } else {\r\n                return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\r\n            }\r\n        }\r\n    };\r\n\r\n    return ob;\r\n\r\n}());\n(function () {\r\n    var lastTime = 0;\r\n    var vendors = ['ms', 'moz', 'webkit', 'o'];\r\n    for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\r\n        window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\r\n        window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\r\n    }\r\n    if(!window.requestAnimationFrame)\r\n        window.requestAnimationFrame = function (callback, element) {\r\n            var currTime = new Date().getTime();\r\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n            var id = setTimeout(function () {\r\n                    callback(currTime + timeToCall);\r\n                },\r\n                timeToCall);\r\n            lastTime = currTime + timeToCall;\r\n            return id;\r\n        };\r\n    if(!window.cancelAnimationFrame)\r\n        window.cancelAnimationFrame = function (id) {\r\n            clearTimeout(id);\r\n        };\r\n}());\r\n\nfunction createElement(parent,child,params){\r\n    if(child){\r\n        child.prototype = Object.create(parent.prototype);\r\n        child.prototype.constructor = child;\r\n        child.prototype._parent = parent.prototype;\r\n    }else{\r\n        var instance = Object.create(parent.prototype,params);\r\n        var getType = {};\r\n        if(instance && getType.toString.call(instance.init) === '[object Function]'){\r\n            instance.init();\r\n        }\r\n        return instance;\r\n    }\r\n}\r\n\r\nfunction extendPrototype(source,destination){\r\n    for (var attr in source.prototype) {\r\n        if (source.prototype.hasOwnProperty(attr)) destination.prototype[attr] = source.prototype[attr];\r\n    }\r\n}\nfunction bezFunction(){\r\n\r\n    var easingFunctions = [];\r\n    var math = Math;\r\n\r\n    function pointOnLine2D(x1,y1, x2,y2, x3,y3){\r\n        var det1 = (x1*y2) + (y1*x3) + (x2*y3) - (x3*y2) - (y3*x1) - (x2*y1);\r\n        return det1 > -0.0001 && det1 < 0.0001;\r\n    }\r\n\r\n    function pointOnLine3D(x1,y1,z1, x2,y2,z2, x3,y3,z3){\r\n        if(z1 === 0 && z2 === 0 && z3 === 0) {\r\n            return pointOnLine2D(x1,y1, x2,y2, x3,y3);\r\n        }\r\n        var dist1 = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2) + Math.pow(z2 - z1, 2));\r\n        var dist2 = Math.sqrt(Math.pow(x3 - x1, 2) + Math.pow(y3 - y1, 2) + Math.pow(z3 - z1, 2));\r\n        var dist3 = Math.sqrt(Math.pow(x3 - x2, 2) + Math.pow(y3 - y2, 2) + Math.pow(z3 - z2, 2));\r\n        var diffDist;\r\n        if(dist1 > dist2){\r\n            if(dist1 > dist3){\r\n                diffDist = dist1 - dist2 - dist3;\r\n            } else {\r\n                diffDist = dist3 - dist2 - dist1;\r\n            }\r\n        } else if(dist3 > dist2){\r\n            diffDist = dist3 - dist2 - dist1;\r\n        } else {\r\n            diffDist = dist2 - dist1 - dist3;\r\n        }\r\n        return diffDist > -0.0001 && diffDist < 0.0001;\r\n    }\r\n\r\n    /*function getEasingCurve(aa,bb,cc,dd,encodedFuncName) {\r\n        if(!encodedFuncName){\r\n            encodedFuncName = ('bez_' + aa+'_'+bb+'_'+cc+'_'+dd).replace(/\\./g, 'p');\r\n        }\r\n        if(easingFunctions[encodedFuncName]){\r\n            return easingFunctions[encodedFuncName];\r\n        }\r\n        var A0, B0, C0;\r\n        var A1, B1, C1;\r\n        easingFunctions[encodedFuncName] = function(tt) {\r\n            var x = tt;\r\n            var i = 0, z;\r\n            while (++i < 20) {\r\n                C0 = 3 * aa;\r\n                B0 = 3 * (cc - aa) - C0;\r\n                A0 = 1 - C0 - B0;\r\n                z = (x * (C0 + x * (B0 + x * A0))) - tt;\r\n                if (bm_abs(z) < 1e-3) break;\r\n                x -= z / (C0 + x * (2 * B0 + 3 * A0 * x));\r\n            }\r\n            C1 = 3 * bb;\r\n            B1 = 3 * (dd - bb) - C1;\r\n            A1 = 1 - C1 - B1;\r\n            var polyB = x * (C1 + x * (B1 + x * A1));\r\n            //return c * polyB + b;\r\n            return polyB;\r\n        };\r\n        return easingFunctions[encodedFuncName];\r\n    }*/\r\n    var getBezierLength = (function(){\r\n\r\n        function Segment(l,p){\r\n            this.l = l;\r\n            this.p = p;\r\n        }\r\n\r\n        return function(pt1,pt2,pt3,pt4){\r\n            var curveSegments = defaultCurveSegments;\r\n            var k;\r\n            var i, len;\r\n            var ptCoord,perc,addedLength = 0;\r\n            var ptDistance;\r\n            var point = [],lastPoint = [];\r\n            var lengthData = {\r\n                addedLength: 0,\r\n                segments: []\r\n            };\r\n            len = pt3.length;\r\n            for(k=0;k<curveSegments;k+=1){\r\n                perc = k/(curveSegments-1);\r\n                ptDistance = 0;\r\n                for(i=0;i<len;i+=1){\r\n                    ptCoord = bm_pow(1-perc,3)*pt1[i]+3*bm_pow(1-perc,2)*perc*pt3[i]+3*(1-perc)*bm_pow(perc,2)*pt4[i]+bm_pow(perc,3)*pt2[i];\r\n                    point[i] = ptCoord;\r\n                    if(lastPoint[i] !== null){\r\n                        ptDistance += bm_pow(point[i] - lastPoint[i],2);\r\n                    }\r\n                    lastPoint[i] = point[i];\r\n                }\r\n                if(ptDistance){\r\n                    ptDistance = bm_sqrt(ptDistance);\r\n                    addedLength += ptDistance;\r\n                }\r\n                lengthData.segments.push(new Segment(addedLength,perc));\r\n            }\r\n            lengthData.addedLength = addedLength;\r\n            return lengthData;\r\n        };\r\n    }());\r\n\r\n    function getSegmentsLength(shapeData) {\r\n        var closed = shapeData.c;\r\n        var pathV = shapeData.v;\r\n        var pathO = shapeData.o;\r\n        var pathI = shapeData.i;\r\n        var i, len = shapeData._length;\r\n        var lengths = [];\r\n        var totalLength = 0;\r\n        for(i=0;i<len-1;i+=1){\r\n            lengths[i] = getBezierLength(pathV[i],pathV[i+1],pathO[i],pathI[i+1]);\r\n            totalLength += lengths[i].addedLength;\r\n        }\r\n        if(closed){\r\n            lengths[i] = getBezierLength(pathV[i],pathV[0],pathO[i],pathI[0]);\r\n            totalLength += lengths[i].addedLength;\r\n        }\r\n        return {lengths:lengths,totalLength:totalLength};\r\n    }\r\n\r\n    function BezierData(length){\r\n        this.segmentLength = 0;\r\n        this.points = new Array(length);\r\n    }\r\n\r\n    function PointData(partial,point){\r\n        this.partialLength = partial;\r\n        this.point = point;\r\n    }\r\n\r\n    var buildBezierData = (function(){\r\n\r\n        var storedData = {};\r\n\r\n        return function (keyData){\r\n            var pt1 = keyData.s;\r\n            var pt2 = keyData.e;\r\n            var pt3 = keyData.to;\r\n            var pt4 = keyData.ti;\r\n            var bezierName = (pt1.join('_')+'_'+pt2.join('_')+'_'+pt3.join('_')+'_'+pt4.join('_')).replace(/\\./g, 'p');\r\n            if(storedData[bezierName]){\r\n                keyData.bezierData = storedData[bezierName];\r\n                return;\r\n            }\r\n        var curveSegments = defaultCurveSegments;\r\n        var k, i, len;\r\n            var ptCoord,perc,addedLength = 0;\r\n            var ptDistance;\r\n            var point,lastPoint = null;\r\n            if(pt1.length === 2 && (pt1[0] != pt2[0] || pt1[1] != pt2[1]) && pointOnLine2D(pt1[0],pt1[1],pt2[0],pt2[1],pt1[0]+pt3[0],pt1[1]+pt3[1]) && pointOnLine2D(pt1[0],pt1[1],pt2[0],pt2[1],pt2[0]+pt4[0],pt2[1]+pt4[1])){\r\n                curveSegments = 2;\r\n            }\r\n            var bezierData = new BezierData(curveSegments);\r\n            len = pt3.length;\r\n            for(k=0;k<curveSegments;k+=1){\r\n            point = new Array(len);\r\n                perc = k/(curveSegments-1);\r\n                ptDistance = 0;\r\n                for(i=0;i<len;i+=1){\r\n                ptCoord = bm_pow(1-perc,3)*pt1[i]+3*bm_pow(1-perc,2)*perc*(pt1[i] + pt3[i])+3*(1-perc)*bm_pow(perc,2)*(pt2[i] + pt4[i])+bm_pow(perc,3)*pt2[i];\r\n                point[i] = ptCoord;\r\n                    if(lastPoint !== null){\r\n                    ptDistance += bm_pow(point[i] - lastPoint[i],2);\r\n                    }\r\n                }\r\n            ptDistance = bm_sqrt(ptDistance);\r\n                addedLength += ptDistance;\r\n                bezierData.points[k] = new PointData(ptDistance,point);\r\n                lastPoint = point;\r\n            }\r\n            bezierData.segmentLength = addedLength;\r\n            keyData.bezierData = bezierData;\r\n            storedData[bezierName] = bezierData;\r\n\r\n        }\r\n    }());\r\n\r\n    function getDistancePerc(perc,bezierData){\r\n        var segments = bezierData.segments;\r\n        var len = segments.length;\r\n        var initPos = bm_floor((len-1)*perc);\r\n        var lengthPos = perc*bezierData.addedLength;\r\n        var lPerc = 0;\r\n        if(lengthPos == segments[initPos].l){\r\n            return segments[initPos].p;\r\n        }else{\r\n            var dir = segments[initPos].l > lengthPos ? -1 : 1;\r\n            var flag = true;\r\n            while(flag){\r\n                if(segments[initPos].l <= lengthPos && segments[initPos+1].l > lengthPos){\r\n                    lPerc = (lengthPos - segments[initPos].l)/(segments[initPos+1].l-segments[initPos].l);\r\n                    flag = false;\r\n                }else{\r\n                    initPos += dir;\r\n                }\r\n                if(initPos < 0 || initPos >= len - 1){\r\n                    flag = false;\r\n                }\r\n            }\r\n            return segments[initPos].p + (segments[initPos+1].p - segments[initPos].p)*lPerc;\r\n        }\r\n    }\r\n\r\n    function SegmentPoints(){\r\n        this.pt1 = new Array(2);\r\n        this.pt2 = new Array(2);\r\n        this.pt3 = new Array(2);\r\n        this.pt4 = new Array(2);\r\n    }\r\n\r\n    function getPointInSegment(pt1, pt2, pt3, pt4, percent, bezierData) {\r\n        var t1 = getDistancePerc(percent,bezierData);\r\n        var u0 = 1;\r\n        var u1 = 1 - t1;\r\n        var ptX = Math.round((u1*u1*u1* pt1[0] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[0] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[0] + t1*t1*t1* pt2[0])* 1000) / 1000;\r\n        var ptY = Math.round((u1*u1*u1* pt1[1] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[1] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[1] + t1*t1*t1* pt2[1])* 1000) / 1000;\r\n        return [ptX, ptY];\r\n    }\r\n\r\n    function getNewSegment(pt1,pt2,pt3,pt4,startPerc,endPerc, bezierData){\r\n\r\n        var pts = new SegmentPoints();\r\n        startPerc = startPerc < 0 ? 0 : startPerc > 1 ? 1 : startPerc;\r\n        var t0 = getDistancePerc(startPerc,bezierData);\r\n        endPerc = endPerc > 1 ? 1 : endPerc;\r\n        var t1 = getDistancePerc(endPerc,bezierData);\r\n        var i, len = pt1.length;\r\n        var u0 = 1 - t0;\r\n        var u1 = 1 - t1;\r\n        //Math.round(num * 100) / 100\r\n        for(i=0;i<len;i+=1){\r\n            pts.pt1[i] =  Math.round((u0*u0*u0* pt1[i] + (t0*u0*u0 + u0*t0*u0 + u0*u0*t0) * pt3[i] + (t0*t0*u0 + u0*t0*t0 + t0*u0*t0)* pt4[i] + t0*t0*t0* pt2[i])* 1000) / 1000;\r\n            pts.pt3[i] = Math.round((u0*u0*u1*pt1[i] + (t0*u0*u1 + u0*t0*u1 + u0*u0*t1)* pt3[i] + (t0*t0*u1 + u0*t0*t1 + t0*u0*t1)* pt4[i] + t0*t0*t1* pt2[i])* 1000) / 1000;\r\n            pts.pt4[i] = Math.round((u0*u1*u1* pt1[i] + (t0*u1*u1 + u0*t1*u1 + u0*u1*t1)* pt3[i] + (t0*t1*u1 + u0*t1*t1 + t0*u1*t1)* pt4[i] + t0*t1*t1* pt2[i])* 1000) / 1000;\r\n            pts.pt2[i] = Math.round((u1*u1*u1* pt1[i] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[i] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[i] + t1*t1*t1* pt2[i])* 1000) / 1000;\r\n        }\r\n        return pts;\r\n    }\r\n\r\n    return {\r\n        //getEasingCurve : getEasingCurve,\r\n        getBezierLength : getBezierLength,\r\n        getSegmentsLength : getSegmentsLength,\r\n        getNewSegment : getNewSegment,\r\n        getPointInSegment : getPointInSegment,\r\n        buildBezierData : buildBezierData,\r\n        pointOnLine2D : pointOnLine2D,\r\n        pointOnLine3D : pointOnLine3D\r\n    };\r\n}\r\n\r\nvar bez = bezFunction();\nfunction dataFunctionManager(){\r\n\r\n    //var tCanvasHelper = document.createElement('canvas').getContext('2d');\r\n\r\n    function completeLayers(layers, comps, fontManager){\r\n        var layerData;\r\n        var animArray, lastFrame;\r\n        var i, len = layers.length;\r\n        var j, jLen, k, kLen;\r\n        for(i=0;i<len;i+=1){\r\n            layerData = layers[i];\r\n            if(!('ks' in layerData) || layerData.completed){\r\n                continue;\r\n            }\r\n            layerData.completed = true;\r\n            if(layerData.tt){\r\n                layers[i-1].td = layerData.tt;\r\n            }\r\n            animArray = [];\r\n            lastFrame = -1;\r\n            if(layerData.hasMask){\r\n                var maskProps = layerData.masksProperties;\r\n                jLen = maskProps.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    if(maskProps[j].pt.k.i){\r\n                        convertPathsToAbsoluteValues(maskProps[j].pt.k);\r\n                    }else{\r\n                        kLen = maskProps[j].pt.k.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            if(maskProps[j].pt.k[k].s){\r\n                                convertPathsToAbsoluteValues(maskProps[j].pt.k[k].s[0]);\r\n                            }\r\n                            if(maskProps[j].pt.k[k].e){\r\n                                convertPathsToAbsoluteValues(maskProps[j].pt.k[k].e[0]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(layerData.ty===0){\r\n                layerData.layers = findCompLayers(layerData.refId, comps);\r\n                completeLayers(layerData.layers,comps, fontManager);\r\n            }else if(layerData.ty === 4){\r\n                completeShapes(layerData.shapes);\r\n            }else if(layerData.ty == 5){\r\n                completeText(layerData, fontManager);\r\n            }\r\n        }\r\n    }\r\n\r\n    function findCompLayers(id,comps){\r\n        var i = 0, len = comps.length;\r\n        while(i<len){\r\n            if(comps[i].id === id){\r\n                if(!comps[i].layers.__used) {\r\n                    comps[i].layers.__used = true;\r\n                    return comps[i].layers;\r\n                }\r\n                return JSON.parse(JSON.stringify(comps[i].layers));\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    function completeShapes(arr){\r\n        var i, len = arr.length;\r\n        var j, jLen;\r\n        var hasPaths = false;\r\n        for(i=len-1;i>=0;i-=1){\r\n            if(arr[i].ty == 'sh'){\r\n                if(arr[i].ks.k.i){\r\n                    convertPathsToAbsoluteValues(arr[i].ks.k);\r\n                }else{\r\n                    jLen = arr[i].ks.k.length;\r\n                    for(j=0;j<jLen;j+=1){\r\n                        if(arr[i].ks.k[j].s){\r\n                            convertPathsToAbsoluteValues(arr[i].ks.k[j].s[0]);\r\n                        }\r\n                        if(arr[i].ks.k[j].e){\r\n                            convertPathsToAbsoluteValues(arr[i].ks.k[j].e[0]);\r\n                        }\r\n                    }\r\n                }\r\n                hasPaths = true;\r\n            }else if(arr[i].ty == 'gr'){\r\n                completeShapes(arr[i].it);\r\n            }\r\n        }\r\n        /*if(hasPaths){\r\n            //mx: distance\r\n            //ss: sensitivity\r\n            //dc: decay\r\n            arr.splice(arr.length-1,0,{\r\n                \"ty\": \"ms\",\r\n                \"mx\":20,\r\n                \"ss\":10,\r\n                 \"dc\":0.001,\r\n                \"maxDist\":200\r\n            });\r\n        }*/\r\n    }\r\n\r\n    function convertPathsToAbsoluteValues(path){\r\n        var i, len = path.i.length;\r\n        for(i=0;i<len;i+=1){\r\n            path.i[i][0] += path.v[i][0];\r\n            path.i[i][1] += path.v[i][1];\r\n            path.o[i][0] += path.v[i][0];\r\n            path.o[i][1] += path.v[i][1];\r\n        }\r\n    }\r\n\r\n    function checkVersion(minimum,animVersionString){\r\n        var animVersion = animVersionString ? animVersionString.split('.') : [100,100,100];\r\n        if(minimum[0]>animVersion[0]){\r\n            return true;\r\n        } else if(animVersion[0] > minimum[0]){\r\n            return false;\r\n        }\r\n        if(minimum[1]>animVersion[1]){\r\n            return true;\r\n        } else if(animVersion[1] > minimum[1]){\r\n            return false;\r\n        }\r\n        if(minimum[2]>animVersion[2]){\r\n            return true;\r\n        } else if(animVersion[2] > minimum[2]){\r\n            return false;\r\n        }\r\n    }\r\n\r\n    var checkText = (function(){\r\n        var minimumVersion = [4,4,14];\r\n\r\n        function updateTextLayer(textLayer){\r\n            var documentData = textLayer.t.d;\r\n            textLayer.t.d = {\r\n                k: [\r\n                    {\r\n                        s:documentData,\r\n                        t:0\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var i, len = layers.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(layers[i].ty === 5){\r\n                    updateTextLayer(layers[i]);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }())\r\n\r\n    var checkChars = (function() {\r\n        var minimumVersion = [4,7,99];\r\n        return function (animationData){\r\n            if(animationData.chars && !checkVersion(minimumVersion,animationData.v)){\r\n                var i, len = animationData.chars.length, j, jLen, k, kLen;\r\n                var pathData, paths;\r\n                for(i = 0; i < len; i += 1) {\r\n                    if(animationData.chars[i].data && animationData.chars[i].data.shapes) {\r\n                        paths = animationData.chars[i].data.shapes[0].it;\r\n                        jLen = paths.length;\r\n\r\n                        for(j = 0; j < jLen; j += 1) {\r\n                            pathData = paths[j].ks.k;\r\n                            if(!pathData.__converted) {\r\n                                convertPathsToAbsoluteValues(paths[j].ks.k);\r\n                                pathData.__converted = true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }())\r\n\r\n    var checkColors = (function(){\r\n        var minimumVersion = [4,1,9];\r\n\r\n        function iterateShapes(shapes){\r\n            var i, len = shapes.length;\r\n            var j, jLen;\r\n            for(i=0;i<len;i+=1){\r\n                if(shapes[i].ty === 'gr'){\r\n                    iterateShapes(shapes[i].it);\r\n                }else if(shapes[i].ty === 'fl' || shapes[i].ty === 'st'){\r\n                    if(shapes[i].c.k && shapes[i].c.k[0].i){\r\n                        jLen = shapes[i].c.k.length;\r\n                        for(j=0;j<jLen;j+=1){\r\n                            if(shapes[i].c.k[j].s){\r\n                                shapes[i].c.k[j].s[0] /= 255;\r\n                                shapes[i].c.k[j].s[1] /= 255;\r\n                                shapes[i].c.k[j].s[2] /= 255;\r\n                                shapes[i].c.k[j].s[3] /= 255;\r\n                            }\r\n                            if(shapes[i].c.k[j].e){\r\n                                shapes[i].c.k[j].e[0] /= 255;\r\n                                shapes[i].c.k[j].e[1] /= 255;\r\n                                shapes[i].c.k[j].e[2] /= 255;\r\n                                shapes[i].c.k[j].e[3] /= 255;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        shapes[i].c.k[0] /= 255;\r\n                        shapes[i].c.k[1] /= 255;\r\n                        shapes[i].c.k[2] /= 255;\r\n                        shapes[i].c.k[3] /= 255;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var i, len = layers.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(layers[i].ty === 4){\r\n                    iterateShapes(layers[i].shapes);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }());\r\n\r\n    var checkShapes = (function(){\r\n        var minimumVersion = [4,4,18];\r\n\r\n\r\n\r\n        function completeShapes(arr){\r\n            var i, len = arr.length;\r\n            var j, jLen;\r\n            var hasPaths = false;\r\n            for(i=len-1;i>=0;i-=1){\r\n                if(arr[i].ty == 'sh'){\r\n                    if(arr[i].ks.k.i){\r\n                        arr[i].ks.k.c = arr[i].closed;\r\n                    }else{\r\n                        jLen = arr[i].ks.k.length;\r\n                        for(j=0;j<jLen;j+=1){\r\n                            if(arr[i].ks.k[j].s){\r\n                                arr[i].ks.k[j].s[0].c = arr[i].closed;\r\n                            }\r\n                            if(arr[i].ks.k[j].e){\r\n                                arr[i].ks.k[j].e[0].c = arr[i].closed;\r\n                            }\r\n                        }\r\n                    }\r\n                    hasPaths = true;\r\n                }else if(arr[i].ty == 'gr'){\r\n                    completeShapes(arr[i].it);\r\n                }\r\n            }\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var layerData;\r\n            var i, len = layers.length;\r\n            var j, jLen, k, kLen;\r\n            for(i=0;i<len;i+=1){\r\n                layerData = layers[i];\r\n                if(layerData.hasMask){\r\n                    var maskProps = layerData.masksProperties;\r\n                    jLen = maskProps.length;\r\n                    for(j=0;j<jLen;j+=1){\r\n                        if(maskProps[j].pt.k.i){\r\n                            maskProps[j].pt.k.c = maskProps[j].cl;\r\n                        }else{\r\n                            kLen = maskProps[j].pt.k.length;\r\n                            for(k=0;k<kLen;k+=1){\r\n                                if(maskProps[j].pt.k[k].s){\r\n                                    maskProps[j].pt.k[k].s[0].c = maskProps[j].cl;\r\n                                }\r\n                                if(maskProps[j].pt.k[k].e){\r\n                                    maskProps[j].pt.k[k].e[0].c = maskProps[j].cl;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if(layerData.ty === 4){\r\n                    completeShapes(layerData.shapes);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }());\r\n\r\n    /*function blitPaths(path){\r\n        var i, len = path.i.length;\r\n        for(i=0;i<len;i+=1){\r\n            path.i[i][0] /= blitter;\r\n            path.i[i][1] /= blitter;\r\n            path.o[i][0] /= blitter;\r\n            path.o[i][1] /= blitter;\r\n            path.v[i][0] /= blitter;\r\n            path.v[i][1] /= blitter;\r\n        }\r\n    }\r\n\r\n    function blitShapes(arr){\r\n        var i, len = arr.length;\r\n        var j, jLen;\r\n        var hasPaths = false;\r\n        for(i=len-1;i>=0;i-=1){\r\n            if(arr[i].ty == 'sh'){\r\n                if(arr[i].ks.k.i){\r\n                    blitPaths(arr[i].ks.k);\r\n                }else{\r\n                    jLen = arr[i].ks.k.length;\r\n                    for(j=0;j<jLen;j+=1){\r\n                        if(arr[i].ks.k[j].s){\r\n                            blitPaths(arr[i].ks.k[j].s[0]);\r\n                        }\r\n                        if(arr[i].ks.k[j].e){\r\n                            blitPaths(arr[i].ks.k[j].e[0]);\r\n                        }\r\n                    }\r\n                }\r\n                hasPaths = true;\r\n            }else if(arr[i].ty == 'gr'){\r\n                blitShapes(arr[i].it);\r\n            }else if(arr[i].ty == 'rc'){\r\n                blitProperty(arr[i].p);\r\n                blitProperty(arr[i].s);\r\n            }else if(arr[i].ty == 'st'){\r\n                blitProperty(arr[i].w);\r\n            }else if(arr[i].ty == 'tr'){\r\n                blitProperty(arr[i].p);\r\n                blitProperty(arr[i].sk);\r\n                blitProperty(arr[i].a);\r\n            }else if(arr[i].ty == 'el'){\r\n                blitProperty(arr[i].p);\r\n                blitProperty(arr[i].s);\r\n            }else if(arr[i].ty == 'rd'){\r\n                blitProperty(arr[i].r);\r\n            }else{\r\n\r\n                //console.log(arr[i].ty );\r\n            }\r\n        }\r\n    }\r\n\r\n    function blitText(data, fontManager){\r\n\r\n    }\r\n\r\n    function blitValue(val){\r\n        if(typeof(val) === 'number'){\r\n            val /= blitter;\r\n        } else {\r\n            var i = val.length-1;\r\n            while(i>=0){\r\n                val[i] /= blitter;\r\n                i-=1;\r\n            }\r\n        }\r\n        return val;\r\n    }\r\n\r\n    function blitProperty(data){\r\n        if(!data.k.length){\r\n            data.k = blitValue(data.k);\r\n        }else if(typeof(data.k[0]) === 'number'){\r\n            data.k = blitValue(data.k);\r\n        } else {\r\n            var i, len = data.k.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(data.k[i].s){\r\n                    //console.log('pre S: ', data.k[i].s);\r\n                    data.k[i].s = blitValue(data.k[i].s);\r\n                    //console.log('post S: ', data.k[i].s);\r\n                }\r\n                if(data.k[i].e){\r\n                    //console.log('pre E: ', data.k[i].e);\r\n                    data.k[i].e = blitValue(data.k[i].e);\r\n                    //console.log('post E: ', data.k[i].e);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function blitLayers(layers,comps, fontManager){\r\n        var layerData;\r\n        var animArray, lastFrame;\r\n        var i, len = layers.length;\r\n        var j, jLen, k, kLen;\r\n        for(i=0;i<len;i+=1){\r\n            layerData = layers[i];\r\n            if(!('ks' in layerData)){\r\n                continue;\r\n            }\r\n            blitProperty(layerData.ks.a);\r\n            blitProperty(layerData.ks.p);\r\n            layerData.completed = true;\r\n            if(layerData.tt){\r\n                layers[i-1].td = layerData.tt;\r\n            }\r\n            animArray = [];\r\n            lastFrame = -1;\r\n            if(layerData.hasMask){\r\n                var maskProps = layerData.masksProperties;\r\n                jLen = maskProps.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    if(maskProps[j].pt.k.i){\r\n                        blitPaths(maskProps[j].pt.k);\r\n                    }else{\r\n                        kLen = maskProps[j].pt.k.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            if(maskProps[j].pt.k[k].s){\r\n                                blitPaths(maskProps[j].pt.k[k].s[0]);\r\n                            }\r\n                            if(maskProps[j].pt.k[k].e){\r\n                                blitPaths(maskProps[j].pt.k[k].e[0]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(layerData.ty===0){\r\n                layerData.w = Math.round(layerData.w/blitter);\r\n                layerData.h = Math.round(layerData.h/blitter);\r\n                blitLayers(layerData.layers,comps, fontManager);\r\n            }else if(layerData.ty === 4){\r\n                blitShapes(layerData.shapes);\r\n            }else if(layerData.ty == 5){\r\n                blitText(layerData, fontManager);\r\n            }else if(layerData.ty == 1){\r\n                layerData.sh /= blitter;\r\n                layerData.sw /= blitter;\r\n            } else {\r\n            }\r\n        }\r\n    }\r\n\r\n    function blitAnimation(animationData,comps, fontManager){\r\n        blitLayers(animationData.layers,comps, fontManager);\r\n    }*/\r\n\r\n    function completeData(animationData, fontManager){\r\n        if(animationData.__complete){\r\n            return;\r\n        }\r\n        checkColors(animationData);\r\n        checkText(animationData);\r\n        checkChars(animationData);\r\n        checkShapes(animationData);\r\n        completeLayers(animationData.layers, animationData.assets, fontManager);\r\n        animationData.__complete = true;\r\n        //blitAnimation(animationData, animationData.assets, fontManager);\r\n    }\r\n\r\n    function completeText(data, fontManager){\r\n        if(data.t.a.length === 0 && !('m' in data.t.p)){\r\n            data.singleShape = true;\r\n        }\r\n    }\r\n\r\n    var moduleOb = {};\r\n    moduleOb.completeData = completeData;\r\n\r\n    return moduleOb;\r\n}\r\n\r\nvar dataManager = dataFunctionManager();\nvar FontManager = (function(){\r\n\r\n    var maxWaitingTime = 5000;\r\n\r\n    function setUpNode(font, family){\r\n        var parentNode = document.createElement('span');\r\n        parentNode.style.fontFamily    = family;\r\n        var node = document.createElement('span');\r\n        // Characters that vary significantly among different fonts\r\n        node.innerHTML = 'giItT1WQy@!-/#';\r\n        // Visible - so we can measure it - but not on the screen\r\n        parentNode.style.position      = 'absolute';\r\n        parentNode.style.left          = '-10000px';\r\n        parentNode.style.top           = '-10000px';\r\n        // Large font size makes even subtle changes obvious\r\n        parentNode.style.fontSize      = '300px';\r\n        // Reset any font properties\r\n        parentNode.style.fontVariant   = 'normal';\r\n        parentNode.style.fontStyle     = 'normal';\r\n        parentNode.style.fontWeight    = 'normal';\r\n        parentNode.style.letterSpacing = '0';\r\n        parentNode.appendChild(node);\r\n        document.body.appendChild(parentNode);\r\n\r\n        // Remember width with no applied web font\r\n        var width = node.offsetWidth;\r\n        node.style.fontFamily = font + ', '+family;\r\n        return {node:node, w:width, parent:parentNode};\r\n    }\r\n\r\n    function checkLoadedFonts() {\r\n        var i, len = this.fonts.length;\r\n        var node, w;\r\n        var loadedCount = len;\r\n        for(i=0;i<len; i+= 1){\r\n            if(this.fonts[i].loaded){\r\n                loadedCount -= 1;\r\n                continue;\r\n            }\r\n            if(this.fonts[i].fOrigin === 't' || this.fonts[i].origin === 2){\r\n                if(window.Typekit && window.Typekit.load && this.typekitLoaded === 0){\r\n                    this.typekitLoaded = 1;\r\n                    try{window.Typekit.load({\r\n                        async: true,\r\n                        active: function() {\r\n                            this.typekitLoaded = 2;\r\n                        }.bind(this)\r\n                    });}catch(e){}\r\n                }\r\n                if(this.typekitLoaded === 2) {\r\n                    this.fonts[i].loaded = true;\r\n                }\r\n            } else if(this.fonts[i].fOrigin === 'n' || this.fonts[i].origin === 0){\r\n                this.fonts[i].loaded = true;\r\n            } else{\r\n                node = this.fonts[i].monoCase.node;\r\n                w = this.fonts[i].monoCase.w;\r\n                if(node.offsetWidth !== w){\r\n                    loadedCount -= 1;\r\n                    this.fonts[i].loaded = true;\r\n                }else{\r\n                    node = this.fonts[i].sansCase.node;\r\n                    w = this.fonts[i].sansCase.w;\r\n                    if(node.offsetWidth !== w){\r\n                        loadedCount -= 1;\r\n                        this.fonts[i].loaded = true;\r\n                    }\r\n                }\r\n                if(this.fonts[i].loaded){\r\n                    this.fonts[i].sansCase.parent.parentNode.removeChild(this.fonts[i].sansCase.parent);\r\n                    this.fonts[i].monoCase.parent.parentNode.removeChild(this.fonts[i].monoCase.parent);\r\n                }\r\n            }\r\n        }\r\n\r\n        if(loadedCount !== 0 && Date.now() - this.initTime < maxWaitingTime){\r\n            setTimeout(checkLoadedFonts.bind(this),20);\r\n        }else{\r\n            setTimeout(function(){this.loaded = true;}.bind(this),0);\r\n\r\n        }\r\n    };\r\n\r\n    function createHelper(def, fontData){\r\n        var tHelper = document.createElementNS(svgNS,'text');\r\n        tHelper.style.fontSize = '100px';\r\n        tHelper.style.fontFamily = fontData.fFamily;\r\n        tHelper.textContent = '1';\r\n        if(fontData.fClass){\r\n            tHelper.style.fontFamily = 'inherit';\r\n            tHelper.className = fontData.fClass;\r\n        } else {\r\n            tHelper.style.fontFamily = fontData.fFamily;\r\n        }\r\n        def.appendChild(tHelper);\r\n        var tCanvasHelper = document.createElement('canvas').getContext('2d');\r\n        tCanvasHelper.font = '100px '+ fontData.fFamily;\r\n        return tCanvasHelper;\r\n    }\r\n\r\n    function addFonts(fontData, defs){\r\n        if(!fontData){\r\n            this.loaded = true;\r\n            return;\r\n        }\r\n        if(this.chars){\r\n            this.loaded = true;\r\n            this.fonts = fontData.list;\r\n            return;\r\n        }\r\n\r\n        var fontArr = fontData.list;\r\n        var i, len = fontArr.length;\r\n        for(i=0; i<len; i+= 1){\r\n            fontArr[i].loaded = false;\r\n            fontArr[i].monoCase = setUpNode(fontArr[i].fFamily,'monospace');\r\n            fontArr[i].sansCase = setUpNode(fontArr[i].fFamily,'sans-serif');\r\n            if(!fontArr[i].fPath) {\r\n                fontArr[i].loaded = true;\r\n            }else if(fontArr[i].fOrigin === 'p' || fontArr[i].origin === 3){\r\n                var s = document.createElement('style');\r\n                s.type = \"text/css\";\r\n                s.innerHTML = \"@font-face {\" + \"font-family: \"+fontArr[i].fFamily+\"; font-style: normal; src: url('\"+fontArr[i].fPath+\"');}\";\r\n                defs.appendChild(s);\r\n            } else if(fontArr[i].fOrigin === 'g' || fontArr[i].origin === 1){\r\n                //<link href='https://fonts.googleapis.com/css?family=Montserrat' rel='stylesheet' type='text/css'>\r\n                var l = document.createElement('link');\r\n                l.type = \"text/css\";\r\n                l.rel = \"stylesheet\";\r\n                l.href = fontArr[i].fPath;\r\n                defs.appendChild(l);\r\n            } else if(fontArr[i].fOrigin === 't' || fontArr[i].origin === 2){\r\n                //<link href='https://fonts.googleapis.com/css?family=Montserrat' rel='stylesheet' type='text/css'>\r\n                var sc = document.createElement('script');\r\n                sc.setAttribute('src',fontArr[i].fPath);\r\n                defs.appendChild(sc);\r\n            }\r\n            fontArr[i].helper = createHelper(defs,fontArr[i]);\r\n            this.fonts.push(fontArr[i]);\r\n        }\r\n        checkLoadedFonts.bind(this)();\r\n    }\r\n\r\n    function addChars(chars){\r\n        if(!chars){\r\n            return;\r\n        }\r\n        if(!this.chars){\r\n            this.chars = [];\r\n        }\r\n        var i, len = chars.length;\r\n        var j, jLen = this.chars.length, found;\r\n        for(i=0;i<len;i+=1){\r\n            j = 0;\r\n            found = false;\r\n            while(j<jLen){\r\n                if(this.chars[j].style === chars[i].style && this.chars[j].fFamily === chars[i].fFamily && this.chars[j].ch === chars[i].ch){\r\n                    found = true;\r\n                }\r\n                j += 1;\r\n            }\r\n            if(!found){\r\n                this.chars.push(chars[i]);\r\n                jLen += 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    function getCharData(char, style, font){\r\n        var i = 0, len = this.chars.length;\r\n        while( i < len) {\r\n            if(this.chars[i].ch === char && this.chars[i].style === style && this.chars[i].fFamily === font){\r\n                return this.chars[i];\r\n            }\r\n            i+= 1;\r\n        }\r\n    }\r\n\r\n    function measureText(char, fontName, size){\r\n        var fontData = this.getFontByName(fontName);\r\n        var tHelper = fontData.helper;\r\n        //tHelper.textContent = char;\r\n        return tHelper.measureText(char).width*size/100;\r\n        //return tHelper.getComputedTextLength()*size/100;\r\n    }\r\n\r\n    function getFontByName(name){\r\n        var i = 0, len = this.fonts.length;\r\n        while(i<len){\r\n            if(this.fonts[i].fName === name) {\r\n                return this.fonts[i];\r\n            }\r\n            i += 1;\r\n        }\r\n        return 'sans-serif';\r\n    }\r\n\r\n    var Font = function(){\r\n        this.fonts = [];\r\n        this.chars = null;\r\n        this.typekitLoaded = 0;\r\n        this.loaded = false;\r\n        this.initTime = Date.now();\r\n    };\r\n    Font.prototype.addChars = addChars;\r\n    Font.prototype.addFonts = addFonts;\r\n    Font.prototype.getCharData = getCharData;\r\n    Font.prototype.getFontByName = getFontByName;\r\n    Font.prototype.measureText = measureText;\r\n\r\n    return Font;\r\n\r\n}());\nvar PropertyFactory = (function(){\r\n\r\n    var initFrame = -999999;\r\n\r\n    function interpolateValue(frameNum, iterationIndex, previousValue, caching){\r\n        var offsetTime = this.offsetTime;\r\n        var newValue;\r\n        if(previousValue.constructor === Array) {\r\n            newValue = Array.apply(null,{length:previousValue.length})\r\n        }\r\n        var i = iterationIndex;\r\n        var len = this.keyframes.length- 1,flag = true;\r\n        var keyData, nextKeyData;\r\n\r\n        while(flag){\r\n            keyData = this.keyframes[i];\r\n            nextKeyData = this.keyframes[i+1];\r\n            if(i == len-1 && frameNum >= nextKeyData.t - offsetTime){\r\n                if(keyData.h){\r\n                    keyData = nextKeyData;\r\n                }\r\n                iterationIndex = 0;\r\n                break;\r\n            }\r\n            if((nextKeyData.t - offsetTime) > frameNum){\r\n                iterationIndex = i;\r\n                break;\r\n            }\r\n            if(i < len - 1){\r\n                i += 1;\r\n            }else{\r\n                iterationIndex = 0;\r\n                flag = false;\r\n            }\r\n        }\r\n\r\n        var k, kLen,perc,jLen, j, fnc;\r\n        if(keyData.to){\r\n\r\n            if(!keyData.bezierData){\r\n                bez.buildBezierData(keyData);\r\n            }\r\n            var bezierData = keyData.bezierData;\r\n            if(frameNum >= nextKeyData.t-offsetTime || frameNum < keyData.t-offsetTime){\r\n                var ind = frameNum >= nextKeyData.t-offsetTime ? bezierData.points.length - 1 : 0;\r\n                kLen = bezierData.points[ind].point.length;\r\n                for(k = 0; k < kLen; k += 1){\r\n                    newValue[k] = bezierData.points[ind].point[k];\r\n                }\r\n                caching._lastBezierData = null;\r\n            }else{\r\n                if(keyData.__fnct){\r\n                    fnc = keyData.__fnct;\r\n                }else{\r\n                    fnc = BezierFactory.getBezierEasing(keyData.o.x,keyData.o.y,keyData.i.x,keyData.i.y,keyData.n).get;\r\n                    keyData.__fnct = fnc;\r\n                }\r\n                perc = fnc((frameNum-(keyData.t-offsetTime))/((nextKeyData.t-offsetTime)-(keyData.t-offsetTime)));\r\n                var distanceInLine = bezierData.segmentLength*perc;\r\n\r\n                var segmentPerc;\r\n                var addedLength =  (caching.lastFrame < frameNum && caching._lastBezierData === bezierData) ? caching._lastAddedLength : 0;\r\n                j =  (caching.lastFrame < frameNum && caching._lastBezierData === bezierData) ? caching._lastPoint : 0;\r\n                flag = true;\r\n                jLen = bezierData.points.length;\r\n                while(flag){\r\n                    addedLength +=bezierData.points[j].partialLength;\r\n                    if(distanceInLine === 0 || perc === 0 || j == bezierData.points.length - 1){\r\n                        kLen = bezierData.points[j].point.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            newValue[k] = bezierData.points[j].point[k];\r\n                        }\r\n                        break;\r\n                    }else if(distanceInLine >= addedLength && distanceInLine < addedLength + bezierData.points[j+1].partialLength){\r\n                        segmentPerc = (distanceInLine-addedLength)/(bezierData.points[j+1].partialLength);\r\n                        kLen = bezierData.points[j].point.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            newValue[k] = bezierData.points[j].point[k] + (bezierData.points[j+1].point[k] - bezierData.points[j].point[k])*segmentPerc;\r\n                        }\r\n                        break;\r\n                    }\r\n                    if(j < jLen - 1){\r\n                        j += 1;\r\n                    }else{\r\n                        flag = false;\r\n                    }\r\n                }\r\n                caching._lastPoint = j;\r\n                caching._lastAddedLength = addedLength - bezierData.points[j].partialLength;\r\n                caching._lastBezierData = bezierData;\r\n            }\r\n        }else{\r\n            var outX,outY,inX,inY, keyValue;\r\n            len = keyData.s.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(keyData.h !== 1){\r\n                    if(frameNum >= nextKeyData.t-offsetTime){\r\n                        perc = 1;\r\n                    }else if(frameNum < keyData.t-offsetTime){\r\n                        perc = 0;\r\n                    }else{\r\n                        if(keyData.o.x.constructor === Array){\r\n                            if(!keyData.__fnct){\r\n                                keyData.__fnct = [];\r\n                            }\r\n                            if (!keyData.__fnct[i]) {\r\n                                outX = keyData.o.x[i] || keyData.o.x[0];\r\n                                outY = keyData.o.y[i] || keyData.o.y[0];\r\n                                inX = keyData.i.x[i] || keyData.i.x[0];\r\n                                inY = keyData.i.y[i] || keyData.i.y[0];\r\n                                fnc = BezierFactory.getBezierEasing(outX,outY,inX,inY).get;\r\n                                keyData.__fnct[i] = fnc;\r\n                            } else {\r\n                                fnc = keyData.__fnct[i];\r\n                            }\r\n                        } else {\r\n                            if (!keyData.__fnct) {\r\n                                outX = keyData.o.x;\r\n                                outY = keyData.o.y;\r\n                                inX = keyData.i.x;\r\n                                inY = keyData.i.y;\r\n                                fnc = BezierFactory.getBezierEasing(outX,outY,inX,inY).get;\r\n                                keyData.__fnct = fnc;\r\n                            } else{\r\n                                fnc = keyData.__fnct;\r\n                            }\r\n                        }\r\n                        perc = fnc((frameNum-(keyData.t-offsetTime))/((nextKeyData.t-offsetTime)-(keyData.t-offsetTime)));\r\n                    }\r\n                }\r\n                if(this.sh && keyData.h !== 1){\r\n                    var initP = keyData.s[i];\r\n                    var endP = keyData.e[i];\r\n                    if(initP-endP < -180){\r\n                        initP += 360;\r\n                    } else if(initP-endP > 180){\r\n                        initP -= 360;\r\n                    }\r\n                    keyValue = initP+(endP-initP)*perc;\r\n                } else {\r\n                    keyValue = keyData.h === 1 ? keyData.s[i] : keyData.s[i]+(keyData.e[i]-keyData.s[i])*perc;\r\n                }\r\n                if(len === 1){\r\n                    newValue = keyValue;\r\n                }else{\r\n                    newValue[i] = keyValue;\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            value: newValue,\r\n            iterationIndex: iterationIndex\r\n        }\r\n    }\r\n\r\n    function getValueAtCurrentTime(){\r\n        if(this.elem.globalData.frameId === this.frameId){\r\n            return;\r\n        }\r\n        this.mdf = false;\r\n        var frameNum = this.comp.renderedFrame - this.offsetTime;\r\n        var initTime = this.keyframes[0].t-this.offsetTime;\r\n        var endTime = this.keyframes[this.keyframes.length- 1].t-this.offsetTime;\r\n        if(!(frameNum === this._caching.lastFrame || (this._caching.lastFrame !== initFrame && ((this._caching.lastFrame >= endTime && frameNum >= endTime) || (this._caching.lastFrame < initTime && frameNum < initTime))))){\r\n            var i = this._caching.lastFrame < frameNum ? this._caching.lastIndex : 0;\r\n            var renderResult = this.interpolateValue(frameNum, i, this.pv, this._caching);\r\n            this._caching.lastIndex = renderResult.iterationIndex;\r\n            if(this.pv.constructor === Array){\r\n                i = 0;\r\n                while(i<this.v.length){\r\n                    this.pv[i] = renderResult.value[i];\r\n                    this.v[i] = this.mult ? this.pv[i] * this.mult : this.pv[i];\r\n                    if(this.lastPValue[i] !== this.pv[i]) {\r\n                        this.mdf = true;\r\n                        this.lastPValue[i] = this.pv[i];\r\n                    }\r\n                    i += 1;\r\n                }\r\n            } else {\r\n                this.pv = renderResult.value;\r\n                this.v = this.mult ? this.pv*this.mult : this.pv;\r\n                if(this.lastPValue != this.pv){\r\n                    this.mdf = true;\r\n                    this.lastPValue = this.pv;\r\n                }\r\n            }\r\n            \r\n        }\r\n        this._caching.lastFrame = frameNum;\r\n        this.frameId = this.elem.globalData.frameId;\r\n    }\r\n\r\n    function getNoValue(){}\r\n\r\n    function ValueProperty(elem,data, mult){\r\n        this.mult = mult;\r\n        this.v = mult ? data.k * mult : data.k;\r\n        this.pv = data.k;\r\n        this.mdf = false;\r\n        this.comp = elem.comp;\r\n        this.k = false;\r\n        this.kf = false;\r\n        this.vel = 0;\r\n        this.getValue = getNoValue;\r\n    }\r\n\r\n    function MultiDimensionalProperty(elem,data, mult){\r\n        this.mult = mult;\r\n        this.data = data;\r\n        this.mdf = false;\r\n        this.comp = elem.comp;\r\n        this.k = false;\r\n        this.kf = false;\r\n        this.frameId = -1;\r\n        this.v = Array.apply(null, {length:data.k.length});\r\n        this.pv = Array.apply(null, {length:data.k.length});\r\n        this.lastValue = Array.apply(null, {length:data.k.length});\r\n        var arr = Array.apply(null, {length:data.k.length});\r\n        this.vel = arr.map(function () { return 0 });\r\n        var i, len = data.k.length;\r\n        for(i = 0;i<len;i+=1){\r\n            this.v[i] = mult ? data.k[i] * mult : data.k[i];\r\n            this.pv[i] = data.k[i];\r\n        }\r\n        this.getValue = getNoValue;\r\n    }\r\n\r\n    function KeyframedValueProperty(elem, data, mult){\r\n        this.keyframes = data.k;\r\n        this.offsetTime = elem.data.st;\r\n        this.lastValue = -99999;\r\n        this.lastPValue = -99999;\r\n        this.frameId = -1;\r\n        this._caching={lastFrame:initFrame,lastIndex:0};\r\n        this.k = true;\r\n        this.kf = true;\r\n        this.data = data;\r\n        this.mult = mult;\r\n        this.elem = elem;\r\n        this.comp = elem.comp;\r\n        this.v = mult ? data.k[0].s[0]*mult : data.k[0].s[0];\r\n        this.pv = data.k[0].s[0];\r\n        this.getValue = getValueAtCurrentTime;\r\n        this.interpolateValue = interpolateValue;\r\n    }\r\n\r\n    function KeyframedMultidimensionalProperty(elem, data, mult){\r\n        var i, len = data.k.length;\r\n        var s, e,to,ti;\r\n        for(i=0;i<len-1;i+=1){\r\n            if(data.k[i].to && data.k[i].s && data.k[i].e){\r\n                s = data.k[i].s;\r\n                e = data.k[i].e;\r\n                to = data.k[i].to;\r\n                ti = data.k[i].ti;\r\n                if((s.length === 2 && !(s[0] === e[0] && s[1] === e[1]) && bez.pointOnLine2D(s[0],s[1],e[0],e[1],s[0] + to[0],s[1] + to[1]) && bez.pointOnLine2D(s[0],s[1],e[0],e[1],e[0] + ti[0],e[1] + ti[1])) || (s.length === 3 && !(s[0] === e[0] && s[1] === e[1] && s[2] === e[2]) && bez.pointOnLine3D(s[0],s[1],s[2],e[0],e[1],e[2],s[0] + to[0],s[1] + to[1],s[2] + to[2]) && bez.pointOnLine3D(s[0],s[1],s[2],e[0],e[1],e[2],e[0] + ti[0],e[1] + ti[1],e[2] + ti[2]))){\r\n                    data.k[i].to = null;\r\n                    data.k[i].ti = null;\r\n                }\r\n            }\r\n        }\r\n        this.keyframes = data.k;\r\n        this.offsetTime = elem.data.st;\r\n        this.k = true;\r\n        this.kf = true;\r\n        this.mult = mult;\r\n        this.elem = elem;\r\n        this.comp = elem.comp;\r\n        this._caching={lastFrame:initFrame,lastIndex:0};\r\n        this.getValue = getValueAtCurrentTime;\r\n        this.interpolateValue = interpolateValue;\r\n        this.frameId = -1;\r\n        this.v = Array.apply(null, {length:data.k[0].s.length});\r\n        this.pv = Array.apply(null, {length:data.k[0].s.length});\r\n        this.lastValue = Array.apply(null, {length:data.k[0].s.length});\r\n        this.lastPValue = Array.apply(null, {length:data.k[0].s.length});\r\n    }\r\n\r\n    var TransformProperty = (function() {\r\n        function positionGetter() {\r\n            if(this.p) {\r\n                return ExpressionValue(this.p);\r\n            } else {\r\n                return [this.px.v, this.py.v, this.pz ? this.pz.v : 0];\r\n            }\r\n        }\r\n        function xPositionGetter() {\r\n            return ExpressionValue(this.px);\r\n        }\r\n        function yPositionGetter() {\r\n            return ExpressionValue(this.py);\r\n        }\r\n        function zPositionGetter() {\r\n            return ExpressionValue(this.pz);\r\n        }\r\n        function anchorGetter() {\r\n            return ExpressionValue(this.a);\r\n        }\r\n        function orientationGetter() {\r\n            return ExpressionValue(this.or);\r\n        }\r\n        function rotationGetter() {\r\n            if(this.r) {\r\n                return ExpressionValue(this.r, 1/degToRads);\r\n            } else {\r\n                return ExpressionValue(this.rz, 1/degToRads);\r\n            }\r\n        }\r\n        function scaleGetter() {\r\n            return ExpressionValue(this.s, 100);\r\n        }\r\n        function opacityGetter() {\r\n            return ExpressionValue(this.o, 100);\r\n        }\r\n        function skewGetter() {\r\n            return ExpressionValue(this.sk);\r\n        }\r\n        function skewAxisGetter() {\r\n            return ExpressionValue(this.sa);\r\n        }\r\n        function applyToMatrix(mat) {\r\n            var i, len = this.dynamicProperties.length;\r\n            for(i = 0; i < len; i += 1) {\r\n                this.dynamicProperties[i].getValue();\r\n                if (this.dynamicProperties[i].mdf) {\r\n                    this.mdf = true;\r\n                }\r\n            }\r\n            if (this.a) {\r\n                mat.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n            }\r\n            if (this.s) {\r\n                mat.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n            }\r\n            if (this.r) {\r\n                mat.rotate(-this.r.v);\r\n            } else {\r\n                mat.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n            }\r\n            if (this.data.p.s) {\r\n                if (this.data.p.z) {\r\n                    mat.translate(this.px.v, this.py.v, -this.pz.v);\r\n                } else {\r\n                    mat.translate(this.px.v, this.py.v, 0);\r\n                }\r\n            } else {\r\n                mat.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);\r\n            }\r\n        }\r\n        function processKeys(){\r\n            if (this.elem.globalData.frameId === this.frameId) {\r\n                return;\r\n            }\r\n\r\n            this.mdf = false;\r\n            var i, len = this.dynamicProperties.length;\r\n\r\n            for(i = 0; i < len; i += 1) {\r\n                this.dynamicProperties[i].getValue();\r\n                if (this.dynamicProperties[i].mdf) {\r\n                    this.mdf = true;\r\n                }\r\n            }\r\n            if (this.mdf) {\r\n                this.v.reset();\r\n                if (this.a) {\r\n                    this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n                }\r\n                if(this.s) {\r\n                    this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n                }\r\n                if (this.sk) {\r\n                    this.v.skewFromAxis(-this.sk.v, this.sa.v);\r\n                }\r\n                if (this.r) {\r\n                    this.v.rotate(-this.r.v);\r\n                } else {\r\n                    this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n                }\r\n                if (this.autoOriented && this.p.keyframes && this.p.getValueAtTime) {\r\n                    var v1,v2;\r\n                    if (this.p._caching.lastFrame+this.p.offsetTime <= this.p.keyframes[0].t) {\r\n                        v1 = this.p.getValueAtTime((this.p.keyframes[0].t + 0.01) / this.elem.globalData.frameRate,0);\r\n                        v2 = this.p.getValueAtTime(this.p.keyframes[0].t / this.elem.globalData.frameRate, 0);\r\n                    } else if(this.p._caching.lastFrame+this.p.offsetTime >= this.p.keyframes[this.p.keyframes.length - 1].t) {\r\n                        v1 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t / this.elem.globalData.frameRate), 0);\r\n                        v2 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t - 0.01) / this.elem.globalData.frameRate, 0);\r\n                    } else {\r\n                        v1 = this.p.pv;\r\n                        v2 = this.p.getValueAtTime((this.p._caching.lastFrame+this.p.offsetTime - 0.01) / this.elem.globalData.frameRate, this.p.offsetTime);\r\n                    }\r\n                    this.v.rotate(-Math.atan2(v1[1] - v2[1], v1[0] - v2[0]));\r\n                }\r\n                if(this.data.p.s){\r\n                    if(this.data.p.z) {\r\n                        this.v.translate(this.px.v, this.py.v, -this.pz.v);\r\n                    } else {\r\n                        this.v.translate(this.px.v, this.py.v, 0);\r\n                    }\r\n                }else{\r\n                    this.v.translate(this.p.v[0],this.p.v[1],-this.p.v[2]);\r\n                }\r\n            }\r\n            this.frameId = this.elem.globalData.frameId;\r\n        }\r\n\r\n        function setInverted(){\r\n            this.inverted = true;\r\n            this.iv = new Matrix();\r\n            if(!this.k){\r\n                if(this.data.p.s){\r\n                    this.iv.translate(this.px.v,this.py.v,-this.pz.v);\r\n                }else{\r\n                    this.iv.translate(this.p.v[0],this.p.v[1],-this.p.v[2]);\r\n                }\r\n                if(this.r){\r\n                    this.iv.rotate(-this.r.v);\r\n                }else{\r\n                    this.iv.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v);\r\n                }\r\n                if(this.s){\r\n                    this.iv.scale(this.s.v[0],this.s.v[1],1);\r\n                }\r\n                if(this.a){\r\n                    this.iv.translate(-this.a.v[0],-this.a.v[1],this.a.v[2]);\r\n                }\r\n            }\r\n        }\r\n\r\n        function autoOrient(){\r\n            //\r\n            //var prevP = this.getValueAtTime();\r\n        }\r\n\r\n        return function TransformProperty(elem,data,arr){\r\n            this.elem = elem;\r\n            this.frameId = -1;\r\n            this.type = 'transform';\r\n            this.dynamicProperties = [];\r\n            this.mdf = false;\r\n            this.data = data;\r\n            this.getValue = processKeys;\r\n            this.applyToMatrix = applyToMatrix;\r\n            this.setInverted = setInverted;\r\n            this.autoOrient = autoOrient;\r\n            this.v = new Matrix();\r\n            if(data.p.s){\r\n                this.px = PropertyFactory.getProp(elem,data.p.x,0,0,this.dynamicProperties);\r\n                this.py = PropertyFactory.getProp(elem,data.p.y,0,0,this.dynamicProperties);\r\n                if(data.p.z){\r\n                    this.pz = PropertyFactory.getProp(elem,data.p.z,0,0,this.dynamicProperties);\r\n                }\r\n            }else{\r\n                this.p = PropertyFactory.getProp(elem,data.p,1,0,this.dynamicProperties);\r\n            }\r\n            if(data.r) {\r\n                this.r = PropertyFactory.getProp(elem, data.r, 0, degToRads, this.dynamicProperties);\r\n            } else if(data.rx) {\r\n                this.rx = PropertyFactory.getProp(elem, data.rx, 0, degToRads, this.dynamicProperties);\r\n                this.ry = PropertyFactory.getProp(elem, data.ry, 0, degToRads, this.dynamicProperties);\r\n                this.rz = PropertyFactory.getProp(elem, data.rz, 0, degToRads, this.dynamicProperties);\r\n                this.or = PropertyFactory.getProp(elem, data.or, 1, degToRads, this.dynamicProperties);\r\n                //sh Indicates it needs to be capped between -180 and 180\r\n                this.or.sh = true;\r\n            }\r\n            if(data.sk){\r\n                this.sk = PropertyFactory.getProp(elem, data.sk, 0, degToRads, this.dynamicProperties);\r\n                this.sa = PropertyFactory.getProp(elem, data.sa, 0, degToRads, this.dynamicProperties);\r\n            }\r\n            if(data.a) {\r\n                this.a = PropertyFactory.getProp(elem,data.a,1,0,this.dynamicProperties);\r\n            }\r\n            if(data.s) {\r\n                this.s = PropertyFactory.getProp(elem,data.s,1,0.01,this.dynamicProperties);\r\n            }\r\n            if(data.o){\r\n                this.o = PropertyFactory.getProp(elem,data.o,0,0.01,this.dynamicProperties);\r\n            } else {\r\n                this.o = {mdf:false,v:1};\r\n            }\r\n            if(this.dynamicProperties.length){\r\n                arr.push(this);\r\n            }else{\r\n                if(this.a){\r\n                    this.v.translate(-this.a.v[0],-this.a.v[1],this.a.v[2]);\r\n                }\r\n                if(this.s){\r\n                    this.v.scale(this.s.v[0],this.s.v[1],this.s.v[2]);\r\n                }\r\n                if(this.sk){\r\n                    this.v.skewFromAxis(-this.sk.v,this.sa.v);\r\n                }\r\n                if(this.r){\r\n                    this.v.rotate(-this.r.v);\r\n                }else{\r\n                    this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n                }\r\n                if(this.data.p.s){\r\n                    if(data.p.z) {\r\n                        this.v.translate(this.px.v, this.py.v, -this.pz.v);\r\n                    } else {\r\n                        this.v.translate(this.px.v, this.py.v, 0);\r\n                    }\r\n                }else{\r\n                    this.v.translate(this.p.v[0],this.p.v[1],-this.p.v[2]);\r\n                }\r\n            }\r\n            Object.defineProperty(this, \"position\", { get: positionGetter});\r\n            Object.defineProperty(this, \"xPosition\", { get: xPositionGetter});\r\n            Object.defineProperty(this, \"yPosition\", { get: yPositionGetter});\r\n            Object.defineProperty(this, \"orientation\", { get: orientationGetter});\r\n            Object.defineProperty(this, \"anchorPoint\", { get: anchorGetter});\r\n            Object.defineProperty(this, \"rotation\", { get: rotationGetter});\r\n            Object.defineProperty(this, \"scale\", { get: scaleGetter});\r\n            Object.defineProperty(this, \"opacity\", { get: opacityGetter});\r\n            Object.defineProperty(this, \"skew\", { get: skewGetter});\r\n            Object.defineProperty(this, \"skewAxis\", { get: skewAxisGetter});\r\n        }\r\n    }());\r\n\r\n    function getProp(elem,data,type, mult, arr) {\r\n        var p;\r\n        if(type === 2){\r\n            p = new TransformProperty(elem, data, arr);\r\n        } else if(data.a === 0){\r\n            if(type === 0) {\r\n                p = new ValueProperty(elem,data,mult);\r\n            } else {\r\n                p = new MultiDimensionalProperty(elem,data, mult);\r\n            }\r\n        } else if(data.a === 1){\r\n            if(type === 0) {\r\n                p = new KeyframedValueProperty(elem,data,mult);\r\n            } else {\r\n                p = new KeyframedMultidimensionalProperty(elem,data, mult);\r\n            }\r\n        } else if(!data.k.length){\r\n            p = new ValueProperty(elem,data, mult);\r\n        }else if(typeof(data.k[0]) === 'number'){\r\n            p = new MultiDimensionalProperty(elem,data, mult);\r\n        }else{\r\n            switch(type){\r\n                case 0:\r\n                    p = new KeyframedValueProperty(elem,data,mult);\r\n                    break;\r\n                case 1:\r\n                    p = new KeyframedMultidimensionalProperty(elem,data,mult);\r\n                    break;\r\n            }\r\n        }\r\n        if(p.k){\r\n            arr.push(p);\r\n        }\r\n        return p;\r\n    }\r\n\r\n    var getGradientProp = (function(){\r\n\r\n        function getValue(forceRender){\r\n            this.prop.getValue();\r\n            this.cmdf = false;\r\n            this.omdf = false;\r\n            if(this.prop.mdf || forceRender){\r\n                var i, len = this.data.p*4;\r\n                var mult, val;\r\n                for(i=0;i<len;i+=1){\r\n                    mult = i%4 === 0 ? 100 : 255;\r\n                    val = Math.round(this.prop.v[i]*mult);\r\n                    if(this.c[i] !== val){\r\n                        this.c[i] = val;\r\n                        this.cmdf = true;\r\n                    }\r\n                }\r\n                if(this.o.length){\r\n                    len = this.prop.v.length;\r\n                    for(i=this.data.p*4;i<len;i+=1){\r\n                        mult = i%2 === 0 ? 100 : 1;\r\n                        val = i%2 === 0 ?  Math.round(this.prop.v[i]*100):this.prop.v[i];\r\n                        if(this.o[i-this.data.p*4] !== val){\r\n                            this.o[i-this.data.p*4] = val;\r\n                            this.omdf = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        function gradientProp(elem,data,arr){\r\n            this.prop = getProp(elem,data.k,1,null,[]);\r\n            this.data = data;\r\n            this.k = this.prop.k;\r\n            this.c = Array.apply(null,{length:data.p*4});\r\n            var cLength = data.k.k[0].s ? (data.k.k[0].s.length - data.p*4) : data.k.k.length - data.p*4;\r\n            this.o = Array.apply(null,{length:cLength});\r\n            this.cmdf = false;\r\n            this.omdf = false;\r\n            this.getValue = getValue;\r\n            if(this.prop.k){\r\n                arr.push(this);\r\n            }\r\n            this.getValue(true);\r\n        }\r\n\r\n        return function getGradientProp(elem,data,arr){\r\n            return new gradientProp(elem,data,arr);\r\n        }\r\n    }());\r\n\r\n\r\n\r\n\r\n    var DashProperty = (function(){\r\n\r\n        function processKeys(forceRender){\r\n            var i = 0, len = this.dataProps.length;\r\n\r\n            if(this.elem.globalData.frameId === this.frameId && !forceRender){\r\n                return;\r\n            }\r\n            this.mdf = false;\r\n            this.frameId = this.elem.globalData.frameId;\r\n            while(i<len){\r\n                if(this.dataProps[i].p.mdf){\r\n                    this.mdf = true;\r\n                    break;\r\n                }\r\n                i+=1;\r\n            }\r\n            if(this.mdf || forceRender){\r\n                if(this.renderer === 'svg') {\r\n                    this.dasharray = '';\r\n                }\r\n                for(i=0;i<len;i+=1){\r\n                    if(this.dataProps[i].n != 'o'){\r\n                        if(this.renderer === 'svg') {\r\n                            this.dasharray += ' ' + this.dataProps[i].p.v;\r\n                        }else{\r\n                            this.dasharray[i] = this.dataProps[i].p.v;\r\n                        }\r\n                    }else{\r\n                        this.dashoffset = this.dataProps[i].p.v;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return function(elem, data,renderer, dynamicProperties){\r\n            this.elem = elem;\r\n            this.frameId = -1;\r\n            this.dataProps = new Array(data.length);\r\n            this.renderer = renderer;\r\n            this.mdf = false;\r\n            this.k = false;\r\n            if(this.renderer === 'svg'){\r\n                this.dasharray = '';\r\n            }else{\r\n\r\n                this.dasharray = new Array(data.length - 1);\r\n            }\r\n            this.dashoffset = 0;\r\n            var i, len = data.length, prop;\r\n            for(i=0;i<len;i+=1){\r\n                prop = PropertyFactory.getProp(elem,data[i].v,0, 0, dynamicProperties);\r\n                this.k = prop.k ? true : this.k;\r\n                this.dataProps[i] = {n:data[i].n,p:prop};\r\n            }\r\n            this.getValue = processKeys;\r\n            if(this.k){\r\n                dynamicProperties.push(this);\r\n            }else{\r\n                this.getValue(true);\r\n            }\r\n\r\n        }\r\n    }());\r\n\r\n    function getDashProp(elem, data,renderer, dynamicProperties) {\r\n        return new DashProperty(elem, data,renderer, dynamicProperties);\r\n    };\r\n\r\n    var TextSelectorProp = (function(){\r\n        var max = Math.max;\r\n        var min = Math.min;\r\n        var floor = Math.floor;\r\n        function updateRange(newCharsFlag){\r\n            this.mdf = newCharsFlag || false;\r\n            if(this.dynamicProperties.length){\r\n                var i, len = this.dynamicProperties.length;\r\n                for(i=0;i<len;i+=1){\r\n                    this.dynamicProperties[i].getValue();\r\n                    if(this.dynamicProperties[i].mdf){\r\n                        this.mdf = true;\r\n                    }\r\n                }\r\n            }\r\n            var totalChars = this.elem.textProperty.currentData ? this.elem.textProperty.currentData.l.length : 0;\r\n            if(newCharsFlag && this.data.r === 2) {\r\n                this.e.v = totalChars;\r\n            }\r\n            var divisor = this.data.r === 2 ? 1 : 100 / totalChars;\r\n            var o = this.o.v/divisor;\r\n            var s = this.s.v/divisor + o;\r\n            var e = (this.e.v/divisor) + o;\r\n            if(s>e){\r\n                var _s = s;\r\n                s = e;\r\n                e = _s;\r\n            }\r\n            this.finalS = s;\r\n            this.finalE = e;\r\n        }\r\n\r\n        function getMult(ind){\r\n            //var easer = bez.getEasingCurve(this.ne.v/100,0,1-this.xe.v/100,1);\r\n            var easer = BezierFactory.getBezierEasing(this.ne.v/100,0,1-this.xe.v/100,1).get;\r\n            var mult = 0;\r\n            var s = this.finalS;\r\n            var e = this.finalE;\r\n            var type = this.data.sh;\r\n            if(type == 2){\r\n                if(e === s){\r\n                    mult = ind >= e ? 1 : 0;\r\n                }else{\r\n                    mult = max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n                }\r\n                mult = easer(mult);\r\n            }else if(type == 3){\r\n                if(e === s){\r\n                    mult = ind >= e ? 0 : 1;\r\n                }else{\r\n                    mult = 1 - max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n                }\r\n\r\n                mult = easer(mult);\r\n            }else if(type == 4){\r\n                if(e === s){\r\n                    mult = 0;\r\n                }else{\r\n                    mult = max(0,min(0.5/(e-s) + (ind-s)/(e-s),1));\r\n                    if(mult<.5){\r\n                        mult *= 2;\r\n                    }else{\r\n                        mult = 1 - 2*(mult-0.5);\r\n                    }\r\n                }\r\n                mult = easer(mult);\r\n            }else if(type == 5){\r\n                if(e === s){\r\n                    mult = 0;\r\n                }else{\r\n                    var tot = e - s;\r\n                    /*ind += 0.5;\r\n                    mult = -4/(tot*tot)*(ind*ind)+(4/tot)*ind;*/\r\n                    ind = min(max(0,ind+0.5-s),e-s);\r\n                    var x = -tot/2+ind;\r\n                    var a = tot/2;\r\n                    mult = Math.sqrt(1 - (x*x)/(a*a));\r\n                }\r\n                mult = easer(mult);\r\n            }else if(type == 6){\r\n                if(e === s){\r\n                    mult = 0;\r\n                }else{\r\n                    ind = min(max(0,ind+0.5-s),e-s);\r\n                    mult = (1+(Math.cos((Math.PI+Math.PI*2*(ind)/(e-s)))))/2;\r\n                    /*\r\n                     ind = Math.min(Math.max(s,ind),e-1);\r\n                     mult = (1+(Math.cos((Math.PI+Math.PI*2*(ind-s)/(e-1-s)))))/2;\r\n                     mult = Math.max(mult,(1/(e-1-s))/(e-1-s));*/\r\n                }\r\n                mult = easer(mult);\r\n            }else {\r\n                if(ind >= floor(s)){\r\n                    if(ind-s < 0){\r\n                        mult = 1 - (s - ind);\r\n                    }else{\r\n                        mult = max(0,min(e-ind,1));\r\n                    }\r\n                }\r\n                mult = easer(mult);\r\n            }\r\n            return mult*this.a.v;\r\n        }\r\n\r\n        return function TextSelectorProp(elem,data, arr){\r\n            this.mdf = false;\r\n            this.k = false;\r\n            this.data = data;\r\n            this.dynamicProperties = [];\r\n            this.getValue = updateRange;\r\n            this.getMult = getMult;\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.finalS = 0;\r\n            this.finalE = 0;\r\n            this.s = PropertyFactory.getProp(elem,data.s || {k:0},0,0,this.dynamicProperties);\r\n            if('e' in data){\r\n                this.e = PropertyFactory.getProp(elem,data.e,0,0,this.dynamicProperties);\r\n            }else{\r\n                this.e = {v:100};\r\n            }\r\n            this.o = PropertyFactory.getProp(elem,data.o || {k:0},0,0,this.dynamicProperties);\r\n            this.xe = PropertyFactory.getProp(elem,data.xe || {k:0},0,0,this.dynamicProperties);\r\n            this.ne = PropertyFactory.getProp(elem,data.ne || {k:0},0,0,this.dynamicProperties);\r\n            this.a = PropertyFactory.getProp(elem,data.a,0,0.01,this.dynamicProperties);\r\n            if(this.dynamicProperties.length){\r\n                arr.push(this);\r\n            }else{\r\n                this.getValue();\r\n            }\r\n        }\r\n    }());\r\n\r\n    function getTextSelectorProp(elem, data,arr) {\r\n        return new TextSelectorProp(elem, data, arr);\r\n    };\r\n\r\n    var ob = {\r\n        getProp: getProp,\r\n        getDashProp: getDashProp,\r\n        getTextSelectorProp: getTextSelectorProp,\r\n        getGradientProp: getGradientProp\r\n    };\r\n    return ob;\r\n}());\nfunction ShapePath(){\r\n\tthis.c = false;\r\n\tthis._length = 0;\r\n\tthis._maxLength = 8;\r\n\tthis.v = Array.apply(null,{length:this._maxLength});\r\n\tthis.o = Array.apply(null,{length:this._maxLength});\r\n\tthis.i = Array.apply(null,{length:this._maxLength});\r\n};\r\n\r\nShapePath.prototype.setPathData = function(closed, len) {\r\n\tthis.c = closed;\r\n\tthis.setLength(len);\r\n\tvar i = 0;\r\n\twhile(i < len){\r\n\t\tthis.v[i] = point_pool.newPoint();\r\n\t\tthis.o[i] = point_pool.newPoint();\r\n\t\tthis.i[i] = point_pool.newPoint();\r\n\t\ti += 1;\r\n\t}\r\n};\r\n\r\nShapePath.prototype.setLength = function(len) {\r\n\twhile(this._maxLength < len) {\r\n\t\tthis.doubleArrayLength();\r\n\t}\r\n\tthis._length = len;\r\n}\r\n\r\nShapePath.prototype.doubleArrayLength = function() {\r\n\tthis.v = this.v.concat(Array.apply(null,{length:this._maxLength}))\r\n\tthis.i = this.i.concat(Array.apply(null,{length:this._maxLength}))\r\n\tthis.o = this.o.concat(Array.apply(null,{length:this._maxLength}))\r\n\tthis._maxLength *= 2;\r\n};\r\n\r\nShapePath.prototype.setXYAt = function(x, y, type, pos, replace) {\r\n\tvar arr;\r\n\tthis._length = Math.max(this._length, pos + 1);\r\n\tif(this._length >= this._maxLength) {\r\n\t\tthis.doubleArrayLength();\r\n\t}\r\n\tswitch(type){\r\n\t\tcase 'v':\r\n\t\t\tarr = this.v;\r\n\t\t\tbreak;\r\n\t\tcase 'i':\r\n\t\t\tarr = this.i;\r\n\t\t\tbreak;\r\n\t\tcase 'o':\r\n\t\t\tarr = this.o;\r\n\t\t\tbreak;\r\n\t}\r\n\tif(!arr[pos] || (arr[pos] && !replace)){\r\n\t\tarr[pos] = point_pool.newPoint();\r\n\t}\r\n\tarr[pos][0] = x;\r\n\tarr[pos][1] = y;\r\n};\r\n\r\nShapePath.prototype.setTripleAt = function(vX,vY,oX,oY,iX,iY,pos, replace) {\r\n\tthis.setXYAt(vX,vY,'v',pos, replace);\r\n\tthis.setXYAt(oX,oY,'o',pos, replace);\r\n\tthis.setXYAt(iX,iY,'i',pos, replace);\r\n};\nvar ShapePropertyFactory = (function(){\r\n\r\n    var initFrame = -999999;\r\n\r\n    function interpolateShape(frameNum, iterationIndex, previousValue, isCurrentRender) {\r\n        var keyPropS,keyPropE,isHold;\r\n        if(frameNum < this.keyframes[0].t-this.offsetTime){\r\n            keyPropS = this.keyframes[0].s[0];\r\n            isHold = true;\r\n            iterationIndex = 0;\r\n        }else if(frameNum >= this.keyframes[this.keyframes.length - 1].t-this.offsetTime){\r\n            if(this.keyframes[this.keyframes.length - 2].h === 1){\r\n                keyPropS = this.keyframes[this.keyframes.length - 1].s[0];\r\n            }else{\r\n                keyPropS = this.keyframes[this.keyframes.length - 2].e[0];\r\n            }\r\n            isHold = true;\r\n        }else{\r\n            var i = iterationIndex;\r\n            var len = this.keyframes.length- 1,flag = true,keyData,nextKeyData, j, jLen, k, kLen;\r\n            while(flag){\r\n                keyData = this.keyframes[i];\r\n                nextKeyData = this.keyframes[i+1];\r\n                if((nextKeyData.t - this.offsetTime) > frameNum){\r\n                    break;\r\n                }\r\n                if(i < len - 1){\r\n                    i += 1;\r\n                }else{\r\n                    flag = false;\r\n                }\r\n            }\r\n            isHold = keyData.h === 1;\r\n            iterationIndex = i;\r\n\r\n            var perc;\r\n            if(!isHold){\r\n                if(frameNum >= nextKeyData.t-this.offsetTime){\r\n                    perc = 1;\r\n                }else if(frameNum < keyData.t-this.offsetTime){\r\n                    perc = 0;\r\n                }else{\r\n                    var fnc;\r\n                    if(keyData.__fnct){\r\n                        fnc = keyData.__fnct;\r\n                    }else{\r\n                        fnc = BezierFactory.getBezierEasing(keyData.o.x,keyData.o.y,keyData.i.x,keyData.i.y).get;\r\n                        keyData.__fnct = fnc;\r\n                    }\r\n                    perc = fnc((frameNum-(keyData.t-this.offsetTime))/((nextKeyData.t-this.offsetTime)-(keyData.t-this.offsetTime)));\r\n                }\r\n                keyPropE = keyData.e[0];\r\n            }\r\n            keyPropS = keyData.s[0];\r\n        }\r\n        jLen = previousValue._length;\r\n        kLen = keyPropS.i[0].length;\r\n        var hasModified = false;\r\n        var vertexValue;\r\n        for(j=0;j<jLen;j+=1){\r\n            for(k=0;k<kLen;k+=1){\r\n                if(isHold){\r\n                    vertexValue = keyPropS.i[j][k];\r\n                    if(previousValue.i[j][k] !== vertexValue){\r\n                        previousValue.i[j][k] = vertexValue;\r\n                        if(isCurrentRender) {\r\n                            this.pv.i[j][k] = vertexValue;\r\n                        }\r\n                        hasModified = true;\r\n                    }\r\n                    vertexValue = keyPropS.o[j][k];\r\n                    if(previousValue.o[j][k] !== vertexValue){\r\n                        previousValue.o[j][k] = vertexValue;\r\n                        if(isCurrentRender) {\r\n                            this.pv.o[j][k] = vertexValue;\r\n                        }\r\n                        hasModified = true;\r\n                    }\r\n                    vertexValue = keyPropS.v[j][k];\r\n                    if(previousValue.v[j][k] !== vertexValue){\r\n                        previousValue.v[j][k] = vertexValue;\r\n                        if(isCurrentRender) {\r\n                            this.pv.v[j][k] = vertexValue;\r\n                        }\r\n                        hasModified = true;\r\n                    }\r\n                }else{\r\n                    vertexValue = keyPropS.i[j][k]+(keyPropE.i[j][k]-keyPropS.i[j][k])*perc;\r\n                    if(previousValue.i[j][k] !== vertexValue){\r\n                        previousValue.i[j][k] = vertexValue;\r\n                        if(isCurrentRender) {\r\n                            this.pv.i[j][k] = vertexValue;\r\n                        }\r\n                        hasModified = true;\r\n                    }\r\n                    vertexValue = keyPropS.o[j][k]+(keyPropE.o[j][k]-keyPropS.o[j][k])*perc;\r\n                    if(previousValue.o[j][k] !== vertexValue){\r\n                        previousValue.o[j][k] = vertexValue;\r\n                        if(isCurrentRender) {\r\n                            this.pv.o[j][k] = vertexValue;\r\n                        }\r\n                        hasModified = true;\r\n                    }\r\n                    vertexValue = keyPropS.v[j][k]+(keyPropE.v[j][k]-keyPropS.v[j][k])*perc;\r\n                    if(previousValue.v[j][k] !== vertexValue){\r\n                        previousValue.v[j][k] = vertexValue;\r\n                        if(isCurrentRender) {\r\n                            this.pv.v[j][k] = vertexValue;\r\n                        }\r\n                        hasModified = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if(hasModified) {\r\n            previousValue.c = keyPropS.c;\r\n        }\r\n        return {\r\n            iterationIndex: iterationIndex,\r\n            hasModified: hasModified\r\n        }\r\n    }\r\n\r\n    function interpolateShapeCurrentTime(){\r\n        if(this.elem.globalData.frameId === this.frameId){\r\n            return;\r\n        }\r\n        this.mdf = false;\r\n        var frameNum = this.comp.renderedFrame - this.offsetTime;\r\n        var initTime = this.keyframes[0].t - this.offsetTime;\r\n        var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;\r\n        if(!(this.lastFrame !== initFrame && ((this.lastFrame < initTime && frameNum < initTime) || (this.lastFrame > endTime && frameNum > endTime)))){\r\n            ////\r\n            var i = this.lastFrame < frameNum ? this._lastIndex : 0;\r\n            var renderResult = this.interpolateShape(frameNum, i, this.v, true);\r\n            ////\r\n            this._lastIndex = renderResult.iterationIndex;\r\n            this.mdf = renderResult.hasModified;\r\n            if(renderResult.hasModified) {\r\n                this.paths = this.localShapeCollection;\r\n            }\r\n        }\r\n        this.lastFrame = frameNum;\r\n        this.frameId = this.elem.globalData.frameId;\r\n    }\r\n\r\n    function getShapeValue(){\r\n        return this.v;\r\n    }\r\n\r\n    function resetShape(){\r\n        this.paths = this.localShapeCollection;\r\n        if(!this.k){\r\n            this.mdf = false;\r\n        }\r\n    }\r\n\r\n    function ShapeProperty(elem, data, type){\r\n        this.__shapeObject = 1;\r\n        this.comp = elem.comp;\r\n        this.k = false;\r\n        this.mdf = false;\r\n        var pathData = type === 3 ? data.pt.k : data.ks.k;\r\n        this.v = shape_pool.clone(pathData);\r\n        this.pv = shape_pool.clone(this.v);\r\n        this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n        this.paths = this.localShapeCollection;\r\n        this.paths.addShape(this.v);\r\n        this.reset = resetShape;\r\n    }\r\n    ShapeProperty.prototype.interpolateShape = interpolateShape;\r\n    ShapeProperty.prototype.getValue = getShapeValue;\r\n\r\n    function KeyframedShapeProperty(elem,data,type){\r\n        this.__shapeObject = 1;\r\n        this.comp = elem.comp;\r\n        this.elem = elem;\r\n        this.offsetTime = elem.data.st;\r\n        this._lastIndex = 0;\r\n        this.keyframes = type === 3 ? data.pt.k : data.ks.k;\r\n        this.k = true;\r\n        this.kf = true;\r\n        var i, len = this.keyframes[0].s[0].i.length;\r\n        var jLen = this.keyframes[0].s[0].i[0].length;\r\n        this.v = shape_pool.newShape();\r\n        this.v.setPathData(this.keyframes[0].s[0].c, len);\r\n        this.pv = shape_pool.clone(this.v);\r\n        this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n        this.paths = this.localShapeCollection;\r\n        this.paths.addShape(this.v);\r\n        this.lastFrame = initFrame;\r\n        this.reset = resetShape;\r\n    }\r\n    KeyframedShapeProperty.prototype.getValue = interpolateShapeCurrentTime;\r\n    KeyframedShapeProperty.prototype.interpolateShape = interpolateShape;\r\n\r\n    var EllShapeProperty = (function(){\r\n\r\n        var cPoint = roundCorner;\r\n\r\n        function convertEllToPath(){\r\n            var p0 = this.p.v[0], p1 = this.p.v[1], s0 = this.s.v[0]/2, s1 = this.s.v[1]/2;\r\n            if(this.d !== 3){\r\n                this.v.v[0][0] = p0;\r\n                this.v.v[0][1] = p1-s1;\r\n                this.v.v[1][0] = p0 + s0;\r\n                this.v.v[1][1] = p1;\r\n                this.v.v[2][0] = p0;\r\n                this.v.v[2][1] = p1+s1;\r\n                this.v.v[3][0] = p0 - s0;\r\n                this.v.v[3][1] = p1;\r\n                this.v.i[0][0] = p0 - s0*cPoint;\r\n                this.v.i[0][1] = p1 - s1;\r\n                this.v.i[1][0] = p0 + s0;\r\n                this.v.i[1][1] = p1 - s1*cPoint;\r\n                this.v.i[2][0] = p0 + s0*cPoint;\r\n                this.v.i[2][1] = p1 + s1;\r\n                this.v.i[3][0] = p0 - s0;\r\n                this.v.i[3][1] = p1 + s1*cPoint;\r\n                this.v.o[0][0] = p0 + s0*cPoint;\r\n                this.v.o[0][1] = p1 - s1;\r\n                this.v.o[1][0] = p0 + s0;\r\n                this.v.o[1][1] = p1 + s1*cPoint;\r\n                this.v.o[2][0] = p0 - s0*cPoint;\r\n                this.v.o[2][1] = p1 + s1;\r\n                this.v.o[3][0] = p0 - s0;\r\n                this.v.o[3][1] = p1 - s1*cPoint;\r\n            }else{\r\n                this.v.v[0][0] = p0;\r\n                this.v.v[0][1] = p1-s1;\r\n                this.v.v[1][0] = p0 - s0;\r\n                this.v.v[1][1] = p1;\r\n                this.v.v[2][0] = p0;\r\n                this.v.v[2][1] = p1+s1;\r\n                this.v.v[3][0] = p0 + s0;\r\n                this.v.v[3][1] = p1;\r\n                this.v.i[0][0] = p0 + s0*cPoint;\r\n                this.v.i[0][1] = p1 - s1;\r\n                this.v.i[1][0] = p0 - s0;\r\n                this.v.i[1][1] = p1 - s1*cPoint;\r\n                this.v.i[2][0] = p0 - s0*cPoint;\r\n                this.v.i[2][1] = p1 + s1;\r\n                this.v.i[3][0] = p0 + s0;\r\n                this.v.i[3][1] = p1 + s1*cPoint;\r\n                this.v.o[0][0] = p0 - s0*cPoint;\r\n                this.v.o[0][1] = p1 - s1;\r\n                this.v.o[1][0] = p0 - s0;\r\n                this.v.o[1][1] = p1 + s1*cPoint;\r\n                this.v.o[2][0] = p0 + s0*cPoint;\r\n                this.v.o[2][1] = p1 + s1;\r\n                this.v.o[3][0] = p0 + s0;\r\n                this.v.o[3][1] = p1 - s1*cPoint;\r\n            }\r\n        }\r\n\r\n        function processKeys(frameNum){\r\n            var i, len = this.dynamicProperties.length;\r\n            if(this.elem.globalData.frameId === this.frameId){\r\n                return;\r\n            }\r\n            this.mdf = false;\r\n            this.frameId = this.elem.globalData.frameId;\r\n\r\n            for(i=0;i<len;i+=1){\r\n                this.dynamicProperties[i].getValue(frameNum);\r\n                if(this.dynamicProperties[i].mdf){\r\n                    this.mdf = true;\r\n                }\r\n            }\r\n            if(this.mdf){\r\n                this.convertEllToPath();\r\n            }\r\n        }\r\n\r\n        return function EllShapeProperty(elem,data) {\r\n            /*this.v = {\r\n                v: Array.apply(null,{length:4}),\r\n                i: Array.apply(null,{length:4}),\r\n                o: Array.apply(null,{length:4}),\r\n                c: true\r\n            };*/\r\n            this.v = shape_pool.newShape();\r\n            this.v.setPathData(true, 4);\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.paths = this.localShapeCollection;\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.d = data.d;\r\n            this.dynamicProperties = [];\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.frameId = -1;\r\n            this.mdf = false;\r\n            this.getValue = processKeys;\r\n            this.convertEllToPath = convertEllToPath;\r\n            this.reset = resetShape;\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this.dynamicProperties);\r\n            this.s = PropertyFactory.getProp(elem,data.s,1,0,this.dynamicProperties);\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.convertEllToPath();\r\n            }\r\n        }\r\n    }());\r\n\r\n    var StarShapeProperty = (function() {\r\n\r\n        function convertPolygonToPath(){\r\n            var numPts = Math.floor(this.pt.v);\r\n            var angle = Math.PI*2/numPts;\r\n            /*this.v.v.length = numPts;\r\n            this.v.i.length = numPts;\r\n            this.v.o.length = numPts;*/\r\n            var rad = this.or.v;\r\n            var roundness = this.os.v;\r\n            var perimSegment = 2*Math.PI*rad/(numPts*4);\r\n            var i, currentAng = -Math.PI/ 2;\r\n            var dir = this.data.d === 3 ? -1 : 1;\r\n            currentAng += this.r.v;\r\n            this.v._length = 0;\r\n            for(i=0;i<numPts;i+=1){\r\n                var x = rad * Math.cos(currentAng);\r\n                var y = rad * Math.sin(currentAng);\r\n                var ox = x === 0 && y === 0 ? 0 : y/Math.sqrt(x*x + y*y);\r\n                var oy = x === 0 && y === 0 ? 0 : -x/Math.sqrt(x*x + y*y);\r\n                x +=  + this.p.v[0];\r\n                y +=  + this.p.v[1];\r\n                this.v.setTripleAt(x,y,x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir,x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir, i, true);\r\n                /*this.v.v[i] = [x,y];\r\n                this.v.i[i] = [x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir];\r\n                this.v.o[i] = [x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir];*/\r\n                currentAng += angle*dir;\r\n            }\r\n            this.paths.length = 0;\r\n            this.paths[0] = this.v;\r\n        }\r\n\r\n        function convertStarToPath() {\r\n            var numPts = Math.floor(this.pt.v)*2;\r\n            var angle = Math.PI*2/numPts;\r\n            /*this.v.v.length = numPts;\r\n            this.v.i.length = numPts;\r\n            this.v.o.length = numPts;*/\r\n            var longFlag = true;\r\n            var longRad = this.or.v;\r\n            var shortRad = this.ir.v;\r\n            var longRound = this.os.v;\r\n            var shortRound = this.is.v;\r\n            var longPerimSegment = 2*Math.PI*longRad/(numPts*2);\r\n            var shortPerimSegment = 2*Math.PI*shortRad/(numPts*2);\r\n            var i, rad,roundness,perimSegment, currentAng = -Math.PI/ 2;\r\n            currentAng += this.r.v;\r\n            var dir = this.data.d === 3 ? -1 : 1;\r\n            this.v._length = 0;\r\n            for(i=0;i<numPts;i+=1){\r\n                rad = longFlag ? longRad : shortRad;\r\n                roundness = longFlag ? longRound : shortRound;\r\n                perimSegment = longFlag ? longPerimSegment : shortPerimSegment;\r\n                var x = rad * Math.cos(currentAng);\r\n                var y = rad * Math.sin(currentAng);\r\n                var ox = x === 0 && y === 0 ? 0 : y/Math.sqrt(x*x + y*y);\r\n                var oy = x === 0 && y === 0 ? 0 : -x/Math.sqrt(x*x + y*y);\r\n                x +=  + this.p.v[0];\r\n                y +=  + this.p.v[1];\r\n                this.v.setTripleAt(x,y,x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir,x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir, i, true);\r\n\r\n                /*this.v.v[i] = [x,y];\r\n                this.v.i[i] = [x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir];\r\n                this.v.o[i] = [x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir];\r\n                this.v._length = numPts;*/\r\n                longFlag = !longFlag;\r\n                currentAng += angle*dir;\r\n            }\r\n        }\r\n\r\n        function processKeys() {\r\n            if(this.elem.globalData.frameId === this.frameId){\r\n                return;\r\n            }\r\n            this.mdf = false;\r\n            this.frameId = this.elem.globalData.frameId;\r\n            var i, len = this.dynamicProperties.length;\r\n\r\n            for(i=0;i<len;i+=1){\r\n                this.dynamicProperties[i].getValue();\r\n                if(this.dynamicProperties[i].mdf){\r\n                    this.mdf = true;\r\n                }\r\n            }\r\n            if(this.mdf){\r\n                this.convertToPath();\r\n            }\r\n        }\r\n\r\n        return function StarShapeProperty(elem,data) {\r\n            /*this.v = {\r\n                v: [],\r\n                i: [],\r\n                o: [],\r\n                c: true\r\n            };*/\r\n            this.v = shape_pool.newShape();\r\n            this.v.setPathData(true, 0);\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.data = data;\r\n            this.frameId = -1;\r\n            this.d = data.d;\r\n            this.dynamicProperties = [];\r\n            this.mdf = false;\r\n            this.getValue = processKeys;\r\n            this.reset = resetShape;\r\n            if(data.sy === 1){\r\n                this.ir = PropertyFactory.getProp(elem,data.ir,0,0,this.dynamicProperties);\r\n                this.is = PropertyFactory.getProp(elem,data.is,0,0.01,this.dynamicProperties);\r\n                this.convertToPath = convertStarToPath;\r\n            } else {\r\n                this.convertToPath = convertPolygonToPath;\r\n            }\r\n            this.pt = PropertyFactory.getProp(elem,data.pt,0,0,this.dynamicProperties);\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this.dynamicProperties);\r\n            this.r = PropertyFactory.getProp(elem,data.r,0,degToRads,this.dynamicProperties);\r\n            this.or = PropertyFactory.getProp(elem,data.or,0,0,this.dynamicProperties);\r\n            this.os = PropertyFactory.getProp(elem,data.os,0,0.01,this.dynamicProperties);\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.paths = this.localShapeCollection;\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.convertToPath();\r\n            }\r\n        }\r\n    }());\r\n\r\n    var RectShapeProperty = (function() {\r\n        function processKeys(frameNum){\r\n            if(this.elem.globalData.frameId === this.frameId){\r\n                return;\r\n            }\r\n            this.mdf = false;\r\n            this.frameId = this.elem.globalData.frameId;\r\n            var i, len = this.dynamicProperties.length;\r\n\r\n            for(i=0;i<len;i+=1){\r\n                this.dynamicProperties[i].getValue(frameNum);\r\n                if(this.dynamicProperties[i].mdf){\r\n                    this.mdf = true;\r\n                }\r\n            }\r\n            if(this.mdf){\r\n                this.convertRectToPath();\r\n            }\r\n\r\n        }\r\n\r\n        function convertRectToPath(){\r\n            var p0 = this.p.v[0], p1 = this.p.v[1], v0 = this.s.v[0]/2, v1 = this.s.v[1]/2;\r\n            var round = bm_min(v0,v1,this.r.v);\r\n            var cPoint = round*(1-roundCorner);\r\n            this.v._length = 0;\r\n\r\n            if(this.d === 2 || this.d === 1) {\r\n                this.v.setTripleAt(p0+v0, p1-v1+round,p0+v0, p1-v1+round,p0+v0,p1-v1+cPoint,0, true);\r\n                this.v.setTripleAt(p0+v0, p1+v1-round,p0+v0, p1+v1-cPoint,p0+v0, p1+v1-round,1, true);\r\n                if(round!== 0){\r\n                    this.v.setTripleAt(p0+v0-round, p1+v1,p0+v0-round,p1+v1,p0+v0-cPoint,p1+v1,2, true);\r\n                    this.v.setTripleAt(p0-v0+round,p1+v1,p0-v0+cPoint,p1+v1,p0-v0+round,p1+v1,3, true);\r\n                    this.v.setTripleAt(p0-v0,p1+v1-round,p0-v0,p1+v1-round,p0-v0,p1+v1-cPoint,4, true);\r\n                    this.v.setTripleAt(p0-v0,p1-v1+round,p0-v0,p1-v1+cPoint,p0-v0,p1-v1+round,5, true);\r\n                    this.v.setTripleAt(p0-v0+round,p1-v1,p0-v0+round,p1-v1,p0-v0+cPoint,p1-v1,6, true);\r\n                    this.v.setTripleAt(p0+v0-round,p1-v1,p0+v0-cPoint,p1-v1,p0+v0-round,p1-v1,7, true);\r\n                } else {\r\n                    this.v.setTripleAt(p0-v0,p1+v1,p0-v0+cPoint,p1+v1,p0-v0,p1+v1,2);\r\n                    this.v.setTripleAt(p0-v0,p1-v1,p0-v0,p1-v1+cPoint,p0-v0,p1-v1,3);\r\n                }\r\n            }else{\r\n                this.v.setTripleAt(p0+v0,p1-v1+round,p0+v0,p1-v1+cPoint,p0+v0,p1-v1+round,0, true);\r\n                if(round!== 0){\r\n                    this.v.setTripleAt(p0+v0-round,p1-v1,p0+v0-round,p1-v1,p0+v0-cPoint,p1-v1,1, true);\r\n                    this.v.setTripleAt(p0-v0+round,p1-v1,p0-v0+cPoint,p1-v1,p0-v0+round,p1-v1,2, true);\r\n                    this.v.setTripleAt(p0-v0,p1-v1+round,p0-v0,p1-v1+round,p0-v0,p1-v1+cPoint,3, true);\r\n                    this.v.setTripleAt(p0-v0,p1+v1-round,p0-v0,p1+v1-cPoint,p0-v0,p1+v1-round,4, true);\r\n                    this.v.setTripleAt(p0-v0+round,p1+v1,p0-v0+round,p1+v1,p0-v0+cPoint,p1+v1,5, true);\r\n                    this.v.setTripleAt(p0+v0-round,p1+v1,p0+v0-cPoint,p1+v1,p0+v0-round,p1+v1,6, true);\r\n                    this.v.setTripleAt(p0+v0,p1+v1-round,p0+v0,p1+v1-round,p0+v0,p1+v1-cPoint,7, true);\r\n                } else {\r\n                    this.v.setTripleAt(p0-v0,p1-v1,p0-v0+cPoint,p1-v1,p0-v0,p1-v1,1, true);\r\n                    this.v.setTripleAt(p0-v0,p1+v1,p0-v0,p1+v1-cPoint,p0-v0,p1+v1,2, true);\r\n                    this.v.setTripleAt(p0+v0,p1+v1,p0+v0-cPoint,p1+v1,p0+v0,p1+v1,3, true);\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        return function RectShapeProperty(elem,data) {\r\n            this.v = shape_pool.newShape();\r\n            this.v.c = true;\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.paths = this.localShapeCollection;\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.frameId = -1;\r\n            this.d = data.d;\r\n            this.dynamicProperties = [];\r\n            this.mdf = false;\r\n            this.getValue = processKeys;\r\n            this.convertRectToPath = convertRectToPath;\r\n            this.reset = resetShape;\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this.dynamicProperties);\r\n            this.s = PropertyFactory.getProp(elem,data.s,1,0,this.dynamicProperties);\r\n            this.r = PropertyFactory.getProp(elem,data.r,0,0,this.dynamicProperties);\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.convertRectToPath();\r\n            }\r\n        }\r\n    }());\r\n\r\n    function getShapeProp(elem,data,type, arr){\r\n        var prop;\r\n        if(type === 3 || type === 4){\r\n            var dataProp = type === 3 ? data.pt : data.ks;\r\n            var keys = dataProp.k;\r\n            if(dataProp.a === 1 || keys.length){\r\n                prop = new KeyframedShapeProperty(elem, data, type);\r\n            }else{\r\n                prop = new ShapeProperty(elem, data, type);\r\n            }\r\n        }else if(type === 5){\r\n            prop = new RectShapeProperty(elem, data);\r\n        }else if(type === 6){\r\n            prop = new EllShapeProperty(elem, data);\r\n        }else if(type === 7){\r\n            prop = new StarShapeProperty(elem, data);\r\n        }\r\n        if(prop.k){\r\n            arr.push(prop);\r\n        }\r\n        return prop;\r\n    }\r\n\r\n    function getConstructorFunction() {\r\n        return ShapeProperty;\r\n    }\r\n\r\n    function getKeyframedConstructorFunction() {\r\n        return KeyframedShapeProperty;\r\n    }\r\n\r\n    var ob = {};\r\n    ob.getShapeProp = getShapeProp;\r\n    ob.getConstructorFunction = getConstructorFunction;\r\n    ob.getKeyframedConstructorFunction = getKeyframedConstructorFunction;\r\n    return ob;\r\n}());\nvar ShapeModifiers = (function(){\r\n    var ob = {};\r\n    var modifiers = {};\r\n    ob.registerModifier = registerModifier;\r\n    ob.getModifier = getModifier;\r\n\r\n    function registerModifier(nm,factory){\r\n        if(!modifiers[nm]){\r\n            modifiers[nm] = factory;\r\n        }\r\n    }\r\n\r\n    function getModifier(nm,elem, data, dynamicProperties){\r\n        return new modifiers[nm](elem, data, dynamicProperties);\r\n    }\r\n\r\n    return ob;\r\n}());\r\n\r\nfunction ShapeModifier(){}\r\nShapeModifier.prototype.initModifierProperties = function(){};\r\nShapeModifier.prototype.addShapeToModifier = function(){};\r\nShapeModifier.prototype.addShape = function(data){\r\n    if(!this.closed){\r\n        this.shapes.push({shape:data.sh, data: data, localShapeCollection:shapeCollection_pool.newShapeCollection()});\r\n        this.addShapeToModifier(data.sh);\r\n    }\r\n}\r\nShapeModifier.prototype.init = function(elem,data,dynamicProperties){\r\n    this.elem = elem;\r\n    this.frameId = -1;\r\n    this.shapes = [];\r\n    this.dynamicProperties = [];\r\n    this.mdf = false;\r\n    this.closed = false;\r\n    this.k = false;\r\n    this.comp = elem.comp;\r\n    this.initModifierProperties(elem,data);\r\n    if(this.dynamicProperties.length){\r\n        this.k = true;\r\n        dynamicProperties.push(this);\r\n    }else{\r\n        this.getValue(true);\r\n    }\r\n}\nfunction TrimModifier(){};\r\nextendPrototype(ShapeModifier,TrimModifier);\r\nTrimModifier.prototype.processKeys = function(forceRender){\r\n    if(this.elem.globalData.frameId === this.frameId && !forceRender){\r\n        return;\r\n    }\r\n    this.mdf = forceRender ? true : false;\r\n    this.frameId = this.elem.globalData.frameId;\r\n    var i, len = this.dynamicProperties.length;\r\n\r\n    for(i=0;i<len;i+=1){\r\n        this.dynamicProperties[i].getValue();\r\n        if(this.dynamicProperties[i].mdf){\r\n            this.mdf = true;\r\n        }\r\n    }\r\n    if(this.mdf || forceRender){\r\n        var o = (this.o.v%360)/360;\r\n        if(o < 0){\r\n            o += 1;\r\n        }\r\n        var s = this.s.v + o;\r\n        var e = this.e.v + o;\r\n        if(s == e){\r\n\r\n        }\r\n        if(s>e){\r\n            var _s = s;\r\n            s = e;\r\n            e = _s;\r\n        }\r\n        this.sValue = s;\r\n        this.eValue = e;\r\n        this.oValue = o;\r\n    }\r\n}\r\nTrimModifier.prototype.initModifierProperties = function(elem,data){\r\n    this.sValue = 0;\r\n    this.eValue = 0;\r\n    this.oValue = 0;\r\n    this.getValue = this.processKeys;\r\n    this.s = PropertyFactory.getProp(elem,data.s,0,0.01,this.dynamicProperties);\r\n    this.e = PropertyFactory.getProp(elem,data.e,0,0.01,this.dynamicProperties);\r\n    this.o = PropertyFactory.getProp(elem,data.o,0,0,this.dynamicProperties);\r\n    this.m = data.m;\r\n    if(!this.dynamicProperties.length){\r\n        this.getValue(true);\r\n    }\r\n};\r\n\r\nTrimModifier.prototype.calculateShapeEdges = function(s, e, shapeLength, addedLength, totalModifierLength) {\r\n    var segments = []\r\n    if(e <= 1){\r\n        segments.push({\r\n            s: s,\r\n            e: e\r\n        })\r\n    }else if(s >= 1){\r\n        segments.push({\r\n            s: s - 1,\r\n            e: e - 1\r\n        })\r\n    }else{\r\n        segments.push({\r\n            s: s,\r\n            e: 1\r\n        })\r\n        segments.push({\r\n            s: 0,\r\n            e: e - 1\r\n        })\r\n    }\r\n    var shapeSegments = [];\r\n    var i, len = segments.length, segmentOb;\r\n    for(i = 0; i < len; i += 1) {\r\n        segmentOb = segments[i];\r\n        if (segmentOb.e * totalModifierLength < addedLength || segmentOb.s * totalModifierLength > addedLength + shapeLength) {\r\n            \r\n        } else {\r\n            var shapeS, shapeE;\r\n            if(segmentOb.s * totalModifierLength <= addedLength) {\r\n                shapeS = 0;\r\n            } else {\r\n                shapeS = (segmentOb.s * totalModifierLength - addedLength) / shapeLength;\r\n            }\r\n            if(segmentOb.e * totalModifierLength >= addedLength + shapeLength) {\r\n                shapeE = 1;\r\n            } else {\r\n                shapeE = ((segmentOb.e * totalModifierLength - addedLength) / shapeLength);\r\n            }\r\n            shapeSegments.push([shapeS, shapeE]);\r\n        }\r\n    }\r\n    if(!shapeSegments.length){\r\n        shapeSegments.push([0,0]);\r\n    }\r\n    return shapeSegments;\r\n}\r\n\r\nTrimModifier.prototype.processShapes = function(firstFrame){\r\n    var shapePaths;\r\n    var i, len = this.shapes.length;\r\n    var j, jLen;\r\n    var s = this.sValue;\r\n    var e = this.eValue;\r\n    var pathsData,pathData, totalShapeLength, totalModifierLength = 0;\r\n\r\n    if(e === s){\r\n        for(i=0;i<len;i+=1){\r\n            this.shapes[i].localShapeCollection.releaseShapes();\r\n            this.shapes[i].shape.mdf = true;\r\n            this.shapes[i].shape.paths = this.shapes[i].localShapeCollection;\r\n        }\r\n    } else if(!((e === 1 && s === 0) || (e===0 && s === 1))){\r\n        var segments = [], shapeData, localShapeCollection;\r\n        for(i=0;i<len;i+=1){\r\n            shapeData = this.shapes[i];\r\n            if(!shapeData.shape.mdf && !this.mdf && !firstFrame && this.m !== 2){\r\n                shapeData.shape.paths = shapeData.localShapeCollection;\r\n            } else {\r\n                shapePaths = shapeData.shape.paths;\r\n                jLen = shapePaths._length;\r\n                totalShapeLength = 0;\r\n                if(!shapeData.shape.mdf && shapeData.pathsData){\r\n                    totalShapeLength = shapeData.totalShapeLength;\r\n                } else {\r\n                    pathsData = [];\r\n                    for(j=0;j<jLen;j+=1){\r\n                        pathData = bez.getSegmentsLength(shapePaths.shapes[j]);\r\n                        pathsData.push(pathData);\r\n                        totalShapeLength += pathData.totalLength;\r\n                    }\r\n                    shapeData.totalShapeLength = totalShapeLength;\r\n                    shapeData.pathsData = pathsData;\r\n                }\r\n\r\n                totalModifierLength += totalShapeLength;\r\n                shapeData.shape.mdf = true;\r\n            }\r\n        }\r\n        var shapeS = s, shapeE = e, addedLength = 0;\r\n        var j, jLen;\r\n        for(i = len - 1; i >= 0; i -= 1){\r\n            shapeData = this.shapes[i];\r\n            if (shapeData.shape.mdf) {\r\n                localShapeCollection = shapeData.localShapeCollection;\r\n                localShapeCollection.releaseShapes();\r\n                if(this.m === 2 && len > 1) {\r\n                    var edges = this.calculateShapeEdges(s, e, shapeData.totalShapeLength, addedLength, totalModifierLength);\r\n                    addedLength += shapeData.totalShapeLength;\r\n                } else {\r\n                    edges = [[shapeS, shapeE]]\r\n                }\r\n                jLen = edges.length;\r\n                for (j = 0; j < jLen; j += 1) {\r\n                    shapeS = edges[j][0];\r\n                    shapeE = edges[j][1];\r\n                    segments.length = 0;\r\n                    if(shapeE <= 1){\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * shapeS,\r\n                            e:shapeData.totalShapeLength * shapeE\r\n                        })\r\n                    }else if(shapeS >= 1){\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * (shapeS - 1),\r\n                            e:shapeData.totalShapeLength * (shapeE - 1)\r\n                        })\r\n                    }else{\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * shapeS,\r\n                            e:shapeData.totalShapeLength\r\n                        })\r\n                        segments.push({\r\n                            s:0,\r\n                            e:shapeData.totalShapeLength*(shapeE - 1)\r\n                        })\r\n                    }\r\n                    var newShapesData = this.addShapes(shapeData,segments[0]);\r\n                    if (segments[0].s !== segments[0].e) {\r\n                        var lastPos;\r\n                        if(segments.length > 1){\r\n                            if(shapeData.shape.v.c){\r\n                                var lastShape = newShapesData.pop();\r\n                                this.addPaths(newShapesData, localShapeCollection);\r\n                                newShapesData = this.addShapes(shapeData,segments[1], lastShape);\r\n                            } else {\r\n                                this.addPaths(newShapesData, localShapeCollection);\r\n                                newShapesData = this.addShapes(shapeData,segments[1]);\r\n                            }\r\n                        } \r\n                        this.addPaths(newShapesData, localShapeCollection);\r\n                    }\r\n                    \r\n                }\r\n                shapeData.shape.paths = localShapeCollection;\r\n            }\r\n        }\r\n    } else if(this.mdf){\r\n        for(i=0;i<len;i+=1){\r\n            this.shapes[i].shape.mdf = true;\r\n        }\r\n    }\r\n    if(!this.dynamicProperties.length){\r\n        this.mdf = false;\r\n    }\r\n}\r\n\r\nTrimModifier.prototype.addPaths = function(newPaths, localShapeCollection) {\r\n    var i, len = newPaths.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        localShapeCollection.addShape(newPaths[i])\r\n    }\r\n}\r\n\r\nTrimModifier.prototype.addSegment = function(pt1,pt2,pt3,pt4,shapePath,pos, newShape) {\r\n    /*console.log(pt1, 'vertex: v, at: ', pos);\r\n    console.log(pt2, 'vertex: o, at: ', pos);\r\n    console.log(pt3, 'vertex: i, at: ', pos + 1);\r\n    console.log(pt4, 'vertex: v, at: ', pos + 1);\r\n    console.log('newShape: ', newShape);*/\r\n    shapePath.setXYAt(pt2[0],pt2[1],'o',pos);\r\n    shapePath.setXYAt(pt3[0],pt3[1],'i',pos + 1);\r\n    if(newShape){\r\n        shapePath.setXYAt(pt1[0],pt1[1],'v',pos);\r\n    }\r\n    shapePath.setXYAt(pt4[0],pt4[1],'v',pos + 1);\r\n}\r\n\r\nTrimModifier.prototype.addShapes = function(shapeData, shapeSegment, shapePath){\r\n    var pathsData = shapeData.pathsData;\r\n    var shapePaths = shapeData.shape.paths.shapes;\r\n    var i, len = shapeData.shape.paths._length, j, jLen;\r\n    var addedLength = 0;\r\n    var currentLengthData,segmentCount;\r\n    var lengths;\r\n    var segment;\r\n    var shapes = [];\r\n    var initPos;\r\n    var newShape = true;\r\n    if(!shapePath){\r\n        shapePath = shape_pool.newShape();\r\n        segmentCount = 0;\r\n        initPos = 0;\r\n    } else {\r\n        segmentCount = shapePath._length;\r\n        initPos = shapePath._length;\r\n    }\r\n    shapes.push(shapePath);\r\n    for(i=0;i<len;i+=1){\r\n        lengths = pathsData[i].lengths;\r\n        shapePath.c = shapePaths[i].c;\r\n        jLen = shapePaths[i].c ? lengths.length : lengths.length + 1;\r\n        for(j=1;j<jLen;j+=1){\r\n            currentLengthData = lengths[j-1];\r\n            if(addedLength + currentLengthData.addedLength < shapeSegment.s){\r\n                addedLength += currentLengthData.addedLength;\r\n                shapePath.c = false;\r\n            } else if(addedLength > shapeSegment.e){\r\n                shapePath.c = false;\r\n                break;\r\n            } else {\r\n                if(shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + currentLengthData.addedLength){\r\n                    this.addSegment(shapePaths[i].v[j-1],shapePaths[i].o[j-1],shapePaths[i].i[j],shapePaths[i].v[j],shapePath,segmentCount,newShape);\r\n                    newShape = false;\r\n                } else {\r\n                    segment = bez.getNewSegment(shapePaths[i].v[j-1],shapePaths[i].v[j],shapePaths[i].o[j-1],shapePaths[i].i[j], (shapeSegment.s - addedLength)/currentLengthData.addedLength,(shapeSegment.e - addedLength)/currentLengthData.addedLength, lengths[j-1]);\r\n                    this.addSegment(segment.pt1,segment.pt3,segment.pt4,segment.pt2,shapePath,segmentCount,newShape);\r\n                    newShape = false;\r\n                    shapePath.c = false;\r\n                }\r\n                addedLength += currentLengthData.addedLength;\r\n                segmentCount += 1;\r\n            }\r\n        }\r\n        if(shapePaths[i].c){\r\n            currentLengthData = lengths[j-1];\r\n            if(addedLength <= shapeSegment.e){\r\n                var segmentLength = lengths[j-1].addedLength;\r\n                if(shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + segmentLength){\r\n                    this.addSegment(shapePaths[i].v[j-1],shapePaths[i].o[j-1],shapePaths[i].i[0],shapePaths[i].v[0],shapePath,segmentCount,newShape);\r\n                    newShape = false;\r\n                }else{\r\n                    segment = bez.getNewSegment(shapePaths[i].v[j-1],shapePaths[i].v[0],shapePaths[i].o[j-1],shapePaths[i].i[0], (shapeSegment.s - addedLength)/segmentLength,(shapeSegment.e - addedLength)/segmentLength, lengths[j-1]);\r\n                    this.addSegment(segment.pt1,segment.pt3,segment.pt4,segment.pt2,shapePath,segmentCount,newShape);\r\n                    newShape = false;\r\n                    shapePath.c = false;\r\n                }\r\n            } else {\r\n                shapePath.c = false;\r\n            }\r\n            addedLength += currentLengthData.addedLength;\r\n            segmentCount += 1;\r\n        }\r\n        if(shapePath._length){\r\n            shapePath.setXYAt(shapePath.v[initPos][0],shapePath.v[initPos][1],'i',initPos);\r\n            shapePath.setXYAt(shapePath.v[shapePath._length - 1][0],shapePath.v[shapePath._length - 1][1],'o',shapePath._length - 1);\r\n        }\r\n        if(addedLength > shapeSegment.e){\r\n            break;\r\n        }\r\n        if(i<len-1){\r\n            shapePath = shape_pool.newShape();\r\n            newShape = true;\r\n            shapes.push(shapePath);\r\n            segmentCount = 0;\r\n        }\r\n    }\r\n    return shapes;\r\n\r\n}\r\n\r\n\r\nShapeModifiers.registerModifier('tm',TrimModifier);\nfunction RoundCornersModifier(){};\r\nextendPrototype(ShapeModifier,RoundCornersModifier);\r\nRoundCornersModifier.prototype.processKeys = function(forceRender){\r\n    if(this.elem.globalData.frameId === this.frameId && !forceRender){\r\n        return;\r\n    }\r\n    this.mdf = forceRender ? true : false;\r\n    this.frameId = this.elem.globalData.frameId;\r\n    var i, len = this.dynamicProperties.length;\r\n\r\n    for(i=0;i<len;i+=1){\r\n        this.dynamicProperties[i].getValue();\r\n        if(this.dynamicProperties[i].mdf){\r\n            this.mdf = true;\r\n        }\r\n    }\r\n}\r\nRoundCornersModifier.prototype.initModifierProperties = function(elem,data){\r\n    this.getValue = this.processKeys;\r\n    this.rd = PropertyFactory.getProp(elem,data.r,0,null,this.dynamicProperties);\r\n    if(!this.dynamicProperties.length){\r\n        this.getValue(true);\r\n    }\r\n};\r\n\r\nRoundCornersModifier.prototype.processPath = function(path, round){\r\n    var cloned_path = shape_pool.newShape();\r\n    cloned_path.c = path.c;\r\n    var i, len = path._length;\r\n    var currentV,currentI,currentO,closerV, newV,newO,newI,distance,newPosPerc,index = 0;\r\n    var vX,vY,oX,oY,iX,iY;\r\n    for(i=0;i<len;i+=1){\r\n        currentV = path.v[i];\r\n        currentO = path.o[i];\r\n        currentI = path.i[i];\r\n        if(currentV[0]===currentO[0] && currentV[1]===currentO[1] && currentV[0]===currentI[0] && currentV[1]===currentI[1]){\r\n            if((i===0 || i === len - 1) && !path.c){\r\n                cloned_path.setTripleAt(currentV[0],currentV[1],currentO[0],currentO[1],currentI[0],currentI[1],index);\r\n                /*cloned_path.v[index] = currentV;\r\n                cloned_path.o[index] = currentO;\r\n                cloned_path.i[index] = currentI;*/\r\n                index += 1;\r\n            } else {\r\n                if(i===0){\r\n                    closerV = path.v[len-1];\r\n                } else {\r\n                    closerV = path.v[i-1];\r\n                }\r\n                distance = Math.sqrt(Math.pow(currentV[0]-closerV[0],2)+Math.pow(currentV[1]-closerV[1],2));\r\n                newPosPerc = distance ? Math.min(distance/2,round)/distance : 0;\r\n                vX = iX = currentV[0]+(closerV[0]-currentV[0])*newPosPerc;\r\n                vY = iY = currentV[1]-(currentV[1]-closerV[1])*newPosPerc;\r\n                oX = vX-(vX-currentV[0])*roundCorner;\r\n                oY = vY-(vY-currentV[1])*roundCorner;\r\n                cloned_path.setTripleAt(vX,vY,oX,oY,iX,iY,index);\r\n                index += 1;\r\n\r\n                if(i === len - 1){\r\n                    closerV = path.v[0];\r\n                } else {\r\n                    closerV = path.v[i+1];\r\n                }\r\n                distance = Math.sqrt(Math.pow(currentV[0]-closerV[0],2)+Math.pow(currentV[1]-closerV[1],2));\r\n                newPosPerc = distance ? Math.min(distance/2,round)/distance : 0;\r\n                vX = oX = currentV[0]+(closerV[0]-currentV[0])*newPosPerc;\r\n                vY = oY = currentV[1]+(closerV[1]-currentV[1])*newPosPerc;\r\n                iX = vX-(vX-currentV[0])*roundCorner;\r\n                iY = vY-(vY-currentV[1])*roundCorner;\r\n                cloned_path.setTripleAt(vX,vY,oX,oY,iX,iY,index);\r\n                index += 1;\r\n            }\r\n        } else {\r\n            cloned_path.setTripleAt(path.v[i][0],path.v[i][1],path.o[i][0],path.o[i][1],path.i[i][0],path.i[i][1],index);\r\n            index += 1;\r\n        }\r\n    }\r\n    return cloned_path;\r\n}\r\n\r\nRoundCornersModifier.prototype.processShapes = function(firstFrame){\r\n    var shapePaths;\r\n    var i, len = this.shapes.length;\r\n    var j, jLen;\r\n    var rd = this.rd.v;\r\n\r\n    if(rd !== 0){\r\n        var shapeData, newPaths, localShapeCollection;\r\n        for(i=0;i<len;i+=1){\r\n            shapeData = this.shapes[i];\r\n            newPaths = shapeData.shape.paths;\r\n            localShapeCollection = shapeData.localShapeCollection;\r\n            if(!(!shapeData.shape.mdf && !this.mdf && !firstFrame)){\r\n                localShapeCollection.releaseShapes();\r\n                shapeData.shape.mdf = true;\r\n                shapePaths = shapeData.shape.paths.shapes;\r\n                jLen = shapeData.shape.paths._length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    localShapeCollection.addShape(this.processPath(shapePaths[j],rd));\r\n                }\r\n            }\r\n            shapeData.shape.paths = shapeData.localShapeCollection;\r\n        }\r\n\r\n    }\r\n    if(!this.dynamicProperties.length){\r\n        this.mdf = false;\r\n    }\r\n}\r\n\r\n\r\nShapeModifiers.registerModifier('rd',RoundCornersModifier);\nfunction RepeaterModifier(){};\r\nRepeaterModifier.prototype.processKeys = function(forceRender){\r\n    if(this.elem.globalData.frameId === this.frameId && !forceRender){\r\n        return;\r\n    }\r\n    this.mdf = forceRender ? true : false;\r\n    var i, len = this.dynamicProperties.length;\r\n\r\n    for(i=0;i<len;i+=1){\r\n        this.dynamicProperties[i].getValue();\r\n        if(this.dynamicProperties[i].mdf){\r\n            this.mdf = true;\r\n        }\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.initModifierProperties = function(elem,data){\r\n    this.getValue = this.processKeys;\r\n    this.c = PropertyFactory.getProp(elem,data.c,0,null,this.dynamicProperties);\r\n    this.o = PropertyFactory.getProp(elem,data.o,0,null,this.dynamicProperties);\r\n    this.tr = PropertyFactory.getProp(elem,data.tr,2,null,this.dynamicProperties);\r\n    this.data = data;\r\n    if(!this.dynamicProperties.length){\r\n        this.getValue(true);\r\n    }\r\n    this.pMatrix = new Matrix();\r\n    this.rMatrix = new Matrix();\r\n    this.sMatrix = new Matrix();\r\n    this.tMatrix = new Matrix();\r\n    this.matrix = new Matrix();\r\n};\r\n\r\nRepeaterModifier.prototype.applyTransforms = function(pMatrix, rMatrix, sMatrix, transform, perc, inv){\r\n    var dir = inv ? -1 : 1;\r\n    var scaleX = transform.s.v[0] + (1 - transform.s.v[0]) * (1 - perc);\r\n    var scaleY = transform.s.v[1] + (1 - transform.s.v[1]) * (1 - perc);\r\n    pMatrix.translate(transform.p.v[0] * dir * perc, transform.p.v[1] * dir * perc, transform.p.v[2]);\r\n    rMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\r\n    rMatrix.rotate(-transform.r.v * dir * perc);\r\n    rMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\r\n    sMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\r\n    sMatrix.scale(inv ? 1/scaleX : scaleX, inv ? 1/scaleY : scaleY);\r\n    sMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\r\n}\r\n\r\nRepeaterModifier.prototype.init = function(elem, arr, pos, elemsData, dynamicProperties) {\r\n    this.elem = elem;\r\n    this.arr = arr;\r\n    this.pos = pos;\r\n    this.elemsData = elemsData;\r\n    this._currentCopies = 0;\r\n    this._elements = [];\r\n    this._groups = [];\r\n    this.dynamicProperties = [];\r\n    this.frameId = -1;\r\n    this.initModifierProperties(elem,arr[pos]);\r\n    var cont = 0;\r\n    while(pos>0){\r\n        pos -= 1;\r\n        //this._elements.unshift(arr.splice(pos,1)[0]);\r\n        this._elements.unshift(arr[pos]);\r\n        cont += 1;\r\n    }\r\n    if(this.dynamicProperties.length){\r\n        this.k = true;\r\n        dynamicProperties.push(this);\r\n    }else{\r\n        this.getValue(true);\r\n    }\r\n}\r\n\r\nRepeaterModifier.prototype.resetElements = function(elements){\r\n    var i, len = elements.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        elements[i]._processed = false;\r\n        if(elements[i].ty === 'gr'){\r\n            this.resetElements(elements[i].it);\r\n        }\r\n    }\r\n}\r\n\r\nRepeaterModifier.prototype.cloneElements = function(elements){\r\n    var i, len = elements.length;\r\n    var newElements = JSON.parse(JSON.stringify(elements));\r\n    this.resetElements(newElements);\r\n    return newElements;\r\n}\r\n\r\nRepeaterModifier.prototype.changeGroupRender = function(elements, renderFlag) {\r\n    var i, len = elements.length;\r\n    for(i = 0; i < len ; i += 1) {\r\n        elements[i]._render = renderFlag;\r\n        if(elements[i].ty === 'gr') {\r\n            this.changeGroupRender(elements[i].it, renderFlag);\r\n        }\r\n    }\r\n}\r\n\r\nRepeaterModifier.prototype.processShapes = function(firstFrame){\r\n\r\n    if(this.elem.globalData.frameId === this.frameId){\r\n        return;\r\n    }\r\n    this.frameId = this.elem.globalData.frameId;\r\n    if(!this.dynamicProperties.length && !firstFrame){\r\n        this.mdf = false;\r\n    }\r\n    if(this.mdf){\r\n        var copies = Math.ceil(this.c.v);\r\n        if(this._groups.length < copies){\r\n            while(this._groups.length < copies){\r\n                var group = {\r\n                    it:this.cloneElements(this._elements),\r\n                    ty:'gr'\r\n                }\r\n                group.it.push({\"a\":{\"a\":0,\"ix\":1,\"k\":[0,0]},\"nm\":\"Transform\",\"o\":{\"a\":0,\"ix\":7,\"k\":100},\"p\":{\"a\":0,\"ix\":2,\"k\":[0,0]},\"r\":{\"a\":0,\"ix\":6,\"k\":0},\"s\":{\"a\":0,\"ix\":3,\"k\":[100,100]},\"sa\":{\"a\":0,\"ix\":5,\"k\":0},\"sk\":{\"a\":0,\"ix\":4,\"k\":0},\"ty\":\"tr\"});\r\n                \r\n                this.arr.splice(0,0,group);\r\n                this._groups.splice(0,0,group);\r\n                this._currentCopies += 1;\r\n            }\r\n            this.elem.reloadShapes();\r\n        }\r\n        var i, cont = 0, renderFlag;\r\n        for(i = 0; i  <= this._groups.length - 1; i += 1){\r\n            renderFlag = cont < copies;\r\n            this._groups[i]._render = renderFlag;\r\n            this.changeGroupRender(this._groups[i].it, renderFlag);\r\n            cont += 1;\r\n        }\r\n        \r\n        this._currentCopies = copies;\r\n        this.elem.firstFrame = true;\r\n        ////\r\n\r\n        var offset = this.o.v;\r\n        var offsetModulo = offset%1;\r\n        var roundOffset = offset > 0 ? Math.floor(offset) : Math.ceil(offset);\r\n        var k;\r\n        var tMat = this.tr.v.props;\r\n        var pProps = this.pMatrix.props;\r\n        var rProps = this.rMatrix.props;\r\n        var sProps = this.sMatrix.props;\r\n        this.pMatrix.reset();\r\n        this.rMatrix.reset();\r\n        this.sMatrix.reset();\r\n        this.tMatrix.reset();\r\n        this.matrix.reset();\r\n        var iteration = 0;\r\n\r\n        if(offset > 0) {\r\n            while(iteration<roundOffset){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\r\n                iteration += 1;\r\n            }\r\n            if(offsetModulo){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, offsetModulo, false);\r\n                iteration += offsetModulo;\r\n            }\r\n        } else if(offset < 0) {\r\n            while(iteration>roundOffset){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, true);\r\n                iteration -= 1;\r\n            }\r\n            if(offsetModulo){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, - offsetModulo, true);\r\n                iteration -= offsetModulo;\r\n            }\r\n        }\r\n        i = this.data.m === 1 ? 0 : this._currentCopies - 1;\r\n        var dir = this.data.m === 1 ? 1 : -1;\r\n        cont = this._currentCopies;\r\n        while(cont){\r\n            if(iteration !== 0){\r\n                if((i !== 0 && dir === 1) || (i !== this._currentCopies - 1 && dir === -1)){\r\n                    this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\r\n                }\r\n                this.matrix.transform(rProps[0],rProps[1],rProps[2],rProps[3],rProps[4],rProps[5],rProps[6],rProps[7],rProps[8],rProps[9],rProps[10],rProps[11],rProps[12],rProps[13],rProps[14],rProps[15]);\r\n                this.matrix.transform(sProps[0],sProps[1],sProps[2],sProps[3],sProps[4],sProps[5],sProps[6],sProps[7],sProps[8],sProps[9],sProps[10],sProps[11],sProps[12],sProps[13],sProps[14],sProps[15]);\r\n                this.matrix.transform(pProps[0],pProps[1],pProps[2],pProps[3],pProps[4],pProps[5],pProps[6],pProps[7],pProps[8],pProps[9],pProps[10],pProps[11],pProps[12],pProps[13],pProps[14],pProps[15]);\r\n                var items = this.elemsData[i].it;\r\n                var itemsTransform = items[items.length - 1].transform.mProps.v.props;\r\n                var j, jLen = itemsTransform.length;\r\n                for(j=0;j<jLen;j+=1) {\r\n                    itemsTransform[j] = this.matrix.props[j];\r\n                }\r\n                this.matrix.reset();\r\n            } else {\r\n                this.matrix.reset();\r\n                var items = this.elemsData[i].it;\r\n                var itemsTransform = items[items.length - 1].transform.mProps.v.props;\r\n                var j, jLen = itemsTransform.length;\r\n                for(j=0;j<jLen;j+=1) {\r\n                    itemsTransform[j] = this.matrix.props[j];\r\n                }\r\n            }\r\n            iteration += 1;\r\n            cont -= 1;\r\n            i += dir;\r\n        }\r\n    }\r\n}\r\n\r\nRepeaterModifier.prototype.addShape = function(){}\r\n\r\nShapeModifiers.registerModifier('rp',RepeaterModifier);\nfunction ShapeCollection(){\r\n\tthis._length = 0;\r\n\tthis._maxLength = 4;\r\n\tthis.shapes = Array.apply(null,{length:this._maxLength});\r\n};\r\n\r\nShapeCollection.prototype.addShape = function(shapeData){\r\n\tif(this._length === this._maxLength){\r\n\t\tthis.shapes = this.shapes.concat(Array.apply(null,{length:this._maxLength}));\r\n\t\tthis._maxLength *= 2;\r\n\t}\r\n\tthis.shapes[this._length] = shapeData;\r\n\tthis._length += 1;\r\n};\r\n\r\nShapeCollection.prototype.releaseShapes = function(){\r\n\tvar i;\r\n\tfor(i = 0; i < this._length; i += 1) {\r\n\t\tshape_pool.release(this.shapes[i]);\r\n\t}\r\n\tthis._length = 0;\r\n};\nvar ImagePreloader = (function(){\r\n\r\n    var imagesLoadedCb;\r\n\r\n    function imageLoaded(){\r\n        this.loadedAssets += 1;\r\n        if(this.loadedAssets === this.totalImages){\r\n            if(imagesLoadedCb) {\r\n                imagesLoadedCb(null);\r\n            }\r\n        }\r\n    }\r\n\r\n    function getAssetsPath(assetData){\r\n        var path = '';\r\n        if(this.assetsPath){\r\n            var imagePath = assetData.p;\r\n            if(imagePath.indexOf('images/') !== -1){\r\n                imagePath = imagePath.split('/')[1];\r\n            }\r\n            path = this.assetsPath + imagePath;\r\n        } else {\r\n            path = this.path;\r\n            path += assetData.u ? assetData.u : '';\r\n            path += assetData.p;\r\n        }\r\n        return path;\r\n    }\r\n\r\n    function loadImage(path){\r\n        var img = document.createElement('img');\r\n        img.addEventListener('load', imageLoaded.bind(this), false);\r\n        img.addEventListener('error', imageLoaded.bind(this), false);\r\n        img.src = path;\r\n    }\r\n    function loadAssets(assets, cb){\r\n        imagesLoadedCb = cb;\r\n        this.totalAssets = assets.length;\r\n        var i;\r\n        for(i=0;i<this.totalAssets;i+=1){\r\n            if(!assets[i].layers){\r\n                loadImage.bind(this)(getAssetsPath.bind(this)(assets[i]));\r\n                this.totalImages += 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    function setPath(path){\r\n        this.path = path || '';\r\n    }\r\n\r\n    function setAssetsPath(path){\r\n        this.assetsPath = path || '';\r\n    }\r\n\r\n    return function ImagePreloader(){\r\n        this.loadAssets = loadAssets;\r\n        this.setAssetsPath = setAssetsPath;\r\n        this.setPath = setPath;\r\n        this.assetsPath = '';\r\n        this.path = '';\r\n        this.totalAssets = 0;\r\n        this.totalImages = 0;\r\n        this.loadedAssets = 0;\r\n    }\r\n}());\nvar featureSupport = (function(){\r\n\tvar ob = {\r\n\t\tmaskType: true\r\n\t}\r\n\tif (/MSIE 10/i.test(navigator.userAgent) || /MSIE 9/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /Edge\\/\\d./i.test(navigator.userAgent)) {\r\n\t   ob.maskType = false;\r\n\t}\r\n\treturn ob;\r\n}());\nvar filtersFactory = (function(){\r\n\tvar ob = {};\r\n\tob.createFilter = createFilter;\r\n\tob.createAlphaToLuminanceFilter = createAlphaToLuminanceFilter;\r\n\r\n\tfunction createFilter(filId){\r\n        \tvar fil = document.createElementNS(svgNS,'filter');\r\n        \tfil.setAttribute('id',filId);\r\n                fil.setAttribute('filterUnits','objectBoundingBox');\r\n                fil.setAttribute('x','0%');\r\n                fil.setAttribute('y','0%');\r\n                fil.setAttribute('width','100%');\r\n                fil.setAttribute('height','100%');\r\n                return fil;\r\n\t}\r\n\r\n\tfunction createAlphaToLuminanceFilter(){\r\n                var feColorMatrix = document.createElementNS(svgNS,'feColorMatrix');\r\n                feColorMatrix.setAttribute('type','matrix');\r\n                feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n                feColorMatrix.setAttribute('values','0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1');\r\n                return feColorMatrix;\r\n\t}\r\n\r\n\treturn ob;\r\n}())\nfunction TextAnimatorProperty(textData, renderType, elem){\r\n    this.mdf = false;\r\n    this._firstFrame = true;\r\n\tthis._hasMaskedPath = false;\r\n\tthis._frameId = -1;\r\n\tthis._dynamicProperties = [];\r\n\tthis._textData = textData;\r\n\tthis._renderType = renderType;\r\n\tthis._elem = elem;\r\n\tthis._animatorsData = Array.apply(null,{length:this._textData.a.length});\r\n\tthis._pathData = {}\r\n\tthis._moreOptions = {\r\n\t\talignment: {}\r\n\t};\r\n\tthis.renderedLetters = [];\r\n    this.lettersChangedFlag = false;\r\n\r\n}\r\n\r\nTextAnimatorProperty.prototype.searchProperties = function(dynamicProperties){\r\n    var i, len = this._textData.a.length, animatorData, animatorProps;\r\n    var getProp = PropertyFactory.getProp;\r\n    for(i=0;i<len;i+=1){\r\n        animatorProps = this._textData.a[i];\r\n        animatorData = {\r\n            a: {},\r\n            s: {}\r\n        };\r\n        if('r' in animatorProps.a) {\r\n            animatorData.a.r = getProp(this._elem,animatorProps.a.r,0,degToRads,this._dynamicProperties);\r\n        }\r\n        if('rx' in animatorProps.a) {\r\n            animatorData.a.rx = getProp(this._elem,animatorProps.a.rx,0,degToRads,this._dynamicProperties);\r\n        }\r\n        if('ry' in animatorProps.a) {\r\n            animatorData.a.ry = getProp(this._elem,animatorProps.a.ry,0,degToRads,this._dynamicProperties);\r\n        }\r\n        if('sk' in animatorProps.a) {\r\n            animatorData.a.sk = getProp(this._elem,animatorProps.a.sk,0,degToRads,this._dynamicProperties);\r\n        }\r\n        if('sa' in animatorProps.a) {\r\n            animatorData.a.sa = getProp(this._elem,animatorProps.a.sa,0,degToRads,this._dynamicProperties);\r\n        }\r\n        if('s' in animatorProps.a) {\r\n            animatorData.a.s = getProp(this._elem,animatorProps.a.s,1,0.01,this._dynamicProperties);\r\n        }\r\n        if('a' in animatorProps.a) {\r\n            animatorData.a.a = getProp(this._elem,animatorProps.a.a,1,0,this._dynamicProperties);\r\n        }\r\n        if('o' in animatorProps.a) {\r\n            animatorData.a.o = getProp(this._elem,animatorProps.a.o,0,0.01,this._dynamicProperties);\r\n        }\r\n        if('p' in animatorProps.a) {\r\n            animatorData.a.p = getProp(this._elem,animatorProps.a.p,1,0,this._dynamicProperties);\r\n        }\r\n        if('sw' in animatorProps.a) {\r\n            animatorData.a.sw = getProp(this._elem,animatorProps.a.sw,0,0,this._dynamicProperties);\r\n        }\r\n        if('sc' in animatorProps.a) {\r\n            animatorData.a.sc = getProp(this._elem,animatorProps.a.sc,1,0,this._dynamicProperties);\r\n        }\r\n        if('fc' in animatorProps.a) {\r\n            animatorData.a.fc = getProp(this._elem,animatorProps.a.fc,1,0,this._dynamicProperties);\r\n        }\r\n        if('fh' in animatorProps.a) {\r\n            animatorData.a.fh = getProp(this._elem,animatorProps.a.fh,0,0,this._dynamicProperties);\r\n        }\r\n        if('fs' in animatorProps.a) {\r\n            animatorData.a.fs = getProp(this._elem,animatorProps.a.fs,0,0.01,this._dynamicProperties);\r\n        }\r\n        if('fb' in animatorProps.a) {\r\n            animatorData.a.fb = getProp(this._elem,animatorProps.a.fb,0,0.01,this._dynamicProperties);\r\n        }\r\n        if('t' in animatorProps.a) {\r\n            animatorData.a.t = getProp(this._elem,animatorProps.a.t,0,0,this._dynamicProperties);\r\n        }\r\n        animatorData.s = PropertyFactory.getTextSelectorProp(this._elem,animatorProps.s,this._dynamicProperties);\r\n        animatorData.s.t = animatorProps.s.t;\r\n        this._animatorsData[i] = animatorData;\r\n    }\r\n    if(this._textData.p && 'm' in this._textData.p){\r\n        this._pathData = {\r\n            f: getProp(this._elem,this._textData.p.f,0,0,this._dynamicProperties),\r\n            l: getProp(this._elem,this._textData.p.l,0,0,this._dynamicProperties),\r\n            r: this._textData.p.r,\r\n            m: this._elem.maskManager.getMaskProperty(this._textData.p.m)\r\n        };\r\n        this._hasMaskedPath = true;\r\n    } else {\r\n        this._hasMaskedPath = false;\r\n    }\r\n    this._moreOptions.alignment = getProp(this._elem,this._textData.m.a,1,0,this._dynamicProperties);\r\n    if(this._dynamicProperties.length) {\r\n    \tdynamicProperties.push(this);\r\n    }\r\n}\r\n\r\nTextAnimatorProperty.prototype.getMeasures = function(documentData, lettersChangedFlag){\r\n    this.lettersChangedFlag = lettersChangedFlag;\r\n    if(!this.mdf && !this._firstFrame && !lettersChangedFlag && (!this._hasMaskedPath || !this._pathData.m.mdf)) {\r\n        return;\r\n    }\r\n    this._firstFrame = false;\r\n    var alignment = this._moreOptions.alignment.v;\r\n    var animators = this._animatorsData;\r\n    var textData = this._textData;\r\n    var matrixHelper = this.mHelper;\r\n    var renderType = this._renderType;\r\n    var renderedLettersCount = this.renderedLetters.length;\r\n    var data = this.data;\r\n    var xPos,yPos;\r\n    var i, len;\r\n    var letters = documentData.l;\r\n    if(this._hasMaskedPath) {\r\n        var mask = this._pathData.m;\r\n        if(!this._pathData.n || this._pathData.mdf){\r\n            var paths = mask.v;\r\n            if(this._pathData.r){\r\n                paths = reversePath(paths);\r\n            }\r\n            var pathInfo = {\r\n                tLength: 0,\r\n                segments: []\r\n            };\r\n            len = paths._length - 1;\r\n            var pathData;\r\n            var totalLength = 0;\r\n            for (i = 0; i < len; i += 1) {\r\n                pathData = {\r\n                    s: paths.v[i],\r\n                    e: paths.v[i + 1],\r\n                    to: [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]],\r\n                    ti: [paths.i[i + 1][0] - paths.v[i + 1][0], paths.i[i + 1][1] - paths.v[i + 1][1]]\r\n                };\r\n                bez.buildBezierData(pathData);\r\n                pathInfo.tLength += pathData.bezierData.segmentLength;\r\n                pathInfo.segments.push(pathData);\r\n                totalLength += pathData.bezierData.segmentLength;\r\n            }\r\n            i = len;\r\n            if (mask.v.c) {\r\n                pathData = {\r\n                    s: paths.v[i],\r\n                    e: paths.v[0],\r\n                    to: [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]],\r\n                    ti: [paths.i[0][0] - paths.v[0][0], paths.i[0][1] - paths.v[0][1]]\r\n                };\r\n                bez.buildBezierData(pathData);\r\n                pathInfo.tLength += pathData.bezierData.segmentLength;\r\n                pathInfo.segments.push(pathData);\r\n                totalLength += pathData.bezierData.segmentLength;\r\n            }\r\n            this._pathData.pi = pathInfo;\r\n        }\r\n        var pathInfo = this._pathData.pi;\r\n\r\n        var currentLength = this._pathData.f.v, segmentInd = 0, pointInd = 1, currentPoint, prevPoint, points;\r\n        var segmentLength = 0, flag = true;\r\n        var segments = pathInfo.segments;\r\n        if (currentLength < 0 && mask.v.c) {\r\n            if (pathInfo.tLength < Math.abs(currentLength)) {\r\n                currentLength = -Math.abs(currentLength) % pathInfo.tLength;\r\n            }\r\n            segmentInd = segments.length - 1;\r\n            points = segments[segmentInd].bezierData.points;\r\n            pointInd = points.length - 1;\r\n            while (currentLength < 0) {\r\n                currentLength += points[pointInd].partialLength;\r\n                pointInd -= 1;\r\n                if (pointInd < 0) {\r\n                    segmentInd -= 1;\r\n                    points = segments[segmentInd].bezierData.points;\r\n                    pointInd = points.length - 1;\r\n                }\r\n            }\r\n\r\n        }\r\n        points = segments[segmentInd].bezierData.points;\r\n        prevPoint = points[pointInd - 1];\r\n        currentPoint = points[pointInd];\r\n        var partialLength = currentPoint.partialLength;\r\n        var perc, tanAngle;\r\n    }\r\n\r\n\r\n    len = letters.length;\r\n    xPos = 0;\r\n    yPos = 0;\r\n    var yOff = documentData.s*1.2*.714;\r\n    var firstLine = true;\r\n    var animatorProps, animatorSelector;\r\n    var j, jLen;\r\n    var letterValue;\r\n\r\n    jLen = animators.length;\r\n    if (lettersChangedFlag) {\r\n        for (j = 0; j < jLen; j += 1) {\r\n            animatorSelector = animators[j].s;\r\n            animatorSelector.getValue(true);\r\n        }\r\n    }\r\n    var lastLetter;\r\n\r\n    var mult, ind = -1, offf, xPathPos, yPathPos;\r\n    var initPathPos = currentLength,initSegmentInd = segmentInd, initPointInd = pointInd, currentLine = -1;\r\n    var elemOpacity;\r\n    var sc,sw,fc,k;\r\n    var lineLength = 0;\r\n    var letterSw,letterSc,letterFc,letterM = '',letterP = this.defaultPropsArray,letterO;\r\n    for( i = 0; i < len; i += 1) {\r\n        matrixHelper.reset();\r\n        elemOpacity = 1;\r\n        if(letters[i].n) {\r\n            xPos = 0;\r\n            yPos += documentData.yOffset;\r\n            yPos += firstLine ? 1 : 0;\r\n            currentLength = initPathPos ;\r\n            firstLine = false;\r\n            lineLength = 0;\r\n            if(this._hasMaskedPath) {\r\n                segmentInd = initSegmentInd;\r\n                pointInd = initPointInd;\r\n                points = segments[segmentInd].bezierData.points;\r\n                prevPoint = points[pointInd - 1];\r\n                currentPoint = points[pointInd];\r\n                partialLength = currentPoint.partialLength;\r\n                segmentLength = 0;\r\n            }\r\n            letterO = letterSw = letterFc = letterM = '';\r\n            letterP = this.defaultPropsArray;\r\n        }else{\r\n            if(this._hasMaskedPath) {\r\n                if(currentLine !== letters[i].line){\r\n                    switch(documentData.j){\r\n                        case 1:\r\n                            currentLength += totalLength - documentData.lineWidths[letters[i].line];\r\n                            break;\r\n                        case 2:\r\n                            currentLength += (totalLength - documentData.lineWidths[letters[i].line])/2;\r\n                            break;\r\n                    }\r\n                    currentLine = letters[i].line;\r\n                }\r\n                if (ind !== letters[i].ind) {\r\n                    if (letters[ind]) {\r\n                        currentLength += letters[ind].extra;\r\n                    }\r\n                    currentLength += letters[i].an / 2;\r\n                    ind = letters[i].ind;\r\n                }\r\n                currentLength += alignment[0] * letters[i].an / 200;\r\n                var animatorOffset = 0;\r\n                for (j = 0; j < jLen; j += 1) {\r\n                    animatorProps = animators[j].a;\r\n                    if ('p' in animatorProps) {\r\n                        animatorSelector = animators[j].s;\r\n                        mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                        if(mult.length){\r\n                            animatorOffset += animatorProps.p.v[0] * mult[0];\r\n                        } else{\r\n                            animatorOffset += animatorProps.p.v[0] * mult;\r\n                        }\r\n\r\n                    }\r\n                    if ('a' in animatorProps) {\r\n                        animatorSelector = animators[j].s;\r\n                        mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                        if(mult.length){\r\n                            animatorOffset += animatorProps.a.v[0] * mult[0];\r\n                        } else{\r\n                            animatorOffset += animatorProps.a.v[0] * mult;\r\n                        }\r\n\r\n                    }\r\n                }\r\n                flag = true;\r\n                while (flag) {\r\n                    if (segmentLength + partialLength >= currentLength + animatorOffset || !points) {\r\n                        perc = (currentLength + animatorOffset - segmentLength) / currentPoint.partialLength;\r\n                        xPathPos = prevPoint.point[0] + (currentPoint.point[0] - prevPoint.point[0]) * perc;\r\n                        yPathPos = prevPoint.point[1] + (currentPoint.point[1] - prevPoint.point[1]) * perc;\r\n                        matrixHelper.translate(-alignment[0]*letters[i].an/200, -(alignment[1] * yOff / 100));\r\n                        flag = false;\r\n                    } else if (points) {\r\n                        segmentLength += currentPoint.partialLength;\r\n                        pointInd += 1;\r\n                        if (pointInd >= points.length) {\r\n                            pointInd = 0;\r\n                            segmentInd += 1;\r\n                            if (!segments[segmentInd]) {\r\n                                if (mask.v.c) {\r\n                                    pointInd = 0;\r\n                                    segmentInd = 0;\r\n                                    points = segments[segmentInd].bezierData.points;\r\n                                } else {\r\n                                    segmentLength -= currentPoint.partialLength;\r\n                                    points = null;\r\n                                }\r\n                            } else {\r\n                                points = segments[segmentInd].bezierData.points;\r\n                            }\r\n                        }\r\n                        if (points) {\r\n                            prevPoint = currentPoint;\r\n                            currentPoint = points[pointInd];\r\n                            partialLength = currentPoint.partialLength;\r\n                        }\r\n                    }\r\n                }\r\n                offf = letters[i].an / 2 - letters[i].add;\r\n                matrixHelper.translate(-offf, 0, 0);\r\n            } else {\r\n                offf = letters[i].an/2 - letters[i].add;\r\n                matrixHelper.translate(-offf,0,0);\r\n\r\n                // Grouping alignment\r\n                matrixHelper.translate(-alignment[0]*letters[i].an/200, -alignment[1]*yOff/100, 0);\r\n            }\r\n\r\n            lineLength += letters[i].l/2;\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if ('t' in animatorProps) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    if(this._hasMaskedPath) {\r\n                        if(mult.length) {\r\n                            currentLength += animatorProps.t*mult[0];\r\n                        } else {\r\n                            currentLength += animatorProps.t*mult;\r\n                        }\r\n                    }else{\r\n                        if(mult.length) {\r\n                            xPos += animatorProps.t.v*mult[0];\r\n                        } else {\r\n                            xPos += animatorProps.t.v*mult;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            lineLength += letters[i].l/2;\r\n            if(documentData.strokeWidthAnim) {\r\n                sw = documentData.sw || 0;\r\n            }\r\n            if(documentData.strokeColorAnim) {\r\n                if(documentData.sc){\r\n                    sc = [documentData.sc[0], documentData.sc[1], documentData.sc[2]];\r\n                }else{\r\n                    sc = [0,0,0];\r\n                }\r\n            }\r\n            if(documentData.fillColorAnim && documentData.fc) {\r\n                fc = [documentData.fc[0], documentData.fc[1], documentData.fc[2]];\r\n            }\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if ('a' in animatorProps) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n\r\n                    if(mult.length){\r\n                        matrixHelper.translate(-animatorProps.a.v[0]*mult[0], -animatorProps.a.v[1]*mult[1], animatorProps.a.v[2]*mult[2]);\r\n                    } else {\r\n                        matrixHelper.translate(-animatorProps.a.v[0]*mult, -animatorProps.a.v[1]*mult, animatorProps.a.v[2]*mult);\r\n                    }\r\n                }\r\n            }\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if ('s' in animatorProps) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    if(mult.length){\r\n                        matrixHelper.scale(1+((animatorProps.s.v[0]-1)*mult[0]),1+((animatorProps.s.v[1]-1)*mult[1]),1);\r\n                    } else {\r\n                        matrixHelper.scale(1+((animatorProps.s.v[0]-1)*mult),1+((animatorProps.s.v[1]-1)*mult),1);\r\n                    }\r\n                }\r\n            }\r\n            for(j=0;j<jLen;j+=1) {\r\n                animatorProps = animators[j].a;\r\n                animatorSelector = animators[j].s;\r\n                mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                if ('sk' in animatorProps) {\r\n                    if(mult.length) {\r\n                        matrixHelper.skewFromAxis(-animatorProps.sk.v * mult[0], animatorProps.sa.v * mult[1]);\r\n                    } else {\r\n                        matrixHelper.skewFromAxis(-animatorProps.sk.v * mult, animatorProps.sa.v * mult);\r\n                    }\r\n                }\r\n                if ('r' in animatorProps) {\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateZ(-animatorProps.r.v * mult[2]);\r\n                    } else {\r\n                        matrixHelper.rotateZ(-animatorProps.r.v * mult);\r\n                    }\r\n                }\r\n                if ('ry' in animatorProps) {\r\n\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateY(animatorProps.ry.v*mult[1]);\r\n                    }else{\r\n                        matrixHelper.rotateY(animatorProps.ry.v*mult);\r\n                    }\r\n                }\r\n                if ('rx' in animatorProps) {\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateX(animatorProps.rx.v*mult[0]);\r\n                    } else {\r\n                        matrixHelper.rotateX(animatorProps.rx.v*mult);\r\n                    }\r\n                }\r\n                if ('o' in animatorProps) {\r\n                    if(mult.length) {\r\n                        elemOpacity += ((animatorProps.o.v)*mult[0] - elemOpacity)*mult[0];\r\n                    } else {\r\n                        elemOpacity += ((animatorProps.o.v)*mult - elemOpacity)*mult;\r\n                    }\r\n                }\r\n                if (documentData.strokeWidthAnim && 'sw' in animatorProps) {\r\n                    if(mult.length) {\r\n                        sw += animatorProps.sw.v*mult[0];\r\n                    } else {\r\n                        sw += animatorProps.sw.v*mult;\r\n                    }\r\n                }\r\n                if (documentData.strokeColorAnim && 'sc' in animatorProps) {\r\n                    for(k=0;k<3;k+=1){\r\n                        if(mult.length) {\r\n                            sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k])*mult[0]\r\n                        } else {\r\n                            sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k])*mult;\r\n                        }\r\n                    }\r\n                }\r\n                if (documentData.fillColorAnim && documentData.fc) {\r\n                    if('fc' in animatorProps){\r\n                        for(k=0;k<3;k+=1){\r\n                            if(mult.length) {\r\n                                fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k])*mult[0];\r\n                            } else {\r\n                                fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k])*mult;\r\n                            }\r\n                        }\r\n                    }\r\n                    if('fh' in animatorProps){\r\n                        if(mult.length) {\r\n                            fc = addHueToRGB(fc,animatorProps.fh.v*mult[0]);\r\n                        } else {\r\n                            fc = addHueToRGB(fc,animatorProps.fh.v*mult);\r\n                        }\r\n                    }\r\n                    if('fs' in animatorProps){\r\n                        if(mult.length) {\r\n                            fc = addSaturationToRGB(fc,animatorProps.fs.v*mult[0]);\r\n                        } else {\r\n                            fc = addSaturationToRGB(fc,animatorProps.fs.v*mult);\r\n                        }\r\n                    }\r\n                    if('fb' in animatorProps){\r\n                        if(mult.length) {\r\n                            fc = addBrightnessToRGB(fc,animatorProps.fb.v*mult[0]);\r\n                        } else {\r\n                            fc = addBrightnessToRGB(fc,animatorProps.fb.v*mult);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n\r\n                if ('p' in animatorProps) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    if(this._hasMaskedPath) {\r\n                        if(mult.length) {\r\n                            matrixHelper.translate(0, animatorProps.p.v[1] * mult[0], -animatorProps.p.v[2] * mult[1]);\r\n                        } else {\r\n                            matrixHelper.translate(0, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\r\n                        }\r\n                    }else{\r\n                        if(mult.length) {\r\n                            matrixHelper.translate(animatorProps.p.v[0] * mult[0], animatorProps.p.v[1] * mult[1], -animatorProps.p.v[2] * mult[2]);\r\n                        } else {\r\n                            matrixHelper.translate(animatorProps.p.v[0] * mult, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(documentData.strokeWidthAnim){\r\n                letterSw = sw < 0 ? 0 : sw;\r\n            }\r\n            if(documentData.strokeColorAnim){\r\n                letterSc = 'rgb('+Math.round(sc[0]*255)+','+Math.round(sc[1]*255)+','+Math.round(sc[2]*255)+')';\r\n            }\r\n            if(documentData.fillColorAnim && documentData.fc){\r\n                letterFc = 'rgb('+Math.round(fc[0]*255)+','+Math.round(fc[1]*255)+','+Math.round(fc[2]*255)+')';\r\n            }\r\n\r\n            if(this._hasMaskedPath) {\r\n                matrixHelper.translate(0,-documentData.ls);\r\n\r\n                matrixHelper.translate(0, alignment[1]*yOff/100 + yPos,0);\r\n                if (textData.p.p) {\r\n                    tanAngle = (currentPoint.point[1] - prevPoint.point[1]) / (currentPoint.point[0] - prevPoint.point[0]);\r\n                    var rot = Math.atan(tanAngle) * 180 / Math.PI;\r\n                    if (currentPoint.point[0] < prevPoint.point[0]) {\r\n                        rot += 180;\r\n                    }\r\n                    matrixHelper.rotate(-rot * Math.PI / 180);\r\n                }\r\n                matrixHelper.translate(xPathPos, yPathPos, 0);\r\n                currentLength -= alignment[0]*letters[i].an/200;\r\n                if(letters[i+1] && ind !== letters[i+1].ind){\r\n                    currentLength += letters[i].an / 2;\r\n                    currentLength += documentData.tr/1000*documentData.s;\r\n                }\r\n            }else{\r\n\r\n                matrixHelper.translate(xPos,yPos,0);\r\n\r\n                if(documentData.ps){\r\n                    //matrixHelper.translate(documentData.ps[0],documentData.ps[1],0);\r\n                    matrixHelper.translate(documentData.ps[0],documentData.ps[1] + documentData.ascent,0);\r\n                }\r\n                switch(documentData.j){\r\n                    case 1:\r\n                        matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]),0,0);\r\n                        break;\r\n                    case 2:\r\n                        matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line])/2,0,0);\r\n                        break;\r\n                }\r\n                matrixHelper.translate(0,-documentData.ls);\r\n                matrixHelper.translate(offf,0,0);\r\n                matrixHelper.translate(alignment[0]*letters[i].an/200,alignment[1]*yOff/100,0);\r\n                xPos += letters[i].l + documentData.tr/1000*documentData.s;\r\n            }\r\n            if(renderType === 'html'){\r\n                letterM = matrixHelper.toCSS();\r\n            }else if(renderType === 'svg'){\r\n                letterM = matrixHelper.to2dCSS();\r\n            }else{\r\n                letterP = [matrixHelper.props[0],matrixHelper.props[1],matrixHelper.props[2],matrixHelper.props[3],matrixHelper.props[4],matrixHelper.props[5],matrixHelper.props[6],matrixHelper.props[7],matrixHelper.props[8],matrixHelper.props[9],matrixHelper.props[10],matrixHelper.props[11],matrixHelper.props[12],matrixHelper.props[13],matrixHelper.props[14],matrixHelper.props[15]];\r\n            }\r\n            letterO = elemOpacity;\r\n        }\r\n\r\n        if(renderedLettersCount <= i) {\r\n            letterValue = new LetterProps(letterO,letterSw,letterSc,letterFc,letterM,letterP);\r\n            this.renderedLetters.push(letterValue);\r\n            renderedLettersCount += 1;\r\n            this.lettersChangedFlag = true;\r\n        } else {\r\n            letterValue = this.renderedLetters[i];\r\n            this.lettersChangedFlag = letterValue.update(letterO, letterSw, letterSc, letterFc, letterM, letterP) || this.lettersChangedFlag;\r\n        }\r\n    }\r\n}\r\n\r\nTextAnimatorProperty.prototype.getValue = function(){\r\n\tif(this._elem.globalData.frameId === this._frameId){\r\n        return;\r\n    }\r\n    this._frameId = this._elem.globalData.frameId;\r\n\tvar i, len = this._dynamicProperties.length;\r\n    this.mdf = false;\r\n\tfor(i = 0; i < len; i += 1) {\r\n\t\tthis._dynamicProperties[i].getValue();\r\n        this.mdf = this._dynamicProperties[i].mdf || this.mdf;\r\n\t}\r\n}\r\n\r\nTextAnimatorProperty.prototype.mHelper = new Matrix();\r\nTextAnimatorProperty.prototype.defaultPropsArray = [];\nfunction LetterProps(o, sw, sc, fc, m, p){\r\n    this.o = o;\r\n    this.sw = sw;\r\n    this.sc = sc;\r\n    this.fc = fc;\r\n    this.m = m;\r\n    this.p = p;\r\n    this.mdf = {\r\n    \to: true,\r\n    \tsw: !!sw,\r\n    \tsc: !!sc,\r\n    \tfc: !!fc,\r\n    \tm: true,\r\n    \tp: true\r\n    };\r\n}\r\n\r\nLetterProps.prototype.update = function(o, sw, sc, fc, m, p) {\r\n\tthis.mdf.o = false;\r\n\tthis.mdf.sw = false;\r\n\tthis.mdf.sc = false;\r\n\tthis.mdf.fc = false;\r\n\tthis.mdf.m = false;\r\n\tthis.mdf.p = false;\r\n\tvar updated = false;\r\n\r\n\tif(this.o !== o) {\r\n\t\tthis.o = o;\r\n\t\tthis.mdf.o = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.sw !== sw) {\r\n\t\tthis.sw = sw;\r\n\t\tthis.mdf.sw = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.sc !== sc) {\r\n\t\tthis.sc = sc;\r\n\t\tthis.mdf.sc = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.fc !== fc) {\r\n\t\tthis.fc = fc;\r\n\t\tthis.mdf.fc = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.m !== m) {\r\n\t\tthis.m = m;\r\n\t\tthis.mdf.m = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(p.length && (this.p[0] !== p[0] || this.p[1] !== p[1] || this.p[4] !== p[4] || this.p[5] !== p[5] || this.p[12] !== p[12] || this.p[13] !== p[13])) {\r\n\t\tthis.p = p;\r\n\t\tthis.mdf.p = true;\r\n\t\tupdated = true;\r\n\t}\r\n\treturn updated;\r\n}\nfunction TextProperty(elem, data, dynamicProperties){\r\n\tthis._frameId = -99999;\r\n\tthis.pv = '';\r\n\tthis.v = '';\r\n\tthis.kf = false;\r\n\tthis.firstFrame = true;\r\n\tthis.mdf = true;\r\n\tthis.data = data;\r\n\tthis.elem = elem;\r\n\tthis.keysIndex = -1;\r\n\tthis.currentData = {\r\n\t\tascent: 0,\r\n        boxWidth: [0,0],\r\n        f: '',\r\n        fStyle: '',\r\n        fWeight: '',\r\n        fc: '',\r\n        j: '',\r\n        justifyOffset: '',\r\n        l: [],\r\n        lh: 0,\r\n        lineWidths: [],\r\n        ls: '',\r\n        of: '',\r\n        s: '',\r\n        sc: '',\r\n        sw: 0,\r\n        t: 0,\r\n        tr: 0,\r\n        fillColorAnim: false,\r\n        strokeColorAnim: false,\r\n        strokeWidthAnim: false,\r\n        yOffset: 0,\r\n        __complete: false\r\n\r\n\t}\r\n\tif(this.searchProperty()) {\r\n\t\tdynamicProperties.push(this);\r\n\t} else {\r\n\t\tthis.getValue(true);\r\n\t}\r\n}\r\n\r\nTextProperty.prototype.setCurrentData = function(data){\r\n\t\tvar currentData = this.currentData;\r\n        currentData.ascent = data.ascent;\r\n        currentData.boxWidth = data.boxWidth ? data.boxWidth : currentData.boxWidth;\r\n        currentData.f = data.f;\r\n        currentData.fStyle = data.fStyle;\r\n        currentData.fWeight = data.fWeight;\r\n        currentData.fc = data.fc;\r\n        currentData.j = data.j;\r\n        currentData.justifyOffset = data.justifyOffset;\r\n        currentData.l = data.l;\r\n        currentData.lh = data.lh;\r\n        currentData.lineWidths = data.lineWidths;\r\n        currentData.ls = data.ls;\r\n        currentData.of = data.of;\r\n        currentData.s = data.s;\r\n        currentData.sc = data.sc;\r\n        currentData.sw = data.sw;\r\n        currentData.t = data.t;\r\n        currentData.tr = data.tr;\r\n        currentData.fillColorAnim = data.fillColorAnim || currentData.fillColorAnim;\r\n        currentData.strokeColorAnim = data.strokeColorAnim || currentData.strokeColorAnim;\r\n        currentData.strokeWidthAnim = data.strokeWidthAnim || currentData.strokeWidthAnim;\r\n        currentData.yOffset = data.yOffset;\r\n        currentData.__complete = false;\r\n}\r\n\r\nTextProperty.prototype.searchProperty = function() {\r\n\tthis.kf = this.data.d.k.length > 1;\r\n\treturn this.kf;\r\n}\r\n\r\nTextProperty.prototype.getValue = function() {\r\n\tthis.mdf = false;\r\n\tvar frameId = this.elem.globalData.frameId;\r\n\tif((frameId === this._frameId || !this.kf) && !this.firstFrame) {\r\n\t\treturn;\r\n\t}\r\n\tvar textKeys = this.data.d.k, textDocumentData;\r\n    var i = 0, len = textKeys.length;\r\n    while(i <= len - 1) {\r\n        textDocumentData = textKeys[i].s;\r\n        if(i === len - 1 || textKeys[i+1].t > frameId){\r\n            break;\r\n        }\r\n        i += 1;\r\n    }\r\n    if(this.keysIndex !== i) {\r\n    \tif(!textDocumentData.__complete) {\r\n            this.completeTextData(textDocumentData);\r\n        }\r\n        this.setCurrentData(textDocumentData);\r\n        this.mdf = this.firstFrame ? false : true;\r\n        this.pv = this.v = this.currentData.t;\r\n        this.keysIndex = i;\r\n    }\r\n\tthis._frameId = frameId;\r\n}\r\n\r\nTextProperty.prototype.completeTextData = function(documentData) {\r\n    documentData.__complete = true;\r\n    var fontManager = this.elem.globalData.fontManager;\r\n    var data = this.data;\r\n    var letters = [];\r\n    var i, len;\r\n    var newLineFlag, index = 0, val;\r\n    var anchorGrouping = data.m.g;\r\n    var currentSize = 0, currentPos = 0, currentLine = 0, lineWidths = [];\r\n    var lineWidth = 0;\r\n    var maxLineWidth = 0;\r\n    var j, jLen;\r\n    var fontData = fontManager.getFontByName(documentData.f);\r\n    var charData, cLength = 0;\r\n    var styles = fontData.fStyle.split(' ');\r\n\r\n    var fWeight = 'normal', fStyle = 'normal';\r\n    len = styles.length;\r\n    var styleName;\r\n    for(i=0;i<len;i+=1){\r\n        styleName = styles[i].toLowerCase();\r\n        switch(styleName) {\r\n            case 'italic':\r\n            fStyle = 'italic';\r\n            break;\r\n            case 'bold':\r\n            fWeight = '700';\r\n            break;\r\n            case 'black':\r\n            fWeight = '900';\r\n            break;\r\n            case 'medium':\r\n            fWeight = '500';\r\n            break;\r\n            case 'regular':\r\n            case 'normal':\r\n            fWeight = '400';\r\n            case 'light':\r\n            case 'thin':\r\n            fWeight = '200';\r\n            break;\r\n        }\r\n    }\r\n    documentData.fWeight = fWeight;\r\n    documentData.fStyle = fStyle;\r\n    len = documentData.t.length;\r\n    var trackingOffset = documentData.tr/1000*documentData.s;\r\n    if(documentData.sz){\r\n        var boxWidth = documentData.sz[0];\r\n        var lastSpaceIndex = -1;\r\n        for(i=0;i<len;i+=1){\r\n            newLineFlag = false;\r\n            if(documentData.t.charAt(i) === ' '){\r\n                lastSpaceIndex = i;\r\n            }else if(documentData.t.charCodeAt(i) === 13){\r\n                lineWidth = 0;\r\n                newLineFlag = true;\r\n            }\r\n            if(fontManager.chars){\r\n                charData = fontManager.getCharData(documentData.t.charAt(i), fontData.fStyle, fontData.fFamily);\r\n                cLength = newLineFlag ? 0 : charData.w*documentData.s/100;\r\n            }else{\r\n                //tCanvasHelper.font = documentData.s + 'px '+ fontData.fFamily;\r\n                cLength = fontManager.measureText(documentData.t.charAt(i), documentData.f, documentData.s);\r\n            }\r\n            if(lineWidth + cLength > boxWidth && documentData.t.charAt(i) !== ' '){\r\n                if(lastSpaceIndex === -1){\r\n                    len += 1;\r\n                } else {\r\n                    i = lastSpaceIndex;\r\n                }\r\n                documentData.t = documentData.t.substr(0,i) + \"\\r\" + documentData.t.substr(i === lastSpaceIndex ? i + 1 : i);\r\n                lastSpaceIndex = -1;\r\n                lineWidth = 0;\r\n            }else {\r\n                lineWidth += cLength;\r\n                lineWidth += trackingOffset;\r\n            }\r\n        }\r\n        len = documentData.t.length;\r\n    }\r\n    lineWidth = - trackingOffset;\r\n    cLength = 0;\r\n    var uncollapsedSpaces = 0;\r\n    var currentChar;\r\n    for (i = 0;i < len ;i += 1) {\r\n        newLineFlag = false;\r\n        currentChar = documentData.t.charAt(i);\r\n        if(currentChar === ' '){\r\n            val = '\\u00A0';\r\n        }else if(currentChar.charCodeAt(0) === 13){\r\n            uncollapsedSpaces = 0;\r\n            lineWidths.push(lineWidth);\r\n            maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\r\n            lineWidth = - 2 * trackingOffset;\r\n            val = '';\r\n            newLineFlag = true;\r\n            currentLine += 1;\r\n        }else{\r\n            val = documentData.t.charAt(i);\r\n        }\r\n        if(fontManager.chars){\r\n            charData = fontManager.getCharData(currentChar, fontData.fStyle, fontManager.getFontByName(documentData.f).fFamily);\r\n            cLength = newLineFlag ? 0 : charData.w*documentData.s/100;\r\n        }else{\r\n            //var charWidth = fontManager.measureText(val, documentData.f, documentData.s);\r\n            //tCanvasHelper.font = documentData.s + 'px '+ fontManager.getFontByName(documentData.f).fFamily;\r\n            cLength = fontManager.measureText(val, documentData.f, documentData.s);\r\n        }\r\n\r\n        //\r\n        if(currentChar === ' '){\r\n            uncollapsedSpaces += cLength + trackingOffset;\r\n        } else {\r\n            lineWidth += cLength + trackingOffset + uncollapsedSpaces;\r\n            uncollapsedSpaces = 0;\r\n        }\r\n        letters.push({l:cLength,an:cLength,add:currentSize,n:newLineFlag, anIndexes:[], val: val, line: currentLine});\r\n        if(anchorGrouping == 2){\r\n            currentSize += cLength;\r\n            if(val == '' || val == '\\u00A0' || i == len - 1){\r\n                if(val == '' || val == '\\u00A0'){\r\n                    currentSize -= cLength;\r\n                }\r\n                while(currentPos<=i){\r\n                    letters[currentPos].an = currentSize;\r\n                    letters[currentPos].ind = index;\r\n                    letters[currentPos].extra = cLength;\r\n                    currentPos += 1;\r\n                }\r\n                index += 1;\r\n                currentSize = 0;\r\n            }\r\n        }else if(anchorGrouping == 3){\r\n            currentSize += cLength;\r\n            if(val == '' || i == len - 1){\r\n                if(val == ''){\r\n                    currentSize -= cLength;\r\n                }\r\n                while(currentPos<=i){\r\n                    letters[currentPos].an = currentSize;\r\n                    letters[currentPos].ind = index;\r\n                    letters[currentPos].extra = cLength;\r\n                    currentPos += 1;\r\n                }\r\n                currentSize = 0;\r\n                index += 1;\r\n            }\r\n        }else{\r\n            letters[index].ind = index;\r\n            letters[index].extra = 0;\r\n            index += 1;\r\n        }\r\n    }\r\n    documentData.l = letters;\r\n    maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\r\n    lineWidths.push(lineWidth);\r\n    if(documentData.sz){\r\n        documentData.boxWidth = documentData.sz[0];\r\n        documentData.justifyOffset = 0;\r\n    }else{\r\n        documentData.boxWidth = maxLineWidth;\r\n        switch(documentData.j){\r\n            case 1:\r\n                documentData.justifyOffset = - documentData.boxWidth;\r\n                break;\r\n            case 2:\r\n                documentData.justifyOffset = - documentData.boxWidth/2;\r\n                break;\r\n            default:\r\n                documentData.justifyOffset = 0;\r\n        }\r\n    }\r\n    documentData.lineWidths = lineWidths;\r\n\r\n    var animators = data.a, animatorData, letterData;\r\n    jLen = animators.length;\r\n    var based, ind, indexes = [];\r\n    for(j=0;j<jLen;j+=1){\r\n        animatorData = animators[j];\r\n        if(animatorData.a.sc){\r\n            documentData.strokeColorAnim = true;\r\n        }\r\n        if(animatorData.a.sw){\r\n            documentData.strokeWidthAnim = true;\r\n        }\r\n        if(animatorData.a.fc || animatorData.a.fh || animatorData.a.fs || animatorData.a.fb){\r\n            documentData.fillColorAnim = true;\r\n        }\r\n        ind = 0;\r\n        based = animatorData.s.b;\r\n        for(i=0;i<len;i+=1){\r\n            letterData = letters[i];\r\n            letterData.anIndexes[j] = ind;\r\n            if((based == 1 && letterData.val != '') || (based == 2 && letterData.val != '' && letterData.val != '\\u00A0') || (based == 3 && (letterData.n || letterData.val == '\\u00A0' || i == len - 1)) || (based == 4 && (letterData.n || i == len - 1))){\r\n                if(animatorData.s.rn === 1){\r\n                    indexes.push(ind);\r\n                }\r\n                ind += 1;\r\n            }\r\n        }\r\n        data.a[j].s.totalChars = ind;\r\n        var currentInd = -1, newInd;\r\n        if(animatorData.s.rn === 1){\r\n            for(i = 0; i < len; i += 1){\r\n                letterData = letters[i];\r\n                if(currentInd != letterData.anIndexes[j]){\r\n                    currentInd = letterData.anIndexes[j];\r\n                    newInd = indexes.splice(Math.floor(Math.random()*indexes.length),1)[0];\r\n                }\r\n                letterData.anIndexes[j] = newInd;\r\n            }\r\n        }\r\n    }\r\n    documentData.yOffset = documentData.lh || documentData.s*1.2;\r\n    documentData.ls = documentData.ls || 0;\r\n    documentData.ascent = fontData.ascent*documentData.s/100;\r\n}\r\n\r\nTextProperty.prototype.updateDocumentData = function(newData, index) {\r\n\tindex = index === undefined ? this.keysIndex : index;\r\n    var dData = this.data.d.k[index].s;\r\n    dData.__complete = false;\r\n    dData.t = newData.t;\r\n    this.keysIndex = -1;\r\n    this.firstFrame = true;\r\n    this.getValue();\r\n}\r\n\nvar pooling = (function(){\r\n\r\n\tfunction double(arr){\r\n\t\treturn arr.concat(Array.apply(null,{length:arr.length}))\r\n\t}\r\n\r\n\treturn {\r\n\t\tdouble: double\r\n\t}\r\n}());\nvar point_pool = (function(){\r\n\tvar ob = {\r\n\t\tnewPoint: newPoint,\r\n\t\trelease: release\r\n\t}\r\n\r\n\tvar _length = 0;\r\n\tvar _maxLength = 8;\r\n\tvar pool = Array.apply(null,{length:_maxLength});\r\n\r\n\tfunction newPoint(){\r\n\t\tvar point;\r\n\t\tif(_length){\r\n\t\t\t_length -= 1;\r\n\t\t\tpoint = pool[_length];\r\n\t\t} else {\r\n\t\t\tpoint = [0.1,0.1];\r\n\t\t}\r\n\t\treturn point;\r\n\t}\r\n\r\n\tfunction release(point) {\r\n\t\tif(_length === _maxLength) {\r\n\t\t\tpool = pooling.double(pool);\r\n\t\t\t_maxLength = _maxLength*2;\r\n\t\t}\r\n\t\tpool[_length] = point;\r\n\t\t_length += 1;\r\n\t}\r\n\r\n\r\n\treturn ob;\r\n}());\nvar shape_pool = (function(){\r\n\tvar ob = {\r\n\t\tclone: clone,\r\n\t\tnewShape: newShape,\r\n\t\trelease: release,\r\n\t\treleaseArray: releaseArray\r\n\t}\r\n\r\n\tvar _length = 0;\r\n\tvar _maxLength = 4;\r\n\tvar pool = Array.apply(null,{length:_maxLength});\r\n\r\n\tfunction newShape(){\r\n\t\tvar shapePath;\r\n\t\tif(_length){\r\n\t\t\t_length -= 1;\r\n\t\t\tshapePath = pool[_length];\r\n\t\t} else {\r\n\t\t\tshapePath = new ShapePath();\r\n\t\t}\r\n\t\treturn shapePath;\r\n\t}\r\n\r\n\tfunction release(shapePath) {\r\n\t\tif(_length === _maxLength) {\r\n\t\t\tpool = pooling.double(pool);\r\n\t\t\t_maxLength = _maxLength*2;\r\n\t\t}\r\n\t\tvar len = shapePath._length, i;\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tpoint_pool.release(shapePath.v[i]);\r\n\t\t\tpoint_pool.release(shapePath.i[i]);\r\n\t\t\tpoint_pool.release(shapePath.o[i]);\r\n\t\t\tshapePath.v[i] = null;\r\n\t\t\tshapePath.i[i] = null;\r\n\t\t\tshapePath.o[i] = null;\r\n\t\t}\r\n\t\tshapePath._length = 0;\r\n\t\tshapePath.c = false;\r\n\t\tpool[_length] = shapePath;\r\n\t\t_length += 1;\r\n\t}\r\n\r\n\tfunction releaseArray(shapePathsCollection, length) {\r\n\t\twhile(length--) {\r\n\t\t\trelease(shapePathsCollection[length]);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction clone(shape, transform) {\r\n\t\tvar i, len = shape._length === undefined ? shape.v.length : shape._length;\r\n\t\tvar cloned = newShape();\r\n\t\tcloned.setLength(len);\r\n\t\tcloned.c = shape.c;\r\n\r\n\t\tvar pt;\r\n\t\t\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tif(transform){\r\n\t\t\t\tpt = transform.applyToPointArray(shape.v[i][0],shape.v[i][1],0,2);\r\n\t\t\t\tcloned.setXYAt(pt[0],pt[1],'v',i);\r\n\t\t\t\tpoint_pool.release(pt);\r\n\t\t\t\tpt = transform.applyToPointArray(shape.o[i][0],shape.o[i][1],0,2);\r\n\t\t\t\tcloned.setXYAt(pt[0],pt[1],'o',i);\r\n\t\t\t\tpoint_pool.release(pt);\r\n\t\t\t\tpt = transform.applyToPointArray(shape.i[i][0],shape.i[i][1],0,2);\r\n\t\t\t\tcloned.setXYAt(pt[0],pt[1],'i',i);\r\n\t\t\t\tpoint_pool.release(pt);\r\n\t\t\t}else{\r\n\t\t\t\tcloned.setTripleAt(shape.v[i][0],shape.v[i][1],shape.o[i][0],shape.o[i][1],shape.i[i][0],shape.i[i][1], i);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn cloned\r\n\t}\r\n\r\n\r\n\treturn ob;\r\n}());\nvar shapeCollection_pool = (function(){\r\n\tvar ob = {\r\n\t\tnewShapeCollection: newShapeCollection,\r\n\t\trelease: release,\r\n\t\tclone: clone\r\n\t}\r\n\r\n\tvar _length = 0;\r\n\tvar _maxLength = 4;\r\n\tvar pool = Array.apply(null,{length:_maxLength});\r\n\r\n\tvar cont = 0;\r\n\r\n\tfunction newShapeCollection(){\r\n\t\tvar shapeCollection;\r\n\t\tif(_length){\r\n\t\t\t_length -= 1;\r\n\t\t\tshapeCollection = pool[_length];\r\n\t\t} else {\r\n\t\t\tshapeCollection = new ShapeCollection();\r\n\t\t}\r\n\t\treturn shapeCollection;\r\n\t}\r\n\r\n\tfunction release(shapeCollection) {\r\n\t\tvar i, len = shapeCollection._length;\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tshape_pool.release(shapeCollection.shapes[i]);\r\n\t\t}\r\n\t\tshapeCollection._length = 0;\r\n\r\n\t\tif(_length === _maxLength) {\r\n\t\t\tpool = pooling.double(pool);\r\n\t\t\t_maxLength = _maxLength*2;\r\n\t\t}\r\n\t\tpool[_length] = shapeCollection;\r\n\t\t_length += 1;\r\n\t}\r\n\r\n\tfunction clone(shapeCollection, originCollection) {\r\n\t\trelease(shapeCollection);\r\n\t\tif(_length === _maxLength) {\r\n\t\t\tpool = pooling.double(pool);\r\n\t\t\t_maxLength = _maxLength*2;\r\n\t\t}\r\n\t\tpool[_length] = shapeCollection;\r\n\t\t_length += 1;\r\n\t}\r\n\r\n\r\n\treturn ob;\r\n}());\nfunction BaseRenderer(){}\r\nBaseRenderer.prototype.checkLayers = function(num){\r\n    var i, len = this.layers.length, data;\r\n    this.completeLayers = true;\r\n    for (i = len - 1; i >= 0; i--) {\r\n        if (!this.elements[i]) {\r\n            data = this.layers[i];\r\n            if(data.ip - data.st <= (num - this.layers[i].st) && data.op - data.st > (num - this.layers[i].st))\r\n            {\r\n                this.buildItem(i);\r\n            }\r\n        }\r\n        this.completeLayers = this.elements[i] ? this.completeLayers:false;\r\n    }\r\n    this.checkPendingElements();\r\n};\r\n\r\nBaseRenderer.prototype.createItem = function(layer){\r\n    switch(layer.ty){\r\n        case 2:\r\n            return this.createImage(layer);\r\n        case 0:\r\n            return this.createComp(layer);\r\n        case 1:\r\n            return this.createSolid(layer);\r\n        case 4:\r\n            return this.createShape(layer);\r\n        case 5:\r\n            return this.createText(layer);\r\n        case 13:\r\n            return this.createCamera(layer);\r\n        case 99:\r\n            return null;\r\n    }\r\n    return this.createBase(layer);\r\n};\r\n\r\nBaseRenderer.prototype.createCamera = function(){\r\n    throw new Error('You\\'re using a 3d camera. Try the html renderer.');\r\n}\r\n\r\nBaseRenderer.prototype.buildAllItems = function(){\r\n    var i, len = this.layers.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.buildItem(i);\r\n    }\r\n    this.checkPendingElements();\r\n};\r\n\r\nBaseRenderer.prototype.includeLayers = function(newLayers){\r\n    this.completeLayers = false;\r\n    var i, len = newLayers.length;\r\n    var j, jLen = this.layers.length;\r\n    for(i=0;i<len;i+=1){\r\n        j = 0;\r\n        while(j<jLen){\r\n            if(this.layers[j].id == newLayers[i].id){\r\n                this.layers[j] = newLayers[i];\r\n                break;\r\n            }\r\n            j += 1;\r\n        }\r\n    }\r\n};\r\n\r\nBaseRenderer.prototype.setProjectInterface = function(pInterface){\r\n    this.globalData.projectInterface = pInterface;\r\n};\r\n\r\nBaseRenderer.prototype.initItems = function(){\r\n    if(!this.globalData.progressiveLoad){\r\n        this.buildAllItems();\r\n    }\r\n};\r\nBaseRenderer.prototype.buildElementParenting = function(element, parentName, hierarchy){\r\n    hierarchy = hierarchy || [];\r\n    var elements = this.elements;\r\n    var layers = this.layers;\r\n    var i=0, len = layers.length;\r\n    while(i<len){\r\n        if(layers[i].ind == parentName){\r\n            if(!elements[i] || elements[i] === true){\r\n                this.buildItem(i);\r\n                this.addPendingElement(element);\r\n            } else if(layers[i].parent !== undefined){\r\n                hierarchy.push(elements[i]);\r\n                elements[i]._isParent = true;\r\n                this.buildElementParenting(element,layers[i].parent, hierarchy);\r\n            } else {\r\n                hierarchy.push(elements[i]);\r\n                elements[i]._isParent = true;\r\n                element.setHierarchy(hierarchy);\r\n            }\r\n\r\n\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nBaseRenderer.prototype.addPendingElement = function(element){\r\n    this.pendingElements.push(element);\r\n};\nfunction SVGRenderer(animationItem, config){\r\n    this.animationItem = animationItem;\r\n    this.layers = null;\r\n    this.renderedFrame = -1;\r\n    this.globalData = {\r\n        frameNum: -1\r\n    };\r\n    this.renderConfig = {\r\n        preserveAspectRatio: (config && config.preserveAspectRatio) || 'xMidYMid meet',\r\n        progressiveLoad: (config && config.progressiveLoad) || false,\r\n        hideOnTransparent: (config && config.hideOnTransparent === false) ? false : true,\r\n        viewBoxOnly: (config && config.viewBoxOnly) || false,\r\n        className: (config && config.className) || ''\r\n    };\r\n    this.globalData.renderConfig = this.renderConfig;\r\n    this.elements = [];\r\n    this.pendingElements = [];\r\n    this.destroyed = false;\r\n\r\n}\r\n\r\nextendPrototype(BaseRenderer,SVGRenderer);\r\n\r\nSVGRenderer.prototype.createBase = function (data) {\r\n    return new SVGBaseElement(data, this.layerElement,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createShape = function (data) {\r\n    return new IShapeElement(data, this.layerElement,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createText = function (data) {\r\n    return new SVGTextElement(data, this.layerElement,this.globalData,this);\r\n\r\n};\r\n\r\nSVGRenderer.prototype.createImage = function (data) {\r\n    return new IImageElement(data, this.layerElement,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createComp = function (data) {\r\n    return new ICompElement(data, this.layerElement,this.globalData,this);\r\n\r\n};\r\n\r\nSVGRenderer.prototype.createSolid = function (data) {\r\n    return new ISolidElement(data, this.layerElement,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.configAnimation = function(animData){\r\n    this.layerElement = document.createElementNS(svgNS,'svg');\r\n    this.layerElement.setAttribute('xmlns','http://www.w3.org/2000/svg');\r\n    this.layerElement.setAttribute('viewBox','0 0 '+animData.w+' '+animData.h);\r\n    if(!this.renderConfig.viewBoxOnly) {\r\n        this.layerElement.setAttribute('width',animData.w);\r\n        this.layerElement.setAttribute('height',animData.h);\r\n        this.layerElement.style.width = '100%';\r\n        this.layerElement.style.height = '100%';\r\n    }\r\n    if(this.renderConfig.className) {\r\n        this.layerElement.setAttribute('class', this.renderConfig.className);\r\n    }\r\n    this.layerElement.setAttribute('preserveAspectRatio',this.renderConfig.preserveAspectRatio);\r\n    //this.layerElement.style.transform = 'translate3d(0,0,0)';\r\n    //this.layerElement.style.transformOrigin = this.layerElement.style.mozTransformOrigin = this.layerElement.style.webkitTransformOrigin = this.layerElement.style['-webkit-transform'] = \"0px 0px 0px\";\r\n    this.animationItem.wrapper.appendChild(this.layerElement);\r\n    //Mask animation\r\n    var defs = document.createElementNS(svgNS, 'defs');\r\n    this.globalData.defs = defs;\r\n    this.layerElement.appendChild(defs);\r\n    this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem);\r\n    this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem);\r\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\r\n    this.globalData.frameId = 0;\r\n    this.globalData.nm = animData.nm;\r\n    this.globalData.compSize = {\r\n        w: animData.w,\r\n        h: animData.h\r\n    };\r\n    this.data = animData;\r\n    this.globalData.frameRate = animData.fr;\r\n    var maskElement = document.createElementNS(svgNS, 'clipPath');\r\n    var rect = document.createElementNS(svgNS,'rect');\r\n    rect.setAttribute('width',animData.w);\r\n    rect.setAttribute('height',animData.h);\r\n    rect.setAttribute('x',0);\r\n    rect.setAttribute('y',0);\r\n    var maskId = 'animationMask_'+randomString(10);\r\n    maskElement.setAttribute('id', maskId);\r\n    maskElement.appendChild(rect);\r\n    var maskedElement = document.createElementNS(svgNS,'g');\r\n    maskedElement.setAttribute(\"clip-path\", \"url(\" + locationHref + \"#\"+maskId+\")\");\r\n    this.layerElement.appendChild(maskedElement);\r\n    defs.appendChild(maskElement);\r\n    this.layerElement = maskedElement;\r\n    this.layers = animData.layers;\r\n    this.globalData.fontManager = new FontManager();\r\n    this.globalData.fontManager.addChars(animData.chars);\r\n    this.globalData.fontManager.addFonts(animData.fonts,defs);\r\n    this.elements = Array.apply(null,{length:animData.layers.length});\r\n};\r\n\r\n\r\nSVGRenderer.prototype.destroy = function () {\r\n    this.animationItem.wrapper.innerHTML = '';\r\n    this.layerElement = null;\r\n    this.globalData.defs = null;\r\n    var i, len = this.layers ? this.layers.length : 0;\r\n    for (i = 0; i < len; i++) {\r\n        if(this.elements[i]){\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n    this.elements.length = 0;\r\n    this.destroyed = true;\r\n    this.animationItem = null;\r\n};\r\n\r\nSVGRenderer.prototype.updateContainerSize = function () {\r\n};\r\n\r\nSVGRenderer.prototype.buildItem  = function(pos){\r\n    var elements = this.elements;\r\n    if(elements[pos] || this.layers[pos].ty == 99){\r\n        return;\r\n    }\r\n    elements[pos] = true;\r\n    var element = this.createItem(this.layers[pos]);\r\n\r\n    elements[pos] = element;\r\n    if(expressionsPlugin){\r\n        if(this.layers[pos].ty === 0){\r\n            this.globalData.projectInterface.registerComposition(element);\r\n        }\r\n        element.initExpressions();\r\n    }\r\n    this.appendElementInPos(element,pos);\r\n    if(this.layers[pos].tt){\r\n        if(!this.elements[pos - 1] || this.elements[pos - 1] === true){\r\n            this.buildItem(pos - 1);\r\n            this.addPendingElement(element);\r\n        } else {\r\n            element.setMatte(elements[pos - 1].layerId);\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.checkPendingElements  = function(){\r\n    while(this.pendingElements.length){\r\n        var element = this.pendingElements.pop();\r\n        element.checkParenting();\r\n        if(element.data.tt){\r\n            var i = 0, len = this.elements.length;\r\n            while(i<len){\r\n                if(this.elements[i] === element){\r\n                    element.setMatte(this.elements[i - 1].layerId);\r\n                    break;\r\n                }\r\n                i += 1;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.renderFrame = function(num){\r\n    if(this.renderedFrame == num || this.destroyed){\r\n        return;\r\n    }\r\n    if(num === null){\r\n        num = this.renderedFrame;\r\n    }else{\r\n        this.renderedFrame = num;\r\n    }\r\n    //clearPoints();\r\n    /*console.log('-------');\r\n    console.log('FRAME ',num);*/\r\n    this.globalData.frameNum = num;\r\n    this.globalData.frameId += 1;\r\n    this.globalData.projectInterface.currentFrame = num;\r\n    var i, len = this.layers.length;\r\n    if(!this.completeLayers){\r\n        this.checkLayers(num);\r\n    }\r\n    for (i = len - 1; i >= 0; i--) {\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].prepareFrame(num - this.layers[i].st);\r\n        }\r\n    }\r\n    for (i = len - 1; i >= 0; i--) {\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].renderFrame();\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.appendElementInPos = function(element, pos){\r\n    var newElement = element.getBaseElement();\r\n    if(!newElement){\r\n        return;\r\n    }\r\n    var i = 0;\r\n    var nextElement;\r\n    while(i<pos){\r\n        if(this.elements[i] && this.elements[i]!== true && this.elements[i].getBaseElement()){\r\n            nextElement = this.elements[i].getBaseElement();\r\n        }\r\n        i += 1;\r\n    }\r\n    if(nextElement){\r\n        this.layerElement.insertBefore(newElement, nextElement);\r\n    } else {\r\n        this.layerElement.appendChild(newElement);\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.hide = function(){\r\n    this.layerElement.style.display = 'none';\r\n};\r\n\r\nSVGRenderer.prototype.show = function(){\r\n    this.layerElement.style.display = 'block';\r\n};\r\n\r\nSVGRenderer.prototype.searchExtraCompositions = function(assets){\r\n    var i, len = assets.length;\r\n    var floatingContainer = document.createElementNS(svgNS,'g');\r\n    for(i=0;i<len;i+=1){\r\n        if(assets[i].xt){\r\n            var comp = this.createComp(assets[i],floatingContainer,this.globalData.comp,null);\r\n            comp.initExpressions();\r\n            //comp.compInterface = CompExpressionInterface(comp);\r\n            //Expressions.addLayersInterface(comp.elements, this.globalData.projectInterface);\r\n            this.globalData.projectInterface.registerComposition(comp);\r\n        }\r\n    }\r\n};\r\n\nfunction MaskElement(data,element,globalData) {\r\n    this.dynamicProperties = [];\r\n    this.data = data;\r\n    this.element = element;\r\n    this.globalData = globalData;\r\n    this.storedData = [];\r\n    this.masksProperties = this.data.masksProperties;\r\n    this.viewData = Array.apply(null,{length:this.masksProperties.length});\r\n    this.maskElement = null;\r\n    this.firstFrame = true;\r\n    var defs = this.globalData.defs;\r\n    var i, len = this.masksProperties.length;\r\n\r\n\r\n    var path, properties = this.masksProperties;\r\n    var count = 0;\r\n    var currentMasks = [];\r\n    var j, jLen;\r\n    var layerId = randomString(10);\r\n    var rect, expansor, feMorph,x;\r\n    var maskType = 'clipPath', maskRef = 'clip-path';\r\n    for (i = 0; i < len; i++) {\r\n\r\n        if((properties[i].mode !== 'a' && properties[i].mode !== 'n')|| properties[i].inv || properties[i].o.k !== 100){\r\n            maskType = 'mask';\r\n            maskRef = 'mask';\r\n        }\r\n\r\n        if((properties[i].mode == 's' || properties[i].mode == 'i') && count == 0){\r\n            rect = document.createElementNS(svgNS, 'rect');\r\n            rect.setAttribute('fill', '#ffffff');\r\n            rect.setAttribute('width', this.element.comp.data.w);\r\n            rect.setAttribute('height', this.element.comp.data.h);\r\n            currentMasks.push(rect);\r\n        } else {\r\n            rect = null;\r\n        }\r\n\r\n        path = document.createElementNS(svgNS, 'path');\r\n        if(properties[i].mode == 'n') {\r\n            this.viewData[i] = {\r\n                op: PropertyFactory.getProp(this.element,properties[i].o,0,0.01,this.dynamicProperties),\r\n                prop: ShapePropertyFactory.getShapeProp(this.element,properties[i],3,this.dynamicProperties,null),\r\n                elem: path\r\n            };\r\n            defs.appendChild(path);\r\n            continue;\r\n        }\r\n        count += 1;\r\n\r\n        if(properties[i].mode == 's'){\r\n            path.setAttribute('fill', '#000000');\r\n        }else{\r\n            path.setAttribute('fill', '#ffffff');\r\n        }\r\n        path.setAttribute('clip-rule','nonzero');\r\n\r\n        if(properties[i].x.k !== 0){\r\n            maskType = 'mask';\r\n            maskRef = 'mask';\r\n            x = PropertyFactory.getProp(this.element,properties[i].x,0,null,this.dynamicProperties);\r\n            var filterID = 'fi_'+randomString(10);\r\n            expansor = document.createElementNS(svgNS,'filter');\r\n            expansor.setAttribute('id',filterID);\r\n            feMorph = document.createElementNS(svgNS,'feMorphology');\r\n            feMorph.setAttribute('operator','dilate');\r\n            feMorph.setAttribute('in','SourceGraphic');\r\n            feMorph.setAttribute('radius','0');\r\n            expansor.appendChild(feMorph);\r\n            defs.appendChild(expansor);\r\n            if(properties[i].mode == 's'){\r\n                path.setAttribute('stroke', '#000000');\r\n            }else{\r\n                path.setAttribute('stroke', '#ffffff');\r\n            }\r\n        }else{\r\n            feMorph = null;\r\n            x = null;\r\n        }\r\n\r\n\r\n        this.storedData[i] = {\r\n             elem: path,\r\n             x: x,\r\n             expan: feMorph,\r\n            lastPath: '',\r\n            lastOperator:'',\r\n            filterId:filterID,\r\n            lastRadius:0\r\n        };\r\n        if(properties[i].mode == 'i'){\r\n            jLen = currentMasks.length;\r\n            var g = document.createElementNS(svgNS,'g');\r\n            for(j=0;j<jLen;j+=1){\r\n                g.appendChild(currentMasks[j]);\r\n            }\r\n            var mask = document.createElementNS(svgNS,'mask');\r\n            mask.setAttribute('mask-type','alpha');\r\n            mask.setAttribute('id',layerId+'_'+count);\r\n            mask.appendChild(path);\r\n            defs.appendChild(mask);\r\n            g.setAttribute('mask','url(' + locationHref + '#'+layerId+'_'+count+')');\r\n\r\n            currentMasks.length = 0;\r\n            currentMasks.push(g);\r\n        }else{\r\n            currentMasks.push(path);\r\n        }\r\n        if(properties[i].inv && !this.solidPath){\r\n            this.solidPath = this.createLayerSolidPath();\r\n        }\r\n        this.viewData[i] = {\r\n            elem: path,\r\n            lastPath: '',\r\n            op: PropertyFactory.getProp(this.element,properties[i].o,0,0.01,this.dynamicProperties),\r\n            prop:ShapePropertyFactory.getShapeProp(this.element,properties[i],3,this.dynamicProperties,null)\r\n        };\r\n        if(rect){\r\n            this.viewData[i].invRect = rect;\r\n        }\r\n        if(!this.viewData[i].prop.k){\r\n            this.drawPath(properties[i],this.viewData[i].prop.v,this.viewData[i]);\r\n        }\r\n    }\r\n\r\n    this.maskElement = document.createElementNS(svgNS, maskType);\r\n\r\n    len = currentMasks.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.maskElement.appendChild(currentMasks[i]);\r\n    }\r\n\r\n    this.maskElement.setAttribute('id', layerId);\r\n    if(count > 0){\r\n        this.element.maskedElement.setAttribute(maskRef, \"url(\" + locationHref + \"#\" + layerId + \")\");\r\n    }\r\n\r\n    defs.appendChild(this.maskElement);\r\n};\r\n\r\nMaskElement.prototype.getMaskProperty = function(pos){\r\n    return this.viewData[pos].prop;\r\n};\r\n\r\nMaskElement.prototype.prepareFrame = function(){\r\n    var i, len = this.dynamicProperties.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.dynamicProperties[i].getValue();\r\n\r\n    }\r\n};\r\n\r\nMaskElement.prototype.renderFrame = function (finalMat) {\r\n    var i, len = this.masksProperties.length;\r\n    for (i = 0; i < len; i++) {\r\n        if(this.viewData[i].prop.mdf || this.firstFrame){\r\n            this.drawPath(this.masksProperties[i],this.viewData[i].prop.v,this.viewData[i]);\r\n        }\r\n        if(this.viewData[i].op.mdf || this.firstFrame){\r\n            this.viewData[i].elem.setAttribute('fill-opacity',this.viewData[i].op.v);\r\n        }\r\n        if(this.masksProperties[i].mode !== 'n'){\r\n            if(this.viewData[i].invRect && (this.element.finalTransform.mProp.mdf || this.firstFrame)){\r\n                this.viewData[i].invRect.setAttribute('x', -finalMat.props[12]);\r\n                this.viewData[i].invRect.setAttribute('y', -finalMat.props[13]);\r\n            }\r\n            if(this.storedData[i].x && (this.storedData[i].x.mdf || this.firstFrame)){\r\n                var feMorph = this.storedData[i].expan;\r\n                if(this.storedData[i].x.v < 0){\r\n                    if(this.storedData[i].lastOperator !== 'erode'){\r\n                        this.storedData[i].lastOperator = 'erode';\r\n                        this.storedData[i].elem.setAttribute('filter','url(' + locationHref + '#'+this.storedData[i].filterId+')');\r\n                    }\r\n                    feMorph.setAttribute('radius',-this.storedData[i].x.v);\r\n                }else{\r\n                    if(this.storedData[i].lastOperator !== 'dilate'){\r\n                        this.storedData[i].lastOperator = 'dilate';\r\n                        this.storedData[i].elem.setAttribute('filter',null);\r\n                    }\r\n                    this.storedData[i].elem.setAttribute('stroke-width', this.storedData[i].x.v*2);\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n    this.firstFrame = false;\r\n};\r\n\r\nMaskElement.prototype.getMaskelement = function () {\r\n    return this.maskElement;\r\n};\r\n\r\nMaskElement.prototype.createLayerSolidPath = function(){\r\n    var path = 'M0,0 ';\r\n    path += ' h' + this.globalData.compSize.w ;\r\n    path += ' v' + this.globalData.compSize.h ;\r\n    path += ' h-' + this.globalData.compSize.w ;\r\n    path += ' v-' + this.globalData.compSize.h + ' ';\r\n    return path;\r\n};\r\n\r\nMaskElement.prototype.drawPath = function(pathData,pathNodes,viewData){\r\n    var pathString = \" M\"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    var i, len;\r\n    len = pathNodes._length;\r\n    for(i=1;i<len;i+=1){\r\n        //pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[i][0]+','+pathNodes.i[i][1] + \" \"+pathNodes.v[i][0]+','+pathNodes.v[i][1];\r\n        pathString += \" C\"+bm_rnd(pathNodes.o[i-1][0])+','+bm_rnd(pathNodes.o[i-1][1]) + \" \"+bm_rnd(pathNodes.i[i][0])+','+bm_rnd(pathNodes.i[i][1]) + \" \"+bm_rnd(pathNodes.v[i][0])+','+bm_rnd(pathNodes.v[i][1]);\r\n    }\r\n        //pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[0][0]+','+pathNodes.i[0][1] + \" \"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    if(pathNodes.c && len > 1){\r\n        pathString += \" C\"+bm_rnd(pathNodes.o[i-1][0])+','+bm_rnd(pathNodes.o[i-1][1]) + \" \"+bm_rnd(pathNodes.i[0][0])+','+bm_rnd(pathNodes.i[0][1]) + \" \"+bm_rnd(pathNodes.v[0][0])+','+bm_rnd(pathNodes.v[0][1]);\r\n    }\r\n    //pathNodes.__renderedString = pathString;\r\n\r\n\r\n    if(viewData.lastPath !== pathString){\r\n        if(viewData.elem){\r\n            if(!pathNodes.c){\r\n                viewData.elem.setAttribute('d','');\r\n            }else if(pathData.inv){\r\n                viewData.elem.setAttribute('d',this.solidPath + pathString);\r\n            }else{\r\n                viewData.elem.setAttribute('d',pathString);\r\n            }\r\n        }\r\n        viewData.lastPath = pathString;\r\n    }\r\n};\r\n\r\nMaskElement.prototype.destroy = function(){\r\n    this.element = null;\r\n    this.globalData = null;\r\n    this.maskElement = null;\r\n    this.data = null;\r\n    this.masksProperties = null;\r\n};\nfunction BaseElement(){\r\n};\r\nBaseElement.prototype.checkMasks = function(){\r\n    if(!this.data.hasMask){\r\n        return false;\r\n    }\r\n    var i = 0, len = this.data.masksProperties.length;\r\n    while(i<len) {\r\n        if((this.data.masksProperties[i].mode !== 'n' && this.data.masksProperties[i].cl !== false)) {\r\n            return true;\r\n        }\r\n        i += 1;\r\n    }\r\n    return false;\r\n}\r\n\r\nBaseElement.prototype.checkParenting = function(){\r\n    if(this.data.parent !== undefined){\r\n        this.comp.buildElementParenting(this, this.data.parent);\r\n    }\r\n}\r\n\r\nBaseElement.prototype.prepareFrame = function(num){\r\n    if(this.data.ip - this.data.st <= num && this.data.op - this.data.st > num)\r\n    {\r\n        if(this.isVisible !== true){\r\n            this.elemMdf = true;\r\n            this.globalData.mdf = true;\r\n            this.isVisible = true;\r\n            this.firstFrame = true;\r\n            if(this.data.hasMask){\r\n                this.maskManager.firstFrame = true;\r\n            }\r\n        }\r\n    }else{\r\n        if(this.isVisible !== false){\r\n            this.elemMdf = true;\r\n            this.globalData.mdf = true;\r\n            this.isVisible = false;\r\n        }\r\n    }\r\n    var i, len = this.dynamicProperties.length;\r\n    for(i=0;i<len;i+=1){\r\n        if(this.isVisible || (this._isParent && this.dynamicProperties[i].type === 'transform')){\r\n            this.dynamicProperties[i].getValue();\r\n            if(this.dynamicProperties[i].mdf){\r\n                this.elemMdf = true;\r\n                this.globalData.mdf = true;\r\n            }\r\n        }\r\n    }\r\n    if(this.data.hasMask && this.isVisible){\r\n        this.maskManager.prepareFrame(num*this.data.sr);\r\n    }\r\n    \r\n    /* TODO check this\r\n    if(this.data.sy){\r\n        if(this.data.sy[0].renderedData[num]){\r\n            if(this.data.sy[0].renderedData[num].c){\r\n                this.feFlood.setAttribute('flood-color','rgb('+Math.round(this.data.sy[0].renderedData[num].c[0])+','+Math.round(this.data.sy[0].renderedData[num].c[1])+','+Math.round(this.data.sy[0].renderedData[num].c[2])+')');\r\n            }\r\n            if(this.data.sy[0].renderedData[num].s){\r\n                this.feMorph.setAttribute('radius',this.data.sy[0].renderedData[num].s);\r\n            }\r\n        }\r\n    }\r\n    */\r\n\r\n\r\n    this.currentFrameNum = num*this.data.sr;\r\n    return this.isVisible;\r\n};\r\n\r\nBaseElement.prototype.globalToLocal = function(pt){\r\n    var transforms = [];\r\n    transforms.push(this.finalTransform);\r\n    var flag = true;\r\n    var comp = this.comp;\r\n    while(flag){\r\n        if(comp.finalTransform){\r\n            if(comp.data.hasMask){\r\n                transforms.splice(0,0,comp.finalTransform);\r\n            }\r\n            comp = comp.comp;\r\n        } else {\r\n            flag = false;\r\n        }\r\n    }\r\n    var i, len = transforms.length,ptNew;\r\n    for(i=0;i<len;i+=1){\r\n        ptNew = transforms[i].mat.applyToPointArray(0,0,0);\r\n        //ptNew = transforms[i].mat.applyToPointArray(pt[0],pt[1],pt[2]);\r\n        pt = [pt[0] - ptNew[0],pt[1] - ptNew[1],0];\r\n    }\r\n    return pt;\r\n};\r\n\r\nBaseElement.prototype.initExpressions = function(){\r\n    this.layerInterface = LayerExpressionInterface(this);\r\n    //layers[i].layerInterface = LayerExpressionInterface(layers[i]);\r\n    //layers[i].layerInterface = LayerExpressionInterface(layers[i]);\r\n    if(this.data.hasMask){\r\n        this.layerInterface.registerMaskInterface(this.maskManager);\r\n    }\r\n    var effectsInterface = EffectsExpressionInterface.createEffectsInterface(this,this.layerInterface);\r\n    this.layerInterface.registerEffectsInterface(effectsInterface);\r\n\r\n    if(this.data.ty === 0 || this.data.xt){\r\n        this.compInterface = CompExpressionInterface(this);\r\n    } else if(this.data.ty === 4){\r\n        this.layerInterface.shapeInterface = ShapeExpressionInterface.createShapeInterface(this.shapesData,this.itemsData,this.layerInterface);\r\n    } else if(this.data.ty === 5){\r\n        this.layerInterface.textInterface = TextExpressionInterface(this);\r\n    }\r\n}\r\n\r\nBaseElement.prototype.setBlendMode = function(){\r\n    var blendModeValue = '';\r\n    switch(this.data.bm){\r\n        case 1:\r\n            blendModeValue = 'multiply';\r\n            break;\r\n        case 2:\r\n            blendModeValue = 'screen';\r\n            break;\r\n        case 3:\r\n            blendModeValue = 'overlay';\r\n            break;\r\n        case 4:\r\n            blendModeValue = 'darken';\r\n            break;\r\n        case 5:\r\n            blendModeValue = 'lighten';\r\n            break;\r\n        case 6:\r\n            blendModeValue = 'color-dodge';\r\n            break;\r\n        case 7:\r\n            blendModeValue = 'color-burn';\r\n            break;\r\n        case 8:\r\n            blendModeValue = 'hard-light';\r\n            break;\r\n        case 9:\r\n            blendModeValue = 'soft-light';\r\n            break;\r\n        case 10:\r\n            blendModeValue = 'difference';\r\n            break;\r\n        case 11:\r\n            blendModeValue = 'exclusion';\r\n            break;\r\n        case 12:\r\n            blendModeValue = 'hue';\r\n            break;\r\n        case 13:\r\n            blendModeValue = 'saturation';\r\n            break;\r\n        case 14:\r\n            blendModeValue = 'color';\r\n            break;\r\n        case 15:\r\n            blendModeValue = 'luminosity';\r\n            break;\r\n    }\r\n    var elem = this.baseElement || this.layerElement;\r\n\r\n    elem.style['mix-blend-mode'] = blendModeValue;\r\n}\r\n\r\nBaseElement.prototype.init = function(){\r\n    if(!this.data.sr){\r\n        this.data.sr = 1;\r\n    }\r\n    this.dynamicProperties = this.dynamicProperties || [];\r\n    if(this.data.ef){\r\n        this.effects = new EffectsManager(this.data,this,this.dynamicProperties);\r\n        //this.effect = this.effectsManager.bind(this.effectsManager);\r\n    }\r\n    //this.elemInterface = buildLayerExpressionInterface(this);\r\n    this.hidden = false;\r\n    this.firstFrame = true;\r\n    this.isVisible = false;\r\n    this._isParent = false;\r\n    this.currentFrameNum = -99999;\r\n    this.lastNum = -99999;\r\n    if(this.data.ks){\r\n        this.finalTransform = {\r\n            mProp: PropertyFactory.getProp(this,this.data.ks,2,null,this.dynamicProperties),\r\n            matMdf: false,\r\n            opMdf: false,\r\n            mat: new Matrix(),\r\n            opacity: 1\r\n        };\r\n        if(this.data.ao){\r\n            this.finalTransform.mProp.autoOriented = true;\r\n        }\r\n        this.finalTransform.op = this.finalTransform.mProp.o;\r\n        this.transform = this.finalTransform.mProp;\r\n        if(this.data.ty !== 11){\r\n            this.createElements();\r\n        }\r\n        if(this.data.hasMask){\r\n            this.addMasks(this.data);\r\n        }\r\n    }\r\n    this.elemMdf = false;\r\n};\r\nBaseElement.prototype.getType = function(){\r\n    return this.type;\r\n};\r\n\r\nBaseElement.prototype.resetHierarchy = function(){\r\n    if(!this.hierarchy){\r\n        this.hierarchy = [];\r\n    }else{\r\n        this.hierarchy.length = 0;\r\n    }\r\n};\r\n\r\nBaseElement.prototype.getHierarchy = function(){\r\n    if(!this.hierarchy){\r\n        this.hierarchy = [];\r\n    }\r\n    return this.hierarchy;\r\n};\r\n\r\nBaseElement.prototype.setHierarchy = function(hierarchy){\r\n    this.hierarchy = hierarchy;\r\n};\r\n\r\nBaseElement.prototype.getLayerSize = function(){\r\n    if(this.data.ty === 5){\r\n        return {w:this.data.textData.width,h:this.data.textData.height};\r\n    }else{\r\n        return {w:this.data.width,h:this.data.height};\r\n    }\r\n};\r\n\r\nBaseElement.prototype.hide = function(){\r\n\r\n};\r\n\r\nBaseElement.prototype.sourceRectAtTime = function(){\r\n    return {\r\n        top:0,\r\n        left:0,\r\n        width:100,\r\n        height:100\r\n    }\r\n};\r\n\r\nBaseElement.prototype.mHelper = new Matrix();\nfunction SVGBaseElement(data,parentContainer,globalData,comp, placeholder){\r\n    this.globalData = globalData;\r\n    this.comp = comp;\r\n    this.data = data;\r\n    this.matteElement = null;\r\n    this.transformedElement = null;\r\n    this.isTransparent = false;\r\n    this.parentContainer = parentContainer;\r\n    this.layerId = placeholder ? placeholder.layerId : 'ly_'+randomString(10);\r\n    this.placeholder = placeholder;\r\n    this._sizeChanged = false;\r\n    this.init();\r\n};\r\n\r\ncreateElement(BaseElement, SVGBaseElement);\r\n\r\nSVGBaseElement.prototype.createElements = function(){\r\n    this.layerElement = document.createElementNS(svgNS,'g');\r\n    this.transformedElement = this.layerElement;\r\n    if(this.data.hasMask){\r\n        this.maskedElement = this.layerElement;\r\n    }\r\n    var layerElementParent = null;\r\n    if(this.data.td){\r\n        if(this.data.td == 3 || this.data.td == 1){\r\n            var masker = document.createElementNS(svgNS,'mask');\r\n            masker.setAttribute('id',this.layerId);\r\n            masker.setAttribute('mask-type',this.data.td == 3 ? 'luminance':'alpha');\r\n            masker.appendChild(this.layerElement);\r\n            layerElementParent = masker;\r\n            this.globalData.defs.appendChild(masker);\r\n            ////// This is only for IE and Edge when mask if of type alpha\r\n            if(!featureSupport.maskType && this.data.td == 1){\r\n                masker.setAttribute('mask-type','luminance');\r\n                var filId = randomString(10);\r\n                var fil = filtersFactory.createFilter(filId);\r\n                this.globalData.defs.appendChild(fil);\r\n                fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\r\n                var gg = document.createElementNS(svgNS,'g');\r\n                gg.appendChild(this.layerElement);\r\n                layerElementParent = gg;\r\n                masker.appendChild(gg);\r\n                gg.setAttribute('filter','url(' + locationHref + '#'+filId+')');\r\n            }\r\n        }else if(this.data.td == 2){\r\n            var maskGroup = document.createElementNS(svgNS,'mask');\r\n            maskGroup.setAttribute('id',this.layerId);\r\n            maskGroup.setAttribute('mask-type','alpha');\r\n            var maskGrouper = document.createElementNS(svgNS,'g');\r\n            maskGroup.appendChild(maskGrouper);\r\n            var filId = randomString(10);\r\n            var fil = filtersFactory.createFilter(filId);\r\n            ////\r\n\r\n            var feColorMatrix = document.createElementNS(svgNS,'feColorMatrix');\r\n            feColorMatrix.setAttribute('type','matrix');\r\n            feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n            feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 -1 1');\r\n            fil.appendChild(feColorMatrix);\r\n\r\n            ////\r\n            /*var feCTr = document.createElementNS(svgNS,'feComponentTransfer');\r\n            feCTr.setAttribute('in','SourceGraphic');\r\n            fil.appendChild(feCTr);\r\n            var feFunc = document.createElementNS(svgNS,'feFuncA');\r\n            feFunc.setAttribute('type','table');\r\n            feFunc.setAttribute('tableValues','1.0 0.0');\r\n            feCTr.appendChild(feFunc);*/\r\n            this.globalData.defs.appendChild(fil);\r\n            var alphaRect = document.createElementNS(svgNS,'rect');\r\n            alphaRect.setAttribute('width',this.comp.data.w);\r\n            alphaRect.setAttribute('height',this.comp.data.h);\r\n            alphaRect.setAttribute('x','0');\r\n            alphaRect.setAttribute('y','0');\r\n            alphaRect.setAttribute('fill','#ffffff');\r\n            alphaRect.setAttribute('opacity','0');\r\n            maskGrouper.setAttribute('filter','url(' + locationHref + '#'+filId+')');\r\n            maskGrouper.appendChild(alphaRect);\r\n            maskGrouper.appendChild(this.layerElement);\r\n            layerElementParent = maskGrouper;\r\n            if(!featureSupport.maskType){\r\n                maskGroup.setAttribute('mask-type','luminance');\r\n                fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\r\n                var gg = document.createElementNS(svgNS,'g');\r\n                maskGrouper.appendChild(alphaRect);\r\n                gg.appendChild(this.layerElement);\r\n                layerElementParent = gg;\r\n                maskGrouper.appendChild(gg);\r\n            }\r\n            this.globalData.defs.appendChild(maskGroup);\r\n        }\r\n    }else if(this.data.hasMask || this.data.tt){\r\n        if(this.data.tt){\r\n            this.matteElement = document.createElementNS(svgNS,'g');\r\n            this.matteElement.appendChild(this.layerElement);\r\n            layerElementParent = this.matteElement;\r\n            this.baseElement = this.matteElement;\r\n        }else{\r\n            this.baseElement = this.layerElement;\r\n        }\r\n    }else{\r\n        this.baseElement = this.layerElement;\r\n    }\r\n    if((this.data.ln || this.data.cl) && (this.data.ty === 4 || this.data.ty === 0)){\r\n        if(this.data.ln){\r\n            this.layerElement.setAttribute('id',this.data.ln);\r\n        }\r\n        if(this.data.cl){\r\n            this.layerElement.setAttribute('class',this.data.cl);\r\n        }\r\n    }\r\n    if(this.data.ty === 0){\r\n            var cp = document.createElementNS(svgNS, 'clipPath');\r\n            var pt = document.createElementNS(svgNS,'path');\r\n            pt.setAttribute('d','M0,0 L'+this.data.w+',0'+' L'+this.data.w+','+this.data.h+' L0,'+this.data.h+'z');\r\n            var clipId = 'cp_'+randomString(8);\r\n            cp.setAttribute('id',clipId);\r\n            cp.appendChild(pt);\r\n            this.globalData.defs.appendChild(cp);\r\n        if(this.checkMasks()){\r\n            var cpGroup = document.createElementNS(svgNS,'g');\r\n            cpGroup.setAttribute('clip-path','url(' + locationHref + '#'+clipId+')');\r\n            cpGroup.appendChild(this.layerElement);\r\n            this.transformedElement = cpGroup;\r\n            if(layerElementParent){\r\n                layerElementParent.appendChild(this.transformedElement);\r\n            } else {\r\n                this.baseElement = this.transformedElement;\r\n            }\r\n        } else {\r\n            this.layerElement.setAttribute('clip-path','url(' + locationHref + '#'+clipId+')');\r\n        }\r\n        \r\n    }\r\n    if(this.data.bm !== 0){\r\n        this.setBlendMode();\r\n    }\r\n    if(this.layerElement !== this.parentContainer){\r\n        this.placeholder = null;\r\n    }\r\n    /* Todo performance killer\r\n    if(this.data.sy){\r\n        var filterID = 'st_'+randomString(10);\r\n        var c = this.data.sy[0].c.k;\r\n        var r = this.data.sy[0].s.k;\r\n        var expansor = document.createElementNS(svgNS,'filter');\r\n        expansor.setAttribute('id',filterID);\r\n        var feFlood = document.createElementNS(svgNS,'feFlood');\r\n        this.feFlood = feFlood;\r\n        if(!c[0].e){\r\n            feFlood.setAttribute('flood-color','rgb('+c[0]+','+c[1]+','+c[2]+')');\r\n        }\r\n        feFlood.setAttribute('result','base');\r\n        expansor.appendChild(feFlood);\r\n        var feMorph = document.createElementNS(svgNS,'feMorphology');\r\n        feMorph.setAttribute('operator','dilate');\r\n        feMorph.setAttribute('in','SourceGraphic');\r\n        feMorph.setAttribute('result','bigger');\r\n        this.feMorph = feMorph;\r\n        if(!r.length){\r\n            feMorph.setAttribute('radius',this.data.sy[0].s.k);\r\n        }\r\n        expansor.appendChild(feMorph);\r\n        var feColorMatrix = document.createElementNS(svgNS,'feColorMatrix');\r\n        feColorMatrix.setAttribute('result','mask');\r\n        feColorMatrix.setAttribute('in','bigger');\r\n        feColorMatrix.setAttribute('type','matrix');\r\n        feColorMatrix.setAttribute('values','0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0');\r\n        expansor.appendChild(feColorMatrix);\r\n        var feComposite = document.createElementNS(svgNS,'feComposite');\r\n        feComposite.setAttribute('result','drop');\r\n        feComposite.setAttribute('in','base');\r\n        feComposite.setAttribute('in2','mask');\r\n        feComposite.setAttribute('operator','in');\r\n        expansor.appendChild(feComposite);\r\n        var feBlend = document.createElementNS(svgNS,'feBlend');\r\n        feBlend.setAttribute('in','SourceGraphic');\r\n        feBlend.setAttribute('in2','drop');\r\n        feBlend.setAttribute('mode','normal');\r\n        expansor.appendChild(feBlend);\r\n        this.globalData.defs.appendChild(expansor);\r\n        var cont = document.createElementNS(svgNS,'g');\r\n        if(this.layerElement === this.parentContainer){\r\n            this.layerElement = cont;\r\n        }else{\r\n            cont.appendChild(this.layerElement);\r\n        }\r\n        cont.setAttribute('filter','url(#'+filterID+')');\r\n        if(this.data.td){\r\n            cont.setAttribute('data-td',this.data.td);\r\n        }\r\n        if(this.data.td == 3){\r\n            this.globalData.defs.appendChild(cont);\r\n        }else if(this.data.td == 2){\r\n            maskGrouper.appendChild(cont);\r\n        }else if(this.data.td == 1){\r\n            masker.appendChild(cont);\r\n        }else{\r\n            if(this.data.hasMask && this.data.tt){\r\n                this.matteElement.appendChild(cont);\r\n            }else{\r\n                this.appendNodeToParent(cont);\r\n            }\r\n        }\r\n    }*/\r\n    if(this.data.ef){\r\n        this.effectsManager = new SVGEffects(this);\r\n    }\r\n    this.checkParenting();\r\n};\r\n\r\n\r\nSVGBaseElement.prototype.setBlendMode = BaseElement.prototype.setBlendMode;\r\n\r\nSVGBaseElement.prototype.renderFrame = function(parentTransform){\r\n    if(this.data.ty === 3 || this.data.hd || !this.isVisible){\r\n        return false;\r\n    }\r\n\r\n    this.lastNum = this.currentFrameNum;\r\n    this.finalTransform.opMdf = this.firstFrame || this.finalTransform.op.mdf;\r\n    this.finalTransform.matMdf = this.firstFrame || this.finalTransform.mProp.mdf;\r\n    this.finalTransform.opacity = this.finalTransform.op.v;\r\n\r\n    var mat;\r\n    var finalMat = this.finalTransform.mat;\r\n\r\n    if(this.hierarchy){\r\n        var i = 0, len = this.hierarchy.length;\r\n        if(!this.finalTransform.matMdf) {\r\n            while(i < len) {\r\n                if(this.hierarchy[i].finalTransform.mProp.mdf) {\r\n                    this.finalTransform.matMdf = true;\r\n                    break;\r\n                }\r\n                i += 1;\r\n            }\r\n        }\r\n        \r\n        if(this.finalTransform.matMdf) {\r\n            mat = this.finalTransform.mProp.v.props;\r\n            finalMat.cloneFromProps(mat);\r\n            for(i=0;i<len;i+=1){\r\n                mat = this.hierarchy[i].finalTransform.mProp.v.props;\r\n                finalMat.transform(mat[0],mat[1],mat[2],mat[3],mat[4],mat[5],mat[6],mat[7],mat[8],mat[9],mat[10],mat[11],mat[12],mat[13],mat[14],mat[15]);\r\n            }\r\n        }\r\n        \r\n    }else if(this.isVisible){\r\n        finalMat = this.finalTransform.mProp.v;\r\n    }\r\n    if(this.finalTransform.matMdf && this.layerElement){\r\n        this.transformedElement.setAttribute('transform',finalMat.to2dCSS());\r\n    }\r\n    if(this.finalTransform.opMdf && this.layerElement){\r\n        if(this.finalTransform.op.v <= 0) {\r\n            if(!this.isTransparent && this.globalData.renderConfig.hideOnTransparent){\r\n                this.isTransparent = true;\r\n                this.hide();\r\n            }\r\n        } else if(this.hidden && this.isTransparent){\r\n            this.isTransparent = false;\r\n            this.show();\r\n        }\r\n        this.transformedElement.setAttribute('opacity',this.finalTransform.op.v);\r\n    }\r\n\r\n    if(this.data.hasMask){\r\n        this.maskManager.renderFrame(finalMat);\r\n    }\r\n    if(this.effectsManager){\r\n        this.effectsManager.renderFrame(this.firstFrame);\r\n    }\r\n    return this.isVisible;\r\n};\r\n\r\nSVGBaseElement.prototype.destroy = function(){\r\n    this.layerElement = null;\r\n    this.parentContainer = null;\r\n    if(this.matteElement) {\r\n        this.matteElement = null;\r\n    }\r\n    if(this.maskManager) {\r\n        this.maskManager.destroy();\r\n    }\r\n};\r\n\r\nSVGBaseElement.prototype.getBaseElement = function(){\r\n    return this.baseElement;\r\n};\r\nSVGBaseElement.prototype.addMasks = function(data){\r\n    this.maskManager = new MaskElement(data,this,this.globalData);\r\n};\r\n\r\nSVGBaseElement.prototype.setMatte = function(id){\r\n    if(!this.matteElement){\r\n        return;\r\n    }\r\n    this.matteElement.setAttribute(\"mask\", \"url(\" + locationHref + \"#\" + id + \")\");\r\n};\r\n\r\nSVGBaseElement.prototype.hide = function(){\r\n    if(!this.hidden){\r\n        this.layerElement.style.display = 'none';\r\n        this.hidden = true;\r\n    }\r\n};\r\n\r\nSVGBaseElement.prototype.show = function(){\r\n    if(this.isVisible && !this.isTransparent){\r\n        this.hidden = false;\r\n        this.layerElement.style.display = 'block';\r\n    }\r\n};\r\n\nfunction IShapeElement(data,parentContainer,globalData,comp, placeholder){\r\n    this.shapes = [];\r\n    this.shapesData = data.shapes;\r\n    this.stylesList = [];\r\n    this.itemsData = [];\r\n    this.prevViewData = [];\r\n    this.shapeModifiers = [];\r\n    this.processedElements = [];\r\n    this._parent.constructor.call(this,data,parentContainer,globalData,comp, placeholder);\r\n}\r\ncreateElement(SVGBaseElement, IShapeElement);\r\n\r\nIShapeElement.prototype.identityMatrix = new Matrix();\r\n\r\nIShapeElement.prototype.lcEnum = {\r\n    '1': 'butt',\r\n    '2': 'round',\r\n    '3': 'square'\r\n}\r\n\r\nIShapeElement.prototype.ljEnum = {\r\n    '1': 'miter',\r\n    '2': 'round',\r\n    '3': 'butt'\r\n}\r\n\r\nIShapeElement.prototype.searchProcessedElement = function(elem){\r\n    var i = this.processedElements.length;\r\n    while(i){\r\n        i -= 1;\r\n        if(this.processedElements[i].elem === elem){\r\n            return this.processedElements[i].pos;\r\n        }\r\n    }\r\n    return 0;\r\n};\r\n\r\nIShapeElement.prototype.addProcessedElement = function(elem, pos){\r\n    var i = this.processedElements.length;\r\n    while(i){\r\n        i -= 1;\r\n        if(this.processedElements[i].elem === elem){\r\n            this.processedElements[i].pos = pos;\r\n            break;\r\n        }\r\n    }\r\n    if(i === 0){\r\n        this.processedElements.push({\r\n            elem: elem,\r\n            pos: pos\r\n        })\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.buildExpressionInterface = function(){};\r\n\r\nIShapeElement.prototype.createElements = function(){\r\n    //TODO check if I can use symbol so i can set its viewBox\r\n    this._parent.createElements.call(this);\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement,this.dynamicProperties, 0, [], true);\r\n    if(!this.data.hd || this.data.td){\r\n        styleUnselectableDiv(this.layerElement);\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.setGradientData = function(pathElement,arr,data){\r\n\r\n    var gradientId = 'gr_'+randomString(10);\r\n    var gfill;\r\n    if(arr.t === 1){\r\n        gfill = document.createElementNS(svgNS,'linearGradient');\r\n    } else {\r\n        gfill = document.createElementNS(svgNS,'radialGradient');\r\n    }\r\n    gfill.setAttribute('id',gradientId);\r\n    gfill.setAttribute('spreadMethod','pad');\r\n    gfill.setAttribute('gradientUnits','userSpaceOnUse');\r\n    var stops = [];\r\n    var stop, j, jLen;\r\n    jLen = arr.g.p*4;\r\n    for(j=0;j<jLen;j+=4){\r\n        stop = document.createElementNS(svgNS,'stop');\r\n        gfill.appendChild(stop);\r\n        stops.push(stop);\r\n    }\r\n    pathElement.setAttribute( arr.ty === 'gf' ? 'fill':'stroke','url(#'+gradientId+')');\r\n    this.globalData.defs.appendChild(gfill);\r\n    data.gf = gfill;\r\n    data.cst = stops;\r\n}\r\n\r\nIShapeElement.prototype.setGradientOpacity = function(arr, data, styleOb){\r\n    if((arr.g.k.k[0].s && arr.g.k.k[0].s.length > arr.g.p*4) || arr.g.k.k.length > arr.g.p*4){\r\n        var opFill;\r\n        var stop, j, jLen;\r\n        var mask = document.createElementNS(svgNS,\"mask\");\r\n        var maskElement = document.createElementNS(svgNS, 'path');\r\n        mask.appendChild(maskElement);\r\n        var opacityId = 'op_'+randomString(10);\r\n        var maskId = 'mk_'+randomString(10);\r\n        mask.setAttribute('id',maskId);\r\n        if(arr.t === 1){\r\n            opFill = document.createElementNS(svgNS,'linearGradient');\r\n        } else {\r\n            opFill = document.createElementNS(svgNS,'radialGradient');\r\n        }\r\n        opFill.setAttribute('id',opacityId);\r\n        opFill.setAttribute('spreadMethod','pad');\r\n        opFill.setAttribute('gradientUnits','userSpaceOnUse');\r\n        jLen = arr.g.k.k[0].s ? arr.g.k.k[0].s.length : arr.g.k.k.length;\r\n        var stops = [];\r\n        for(j=arr.g.p*4;j<jLen;j+=2){\r\n            stop = document.createElementNS(svgNS,'stop');\r\n            stop.setAttribute('stop-color','rgb(255,255,255)');\r\n            //stop.setAttribute('offset',Math.round(arr.y[j][0]*100)+'%');\r\n            //stop.setAttribute('style','stop-color:rgb(255,255,255);stop-opacity:'+arr.y[j][1]);\r\n            opFill.appendChild(stop);\r\n            stops.push(stop);\r\n        }\r\n        maskElement.setAttribute( arr.ty === 'gf' ? 'fill':'stroke','url(#'+opacityId+')');\r\n        this.globalData.defs.appendChild(opFill);\r\n        this.globalData.defs.appendChild(mask);\r\n        data.of = opFill;\r\n        data.ost = stops;\r\n        styleOb.msElem = maskElement;\r\n        return maskId;\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.createStyleElement = function(data, level, dynamicProperties){\r\n    var elementData = {\r\n    };\r\n    var styleOb = {\r\n        data: data,\r\n        type: data.ty,\r\n        d: '',\r\n        ld: '',\r\n        lvl: level,\r\n        mdf: false,\r\n        closed: false\r\n    };\r\n    var pathElement = document.createElementNS(svgNS, \"path\");\r\n    elementData.o = PropertyFactory.getProp(this,data.o,0,0.01,dynamicProperties);\r\n    if(data.ty == 'st' || data.ty == 'gs') {\r\n        pathElement.setAttribute('stroke-linecap', this.lcEnum[data.lc] || 'round');\r\n        ////pathElement.style.strokeLinecap = this.lcEnum[data.lc] || 'round';\r\n        pathElement.setAttribute('stroke-linejoin',this.ljEnum[data.lj] || 'round');\r\n        ////pathElement.style.strokeLinejoin = this.ljEnum[data.lj] || 'round';\r\n        pathElement.setAttribute('fill-opacity','0');\r\n        ////pathElement.style.fillOpacity = 0;\r\n        if(data.lj == 1) {\r\n            pathElement.setAttribute('stroke-miterlimit',data.ml);\r\n            ////pathElement.style.strokeMiterlimit = data.ml;\r\n        }\r\n\r\n        elementData.w = PropertyFactory.getProp(this,data.w,0,null,dynamicProperties);\r\n        if(data.d){\r\n            var d = PropertyFactory.getDashProp(this,data.d,'svg',dynamicProperties);\r\n            if(!d.k){\r\n                pathElement.setAttribute('stroke-dasharray', d.dasharray);\r\n                ////pathElement.style.strokeDasharray = d.dasharray;\r\n                pathElement.setAttribute('stroke-dashoffset', d.dashoffset);\r\n                ////pathElement.style.strokeDashoffset = d.dashoffset;\r\n            }\r\n            elementData.d = d;\r\n        }\r\n\r\n    }\r\n    if(data.ty == 'fl' || data.ty == 'st'){\r\n        elementData.c = PropertyFactory.getProp(this,data.c,1,255,dynamicProperties);\r\n    } else {\r\n        elementData.g = PropertyFactory.getGradientProp(this,data.g,dynamicProperties);\r\n        if(data.t == 2){\r\n            elementData.h = PropertyFactory.getProp(this,data.h,0,0.01,dynamicProperties);\r\n            elementData.a = PropertyFactory.getProp(this,data.a,0,degToRads,dynamicProperties);\r\n        }\r\n        elementData.s = PropertyFactory.getProp(this,data.s,1,null,dynamicProperties);\r\n        elementData.e = PropertyFactory.getProp(this,data.e,1,null,dynamicProperties);\r\n        this.setGradientData(pathElement,data,elementData, styleOb);\r\n        var maskId = this.setGradientOpacity(data,elementData, styleOb);\r\n        if(maskId){\r\n            pathElement.setAttribute('mask','url(#'+maskId+')');\r\n        }\r\n    }\r\n    elementData.elem = pathElement;\r\n    //container.appendChild(pathElement);\r\n    if(data.r === 2) {\r\n        pathElement.setAttribute('fill-rule', 'evenodd');\r\n    }\r\n\r\n    if(data.ln){\r\n        pathElement.setAttribute('id',data.ln);\r\n    }\r\n    if(data.cl){\r\n        pathElement.setAttribute('class',data.cl);\r\n    }\r\n    styleOb.pElem = pathElement;\r\n    this.stylesList.push(styleOb);\r\n    elementData.style = styleOb;\r\n    return elementData;\r\n}\r\n\r\nIShapeElement.prototype.createGroupElement = function(data) {\r\n    var elementData = {\r\n        it: [],\r\n        prevViewData: []\r\n    };\r\n    var g = document.createElementNS(svgNS,'g');\r\n    elementData.gr = g;\r\n    if(data.ln){\r\n        elementData.gr.setAttribute('id',data.ln);\r\n    }\r\n    return elementData;\r\n}\r\n\r\nIShapeElement.prototype.createTransformElement = function(data, dynamicProperties) {\r\n    var elementData = {\r\n        transform : {\r\n            op: PropertyFactory.getProp(this,data.o,0,0.01,dynamicProperties),\r\n            mProps: PropertyFactory.getProp(this,data,2,null,dynamicProperties)\r\n        },\r\n        elements: []\r\n    };\r\n    return elementData;\r\n}\r\n\r\nIShapeElement.prototype.createShapeElement = function(data, ownTransformers, level, dynamicProperties) {\r\n    var elementData = {\r\n        elements : [],\r\n        caches:[],\r\n        styles : [],\r\n        transformers: ownTransformers,\r\n        lStr: ''\r\n    };\r\n    var ty = 4;\r\n    if(data.ty == 'rc'){\r\n        ty = 5;\r\n    }else if(data.ty == 'el'){\r\n        ty = 6;\r\n    }else if(data.ty == 'sr'){\r\n        ty = 7;\r\n    }\r\n    elementData.sh = ShapePropertyFactory.getShapeProp(this,data,ty,dynamicProperties);\r\n    elementData.lvl = level;\r\n    this.shapes.push(elementData.sh);\r\n    this.addShapeToModifiers(elementData);\r\n    return elementData;\r\n}\r\n\r\nvar cont = 0;\r\n\r\nIShapeElement.prototype.setElementStyles = function(){\r\n    var j, jLen = this.stylesList.length;\r\n    var arr = [];\r\n    for(j=0;j<jLen;j+=1){\r\n        if(!this.stylesList[j].closed){\r\n            arr.push(this.stylesList[j]);\r\n        }\r\n    }\r\n    return arr;\r\n}\r\n\r\nIShapeElement.prototype.reloadShapes = function(){\r\n    this.firstFrame = true;\r\n    var i, len = this.itemsData.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.prevViewData[i] = this.itemsData[i];\r\n    }\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement,this.dynamicProperties, 0, [], true);\r\n    var i, len = this.dynamicProperties.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.dynamicProperties[i].getValue();\r\n    }\r\n    this.renderModifiers();\r\n}\r\n\r\nIShapeElement.prototype.searchShapes = function(arr,itemsData,prevViewData,container,dynamicProperties, level, transformers, render){\r\n    var ownTransformers = [].concat(transformers);\r\n    var i, len = arr.length - 1;\r\n    var j, jLen;\r\n    var ownStyles = [], ownModifiers = [], styleOb, currentTransform, modifier, processedPos;\r\n    for(i=len;i>=0;i-=1){\r\n        processedPos = this.searchProcessedElement(arr[i]);\r\n        if(!processedPos){\r\n            arr[i]._render = render;\r\n        } else {\r\n            itemsData[i] = prevViewData[processedPos - 1];\r\n        }\r\n        if(arr[i].ty == 'fl' || arr[i].ty == 'st' || arr[i].ty == 'gf' || arr[i].ty == 'gs'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createStyleElement(arr[i], level, dynamicProperties);\r\n            } else {\r\n                itemsData[i].style.closed = false;\r\n            }\r\n            if(arr[i]._render){\r\n                container.appendChild(itemsData[i].elem);\r\n            }\r\n            ownStyles.push(itemsData[i].style);\r\n        }else if(arr[i].ty == 'gr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createGroupElement(arr[i]);\r\n            } else {\r\n                jLen = itemsData[i].it.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    itemsData[i].prevViewData[j] = itemsData[i].it[j];\r\n                }\r\n            }\r\n            this.searchShapes(arr[i].it,itemsData[i].it,itemsData[i].prevViewData,itemsData[i].gr,dynamicProperties, level + 1, ownTransformers, render);\r\n            if(arr[i]._render){\r\n                container.appendChild(itemsData[i].gr);\r\n            }\r\n        }else if(arr[i].ty == 'tr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createTransformElement(arr[i], dynamicProperties);\r\n            }\r\n            currentTransform = itemsData[i].transform;\r\n            ownTransformers.push(currentTransform);\r\n        }else if(arr[i].ty == 'sh' || arr[i].ty == 'rc' || arr[i].ty == 'el' || arr[i].ty == 'sr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createShapeElement(arr[i], ownTransformers, level, dynamicProperties);\r\n            }\r\n            itemsData[i].elements = this.setElementStyles();\r\n\r\n        }else if(arr[i].ty == 'tm' || arr[i].ty == 'rd' || arr[i].ty == 'ms'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                modifier.init(this,arr[i],dynamicProperties);\r\n                itemsData[i] = modifier;\r\n                this.shapeModifiers.push(modifier);\r\n            } else {\r\n                modifier = itemsData[i];\r\n                modifier.closed = false;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        }else if(arr[i].ty == 'rp'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                itemsData[i] = modifier;\r\n                modifier.init(this,arr,i,itemsData,dynamicProperties);\r\n                this.shapeModifiers.push(modifier);\r\n                render = false;\r\n            }else{\r\n                modifier = itemsData[i];\r\n                modifier.closed = true;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        }\r\n        this.addProcessedElement(arr[i], i + 1);\r\n    }\r\n    len = ownStyles.length;\r\n    for(i=0;i<len;i+=1){\r\n        ownStyles[i].closed = true;\r\n    }\r\n    len = ownModifiers.length;\r\n    for(i=0;i<len;i+=1){\r\n        ownModifiers[i].closed = true;\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.addShapeToModifiers = function(data) {\r\n    var i, len = this.shapeModifiers.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.shapeModifiers[i].addShape(data);\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.renderModifiers = function() {\r\n    if(!this.shapeModifiers.length){\r\n        return;\r\n    }\r\n    var i, len = this.shapes.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.shapes[i].reset();\r\n    }\r\n\r\n\r\n    len = this.shapeModifiers.length;\r\n\r\n    for(i=len-1;i>=0;i-=1){\r\n        this.shapeModifiers[i].processShapes(this.firstFrame);\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.renderFrame = function(parentMatrix){\r\n    //this.reloadShapes();\r\n    var renderParent = this._parent.renderFrame.call(this,parentMatrix);\r\n    if(renderParent===false){\r\n        this.hide();\r\n        return;\r\n    }\r\n    if(this.hidden){\r\n        this.layerElement.style.display = 'block';\r\n        this.hidden = false;\r\n    }\r\n    this.renderModifiers();\r\n    var i, len = this.stylesList.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.stylesList[i].d = '';\r\n        this.stylesList[i].mdf = false;\r\n    }\r\n    this.renderShape(this.shapesData,this.itemsData, null);\r\n\r\n    for (i = 0; i < len; i += 1) {\r\n        if (this.stylesList[i].ld === '0') {\r\n            this.stylesList[i].ld = '1';\r\n            this.stylesList[i].pElem.style.display = 'block';\r\n            //this.stylesList[i].parent.appendChild(this.stylesList[i].pElem);\r\n        }\r\n        if (this.stylesList[i].mdf || this.firstFrame) {\r\n            this.stylesList[i].pElem.setAttribute('d', this.stylesList[i].d);\r\n            if(this.stylesList[i].msElem){\r\n                this.stylesList[i].msElem.setAttribute('d', this.stylesList[i].d);\r\n            }\r\n        }\r\n    }\r\n    if (this.firstFrame) {\r\n        this.firstFrame = false;\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.hide = function(){\r\n    if(!this.hidden){\r\n        this.layerElement.style.display = 'none';\r\n        var i, len = this.stylesList.length;\r\n        for(i=len-1;i>=0;i-=1){\r\n            if(this.stylesList[i].ld !== '0'){\r\n                this.stylesList[i].ld = '0';\r\n                this.stylesList[i].pElem.style.display = 'none';\r\n                if(this.stylesList[i].pElem.parentNode){\r\n                    this.stylesList[i].parent = this.stylesList[i].pElem.parentNode;\r\n                    //this.stylesList[i].pElem.parentNode.removeChild(this.stylesList[i].pElem);\r\n                }\r\n            }\r\n        }\r\n        this.hidden = true;\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.renderShape = function(items,data, container){\r\n    var i, len = items.length - 1;\r\n    var ty;\r\n    for(i=len;i>=0;i-=1){\r\n        ty = items[i].ty;\r\n        if(ty == 'tr'){\r\n            if(this.firstFrame || data[i].transform.op.mdf && container){\r\n                container.setAttribute('opacity',data[i].transform.op.v);\r\n            }\r\n            if(this.firstFrame || data[i].transform.mProps.mdf && container){\r\n                container.setAttribute('transform',data[i].transform.mProps.v.to2dCSS());\r\n            }\r\n        }else if(ty == 'sh' || ty == 'el' || ty == 'rc' || ty == 'sr'){\r\n            this.renderPath(items[i],data[i]);\r\n        }else if(ty == 'fl'){\r\n            this.renderFill(items[i],data[i]);\r\n        }else if(ty == 'gf'){\r\n            this.renderGradient(items[i],data[i]);\r\n        }else if(ty == 'gs'){\r\n            this.renderGradient(items[i],data[i]);\r\n            this.renderStroke(items[i],data[i]);\r\n        }else if(ty == 'st'){\r\n            this.renderStroke(items[i],data[i]);\r\n        }else if(ty == 'gr'){\r\n            this.renderShape(items[i].it,data[i].it, data[i].gr);\r\n        }else if(ty == 'tm'){\r\n            //\r\n        }\r\n    }\r\n\r\n};\r\n\r\nIShapeElement.prototype.buildShapeString = function(pathNodes, length, closed, mat) {\r\n    var i, shapeString = '';\r\n    for(i = 1; i < length; i += 1) {\r\n        if (i === 1) {\r\n            shapeString += \" M\" + mat.applyToPointStringified(pathNodes.v[0][0], pathNodes.v[0][1]);\r\n        }\r\n        shapeString += \" C\" + mat.applyToPointStringified(pathNodes.o[i - 1][0], pathNodes.o[i - 1][1]) + \" \" + mat.applyToPointStringified(pathNodes.i[i][0], pathNodes.i[i][1]) + \" \" + mat.applyToPointStringified(pathNodes.v[i][0], pathNodes.v[i][1]);\r\n    }\r\n    if (length === 1) {\r\n        shapeString += \" M\" + mat.applyToPointStringified(pathNodes.v[0][0], pathNodes.v[0][1]);\r\n    }\r\n    if (closed && length) {\r\n        shapeString += \" C\" + mat.applyToPointStringified(pathNodes.o[i - 1][0], pathNodes.o[i - 1][1]) + \" \" + mat.applyToPointStringified(pathNodes.i[0][0], pathNodes.i[0][1]) + \" \" + mat.applyToPointStringified(pathNodes.v[0][0], pathNodes.v[0][1]);\r\n        shapeString += 'z';\r\n    }\r\n    return shapeString;\r\n};\r\n\r\nIShapeElement.prototype.renderPath = function(pathData,itemData){\r\n    var len, i, j, jLen,pathStringTransformed,redraw,pathNodes,l, lLen = itemData.elements.length;\r\n    var lvl = itemData.lvl;\r\n    if(!pathData._render){\r\n        return;\r\n    }\r\n    for(l=0;l<lLen;l+=1){\r\n        if(itemData.elements[l].data._render){\r\n            redraw = itemData.sh.mdf || this.firstFrame;\r\n            pathStringTransformed = 'M0 0';\r\n            var paths = itemData.sh.paths;\r\n            jLen = paths._length;\r\n            if(itemData.elements[l].lvl < lvl){\r\n                var mat = this.mHelper.reset(), props;\r\n                var iterations = lvl - itemData.elements[l].lvl;\r\n                var k = itemData.transformers.length-1;\r\n                while(iterations > 0) {\r\n                    redraw = itemData.transformers[k].mProps.mdf || redraw;\r\n                    props = itemData.transformers[k].mProps.v.props;\r\n                    mat.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\r\n                    iterations --;\r\n                    k --;\r\n                }\r\n                if(redraw){\r\n                    for(j=0;j<jLen;j+=1){\r\n                        pathNodes = paths.shapes[j];\r\n                        if(pathNodes && pathNodes._length){\r\n                            pathStringTransformed += this.buildShapeString(pathNodes, pathNodes._length, pathNodes.c, mat);\r\n                        }\r\n                    }\r\n                    itemData.caches[l] = pathStringTransformed;\r\n                } else {\r\n                    pathStringTransformed = itemData.caches[l];\r\n                }\r\n            } else {\r\n                if(redraw){\r\n                    for(j=0;j<jLen;j+=1){\r\n                        pathNodes = paths.shapes[j];\r\n                        if(pathNodes && pathNodes._length){\r\n                            pathStringTransformed += this.buildShapeString(pathNodes, pathNodes._length, pathNodes.c, this.identityMatrix);\r\n                        }\r\n                    }\r\n                    itemData.caches[l] = pathStringTransformed;\r\n                } else {\r\n                    pathStringTransformed = itemData.caches[l];\r\n                }\r\n            }\r\n            itemData.elements[l].d += pathStringTransformed;\r\n            itemData.elements[l].mdf = redraw || itemData.elements[l].mdf;\r\n        } else {\r\n            itemData.elements[l].mdf = true;\r\n        }\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.renderFill = function(styleData,itemData){\r\n    var styleElem = itemData.style;\r\n\r\n    if(itemData.c.mdf || this.firstFrame){\r\n        styleElem.pElem.setAttribute('fill','rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')');\r\n        ////styleElem.pElem.style.fill = 'rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')';\r\n    }\r\n    if(itemData.o.mdf || this.firstFrame){\r\n        styleElem.pElem.setAttribute('fill-opacity',itemData.o.v);\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.renderGradient = function(styleData,itemData){\r\n    var gfill = itemData.gf;\r\n    var opFill = itemData.of;\r\n    var pt1 = itemData.s.v,pt2 = itemData.e.v;\r\n\r\n    if(itemData.o.mdf || this.firstFrame){\r\n        var attr = styleData.ty === 'gf' ? 'fill-opacity':'stroke-opacity';\r\n        itemData.elem.setAttribute(attr,itemData.o.v);\r\n    }\r\n    //clippedElement.setAttribute('transform','matrix(1,0,0,1,-100,0)');\r\n    if(itemData.s.mdf || this.firstFrame){\r\n        var attr1 = styleData.t === 1 ? 'x1':'cx';\r\n        var attr2 = attr1 === 'x1' ? 'y1':'cy';\r\n        gfill.setAttribute(attr1,pt1[0]);\r\n        gfill.setAttribute(attr2,pt1[1]);\r\n        if(opFill){\r\n            opFill.setAttribute(attr1,pt1[0]);\r\n            opFill.setAttribute(attr2,pt1[1]);\r\n        }\r\n    }\r\n    var stops, i, len, stop;\r\n    if(itemData.g.cmdf || this.firstFrame){\r\n        stops = itemData.cst;\r\n        var cValues = itemData.g.c;\r\n        len = stops.length;\r\n        for(i=0;i<len;i+=1){\r\n            stop = stops[i];\r\n            stop.setAttribute('offset',cValues[i*4]+'%');\r\n            stop.setAttribute('stop-color','rgb('+cValues[i*4+1]+','+cValues[i*4+2]+','+cValues[i*4+3]+')');\r\n        }\r\n    }\r\n    if(opFill && (itemData.g.omdf || this.firstFrame)){\r\n        stops = itemData.ost;\r\n        var oValues = itemData.g.o;\r\n        len = stops.length;\r\n        for(i=0;i<len;i+=1){\r\n            stop = stops[i];\r\n            stop.setAttribute('offset',oValues[i*2]+'%');\r\n            stop.setAttribute('stop-opacity',oValues[i*2+1]);\r\n        }\r\n    }\r\n    if(styleData.t === 1){\r\n        if(itemData.e.mdf  || this.firstFrame){\r\n            gfill.setAttribute('x2',pt2[0]);\r\n            gfill.setAttribute('y2',pt2[1]);\r\n            if(opFill){\r\n                opFill.setAttribute('x2',pt2[0]);\r\n                opFill.setAttribute('y2',pt2[1]);\r\n            }\r\n        }\r\n    } else {\r\n        var rad;\r\n        if(itemData.s.mdf || itemData.e.mdf || this.firstFrame){\r\n            rad = Math.sqrt(Math.pow(pt1[0]-pt2[0],2)+Math.pow(pt1[1]-pt2[1],2));\r\n            gfill.setAttribute('r',rad);\r\n            if(opFill){\r\n                opFill.setAttribute('r',rad);\r\n            }\r\n        }\r\n        if(itemData.e.mdf || itemData.h.mdf || itemData.a.mdf || this.firstFrame){\r\n            if(!rad){\r\n                rad = Math.sqrt(Math.pow(pt1[0]-pt2[0],2)+Math.pow(pt1[1]-pt2[1],2));\r\n            }\r\n            var ang = Math.atan2(pt2[1]-pt1[1], pt2[0]-pt1[0]);\r\n\r\n            var percent = itemData.h.v >= 1 ? 0.99 : itemData.h.v <= -1 ? -0.99:itemData.h.v;\r\n            var dist = rad*percent;\r\n            var x = Math.cos(ang + itemData.a.v)*dist + pt1[0];\r\n            var y = Math.sin(ang + itemData.a.v)*dist + pt1[1];\r\n            gfill.setAttribute('fx',x);\r\n            gfill.setAttribute('fy',y);\r\n            if(opFill){\r\n                opFill.setAttribute('fx',x);\r\n                opFill.setAttribute('fy',y);\r\n            }\r\n        }\r\n        //gfill.setAttribute('fy','200');\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.renderStroke = function(styleData,itemData){\r\n    var styleElem = itemData.style;\r\n    //TODO fix dashes\r\n    var d = itemData.d;\r\n    var dasharray,dashoffset;\r\n    if(d && d.k && (d.mdf || this.firstFrame)){\r\n        styleElem.pElem.setAttribute('stroke-dasharray', d.dasharray);\r\n        ////styleElem.pElem.style.strokeDasharray = d.dasharray;\r\n        styleElem.pElem.setAttribute('stroke-dashoffset', d.dashoffset);\r\n        ////styleElem.pElem.style.strokeDashoffset = d.dashoffset;\r\n    }\r\n    if(itemData.c && (itemData.c.mdf || this.firstFrame)){\r\n        styleElem.pElem.setAttribute('stroke','rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')');\r\n        ////styleElem.pElem.style.stroke = 'rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')';\r\n    }\r\n    if(itemData.o.mdf || this.firstFrame){\r\n        styleElem.pElem.setAttribute('stroke-opacity',itemData.o.v);\r\n    }\r\n    if(itemData.w.mdf || this.firstFrame){\r\n        styleElem.pElem.setAttribute('stroke-width',itemData.w.v);\r\n        if(styleElem.msElem){\r\n            styleElem.msElem.setAttribute('stroke-width',itemData.w.v);\r\n        }\r\n        ////styleElem.pElem.style.strokeWidth = itemData.w.v;\r\n    }\r\n};\r\n\r\nIShapeElement.prototype.destroy = function(){\r\n    this._parent.destroy.call(this._parent);\r\n    this.shapeData = null;\r\n    this.itemsData = null;\r\n    this.parentContainer = null;\r\n    this.placeholder = null;\r\n};\r\n\nfunction ITextElement(data, animationItem,parentContainer,globalData){\r\n}\r\nITextElement.prototype.init = function(){\r\n    this.lettersChangedFlag = true;\r\n    this.dynamicProperties = this.dynamicProperties || [];\r\n    this.textAnimator = new TextAnimatorProperty(this.data.t, this.renderType, this);\r\n    this.textProperty = new TextProperty(this, this.data.t, this.dynamicProperties);\r\n    this._parent.init.call(this);\r\n    this.textAnimator.searchProperties(this.dynamicProperties);\r\n};\r\n\r\nITextElement.prototype.prepareFrame = function(num) {\r\n    this._parent.prepareFrame.call(this, num);\r\n    if(this.textProperty.mdf || this.textProperty.firstFrame) {\r\n        this.buildNewText();\r\n        this.textProperty.firstFrame = false;\r\n    }\r\n}\r\n\r\nITextElement.prototype.createPathShape = function(matrixHelper, shapes) {\r\n    var j,jLen = shapes.length;\r\n    var k, kLen, pathNodes;\r\n    var shapeStr = '';\r\n    for(j=0;j<jLen;j+=1){\r\n        pathNodes = shapes[j].ks.k;\r\n        shapeStr += this.buildShapeString(pathNodes, pathNodes.i.length, true, matrixHelper);\r\n    }\r\n    return shapeStr;\r\n};\r\n\r\nITextElement.prototype.updateDocumentData = function(newData, index) {\r\n    this.textProperty.updateDocumentData(newData, index);\r\n}\r\n\r\nITextElement.prototype.applyTextPropertiesToMatrix = function(documentData, matrixHelper, lineNumber, xPos, yPos) {\r\n    if(documentData.ps){\r\n        matrixHelper.translate(documentData.ps[0],documentData.ps[1] + documentData.ascent,0);\r\n    }\r\n    matrixHelper.translate(0,-documentData.ls,0);\r\n    switch(documentData.j){\r\n        case 1:\r\n            matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]),0,0);\r\n            break;\r\n        case 2:\r\n            matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber] )/2,0,0);\r\n            break;\r\n    }\r\n    matrixHelper.translate(xPos, yPos, 0);\r\n}\r\n\r\nITextElement.prototype.buildColor = function(colorData) {\r\n    return 'rgb(' + Math.round(colorData[0]*255) + ',' + Math.round(colorData[1]*255) + ',' + Math.round(colorData[2]*255) + ')';\r\n}\r\n\r\nITextElement.prototype.buildShapeString = IShapeElement.prototype.buildShapeString;\r\n\r\nITextElement.prototype.emptyProp = new LetterProps();\r\n\r\nITextElement.prototype.destroy = function(){\r\n    this._parent.destroy.call(this._parent);\r\n};\nfunction SVGTextElement(data,parentContainer,globalData,comp, placeholder){\r\n    this.textSpans = [];\r\n    this.renderType = 'svg';\r\n    this._parent.constructor.call(this,data,parentContainer,globalData,comp, placeholder);\r\n}\r\ncreateElement(SVGBaseElement, SVGTextElement);\r\n\r\nextendPrototype(ITextElement, SVGTextElement);\r\n\r\nSVGTextElement.prototype.createElements = function(){\r\n\r\n    this._parent.createElements.call(this);\r\n\r\n\r\n    if(this.data.ln){\r\n        this.layerElement.setAttribute('id',this.data.ln);\r\n    }\r\n    if(this.data.cl){\r\n        this.layerElement.setAttribute('class',this.data.cl);\r\n    }\r\n    if (this.data.singleShape && !this.globalData.fontManager.chars) {\r\n        this.textContainer = document.createElementNS(svgNS,'text');\r\n    }\r\n};\r\n\r\nSVGTextElement.prototype.buildNewText = function(){\r\n    var i, len;\r\n\r\n    var documentData = this.textProperty.currentData;\r\n    this.renderedLetters = Array.apply(null,{length:documentData ? documentData.l.length : 0});\r\n    if(documentData.fc) {\r\n        this.layerElement.setAttribute('fill', this.buildColor(documentData.fc));\r\n    }else{\r\n        this.layerElement.setAttribute('fill', 'rgba(0,0,0,0)');\r\n    }\r\n    if(documentData.sc){\r\n        this.layerElement.setAttribute('stroke', this.buildColor(documentData.sc));\r\n        this.layerElement.setAttribute('stroke-width', documentData.sw);\r\n    }\r\n    this.layerElement.setAttribute('font-size', documentData.s);\r\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\r\n    if(fontData.fClass){\r\n        this.layerElement.setAttribute('class',fontData.fClass);\r\n    } else {\r\n        this.layerElement.setAttribute('font-family', fontData.fFamily);\r\n        var fWeight = documentData.fWeight, fStyle = documentData.fStyle;\r\n        this.layerElement.setAttribute('font-style', fStyle);\r\n        this.layerElement.setAttribute('font-weight', fWeight);\r\n    }\r\n\r\n    var letters = documentData.l || [];\r\n    var usesGlyphs = this.globalData.fontManager.chars;\r\n    len = letters.length;\r\n    if(!len){\r\n        return;\r\n    }\r\n    var tSpan;\r\n    var matrixHelper = this.mHelper;\r\n    var shapes, shapeStr = '', singleShape = this.data.singleShape;\r\n    var xPos = 0, yPos = 0, firstLine = true;\r\n    var trackingOffset = documentData.tr/1000*documentData.s;\r\n    if(singleShape && !usesGlyphs) {\r\n        var tElement = this.textContainer;\r\n        var justify = '';\r\n        switch(documentData.j) {\r\n            case 1:\r\n                justify = 'end';\r\n                break;\r\n            case 2:\r\n                justify = 'middle';\r\n                break;\r\n            case 2:\r\n                justify = 'start';\r\n                break;\r\n        }\r\n        tElement.setAttribute('text-anchor',justify);\r\n        tElement.setAttribute('letter-spacing',trackingOffset);\r\n        var textContent = documentData.t.split(String.fromCharCode(13));\r\n        len = textContent.length;\r\n        var yPos = documentData.ps ? documentData.ps[1] + documentData.ascent : 0;\r\n        for ( i = 0; i < len; i += 1) {\r\n            tSpan = this.textSpans[i] || document.createElementNS(svgNS,'tspan');\r\n            tSpan.textContent = textContent[i];\r\n            tSpan.setAttribute('x', 0);\r\n            tSpan.setAttribute('y', yPos);\r\n            tSpan.style.display = 'inherit';\r\n            tElement.appendChild(tSpan);\r\n            this.textSpans[i] = tSpan;\r\n            yPos += documentData.lh;\r\n        }\r\n        \r\n        this.layerElement.appendChild(tElement);\r\n    } else {\r\n        var cachedSpansLength = this.textSpans.length;\r\n        var shapeData, charData;\r\n        for (i = 0; i < len; i += 1) {\r\n            if(!usesGlyphs || !singleShape || i === 0){\r\n                tSpan = cachedSpansLength > i ? this.textSpans[i] : document.createElementNS(svgNS,usesGlyphs?'path':'text');\r\n                if (cachedSpansLength <= i) {\r\n                    tSpan.setAttribute('stroke-linecap', 'butt');\r\n                    tSpan.setAttribute('stroke-linejoin','round');\r\n                    tSpan.setAttribute('stroke-miterlimit','4');\r\n                    this.textSpans[i] = tSpan;\r\n                    this.layerElement.appendChild(tSpan);\r\n                }\r\n                tSpan.style.display = 'inherit';\r\n            }\r\n            \r\n            matrixHelper.reset();\r\n            if(usesGlyphs) {\r\n                matrixHelper.scale(documentData.s / 100, documentData.s / 100);\r\n                if (singleShape) {\r\n                    if(letters[i].n) {\r\n                        xPos = -trackingOffset;\r\n                        yPos += documentData.yOffset;\r\n                        yPos += firstLine ? 1 : 0;\r\n                        firstLine = false;\r\n                    }\r\n                    this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\r\n                    xPos += letters[i].l || 0;\r\n                    //xPos += letters[i].val === ' ' ? 0 : trackingOffset;\r\n                    xPos += trackingOffset;\r\n                }\r\n                charData = this.globalData.fontManager.getCharData(documentData.t.charAt(i), fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\r\n                shapeData = charData && charData.data || {};\r\n                shapes = shapeData.shapes ? shapeData.shapes[0].it : [];\r\n                if(!singleShape){\r\n                    tSpan.setAttribute('d',this.createPathShape(matrixHelper,shapes));\r\n                } else {\r\n                    shapeStr += this.createPathShape(matrixHelper,shapes);\r\n                }\r\n            } else {\r\n                tSpan.textContent = letters[i].val;\r\n                tSpan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\",\"preserve\");\r\n            }\r\n            //\r\n        }\r\n        if (singleShape) {\r\n            tSpan.setAttribute('d',shapeStr);\r\n        }\r\n    }\r\n    while (i < this.textSpans.length){\r\n        this.textSpans[i].style.display = 'none';\r\n        i += 1;\r\n    }\r\n    \r\n    this._sizeChanged = true;\r\n}\r\n\r\nSVGTextElement.prototype.sourceRectAtTime = function(time){\r\n    this.prepareFrame(this.comp.renderedFrame - this.data.st);\r\n    this.renderLetters();\r\n    if(this._sizeChanged){\r\n        this._sizeChanged = false;\r\n        var textBox = this.layerElement.getBBox();\r\n        this.bbox = {\r\n            top: textBox.y,\r\n            left: textBox.x,\r\n            width: textBox.width,\r\n            height: textBox.height\r\n        }\r\n    }\r\n    return this.bbox;\r\n}\r\n\r\nSVGTextElement.prototype.renderLetters = function(){\r\n\r\n    if(!this.data.singleShape){\r\n        this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\r\n        if(this.lettersChangedFlag || this.textAnimator.lettersChangedFlag){\r\n            this._sizeChanged = true;\r\n            var  i,len;\r\n            var renderedLetters = this.textAnimator.renderedLetters;\r\n\r\n            var letters = this.textProperty.currentData.l;\r\n\r\n            len = letters.length;\r\n            var renderedLetter, textSpan;\r\n            for(i=0;i<len;i+=1){\r\n                if(letters[i].n){\r\n                    continue;\r\n                }\r\n                renderedLetter = renderedLetters[i];\r\n                textSpan = this.textSpans[i];\r\n                if(renderedLetter.mdf.m) {\r\n                    textSpan.setAttribute('transform',renderedLetter.m);\r\n                }\r\n                if(renderedLetter.mdf.o) {\r\n                    textSpan.setAttribute('opacity',renderedLetter.o);\r\n                }\r\n                if(renderedLetter.mdf.sw){\r\n                    textSpan.setAttribute('stroke-width',renderedLetter.sw);\r\n                }\r\n                if(renderedLetter.mdf.sc){\r\n                    textSpan.setAttribute('stroke',renderedLetter.sc);\r\n                }\r\n                if(renderedLetter.mdf.fc){\r\n                    textSpan.setAttribute('fill',renderedLetter.fc);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nSVGTextElement.prototype.renderFrame = function(parentMatrix){\r\n\r\n    var renderParent = this._parent.renderFrame.call(this,parentMatrix);\r\n    if(renderParent===false){\r\n        this.hide();\r\n        return;\r\n    }\r\n    if(this.hidden){\r\n        this.show();\r\n    }\r\n    if(this.firstFrame) {\r\n        this.firstFrame = false;\r\n    }\r\n    this.renderLetters();\r\n}\nfunction SVGTintFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = document.createElementNS(svgNS,'feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','linearRGB');\r\n    feColorMatrix.setAttribute('values','0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f1');\r\n    filter.appendChild(feColorMatrix);\r\n    feColorMatrix = document.createElementNS(svgNS,'feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n    feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f2');\r\n    filter.appendChild(feColorMatrix);\r\n    this.matrixFilter = feColorMatrix;\r\n    if(filterManager.effectElements[2].p.v !== 100 || filterManager.effectElements[2].p.k){\r\n        var feMerge = document.createElementNS(svgNS,'feMerge');\r\n        filter.appendChild(feMerge);\r\n        var feMergeNode;\r\n        feMergeNode = document.createElementNS(svgNS,'feMergeNode');\r\n        feMergeNode.setAttribute('in','SourceGraphic');\r\n        feMerge.appendChild(feMergeNode);\r\n        feMergeNode = document.createElementNS(svgNS,'feMergeNode');\r\n        feMergeNode.setAttribute('in','f2');\r\n        feMerge.appendChild(feMergeNode);\r\n    }\r\n}\r\n\r\nSVGTintFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager.mdf){\r\n        var colorBlack = this.filterManager.effectElements[0].p.v;\r\n        var colorWhite = this.filterManager.effectElements[1].p.v;\r\n        var opacity = this.filterManager.effectElements[2].p.v/100;\r\n        this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');\r\n    }\r\n};\nfunction SVGFillFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = document.createElementNS(svgNS,'feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n    feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\r\n    filter.appendChild(feColorMatrix);\r\n    this.matrixFilter = feColorMatrix;\r\n}\r\nSVGFillFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager.mdf){\r\n        var color = this.filterManager.effectElements[2].p.v;\r\n        var opacity = this.filterManager.effectElements[6].p.v;\r\n        this.matrixFilter.setAttribute('values','0 0 0 0 '+color[0]+' 0 0 0 0 '+color[1]+' 0 0 0 0 '+color[2]+' 0 0 0 '+opacity+' 0');\r\n    }\r\n};\nfunction SVGStrokeEffect(elem, filterManager){\r\n    this.initialized = false;\r\n    this.filterManager = filterManager;\r\n    this.elem = elem;\r\n    this.paths = [];\r\n}\r\n\r\nSVGStrokeEffect.prototype.initialize = function(){\r\n\r\n    var elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\r\n    var path,groupPath, i, len;\r\n    if(this.filterManager.effectElements[1].p.v === 1){\r\n        len = this.elem.maskManager.masksProperties.length;\r\n        i = 0;\r\n    } else {\r\n        i = this.filterManager.effectElements[0].p.v - 1;\r\n        len = i + 1;\r\n    }\r\n    groupPath = document.createElementNS(svgNS,'g'); \r\n    groupPath.setAttribute('fill','none');\r\n    groupPath.setAttribute('stroke-linecap','round');\r\n    groupPath.setAttribute('stroke-dashoffset',1);\r\n    for(i;i<len;i+=1){\r\n        path = document.createElementNS(svgNS,'path');\r\n        groupPath.appendChild(path);\r\n        this.paths.push({p:path,m:i});\r\n    }\r\n    if(this.filterManager.effectElements[10].p.v === 3){\r\n        var mask = document.createElementNS(svgNS,'mask');\r\n        var id = 'stms_' + randomString(10);\r\n        mask.setAttribute('id',id);\r\n        mask.setAttribute('mask-type','alpha');\r\n        mask.appendChild(groupPath);\r\n        this.elem.globalData.defs.appendChild(mask);\r\n        var g = document.createElementNS(svgNS,'g');\r\n        g.setAttribute('mask','url(' + locationHref + '#'+id+')');\r\n        if(elemChildren[0]){\r\n            g.appendChild(elemChildren[0]);\r\n        }\r\n        this.elem.layerElement.appendChild(g);\r\n        this.masker = mask;\r\n        groupPath.setAttribute('stroke','#fff');\r\n    } else if(this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2){\r\n        if(this.filterManager.effectElements[10].p.v === 2){\r\n            var elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\r\n            while(elemChildren.length){\r\n                this.elem.layerElement.removeChild(elemChildren[0]);\r\n            }\r\n        }\r\n        this.elem.layerElement.appendChild(groupPath);\r\n        this.elem.layerElement.removeAttribute('mask');\r\n        groupPath.setAttribute('stroke','#fff');\r\n    }\r\n    this.initialized = true;\r\n    this.pathMasker = groupPath;\r\n}\r\n\r\nSVGStrokeEffect.prototype.renderFrame = function(forceRender){\r\n    if(!this.initialized){\r\n        this.initialize();\r\n    }\r\n    var i, len = this.paths.length;\r\n    var mask, path;\r\n    for(i=0;i<len;i+=1){\r\n        mask = this.elem.maskManager.viewData[this.paths[i].m];\r\n        path = this.paths[i].p;\r\n        if(forceRender || this.filterManager.mdf || mask.prop.mdf){\r\n            path.setAttribute('d',mask.lastPath);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[9].p.mdf || this.filterManager.effectElements[4].p.mdf || this.filterManager.effectElements[7].p.mdf || this.filterManager.effectElements[8].p.mdf || mask.prop.mdf){\r\n            var dasharrayValue;\r\n            if(this.filterManager.effectElements[7].p.v !== 0 || this.filterManager.effectElements[8].p.v !== 100){\r\n                var s = Math.min(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)/100;\r\n                var e = Math.max(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)/100;\r\n                var l = path.getTotalLength();\r\n                dasharrayValue = '0 0 0 ' + l*s + ' ';\r\n                var lineLength = l*(e-s);\r\n                var segment = 1+this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100;\r\n                var units = Math.floor(lineLength/segment);\r\n                var j;\r\n                for(j=0;j<units;j+=1){\r\n                    dasharrayValue += '1 ' + this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100 + ' ';\r\n                }\r\n                dasharrayValue += '0 ' + l*10 + ' 0 0';\r\n            } else {\r\n                dasharrayValue = '1 ' + this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100;\r\n            }\r\n            path.setAttribute('stroke-dasharray',dasharrayValue);\r\n        }\r\n    }\r\n    if(forceRender || this.filterManager.effectElements[4].p.mdf){\r\n        this.pathMasker.setAttribute('stroke-width',this.filterManager.effectElements[4].p.v*2);\r\n    }\r\n    \r\n    if(forceRender || this.filterManager.effectElements[6].p.mdf){\r\n        this.pathMasker.setAttribute('opacity',this.filterManager.effectElements[6].p.v);\r\n    }\r\n    if(this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2){\r\n        if(forceRender || this.filterManager.effectElements[3].p.mdf){\r\n            var color = this.filterManager.effectElements[3].p.v;\r\n            this.pathMasker.setAttribute('stroke','rgb('+bm_floor(color[0]*255)+','+bm_floor(color[1]*255)+','+bm_floor(color[2]*255)+')');\r\n        }\r\n    }\r\n};\nfunction SVGTritoneFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = document.createElementNS(svgNS,'feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','linearRGB');\r\n    feColorMatrix.setAttribute('values','0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f1');\r\n    filter.appendChild(feColorMatrix);\r\n    var feComponentTransfer = document.createElementNS(svgNS,'feComponentTransfer');\r\n    feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n    filter.appendChild(feComponentTransfer);\r\n    this.matrixFilter = feComponentTransfer;\r\n    var feFuncR = document.createElementNS(svgNS,'feFuncR');\r\n    feFuncR.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncR);\r\n    this.feFuncR = feFuncR;\r\n    var feFuncG = document.createElementNS(svgNS,'feFuncG');\r\n    feFuncG.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncG);\r\n    this.feFuncG = feFuncG;\r\n    var feFuncB = document.createElementNS(svgNS,'feFuncB');\r\n    feFuncB.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncB);\r\n    this.feFuncB = feFuncB;\r\n}\r\n\r\nSVGTritoneFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager.mdf){\r\n        var color1 = this.filterManager.effectElements[0].p.v;\r\n        var color2 = this.filterManager.effectElements[1].p.v;\r\n        var color3 = this.filterManager.effectElements[2].p.v;\r\n        var tableR = color3[0] + ' ' + color2[0] + ' ' + color1[0]\r\n        var tableG = color3[1] + ' ' + color2[1] + ' ' + color1[1]\r\n        var tableB = color3[2] + ' ' + color2[2] + ' ' + color1[2]\r\n        this.feFuncR.setAttribute('tableValues', tableR);\r\n        this.feFuncG.setAttribute('tableValues', tableG);\r\n        this.feFuncB.setAttribute('tableValues', tableB);\r\n        //var opacity = this.filterManager.effectElements[2].p.v/100;\r\n        //this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');\r\n    }\r\n};\nfunction SVGProLevelsFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var effectElements = this.filterManager.effectElements;\r\n    var feComponentTransfer = document.createElementNS(svgNS,'feComponentTransfer');\r\n    var feFuncR, feFuncG, feFuncB;\r\n    \r\n    if(effectElements[9].p.k || effectElements[9].p.v !== 0 || effectElements[10].p.k || effectElements[10].p.v !== 1 || effectElements[11].p.k || effectElements[11].p.v !== 1 || effectElements[12].p.k || effectElements[12].p.v !== 0 || effectElements[13].p.k || effectElements[13].p.v !== 1){\r\n        this.feFuncR = this.createFeFunc('feFuncR', feComponentTransfer);\r\n    }\r\n    if(effectElements[16].p.k || effectElements[16].p.v !== 0 || effectElements[17].p.k || effectElements[17].p.v !== 1 || effectElements[18].p.k || effectElements[18].p.v !== 1 || effectElements[19].p.k || effectElements[19].p.v !== 0 || effectElements[20].p.k || effectElements[20].p.v !== 1){\r\n        this.feFuncG = this.createFeFunc('feFuncG', feComponentTransfer);\r\n    }\r\n    if(effectElements[23].p.k || effectElements[23].p.v !== 0 || effectElements[24].p.k || effectElements[24].p.v !== 1 || effectElements[25].p.k || effectElements[25].p.v !== 1 || effectElements[26].p.k || effectElements[26].p.v !== 0 || effectElements[27].p.k || effectElements[27].p.v !== 1){\r\n        this.feFuncB = this.createFeFunc('feFuncB', feComponentTransfer);\r\n    }\r\n    if(effectElements[30].p.k || effectElements[30].p.v !== 0 || effectElements[31].p.k || effectElements[31].p.v !== 1 || effectElements[32].p.k || effectElements[32].p.v !== 1 || effectElements[33].p.k || effectElements[33].p.v !== 0 || effectElements[34].p.k || effectElements[34].p.v !== 1){\r\n        this.feFuncA = this.createFeFunc('feFuncA', feComponentTransfer);\r\n    }\r\n    \r\n    if(this.feFuncR || this.feFuncG || this.feFuncB || this.feFuncA){\r\n        feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n        filter.appendChild(feComponentTransfer);\r\n        feComponentTransfer = document.createElementNS(svgNS,'feComponentTransfer');\r\n    }\r\n\r\n    if(effectElements[2].p.k || effectElements[2].p.v !== 0 || effectElements[3].p.k || effectElements[3].p.v !== 1 || effectElements[4].p.k || effectElements[4].p.v !== 1 || effectElements[5].p.k || effectElements[5].p.v !== 0 || effectElements[6].p.k || effectElements[6].p.v !== 1){\r\n\r\n        feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n        filter.appendChild(feComponentTransfer);\r\n        this.feFuncRComposed = this.createFeFunc('feFuncR', feComponentTransfer);\r\n        this.feFuncGComposed = this.createFeFunc('feFuncG', feComponentTransfer);\r\n        this.feFuncBComposed = this.createFeFunc('feFuncB', feComponentTransfer);\r\n    }\r\n}\r\n\r\nSVGProLevelsFilter.prototype.createFeFunc = function(type, feComponentTransfer) {\r\n    var feFunc = document.createElementNS(svgNS,type);\r\n    feFunc.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFunc);\r\n    return feFunc;\r\n};\r\n\r\nSVGProLevelsFilter.prototype.getTableValue = function(inputBlack, inputWhite, gamma, outputBlack, outputWhite) {\r\n    var cnt = 0;\r\n    var segments = 256;\r\n    var perc;\r\n    var min = Math.min(inputBlack, inputWhite);\r\n    var max = Math.max(inputBlack, inputWhite);\r\n    var table = Array.call(null,{length:segments});\r\n    var colorValue;\r\n    var pos = 0;\r\n    var outputDelta = outputWhite - outputBlack; \r\n    var inputDelta = inputWhite - inputBlack; \r\n    while(cnt <= 256) {\r\n        perc = cnt/256;\r\n        if(perc <= min){\r\n            colorValue = inputDelta < 0 ? outputWhite : outputBlack;\r\n        } else if(perc >= max){\r\n            colorValue = inputDelta < 0 ? outputBlack : outputWhite;\r\n        } else {\r\n            colorValue = (outputBlack + outputDelta * Math.pow((perc - inputBlack) / inputDelta, 1 / gamma));\r\n        }\r\n        table[pos++] = colorValue;\r\n        cnt += 256/(segments-1);\r\n    }\r\n    return table.join(' ');\r\n};\r\n\r\nSVGProLevelsFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager.mdf){\r\n        var val, cnt, perc, bezier;\r\n        var effectElements = this.filterManager.effectElements;\r\n        if(this.feFuncRComposed && (forceRender || effectElements[2].p.mdf || effectElements[3].p.mdf || effectElements[4].p.mdf || effectElements[5].p.mdf || effectElements[6].p.mdf)){\r\n            val = this.getTableValue(effectElements[2].p.v,effectElements[3].p.v,effectElements[4].p.v,effectElements[5].p.v,effectElements[6].p.v);\r\n            this.feFuncRComposed.setAttribute('tableValues',val);\r\n            this.feFuncGComposed.setAttribute('tableValues',val);\r\n            this.feFuncBComposed.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncR && (forceRender || effectElements[9].p.mdf || effectElements[10].p.mdf || effectElements[11].p.mdf || effectElements[12].p.mdf || effectElements[13].p.mdf)){\r\n            val = this.getTableValue(effectElements[9].p.v,effectElements[10].p.v,effectElements[11].p.v,effectElements[12].p.v,effectElements[13].p.v);\r\n            this.feFuncR.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncG && (forceRender || effectElements[16].p.mdf || effectElements[17].p.mdf || effectElements[18].p.mdf || effectElements[19].p.mdf || effectElements[20].p.mdf)){\r\n            val = this.getTableValue(effectElements[16].p.v,effectElements[17].p.v,effectElements[18].p.v,effectElements[19].p.v,effectElements[20].p.v);\r\n            this.feFuncG.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncB && (forceRender || effectElements[23].p.mdf || effectElements[24].p.mdf || effectElements[25].p.mdf || effectElements[26].p.mdf || effectElements[27].p.mdf)){\r\n            val = this.getTableValue(effectElements[23].p.v,effectElements[24].p.v,effectElements[25].p.v,effectElements[26].p.v,effectElements[27].p.v);\r\n            this.feFuncB.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncA && (forceRender || effectElements[30].p.mdf || effectElements[31].p.mdf || effectElements[32].p.mdf || effectElements[33].p.mdf || effectElements[34].p.mdf)){\r\n            val = this.getTableValue(effectElements[30].p.v,effectElements[31].p.v,effectElements[32].p.v,effectElements[33].p.v,effectElements[34].p.v);\r\n            this.feFuncA.setAttribute('tableValues',val);\r\n        }\r\n        \r\n    }\r\n};\nfunction SVGDropShadowEffect(filter, filterManager){\r\n    /*<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"3\"/> <!-- stdDeviation is how much to blur -->\r\n  <feOffset dx=\"2\" dy=\"2\" result=\"offsetblur\"/> <!-- how much to offset -->\r\n  <feMerge> \r\n    <feMergeNode/> <!-- this contains the offset blurred image -->\r\n    <feMergeNode in=\"SourceGraphic\"/> <!-- this contains the element that the filter is applied to -->\r\n  </feMerge>*/\r\n  /*<feFlood flood-color=\"#3D4574\" flood-opacity=\"0.5\" result=\"offsetColor\"/>*/\r\n    filter.setAttribute('x','-100%');\r\n    filter.setAttribute('y','-100%');\r\n    filter.setAttribute('width','400%');\r\n    filter.setAttribute('height','400%');\r\n    this.filterManager = filterManager;\r\n\r\n    var feGaussianBlur = document.createElementNS(svgNS,'feGaussianBlur');\r\n    feGaussianBlur.setAttribute('in','SourceAlpha');\r\n    feGaussianBlur.setAttribute('result','drop_shadow_1');\r\n    feGaussianBlur.setAttribute('stdDeviation','0');\r\n    this.feGaussianBlur = feGaussianBlur;\r\n    filter.appendChild(feGaussianBlur);\r\n\r\n    var feOffset = document.createElementNS(svgNS,'feOffset');\r\n    feOffset.setAttribute('dx','25');\r\n    feOffset.setAttribute('dy','0');\r\n    feOffset.setAttribute('in','drop_shadow_1');\r\n    feOffset.setAttribute('result','drop_shadow_2');\r\n    this.feOffset = feOffset;\r\n    filter.appendChild(feOffset);\r\n    var feFlood = document.createElementNS(svgNS,'feFlood');\r\n    feFlood.setAttribute('flood-color','#00ff00');\r\n    feFlood.setAttribute('flood-opacity','1');\r\n    feFlood.setAttribute('result','drop_shadow_3');\r\n    this.feFlood = feFlood;\r\n    filter.appendChild(feFlood);\r\n\r\n    var feComposite = document.createElementNS(svgNS,'feComposite');\r\n    feComposite.setAttribute('in','drop_shadow_3');\r\n    feComposite.setAttribute('in2','drop_shadow_2');\r\n    feComposite.setAttribute('operator','in');\r\n    feComposite.setAttribute('result','drop_shadow_4');\r\n    filter.appendChild(feComposite);\r\n\r\n\r\n    var feMerge = document.createElementNS(svgNS,'feMerge');\r\n    filter.appendChild(feMerge);\r\n    var feMergeNode;\r\n    feMergeNode = document.createElementNS(svgNS,'feMergeNode');\r\n    feMerge.appendChild(feMergeNode);\r\n    feMergeNode = document.createElementNS(svgNS,'feMergeNode');\r\n    feMergeNode.setAttribute('in','SourceGraphic');\r\n    this.feMergeNode = feMergeNode;\r\n    this.feMerge = feMerge;\r\n    this.originalNodeAdded = false;\r\n    feMerge.appendChild(feMergeNode);\r\n}\r\n\r\nSVGDropShadowEffect.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager.mdf){\r\n        if(forceRender || this.filterManager.effectElements[4].p.mdf){\r\n            this.feGaussianBlur.setAttribute('stdDeviation', this.filterManager.effectElements[4].p.v / 4);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[0].p.mdf){\r\n            var col = this.filterManager.effectElements[0].p.v;\r\n            this.feFlood.setAttribute('flood-color',rgbToHex(Math.round(col[0]*255),Math.round(col[1]*255),Math.round(col[2]*255)));\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[1].p.mdf){\r\n            this.feFlood.setAttribute('flood-opacity',this.filterManager.effectElements[1].p.v/255);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[2].p.mdf || this.filterManager.effectElements[3].p.mdf){\r\n            var distance = this.filterManager.effectElements[3].p.v\r\n            var angle = (this.filterManager.effectElements[2].p.v - 90) * degToRads\r\n            var x = distance * Math.cos(angle)\r\n            var y = distance * Math.sin(angle)\r\n            this.feOffset.setAttribute('dx', x);\r\n            this.feOffset.setAttribute('dy', y);\r\n        }\r\n        /*if(forceRender || this.filterManager.effectElements[5].p.mdf){\r\n            if(this.filterManager.effectElements[5].p.v === 1 && this.originalNodeAdded) {\r\n                this.feMerge.removeChild(this.feMergeNode);\r\n                this.originalNodeAdded = false;\r\n            } else if(this.filterManager.effectElements[5].p.v === 0 && !this.originalNodeAdded) {\r\n                this.feMerge.appendChild(this.feMergeNode);\r\n                this.originalNodeAdded = true;\r\n            }\r\n        }*/\r\n    }\r\n};\nfunction SVGMatte3Effect(filterElem, filterManager, elem){\r\n    this.initialized = false;\r\n    this.filterManager = filterManager;\r\n    this.filterElem = filterElem;\r\n    this.elem = elem;\r\n    elem.matteElement = document.createElementNS(svgNS,'g');\r\n    elem.matteElement.appendChild(elem.layerElement);\r\n    elem.matteElement.appendChild(elem.transformedElement);\r\n    elem.baseElement = elem.matteElement;\r\n}\r\n\r\nSVGMatte3Effect.prototype.setElementAsMask = function(elem, mask) {\r\n    var masker = document.createElementNS(svgNS,'mask');\r\n    masker.setAttribute('id',mask.layerId);\r\n    masker.setAttribute('mask-type','alpha');\r\n    masker.appendChild(mask.layerElement);\r\n    elem.setMatte(mask.layerId);\r\n    mask.data.hd = false;\r\n    var defs = elem.globalData.defs;\r\n    defs.appendChild(masker);\r\n}\r\n\r\nSVGMatte3Effect.prototype.initialize = function() {\r\n    var ind = this.filterManager.effectElements[0].p.v;\r\n    var i = 0, len = this.elem.comp.elements.length;\r\n    while(i < len) {\r\n    \tif(this.elem.comp.elements[i].data.ind === ind) {\r\n    \t\tthis.setElementAsMask(this.elem, this.elem.comp.elements[i]);\r\n    \t}\r\n    \ti += 1;\r\n    }\r\n    this.initialized = true;\r\n}\r\n\r\nSVGMatte3Effect.prototype.renderFrame = function() {\r\n\tif(!this.initialized) {\r\n\t\tthis.initialize();\r\n\t}\r\n}\nfunction SVGEffects(elem){\r\n    var i, len = elem.data.ef.length;\r\n    var filId = randomString(10);\r\n    var fil = filtersFactory.createFilter(filId);\r\n    var count = 0;\r\n    this.filters = [];\r\n    var filterManager;\r\n    for(i=0;i<len;i+=1){\r\n        if(elem.data.ef[i].ty === 20){\r\n            count += 1;\r\n            filterManager = new SVGTintFilter(fil, elem.effects.effectElements[i]);\r\n            this.filters.push(filterManager);\r\n        }else if(elem.data.ef[i].ty === 21){\r\n            count += 1;\r\n            filterManager = new SVGFillFilter(fil, elem.effects.effectElements[i]);\r\n            this.filters.push(filterManager);\r\n        }else if(elem.data.ef[i].ty === 22){\r\n            filterManager = new SVGStrokeEffect(elem, elem.effects.effectElements[i]);\r\n            this.filters.push(filterManager);\r\n        }else if(elem.data.ef[i].ty === 23){\r\n            count += 1;\r\n            filterManager = new SVGTritoneFilter(fil, elem.effects.effectElements[i]);\r\n            this.filters.push(filterManager);\r\n        }else if(elem.data.ef[i].ty === 24){\r\n            count += 1;\r\n            filterManager = new SVGProLevelsFilter(fil, elem.effects.effectElements[i]);\r\n            this.filters.push(filterManager);\r\n        }else if(elem.data.ef[i].ty === 25){\r\n            count += 1;\r\n            filterManager = new SVGDropShadowEffect(fil, elem.effects.effectElements[i]);\r\n            this.filters.push(filterManager);\r\n        }else if(elem.data.ef[i].ty === 28){\r\n            //count += 1;\r\n            filterManager = new SVGMatte3Effect(fil, elem.effects.effectElements[i], elem);\r\n            this.filters.push(filterManager);\r\n        }\r\n    }\r\n    if(count){\r\n        elem.globalData.defs.appendChild(fil);\r\n        elem.layerElement.setAttribute('filter','url(' + locationHref + '#'+filId+')');\r\n    }\r\n}\r\n\r\nSVGEffects.prototype.renderFrame = function(firstFrame){\r\n    var i, len = this.filters.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.filters[i].renderFrame(firstFrame);\r\n    }\r\n};\nfunction ICompElement(data,parentContainer,globalData,comp, placeholder){\r\n    this._parent.constructor.call(this,data,parentContainer,globalData,comp, placeholder);\r\n    this.layers = data.layers;\r\n    this.supports3d = true;\r\n    this.completeLayers = false;\r\n    this.pendingElements = [];\r\n    this.elements = this.layers ? Array.apply(null,{length:this.layers.length}) : [];\r\n    if(this.data.tm){\r\n        this.tm = PropertyFactory.getProp(this,this.data.tm,0,globalData.frameRate,this.dynamicProperties);\r\n    }\r\n    if(this.data.xt){\r\n        this.layerElement = document.createElementNS(svgNS,'g');\r\n        this.buildAllItems();\r\n    } else if(!globalData.progressiveLoad){\r\n        this.buildAllItems();\r\n    }\r\n}\r\ncreateElement(SVGBaseElement, ICompElement);\r\n\r\nICompElement.prototype.hide = function(){\r\n    if(!this.hidden){\r\n        this._parent.hide.call(this);\r\n        var i,len = this.elements.length;\r\n        for( i = 0; i < len; i+=1 ){\r\n            if(this.elements[i]){\r\n                this.elements[i].hide();\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.prepareFrame = function(num){\r\n    this._parent.prepareFrame.call(this,num);\r\n    if(this.isVisible===false && !this.data.xt){\r\n        return;\r\n    }\r\n\r\n    if(this.tm){\r\n        var timeRemapped = this.tm.v;\r\n        if(timeRemapped === this.data.op){\r\n            timeRemapped = this.data.op - 1;\r\n        }\r\n        this.renderedFrame = timeRemapped;\r\n    } else {\r\n        this.renderedFrame = num/this.data.sr;\r\n    }\r\n    var i,len = this.elements.length;\r\n    if(!this.completeLayers){\r\n        this.checkLayers(this.renderedFrame);\r\n    }\r\n    for( i = 0; i < len; i+=1 ){\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].prepareFrame(this.renderedFrame - this.layers[i].st);\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.renderFrame = function(parentMatrix){\r\n    var renderParent = this._parent.renderFrame.call(this,parentMatrix);\r\n    var i,len = this.layers.length;\r\n    if(renderParent===false){\r\n        this.hide();\r\n        return;\r\n    }\r\n\r\n    if(this.hidden) {\r\n        this.show();\r\n    }\r\n    for( i = 0; i < len; i+=1 ){\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].renderFrame();\r\n        }\r\n    }\r\n    if(this.firstFrame){\r\n        this.firstFrame = false;\r\n    }\r\n};\r\n\r\nICompElement.prototype.setElements = function(elems){\r\n    this.elements = elems;\r\n};\r\n\r\nICompElement.prototype.getElements = function(){\r\n    return this.elements;\r\n};\r\n\r\nICompElement.prototype.destroy = function(){\r\n    this._parent.destroy.call(this._parent);\r\n    var i,len = this.layers.length;\r\n    for( i = 0; i < len; i+=1 ){\r\n        if(this.elements[i]){\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.checkLayers = SVGRenderer.prototype.checkLayers;\r\nICompElement.prototype.buildItem = SVGRenderer.prototype.buildItem;\r\nICompElement.prototype.buildAllItems = SVGRenderer.prototype.buildAllItems;\r\nICompElement.prototype.buildElementParenting = SVGRenderer.prototype.buildElementParenting;\r\nICompElement.prototype.createItem = SVGRenderer.prototype.createItem;\r\nICompElement.prototype.createImage = SVGRenderer.prototype.createImage;\r\nICompElement.prototype.createComp = SVGRenderer.prototype.createComp;\r\nICompElement.prototype.createSolid = SVGRenderer.prototype.createSolid;\r\nICompElement.prototype.createShape = SVGRenderer.prototype.createShape;\r\nICompElement.prototype.createText = SVGRenderer.prototype.createText;\r\nICompElement.prototype.createBase = SVGRenderer.prototype.createBase;\r\nICompElement.prototype.appendElementInPos = SVGRenderer.prototype.appendElementInPos;\r\nICompElement.prototype.checkPendingElements = SVGRenderer.prototype.checkPendingElements;\r\nICompElement.prototype.addPendingElement = SVGRenderer.prototype.addPendingElement;\nfunction IImageElement(data,parentContainer,globalData,comp,placeholder){\r\n    this.assetData = globalData.getAssetData(data.refId);\r\n    this._parent.constructor.call(this,data,parentContainer,globalData,comp,placeholder);\r\n}\r\ncreateElement(SVGBaseElement, IImageElement);\r\n\r\nIImageElement.prototype.createElements = function(){\r\n\r\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\r\n\r\n    this._parent.createElements.call(this);\r\n\r\n    this.innerElem = document.createElementNS(svgNS,'image');\r\n    this.innerElem.setAttribute('width',this.assetData.w+\"px\");\r\n    this.innerElem.setAttribute('height',this.assetData.h+\"px\");\r\n    this.innerElem.setAttribute('preserveAspectRatio','xMidYMid slice');\r\n    this.innerElem.setAttributeNS('http://www.w3.org/1999/xlink','href',assetPath);\r\n    this.maskedElement = this.innerElem;\r\n    this.layerElement.appendChild(this.innerElem);\r\n    if(this.data.ln){\r\n        this.layerElement.setAttribute('id',this.data.ln);\r\n    }\r\n    if(this.data.cl){\r\n        this.layerElement.setAttribute('class',this.data.cl);\r\n    }\r\n\r\n};\r\n\r\nIImageElement.prototype.renderFrame = function(parentMatrix){\r\n    var renderParent = this._parent.renderFrame.call(this,parentMatrix);\r\n    if(renderParent===false){\r\n        this.hide();\r\n        return;\r\n    }\r\n    if(this.hidden){\r\n        this.show();\r\n    }\r\n    if(this.firstFrame){\r\n        this.firstFrame = false;\r\n    }\r\n};\r\n\r\nIImageElement.prototype.destroy = function(){\r\n    this._parent.destroy.call(this._parent);\r\n    this.innerElem =  null;\r\n};\nfunction ISolidElement(data,parentContainer,globalData,comp, placeholder){\r\n    this._parent.constructor.call(this,data,parentContainer,globalData,comp, placeholder);\r\n}\r\ncreateElement(SVGBaseElement, ISolidElement);\r\n\r\nISolidElement.prototype.createElements = function(){\r\n    this._parent.createElements.call(this);\r\n\r\n    var rect = document.createElementNS(svgNS,'rect');\r\n    ////rect.style.width = this.data.sw;\r\n    ////rect.style.height = this.data.sh;\r\n    ////rect.style.fill = this.data.sc;\r\n    rect.setAttribute('width',this.data.sw);\r\n    rect.setAttribute('height',this.data.sh);\r\n    rect.setAttribute('fill',this.data.sc);\r\n    this.layerElement.appendChild(rect);\r\n    this.innerElem = rect;\r\n    if(this.data.ln){\r\n        this.layerElement.setAttribute('id',this.data.ln);\r\n    }\r\n    if(this.data.cl){\r\n        this.layerElement.setAttribute('class',this.data.cl);\r\n    }\r\n};\r\n\r\nISolidElement.prototype.renderFrame = IImageElement.prototype.renderFrame;\r\nISolidElement.prototype.destroy = IImageElement.prototype.destroy;\r\n\nvar animationManager = (function(){\r\n    var moduleOb = {};\r\n    var registeredAnimations = [];\r\n    var initTime = 0;\r\n    var len = 0;\r\n    var idled = true;\r\n    var playingAnimationsNum = 0;\r\n\r\n    function removeElement(ev){\r\n        var i = 0;\r\n        var animItem = ev.target;\r\n        while(i<len) {\r\n            if (registeredAnimations[i].animation === animItem) {\r\n                registeredAnimations.splice(i, 1);\r\n                i -= 1;\r\n                len -= 1;\r\n                if(!animItem.isPaused){\r\n                    subtractPlayingCount();\r\n                }\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    function registerAnimation(element, animationData){\r\n        if(!element){\r\n            return null;\r\n        }\r\n        var i=0;\r\n        while(i<len){\r\n            if(registeredAnimations[i].elem == element && registeredAnimations[i].elem !== null ){\r\n                return registeredAnimations[i].animation;\r\n            }\r\n            i+=1;\r\n        }\r\n        var animItem = new AnimationItem();\r\n        setupAnimation(animItem, element);\r\n        animItem.setData(element, animationData);\r\n        return animItem;\r\n    }\r\n\r\n    function addPlayingCount(){\r\n        playingAnimationsNum += 1;\r\n        activate();\r\n    }\r\n\r\n    function subtractPlayingCount(){\r\n        playingAnimationsNum -= 1;\r\n        if(playingAnimationsNum === 0){\r\n            idled = true;\r\n        }\r\n    }\r\n\r\n    function setupAnimation(animItem, element){\r\n        animItem.addEventListener('destroy',removeElement);\r\n        animItem.addEventListener('_active',addPlayingCount);\r\n        animItem.addEventListener('_idle',subtractPlayingCount);\r\n        registeredAnimations.push({elem: element,animation:animItem});\r\n        len += 1;\r\n    }\r\n\r\n    function loadAnimation(params){\r\n        var animItem = new AnimationItem();\r\n        setupAnimation(animItem, null);\r\n        animItem.setParams(params);\r\n        return animItem;\r\n    }\r\n\r\n\r\n    function setSpeed(val,animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.setSpeed(val, animation);\r\n        }\r\n    }\r\n\r\n    function setDirection(val, animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.setDirection(val, animation);\r\n        }\r\n    }\r\n\r\n    function play(animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.play(animation);\r\n        }\r\n    }\r\n\r\n    function moveFrame (value, animation) {\r\n        initTime = Date.now();\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.moveFrame(value,animation);\r\n        }\r\n    }\r\n\r\n    function resume(nowTime) {\r\n\r\n        var elapsedTime = nowTime - initTime;\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.advanceTime(elapsedTime);\r\n        }\r\n        initTime = nowTime;\r\n        if(!idled) {\r\n            window.requestAnimationFrame(resume);\r\n        }\r\n    }\r\n\r\n    function first(nowTime){\r\n        initTime = nowTime;\r\n        window.requestAnimationFrame(resume);\r\n    }\r\n\r\n    function pause(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.pause(animation);\r\n        }\r\n    }\r\n\r\n    function goToAndStop(value,isFrame,animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.goToAndStop(value,isFrame,animation);\r\n        }\r\n    }\r\n\r\n    function stop(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.stop(animation);\r\n        }\r\n    }\r\n\r\n    function togglePause(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.togglePause(animation);\r\n        }\r\n    }\r\n\r\n    function destroy(animation) {\r\n        var i;\r\n        for(i=(len-1);i>=0;i-=1){\r\n            registeredAnimations[i].animation.destroy(animation);\r\n        }\r\n    }\r\n\r\n    function searchAnimations(animationData, standalone, renderer){\r\n        var animElements = document.getElementsByClassName('bodymovin');\r\n        var i, len = animElements.length;\r\n        for(i=0;i<len;i+=1){\r\n            if(renderer){\r\n                animElements[i].setAttribute('data-bm-type',renderer);\r\n            }\r\n            registerAnimation(animElements[i], animationData);\r\n        }\r\n        if(standalone && len === 0){\r\n            if(!renderer){\r\n                renderer = 'svg';\r\n            }\r\n            var body = document.getElementsByTagName('body')[0];\r\n            body.innerHTML = '';\r\n            var div = document.createElement('div');\r\n            div.style.width = '100%';\r\n            div.style.height = '100%';\r\n            div.setAttribute('data-bm-type',renderer);\r\n            body.appendChild(div);\r\n            registerAnimation(div, animationData);\r\n        }\r\n    }\r\n\r\n    function resize(){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.resize();\r\n        }\r\n    }\r\n\r\n    function start(){\r\n        window.requestAnimationFrame(first);\r\n    }\r\n\r\n    function activate(){\r\n        if(idled){\r\n            idled = false;\r\n            window.requestAnimationFrame(first);\r\n        }\r\n    }\r\n\r\n    //start();\r\n\r\n    setTimeout(start,0);\r\n\r\n    moduleOb.registerAnimation = registerAnimation;\r\n    moduleOb.loadAnimation = loadAnimation;\r\n    moduleOb.setSpeed = setSpeed;\r\n    moduleOb.setDirection = setDirection;\r\n    moduleOb.play = play;\r\n    moduleOb.moveFrame = moveFrame;\r\n    moduleOb.pause = pause;\r\n    moduleOb.stop = stop;\r\n    moduleOb.togglePause = togglePause;\r\n    moduleOb.searchAnimations = searchAnimations;\r\n    moduleOb.resize = resize;\r\n    moduleOb.start = start;\r\n    moduleOb.goToAndStop = goToAndStop;\r\n    moduleOb.destroy = destroy;\r\n    return moduleOb;\r\n}());\r\n\nvar AnimationItem = function () {\r\n    this._cbs = [];\r\n    this.name = '';\r\n    this.path = '';\r\n    this.isLoaded = false;\r\n    this.currentFrame = 0;\r\n    this.currentRawFrame = 0;\r\n    this.totalFrames = 0;\r\n    this.frameRate = 0;\r\n    this.frameMult = 0;\r\n    this.playSpeed = 1;\r\n    this.playDirection = 1;\r\n    this.pendingElements = 0;\r\n    this.playCount = 0;\r\n    this.prerenderFramesFlag = true;\r\n    this.animationData = {};\r\n    this.layers = [];\r\n    this.assets = [];\r\n    this.isPaused = true;\r\n    this.autoplay = false;\r\n    this.loop = true;\r\n    this.renderer = null;\r\n    this.animationID = randomString(10);\r\n    this.scaleMode = 'fit';\r\n    this.assetsPath = '';\r\n    this.timeCompleted = 0;\r\n    this.segmentPos = 0;\r\n    this.subframeEnabled = subframeEnabled;\r\n    this.segments = [];\r\n    this.pendingSegment = false;\r\n    this._idle = true;\r\n    this.projectInterface = ProjectInterface();\r\n};\r\n\r\nAnimationItem.prototype.setParams = function(params) {\r\n    var self = this;\r\n    if(params.context){\r\n        this.context = params.context;\r\n    }\r\n    if(params.wrapper || params.container){\r\n        this.wrapper = params.wrapper || params.container;\r\n    }\r\n    var animType = params.animType ? params.animType : params.renderer ? params.renderer : 'svg';\r\n    switch(animType){\r\n        case 'canvas':\r\n            this.renderer = new CanvasRenderer(this, params.rendererSettings);\r\n            break;\r\n        case 'svg':\r\n            this.renderer = new SVGRenderer(this, params.rendererSettings);\r\n            break;\r\n        case 'hybrid':\r\n        case 'html':\r\n        default:\r\n            this.renderer = new HybridRenderer(this, params.rendererSettings);\r\n            break;\r\n    }\r\n    this.renderer.setProjectInterface(this.projectInterface);\r\n    this.animType = animType;\r\n\r\n    if(params.loop === '' || params.loop === null){\r\n    }else if(params.loop === false){\r\n        this.loop = false;\r\n    }else if(params.loop === true){\r\n        this.loop = true;\r\n    }else{\r\n        this.loop = parseInt(params.loop);\r\n    }\r\n    this.autoplay = 'autoplay' in params ? params.autoplay : true;\r\n    this.name = params.name ? params.name :  '';\r\n    this.prerenderFramesFlag = 'prerender' in params ? params.prerender : true;\r\n    this.autoloadSegments = params.hasOwnProperty('autoloadSegments') ? params.autoloadSegments :  true;\r\n    if(params.animationData){\r\n        self.configAnimation(params.animationData);\r\n    }else if(params.path){\r\n        if(params.path.substr(-4) != 'json'){\r\n            if (params.path.substr(-1, 1) != '/') {\r\n                params.path += '/';\r\n            }\r\n            params.path += 'data.json';\r\n        }\r\n\r\n        var xhr = new XMLHttpRequest();\r\n        if(params.path.lastIndexOf('\\\\') != -1){\r\n            this.path = params.path.substr(0,params.path.lastIndexOf('\\\\')+1);\r\n        }else{\r\n            this.path = params.path.substr(0,params.path.lastIndexOf('/')+1);\r\n        }\r\n        this.assetsPath = params.assetsPath;\r\n        this.fileName = params.path.substr(params.path.lastIndexOf('/')+1);\r\n        this.fileName = this.fileName.substr(0,this.fileName.lastIndexOf('.json'));\r\n        xhr.open('GET', params.path, true);\r\n        xhr.send();\r\n        xhr.onreadystatechange = function () {\r\n            if (xhr.readyState == 4) {\r\n                if(xhr.status == 200){\r\n                    self.configAnimation(JSON.parse(xhr.responseText));\r\n                }else{\r\n                    try{\r\n                        var response = JSON.parse(xhr.responseText);\r\n                        self.configAnimation(response);\r\n                    }catch(err){\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.setData = function (wrapper, animationData) {\r\n    var params = {\r\n        wrapper: wrapper,\r\n        animationData: animationData ? (typeof animationData  === \"object\") ? animationData : JSON.parse(animationData) : null\r\n    };\r\n    var wrapperAttributes = wrapper.attributes;\r\n\r\n    params.path = wrapperAttributes.getNamedItem('data-animation-path') ? wrapperAttributes.getNamedItem('data-animation-path').value : wrapperAttributes.getNamedItem('data-bm-path') ? wrapperAttributes.getNamedItem('data-bm-path').value :  wrapperAttributes.getNamedItem('bm-path') ? wrapperAttributes.getNamedItem('bm-path').value : '';\r\n    params.animType = wrapperAttributes.getNamedItem('data-anim-type') ? wrapperAttributes.getNamedItem('data-anim-type').value : wrapperAttributes.getNamedItem('data-bm-type') ? wrapperAttributes.getNamedItem('data-bm-type').value : wrapperAttributes.getNamedItem('bm-type') ? wrapperAttributes.getNamedItem('bm-type').value :  wrapperAttributes.getNamedItem('data-bm-renderer') ? wrapperAttributes.getNamedItem('data-bm-renderer').value : wrapperAttributes.getNamedItem('bm-renderer') ? wrapperAttributes.getNamedItem('bm-renderer').value : 'canvas';\r\n\r\n    var loop = wrapperAttributes.getNamedItem('data-anim-loop') ? wrapperAttributes.getNamedItem('data-anim-loop').value :  wrapperAttributes.getNamedItem('data-bm-loop') ? wrapperAttributes.getNamedItem('data-bm-loop').value :  wrapperAttributes.getNamedItem('bm-loop') ? wrapperAttributes.getNamedItem('bm-loop').value : '';\r\n    if(loop === ''){\r\n    }else if(loop === 'false'){\r\n        params.loop = false;\r\n    }else if(loop === 'true'){\r\n        params.loop = true;\r\n    }else{\r\n        params.loop = parseInt(loop);\r\n    }\r\n    var autoplay = wrapperAttributes.getNamedItem('data-anim-autoplay') ? wrapperAttributes.getNamedItem('data-anim-autoplay').value :  wrapperAttributes.getNamedItem('data-bm-autoplay') ? wrapperAttributes.getNamedItem('data-bm-autoplay').value :  wrapperAttributes.getNamedItem('bm-autoplay') ? wrapperAttributes.getNamedItem('bm-autoplay').value : true;\r\n    params.autoplay = autoplay !== \"false\";\r\n\r\n    params.name = wrapperAttributes.getNamedItem('data-name') ? wrapperAttributes.getNamedItem('data-name').value :  wrapperAttributes.getNamedItem('data-bm-name') ? wrapperAttributes.getNamedItem('data-bm-name').value : wrapperAttributes.getNamedItem('bm-name') ? wrapperAttributes.getNamedItem('bm-name').value :  '';\r\n    var prerender = wrapperAttributes.getNamedItem('data-anim-prerender') ? wrapperAttributes.getNamedItem('data-anim-prerender').value :  wrapperAttributes.getNamedItem('data-bm-prerender') ? wrapperAttributes.getNamedItem('data-bm-prerender').value :  wrapperAttributes.getNamedItem('bm-prerender') ? wrapperAttributes.getNamedItem('bm-prerender').value : '';\r\n\r\n    if(prerender === 'false'){\r\n        params.prerender = false;\r\n    }\r\n    this.setParams(params);\r\n};\r\n\r\nAnimationItem.prototype.includeLayers = function(data) {\r\n    if(data.op > this.animationData.op){\r\n        this.animationData.op = data.op;\r\n        this.totalFrames = Math.floor(data.op - this.animationData.ip);\r\n        this.animationData.tf = this.totalFrames;\r\n    }\r\n    var layers = this.animationData.layers;\r\n    var i, len = layers.length;\r\n    var newLayers = data.layers;\r\n    var j, jLen = newLayers.length;\r\n    for(j=0;j<jLen;j+=1){\r\n        i = 0;\r\n        while(i<len){\r\n            if(layers[i].id == newLayers[j].id){\r\n                layers[i] = newLayers[j];\r\n                break;\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n    if(data.chars || data.fonts){\r\n        this.renderer.globalData.fontManager.addChars(data.chars);\r\n        this.renderer.globalData.fontManager.addFonts(data.fonts, this.renderer.globalData.defs);\r\n    }\r\n    if(data.assets){\r\n        len = data.assets.length;\r\n        for(i = 0; i < len; i += 1){\r\n            this.animationData.assets.push(data.assets[i]);\r\n        }\r\n    }\r\n    //this.totalFrames = 50;\r\n    //this.animationData.tf = 50;\r\n    this.animationData.__complete = false;\r\n    dataManager.completeData(this.animationData,this.renderer.globalData.fontManager);\r\n    this.renderer.includeLayers(data.layers);\r\n    if(expressionsPlugin){\r\n        expressionsPlugin.initExpressions(this);\r\n    }\r\n    this.renderer.renderFrame(null);\r\n    this.loadNextSegment();\r\n};\r\n\r\nAnimationItem.prototype.loadNextSegment = function() {\r\n    var segments = this.animationData.segments;\r\n    if(!segments || segments.length === 0 || !this.autoloadSegments){\r\n        this.trigger('data_ready');\r\n        this.timeCompleted = this.animationData.tf;\r\n        return;\r\n    }\r\n    var segment = segments.shift();\r\n    this.timeCompleted = segment.time * this.frameRate;\r\n    var xhr = new XMLHttpRequest();\r\n    var self = this;\r\n    var segmentPath = this.path+this.fileName+'_' + this.segmentPos + '.json';\r\n    this.segmentPos += 1;\r\n    xhr.open('GET', segmentPath, true);\r\n    xhr.send();\r\n    xhr.onreadystatechange = function () {\r\n        if (xhr.readyState == 4) {\r\n            if(xhr.status == 200){\r\n                self.includeLayers(JSON.parse(xhr.responseText));\r\n            }else{\r\n                try{\r\n                    var response = JSON.parse(xhr.responseText);\r\n                    self.includeLayers(response);\r\n                }catch(err){\r\n                }\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\nAnimationItem.prototype.loadSegments = function() {\r\n    var segments = this.animationData.segments;\r\n    if(!segments) {\r\n        this.timeCompleted = this.animationData.tf;\r\n    }\r\n    this.loadNextSegment();\r\n};\r\n\r\nAnimationItem.prototype.configAnimation = function (animData) {\r\n    var _this = this;\r\n    if(this.renderer && this.renderer.destroyed){\r\n        return;\r\n    }\r\n    //console.log(JSON.parse(JSON.stringify(animData)));\r\n    //animData.w = Math.round(animData.w/blitter);\r\n    //animData.h = Math.round(animData.h/blitter);\r\n    this.animationData = animData;\r\n    this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip);\r\n    this.animationData.tf = this.totalFrames;\r\n    this.renderer.configAnimation(animData);\r\n    if(!animData.assets){\r\n        animData.assets = [];\r\n    }\r\n    if(animData.comps) {\r\n        animData.assets = animData.assets.concat(animData.comps);\r\n        animData.comps = null;\r\n    }\r\n    this.renderer.searchExtraCompositions(animData.assets);\r\n\r\n    this.layers = this.animationData.layers;\r\n    this.assets = this.animationData.assets;\r\n    this.frameRate = this.animationData.fr;\r\n    this.firstFrame = Math.round(this.animationData.ip);\r\n    this.frameMult = this.animationData.fr / 1000;\r\n    this.trigger('config_ready');\r\n    this.imagePreloader = new ImagePreloader();\r\n    this.imagePreloader.setAssetsPath(this.assetsPath);\r\n    this.imagePreloader.setPath(this.path);\r\n    this.imagePreloader.loadAssets(animData.assets, function(err) {\r\n        if(!err) {\r\n            _this.trigger('loaded_images');\r\n        }\r\n    });\r\n    this.loadSegments();\r\n    this.updaFrameModifier();\r\n    if(this.renderer.globalData.fontManager){\r\n        this.waitForFontsLoaded();\r\n    }else{\r\n        dataManager.completeData(this.animationData,this.renderer.globalData.fontManager);\r\n        this.checkLoaded();\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.waitForFontsLoaded = (function(){\r\n    function checkFontsLoaded(){\r\n        if(this.renderer.globalData.fontManager.loaded){\r\n            dataManager.completeData(this.animationData,this.renderer.globalData.fontManager);\r\n            //this.renderer.buildItems(this.animationData.layers);\r\n            this.checkLoaded();\r\n        }else{\r\n            setTimeout(checkFontsLoaded.bind(this),20);\r\n        }\r\n    }\r\n\r\n    return function(){\r\n        checkFontsLoaded.bind(this)();\r\n    }\r\n}());\r\n\r\nAnimationItem.prototype.addPendingElement = function () {\r\n    this.pendingElements += 1;\r\n}\r\n\r\nAnimationItem.prototype.elementLoaded = function () {\r\n    this.pendingElements--;\r\n    this.checkLoaded();\r\n};\r\n\r\nAnimationItem.prototype.checkLoaded = function () {\r\n    if (this.pendingElements === 0) {\r\n        if(expressionsPlugin){\r\n            expressionsPlugin.initExpressions(this);\r\n        }\r\n        this.renderer.initItems();\r\n        setTimeout(function(){\r\n            this.trigger('DOMLoaded');\r\n        }.bind(this),0);\r\n        this.isLoaded = true;\r\n        this.gotoFrame();\r\n        if(this.autoplay){\r\n            this.play();\r\n        }\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.resize = function () {\r\n    this.renderer.updateContainerSize();\r\n};\r\n\r\nAnimationItem.prototype.setSubframe = function(flag){\r\n    this.subframeEnabled = flag ? true : false;\r\n}\r\n\r\nAnimationItem.prototype.gotoFrame = function () {\r\n    if(this.subframeEnabled){\r\n        this.currentFrame = this.currentRawFrame;\r\n    }else{\r\n        this.currentFrame = Math.floor(this.currentRawFrame);\r\n    }\r\n\r\n    if(this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted){\r\n        this.currentFrame = this.timeCompleted;\r\n    }\r\n    this.trigger('enterFrame');\r\n    this.renderFrame();\r\n};\r\n\r\nAnimationItem.prototype.renderFrame = function () {\r\n    if(this.isLoaded === false){\r\n        return;\r\n    }\r\n    //console.log('this.currentFrame:',this.currentFrame + this.firstFrame);\r\n    this.renderer.renderFrame(this.currentFrame + this.firstFrame);\r\n};\r\n\r\nAnimationItem.prototype.play = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === true){\r\n        this.isPaused = false;\r\n        if(this._idle){\r\n            this._idle = false;\r\n            this.trigger('_active');\r\n        }\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.pause = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === false){\r\n        this.isPaused = true;\r\n        if(!this.pendingSegment){\r\n            this._idle = true;\r\n            this.trigger('_idle');\r\n        }\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.togglePause = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === true){\r\n        this.play();\r\n    }else{\r\n        this.pause();\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.stop = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    this.pause();\r\n    this.currentFrame = this.currentRawFrame = 0;\r\n    this.playCount = 0;\r\n    this.gotoFrame();\r\n};\r\n\r\nAnimationItem.prototype.goToAndStop = function (value, isFrame, name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(isFrame){\r\n        this.setCurrentRawFrameValue(value);\r\n    }else{\r\n        this.setCurrentRawFrameValue(value * this.frameModifier);\r\n    }\r\n    this.pause();\r\n};\r\n\r\nAnimationItem.prototype.goToAndPlay = function (value, isFrame, name) {\r\n    this.goToAndStop(value, isFrame, name);\r\n    this.play();\r\n};\r\n\r\nAnimationItem.prototype.advanceTime = function (value) {\r\n    if(this.pendingSegment){\r\n        this.pendingSegment = false;\r\n        this.adjustSegment(this.segments.shift());\r\n        if(this.isPaused){\r\n            this.play();\r\n        }\r\n        return;\r\n    }\r\n    if (this.isPaused === true || this.isLoaded === false) {\r\n        return;\r\n    }\r\n    this.setCurrentRawFrameValue(this.currentRawFrame + value * this.frameModifier);\r\n};\r\n\r\nAnimationItem.prototype.updateAnimation = function (perc) {\r\n    this.setCurrentRawFrameValue(this.totalFrames * perc);\r\n};\r\n\r\nAnimationItem.prototype.moveFrame = function (value, name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    this.setCurrentRawFrameValue(this.currentRawFrame+value);\r\n};\r\n\r\nAnimationItem.prototype.adjustSegment = function(arr){\r\n    this.playCount = 0;\r\n    if(arr[1] < arr[0]){\r\n        if(this.frameModifier > 0){\r\n            if(this.playSpeed < 0){\r\n                this.setSpeed(-this.playSpeed);\r\n            } else {\r\n                this.setDirection(-1);\r\n            }\r\n        }\r\n        this.totalFrames = arr[0] - arr[1];\r\n        this.firstFrame = arr[1];\r\n        this.setCurrentRawFrameValue(this.totalFrames - 0.01);\r\n    } else if(arr[1] > arr[0]){\r\n        if(this.frameModifier < 0){\r\n            if(this.playSpeed < 0){\r\n                this.setSpeed(-this.playSpeed);\r\n            } else {\r\n                this.setDirection(1);\r\n            }\r\n        }\r\n        this.totalFrames = arr[1] - arr[0];\r\n        this.firstFrame = arr[0];\r\n        this.setCurrentRawFrameValue(0);\r\n    }\r\n    this.trigger('segmentStart');\r\n};\r\nAnimationItem.prototype.setSegment = function (init,end) {\r\n    var pendingFrame = -1;\r\n    if(this.isPaused) {\r\n        if (this.currentRawFrame + this.firstFrame < init) {\r\n            pendingFrame = init;\r\n        } else if (this.currentRawFrame + this.firstFrame > end) {\r\n            pendingFrame = end - init - 0.01;\r\n        }\r\n    }\r\n\r\n    this.firstFrame = init;\r\n    this.totalFrames = end - init;\r\n    if(pendingFrame !== -1) {\r\n        this.goToAndStop(pendingFrame,true);\r\n    }\r\n}\r\n\r\nAnimationItem.prototype.playSegments = function (arr,forceFlag) {\r\n    if(typeof arr[0] === 'object'){\r\n        var i, len = arr.length;\r\n        for(i=0;i<len;i+=1){\r\n            this.segments.push(arr[i]);\r\n        }\r\n    }else{\r\n        this.segments.push(arr);\r\n    }\r\n    if(forceFlag){\r\n        this.adjustSegment(this.segments.shift());\r\n    }\r\n    if(this.isPaused){\r\n        this.play();\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.resetSegments = function (forceFlag) {\r\n    this.segments.length = 0;\r\n    this.segments.push([this.animationData.ip*this.frameRate,Math.floor(this.animationData.op - this.animationData.ip+this.animationData.ip*this.frameRate)]);\r\n    if(forceFlag){\r\n        this.adjustSegment(this.segments.shift());\r\n    }\r\n};\r\nAnimationItem.prototype.checkSegments = function(){\r\n    if(this.segments.length){\r\n        this.pendingSegment = true;\r\n    }\r\n}\r\n\r\nAnimationItem.prototype.remove = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    this.renderer.destroy();\r\n};\r\n\r\nAnimationItem.prototype.destroy = function (name) {\r\n    if((name && this.name != name) || (this.renderer && this.renderer.destroyed)){\r\n        return;\r\n    }\r\n    this.renderer.destroy();\r\n    this.trigger('destroy');\r\n    this._cbs = null;\r\n    this.onEnterFrame = this.onLoopComplete = this.onComplete = this.onSegmentStart = this.onDestroy = null;\r\n};\r\n\r\nAnimationItem.prototype.setCurrentRawFrameValue = function(value){\r\n    this.currentRawFrame = value;\r\n    //console.log(this.totalFrames);\r\n    if (this.currentRawFrame >= this.totalFrames) {\r\n        this.checkSegments();\r\n        if(this.loop === false){\r\n            this.currentRawFrame = this.totalFrames - 0.01;\r\n            this.gotoFrame();\r\n            this.pause();\r\n            this.trigger('complete');\r\n            return;\r\n        }else{\r\n            this.trigger('loopComplete');\r\n            this.playCount += 1;\r\n            if((this.loop !== true && this.playCount == this.loop) || this.pendingSegment){\r\n                this.currentRawFrame = this.totalFrames - 0.01;\r\n                this.gotoFrame();\r\n                this.pause();\r\n                this.trigger('complete');\r\n                return;\r\n            } else {\r\n                this.currentRawFrame = this.currentRawFrame % this.totalFrames;\r\n            }\r\n        }\r\n    } else if (this.currentRawFrame < 0) {\r\n        this.checkSegments();\r\n        this.playCount -= 1;\r\n        if(this.playCount < 0){\r\n            this.playCount = 0;\r\n        }\r\n        if(this.loop === false  || this.pendingSegment){\r\n            this.currentRawFrame = 0;\r\n            this.gotoFrame();\r\n            this.pause();\r\n            this.trigger('complete');\r\n            return;\r\n        }else{\r\n            this.trigger('loopComplete');\r\n            this.currentRawFrame = (this.totalFrames + this.currentRawFrame) % this.totalFrames;\r\n            this.gotoFrame();\r\n            return;\r\n        }\r\n    }\r\n\r\n    this.gotoFrame();\r\n};\r\n\r\nAnimationItem.prototype.setSpeed = function (val) {\r\n    this.playSpeed = val;\r\n    this.updaFrameModifier();\r\n};\r\n\r\nAnimationItem.prototype.setDirection = function (val) {\r\n    this.playDirection = val < 0 ? -1 : 1;\r\n    this.updaFrameModifier();\r\n};\r\n\r\nAnimationItem.prototype.updaFrameModifier = function () {\r\n    this.frameModifier = this.frameMult * this.playSpeed * this.playDirection;\r\n};\r\n\r\nAnimationItem.prototype.getPath = function () {\r\n    return this.path;\r\n};\r\n\r\nAnimationItem.prototype.getAssetsPath = function (assetData) {\r\n    var path = '';\r\n    if(this.assetsPath){\r\n        var imagePath = assetData.p;\r\n        if(imagePath.indexOf('images/') !== -1){\r\n            imagePath = imagePath.split('/')[1];\r\n        }\r\n        path = this.assetsPath + imagePath;\r\n    } else {\r\n        path = this.path;\r\n        path += assetData.u ? assetData.u : '';\r\n        path += assetData.p;\r\n    }\r\n    return path;\r\n};\r\n\r\nAnimationItem.prototype.getAssetData = function (id) {\r\n    var i = 0, len = this.assets.length;\r\n    while (i < len) {\r\n        if(id == this.assets[i].id){\r\n            return this.assets[i];\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.hide = function () {\r\n    this.renderer.hide();\r\n};\r\n\r\nAnimationItem.prototype.show = function () {\r\n    this.renderer.show();\r\n};\r\n\r\nAnimationItem.prototype.getAssets = function () {\r\n    return this.assets;\r\n};\r\n\r\nAnimationItem.prototype.trigger = function(name){\r\n    if(this._cbs && this._cbs[name]){\r\n        switch(name){\r\n            case 'enterFrame':\r\n                this.triggerEvent(name,new BMEnterFrameEvent(name,this.currentFrame,this.totalFrames,this.frameMult));\r\n                break;\r\n            case 'loopComplete':\r\n                this.triggerEvent(name,new BMCompleteLoopEvent(name,this.loop,this.playCount,this.frameMult));\r\n                break;\r\n            case 'complete':\r\n                this.triggerEvent(name,new BMCompleteEvent(name,this.frameMult));\r\n                break;\r\n            case 'segmentStart':\r\n                this.triggerEvent(name,new BMSegmentStartEvent(name,this.firstFrame,this.totalFrames));\r\n                break;\r\n            case 'destroy':\r\n                this.triggerEvent(name,new BMDestroyEvent(name,this));\r\n                break;\r\n            default:\r\n                this.triggerEvent(name);\r\n        }\r\n    }\r\n    if(name === 'enterFrame' && this.onEnterFrame){\r\n        this.onEnterFrame.call(this,new BMEnterFrameEvent(name,this.currentFrame,this.totalFrames,this.frameMult));\r\n    }\r\n    if(name === 'loopComplete' && this.onLoopComplete){\r\n        this.onLoopComplete.call(this,new BMCompleteLoopEvent(name,this.loop,this.playCount,this.frameMult));\r\n    }\r\n    if(name === 'complete' && this.onComplete){\r\n        this.onComplete.call(this,new BMCompleteEvent(name,this.frameMult));\r\n    }\r\n    if(name === 'segmentStart' && this.onSegmentStart){\r\n        this.onSegmentStart.call(this,new BMSegmentStartEvent(name,this.firstFrame,this.totalFrames));\r\n    }\r\n    if(name === 'destroy' && this.onDestroy){\r\n        this.onDestroy.call(this,new BMDestroyEvent(name,this));\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.addEventListener = _addEventListener;\r\nAnimationItem.prototype.removeEventListener = _removeEventListener;\r\nAnimationItem.prototype.triggerEvent = _triggerEvent;\r\n\r\n    var bodymovinjs = {};\r\n\r\n    function setLocationHref (href) {\r\n        locationHref = href;\r\n    }\r\n    function play(animation){\r\n        animationManager.play(animation);\r\n    }\r\n\r\n    function pause(animation) {\r\n        animationManager.pause(animation);\r\n    }\r\n\r\n    function togglePause(animation) {\r\n        animationManager.togglePause(animation);\r\n    }\r\n\r\n    function setSpeed(value, animation) {\r\n        animationManager.setSpeed(value, animation);\r\n    }\r\n\r\n    function setDirection(value, animation) {\r\n        animationManager.setDirection(value, animation);\r\n    }\r\n\r\n    function stop(animation) {\r\n        animationManager.stop(animation);\r\n    }\r\n\r\n    function moveFrame(value) {\r\n        animationManager.moveFrame(value);\r\n    }\r\n\r\n    function searchAnimations() {\r\n        if (standalone === true) {\r\n            animationManager.searchAnimations(animationData, standalone, renderer);\r\n        } else {\r\n            animationManager.searchAnimations();\r\n        }\r\n    }\r\n\r\n    function registerAnimation(elem) {\r\n        return animationManager.registerAnimation(elem);\r\n    }\r\n\r\n    function resize() {\r\n        animationManager.resize();\r\n    }\r\n\r\n    function start() {\r\n        animationManager.start();\r\n    }\r\n\r\n    function goToAndStop(val, isFrame, animation) {\r\n        animationManager.goToAndStop(val, isFrame, animation);\r\n    }\r\n\r\n    function setSubframeRendering(flag) {\r\n        subframeEnabled = flag;\r\n    }\r\n\r\n    function loadAnimation(params) {\r\n        if (standalone === true) {\r\n            params.animationData = JSON.parse(animationData);\r\n        }\r\n        return animationManager.loadAnimation(params);\r\n    }\r\n\r\n    function destroy(animation) {\r\n        return animationManager.destroy(animation);\r\n    }\r\n\r\n    function setQuality(value) {\r\n        if (typeof value === 'string') {\r\n            switch (value) {\r\n                case 'high':\r\n                    defaultCurveSegments = 200;\r\n                    break;\r\n                case 'medium':\r\n                    defaultCurveSegments = 50;\r\n                    break;\r\n                case 'low':\r\n                    defaultCurveSegments = 10;\r\n                    break;\r\n            }\r\n        } else if (!isNaN(value) && value > 1) {\r\n            defaultCurveSegments = value;\r\n        }\r\n        if (defaultCurveSegments >= 50) {\r\n            roundValues(false);\r\n        } else {\r\n            roundValues(true);\r\n        }\r\n    }\r\n\r\n    function inBrowser() {\r\n        return typeof navigator !== 'undefined';\r\n    }\r\n\r\n    function installPlugin(type, plugin) {\r\n        if (type === 'expressions') {\r\n            expressionsPlugin = plugin;\r\n        }\r\n    }\r\n\r\n    function getFactory(name) {\r\n        switch (name) {\r\n            case \"propertyFactory\":\r\n                return PropertyFactory;\r\n            case \"shapePropertyFactory\":\r\n                return ShapePropertyFactory;\r\n            case \"matrix\":\r\n                return Matrix;\r\n        }\r\n    }\r\n    bodymovinjs.play = play;\r\n    bodymovinjs.pause = pause;\r\n    bodymovinjs.setLocationHref = setLocationHref;\r\n    bodymovinjs.togglePause = togglePause;\r\n    bodymovinjs.setSpeed = setSpeed;\r\n    bodymovinjs.setDirection = setDirection;\r\n    bodymovinjs.stop = stop;\r\n    bodymovinjs.moveFrame = moveFrame;\r\n    bodymovinjs.searchAnimations = searchAnimations;\r\n    bodymovinjs.registerAnimation = registerAnimation;\r\n    bodymovinjs.loadAnimation = loadAnimation;\r\n    bodymovinjs.setSubframeRendering = setSubframeRendering;\r\n    bodymovinjs.resize = resize;\r\n    bodymovinjs.start = start;\r\n    bodymovinjs.goToAndStop = goToAndStop;\r\n    bodymovinjs.destroy = destroy;\r\n    bodymovinjs.setQuality = setQuality;\r\n    bodymovinjs.inBrowser = inBrowser;\r\n    bodymovinjs.installPlugin = installPlugin;\r\n    bodymovinjs.__getFactory = getFactory;\r\n    bodymovinjs.version = '4.13.0';\r\n\r\n    function checkReady() {\r\n        if (document.readyState === \"complete\") {\r\n            clearInterval(readyStateCheckInterval);\r\n            searchAnimations();\r\n        }\r\n    }\r\n\r\n    function getQueryVariable(variable) {\r\n        var vars = queryString.split('&');\r\n        for (var i = 0; i < vars.length; i++) {\r\n            var pair = vars[i].split('=');\r\n            if (decodeURIComponent(pair[0]) == variable) {\r\n                return decodeURIComponent(pair[1]);\r\n            }\r\n        }\r\n    }\r\n    var standalone = '__[STANDALONE]__';\r\n    var animationData = '__[ANIMATIONDATA]__';\r\n    var renderer = '';\r\n    if (standalone) {\r\n        var scripts = document.getElementsByTagName('script');\r\n        var index = scripts.length - 1;\r\n        var myScript = scripts[index] || {\r\n            src: ''\r\n        };\r\n        var queryString = myScript.src.replace(/^[^\\?]+\\??/, '');\r\n        renderer = getQueryVariable('renderer');\r\n    }\r\n    var readyStateCheckInterval = setInterval(checkReady, 100);\r\n    return bodymovinjs;\r\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/bodymovin/build/player/bodymovin_light.js\n// module id = 3\n// module chunks = 0","/* globals __VUE_SSR_CONTEXT__ */\n\n// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/component-normalizer.js\n// module id = 4\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    ref: \"lavContainer\",\n    style: (_vm.style)\n  })\n},staticRenderFns: []}\nmodule.exports.render._withStripped = true\nif (module.hot) {\n  module.hot.accept()\n  if (module.hot.data) {\n     require(\"vue-hot-reload-api\").rerender(\"data-v-91474f0e\", module.exports)\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-91474f0e\",\"hasScoped\":false,\"transformToRequire\":{\"video\":\"src\",\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"}}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/vue-lottie.vue\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}